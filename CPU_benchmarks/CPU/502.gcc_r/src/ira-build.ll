; ModuleID = 'ira-build.bc'
source_filename = "ira-build.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.ira_allocno = type { i32, i32, i32, i32, %struct.rtx_def*, %struct.ira_allocno*, %struct.ira_loop_tree_node*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ira_allocno_copy*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno_live_range*, i32, i32, i8*, i32, i32, i64, i64, i32, i32, i32, i16, %struct.ira_allocno*, i32*, i32*, i32*, i32*, i32, i32, %struct.ira_allocno*, %struct.ira_allocno*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.ira_loop_tree_node = type { %struct.basic_block_def*, %struct.loop*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, i32, i8, %struct.ira_allocno**, i8, [27 x i32], %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ira_allocno_copy = type { i32, %struct.ira_allocno*, %struct.ira_allocno*, i32, i8, %struct.rtx_def*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_loop_tree_node* }
%struct.ira_allocno_live_range = type { %struct.ira_allocno*, i32, i32, %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range* }
%struct.VEC_ira_allocno_t_heap = type { %struct.VEC_ira_allocno_t_base }
%struct.VEC_ira_allocno_t_base = type { i32, i32, [1 x %struct.ira_allocno*] }
%struct.VEC_ira_copy_t_heap = type { %struct.VEC_ira_copy_t_base }
%struct.VEC_ira_copy_t_base = type { i32, i32, [1 x %struct.ira_allocno_copy*] }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.VEC_ira_loop_tree_node_t_heap = type { %struct.VEC_ira_loop_tree_node_t_base }
%struct.VEC_ira_loop_tree_node_t_base = type { i32, i32, [1 x %struct.ira_loop_tree_node*] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.ira_copy_iterator = type { i32 }
%struct.ira_allocno_iterator = type { i32 }
%struct.sparseset_def = type { i32*, i32*, i32, i32, i32, i8, i8, [2 x i32] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@allocno_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !0
@ira_regno_allocno_map = common dso_local local_unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !1871
@ira_allocnos_num = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1875
@ira_no_alloc_regs = external dso_local local_unnamed_addr global i64, align 8
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@allocno_vec = internal global %struct.VEC_ira_allocno_t_heap* null, align 8, !dbg !1907
@ira_allocnos = common dso_local local_unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !1873
@ira_conflict_id_allocno_map_vec = internal global %struct.VEC_ira_allocno_t_heap* null, align 8, !dbg !1909
@ira_conflict_id_allocno_map = common dso_local local_unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !1877
@reg_class_contents = external dso_local local_unnamed_addr global [27 x i64], align 16
@ira_dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [9 x i8] c" a%d(r%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c",b%d\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c",l%d\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c")\00", align 1
@allocno_live_range_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1884
@copy_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1911
@ira_copies_num = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1882
@copy_vec = internal global %struct.VEC_ira_copy_t_heap* null, align 8, !dbg !1913
@ira_copies = common dso_local local_unnamed_addr global %struct.ira_allocno_copy** null, align 8, !dbg !1879
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@cost_vector_pool = internal unnamed_addr global [27 x %struct.alloc_pool_def*] zeroinitializer, align 16, !dbg !1915
@ira_curr_loop_tree_node = common dso_local local_unnamed_addr global %struct.ira_loop_tree_node* null, align 8, !dbg !1918
@ira_curr_regno_allocno_map = common dso_local local_unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !1920
@regno_top_level_allocno_map = internal unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !1922
@internal_flag_ira_verbose = external dso_local local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [42 x i8] c"      Moving ranges of a%dr%d to a%dr%d: \00", align 1
@ira_class_hard_regs_num = external dso_local local_unnamed_addr global [27 x i32], align 16
@ira_max_point = external dso_local local_unnamed_addr global i32, align 4
@ira_start_point_ranges = external dso_local local_unnamed_addr global %struct.ira_allocno_live_range**, align 8
@ira_reg_classes_intersect_p = external dso_local local_unnamed_addr global [27 x [27 x i8]], align 16
@ira_finish_point_ranges = external dso_local local_unnamed_addr global %struct.ira_allocno_live_range**, align 8
@.str.6 = private unnamed_addr constant [35 x i8] c"      Remove cp%d:%c%dr%d-%c%dr%d\0A\00", align 1
@ira_loop_tree_root = common dso_local local_unnamed_addr global %struct.ira_loop_tree_node* null, align 8, !dbg !1863
@.str.7 = private unnamed_addr constant [33 x i8] c"      Remove cp%d:a%dr%d-a%dr%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"      Remove a%dr%d\0A\00", align 1
@ira_conflicts_p = external dso_local local_unnamed_addr global i8, align 1
@call_used_reg_set = external dso_local local_unnamed_addr global i64, align 8
@.str.9 = private unnamed_addr constant [36 x i8] c"  regions=%d, blocks=%d, points=%d\0A\00", align 1
@ira_loops = external dso_local local_unnamed_addr global %struct.loops, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.10 = private unnamed_addr constant [53 x i8] c"    allocnos=%d, copies=%d, conflicts=%d, ranges=%d\0A\00", align 1
@ira_loop_tree_height = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1865
@ira_bb_nodes = common dso_local local_unnamed_addr global %struct.ira_loop_tree_node* null, align 8, !dbg !1867
@ira_loop_nodes = common dso_local local_unnamed_addr global %struct.ira_loop_tree_node* null, align 8, !dbg !1869
@.str.11 = private unnamed_addr constant [12 x i8] c"ira-build.c\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"  cp%d:a%d(r%d)<->a%d(r%d)@%d:%s\0A\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"constraint\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"shuffle\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c" a%d(r%d):\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c" cp%d:a%d(r%d)@%d\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"      Coping ranges of a%dr%d to a%dr%d: \00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"./sparseset.h\00", align 1
@allocno_conflict_check = internal unnamed_addr global i32* null, align 8, !dbg !1924
@curr_allocno_conflict_check_tick = internal unnamed_addr global i32 0, align 4, !dbg !1926
@ira_reg_class_cover_size = external dso_local local_unnamed_addr global i32, align 4
@ira_reg_class_cover = external dso_local local_unnamed_addr global [27 x i32], align 16
@.str.22 = private unnamed_addr constant [13 x i8] c"cost vectors\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"allocno live ranges\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"allocnos\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"copies\00", align 1
@last_basic_block_before_change = internal unnamed_addr global i32 0, align 4, !dbg !1928
@.str.26 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@optimize = external dso_local local_unnamed_addr global i32, align 4
@curr_bb = internal unnamed_addr global %struct.basic_block_def* null, align 8, !dbg !1930
@optimize_size = external dso_local local_unnamed_addr global i32, align 4
@flag_branch_probabilities = external dso_local local_unnamed_addr global i32, align 4
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@children_vec = internal global %struct.VEC_ira_loop_tree_node_t_heap* null, align 8, !dbg !1932
@removed_loop_vec = internal global %struct.VEC_ira_loop_tree_node_t_heap* null, align 8, !dbg !1934
@.str.27 = private unnamed_addr constant [59 x i8] c"  Mark loop %d (header %d, freq %d, depth %d) for removal\0A\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.28 = private unnamed_addr constant [64 x i8] c"  Mark loop %d (header %d, freq %d, depth %d) for removal (%s)\0A\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"low pressure\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"cheap loop\00", align 1
@ira_available_class_regs = external dso_local local_unnamed_addr global [27 x i32], align 16
@regno_allocnos = internal unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !1936
@.str.31 = private unnamed_addr constant [39 x i8] c" Rebuilding regno allocno list for %d\0A\00", align 1
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@flag_ira_region = external dso_local local_unnamed_addr global i32, align 4
@.str.32 = private unnamed_addr constant [18 x i8] c"    Creating cap \00", align 1
@flag_ira_algorithm = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1942 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1955, metadata !DIExpression()), !dbg !1957
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1956, metadata !DIExpression()), !dbg !1957
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1958
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1959
  ret i32 %call, !dbg !1960
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1961 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1965
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1966
  ret i32 %call, !dbg !1967
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1968 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2023, metadata !DIExpression()), !dbg !2024
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2025
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2025
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2025
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2025
  %cmp = icmp uge i8* %0, %1, !dbg !2025
  %conv1 = zext i1 %cmp to i64, !dbg !2025
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2025
  %tobool = icmp eq i64 %expval, 0, !dbg !2025
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2025

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2025
  br label %cond.end, !dbg !2025

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2025
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2025
  %2 = load i8, i8* %0, align 1, !dbg !2025
  %conv3 = zext i8 %2 to i32, !dbg !2025
  br label %cond.end, !dbg !2025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2025
  ret i32 %cond, !dbg !2026
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2027 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2029, metadata !DIExpression()), !dbg !2030
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2031
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2031
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2031
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2031
  %cmp = icmp uge i8* %0, %1, !dbg !2031
  %conv1 = zext i1 %cmp to i64, !dbg !2031
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2031
  %tobool = icmp eq i64 %expval, 0, !dbg !2031
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2031

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2031
  br label %cond.end, !dbg !2031

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2031
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2031
  %2 = load i8, i8* %0, align 1, !dbg !2031
  %conv3 = zext i8 %2 to i32, !dbg !2031
  br label %cond.end, !dbg !2031

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2031
  ret i32 %cond, !dbg !2032
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2033 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2034
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2034
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2034
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2034
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2034
  %cmp = icmp uge i8* %1, %2, !dbg !2034
  %conv1 = zext i1 %cmp to i64, !dbg !2034
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2034
  %tobool = icmp eq i64 %expval, 0, !dbg !2034
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2034

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2034
  br label %cond.end, !dbg !2034

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2034
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2034
  %3 = load i8, i8* %1, align 1, !dbg !2034
  %conv3 = zext i8 %3 to i32, !dbg !2034
  br label %cond.end, !dbg !2034

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2034
  ret i32 %cond, !dbg !2035
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2036 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2040, metadata !DIExpression()), !dbg !2041
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2042
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2043
  ret i32 %call, !dbg !2044
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2045 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2049, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2050, metadata !DIExpression()), !dbg !2051
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2052
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2052
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2052
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2052
  %cmp = icmp uge i8* %0, %1, !dbg !2052
  %conv1 = zext i1 %cmp to i64, !dbg !2052
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2052
  %tobool = icmp eq i64 %expval, 0, !dbg !2052
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2052

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2052
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2052
  br label %cond.end, !dbg !2052

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2052
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2052
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2052
  store i8 %conv2, i8* %0, align 1, !dbg !2052
  %conv6 = and i32 %__c, 255, !dbg !2052
  br label %cond.end, !dbg !2052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2052
  ret i32 %cond, !dbg !2053
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2054 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2056, metadata !DIExpression()), !dbg !2058
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2057, metadata !DIExpression()), !dbg !2058
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2059
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2059
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2059
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2059
  %cmp = icmp uge i8* %0, %1, !dbg !2059
  %conv1 = zext i1 %cmp to i64, !dbg !2059
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2059
  %tobool = icmp eq i64 %expval, 0, !dbg !2059
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2059

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2059
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2059
  br label %cond.end, !dbg !2059

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2059
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2059
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2059
  store i8 %conv2, i8* %0, align 1, !dbg !2059
  %conv6 = and i32 %__c, 255, !dbg !2059
  br label %cond.end, !dbg !2059

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2059
  ret i32 %cond, !dbg !2060
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2061 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2063, metadata !DIExpression()), !dbg !2064
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2065
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2065
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2065
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2065
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2065
  %cmp = icmp uge i8* %1, %2, !dbg !2065
  %conv1 = zext i1 %cmp to i64, !dbg !2065
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2065
  %tobool = icmp eq i64 %expval, 0, !dbg !2065
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2065

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2065
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2065
  br label %cond.end, !dbg !2065

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2065
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2065
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2065
  store i8 %conv4, i8* %1, align 1, !dbg !2065
  %conv6 = and i32 %__c, 255, !dbg !2065
  br label %cond.end, !dbg !2065

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2065
  ret i32 %cond, !dbg !2066
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2067 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2073, metadata !DIExpression()), !dbg !2076
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2074, metadata !DIExpression()), !dbg !2076
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2075, metadata !DIExpression()), !dbg !2076
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2077
  ret i64 %call, !dbg !2078
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2079 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2081, metadata !DIExpression()), !dbg !2082
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2083
  %0 = load i32, i32* %_flags, align 8, !dbg !2083
  %and = lshr i32 %0, 4, !dbg !2083
  %and.lobit = and i32 %and, 1, !dbg !2083
  ret i32 %and.lobit, !dbg !2084
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2085 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2087, metadata !DIExpression()), !dbg !2088
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2089
  %0 = load i32, i32* %_flags, align 8, !dbg !2089
  %and = lshr i32 %0, 5, !dbg !2089
  %and.lobit = and i32 %and, 1, !dbg !2089
  ret i32 %and.lobit, !dbg !2090
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2091 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2094, metadata !DIExpression()), !dbg !2095
  %__c.off = add i32 %__c, 128, !dbg !2096
  %0 = icmp ult i32 %__c.off, 384, !dbg !2096
  br i1 %0, label %cond.true, label %cond.end, !dbg !2096

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2097
  %1 = load i32*, i32** %call, align 8, !dbg !2098
  %idxprom = sext i32 %__c to i64, !dbg !2099
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2099
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2099
  br label %cond.end, !dbg !2100

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2100
  ret i32 %cond, !dbg !2101
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2102 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2104, metadata !DIExpression()), !dbg !2105
  %__c.off = add i32 %__c, 128, !dbg !2106
  %0 = icmp ult i32 %__c.off, 384, !dbg !2106
  br i1 %0, label %cond.true, label %cond.end, !dbg !2106

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2107
  %1 = load i32*, i32** %call, align 8, !dbg !2108
  %idxprom = sext i32 %__c to i64, !dbg !2109
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2109
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2109
  br label %cond.end, !dbg !2110

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2110
  ret i32 %cond, !dbg !2111
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2112 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2117, metadata !DIExpression()), !dbg !2118
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2119
  %conv = trunc i64 %call to i32, !dbg !2120
  ret i32 %conv, !dbg !2121
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2122 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2126, metadata !DIExpression()), !dbg !2127
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2128
  ret i64 %call, !dbg !2129
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2130 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2135, metadata !DIExpression()), !dbg !2136
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2137
  ret i64 %call, !dbg !2138
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2139 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2145, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2146, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2147, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2148, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2149, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i64 0, metadata !2150, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2151, metadata !DIExpression()), !dbg !2155
  br label %while.cond, !dbg !2156

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2157
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2155
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2151, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2150, metadata !DIExpression()), !dbg !2155
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2158
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2156

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2159
  %div = lshr i64 %add, 1, !dbg !2161
  call void @llvm.dbg.value(metadata i64 %div, metadata !2152, metadata !DIExpression()), !dbg !2155
  %mul = mul i64 %div, %__size, !dbg !2162
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2163
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2153, metadata !DIExpression()), !dbg !2155
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2164
  call void @llvm.dbg.value(metadata i32 %call, metadata !2154, metadata !DIExpression()), !dbg !2155
  %cmp1 = icmp slt i32 %call, 0, !dbg !2165
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2167

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2168
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2170

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2171
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2150, metadata !DIExpression()), !dbg !2155
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2155
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2155
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2151, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2150, metadata !DIExpression()), !dbg !2155
  br label %while.cond, !dbg !2156, !llvm.loop !2172

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2155
  ret i8* %retval.0, !dbg !2174
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2175 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2181, metadata !DIExpression()), !dbg !2182
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2183
  ret double %call, !dbg !2184
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2185 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2194, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2195, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.value(metadata i32 %base, metadata !2196, metadata !DIExpression()), !dbg !2197
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2198
  ret i64 %call, !dbg !2199
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2200 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2206, metadata !DIExpression()), !dbg !2209
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2207, metadata !DIExpression()), !dbg !2209
  call void @llvm.dbg.value(metadata i32 %base, metadata !2208, metadata !DIExpression()), !dbg !2209
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2210
  ret i64 %call, !dbg !2211
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2212 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2223, metadata !DIExpression()), !dbg !2226
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2224, metadata !DIExpression()), !dbg !2226
  call void @llvm.dbg.value(metadata i32 %base, metadata !2225, metadata !DIExpression()), !dbg !2226
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2227
  ret i64 %call, !dbg !2228
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2229 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2233, metadata !DIExpression()), !dbg !2236
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2234, metadata !DIExpression()), !dbg !2236
  call void @llvm.dbg.value(metadata i32 %base, metadata !2235, metadata !DIExpression()), !dbg !2236
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2237
  ret i64 %call, !dbg !2238
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2239 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2279, metadata !DIExpression()), !dbg !2281
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2280, metadata !DIExpression()), !dbg !2281
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2282
  ret i32 %call, !dbg !2283
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2284 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2286, metadata !DIExpression()), !dbg !2288
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2287, metadata !DIExpression()), !dbg !2288
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2289
  ret i32 %call, !dbg !2290
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2291 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2295, metadata !DIExpression()), !dbg !2297
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2296, metadata !DIExpression()), !dbg !2297
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2298
  ret i32 %call, !dbg !2299
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2300 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2304, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2305, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2306, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2307, metadata !DIExpression()), !dbg !2308
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2309
  ret i32 %call, !dbg !2310
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2311 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2315, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2316, metadata !DIExpression()), !dbg !2318
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2317, metadata !DIExpression()), !dbg !2318
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2317, metadata !DIExpression(DW_OP_deref)), !dbg !2318
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2319
  ret i32 %call, !dbg !2320
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2321 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2325, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2326, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2327, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2328, metadata !DIExpression()), !dbg !2329
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2328, metadata !DIExpression(DW_OP_deref)), !dbg !2329
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2330
  ret i32 %call, !dbg !2331
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2332 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2356, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2357, metadata !DIExpression()), !dbg !2358
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2359
  ret i32 %call, !dbg !2360
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2361 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2363, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2364, metadata !DIExpression()), !dbg !2365
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2366
  ret i32 %call, !dbg !2367
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2368 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2372, metadata !DIExpression()), !dbg !2374
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2373, metadata !DIExpression()), !dbg !2374
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2375
  ret i32 %call, !dbg !2376
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2377 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2381, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2382, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2383, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2384, metadata !DIExpression()), !dbg !2385
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2386
  ret i32 %call, !dbg !2387
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.ira_allocno* @ira_create_allocno(i32 %regno, i8 zeroext %cap_p, %struct.ira_loop_tree_node* %loop_tree_node) local_unnamed_addr #5 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !2392, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8 %cap_p, metadata !2393, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_tree_node, metadata !2394, metadata !DIExpression()), !dbg !2396
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @allocno_pool, align 8, !dbg !2397
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !2398
  %1 = bitcast i8* %call to %struct.ira_allocno*, !dbg !2399
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !2395, metadata !DIExpression()), !dbg !2396
  %regno1 = getelementptr inbounds i8, i8* %call, i64 4, !dbg !2400
  %2 = bitcast i8* %regno1 to i32*, !dbg !2400
  store i32 %regno, i32* %2, align 4, !dbg !2401
  %loop_tree_node2 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !2402
  %3 = bitcast i8* %loop_tree_node2 to %struct.ira_loop_tree_node**, !dbg !2402
  store %struct.ira_loop_tree_node* %loop_tree_node, %struct.ira_loop_tree_node** %3, align 8, !dbg !2403
  %tobool = icmp eq i8 %cap_p, 0, !dbg !2404
  br i1 %tobool, label %if.then, label %if.end11, !dbg !2406

if.then:                                          ; preds = %entry
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !2407
  %idxprom = sext i32 %regno to i64, !dbg !2407
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %idxprom, !dbg !2407
  %5 = bitcast %struct.ira_allocno** %arrayidx to i64*, !dbg !2407
  %6 = load i64, i64* %5, align 8, !dbg !2407
  %next_regno_allocno = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2409
  %7 = bitcast i8* %next_regno_allocno to i64*, !dbg !2410
  store i64 %6, i64* %7, align 8, !dbg !2410
  %8 = bitcast %struct.ira_allocno** %arrayidx to i8**, !dbg !2411
  store i8* %call, i8** %8, align 8, !dbg !2411
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 9, !dbg !2412
  %9 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !2412
  %arrayidx6 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %9, i64 %idxprom, !dbg !2414
  %10 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx6, align 8, !dbg !2414
  %cmp = icmp eq %struct.ira_allocno* %10, null, !dbg !2415
  br i1 %cmp, label %if.then7, label %if.end11, !dbg !2416

if.then7:                                         ; preds = %if.then
  %11 = bitcast %struct.ira_allocno** %arrayidx6 to i8**, !dbg !2417
  store i8* %call, i8** %11, align 8, !dbg !2417
  br label %if.end11, !dbg !2418

if.end11:                                         ; preds = %entry, %if.then, %if.then7
  %cap = getelementptr inbounds i8, i8* %call, i64 80, !dbg !2419
  %12 = bitcast i8* %cap to %struct.ira_allocno**, !dbg !2419
  store %struct.ira_allocno* null, %struct.ira_allocno** %12, align 8, !dbg !2420
  %cap_member = getelementptr inbounds i8, i8* %call, i64 88, !dbg !2421
  %13 = bitcast i8* %cap_member to %struct.ira_allocno**, !dbg !2421
  store %struct.ira_allocno* null, %struct.ira_allocno** %13, align 8, !dbg !2422
  %14 = load i32, i32* @ira_allocnos_num, align 4, !dbg !2423
  %num = bitcast i8* %call to i32*, !dbg !2424
  store i32 %14, i32* %num, align 8, !dbg !2425
  %all_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 12, !dbg !2426
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !2426
  %call13 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %15, i32 %14) #6, !dbg !2427
  %conflict_allocno_array = getelementptr inbounds i8, i8* %call, i64 128, !dbg !2428
  %16 = bitcast i8* %conflict_allocno_array to i8**, !dbg !2428
  store i8* null, i8** %16, align 8, !dbg !2429
  %conflict_allocnos_num = getelementptr inbounds i8, i8* %call, i64 160, !dbg !2430
  %17 = bitcast i8* %conflict_allocnos_num to i32*, !dbg !2430
  store i32 0, i32* %17, align 8, !dbg !2431
  %18 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !2432
  %conflict_hard_regs = getelementptr inbounds i8, i8* %call, i64 144, !dbg !2432
  %19 = bitcast i8* %conflict_hard_regs to i64*, !dbg !2432
  store i64 %18, i64* %19, align 8, !dbg !2432
  %total_conflict_hard_regs = getelementptr inbounds i8, i8* %call, i64 152, !dbg !2433
  %20 = bitcast i8* %total_conflict_hard_regs to i64*, !dbg !2433
  store i64 %18, i64* %20, align 8, !dbg !2433
  %nrefs = getelementptr inbounds i8, i8* %call, i64 40, !dbg !2434
  %21 = bitcast i8* %nrefs to i32*, !dbg !2434
  store i32 0, i32* %21, align 8, !dbg !2435
  %freq = getelementptr inbounds i8, i8* %call, i64 44, !dbg !2436
  %22 = bitcast i8* %freq to i32*, !dbg !2436
  store i32 0, i32* %22, align 4, !dbg !2437
  %hard_regno = getelementptr inbounds i8, i8* %call, i64 12, !dbg !2438
  %23 = bitcast i8* %hard_regno to i32*, !dbg !2438
  store i32 -1, i32* %23, align 4, !dbg !2439
  %call_freq = getelementptr inbounds i8, i8* %call, i64 164, !dbg !2440
  %24 = bitcast i8* %call_freq to i32*, !dbg !2440
  store i32 0, i32* %24, align 4, !dbg !2441
  %calls_crossed_num = getelementptr inbounds i8, i8* %call, i64 168, !dbg !2442
  %25 = bitcast i8* %calls_crossed_num to i32*, !dbg !2442
  store i32 0, i32* %25, align 8, !dbg !2443
  %no_stack_reg_p = getelementptr inbounds i8, i8* %call, i64 172, !dbg !2444
  %26 = bitcast i8* %no_stack_reg_p to i16*, !dbg !2444
  %bf.load = load i16, i16* %26, align 4, !dbg !2445
  %mem_optimized_dest = getelementptr inbounds i8, i8* %call, i64 176, !dbg !2446
  %27 = bitcast i8* %mem_optimized_dest to %struct.ira_allocno**, !dbg !2446
  store %struct.ira_allocno* null, %struct.ira_allocno** %27, align 8, !dbg !2447
  %bf.clear35 = and i16 %bf.load, -4096, !dbg !2448
  store i16 %bf.clear35, i16* %26, align 4, !dbg !2448
  %cmp36 = icmp slt i32 %regno, 0, !dbg !2449
  br i1 %cmp36, label %cond.end, label %cond.false, !dbg !2450

cond.false:                                       ; preds = %if.end11
  %28 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !2451
  %idxprom37 = sext i32 %regno to i64, !dbg !2451
  %arrayidx38 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %28, i64 %idxprom37, !dbg !2451
  %29 = bitcast %struct.rtx_def** %arrayidx38 to i32**, !dbg !2451
  %30 = load i32*, i32** %29, align 8, !dbg !2451
  %bf.load39 = load i32, i32* %30, align 8, !dbg !2451
  %bf.lshr = lshr i32 %bf.load39, 16, !dbg !2451
  %bf.clear40 = and i32 %bf.lshr, 255, !dbg !2451
  br label %cond.end, !dbg !2450

cond.end:                                         ; preds = %if.end11, %cond.false
  %cond = phi i32 [ %bf.clear40, %cond.false ], [ 0, %if.end11 ], !dbg !2450
  %mode = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2452
  %31 = bitcast i8* %mode to i32*, !dbg !2452
  store i32 %cond, i32* %31, align 8, !dbg !2453
  %allocno_copies = getelementptr inbounds i8, i8* %call, i64 72, !dbg !2454
  %32 = bitcast i8* %allocno_copies to %struct.ira_allocno_copy**, !dbg !2454
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %32, align 8, !dbg !2455
  %hard_reg_costs = getelementptr inbounds i8, i8* %call, i64 184, !dbg !2456
  %33 = bitcast i8* %hard_reg_costs to i32**, !dbg !2456
  store i32* null, i32** %33, align 8, !dbg !2457
  %conflict_hard_reg_costs = getelementptr inbounds i8, i8* %call, i64 200, !dbg !2458
  %34 = bitcast i8* %conflict_hard_reg_costs to i32**, !dbg !2458
  store i32* null, i32** %34, align 8, !dbg !2459
  %updated_hard_reg_costs = getelementptr inbounds i8, i8* %call, i64 192, !dbg !2460
  %35 = bitcast i8* %updated_hard_reg_costs to i32**, !dbg !2460
  store i32* null, i32** %35, align 8, !dbg !2461
  %updated_conflict_hard_reg_costs = getelementptr inbounds i8, i8* %call, i64 208, !dbg !2462
  %36 = bitcast i8* %updated_conflict_hard_reg_costs to i32**, !dbg !2462
  store i32* null, i32** %36, align 8, !dbg !2463
  %left_conflicts_size = getelementptr inbounds i8, i8* %call, i64 216, !dbg !2464
  %37 = bitcast i8* %left_conflicts_size to i32*, !dbg !2464
  store i32 -1, i32* %37, align 8, !dbg !2465
  %cover_class = getelementptr inbounds i8, i8* %call, i64 48, !dbg !2466
  %38 = bitcast i8* %cover_class to i32*, !dbg !2466
  store i32 0, i32* %38, align 8, !dbg !2467
  %updated_cover_class_cost = getelementptr inbounds i8, i8* %call, i64 56, !dbg !2468
  %39 = bitcast i8* %updated_cover_class_cost to i32*, !dbg !2468
  store i32 0, i32* %39, align 8, !dbg !2469
  %cover_class_cost = getelementptr inbounds i8, i8* %call, i64 52, !dbg !2470
  %40 = bitcast i8* %cover_class_cost to i32*, !dbg !2470
  store i32 0, i32* %40, align 4, !dbg !2471
  %memory_cost = getelementptr inbounds i8, i8* %call, i64 60, !dbg !2472
  %41 = bitcast i8* %memory_cost to i32*, !dbg !2472
  store i32 0, i32* %41, align 4, !dbg !2473
  %updated_memory_cost = getelementptr inbounds i8, i8* %call, i64 64, !dbg !2474
  %42 = bitcast i8* %updated_memory_cost to i32*, !dbg !2474
  store i32 0, i32* %42, align 8, !dbg !2475
  %excess_pressure_points_num = getelementptr inbounds i8, i8* %call, i64 68, !dbg !2476
  %43 = bitcast i8* %excess_pressure_points_num to i32*, !dbg !2476
  store i32 0, i32* %43, align 4, !dbg !2477
  %next_bucket_allocno = getelementptr inbounds i8, i8* %call, i64 224, !dbg !2478
  %44 = bitcast i8* %next_bucket_allocno to %struct.ira_allocno**, !dbg !2478
  store %struct.ira_allocno* null, %struct.ira_allocno** %44, align 8, !dbg !2479
  %prev_bucket_allocno = getelementptr inbounds i8, i8* %call, i64 232, !dbg !2480
  %45 = bitcast i8* %prev_bucket_allocno to %struct.ira_allocno**, !dbg !2480
  store %struct.ira_allocno* null, %struct.ira_allocno** %45, align 8, !dbg !2481
  %first_coalesced_allocno = getelementptr inbounds i8, i8* %call, i64 96, !dbg !2482
  %46 = bitcast i8* %first_coalesced_allocno to i8**, !dbg !2483
  store i8* %call, i8** %46, align 8, !dbg !2483
  %next_coalesced_allocno = getelementptr inbounds i8, i8* %call, i64 104, !dbg !2484
  %47 = bitcast i8* %next_coalesced_allocno to i8**, !dbg !2485
  store i8* %call, i8** %47, align 8, !dbg !2485
  %live_ranges = getelementptr inbounds i8, i8* %call, i64 112, !dbg !2486
  %48 = bitcast i8* %live_ranges to %struct.ira_allocno_live_range**, !dbg !2486
  store %struct.ira_allocno_live_range* null, %struct.ira_allocno_live_range** %48, align 8, !dbg !2487
  %min = getelementptr inbounds i8, i8* %call, i64 120, !dbg !2488
  %49 = bitcast i8* %min to i32*, !dbg !2488
  store i32 2147483647, i32* %49, align 8, !dbg !2489
  %max = getelementptr inbounds i8, i8* %call, i64 124, !dbg !2490
  %50 = bitcast i8* %max to i32*, !dbg !2490
  store i32 -1, i32* %50, align 4, !dbg !2491
  %51 = load i32, i32* @ira_allocnos_num, align 4, !dbg !2492
  %conflict_id = getelementptr inbounds i8, i8* %call, i64 136, !dbg !2493
  %52 = bitcast i8* %conflict_id to i32*, !dbg !2493
  store i32 %51, i32* %52, align 8, !dbg !2494
  %call41 = tail call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_heap_safe_push(%struct.VEC_ira_allocno_t_heap** nonnull @allocno_vec, %struct.ira_allocno* %1) #7, !dbg !2495
  %53 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @allocno_vec, align 8, !dbg !2496
  %base = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %53, i64 0, i32 0, !dbg !2496
  %call47 = tail call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_base_address(%struct.VEC_ira_allocno_t_base* %base) #7, !dbg !2496
  store %struct.ira_allocno** %call47, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !2497
  %54 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @allocno_vec, align 8, !dbg !2498
  %base50 = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %54, i64 0, i32 0, !dbg !2498
  %call54 = tail call fastcc i32 @VEC_ira_allocno_t_base_length(%struct.VEC_ira_allocno_t_base* %base50) #7, !dbg !2498
  store i32 %call54, i32* @ira_allocnos_num, align 4, !dbg !2499
  %call55 = tail call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_heap_safe_push(%struct.VEC_ira_allocno_t_heap** nonnull @ira_conflict_id_allocno_map_vec, %struct.ira_allocno* %1) #7, !dbg !2500
  %55 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @ira_conflict_id_allocno_map_vec, align 8, !dbg !2501
  %base58 = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %55, i64 0, i32 0, !dbg !2501
  %call62 = tail call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_base_address(%struct.VEC_ira_allocno_t_base* %base58) #7, !dbg !2501
  store %struct.ira_allocno** %call62, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !2502
  ret %struct.ira_allocno* %1, !dbg !2503
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno** @VEC_ira_allocno_t_heap_safe_push(%struct.VEC_ira_allocno_t_heap** %vec_, %struct.ira_allocno* %obj_) unnamed_addr #0 !dbg !2504 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_heap** %vec_, metadata !2509, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %obj_, metadata !2510, metadata !DIExpression()), !dbg !2511
  %call = tail call fastcc i32 @VEC_ira_allocno_t_heap_reserve(%struct.VEC_ira_allocno_t_heap** %vec_, i32 1) #7, !dbg !2512
  %0 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !2512
  %tobool = icmp eq %struct.VEC_ira_allocno_t_heap* %0, null, !dbg !2512
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2512

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %0, i64 0, i32 0, !dbg !2512
  br label %cond.end, !dbg !2512

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_allocno_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2512
  %call1 = tail call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_base_quick_push(%struct.VEC_ira_allocno_t_base* %cond, %struct.ira_allocno* %obj_) #7, !dbg !2512
  ret %struct.ira_allocno** %call1, !dbg !2512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno** @VEC_ira_allocno_t_base_address(%struct.VEC_ira_allocno_t_base* %vec_) unnamed_addr #0 !dbg !2513 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !2518, metadata !DIExpression()), !dbg !2519
  %tobool = icmp eq %struct.VEC_ira_allocno_t_base* %vec_, null, !dbg !2520
  %arraydecay = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !2520
  %cond = select i1 %tobool, %struct.ira_allocno** null, %struct.ira_allocno** %arraydecay, !dbg !2520
  ret %struct.ira_allocno** %cond, !dbg !2520
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_allocno_t_base_length(%struct.VEC_ira_allocno_t_base* %vec_) unnamed_addr #0 !dbg !2521 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !2527, metadata !DIExpression()), !dbg !2528
  %tobool = icmp eq %struct.VEC_ira_allocno_t_base* %vec_, null, !dbg !2529
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2529

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !2529
  %0 = load i32, i32* %num, align 8, !dbg !2529
  br label %cond.end, !dbg !2529

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2529
  ret i32 %cond, !dbg !2529
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_set_allocno_cover_class(%struct.ira_allocno* %a, i32 %cover_class) local_unnamed_addr #5 !dbg !2530 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !2534, metadata !DIExpression()), !dbg !2536
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !2535, metadata !DIExpression()), !dbg !2536
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !2537
  store i32 %cover_class, i32* %cover_class1, align 8, !dbg !2538
  %idxprom = zext i32 %cover_class to i64, !dbg !2539
  %arrayidx = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom, !dbg !2539
  %0 = load i64, i64* %arrayidx, align 8, !dbg !2539
  %neg = xor i64 %0, -1, !dbg !2539
  %conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 26, !dbg !2539
  %1 = load i64, i64* %conflict_hard_regs, align 8, !dbg !2539
  %or = or i64 %1, %neg, !dbg !2539
  store i64 %or, i64* %conflict_hard_regs, align 8, !dbg !2539
  %2 = load i64, i64* %arrayidx, align 8, !dbg !2540
  %neg4 = xor i64 %2, -1, !dbg !2540
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 27, !dbg !2540
  %3 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !2540
  %or5 = or i64 %3, %neg4, !dbg !2540
  store i64 %or5, i64* %total_conflict_hard_regs, align 8, !dbg !2540
  ret void, !dbg !2541
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ira_conflict_vector_profitable_p(%struct.ira_allocno* %a, i32 %num) local_unnamed_addr #5 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !2546, metadata !DIExpression()), !dbg !2549
  call void @llvm.dbg.value(metadata i32 %num, metadata !2547, metadata !DIExpression()), !dbg !2549
  %max = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 22, !dbg !2550
  %0 = load i32, i32* %max, align 4, !dbg !2550
  %min = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 21, !dbg !2552
  %1 = load i32, i32* %min, align 8, !dbg !2552
  %cmp = icmp slt i32 %0, %1, !dbg !2553
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2554

if.end:                                           ; preds = %entry
  %sub = sub nsw i32 %0, %1, !dbg !2555
  %add = add nsw i32 %sub, 64, !dbg !2556
  %div = sdiv i32 %add, 64, !dbg !2557
  call void @llvm.dbg.value(metadata i32 %div, metadata !2548, metadata !DIExpression()), !dbg !2549
  %add3 = add nsw i32 %num, 1, !dbg !2558
  %conv = sext i32 %add3 to i64, !dbg !2559
  %mul = shl nsw i64 %conv, 4, !dbg !2560
  %mul4 = mul nsw i32 %div, 3, !dbg !2561
  %conv5 = sext i32 %mul4 to i64, !dbg !2562
  %mul6 = shl nsw i64 %conv5, 3, !dbg !2563
  %cmp7 = icmp ult i64 %mul, %mul6, !dbg !2564
  %conv9 = zext i1 %cmp7 to i8, !dbg !2565
  br label %cleanup, !dbg !2566

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %conv9, %if.end ], [ 0, %entry ], !dbg !2549
  ret i8 %retval.0, !dbg !2567
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_allocate_allocno_conflict_vec(%struct.ira_allocno* %a, i32 %num) local_unnamed_addr #5 !dbg !2568 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !2572, metadata !DIExpression()), !dbg !2576
  call void @llvm.dbg.value(metadata i32 %num, metadata !2573, metadata !DIExpression()), !dbg !2576
  call void @llvm.dbg.value(metadata i32 %num, metadata !2573, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2576
  %inc = shl i32 %num, 3, !dbg !2577
  %mul = add i32 %inc, 8, !dbg !2577
  call void @llvm.dbg.value(metadata i32 %mul, metadata !2574, metadata !DIExpression()), !dbg !2576
  %conv2 = sext i32 %mul to i64, !dbg !2578
  %call = tail call i8* @ira_allocate(i64 %conv2) #6, !dbg !2579
  %conflict_allocno_array = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 23, !dbg !2580
  store i8* %call, i8** %conflict_allocno_array, align 8, !dbg !2581
  %.cast = bitcast i8* %call to %struct.ira_allocno**, !dbg !2582
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %.cast, metadata !2575, metadata !DIExpression()), !dbg !2576
  store %struct.ira_allocno* null, %struct.ira_allocno** %.cast, align 8, !dbg !2583
  %conflict_allocnos_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 28, !dbg !2584
  store i32 0, i32* %conflict_allocnos_num, align 8, !dbg !2585
  %conflict_allocno_array_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 25, !dbg !2586
  store i32 %mul, i32* %conflict_allocno_array_size, align 4, !dbg !2587
  %conflict_vec_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !2588
  %bf.load = load i16, i16* %conflict_vec_p, align 4, !dbg !2589
  %bf.set = or i16 %bf.load, 2048, !dbg !2589
  store i16 %bf.set, i16* %conflict_vec_p, align 4, !dbg !2589
  ret void, !dbg !2590
}

declare dso_local i8* @ira_allocate(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_allocate_allocno_conflicts(%struct.ira_allocno* %a, i32 %num) local_unnamed_addr #5 !dbg !2591 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !2593, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.value(metadata i32 %num, metadata !2594, metadata !DIExpression()), !dbg !2595
  %call = tail call zeroext i8 @ira_conflict_vector_profitable_p(%struct.ira_allocno* %a, i32 %num) #7, !dbg !2596
  %tobool = icmp eq i8 %call, 0, !dbg !2596
  br i1 %tobool, label %if.else, label %if.then, !dbg !2598

if.then:                                          ; preds = %entry
  tail call void @ira_allocate_allocno_conflict_vec(%struct.ira_allocno* %a, i32 %num) #7, !dbg !2599
  br label %if.end, !dbg !2599

if.else:                                          ; preds = %entry
  tail call fastcc void @allocate_allocno_conflict_bit_vec(%struct.ira_allocno* %a) #7, !dbg !2600
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2601
}

; Function Attrs: nounwind uwtable
define internal fastcc void @allocate_allocno_conflict_bit_vec(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !2602 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !2606, metadata !DIExpression()), !dbg !2608
  %max = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 22, !dbg !2609
  %0 = load i32, i32* %max, align 4, !dbg !2609
  %min = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 21, !dbg !2610
  %1 = load i32, i32* %min, align 8, !dbg !2610
  %sub = sub nsw i32 %0, %1, !dbg !2611
  %add = add nsw i32 %sub, 64, !dbg !2612
  %div = sdiv i32 %add, 64, !dbg !2613
  %mul = shl nsw i32 %div, 3, !dbg !2614
  call void @llvm.dbg.value(metadata i32 %mul, metadata !2607, metadata !DIExpression()), !dbg !2608
  %conv2 = zext i32 %mul to i64, !dbg !2615
  %call = tail call i8* @ira_allocate(i64 %conv2) #6, !dbg !2616
  %conflict_allocno_array = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 23, !dbg !2617
  store i8* %call, i8** %conflict_allocno_array, align 8, !dbg !2618
  %call5 = tail call i8* @memset(i8* %call, i32 0, i64 %conv2) #6, !dbg !2619
  %conflict_allocno_array_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 25, !dbg !2620
  store i32 %mul, i32* %conflict_allocno_array_size, align 4, !dbg !2621
  %conflict_vec_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !2622
  %bf.load = load i16, i16* %conflict_vec_p, align 4, !dbg !2623
  %bf.clear = and i16 %bf.load, -2049, !dbg !2623
  store i16 %bf.clear, i16* %conflict_vec_p, align 4, !dbg !2623
  ret void, !dbg !2624
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_add_allocno_conflict(%struct.ira_allocno* %a1, %struct.ira_allocno* %a2) local_unnamed_addr #5 !dbg !2625 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a1, metadata !2629, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a2, metadata !2630, metadata !DIExpression()), !dbg !2631
  tail call fastcc void @add_to_allocno_conflicts(%struct.ira_allocno* %a1, %struct.ira_allocno* %a2) #7, !dbg !2632
  tail call fastcc void @add_to_allocno_conflicts(%struct.ira_allocno* %a2, %struct.ira_allocno* %a1) #7, !dbg !2633
  ret void, !dbg !2634
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_to_allocno_conflicts(%struct.ira_allocno* %a1, %struct.ira_allocno* %a2) unnamed_addr #5 !dbg !2635 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a1, metadata !2637, metadata !DIExpression()), !dbg !2649
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a2, metadata !2638, metadata !DIExpression()), !dbg !2649
  %conflict_vec_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 31, !dbg !2650
  %bf.load = load i16, i16* %conflict_vec_p, align 4, !dbg !2650
  %bf.clear = and i16 %bf.load, 2048, !dbg !2650
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !2650
  br i1 %tobool, label %if.else22, label %if.then, !dbg !2651

if.then:                                          ; preds = %entry
  %conflict_allocnos_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 28, !dbg !2652
  %0 = load i32, i32* %conflict_allocnos_num, align 8, !dbg !2652
  %add = add nsw i32 %0, 2, !dbg !2653
  call void @llvm.dbg.value(metadata i32 %add, metadata !2639, metadata !DIExpression()), !dbg !2649
  %conflict_allocno_array_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 25, !dbg !2654
  %1 = load i32, i32* %conflict_allocno_array_size, align 4, !dbg !2654
  %conv = zext i32 %1 to i64, !dbg !2654
  %conv1 = sext i32 %add to i64, !dbg !2656
  %mul = shl nsw i64 %conv1, 3, !dbg !2657
  %cmp = icmp ugt i64 %mul, %conv, !dbg !2658
  br i1 %cmp, label %if.else, label %if.then3, !dbg !2659

if.then3:                                         ; preds = %if.then
  %conflict_allocno_array = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 23, !dbg !2660
  %2 = load i8*, i8** %conflict_allocno_array, align 8, !dbg !2660
  call void @llvm.dbg.value(metadata i8* %2, metadata !2641, metadata !DIExpression()), !dbg !2661
  br label %if.end, !dbg !2662

if.else:                                          ; preds = %if.then
  %mul4 = mul nsw i32 %add, 3, !dbg !2663
  %div = sdiv i32 %mul4, 2, !dbg !2665
  %add5 = shl i32 %div, 3, !dbg !2666
  %mul7 = add i32 %add5, 8, !dbg !2666
  call void @llvm.dbg.value(metadata i32 %mul7, metadata !2640, metadata !DIExpression()), !dbg !2649
  %conv9 = zext i32 %mul7 to i64, !dbg !2667
  %call = tail call i8* @ira_allocate(i64 %conv9) #6, !dbg !2668
  call void @llvm.dbg.value(metadata i8* %call, metadata !2641, metadata !DIExpression()), !dbg !2661
  %conflict_allocno_array10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 23, !dbg !2669
  %3 = load i8*, i8** %conflict_allocno_array10, align 8, !dbg !2669
  %4 = load i32, i32* %conflict_allocnos_num, align 8, !dbg !2670
  %conv12 = sext i32 %4 to i64, !dbg !2670
  %mul13 = shl nsw i64 %conv12, 3, !dbg !2671
  %call14 = tail call i8* @memcpy(i8* %call, i8* %3, i64 %mul13) #6, !dbg !2672
  %5 = load i8*, i8** %conflict_allocno_array10, align 8, !dbg !2673
  tail call void @ira_free(i8* %5) #6, !dbg !2674
  store i8* %call, i8** %conflict_allocno_array10, align 8, !dbg !2675
  store i32 %mul7, i32* %conflict_allocno_array_size, align 4, !dbg !2676
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %vec.0.in = phi i8* [ %2, %if.then3 ], [ %call, %if.else ]
  %vec.0 = bitcast i8* %vec.0.in to %struct.ira_allocno**, !dbg !2677
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %vec.0, metadata !2641, metadata !DIExpression()), !dbg !2661
  %idxprom = sext i32 %0 to i64, !dbg !2678
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %vec.0, i64 %idxprom, !dbg !2678
  store %struct.ira_allocno* %a2, %struct.ira_allocno** %arrayidx, align 8, !dbg !2679
  %sub18 = add nsw i32 %0, 1, !dbg !2680
  %idxprom19 = sext i32 %sub18 to i64, !dbg !2681
  %arrayidx20 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %vec.0, i64 %idxprom19, !dbg !2681
  store %struct.ira_allocno* null, %struct.ira_allocno** %arrayidx20, align 8, !dbg !2682
  %6 = load i32, i32* %conflict_allocnos_num, align 8, !dbg !2683
  %inc = add nsw i32 %6, 1, !dbg !2683
  store i32 %inc, i32* %conflict_allocnos_num, align 8, !dbg !2683
  br label %if.end138, !dbg !2684

if.else22:                                        ; preds = %entry
  %conflict_id = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a2, i64 0, i32 24, !dbg !2685
  %7 = load i32, i32* %conflict_id, align 8, !dbg !2685
  call void @llvm.dbg.value(metadata i32 %7, metadata !2647, metadata !DIExpression()), !dbg !2686
  %conflict_allocno_array24 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 23, !dbg !2687
  %8 = bitcast i8** %conflict_allocno_array24 to i64**, !dbg !2687
  %9 = load i64*, i64** %8, align 8, !dbg !2687
  call void @llvm.dbg.value(metadata i64* %9, metadata !2648, metadata !DIExpression()), !dbg !2686
  %min = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 21, !dbg !2688
  %10 = load i32, i32* %min, align 8, !dbg !2688
  %cmp25 = icmp slt i32 %7, %10, !dbg !2690
  br i1 %cmp25, label %if.then27, label %if.else90, !dbg !2691

if.then27:                                        ; preds = %if.else22
  %11 = xor i32 %7, -1, !dbg !2692
  %sub30 = add i32 %10, %11, !dbg !2692
  %div31 = sdiv i32 %sub30, 64, !dbg !2694
  %add32 = add nsw i32 %div31, 1, !dbg !2695
  call void @llvm.dbg.value(metadata i32 %add32, metadata !2646, metadata !DIExpression()), !dbg !2686
  %max = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 22, !dbg !2696
  %12 = load i32, i32* %max, align 4, !dbg !2696
  %sub34 = sub nsw i32 %12, %10, !dbg !2697
  %div35 = sdiv i32 %sub34, 64, !dbg !2698
  %add36 = add nsw i32 %div35, 1, !dbg !2699
  call void @llvm.dbg.value(metadata i32 %add36, metadata !2644, metadata !DIExpression()), !dbg !2686
  %add37 = add nsw i32 %add36, %add32, !dbg !2700
  %mul39 = shl nsw i32 %add37, 3, !dbg !2701
  call void @llvm.dbg.value(metadata i32 %mul39, metadata !2640, metadata !DIExpression()), !dbg !2649
  %conflict_allocno_array_size41 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 25, !dbg !2702
  %13 = load i32, i32* %conflict_allocno_array_size41, align 4, !dbg !2702
  %cmp42 = icmp ult i32 %13, %mul39, !dbg !2704
  br i1 %cmp42, label %if.else53, label %if.then44, !dbg !2705

if.then44:                                        ; preds = %if.then27
  %conv45 = sext i32 %add32 to i64, !dbg !2706
  %add.ptr1 = getelementptr inbounds i64, i64* %9, i64 %conv45, !dbg !2708
  %add.ptr = bitcast i64* %add.ptr1 to i8*, !dbg !2708
  %14 = bitcast i64* %9 to i8*, !dbg !2709
  %conv47 = sext i32 %add36 to i64, !dbg !2710
  %mul48 = shl nsw i64 %conv47, 3, !dbg !2711
  %call49 = tail call i8* @memmove(i8* %add.ptr, i8* %14, i64 %mul48) #6, !dbg !2712
  %mul51 = shl nsw i64 %conv45, 3, !dbg !2713
  %call52 = tail call i8* @memset(i8* %14, i32 0, i64 %mul51) #6, !dbg !2714
  br label %if.end86, !dbg !2715

if.else53:                                        ; preds = %if.then27
  %mul55 = mul nsw i32 %add37, 3, !dbg !2716
  %div56 = sdiv i32 %mul55, 2, !dbg !2718
  %add57 = shl i32 %div56, 3, !dbg !2719
  %mul59 = add i32 %add57, 8, !dbg !2719
  call void @llvm.dbg.value(metadata i32 %mul59, metadata !2640, metadata !DIExpression()), !dbg !2649
  %conv61 = zext i32 %mul59 to i64, !dbg !2720
  %call62 = tail call i8* @ira_allocate(i64 %conv61) #6, !dbg !2721
  %15 = bitcast i8* %call62 to i64*, !dbg !2722
  call void @llvm.dbg.value(metadata i64* %15, metadata !2648, metadata !DIExpression()), !dbg !2686
  %conv63 = sext i32 %add32 to i64, !dbg !2723
  %mul64 = shl nsw i64 %conv63, 3, !dbg !2724
  %add.ptr65 = getelementptr inbounds i8, i8* %call62, i64 %mul64, !dbg !2725
  %16 = load i8*, i8** %conflict_allocno_array24, align 8, !dbg !2726
  %conv67 = sext i32 %add36 to i64, !dbg !2727
  %mul68 = shl nsw i64 %conv67, 3, !dbg !2728
  %call69 = tail call i8* @memcpy(i8* %add.ptr65, i8* %16, i64 %mul68) #6, !dbg !2729
  %call72 = tail call i8* @memset(i8* %call62, i32 0, i64 %mul64) #6, !dbg !2730
  %conv74 = sext i32 %add37 to i64, !dbg !2731
  %mul75 = shl nsw i64 %conv74, 3, !dbg !2732
  %add.ptr76 = getelementptr inbounds i8, i8* %call62, i64 %mul75, !dbg !2733
  %sub81 = sub nsw i64 %conv61, %mul75, !dbg !2734
  %call82 = tail call i8* @memset(i8* %add.ptr76, i32 0, i64 %sub81) #6, !dbg !2735
  %17 = load i8*, i8** %conflict_allocno_array24, align 8, !dbg !2736
  tail call void @ira_free(i8* %17) #6, !dbg !2737
  store i8* %call62, i8** %conflict_allocno_array24, align 8, !dbg !2738
  store i32 %mul59, i32* %conflict_allocno_array_size41, align 4, !dbg !2739
  br label %if.end86

if.end86:                                         ; preds = %if.else53, %if.then44
  %vec23.0 = phi i64* [ %9, %if.then44 ], [ %15, %if.else53 ], !dbg !2686
  call void @llvm.dbg.value(metadata i64* %vec23.0, metadata !2648, metadata !DIExpression()), !dbg !2686
  %mul87 = shl nsw i32 %add32, 6, !dbg !2740
  %18 = load i32, i32* %min, align 8, !dbg !2741
  %sub89 = sub nsw i32 %18, %mul87, !dbg !2741
  store i32 %sub89, i32* %min, align 8, !dbg !2741
  br label %if.end130, !dbg !2742

if.else90:                                        ; preds = %if.else22
  %max91 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 22, !dbg !2743
  %19 = load i32, i32* %max91, align 4, !dbg !2743
  %cmp92 = icmp slt i32 %19, %7, !dbg !2745
  br i1 %cmp92, label %if.then94, label %if.end130, !dbg !2746

if.then94:                                        ; preds = %if.else90
  %sub96 = sub nsw i32 %7, %10, !dbg !2747
  %div97 = sdiv i32 %sub96, 64, !dbg !2749
  %add98 = add nsw i32 %div97, 1, !dbg !2750
  call void @llvm.dbg.value(metadata i32 %add98, metadata !2644, metadata !DIExpression()), !dbg !2686
  %mul100 = shl nsw i32 %add98, 3, !dbg !2751
  call void @llvm.dbg.value(metadata i32 %mul100, metadata !2640, metadata !DIExpression()), !dbg !2649
  %conflict_allocno_array_size102 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 25, !dbg !2752
  %20 = load i32, i32* %conflict_allocno_array_size102, align 4, !dbg !2752
  %cmp103 = icmp ult i32 %20, %mul100, !dbg !2754
  br i1 %cmp103, label %if.then105, label %if.end127, !dbg !2755

if.then105:                                       ; preds = %if.then94
  %mul106 = mul nsw i32 %add98, 3, !dbg !2756
  %div107 = sdiv i32 %mul106, 2, !dbg !2758
  %add108 = shl nsw i32 %div107, 3, !dbg !2759
  %mul110 = add i32 %add108, 8, !dbg !2759
  call void @llvm.dbg.value(metadata i32 %mul110, metadata !2640, metadata !DIExpression()), !dbg !2649
  %conv112 = zext i32 %mul110 to i64, !dbg !2760
  %call113 = tail call i8* @ira_allocate(i64 %conv112) #6, !dbg !2761
  %21 = bitcast i8* %call113 to i64*, !dbg !2762
  call void @llvm.dbg.value(metadata i64* %21, metadata !2648, metadata !DIExpression()), !dbg !2686
  %22 = load i8*, i8** %conflict_allocno_array24, align 8, !dbg !2763
  %23 = load i32, i32* %conflict_allocno_array_size102, align 4, !dbg !2764
  %conv116 = zext i32 %23 to i64, !dbg !2764
  %call117 = tail call i8* @memcpy(i8* %call113, i8* %22, i64 %conv116) #6, !dbg !2765
  %24 = load i32, i32* %conflict_allocno_array_size102, align 4, !dbg !2766
  %idx.ext = zext i32 %24 to i64, !dbg !2767
  %add.ptr119 = getelementptr inbounds i8, i8* %call113, i64 %idx.ext, !dbg !2767
  %sub121 = sub i32 %mul110, %24, !dbg !2768
  %conv122 = zext i32 %sub121 to i64, !dbg !2769
  %call123 = tail call i8* @memset(i8* %add.ptr119, i32 0, i64 %conv122) #6, !dbg !2770
  %25 = load i8*, i8** %conflict_allocno_array24, align 8, !dbg !2771
  tail call void @ira_free(i8* %25) #6, !dbg !2772
  store i8* %call113, i8** %conflict_allocno_array24, align 8, !dbg !2773
  store i32 %mul110, i32* %conflict_allocno_array_size102, align 4, !dbg !2774
  %.pre.pre = load i32, i32* %min, align 8, !dbg !2775
  br label %if.end127, !dbg !2776

if.end127:                                        ; preds = %if.then105, %if.then94
  %.pre = phi i32 [ %.pre.pre, %if.then105 ], [ %10, %if.then94 ], !dbg !2775
  %vec23.1 = phi i64* [ %21, %if.then105 ], [ %9, %if.then94 ], !dbg !2686
  call void @llvm.dbg.value(metadata i64* %vec23.1, metadata !2648, metadata !DIExpression()), !dbg !2686
  store i32 %7, i32* %max91, align 4, !dbg !2777
  br label %if.end130, !dbg !2778

if.end130:                                        ; preds = %if.else90, %if.end127, %if.end86
  %26 = phi i32 [ %sub89, %if.end86 ], [ %.pre, %if.end127 ], [ %10, %if.else90 ], !dbg !2775
  %vec23.3 = phi i64* [ %vec23.0, %if.end86 ], [ %vec23.1, %if.end127 ], [ %9, %if.else90 ], !dbg !2686
  call void @llvm.dbg.value(metadata i64* %vec23.3, metadata !2648, metadata !DIExpression()), !dbg !2686
  %sub132 = sub nsw i32 %7, %26, !dbg !2775
  %rem = and i32 %sub132, 63, !dbg !2775
  %sh_prom = zext i32 %rem to i64, !dbg !2775
  %shl = shl i64 1, %sh_prom, !dbg !2775
  %div135 = lshr i32 %sub132, 6, !dbg !2775
  %idxprom136 = zext i32 %div135 to i64, !dbg !2775
  %arrayidx137 = getelementptr inbounds i64, i64* %vec23.3, i64 %idxprom136, !dbg !2775
  %27 = load i64, i64* %arrayidx137, align 8, !dbg !2775
  %or = or i64 %27, %shl, !dbg !2775
  store i64 %or, i64* %arrayidx137, align 8, !dbg !2775
  br label %if.end138

if.end138:                                        ; preds = %if.end130, %if.end
  ret void, !dbg !2779
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_print_expanded_allocno(%struct.ira_allocno* %a) local_unnamed_addr #5 !dbg !2780 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !2782, metadata !DIExpression()), !dbg !2784
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !2785
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 0, !dbg !2786
  %1 = load i32, i32* %num, align 8, !dbg !2786
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 1, !dbg !2787
  %2 = load i32, i32* %regno, align 4, !dbg !2787
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 %1, i32 %2) #6, !dbg !2788
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 6, !dbg !2789
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !2789
  %bb1 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 0, i32 0, !dbg !2791
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !2791
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !2783, metadata !DIExpression()), !dbg !2784
  %cmp = icmp eq %struct.basic_block_def* %4, null, !dbg !2792
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !2793
  br i1 %cmp, label %if.else, label %if.then, !dbg !2794

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !2795
  %6 = load i32, i32* %index, align 8, !dbg !2795
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 %6) #6, !dbg !2796
  br label %if.end, !dbg !2796

if.else:                                          ; preds = %entry
  %loop = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 0, i32 1, !dbg !2797
  %7 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2797
  %num4 = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 0, !dbg !2798
  %8 = load i32, i32* %num4, align 8, !dbg !2798
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 %8) #6, !dbg !2799
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 17, !dbg !2800
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !2800
  %cmp6 = icmp eq %struct.ira_allocno* %9, null, !dbg !2802
  br i1 %cmp6, label %if.end10, label %if.then7, !dbg !2803

if.then7:                                         ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !2804
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2806
  %11 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !2807
  tail call void @ira_print_expanded_allocno(%struct.ira_allocno* %11) #7, !dbg !2808
  br label %if.end10, !dbg !2809

if.end10:                                         ; preds = %if.end, %if.then7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !2810
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2811
  ret void, !dbg !2812
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.ira_allocno_live_range* @ira_create_allocno_live_range(%struct.ira_allocno* %a, i32 %start, i32 %finish, %struct.ira_allocno_live_range* %next) local_unnamed_addr #5 !dbg !2813 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !2817, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata i32 %start, metadata !2818, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata i32 %finish, metadata !2819, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %next, metadata !2820, metadata !DIExpression()), !dbg !2822
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @allocno_live_range_pool, align 8, !dbg !2823
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !2824
  %1 = bitcast i8* %call to %struct.ira_allocno_live_range*, !dbg !2825
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %1, metadata !2821, metadata !DIExpression()), !dbg !2822
  %allocno = bitcast i8* %call to %struct.ira_allocno**, !dbg !2826
  store %struct.ira_allocno* %a, %struct.ira_allocno** %allocno, align 8, !dbg !2827
  %start1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2828
  %2 = bitcast i8* %start1 to i32*, !dbg !2828
  store i32 %start, i32* %2, align 8, !dbg !2829
  %finish2 = getelementptr inbounds i8, i8* %call, i64 12, !dbg !2830
  %3 = bitcast i8* %finish2 to i32*, !dbg !2830
  store i32 %finish, i32* %3, align 4, !dbg !2831
  %next3 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2832
  %4 = bitcast i8* %next3 to %struct.ira_allocno_live_range**, !dbg !2832
  store %struct.ira_allocno_live_range* %next, %struct.ira_allocno_live_range** %4, align 8, !dbg !2833
  ret %struct.ira_allocno_live_range* %1, !dbg !2834
}

; Function Attrs: nounwind uwtable
define dso_local %struct.ira_allocno_live_range* @ira_copy_allocno_live_range_list(%struct.ira_allocno_live_range* %r) local_unnamed_addr #5 !dbg !2835 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r, metadata !2839, metadata !DIExpression()), !dbg !2843
  %cmp = icmp eq %struct.ira_allocno_live_range* %r, null, !dbg !2844
  br i1 %cmp, label %cleanup, label %for.cond.preheader, !dbg !2846

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !2847

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %last.0 = phi %struct.ira_allocno_live_range* [ %call, %for.inc ], [ null, %for.cond.preheader ], !dbg !2849
  %first.0 = phi %struct.ira_allocno_live_range* [ %first.1, %for.inc ], [ null, %for.cond.preheader ], !dbg !2849
  %r.addr.0 = phi %struct.ira_allocno_live_range* [ %0, %for.inc ], [ %r, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.addr.0, metadata !2839, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0, metadata !2841, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %last.0, metadata !2842, metadata !DIExpression()), !dbg !2843
  %cmp1 = icmp eq %struct.ira_allocno_live_range* %r.addr.0, null, !dbg !2850
  br i1 %cmp1, label %cleanup.loopexit, label %for.body, !dbg !2847

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc %struct.ira_allocno_live_range* @copy_allocno_live_range(%struct.ira_allocno_live_range* nonnull %r.addr.0) #7, !dbg !2852
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %call, metadata !2840, metadata !DIExpression()), !dbg !2843
  %cmp2 = icmp eq %struct.ira_allocno_live_range* %first.0, null, !dbg !2854
  br i1 %cmp2, label %for.inc, label %if.else, !dbg !2856

if.else:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %last.0, i64 0, i32 3, !dbg !2857
  store %struct.ira_allocno_live_range* %call, %struct.ira_allocno_live_range** %next, align 8, !dbg !2858
  br label %for.inc

for.inc:                                          ; preds = %if.else, %for.body
  %first.1 = phi %struct.ira_allocno_live_range* [ %first.0, %if.else ], [ %call, %for.body ], !dbg !2849
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.1, metadata !2841, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %call, metadata !2842, metadata !DIExpression()), !dbg !2843
  %next5 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.addr.0, i64 0, i32 3, !dbg !2859
  %0 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next5, align 8, !dbg !2859
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %0, metadata !2839, metadata !DIExpression()), !dbg !2843
  br label %for.cond, !dbg !2860, !llvm.loop !2861

cleanup.loopexit:                                 ; preds = %for.cond
  %first.0.lcssa = phi %struct.ira_allocno_live_range* [ %first.0, %for.cond ], !dbg !2849
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0.lcssa, metadata !2841, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0.lcssa, metadata !2841, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0.lcssa, metadata !2841, metadata !DIExpression()), !dbg !2843
  br label %cleanup, !dbg !2863

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %struct.ira_allocno_live_range* [ null, %entry ], [ %first.0.lcssa, %cleanup.loopexit ], !dbg !2843
  ret %struct.ira_allocno_live_range* %retval.0, !dbg !2863
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ira_allocno_live_range* @copy_allocno_live_range(%struct.ira_allocno_live_range* %r) unnamed_addr #5 !dbg !2864 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r, metadata !2866, metadata !DIExpression()), !dbg !2868
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @allocno_live_range_pool, align 8, !dbg !2869
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !2870
  %1 = bitcast i8* %call to %struct.ira_allocno_live_range*, !dbg !2871
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %1, metadata !2867, metadata !DIExpression()), !dbg !2868
  %2 = bitcast %struct.ira_allocno_live_range* %r to i8*, !dbg !2872
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call, i8* align 8 %2, i64 40, i1 false), !dbg !2872
  ret %struct.ira_allocno_live_range* %1, !dbg !2873
}

; Function Attrs: nounwind uwtable
define dso_local %struct.ira_allocno_live_range* @ira_merge_allocno_live_ranges(%struct.ira_allocno_live_range* %r1, %struct.ira_allocno_live_range* %r2) local_unnamed_addr #5 !dbg !2874 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1, metadata !2878, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2, metadata !2879, metadata !DIExpression()), !dbg !2883
  %cmp = icmp eq %struct.ira_allocno_live_range* %r1, null, !dbg !2884
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2886

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %struct.ira_allocno_live_range* %r2, null, !dbg !2887
  br i1 %cmp1, label %cleanup, label %for.cond.preheader, !dbg !2889

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !2890

for.cond:                                         ; preds = %for.cond.preheader, %if.end38
  %last.0 = phi %struct.ira_allocno_live_range* [ %last.2, %if.end38 ], [ null, %for.cond.preheader ], !dbg !2892
  %first.0 = phi %struct.ira_allocno_live_range* [ %first.2, %if.end38 ], [ null, %for.cond.preheader ], !dbg !2893
  %r2.addr.0 = phi %struct.ira_allocno_live_range* [ %r2.addr.3, %if.end38 ], [ %r2, %for.cond.preheader ]
  %r1.addr.0 = phi %struct.ira_allocno_live_range* [ %r1.addr.3, %if.end38 ], [ %r1, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1.addr.0, metadata !2878, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2.addr.0, metadata !2879, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0, metadata !2880, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %last.0, metadata !2881, metadata !DIExpression()), !dbg !2883
  %cmp4 = icmp ne %struct.ira_allocno_live_range* %r1.addr.0, null, !dbg !2894
  %cmp5 = icmp ne %struct.ira_allocno_live_range* %r2.addr.0, null, !dbg !2896
  %spec.select = and i1 %cmp5, %cmp4, !dbg !2897
  br i1 %spec.select, label %for.body, label %for.end, !dbg !2890

for.body:                                         ; preds = %for.cond
  %start = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r1.addr.0, i64 0, i32 1, !dbg !2898
  %0 = load i32, i32* %start, align 8, !dbg !2898
  %start6 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r2.addr.0, i64 0, i32 1, !dbg !2901
  %1 = load i32, i32* %start6, align 8, !dbg !2901
  %cmp7 = icmp slt i32 %0, %1, !dbg !2902
  %spec.select1 = select i1 %cmp7, %struct.ira_allocno_live_range* %r1.addr.0, %struct.ira_allocno_live_range* %r2.addr.0, !dbg !2903
  %spec.select2 = select i1 %cmp7, %struct.ira_allocno_live_range* %r2.addr.0, %struct.ira_allocno_live_range* %r1.addr.0, !dbg !2903
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %spec.select2, metadata !2878, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %spec.select1, metadata !2879, metadata !DIExpression()), !dbg !2883
  %start10 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select2, i64 0, i32 1, !dbg !2904
  %2 = load i32, i32* %start10, align 8, !dbg !2904
  %finish = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select1, i64 0, i32 2, !dbg !2906
  %3 = load i32, i32* %finish, align 4, !dbg !2906
  %add = add nsw i32 %3, 1, !dbg !2907
  %cmp11 = icmp sgt i32 %2, %add, !dbg !2908
  br i1 %cmp11, label %if.else, label %if.then12, !dbg !2909

if.then12:                                        ; preds = %for.body
  %start13 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select1, i64 0, i32 1, !dbg !2910
  %4 = load i32, i32* %start13, align 8, !dbg !2910
  store i32 %4, i32* %start10, align 8, !dbg !2912
  %finish15 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select2, i64 0, i32 2, !dbg !2913
  %5 = load i32, i32* %finish15, align 4, !dbg !2913
  %6 = load i32, i32* %finish, align 4, !dbg !2915
  %cmp17 = icmp slt i32 %5, %6, !dbg !2916
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !2917

if.then18:                                        ; preds = %if.then12
  store i32 %6, i32* %finish15, align 4, !dbg !2918
  br label %if.end21, !dbg !2919

if.end21:                                         ; preds = %if.then18, %if.then12
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %spec.select1, metadata !2882, metadata !DIExpression()), !dbg !2883
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select1, i64 0, i32 3, !dbg !2920
  %7 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next, align 8, !dbg !2920
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %7, metadata !2879, metadata !DIExpression()), !dbg !2883
  tail call void @ira_finish_allocno_live_range(%struct.ira_allocno_live_range* nonnull %spec.select1) #7, !dbg !2921
  %cmp22 = icmp eq %struct.ira_allocno_live_range* %7, null, !dbg !2922
  br i1 %cmp22, label %if.then23, label %if.end38, !dbg !2924

if.then23:                                        ; preds = %if.end21
  %next24 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select2, i64 0, i32 3, !dbg !2925
  %8 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next24, align 8, !dbg !2925
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %8, metadata !2879, metadata !DIExpression()), !dbg !2883
  store %struct.ira_allocno_live_range* null, %struct.ira_allocno_live_range** %next24, align 8, !dbg !2927
  br label %if.end38, !dbg !2928

if.else:                                          ; preds = %for.body
  %cmp27 = icmp eq %struct.ira_allocno_live_range* %first.0, null, !dbg !2929
  br i1 %cmp27, label %if.end31, label %if.else29, !dbg !2932

if.else29:                                        ; preds = %if.else
  %next30 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %last.0, i64 0, i32 3, !dbg !2933
  store %struct.ira_allocno_live_range* %spec.select2, %struct.ira_allocno_live_range** %next30, align 8, !dbg !2935
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.else29
  %first.1 = phi %struct.ira_allocno_live_range* [ %first.0, %if.else29 ], [ %spec.select2, %if.else ], !dbg !2936
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.1, metadata !2880, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %spec.select2, metadata !2881, metadata !DIExpression()), !dbg !2883
  %next32 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select2, i64 0, i32 3, !dbg !2937
  %9 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next32, align 8, !dbg !2937
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %9, metadata !2878, metadata !DIExpression()), !dbg !2883
  %cmp33 = icmp eq %struct.ira_allocno_live_range* %9, null, !dbg !2938
  br i1 %cmp33, label %if.then34, label %if.end38, !dbg !2940

if.then34:                                        ; preds = %if.end31
  %next35 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %spec.select1, i64 0, i32 3, !dbg !2941
  %10 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next35, align 8, !dbg !2941
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %10, metadata !2878, metadata !DIExpression()), !dbg !2883
  store %struct.ira_allocno_live_range* null, %struct.ira_allocno_live_range** %next35, align 8, !dbg !2943
  br label %if.end38, !dbg !2944

if.end38:                                         ; preds = %if.end31, %if.then34, %if.end21, %if.then23
  %last.2 = phi %struct.ira_allocno_live_range* [ %last.0, %if.then23 ], [ %last.0, %if.end21 ], [ %spec.select2, %if.then34 ], [ %spec.select2, %if.end31 ], !dbg !2936
  %first.2 = phi %struct.ira_allocno_live_range* [ %first.0, %if.then23 ], [ %first.0, %if.end21 ], [ %first.1, %if.then34 ], [ %first.1, %if.end31 ], !dbg !2936
  %r2.addr.3 = phi %struct.ira_allocno_live_range* [ %8, %if.then23 ], [ %7, %if.end21 ], [ %spec.select1, %if.then34 ], [ %spec.select1, %if.end31 ], !dbg !2945
  %r1.addr.3 = phi %struct.ira_allocno_live_range* [ %spec.select2, %if.then23 ], [ %spec.select2, %if.end21 ], [ %10, %if.then34 ], [ %9, %if.end31 ], !dbg !2945
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1.addr.3, metadata !2878, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2.addr.3, metadata !2879, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.2, metadata !2880, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %last.2, metadata !2881, metadata !DIExpression()), !dbg !2883
  br label %for.cond, !dbg !2946, !llvm.loop !2947

for.end:                                          ; preds = %for.cond
  %last.0.lcssa = phi %struct.ira_allocno_live_range* [ %last.0, %for.cond ], !dbg !2892
  %first.0.lcssa = phi %struct.ira_allocno_live_range* [ %first.0, %for.cond ], !dbg !2893
  %r2.addr.0.lcssa = phi %struct.ira_allocno_live_range* [ %r2.addr.0, %for.cond ]
  %r1.addr.0.lcssa = phi %struct.ira_allocno_live_range* [ %r1.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %last.0.lcssa, metadata !2881, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0.lcssa, metadata !2880, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2.addr.0.lcssa, metadata !2879, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1.addr.0.lcssa, metadata !2878, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %last.0.lcssa, metadata !2881, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0.lcssa, metadata !2880, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2.addr.0.lcssa, metadata !2879, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1.addr.0.lcssa, metadata !2878, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %last.0.lcssa, metadata !2881, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %first.0.lcssa, metadata !2880, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2.addr.0.lcssa, metadata !2879, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1.addr.0.lcssa, metadata !2878, metadata !DIExpression()), !dbg !2883
  %cmp39 = icmp eq %struct.ira_allocno_live_range* %r1.addr.0.lcssa, null, !dbg !2949
  br i1 %cmp39, label %if.else46, label %if.then40, !dbg !2951

if.then40:                                        ; preds = %for.end
  %cmp41 = icmp eq %struct.ira_allocno_live_range* %first.0.lcssa, null, !dbg !2952
  br i1 %cmp41, label %cleanup, label %if.else43, !dbg !2955

if.else43:                                        ; preds = %if.then40
  %next44 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %last.0.lcssa, i64 0, i32 3, !dbg !2956
  store %struct.ira_allocno_live_range* %r1.addr.0.lcssa, %struct.ira_allocno_live_range** %next44, align 8, !dbg !2957
  br label %cleanup

if.else46:                                        ; preds = %for.end
  %cmp47 = icmp eq %struct.ira_allocno_live_range* %r2.addr.0.lcssa, null, !dbg !2958
  br i1 %cmp47, label %cleanup, label %if.then48, !dbg !2960

if.then48:                                        ; preds = %if.else46
  %cmp49 = icmp eq %struct.ira_allocno_live_range* %first.0.lcssa, null, !dbg !2961
  br i1 %cmp49, label %cleanup, label %if.else51, !dbg !2964

if.else51:                                        ; preds = %if.then48
  %next52 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %last.0.lcssa, i64 0, i32 3, !dbg !2965
  store %struct.ira_allocno_live_range* %r2.addr.0.lcssa, %struct.ira_allocno_live_range** %next52, align 8, !dbg !2966
  br label %cleanup

cleanup:                                          ; preds = %if.else46, %if.then40, %if.else43, %if.else51, %if.then48, %if.end, %entry
  %retval.0 = phi %struct.ira_allocno_live_range* [ %r2, %entry ], [ %r1, %if.end ], [ %first.0.lcssa, %if.else43 ], [ %r1.addr.0.lcssa, %if.then40 ], [ %first.0.lcssa, %if.else51 ], [ %r2.addr.0.lcssa, %if.then48 ], [ %first.0.lcssa, %if.else46 ], !dbg !2883
  ret %struct.ira_allocno_live_range* %retval.0, !dbg !2967
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_finish_allocno_live_range(%struct.ira_allocno_live_range* %r) local_unnamed_addr #5 !dbg !2968 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r, metadata !2972, metadata !DIExpression()), !dbg !2973
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @allocno_live_range_pool, align 8, !dbg !2974
  %1 = bitcast %struct.ira_allocno_live_range* %r to i8*, !dbg !2975
  tail call void @pool_free(%struct.alloc_pool_def* %0, i8* %1) #6, !dbg !2976
  ret void, !dbg !2977
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ira_allocno_live_ranges_intersect_p(%struct.ira_allocno_live_range* %r1, %struct.ira_allocno_live_range* %r2) local_unnamed_addr #5 !dbg !2978 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1, metadata !2982, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2, metadata !2983, metadata !DIExpression()), !dbg !2984
  br label %while.cond, !dbg !2985

while.cond:                                       ; preds = %if.end9, %entry
  %r2.addr.0 = phi %struct.ira_allocno_live_range* [ %r2, %entry ], [ %r2.addr.1, %if.end9 ]
  %r1.addr.0 = phi %struct.ira_allocno_live_range* [ %r1, %entry ], [ %r1.addr.1, %if.end9 ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1.addr.0, metadata !2982, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2.addr.0, metadata !2983, metadata !DIExpression()), !dbg !2984
  %cmp = icmp ne %struct.ira_allocno_live_range* %r1.addr.0, null, !dbg !2986
  %cmp1 = icmp ne %struct.ira_allocno_live_range* %r2.addr.0, null, !dbg !2987
  %spec.select = and i1 %cmp1, %cmp, !dbg !2988
  br i1 %spec.select, label %while.body, label %return, !dbg !2985

while.body:                                       ; preds = %while.cond
  %start = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r1.addr.0, i64 0, i32 1, !dbg !2989
  %0 = load i32, i32* %start, align 8, !dbg !2989
  %finish = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r2.addr.0, i64 0, i32 2, !dbg !2992
  %1 = load i32, i32* %finish, align 4, !dbg !2992
  %cmp2 = icmp sgt i32 %0, %1, !dbg !2993
  br i1 %cmp2, label %if.then, label %if.else, !dbg !2994

if.then:                                          ; preds = %while.body
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r1.addr.0, i64 0, i32 3, !dbg !2995
  %2 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next, align 8, !dbg !2995
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %2, metadata !2982, metadata !DIExpression()), !dbg !2984
  br label %if.end9, !dbg !2996

if.else:                                          ; preds = %while.body
  %start3 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r2.addr.0, i64 0, i32 1, !dbg !2997
  %3 = load i32, i32* %start3, align 8, !dbg !2997
  %finish4 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r1.addr.0, i64 0, i32 2, !dbg !2999
  %4 = load i32, i32* %finish4, align 4, !dbg !2999
  %cmp5 = icmp sgt i32 %3, %4, !dbg !3000
  br i1 %cmp5, label %if.then6, label %return, !dbg !3001

if.then6:                                         ; preds = %if.else
  %next7 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r2.addr.0, i64 0, i32 3, !dbg !3002
  %5 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next7, align 8, !dbg !3002
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %5, metadata !2983, metadata !DIExpression()), !dbg !2984
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.then
  %r2.addr.1 = phi %struct.ira_allocno_live_range* [ %r2.addr.0, %if.then ], [ %5, %if.then6 ]
  %r1.addr.1 = phi %struct.ira_allocno_live_range* [ %2, %if.then ], [ %r1.addr.0, %if.then6 ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r1.addr.1, metadata !2982, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r2.addr.1, metadata !2983, metadata !DIExpression()), !dbg !2984
  br label %while.cond, !dbg !2985, !llvm.loop !3003

return:                                           ; preds = %while.cond, %if.else
  %retval.0 = phi i8 [ 1, %if.else ], [ 0, %while.cond ], !dbg !2984
  ret i8 %retval.0, !dbg !3005
}

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_finish_allocno_live_range_list(%struct.ira_allocno_live_range* %r) local_unnamed_addr #5 !dbg !3006 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r, metadata !3008, metadata !DIExpression()), !dbg !3010
  br label %for.cond, !dbg !3011

for.cond:                                         ; preds = %for.body, %entry
  %r.addr.0 = phi %struct.ira_allocno_live_range* [ %r, %entry ], [ %0, %for.body ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.addr.0, metadata !3008, metadata !DIExpression()), !dbg !3010
  %cmp = icmp eq %struct.ira_allocno_live_range* %r.addr.0, null, !dbg !3012
  br i1 %cmp, label %for.end, label %for.body, !dbg !3015

for.body:                                         ; preds = %for.cond
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.addr.0, i64 0, i32 3, !dbg !3016
  %0 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next, align 8, !dbg !3016
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %0, metadata !3009, metadata !DIExpression()), !dbg !3010
  tail call void @ira_finish_allocno_live_range(%struct.ira_allocno_live_range* nonnull %r.addr.0) #7, !dbg !3018
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %0, metadata !3008, metadata !DIExpression()), !dbg !3010
  br label %for.cond, !dbg !3019, !llvm.loop !3020

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3022
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_free_allocno_updated_costs(%struct.ira_allocno* %a) local_unnamed_addr #5 !dbg !3023 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !3025, metadata !DIExpression()), !dbg !3027
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !3028
  %0 = load i32, i32* %cover_class1, align 8, !dbg !3028
  call void @llvm.dbg.value(metadata i32 %0, metadata !3026, metadata !DIExpression()), !dbg !3027
  %updated_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 34, !dbg !3029
  %1 = load i32*, i32** %updated_hard_reg_costs, align 8, !dbg !3029
  %cmp = icmp eq i32* %1, null, !dbg !3031
  br i1 %cmp, label %if.end, label %if.then, !dbg !3032

if.then:                                          ; preds = %entry
  tail call void @ira_free_cost_vector(i32* nonnull %1, i32 %0) #7, !dbg !3033
  br label %if.end, !dbg !3033

if.end:                                           ; preds = %entry, %if.then
  store i32* null, i32** %updated_hard_reg_costs, align 8, !dbg !3034
  %updated_conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 36, !dbg !3035
  %2 = load i32*, i32** %updated_conflict_hard_reg_costs, align 8, !dbg !3035
  %cmp4 = icmp eq i32* %2, null, !dbg !3037
  br i1 %cmp4, label %if.end7, label %if.then5, !dbg !3038

if.then5:                                         ; preds = %if.end
  tail call void @ira_free_cost_vector(i32* nonnull %2, i32 %0) #7, !dbg !3039
  br label %if.end7, !dbg !3039

if.end7:                                          ; preds = %if.end, %if.then5
  store i32* null, i32** %updated_conflict_hard_reg_costs, align 8, !dbg !3040
  ret void, !dbg !3041
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_free_cost_vector(i32* %vec, i32 %cover_class) local_unnamed_addr #5 !dbg !3042 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec, metadata !3046, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !3047, metadata !DIExpression()), !dbg !3048
  %idxprom = zext i32 %cover_class to i64, !dbg !3049
  %arrayidx = getelementptr inbounds [27 x %struct.alloc_pool_def*], [27 x %struct.alloc_pool_def*]* @cost_vector_pool, i64 0, i64 %idxprom, !dbg !3049
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %arrayidx, align 8, !dbg !3049
  %1 = bitcast i32* %vec to i8*, !dbg !3050
  tail call void @pool_free(%struct.alloc_pool_def* %0, i8* %1) #6, !dbg !3051
  ret void, !dbg !3052
}

; Function Attrs: nounwind uwtable
define dso_local %struct.ira_allocno_copy* @ira_create_copy(%struct.ira_allocno* %first, %struct.ira_allocno* %second, i32 %freq, i8 zeroext %constraint_p, %struct.rtx_def* %insn, %struct.ira_loop_tree_node* %loop_tree_node) local_unnamed_addr #5 !dbg !3053 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %first, metadata !3057, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %second, metadata !3058, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.value(metadata i32 %freq, metadata !3059, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.value(metadata i8 %constraint_p, metadata !3060, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3061, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_tree_node, metadata !3062, metadata !DIExpression()), !dbg !3064
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @copy_pool, align 8, !dbg !3065
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !3066
  %1 = bitcast i8* %call to %struct.ira_allocno_copy*, !dbg !3067
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %1, metadata !3063, metadata !DIExpression()), !dbg !3064
  %2 = load i32, i32* @ira_copies_num, align 4, !dbg !3068
  %num = bitcast i8* %call to i32*, !dbg !3069
  store i32 %2, i32* %num, align 8, !dbg !3070
  %first1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3071
  %3 = bitcast i8* %first1 to %struct.ira_allocno**, !dbg !3071
  store %struct.ira_allocno* %first, %struct.ira_allocno** %3, align 8, !dbg !3072
  %second2 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !3073
  %4 = bitcast i8* %second2 to %struct.ira_allocno**, !dbg !3073
  store %struct.ira_allocno* %second, %struct.ira_allocno** %4, align 8, !dbg !3074
  %freq3 = getelementptr inbounds i8, i8* %call, i64 24, !dbg !3075
  %5 = bitcast i8* %freq3 to i32*, !dbg !3075
  store i32 %freq, i32* %5, align 8, !dbg !3076
  %6 = getelementptr inbounds i8, i8* %call, i64 28, !dbg !3077
  store i8 %constraint_p, i8* %6, align 4, !dbg !3078
  %insn5 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !3079
  %7 = bitcast i8* %insn5 to %struct.rtx_def**, !dbg !3079
  store %struct.rtx_def* %insn, %struct.rtx_def** %7, align 8, !dbg !3080
  %loop_tree_node6 = getelementptr inbounds i8, i8* %call, i64 72, !dbg !3081
  %8 = bitcast i8* %loop_tree_node6 to %struct.ira_loop_tree_node**, !dbg !3081
  store %struct.ira_loop_tree_node* %loop_tree_node, %struct.ira_loop_tree_node** %8, align 8, !dbg !3082
  %call7 = tail call fastcc %struct.ira_allocno_copy** @VEC_ira_copy_t_heap_safe_push(%struct.VEC_ira_copy_t_heap** nonnull @copy_vec, %struct.ira_allocno_copy* %1) #7, !dbg !3083
  %9 = load %struct.VEC_ira_copy_t_heap*, %struct.VEC_ira_copy_t_heap** @copy_vec, align 8, !dbg !3084
  %base = getelementptr inbounds %struct.VEC_ira_copy_t_heap, %struct.VEC_ira_copy_t_heap* %9, i64 0, i32 0, !dbg !3084
  %call8 = tail call fastcc %struct.ira_allocno_copy** @VEC_ira_copy_t_base_address(%struct.VEC_ira_copy_t_base* %base) #7, !dbg !3084
  store %struct.ira_allocno_copy** %call8, %struct.ira_allocno_copy*** @ira_copies, align 8, !dbg !3085
  %10 = load %struct.VEC_ira_copy_t_heap*, %struct.VEC_ira_copy_t_heap** @copy_vec, align 8, !dbg !3086
  %base11 = getelementptr inbounds %struct.VEC_ira_copy_t_heap, %struct.VEC_ira_copy_t_heap* %10, i64 0, i32 0, !dbg !3086
  %call15 = tail call fastcc i32 @VEC_ira_copy_t_base_length(%struct.VEC_ira_copy_t_base* %base11) #7, !dbg !3086
  store i32 %call15, i32* @ira_copies_num, align 4, !dbg !3087
  ret %struct.ira_allocno_copy* %1, !dbg !3088
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno_copy** @VEC_ira_copy_t_heap_safe_push(%struct.VEC_ira_copy_t_heap** %vec_, %struct.ira_allocno_copy* %obj_) unnamed_addr #0 !dbg !3089 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_copy_t_heap** @copy_vec, metadata !3094, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %obj_, metadata !3095, metadata !DIExpression()), !dbg !3096
  %call = tail call fastcc i32 @VEC_ira_copy_t_heap_reserve(%struct.VEC_ira_copy_t_heap** nonnull @copy_vec, i32 1) #7, !dbg !3097
  %0 = load %struct.VEC_ira_copy_t_heap*, %struct.VEC_ira_copy_t_heap** @copy_vec, align 8, !dbg !3097
  %tobool = icmp eq %struct.VEC_ira_copy_t_heap* %0, null, !dbg !3097
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3097

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_copy_t_heap, %struct.VEC_ira_copy_t_heap* %0, i64 0, i32 0, !dbg !3097
  br label %cond.end, !dbg !3097

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_copy_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3097
  %call1 = tail call fastcc %struct.ira_allocno_copy** @VEC_ira_copy_t_base_quick_push(%struct.VEC_ira_copy_t_base* %cond, %struct.ira_allocno_copy* %obj_) #7, !dbg !3097
  ret %struct.ira_allocno_copy** %call1, !dbg !3097
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno_copy** @VEC_ira_copy_t_base_address(%struct.VEC_ira_copy_t_base* %vec_) unnamed_addr #0 !dbg !3098 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_copy_t_base* %vec_, metadata !3103, metadata !DIExpression()), !dbg !3104
  %tobool = icmp eq %struct.VEC_ira_copy_t_base* %vec_, null, !dbg !3105
  %arraydecay = getelementptr inbounds %struct.VEC_ira_copy_t_base, %struct.VEC_ira_copy_t_base* %vec_, i64 0, i32 2, i64 0, !dbg !3105
  %cond = select i1 %tobool, %struct.ira_allocno_copy** null, %struct.ira_allocno_copy** %arraydecay, !dbg !3105
  ret %struct.ira_allocno_copy** %cond, !dbg !3105
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_copy_t_base_length(%struct.VEC_ira_copy_t_base* %vec_) unnamed_addr #0 !dbg !3106 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_copy_t_base* %vec_, metadata !3112, metadata !DIExpression()), !dbg !3113
  %tobool = icmp eq %struct.VEC_ira_copy_t_base* %vec_, null, !dbg !3114
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3114

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ira_copy_t_base, %struct.VEC_ira_copy_t_base* %vec_, i64 0, i32 0, !dbg !3114
  %0 = load i32, i32* %num, align 8, !dbg !3114
  br label %cond.end, !dbg !3114

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3114
  ret i32 %cond, !dbg !3114
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_add_allocno_copy_to_list(%struct.ira_allocno_copy* %cp) local_unnamed_addr #5 !dbg !3115 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp, metadata !3119, metadata !DIExpression()), !dbg !3122
  %first1 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 1, !dbg !3123
  %0 = load %struct.ira_allocno*, %struct.ira_allocno** %first1, align 8, !dbg !3123
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %0, metadata !3120, metadata !DIExpression()), !dbg !3122
  %second2 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 2, !dbg !3124
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %second2, align 8, !dbg !3124
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !3121, metadata !DIExpression()), !dbg !3122
  %prev_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 6, !dbg !3125
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %prev_first_allocno_copy, align 8, !dbg !3126
  %prev_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 8, !dbg !3127
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %prev_second_allocno_copy, align 8, !dbg !3128
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 15, !dbg !3129
  %2 = bitcast %struct.ira_allocno_copy** %allocno_copies to i64*, !dbg !3129
  %3 = load i64, i64* %2, align 8, !dbg !3129
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 7, !dbg !3130
  %4 = bitcast %struct.ira_allocno_copy** %next_first_allocno_copy to i64*, !dbg !3131
  store i64 %3, i64* %4, align 8, !dbg !3131
  %cmp = icmp eq i64 %3, 0, !dbg !3132
  %5 = inttoptr i64 %3 to %struct.ira_allocno_copy*, !dbg !3134
  br i1 %cmp, label %if.end12, label %if.then, !dbg !3134

if.then:                                          ; preds = %entry
  %first5 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %5, i64 0, i32 1, !dbg !3135
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %first5, align 8, !dbg !3135
  %cmp6 = icmp eq %struct.ira_allocno* %6, %0, !dbg !3138
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !3139

if.then7:                                         ; preds = %if.then
  %prev_first_allocno_copy9 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %5, i64 0, i32 6, !dbg !3140
  store %struct.ira_allocno_copy* %cp, %struct.ira_allocno_copy** %prev_first_allocno_copy9, align 8, !dbg !3141
  br label %if.end12, !dbg !3142

if.else:                                          ; preds = %if.then
  %prev_second_allocno_copy11 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %5, i64 0, i32 8, !dbg !3143
  store %struct.ira_allocno_copy* %cp, %struct.ira_allocno_copy** %prev_second_allocno_copy11, align 8, !dbg !3144
  br label %if.end12

if.end12:                                         ; preds = %entry, %if.then7, %if.else
  %allocno_copies13 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 15, !dbg !3145
  %7 = bitcast %struct.ira_allocno_copy** %allocno_copies13 to i64*, !dbg !3145
  %8 = load i64, i64* %7, align 8, !dbg !3145
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 9, !dbg !3146
  %9 = bitcast %struct.ira_allocno_copy** %next_second_allocno_copy to i64*, !dbg !3147
  store i64 %8, i64* %9, align 8, !dbg !3147
  %cmp15 = icmp eq i64 %8, 0, !dbg !3148
  %10 = inttoptr i64 %8 to %struct.ira_allocno_copy*, !dbg !3150
  br i1 %cmp15, label %if.end27, label %if.then16, !dbg !3150

if.then16:                                        ; preds = %if.end12
  %second18 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %10, i64 0, i32 2, !dbg !3151
  %11 = load %struct.ira_allocno*, %struct.ira_allocno** %second18, align 8, !dbg !3151
  %cmp19 = icmp eq %struct.ira_allocno* %11, %1, !dbg !3154
  br i1 %cmp19, label %if.then20, label %if.else23, !dbg !3155

if.then20:                                        ; preds = %if.then16
  %prev_second_allocno_copy22 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %10, i64 0, i32 8, !dbg !3156
  store %struct.ira_allocno_copy* %cp, %struct.ira_allocno_copy** %prev_second_allocno_copy22, align 8, !dbg !3157
  br label %if.end27, !dbg !3158

if.else23:                                        ; preds = %if.then16
  %prev_first_allocno_copy25 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %10, i64 0, i32 6, !dbg !3159
  store %struct.ira_allocno_copy* %cp, %struct.ira_allocno_copy** %prev_first_allocno_copy25, align 8, !dbg !3160
  br label %if.end27

if.end27:                                         ; preds = %if.end12, %if.then20, %if.else23
  store %struct.ira_allocno_copy* %cp, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !3161
  store %struct.ira_allocno_copy* %cp, %struct.ira_allocno_copy** %allocno_copies13, align 8, !dbg !3162
  ret void, !dbg !3163
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_remove_allocno_copy_from_list(%struct.ira_allocno_copy* %cp) local_unnamed_addr #5 !dbg !3164 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp, metadata !3166, metadata !DIExpression()), !dbg !3171
  %first1 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 1, !dbg !3172
  %0 = load %struct.ira_allocno*, %struct.ira_allocno** %first1, align 8, !dbg !3172
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %0, metadata !3167, metadata !DIExpression()), !dbg !3171
  %second2 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 2, !dbg !3173
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %second2, align 8, !dbg !3173
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !3168, metadata !DIExpression()), !dbg !3171
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 7, !dbg !3174
  %2 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !3174
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %2, metadata !3170, metadata !DIExpression()), !dbg !3171
  %prev_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 6, !dbg !3175
  %3 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %prev_first_allocno_copy, align 8, !dbg !3175
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %3, metadata !3169, metadata !DIExpression()), !dbg !3171
  %cmp = icmp eq %struct.ira_allocno_copy* %3, null, !dbg !3176
  br i1 %cmp, label %if.then, label %if.else, !dbg !3178

if.then:                                          ; preds = %entry
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 15, !dbg !3179
  store %struct.ira_allocno_copy* %2, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !3180
  br label %if.end8, !dbg !3179

if.else:                                          ; preds = %entry
  %first3 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %3, i64 0, i32 1, !dbg !3181
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %first3, align 8, !dbg !3181
  %cmp4 = icmp eq %struct.ira_allocno* %4, %0, !dbg !3183
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !3184

if.then5:                                         ; preds = %if.else
  %next_first_allocno_copy6 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %3, i64 0, i32 7, !dbg !3185
  store %struct.ira_allocno_copy* %2, %struct.ira_allocno_copy** %next_first_allocno_copy6, align 8, !dbg !3186
  br label %if.end8, !dbg !3187

if.else7:                                         ; preds = %if.else
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %3, i64 0, i32 9, !dbg !3188
  store %struct.ira_allocno_copy* %2, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !3189
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.else7, %if.then
  %cmp9 = icmp eq %struct.ira_allocno_copy* %2, null, !dbg !3190
  br i1 %cmp9, label %if.end17, label %if.then10, !dbg !3192

if.then10:                                        ; preds = %if.end8
  %first11 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %2, i64 0, i32 1, !dbg !3193
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %first11, align 8, !dbg !3193
  %cmp12 = icmp eq %struct.ira_allocno* %5, %0, !dbg !3196
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !3197

if.then13:                                        ; preds = %if.then10
  %prev_first_allocno_copy14 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %2, i64 0, i32 6, !dbg !3198
  store %struct.ira_allocno_copy* %3, %struct.ira_allocno_copy** %prev_first_allocno_copy14, align 8, !dbg !3199
  br label %if.end17, !dbg !3200

if.else15:                                        ; preds = %if.then10
  %prev_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %2, i64 0, i32 8, !dbg !3201
  store %struct.ira_allocno_copy* %3, %struct.ira_allocno_copy** %prev_second_allocno_copy, align 8, !dbg !3202
  br label %if.end17

if.end17:                                         ; preds = %if.end8, %if.then13, %if.else15
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !3203
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %prev_first_allocno_copy, align 8, !dbg !3204
  %next_second_allocno_copy20 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 9, !dbg !3205
  %6 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy20, align 8, !dbg !3205
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %6, metadata !3170, metadata !DIExpression()), !dbg !3171
  %prev_second_allocno_copy21 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 8, !dbg !3206
  %7 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %prev_second_allocno_copy21, align 8, !dbg !3206
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %7, metadata !3169, metadata !DIExpression()), !dbg !3171
  %cmp22 = icmp eq %struct.ira_allocno_copy* %7, null, !dbg !3207
  br i1 %cmp22, label %if.then23, label %if.else25, !dbg !3209

if.then23:                                        ; preds = %if.end17
  %allocno_copies24 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 15, !dbg !3210
  store %struct.ira_allocno_copy* %6, %struct.ira_allocno_copy** %allocno_copies24, align 8, !dbg !3211
  br label %if.end33, !dbg !3210

if.else25:                                        ; preds = %if.end17
  %second26 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %7, i64 0, i32 2, !dbg !3212
  %8 = load %struct.ira_allocno*, %struct.ira_allocno** %second26, align 8, !dbg !3212
  %cmp27 = icmp eq %struct.ira_allocno* %8, %1, !dbg !3214
  br i1 %cmp27, label %if.then28, label %if.else30, !dbg !3215

if.then28:                                        ; preds = %if.else25
  %next_second_allocno_copy29 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %7, i64 0, i32 9, !dbg !3216
  store %struct.ira_allocno_copy* %6, %struct.ira_allocno_copy** %next_second_allocno_copy29, align 8, !dbg !3217
  br label %if.end33, !dbg !3218

if.else30:                                        ; preds = %if.else25
  %next_first_allocno_copy31 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %7, i64 0, i32 7, !dbg !3219
  store %struct.ira_allocno_copy* %6, %struct.ira_allocno_copy** %next_first_allocno_copy31, align 8, !dbg !3220
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.else30, %if.then23
  %cmp34 = icmp eq %struct.ira_allocno_copy* %6, null, !dbg !3221
  br i1 %cmp34, label %if.end43, label %if.then35, !dbg !3223

if.then35:                                        ; preds = %if.end33
  %second36 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %6, i64 0, i32 2, !dbg !3224
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %second36, align 8, !dbg !3224
  %cmp37 = icmp eq %struct.ira_allocno* %9, %1, !dbg !3227
  br i1 %cmp37, label %if.then38, label %if.else40, !dbg !3228

if.then38:                                        ; preds = %if.then35
  %prev_second_allocno_copy39 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %6, i64 0, i32 8, !dbg !3229
  store %struct.ira_allocno_copy* %7, %struct.ira_allocno_copy** %prev_second_allocno_copy39, align 8, !dbg !3230
  br label %if.end43, !dbg !3231

if.else40:                                        ; preds = %if.then35
  %prev_first_allocno_copy41 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %6, i64 0, i32 6, !dbg !3232
  store %struct.ira_allocno_copy* %7, %struct.ira_allocno_copy** %prev_first_allocno_copy41, align 8, !dbg !3233
  br label %if.end43

if.end43:                                         ; preds = %if.end33, %if.then38, %if.else40
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %next_second_allocno_copy20, align 8, !dbg !3234
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %prev_second_allocno_copy21, align 8, !dbg !3235
  ret void, !dbg !3236
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_swap_allocno_copy_ends_if_necessary(%struct.ira_allocno_copy* %cp) local_unnamed_addr #5 !dbg !3237 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp, metadata !3239, metadata !DIExpression()), !dbg !3242
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 1, !dbg !3243
  %0 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !3243
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 0, !dbg !3243
  %1 = load i32, i32* %num, align 8, !dbg !3243
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 2, !dbg !3245
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !3245
  %num1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 0, !dbg !3245
  %3 = load i32, i32* %num1, align 8, !dbg !3245
  %cmp = icmp sgt i32 %1, %3, !dbg !3246
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !3247

if.end:                                           ; preds = %entry
  %4 = ptrtoint %struct.ira_allocno* %2 to i64, !dbg !3247
  %5 = ptrtoint %struct.ira_allocno* %0 to i64, !dbg !3247
  %6 = bitcast %struct.ira_allocno** %first to i64*, !dbg !3248
  %7 = bitcast %struct.ira_allocno** %second to i64*, !dbg !3249
  store i64 %4, i64* %6, align 8, !dbg !3250
  store i64 %5, i64* %7, align 8, !dbg !3251
  %prev_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 6, !dbg !3252
  %8 = bitcast %struct.ira_allocno_copy** %prev_first_allocno_copy to i64*, !dbg !3252
  %9 = load i64, i64* %8, align 8, !dbg !3252
  %prev_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 8, !dbg !3253
  %10 = bitcast %struct.ira_allocno_copy** %prev_second_allocno_copy to i64*, !dbg !3253
  %11 = load i64, i64* %10, align 8, !dbg !3253
  store i64 %11, i64* %8, align 8, !dbg !3254
  store i64 %9, i64* %10, align 8, !dbg !3255
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 7, !dbg !3256
  %12 = bitcast %struct.ira_allocno_copy** %next_first_allocno_copy to i64*, !dbg !3256
  %13 = load i64, i64* %12, align 8, !dbg !3256
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 9, !dbg !3257
  %14 = bitcast %struct.ira_allocno_copy** %next_second_allocno_copy to i64*, !dbg !3257
  %15 = load i64, i64* %14, align 8, !dbg !3257
  store i64 %15, i64* %12, align 8, !dbg !3258
  store i64 %13, i64* %14, align 8, !dbg !3259
  br label %cleanup.cont, !dbg !3260

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !3260
}

; Function Attrs: nounwind uwtable
define dso_local %struct.ira_allocno_copy* @ira_add_allocno_copy(%struct.ira_allocno* %first, %struct.ira_allocno* %second, i32 %freq, i8 zeroext %constraint_p, %struct.rtx_def* %insn, %struct.ira_loop_tree_node* %loop_tree_node) local_unnamed_addr #5 !dbg !3261 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %first, metadata !3263, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %second, metadata !3264, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32 %freq, metadata !3265, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i8 %constraint_p, metadata !3266, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3267, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_tree_node, metadata !3268, metadata !DIExpression()), !dbg !3270
  %call = tail call fastcc %struct.ira_allocno_copy* @find_allocno_copy(%struct.ira_allocno* %first, %struct.ira_allocno* %second, %struct.rtx_def* %insn, %struct.ira_loop_tree_node* %loop_tree_node) #7, !dbg !3271
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %call, metadata !3269, metadata !DIExpression()), !dbg !3270
  %cmp = icmp eq %struct.ira_allocno_copy* %call, null, !dbg !3273
  br i1 %cmp, label %if.end, label %if.then, !dbg !3274

if.then:                                          ; preds = %entry
  %freq1 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %call, i64 0, i32 3, !dbg !3275
  %0 = load i32, i32* %freq1, align 8, !dbg !3277
  %add = add nsw i32 %0, %freq, !dbg !3277
  store i32 %add, i32* %freq1, align 8, !dbg !3277
  br label %cleanup, !dbg !3278

if.end:                                           ; preds = %entry
  %call2 = tail call %struct.ira_allocno_copy* @ira_create_copy(%struct.ira_allocno* %first, %struct.ira_allocno* %second, i32 %freq, i8 zeroext %constraint_p, %struct.rtx_def* %insn, %struct.ira_loop_tree_node* %loop_tree_node) #7, !dbg !3279
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %call2, metadata !3269, metadata !DIExpression()), !dbg !3270
  tail call void @ira_add_allocno_copy_to_list(%struct.ira_allocno_copy* %call2) #7, !dbg !3280
  tail call void @ira_swap_allocno_copy_ends_if_necessary(%struct.ira_allocno_copy* %call2) #7, !dbg !3281
  br label %cleanup, !dbg !3282

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ira_allocno_copy* [ %call, %if.then ], [ %call2, %if.end ], !dbg !3270
  ret %struct.ira_allocno_copy* %retval.0, !dbg !3283
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ira_allocno_copy* @find_allocno_copy(%struct.ira_allocno* %a1, %struct.ira_allocno* %a2, %struct.rtx_def* %insn, %struct.ira_loop_tree_node* %loop_tree_node) unnamed_addr #5 !dbg !3284 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a1, metadata !3288, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a2, metadata !3289, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3290, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_tree_node, metadata !3291, metadata !DIExpression()), !dbg !3295
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 15, !dbg !3296
  %0 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !3296
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %0, metadata !3292, metadata !DIExpression()), !dbg !3295
  br label %for.cond, !dbg !3298

for.cond:                                         ; preds = %for.inc, %entry
  %cp.0 = phi %struct.ira_allocno_copy* [ %0, %entry ], [ %next_cp.2, %for.inc ], !dbg !3299
  %next_cp.0 = phi %struct.ira_allocno_copy* [ undef, %entry ], [ %next_cp.2, %for.inc ]
  %another_a.0 = phi %struct.ira_allocno* [ undef, %entry ], [ %another_a.2, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_a.0, metadata !3294, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.0, metadata !3293, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0, metadata !3292, metadata !DIExpression()), !dbg !3295
  %cmp = icmp eq %struct.ira_allocno_copy* %cp.0, null, !dbg !3300
  br i1 %cmp, label %cleanup, label %for.body, !dbg !3302

for.body:                                         ; preds = %for.cond
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 1, !dbg !3303
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !3303
  %cmp1 = icmp eq %struct.ira_allocno* %1, %a1, !dbg !3306
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3307

if.then:                                          ; preds = %for.body
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 7, !dbg !3308
  %2 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !3308
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %2, metadata !3293, metadata !DIExpression()), !dbg !3295
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3310
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !3310
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !3294, metadata !DIExpression()), !dbg !3295
  br label %if.end7, !dbg !3311

if.else:                                          ; preds = %for.body
  %second2 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3312
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %second2, align 8, !dbg !3312
  %cmp3 = icmp eq %struct.ira_allocno* %4, %a1, !dbg !3314
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !3315

if.then4:                                         ; preds = %if.else
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 9, !dbg !3316
  %5 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !3316
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %5, metadata !3293, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !3294, metadata !DIExpression()), !dbg !3295
  br label %if.end7, !dbg !3318

if.else6:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1062, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3319
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.else6, %if.then
  %next_cp.2 = phi %struct.ira_allocno_copy* [ %2, %if.then ], [ %5, %if.then4 ], [ %next_cp.0, %if.else6 ], !dbg !3320
  %another_a.2 = phi %struct.ira_allocno* [ %3, %if.then ], [ %1, %if.then4 ], [ %another_a.0, %if.else6 ], !dbg !3320
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_a.2, metadata !3294, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.2, metadata !3293, metadata !DIExpression()), !dbg !3295
  %cmp8 = icmp eq %struct.ira_allocno* %another_a.2, %a2, !dbg !3321
  br i1 %cmp8, label %land.lhs.true, label %for.inc, !dbg !3323

land.lhs.true:                                    ; preds = %if.end7
  %insn9 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 5, !dbg !3324
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn9, align 8, !dbg !3324
  %cmp10 = icmp eq %struct.rtx_def* %6, %insn, !dbg !3325
  br i1 %cmp10, label %land.lhs.true11, label %for.inc, !dbg !3326

land.lhs.true11:                                  ; preds = %land.lhs.true
  %loop_tree_node12 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 10, !dbg !3327
  %7 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node12, align 8, !dbg !3327
  %cmp13 = icmp eq %struct.ira_loop_tree_node* %7, %loop_tree_node, !dbg !3328
  br i1 %cmp13, label %cleanup, label %for.inc, !dbg !3329

for.inc:                                          ; preds = %if.end7, %land.lhs.true, %land.lhs.true11
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.2, metadata !3292, metadata !DIExpression()), !dbg !3295
  br label %for.cond, !dbg !3330, !llvm.loop !3331

cleanup:                                          ; preds = %for.cond, %land.lhs.true11
  %retval.0 = phi %struct.ira_allocno_copy* [ %cp.0, %land.lhs.true11 ], [ null, %for.cond ], !dbg !3295
  ret %struct.ira_allocno_copy* %retval.0, !dbg !3333
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_debug_copy(%struct.ira_allocno_copy* %cp) local_unnamed_addr #5 !dbg !3334 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp, metadata !3336, metadata !DIExpression()), !dbg !3337
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3338
  tail call fastcc void @print_copy(%struct._IO_FILE* %0, %struct.ira_allocno_copy* %cp) #7, !dbg !3339
  ret void, !dbg !3340
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_copy(%struct._IO_FILE* %f, %struct.ira_allocno_copy* %cp) unnamed_addr #5 !dbg !3341 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3345, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp, metadata !3346, metadata !DIExpression()), !dbg !3347
  %num = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 0, !dbg !3348
  %0 = load i32, i32* %num, align 8, !dbg !3348
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 1, !dbg !3349
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !3349
  %num1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !3349
  %2 = load i32, i32* %num1, align 8, !dbg !3349
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 1, !dbg !3350
  %3 = load i32, i32* %regno, align 4, !dbg !3350
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 2, !dbg !3351
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !3351
  %num3 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 0, !dbg !3351
  %5 = load i32, i32* %num3, align 8, !dbg !3351
  %regno5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 1, !dbg !3352
  %6 = load i32, i32* %regno5, align 4, !dbg !3352
  %freq = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 3, !dbg !3353
  %7 = load i32, i32* %freq, align 8, !dbg !3353
  %insn = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 5, !dbg !3354
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3354
  %cmp = icmp eq %struct.rtx_def* %8, null, !dbg !3355
  br i1 %cmp, label %cond.false, label %cond.end, !dbg !3356

cond.false:                                       ; preds = %entry
  %constraint_p = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp, i64 0, i32 4, !dbg !3357
  %9 = load i8, i8* %constraint_p, align 4, !dbg !3357
  %tobool = icmp eq i8 %9, 0, !dbg !3358
  %cond = select i1 %tobool, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), !dbg !3358
  br label %cond.end, !dbg !3356

cond.end:                                         ; preds = %entry, %cond.false
  %cond6 = phi i8* [ %cond, %cond.false ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), %entry ], !dbg !3356
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 %0, i32 %2, i32 %3, i32 %5, i32 %6, i32 %7, i8* %cond6) #6, !dbg !3359
  ret void, !dbg !3360
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_debug_copies() local_unnamed_addr #5 !dbg !3361 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3364
  tail call fastcc void @print_copies(%struct._IO_FILE* %0) #7, !dbg !3365
  ret void, !dbg !3366
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_copies(%struct._IO_FILE* %f) unnamed_addr #5 !dbg !3367 {
entry:
  %cp = alloca %struct.ira_allocno_copy*, align 8
  %ci = alloca %struct.ira_copy_iterator, align 4
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3371, metadata !DIExpression()), !dbg !3378
  %0 = bitcast %struct.ira_allocno_copy** %cp to i8*, !dbg !3379
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3379
  %1 = bitcast %struct.ira_copy_iterator* %ci to i8*, !dbg !3380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3380
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !3373, metadata !DIExpression(DW_OP_deref)), !dbg !3378
  call fastcc void @ira_copy_iter_init(%struct.ira_copy_iterator* nonnull %ci) #7, !dbg !3381
  br label %for.cond, !dbg !3381

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy** %cp, metadata !3372, metadata !DIExpression(DW_OP_deref)), !dbg !3378
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !3373, metadata !DIExpression(DW_OP_deref)), !dbg !3378
  %call = call fastcc zeroext i8 @ira_copy_iter_cond(%struct.ira_copy_iterator* nonnull %ci, %struct.ira_allocno_copy** nonnull %cp) #7, !dbg !3383
  %tobool = icmp eq i8 %call, 0, !dbg !3381
  br i1 %tobool, label %for.end, label %for.body, !dbg !3381

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3385
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %2, metadata !3372, metadata !DIExpression()), !dbg !3378
  call fastcc void @print_copy(%struct._IO_FILE* %f, %struct.ira_allocno_copy* %2) #7, !dbg !3386
  br label %for.cond, !dbg !3383, !llvm.loop !3387

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !3389
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3389
  ret void, !dbg !3389
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_debug_allocno_copies(%struct.ira_allocno* %a) local_unnamed_addr #5 !dbg !3390 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !3392, metadata !DIExpression()), !dbg !3393
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3394
  tail call fastcc void @print_allocno_copies(%struct._IO_FILE* %0, %struct.ira_allocno* %a) #7, !dbg !3395
  ret void, !dbg !3396
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_allocno_copies(%struct._IO_FILE* %f, %struct.ira_allocno* %a) unnamed_addr #5 !dbg !3397 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3401, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !3402, metadata !DIExpression()), !dbg !3406
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 0, !dbg !3407
  %0 = load i32, i32* %num, align 8, !dbg !3407
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 1, !dbg !3408
  %1 = load i32, i32* %regno, align 4, !dbg !3408
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i32 %0, i32 %1) #6, !dbg !3409
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 15, !dbg !3410
  %2 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !3410
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %2, metadata !3404, metadata !DIExpression()), !dbg !3406
  br label %for.cond, !dbg !3412

for.cond:                                         ; preds = %if.end7, %entry
  %another_a.0 = phi %struct.ira_allocno* [ undef, %entry ], [ %another_a.2, %if.end7 ]
  %cp.0 = phi %struct.ira_allocno_copy* [ %2, %entry ], [ %next_cp.2, %if.end7 ], !dbg !3413
  %next_cp.0 = phi %struct.ira_allocno_copy* [ undef, %entry ], [ %next_cp.2, %if.end7 ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.0, metadata !3405, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0, metadata !3404, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_a.0, metadata !3403, metadata !DIExpression()), !dbg !3406
  %cmp = icmp eq %struct.ira_allocno_copy* %cp.0, null, !dbg !3414
  br i1 %cmp, label %for.end, label %for.body, !dbg !3416

for.body:                                         ; preds = %for.cond
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 1, !dbg !3417
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !3417
  %cmp1 = icmp eq %struct.ira_allocno* %3, %a, !dbg !3420
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3421

if.then:                                          ; preds = %for.body
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 7, !dbg !3422
  %4 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !3422
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %4, metadata !3405, metadata !DIExpression()), !dbg !3406
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3424
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !3424
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !3403, metadata !DIExpression()), !dbg !3406
  br label %if.end7, !dbg !3425

if.else:                                          ; preds = %for.body
  %second2 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3426
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %second2, align 8, !dbg !3426
  %cmp3 = icmp eq %struct.ira_allocno* %6, %a, !dbg !3428
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !3429

if.then4:                                         ; preds = %if.else
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 9, !dbg !3430
  %7 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !3430
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %7, metadata !3405, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !3403, metadata !DIExpression()), !dbg !3406
  br label %if.end7, !dbg !3432

if.else6:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 1268, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3433
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.else6, %if.then
  %another_a.2 = phi %struct.ira_allocno* [ %5, %if.then ], [ %3, %if.then4 ], [ %another_a.0, %if.else6 ], !dbg !3434
  %next_cp.2 = phi %struct.ira_allocno_copy* [ %4, %if.then ], [ %7, %if.then4 ], [ %next_cp.0, %if.else6 ], !dbg !3434
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.2, metadata !3405, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_a.2, metadata !3403, metadata !DIExpression()), !dbg !3406
  %num8 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 0, !dbg !3435
  %8 = load i32, i32* %num8, align 8, !dbg !3435
  %num9 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_a.2, i64 0, i32 0, !dbg !3436
  %9 = load i32, i32* %num9, align 8, !dbg !3436
  %regno10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_a.2, i64 0, i32 1, !dbg !3437
  %10 = load i32, i32* %regno10, align 4, !dbg !3437
  %freq = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 3, !dbg !3438
  %11 = load i32, i32* %freq, align 8, !dbg !3438
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i32 %8, i32 %9, i32 %10, i32 %11) #6, !dbg !3439
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.2, metadata !3404, metadata !DIExpression()), !dbg !3406
  br label %for.cond, !dbg !3440, !llvm.loop !3441

for.end:                                          ; preds = %for.cond
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !3443
  ret void, !dbg !3444
}

; Function Attrs: nounwind uwtable
define dso_local i32* @ira_allocate_cost_vector(i32 %cover_class) local_unnamed_addr #5 !dbg !3445 {
entry:
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !3449, metadata !DIExpression()), !dbg !3450
  %idxprom = zext i32 %cover_class to i64, !dbg !3451
  %arrayidx = getelementptr inbounds [27 x %struct.alloc_pool_def*], [27 x %struct.alloc_pool_def*]* @cost_vector_pool, i64 0, i64 %idxprom, !dbg !3451
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %arrayidx, align 8, !dbg !3451
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !3452
  %1 = bitcast i8* %call to i32*, !dbg !3453
  ret i32* %1, !dbg !3454
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_traverse_loop_tree(i8 zeroext %bb_p, %struct.ira_loop_tree_node* %loop_node, void (%struct.ira_loop_tree_node*)* %preorder_func, void (%struct.ira_loop_tree_node*)* %postorder_func) local_unnamed_addr #5 !dbg !3455 {
entry:
  call void @llvm.dbg.value(metadata i8 %bb_p, metadata !3462, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_node, metadata !3463, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata void (%struct.ira_loop_tree_node*)* %preorder_func, metadata !3464, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata void (%struct.ira_loop_tree_node*)* %postorder_func, metadata !3465, metadata !DIExpression()), !dbg !3467
  store %struct.ira_loop_tree_node* %loop_node, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !3468
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 9, !dbg !3469
  %0 = bitcast %struct.ira_allocno*** %regno_allocno_map to i64*, !dbg !3469
  %1 = load i64, i64* %0, align 8, !dbg !3469
  store i64 %1, i64* bitcast (%struct.ira_allocno*** @ira_curr_regno_allocno_map to i64*), align 8, !dbg !3470
  %cmp = icmp eq void (%struct.ira_loop_tree_node*)* %preorder_func, null, !dbg !3471
  br i1 %cmp, label %if.end, label %if.then, !dbg !3473

if.then:                                          ; preds = %entry
  tail call void %preorder_func(%struct.ira_loop_tree_node* %loop_node) #6, !dbg !3474
  br label %if.end, !dbg !3474

if.end:                                           ; preds = %entry, %if.then
  %tobool = icmp eq i8 %bb_p, 0, !dbg !3475
  br i1 %tobool, label %if.end12, label %if.then1, !dbg !3477

if.then1:                                         ; preds = %if.end
  %children = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 5, !dbg !3478
  %cmp8 = icmp eq void (%struct.ira_loop_tree_node*)* %postorder_func, null, !dbg !3480
  br i1 %cmp, label %if.then1.split.us, label %if.then1.if.then1.split_crit_edge, !dbg !3485

if.then1.if.then1.split_crit_edge:                ; preds = %if.then1
  br label %for.cond, !dbg !3485

if.then1.split.us:                                ; preds = %if.then1
  br i1 %cmp8, label %if.then1.split.us.split.us, label %if.then1.split.us.if.then1.split.us.split_crit_edge, !dbg !3485

if.then1.split.us.if.then1.split.us.split_crit_edge: ; preds = %if.then1.split.us
  br label %for.cond.us, !dbg !3485

if.then1.split.us.split.us:                       ; preds = %if.then1.split.us
  br label %for.cond.us.us, !dbg !3485

for.cond.us.us:                                   ; preds = %for.inc.us.us, %if.then1.split.us.split.us
  %subloop_node.0.in.us.us = phi %struct.ira_loop_tree_node** [ %children, %if.then1.split.us.split.us ], [ %next.us.us, %for.inc.us.us ]
  %subloop_node.0.us.us = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.0.in.us.us, align 8, !dbg !3486
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.0.us.us, metadata !3466, metadata !DIExpression()), !dbg !3467
  %cmp2.us.us = icmp eq %struct.ira_loop_tree_node* %subloop_node.0.us.us, null, !dbg !3487
  br i1 %cmp2.us.us, label %if.end12.loopexit.us-lcssa.us.us-lcssa.us, label %for.body.us.us, !dbg !3488

for.body.us.us:                                   ; preds = %for.cond.us.us
  br label %for.inc.us.us, !dbg !3489

if.then4.us.us:                                   ; No predecessors!
  unreachable, !dbg !3490

for.inc.us.us:                                    ; preds = %for.body.us.us
  %next.us.us = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0.us.us, i64 0, i32 3, !dbg !3491
  br label %for.cond.us.us, !dbg !3492, !llvm.loop !3493

if.end12.loopexit.us-lcssa.us.us-lcssa.us:        ; preds = %for.cond.us.us
  br label %if.end12.loopexit.us-lcssa.us, !dbg !3495

for.cond.us:                                      ; preds = %for.inc.us, %if.then1.split.us.if.then1.split.us.split_crit_edge
  %subloop_node.0.in.us = phi %struct.ira_loop_tree_node** [ %children, %if.then1.split.us.if.then1.split.us.split_crit_edge ], [ %next.us, %for.inc.us ]
  %subloop_node.0.us = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.0.in.us, align 8, !dbg !3486
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.0.us, metadata !3466, metadata !DIExpression()), !dbg !3467
  %cmp2.us = icmp eq %struct.ira_loop_tree_node* %subloop_node.0.us, null, !dbg !3487
  br i1 %cmp2.us, label %if.end12.loopexit.us-lcssa.us.us-lcssa, label %for.body.us, !dbg !3488

for.body.us:                                      ; preds = %for.cond.us
  %bb.us = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0.us, i64 0, i32 0, !dbg !3497
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.us, align 8, !dbg !3497
  %cmp3.us = icmp eq %struct.basic_block_def* %2, null, !dbg !3498
  br i1 %cmp3.us, label %for.inc.us, label %if.then4.us, !dbg !3489

if.then4.us:                                      ; preds = %for.body.us
  tail call void %postorder_func(%struct.ira_loop_tree_node* nonnull %subloop_node.0.us) #6, !dbg !3499
  br label %for.inc.us, !dbg !3499

for.inc.us:                                       ; preds = %if.then4.us, %for.body.us
  %next.us = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0.us, i64 0, i32 3, !dbg !3491
  br label %for.cond.us, !dbg !3492, !llvm.loop !3493

if.end12.loopexit.us-lcssa.us.us-lcssa:           ; preds = %for.cond.us
  br label %if.end12.loopexit.us-lcssa.us, !dbg !3495

if.end12.loopexit.us-lcssa.us:                    ; preds = %if.end12.loopexit.us-lcssa.us.us-lcssa.us, %if.end12.loopexit.us-lcssa.us.us-lcssa
  br label %if.end12.loopexit, !dbg !3495

for.cond:                                         ; preds = %for.inc, %if.then1.if.then1.split_crit_edge
  %subloop_node.0.in = phi %struct.ira_loop_tree_node** [ %children, %if.then1.if.then1.split_crit_edge ], [ %next, %for.inc ]
  %subloop_node.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.0.in, align 8, !dbg !3486
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.0, metadata !3466, metadata !DIExpression()), !dbg !3467
  %cmp2 = icmp eq %struct.ira_loop_tree_node* %subloop_node.0, null, !dbg !3487
  br i1 %cmp2, label %if.end12.loopexit.us-lcssa, label %for.body, !dbg !3488

for.body:                                         ; preds = %for.cond
  %bb = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 0, !dbg !3497
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3497
  %cmp3 = icmp eq %struct.basic_block_def* %3, null, !dbg !3498
  br i1 %cmp3, label %for.inc, label %if.then4, !dbg !3489

if.then4:                                         ; preds = %for.body
  tail call void %preorder_func(%struct.ira_loop_tree_node* nonnull %subloop_node.0) #6, !dbg !3500
  br i1 %cmp8, label %for.inc, label %if.then9, !dbg !3490

if.then9:                                         ; preds = %if.then4
  tail call void %postorder_func(%struct.ira_loop_tree_node* nonnull %subloop_node.0) #6, !dbg !3499
  br label %for.inc, !dbg !3499

for.inc:                                          ; preds = %if.then4, %for.body, %if.then9
  %next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 3, !dbg !3491
  br label %for.cond, !dbg !3492, !llvm.loop !3493

if.end12.loopexit.us-lcssa:                       ; preds = %for.cond
  br label %if.end12.loopexit, !dbg !3495

if.end12.loopexit:                                ; preds = %if.end12.loopexit.us-lcssa.us, %if.end12.loopexit.us-lcssa
  br label %if.end12, !dbg !3495

if.end12:                                         ; preds = %if.end12.loopexit, %if.end
  %subloops = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 4, !dbg !3495
  br label %for.cond13, !dbg !3502

for.cond13:                                       ; preds = %for.body15, %if.end12
  %subloop_node.1.in = phi %struct.ira_loop_tree_node** [ %subloops, %if.end12 ], [ %subloop_next, %for.body15 ]
  %subloop_node.1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.1.in, align 8, !dbg !3503
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.1, metadata !3466, metadata !DIExpression()), !dbg !3467
  %cmp14 = icmp eq %struct.ira_loop_tree_node* %subloop_node.1, null, !dbg !3504
  br i1 %cmp14, label %for.end17, label %for.body15, !dbg !3506

for.body15:                                       ; preds = %for.cond13
  tail call void @ira_traverse_loop_tree(i8 zeroext %bb_p, %struct.ira_loop_tree_node* nonnull %subloop_node.1, void (%struct.ira_loop_tree_node*)* %preorder_func, void (%struct.ira_loop_tree_node*)* %postorder_func) #7, !dbg !3507
  %subloop_next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.1, i64 0, i32 2, !dbg !3509
  br label %for.cond13, !dbg !3510, !llvm.loop !3511

for.end17:                                        ; preds = %for.cond13
  store %struct.ira_loop_tree_node* %loop_node, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !3513
  %4 = load i64, i64* %0, align 8, !dbg !3514
  store i64 %4, i64* bitcast (%struct.ira_allocno*** @ira_curr_regno_allocno_map to i64*), align 8, !dbg !3515
  %cmp19 = icmp eq void (%struct.ira_loop_tree_node*)* %postorder_func, null, !dbg !3516
  br i1 %cmp19, label %if.end21, label %if.then20, !dbg !3518

if.then20:                                        ; preds = %for.end17
  tail call void %postorder_func(%struct.ira_loop_tree_node* %loop_node) #6, !dbg !3519
  br label %if.end21, !dbg !3519

if.end21:                                         ; preds = %for.end17, %if.then20
  ret void, !dbg !3520
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_flattening(i32 %max_regno_before_emit, i32 %ira_max_point_before_emit) local_unnamed_addr #5 !dbg !3521 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %cp = alloca %struct.ira_allocno_copy*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %ci = alloca %struct.ira_copy_iterator, align 4
  call void @llvm.dbg.value(metadata i32 %max_regno_before_emit, metadata !3525, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %ira_max_point_before_emit, metadata !3526, metadata !DIExpression()), !dbg !3580
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !3581
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3581
  %1 = bitcast %struct.ira_allocno_copy** %cp to i8*, !dbg !3582
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3582
  %2 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !3583
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !3583
  %3 = bitcast %struct.ira_copy_iterator* %ci to i8*, !dbg !3584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8, !dbg !3584
  %call = tail call i32 @max_reg_num() #6, !dbg !3585
  %conv = sext i32 %call to i64, !dbg !3585
  %mul = shl nsw i64 %conv, 3, !dbg !3586
  %call1 = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !3587
  store i8* %call1, i8** bitcast (%struct.ira_allocno*** @regno_top_level_allocno_map to i8**), align 8, !dbg !3588
  %call2 = tail call i32 @max_reg_num() #6, !dbg !3589
  %conv3 = sext i32 %call2 to i64, !dbg !3589
  %mul4 = shl nsw i64 %conv3, 3, !dbg !3590
  %call5 = tail call i8* @memset(i8* %call1, i32 0, i64 %mul4) #6, !dbg !3591
  call void @llvm.dbg.value(metadata i8 0, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 0, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !3592
  br label %for.cond, !dbg !3592

for.cond:                                         ; preds = %for.cond.backedge, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !3537, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  %call6 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !3594
  %tobool = icmp eq i8 %call6, 0, !dbg !3592
  br i1 %tobool, label %for.end, label %for.body, !dbg !3592

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3596
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 17, !dbg !3596
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !3596
  %cmp = icmp eq %struct.ira_allocno* %5, null, !dbg !3599
  br i1 %cmp, label %if.end, label %for.cond.backedge, !dbg !3600

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !3537, metadata !DIExpression()), !dbg !3580
  %conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 26, !dbg !3601
  %6 = load i64, i64* %conflict_hard_regs, align 8, !dbg !3601
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !3537, metadata !DIExpression()), !dbg !3580
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 27, !dbg !3601
  store i64 %6, i64* %total_conflict_hard_regs, align 8, !dbg !3601
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !3537, metadata !DIExpression()), !dbg !3580
  %no_stack_reg_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 31, !dbg !3602
  %bf.load = load i16, i16* %no_stack_reg_p, align 4, !dbg !3602
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !3537, metadata !DIExpression()), !dbg !3580
  %7 = shl i16 %bf.load, 1, !dbg !3603
  %bf.shl = and i16 %7, 32, !dbg !3603
  %bf.clear9 = and i16 %bf.load, -33, !dbg !3603
  %bf.set = or i16 %bf.clear9, %bf.shl, !dbg !3603
  store i16 %bf.set, i16* %no_stack_reg_p, align 4, !dbg !3603
  br label %for.cond.backedge, !dbg !3594

for.cond.backedge:                                ; preds = %if.end, %for.body
  br label %for.cond, !dbg !3580, !llvm.loop !3604

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %max_regno_before_emit, metadata !3527, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3580
  %8 = bitcast %struct.ira_allocno** %a to i64*, !dbg !3606
  %9 = sext i32 %max_regno_before_emit to i64, !dbg !3611
  br label %for.cond10, !dbg !3611

for.cond10:                                       ; preds = %for.inc193, %for.end
  %indvars.iv23 = phi i64 [ %indvars.iv.next24, %for.inc193 ], [ %9, %for.end ], !dbg !3580
  %merged_p.0 = phi i8 [ %merged_p.3, %for.inc193 ], [ 0, %for.end ], !dbg !3580
  %new_pseudos_p.0 = phi i8 [ %new_pseudos_p.1.lcssa, %for.inc193 ], [ 0, %for.end ], !dbg !3612
  %indvars.iv.next24 = add nsw i64 %indvars.iv23, -1, !dbg !3613
  call void @llvm.dbg.value(metadata i32 undef, metadata !3527, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.0, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.0, metadata !3533, metadata !DIExpression()), !dbg !3580
  %cmp11 = icmp sgt i64 %indvars.iv.next24, 52, !dbg !3614
  br i1 %cmp11, label %for.body13, label %for.end194, !dbg !3615

for.body13:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i8 0, metadata !3534, metadata !DIExpression()), !dbg !3580
  %10 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !3616
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %10, i64 %indvars.iv.next24, !dbg !3616
  %11 = bitcast %struct.ira_allocno** %arrayidx to i64*, !dbg !3616
  %12 = load i64, i64* %11, align 8, !dbg !3616
  store i64 %12, i64* %8, align 8, !dbg !3617
  %13 = inttoptr i64 %12 to %struct.ira_allocno*, !dbg !3618
  br label %for.cond14, !dbg !3618

for.cond14:                                       ; preds = %for.inc183, %for.body13
  %14 = phi %struct.ira_allocno* [ %13, %for.body13 ], [ %102, %for.inc183 ]
  %15 = phi %struct.ira_allocno* [ %13, %for.body13 ], [ %102, %for.inc183 ]
  %16 = phi %struct.ira_allocno* [ %13, %for.body13 ], [ %102, %for.inc183 ]
  %17 = phi %struct.ira_allocno* [ %13, %for.body13 ], [ %102, %for.inc183 ]
  %18 = phi %struct.ira_allocno* [ %13, %for.body13 ], [ %102, %for.inc183 ]
  %19 = phi %struct.ira_allocno* [ %13, %for.body13 ], [ %102, %for.inc183 ], !dbg !3619
  %mem_dest_p.0 = phi i8 [ 0, %for.body13 ], [ %mem_dest_p.2, %for.inc183 ], !dbg !3621
  %merged_p.1 = phi i8 [ %merged_p.0, %for.body13 ], [ %merged_p.2, %for.inc183 ], !dbg !3622
  %new_pseudos_p.1 = phi i8 [ %new_pseudos_p.0, %for.body13 ], [ %new_pseudos_p.3, %for.inc183 ], !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.1, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.1, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %mem_dest_p.0, metadata !3534, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cmp15 = icmp eq %struct.ira_allocno* %19, null, !dbg !3623
  br i1 %cmp15, label %for.end184, label %for.body17, !dbg !3624

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !3537, metadata !DIExpression()), !dbg !3580
  %somewhere_renamed_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 31, !dbg !3625
  %bf.load18 = load i16, i16* %somewhere_renamed_p, align 4, !dbg !3625
  %bf.clear20 = and i16 %bf.load18, 2, !dbg !3625
  %tobool22 = icmp eq i16 %bf.clear20, 0, !dbg !3625
  %spec.select = select i1 %tobool22, i8 %new_pseudos_p.1, i8 1, !dbg !3628
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cap = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 16, !dbg !3629
  %20 = load %struct.ira_allocno*, %struct.ira_allocno** %cap, align 8, !dbg !3629
  %cmp25 = icmp eq %struct.ira_allocno* %20, null, !dbg !3631
  br i1 %cmp25, label %lor.lhs.false, label %if.then35, !dbg !3632

lor.lhs.false:                                    ; preds = %for.body17
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !3537, metadata !DIExpression()), !dbg !3580
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 6, !dbg !3633
  %21 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !3633
  %parent27 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %21, i64 0, i32 6, !dbg !3634
  %22 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent27, align 8, !dbg !3634
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %22, metadata !3544, metadata !DIExpression()), !dbg !3580
  %cmp28 = icmp eq %struct.ira_loop_tree_node* %22, null, !dbg !3635
  br i1 %cmp28, label %if.then35, label %lor.lhs.false30, !dbg !3636

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %22, i64 0, i32 9, !dbg !3637
  %23 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !3637
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %16, metadata !3537, metadata !DIExpression()), !dbg !3580
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 1, !dbg !3638
  %24 = load i32, i32* %regno, align 4, !dbg !3638
  %idxprom31 = sext i32 %24 to i64, !dbg !3639
  %arrayidx32 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %23, i64 %idxprom31, !dbg !3639
  %25 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx32, align 8, !dbg !3639
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %25, metadata !3538, metadata !DIExpression()), !dbg !3580
  %cmp33 = icmp eq %struct.ira_allocno* %25, null, !dbg !3640
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !3641

if.then35:                                        ; preds = %for.body17, %lor.lhs.false30, %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !3537, metadata !DIExpression()), !dbg !3580
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 15, !dbg !3642
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !3644
  %.cast10 = ptrtoint %struct.ira_allocno* %14 to i64, !dbg !3645
  %26 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !3646
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 4, !dbg !3647
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !3647
  %call36 = call fastcc i32 @rhs_regno(%struct.rtx_def* %27) #7, !dbg !3647
  %idxprom37 = zext i32 %call36 to i64, !dbg !3646
  %arrayidx38 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %26, i64 %idxprom37, !dbg !3646
  %28 = bitcast %struct.ira_allocno** %arrayidx38 to i64*, !dbg !3648
  store i64 %.cast10, i64* %28, align 8, !dbg !3648
  br label %for.inc183, !dbg !3649

if.end39:                                         ; preds = %lor.lhs.false30
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %15, metadata !3537, metadata !DIExpression()), !dbg !3580
  %mem_optimized_dest = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %15, i64 0, i32 32, !dbg !3650
  %29 = load %struct.ira_allocno*, %struct.ira_allocno** %mem_optimized_dest, align 8, !dbg !3650
  %cmp40 = icmp eq %struct.ira_allocno* %29, null, !dbg !3652
  %spec.select1 = select i1 %cmp40, i8 %mem_dest_p.0, i8 1, !dbg !3653
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !3534, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %15, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg44 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %15, i64 0, i32 4, !dbg !3654
  %30 = load %struct.rtx_def*, %struct.rtx_def** %reg44, align 8, !dbg !3654
  %call45 = call fastcc i32 @rhs_regno(%struct.rtx_def* %30) #7, !dbg !3654
  %reg46 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 4, !dbg !3656
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg46, align 8, !dbg !3656
  %call47 = call fastcc i32 @rhs_regno(%struct.rtx_def* %31) #7, !dbg !3656
  %cmp48 = icmp eq i32 %call45, %call47, !dbg !3657
  br i1 %cmp48, label %if.then50, label %for.cond100.preheader, !dbg !3658

for.cond100.preheader:                            ; preds = %if.end39
  %.pre15 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3659
  br label %for.cond100, !dbg !3663

if.then50:                                        ; preds = %if.end39
  %32 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3664
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %32, metadata !3537, metadata !DIExpression()), !dbg !3580
  %total_conflict_hard_regs51 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %32, i64 0, i32 27, !dbg !3664
  %33 = load i64, i64* %total_conflict_hard_regs51, align 8, !dbg !3664
  %total_conflict_hard_regs52 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 27, !dbg !3664
  %34 = load i64, i64* %total_conflict_hard_regs52, align 8, !dbg !3664
  %or = or i64 %34, %33, !dbg !3664
  store i64 %or, i64* %total_conflict_hard_regs52, align 8, !dbg !3664
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %32, metadata !3537, metadata !DIExpression()), !dbg !3580
  %total_no_stack_reg_p53 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %32, i64 0, i32 31, !dbg !3666
  %bf.load54 = load i16, i16* %total_no_stack_reg_p53, align 4, !dbg !3666
  %bf.clear56 = and i16 %bf.load54, 32, !dbg !3666
  %tobool58 = icmp eq i16 %bf.clear56, 0, !dbg !3666
  br i1 %tobool58, label %if.end64, label %if.then59, !dbg !3668

if.then59:                                        ; preds = %if.then50
  %total_no_stack_reg_p60 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 31, !dbg !3669
  %bf.load61 = load i16, i16* %total_no_stack_reg_p60, align 4, !dbg !3670
  %bf.set63 = or i16 %bf.load61, 32, !dbg !3670
  store i16 %bf.set63, i16* %total_no_stack_reg_p60, align 4, !dbg !3670
  br label %if.end64, !dbg !3669

if.end64:                                         ; preds = %if.then50, %if.then59
  %35 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3671
  %cmp65 = icmp sgt i32 %35, 4, !dbg !3673
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3674
  %cmp67 = icmp ne %struct._IO_FILE* %36, null, !dbg !3675
  %or.cond = and i1 %cmp65, %cmp67, !dbg !3676
  br i1 %or.cond, label %if.then69, label %if.end77, !dbg !3676

if.then69:                                        ; preds = %if.end64
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %32, metadata !3537, metadata !DIExpression()), !dbg !3580
  %num70 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %32, i64 0, i32 0, !dbg !3677
  %37 = load i32, i32* %num70, align 8, !dbg !3677
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %32, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg71 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %32, i64 0, i32 4, !dbg !3679
  %38 = load %struct.rtx_def*, %struct.rtx_def** %reg71, align 8, !dbg !3679
  %call72 = call fastcc i32 @rhs_regno(%struct.rtx_def* %38) #7, !dbg !3679
  %num73 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 0, !dbg !3680
  %39 = load i32, i32* %num73, align 8, !dbg !3680
  %40 = load %struct.rtx_def*, %struct.rtx_def** %reg46, align 8, !dbg !3681
  %call75 = call fastcc i32 @rhs_regno(%struct.rtx_def* %40) #7, !dbg !3681
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %36, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 %37, i32 %call72, i32 %39, i32 %call75) #6, !dbg !3682
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3683
  %42 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3684
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %42, metadata !3537, metadata !DIExpression()), !dbg !3580
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %42, i64 0, i32 20, !dbg !3684
  %43 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !3684
  call void @ira_print_live_range_list(%struct._IO_FILE* %41, %struct.ira_allocno_live_range* %43) #6, !dbg !3685
  %.pre18 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3686
  br label %if.end77, !dbg !3687

if.end77:                                         ; preds = %if.then69, %if.end64
  %44 = phi %struct.ira_allocno* [ %.pre18, %if.then69 ], [ %32, %if.end64 ], !dbg !3686
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %44, metadata !3537, metadata !DIExpression()), !dbg !3580
  %live_ranges78 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %44, i64 0, i32 20, !dbg !3686
  %45 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges78, align 8, !dbg !3686
  call fastcc void @change_allocno_in_range_list(%struct.ira_allocno_live_range* %45, %struct.ira_allocno* nonnull %25) #7, !dbg !3688
  %46 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3689
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %46, metadata !3537, metadata !DIExpression()), !dbg !3580
  %live_ranges79 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %46, i64 0, i32 20, !dbg !3689
  %47 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges79, align 8, !dbg !3689
  %live_ranges80 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 20, !dbg !3690
  %48 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges80, align 8, !dbg !3690
  %call81 = call %struct.ira_allocno_live_range* @ira_merge_allocno_live_ranges(%struct.ira_allocno_live_range* %47, %struct.ira_allocno_live_range* %48) #7, !dbg !3691
  store %struct.ira_allocno_live_range* %call81, %struct.ira_allocno_live_range** %live_ranges80, align 8, !dbg !3692
  call void @llvm.dbg.value(metadata i8 1, metadata !3533, metadata !DIExpression()), !dbg !3580
  %49 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3693
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %49, metadata !3537, metadata !DIExpression()), !dbg !3580
  %live_ranges83 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %49, i64 0, i32 20, !dbg !3693
  store %struct.ira_allocno_live_range* null, %struct.ira_allocno_live_range** %live_ranges83, align 8, !dbg !3694
  %mem_optimized_dest_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 31, !dbg !3695
  %bf.load84 = load i16, i16* %mem_optimized_dest_p, align 4, !dbg !3695
  %bf.clear85 = and i16 %bf.load84, 1, !dbg !3695
  %tobool87 = icmp eq i16 %bf.clear85, 0, !dbg !3695
  br i1 %tobool87, label %lor.rhs, label %lor.end, !dbg !3696

lor.rhs:                                          ; preds = %if.end77
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %49, metadata !3537, metadata !DIExpression()), !dbg !3580
  %mem_optimized_dest_p88 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %49, i64 0, i32 31, !dbg !3697
  %bf.load89 = load i16, i16* %mem_optimized_dest_p88, align 4, !dbg !3697
  %bf.clear90 = and i16 %bf.load89, 1, !dbg !3697
  %tobool92 = icmp ne i16 %bf.clear90, 0, !dbg !3696
  br label %lor.end, !dbg !3696

lor.end:                                          ; preds = %if.end77, %lor.rhs
  %50 = phi i1 [ true, %if.end77 ], [ %tobool92, %lor.rhs ]
  %51 = zext i1 %50 to i16, !dbg !3698
  %bf.clear96 = and i16 %bf.load84, -2, !dbg !3698
  %bf.set97 = or i16 %bf.clear96, %51, !dbg !3698
  store i16 %bf.set97, i16* %mem_optimized_dest_p, align 4, !dbg !3698
  br label %for.inc183, !dbg !3699

for.cond100:                                      ; preds = %for.cond100.preheader, %lor.lhs.false168
  %52 = phi %struct.ira_allocno* [ %84, %lor.lhs.false168 ], [ %.pre15, %for.cond100.preheader ]
  %53 = phi %struct.ira_allocno* [ %84, %lor.lhs.false168 ], [ %.pre15, %for.cond100.preheader ], !dbg !3700
  %parent_a.0 = phi %struct.ira_allocno* [ %95, %lor.lhs.false168 ], [ %25, %for.cond100.preheader ], !dbg !3702
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %parent_a.0, metadata !3538, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %53, metadata !3537, metadata !DIExpression()), !dbg !3580
  %nrefs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %53, i64 0, i32 7, !dbg !3659
  %54 = load i32, i32* %nrefs, align 8, !dbg !3659
  %nrefs101 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 7, !dbg !3703
  %55 = load i32, i32* %nrefs101, align 8, !dbg !3704
  %sub102 = sub nsw i32 %55, %54, !dbg !3704
  store i32 %sub102, i32* %nrefs101, align 8, !dbg !3704
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %53, metadata !3537, metadata !DIExpression()), !dbg !3580
  %freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %53, i64 0, i32 8, !dbg !3705
  %56 = load i32, i32* %freq, align 4, !dbg !3705
  %freq103 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 8, !dbg !3706
  %57 = load i32, i32* %freq103, align 4, !dbg !3707
  %sub104 = sub nsw i32 %57, %56, !dbg !3707
  store i32 %sub104, i32* %freq103, align 4, !dbg !3707
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %53, metadata !3537, metadata !DIExpression()), !dbg !3580
  %call_freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %53, i64 0, i32 29, !dbg !3708
  %58 = load i32, i32* %call_freq, align 4, !dbg !3708
  %call_freq105 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 29, !dbg !3709
  %59 = load i32, i32* %call_freq105, align 4, !dbg !3710
  %sub106 = sub nsw i32 %59, %58, !dbg !3710
  store i32 %sub106, i32* %call_freq105, align 4, !dbg !3710
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %53, metadata !3537, metadata !DIExpression()), !dbg !3580
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %53, i64 0, i32 30, !dbg !3711
  %60 = load i32, i32* %calls_crossed_num, align 8, !dbg !3711
  %calls_crossed_num107 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 30, !dbg !3712
  %61 = load i32, i32* %calls_crossed_num107, align 8, !dbg !3713
  %sub108 = sub nsw i32 %61, %60, !dbg !3713
  store i32 %sub108, i32* %calls_crossed_num107, align 8, !dbg !3713
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %53, metadata !3537, metadata !DIExpression()), !dbg !3580
  %excess_pressure_points_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %53, i64 0, i32 14, !dbg !3714
  %62 = load i32, i32* %excess_pressure_points_num, align 4, !dbg !3714
  %excess_pressure_points_num109 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 14, !dbg !3715
  %63 = load i32, i32* %excess_pressure_points_num109, align 4, !dbg !3716
  %sub110 = sub nsw i32 %63, %62, !dbg !3716
  store i32 %sub110, i32* %excess_pressure_points_num109, align 4, !dbg !3716
  %cover_class111 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 9, !dbg !3717
  %64 = load i32, i32* %cover_class111, align 8, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %64, metadata !3536, metadata !DIExpression()), !dbg !3580
  %idxprom112 = zext i32 %64 to i64, !dbg !3718
  %arrayidx113 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom112, !dbg !3718
  %65 = load i32, i32* %arrayidx113, align 4, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %65, metadata !3531, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %53, metadata !3537, metadata !DIExpression()), !dbg !3580
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %53, i64 0, i32 33, !dbg !3700
  %66 = load i32*, i32** %hard_reg_costs, align 8, !dbg !3700
  %cmp114 = icmp eq i32* %66, null, !dbg !3719
  br i1 %cmp114, label %if.end133, label %land.lhs.true116, !dbg !3720

land.lhs.true116:                                 ; preds = %for.cond100
  %hard_reg_costs117 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 33, !dbg !3721
  %67 = load i32*, i32** %hard_reg_costs117, align 8, !dbg !3721
  %cmp118 = icmp eq i32* %67, null, !dbg !3722
  br i1 %cmp118, label %if.end133, label %for.cond121.preheader, !dbg !3723

for.cond121.preheader:                            ; preds = %land.lhs.true116
  %68 = sext i32 %65 to i64, !dbg !3724
  br label %for.cond121, !dbg !3724

for.cond121:                                      ; preds = %for.cond121.preheader, %for.body124
  %indvars.iv19 = phi i64 [ 0, %for.cond121.preheader ], [ %indvars.iv.next20, %for.body124 ], !dbg !3726
  call void @llvm.dbg.value(metadata i64 %indvars.iv19, metadata !3528, metadata !DIExpression()), !dbg !3580
  %cmp122 = icmp slt i64 %indvars.iv19, %68, !dbg !3727
  br i1 %cmp122, label %for.body124, label %if.end133.loopexit, !dbg !3724

for.body124:                                      ; preds = %for.cond121
  %69 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3729
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %69, metadata !3537, metadata !DIExpression()), !dbg !3580
  %hard_reg_costs125 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %69, i64 0, i32 33, !dbg !3729
  %70 = load i32*, i32** %hard_reg_costs125, align 8, !dbg !3729
  %arrayidx127 = getelementptr inbounds i32, i32* %70, i64 %indvars.iv19, !dbg !3729
  %71 = load i32, i32* %arrayidx127, align 4, !dbg !3729
  %72 = load i32*, i32** %hard_reg_costs117, align 8, !dbg !3730
  %arrayidx130 = getelementptr inbounds i32, i32* %72, i64 %indvars.iv19, !dbg !3730
  %73 = load i32, i32* %arrayidx130, align 4, !dbg !3731
  %sub131 = sub nsw i32 %73, %71, !dbg !3731
  store i32 %sub131, i32* %arrayidx130, align 4, !dbg !3731
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !3732
  call void @llvm.dbg.value(metadata i32 undef, metadata !3528, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3580
  br label %for.cond121, !dbg !3733, !llvm.loop !3734

if.end133.loopexit:                               ; preds = %for.cond121
  %.pre16 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3736
  br label %if.end133, !dbg !3736

if.end133:                                        ; preds = %if.end133.loopexit, %land.lhs.true116, %for.cond100
  %74 = phi %struct.ira_allocno* [ %.pre16, %if.end133.loopexit ], [ %52, %land.lhs.true116 ], [ %52, %for.cond100 ]
  %75 = phi %struct.ira_allocno* [ %.pre16, %if.end133.loopexit ], [ %53, %land.lhs.true116 ], [ %53, %for.cond100 ], !dbg !3736
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %75, metadata !3537, metadata !DIExpression()), !dbg !3580
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %75, i64 0, i32 35, !dbg !3736
  %76 = load i32*, i32** %conflict_hard_reg_costs, align 8, !dbg !3736
  %cmp134 = icmp eq i32* %76, null, !dbg !3738
  br i1 %cmp134, label %if.end155, label %land.lhs.true136, !dbg !3739

land.lhs.true136:                                 ; preds = %if.end133
  %conflict_hard_reg_costs137 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 35, !dbg !3740
  %77 = load i32*, i32** %conflict_hard_reg_costs137, align 8, !dbg !3740
  %cmp138 = icmp eq i32* %77, null, !dbg !3741
  br i1 %cmp138, label %if.end155, label %for.cond141.preheader, !dbg !3742

for.cond141.preheader:                            ; preds = %land.lhs.true136
  %78 = sext i32 %65 to i64, !dbg !3743
  br label %for.cond141, !dbg !3743

for.cond141:                                      ; preds = %for.cond141.preheader, %for.body144
  %indvars.iv21 = phi i64 [ 0, %for.cond141.preheader ], [ %indvars.iv.next22, %for.body144 ], !dbg !3745
  call void @llvm.dbg.value(metadata i64 %indvars.iv21, metadata !3528, metadata !DIExpression()), !dbg !3580
  %cmp142 = icmp slt i64 %indvars.iv21, %78, !dbg !3746
  br i1 %cmp142, label %for.body144, label %if.end155.loopexit, !dbg !3743

for.body144:                                      ; preds = %for.cond141
  %79 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3748
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %79, metadata !3537, metadata !DIExpression()), !dbg !3580
  %conflict_hard_reg_costs145 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %79, i64 0, i32 35, !dbg !3748
  %80 = load i32*, i32** %conflict_hard_reg_costs145, align 8, !dbg !3748
  %arrayidx147 = getelementptr inbounds i32, i32* %80, i64 %indvars.iv21, !dbg !3748
  %81 = load i32, i32* %arrayidx147, align 4, !dbg !3748
  %82 = load i32*, i32** %conflict_hard_reg_costs137, align 8, !dbg !3749
  %arrayidx150 = getelementptr inbounds i32, i32* %82, i64 %indvars.iv21, !dbg !3749
  %83 = load i32, i32* %arrayidx150, align 4, !dbg !3750
  %sub151 = sub nsw i32 %83, %81, !dbg !3750
  store i32 %sub151, i32* %arrayidx150, align 4, !dbg !3750
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !3751
  call void @llvm.dbg.value(metadata i32 undef, metadata !3528, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3580
  br label %for.cond141, !dbg !3752, !llvm.loop !3753

if.end155.loopexit:                               ; preds = %for.cond141
  %.pre17 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3755
  br label %if.end155, !dbg !3755

if.end155:                                        ; preds = %if.end155.loopexit, %land.lhs.true136, %if.end133
  %84 = phi %struct.ira_allocno* [ %.pre17, %if.end155.loopexit ], [ %74, %land.lhs.true136 ], [ %74, %if.end133 ], !dbg !3756
  %85 = phi %struct.ira_allocno* [ %.pre17, %if.end155.loopexit ], [ %75, %land.lhs.true136 ], [ %75, %if.end133 ], !dbg !3755
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %85, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %85, i64 0, i32 10, !dbg !3755
  %86 = load i32, i32* %cover_class_cost, align 4, !dbg !3755
  %cover_class_cost156 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 10, !dbg !3757
  %87 = load i32, i32* %cover_class_cost156, align 4, !dbg !3758
  %sub157 = sub nsw i32 %87, %86, !dbg !3758
  store i32 %sub157, i32* %cover_class_cost156, align 4, !dbg !3758
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %84, metadata !3537, metadata !DIExpression()), !dbg !3580
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %84, i64 0, i32 12, !dbg !3756
  %88 = load i32, i32* %memory_cost, align 4, !dbg !3756
  %memory_cost158 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 12, !dbg !3759
  %89 = load i32, i32* %memory_cost158, align 4, !dbg !3760
  %sub159 = sub nsw i32 %89, %88, !dbg !3760
  store i32 %sub159, i32* %memory_cost158, align 4, !dbg !3760
  %cap160 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 16, !dbg !3761
  %90 = load %struct.ira_allocno*, %struct.ira_allocno** %cap160, align 8, !dbg !3761
  %cmp161 = icmp eq %struct.ira_allocno* %90, null, !dbg !3763
  br i1 %cmp161, label %lor.lhs.false163, label %for.end177, !dbg !3764

lor.lhs.false163:                                 ; preds = %if.end155
  %loop_tree_node164 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 6, !dbg !3765
  %91 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node164, align 8, !dbg !3765
  %parent165 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %91, i64 0, i32 6, !dbg !3766
  %92 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent165, align 8, !dbg !3766
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %92, metadata !3544, metadata !DIExpression()), !dbg !3580
  %cmp166 = icmp eq %struct.ira_loop_tree_node* %92, null, !dbg !3767
  br i1 %cmp166, label %for.end177, label %lor.lhs.false168, !dbg !3768

lor.lhs.false168:                                 ; preds = %lor.lhs.false163
  %regno_allocno_map169 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %92, i64 0, i32 9, !dbg !3769
  %93 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map169, align 8, !dbg !3769
  %regno170 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.0, i64 0, i32 1, !dbg !3770
  %94 = load i32, i32* %regno170, align 4, !dbg !3770
  %idxprom171 = sext i32 %94 to i64, !dbg !3771
  %arrayidx172 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %93, i64 %idxprom171, !dbg !3771
  %95 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx172, align 8, !dbg !3771
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %95, metadata !3538, metadata !DIExpression()), !dbg !3580
  %cmp173 = icmp eq %struct.ira_allocno* %95, null, !dbg !3772
  br i1 %cmp173, label %for.end177, label %for.cond100, !dbg !3773, !llvm.loop !3774

for.end177:                                       ; preds = %if.end155, %lor.lhs.false163, %lor.lhs.false168
  %.lcssa = phi %struct.ira_allocno* [ %84, %if.end155 ], [ %84, %lor.lhs.false163 ], [ %84, %lor.lhs.false168 ], !dbg !3756
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  %allocno_copies178 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.lcssa, i64 0, i32 15, !dbg !3776
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %allocno_copies178, align 8, !dbg !3777
  %.cast9 = ptrtoint %struct.ira_allocno* %.lcssa to i64, !dbg !3778
  %96 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !3779
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg179 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.lcssa, i64 0, i32 4, !dbg !3780
  %97 = load %struct.rtx_def*, %struct.rtx_def** %reg179, align 8, !dbg !3780
  %call180 = call fastcc i32 @rhs_regno(%struct.rtx_def* %97) #7, !dbg !3780
  %idxprom181 = zext i32 %call180 to i64, !dbg !3779
  %arrayidx182 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %96, i64 %idxprom181, !dbg !3779
  %98 = bitcast %struct.ira_allocno** %arrayidx182 to i64*, !dbg !3781
  store i64 %.cast9, i64* %98, align 8, !dbg !3781
  br label %for.inc183, !dbg !3782

for.inc183:                                       ; preds = %for.end177, %lor.end, %if.then35
  %mem_dest_p.2 = phi i8 [ %mem_dest_p.0, %if.then35 ], [ %spec.select1, %lor.end ], [ %spec.select1, %for.end177 ], !dbg !3783
  %merged_p.2 = phi i8 [ %merged_p.1, %if.then35 ], [ 1, %lor.end ], [ %merged_p.1, %for.end177 ], !dbg !3580
  %new_pseudos_p.3 = phi i8 [ %spec.select, %if.then35 ], [ %spec.select, %lor.end ], [ 1, %for.end177 ], !dbg !3702
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.3, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.2, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %mem_dest_p.2, metadata !3534, metadata !DIExpression()), !dbg !3580
  %99 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3784
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %99, metadata !3537, metadata !DIExpression()), !dbg !3580
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %99, i64 0, i32 5, !dbg !3784
  %100 = bitcast %struct.ira_allocno** %next_regno_allocno to i64*, !dbg !3784
  %101 = load i64, i64* %100, align 8, !dbg !3784
  store i64 %101, i64* %8, align 8, !dbg !3785
  %102 = inttoptr i64 %101 to %struct.ira_allocno*, !dbg !3786
  br label %for.cond14, !dbg !3786, !llvm.loop !3787

for.end184:                                       ; preds = %for.cond14
  %mem_dest_p.0.lcssa = phi i8 [ %mem_dest_p.0, %for.cond14 ], !dbg !3621
  %merged_p.1.lcssa = phi i8 [ %merged_p.1, %for.cond14 ], !dbg !3622
  %new_pseudos_p.1.lcssa = phi i8 [ %new_pseudos_p.1, %for.cond14 ], !dbg !3580
  call void @llvm.dbg.value(metadata i8 %mem_dest_p.0.lcssa, metadata !3534, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.1.lcssa, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.1.lcssa, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %mem_dest_p.0.lcssa, metadata !3534, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.1.lcssa, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.1.lcssa, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %mem_dest_p.0.lcssa, metadata !3534, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.1.lcssa, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.1.lcssa, metadata !3532, metadata !DIExpression()), !dbg !3580
  %tobool186 = icmp eq i8 %mem_dest_p.0.lcssa, 0, !dbg !3789
  br i1 %tobool186, label %for.inc193, label %land.lhs.true187, !dbg !3791

land.lhs.true187:                                 ; preds = %for.end184
  %103 = trunc i64 %indvars.iv.next24 to i32, !dbg !3792
  %call188 = call fastcc zeroext i8 @copy_info_to_removed_store_destinations(i32 %103) #7, !dbg !3792
  %tobool190 = icmp eq i8 %call188, 0, !dbg !3792
  %spec.select2 = select i1 %tobool190, i8 %merged_p.1.lcssa, i8 1, !dbg !3793
  br label %for.inc193, !dbg !3793

for.inc193:                                       ; preds = %for.end184, %land.lhs.true187
  %merged_p.3 = phi i8 [ %merged_p.1.lcssa, %for.end184 ], [ %spec.select2, %land.lhs.true187 ], !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.3, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 undef, metadata !3527, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3580
  br label %for.cond10, !dbg !3794, !llvm.loop !3795

for.end194:                                       ; preds = %for.cond10
  %merged_p.0.lcssa = phi i8 [ %merged_p.0, %for.cond10 ], !dbg !3580
  %new_pseudos_p.0.lcssa = phi i8 [ %new_pseudos_p.0, %for.cond10 ], !dbg !3612
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.0.lcssa, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.0.lcssa, metadata !3532, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !3533, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i8 %new_pseudos_p.0.lcssa, metadata !3532, metadata !DIExpression()), !dbg !3580
  %tobool196 = icmp ne i8 %merged_p.0.lcssa, 0, !dbg !3797
  %104 = load i32, i32* @ira_max_point, align 4, !dbg !3799
  %cmp198 = icmp ne i32 %104, %ira_max_point_before_emit, !dbg !3800
  %or.cond3 = or i1 %tobool196, %cmp198, !dbg !3801
  br i1 %or.cond3, label %if.then200, label %if.end201, !dbg !3801

if.then200:                                       ; preds = %for.end194
  call void @ira_rebuild_start_finish_chains() #6, !dbg !3802
  br label %if.end201, !dbg !3802

if.end201:                                        ; preds = %for.end194, %if.then200
  %tobool202 = icmp eq i8 %new_pseudos_p.0.lcssa, 0, !dbg !3803
  br i1 %tobool202, label %if.end294, label %if.then203, !dbg !3804

if.then203:                                       ; preds = %if.end201
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !3805
  br label %for.cond204, !dbg !3805

for.cond204:                                      ; preds = %for.cond204.backedge, %if.then203
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !3537, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  %call205 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !3807
  %tobool206 = icmp eq i8 %call205, 0, !dbg !3805
  br i1 %tobool206, label %for.end227, label %for.body207, !dbg !3805

for.body207:                                      ; preds = %for.cond204
  %105 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3809
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %105, metadata !3537, metadata !DIExpression()), !dbg !3580
  %106 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !3812
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %105, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg208 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %105, i64 0, i32 4, !dbg !3813
  %107 = load %struct.rtx_def*, %struct.rtx_def** %reg208, align 8, !dbg !3813
  %call209 = call fastcc i32 @rhs_regno(%struct.rtx_def* %107) #7, !dbg !3813
  %idxprom210 = zext i32 %call209 to i64, !dbg !3812
  %arrayidx211 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %106, i64 %idxprom210, !dbg !3812
  %108 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx211, align 8, !dbg !3812
  %cmp212 = icmp eq %struct.ira_allocno* %105, %108, !dbg !3814
  br i1 %cmp212, label %lor.lhs.false214, label %if.then218, !dbg !3815

lor.lhs.false214:                                 ; preds = %for.body207
  %109 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3816
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %109, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cap_member215 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %109, i64 0, i32 17, !dbg !3816
  %110 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member215, align 8, !dbg !3816
  %cmp216 = icmp eq %struct.ira_allocno* %110, null, !dbg !3817
  br i1 %cmp216, label %if.end219, label %if.then218, !dbg !3818

if.then218:                                       ; preds = %lor.lhs.false214, %for.body207
  br label %for.cond204.backedge, !dbg !3819

for.cond204.backedge:                             ; preds = %if.then218, %for.end226
  br label %for.cond204, !dbg !3580, !llvm.loop !3820

if.end219:                                        ; preds = %lor.lhs.false214
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %109, metadata !3537, metadata !DIExpression()), !dbg !3580
  %live_ranges220 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %109, i64 0, i32 20, !dbg !3822
  br label %for.cond221, !dbg !3824

for.cond221:                                      ; preds = %for.inc225, %if.end219
  %r.0.in = phi %struct.ira_allocno_live_range** [ %live_ranges220, %if.end219 ], [ %next, %for.inc225 ]
  %r.0 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.0.in, align 8, !dbg !3825
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0, metadata !3546, metadata !DIExpression()), !dbg !3580
  %cmp222 = icmp eq %struct.ira_allocno_live_range* %r.0, null, !dbg !3826
  br i1 %cmp222, label %for.end226, label %for.inc225, !dbg !3828

for.inc225:                                       ; preds = %for.cond221
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 3, !dbg !3829
  br label %for.cond221, !dbg !3830, !llvm.loop !3831

for.end226:                                       ; preds = %for.cond221
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %109, metadata !3537, metadata !DIExpression()), !dbg !3580
  call fastcc void @clear_allocno_conflicts(%struct.ira_allocno* %109) #7, !dbg !3833
  br label %for.cond204.backedge, !dbg !3807

for.end227:                                       ; preds = %for.cond204
  %111 = load i32, i32* @ira_allocnos_num, align 4, !dbg !3834
  %call228 = call %struct.sparseset_def* @sparseset_alloc(i32 %111) #6, !dbg !3835
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %call228, metadata !3553, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 0, metadata !3527, metadata !DIExpression()), !dbg !3580
  br label %for.cond229, !dbg !3836

for.cond229:                                      ; preds = %for.inc291, %for.end227
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc291 ], [ 0, %for.end227 ]
  %n.0 = phi i32 [ %n.1.lcssa, %for.inc291 ], [ undef, %for.end227 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3527, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !3535, metadata !DIExpression()), !dbg !3580
  %112 = load i32, i32* @ira_max_point, align 4, !dbg !3837
  %113 = sext i32 %112 to i64, !dbg !3838
  %cmp230 = icmp slt i64 %indvars.iv, %113, !dbg !3838
  br i1 %cmp230, label %for.body232, label %for.end293, !dbg !3839

for.body232:                                      ; preds = %for.cond229
  %114 = load %struct.ira_allocno_live_range**, %struct.ira_allocno_live_range*** @ira_start_point_ranges, align 8, !dbg !3840
  %arrayidx234 = getelementptr inbounds %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %114, i64 %indvars.iv, !dbg !3840
  br label %for.cond235, !dbg !3841

for.cond235:                                      ; preds = %for.inc279, %for.body232
  %n.1 = phi i32 [ %n.0, %for.body232 ], [ %n.4, %for.inc279 ]
  %r.1.in = phi %struct.ira_allocno_live_range** [ %arrayidx234, %for.body232 ], [ %start_next, %for.inc279 ]
  %r.1 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.1.in, align 8, !dbg !3842
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.1, metadata !3546, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !3535, metadata !DIExpression()), !dbg !3580
  %cmp236 = icmp eq %struct.ira_allocno_live_range* %r.1, null, !dbg !3843
  br i1 %cmp236, label %for.end280, label %for.body238, !dbg !3844

for.body238:                                      ; preds = %for.cond235
  %115 = bitcast %struct.ira_allocno_live_range* %r.1 to i64*, !dbg !3845
  %116 = load i64, i64* %115, align 8, !dbg !3845
  store i64 %116, i64* %8, align 8, !dbg !3846
  %.cast = inttoptr i64 %116 to %struct.ira_allocno*, !dbg !3847
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !3537, metadata !DIExpression()), !dbg !3580
  %117 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !3849
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg239 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 4, !dbg !3850
  %118 = load %struct.rtx_def*, %struct.rtx_def** %reg239, align 8, !dbg !3850
  %call240 = call fastcc i32 @rhs_regno(%struct.rtx_def* %118) #7, !dbg !3850
  %idxprom241 = zext i32 %call240 to i64, !dbg !3849
  %arrayidx242 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %117, i64 %idxprom241, !dbg !3849
  %119 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx242, align 8, !dbg !3849
  %cmp243 = icmp eq %struct.ira_allocno* %119, %.cast, !dbg !3851
  br i1 %cmp243, label %lor.lhs.false245, label %for.inc279, !dbg !3852

lor.lhs.false245:                                 ; preds = %for.body238
  %120 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3853
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %120, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cap_member246 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %120, i64 0, i32 17, !dbg !3853
  %121 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member246, align 8, !dbg !3853
  %cmp247 = icmp eq %struct.ira_allocno* %121, null, !dbg !3854
  br i1 %cmp247, label %if.end250, label %for.inc279, !dbg !3855

if.end250:                                        ; preds = %lor.lhs.false245
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %120, metadata !3537, metadata !DIExpression()), !dbg !3580
  %num251 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %120, i64 0, i32 0, !dbg !3856
  %122 = load i32, i32* %num251, align 8, !dbg !3856
  call void @llvm.dbg.value(metadata i32 %122, metadata !3529, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %120, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cover_class252 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %120, i64 0, i32 9, !dbg !3857
  %123 = load i32, i32* %cover_class252, align 8, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %123, metadata !3536, metadata !DIExpression()), !dbg !3580
  call fastcc void @sparseset_set_bit(%struct.sparseset_def* %call228, i32 %122) #7, !dbg !3858
  call fastcc void @sparseset_iter_init(%struct.sparseset_def* %call228) #7, !dbg !3859
  %idxprom265 = zext i32 %123 to i64, !dbg !3860
  br label %for.cond253, !dbg !3859

for.cond253:                                      ; preds = %for.inc277, %if.end250
  %n.2 = phi i32 [ %n.1, %if.end250 ], [ %n.3, %for.inc277 ]
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !3535, metadata !DIExpression()), !dbg !3580
  %call254 = call fastcc zeroext i8 @sparseset_iter_p(%struct.sparseset_def* %call228) #7, !dbg !3862
  %tobool256 = icmp eq i8 %call254, 0, !dbg !3862
  br i1 %tobool256, label %land.end, label %land.rhs, !dbg !3862

land.rhs:                                         ; preds = %for.cond253
  %call257 = call fastcc i32 @sparseset_iter_elm(%struct.sparseset_def* %call228) #7, !dbg !3862
  call void @llvm.dbg.value(metadata i32 %call257, metadata !3535, metadata !DIExpression()), !dbg !3580
  br label %land.end

land.end:                                         ; preds = %for.cond253, %land.rhs
  %n.3 = phi i32 [ %call257, %land.rhs ], [ %n.2, %for.cond253 ]
  %124 = phi i1 [ true, %land.rhs ], [ false, %for.cond253 ], !dbg !3863
  call void @llvm.dbg.value(metadata i32 %n.3, metadata !3535, metadata !DIExpression()), !dbg !3580
  br i1 %124, label %for.body262, label %for.inc279.loopexit, !dbg !3859

for.body262:                                      ; preds = %land.end
  %125 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !3864
  %idxprom263 = zext i32 %n.3 to i64, !dbg !3864
  %arrayidx264 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %125, i64 %idxprom263, !dbg !3864
  %126 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx264, align 8, !dbg !3864
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %126, metadata !3568, metadata !DIExpression()), !dbg !3865
  %cover_class267 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %126, i64 0, i32 9, !dbg !3866
  %127 = load i32, i32* %cover_class267, align 8, !dbg !3866
  %idxprom268 = zext i32 %127 to i64, !dbg !3867
  %arrayidx269 = getelementptr inbounds [27 x [27 x i8]], [27 x [27 x i8]]* @ira_reg_classes_intersect_p, i64 0, i64 %idxprom265, i64 %idxprom268, !dbg !3867
  %128 = load i8, i8* %arrayidx269, align 1, !dbg !3867
  %tobool271 = icmp ne i8 %128, 0, !dbg !3867
  %cmp273 = icmp ne i32 %122, %n.3, !dbg !3868
  %or.cond4 = and i1 %tobool271, %cmp273, !dbg !3869
  br i1 %or.cond4, label %if.then275, label %for.inc277, !dbg !3869

if.then275:                                       ; preds = %for.body262
  %129 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3870
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %129, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @ira_add_allocno_conflict(%struct.ira_allocno* %129, %struct.ira_allocno* %126) #7, !dbg !3871
  br label %for.inc277, !dbg !3871

for.inc277:                                       ; preds = %for.body262, %if.then275
  call fastcc void @sparseset_iter_next(%struct.sparseset_def* %call228) #7, !dbg !3862
  br label %for.cond253, !dbg !3862, !llvm.loop !3872

for.inc279.loopexit:                              ; preds = %land.end
  %n.3.lcssa = phi i32 [ %n.3, %land.end ]
  call void @llvm.dbg.value(metadata i32 %n.3.lcssa, metadata !3535, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %n.3.lcssa, metadata !3535, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %n.3.lcssa, metadata !3535, metadata !DIExpression()), !dbg !3580
  br label %for.inc279, !dbg !3874

for.inc279:                                       ; preds = %for.inc279.loopexit, %lor.lhs.false245, %for.body238
  %n.4 = phi i32 [ %n.1, %lor.lhs.false245 ], [ %n.1, %for.body238 ], [ %n.3.lcssa, %for.inc279.loopexit ]
  call void @llvm.dbg.value(metadata i32 %n.4, metadata !3535, metadata !DIExpression()), !dbg !3580
  %start_next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.1, i64 0, i32 4, !dbg !3874
  br label %for.cond235, !dbg !3875, !llvm.loop !3876

for.end280:                                       ; preds = %for.cond235
  %n.1.lcssa = phi i32 [ %n.1, %for.cond235 ]
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !3535, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !3535, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !3535, metadata !DIExpression()), !dbg !3580
  %130 = load %struct.ira_allocno_live_range**, %struct.ira_allocno_live_range*** @ira_finish_point_ranges, align 8, !dbg !3878
  %arrayidx282 = getelementptr inbounds %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %130, i64 %indvars.iv, !dbg !3878
  br label %for.cond283, !dbg !3880

for.cond283:                                      ; preds = %for.body286, %for.end280
  %r.2.in = phi %struct.ira_allocno_live_range** [ %arrayidx282, %for.end280 ], [ %finish_next, %for.body286 ]
  %r.2 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.2.in, align 8, !dbg !3881
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.2, metadata !3546, metadata !DIExpression()), !dbg !3580
  %cmp284 = icmp eq %struct.ira_allocno_live_range* %r.2, null, !dbg !3882
  br i1 %cmp284, label %for.inc291, label %for.body286, !dbg !3884

for.body286:                                      ; preds = %for.cond283
  %allocno287 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.2, i64 0, i32 0, !dbg !3885
  %131 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno287, align 8, !dbg !3885
  %num288 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %131, i64 0, i32 0, !dbg !3885
  %132 = load i32, i32* %num288, align 8, !dbg !3885
  call void @sparseset_clear_bit(%struct.sparseset_def* %call228, i32 %132) #6, !dbg !3886
  %finish_next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.2, i64 0, i32 5, !dbg !3887
  br label %for.cond283, !dbg !3888, !llvm.loop !3889

for.inc291:                                       ; preds = %for.cond283
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3891
  call void @llvm.dbg.value(metadata i32 undef, metadata !3527, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3580
  br label %for.cond229, !dbg !3892, !llvm.loop !3893

for.end293:                                       ; preds = %for.cond229
  %133 = bitcast %struct.sparseset_def* %call228 to i8*, !dbg !3895
  call void @free(i8* %133) #6, !dbg !3895
  call fastcc void @compress_conflict_vecs() #7, !dbg !3896
  br label %if.end294, !dbg !3897

if.end294:                                        ; preds = %if.end201, %for.end293
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !3552, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call fastcc void @ira_copy_iter_init(%struct.ira_copy_iterator* nonnull %ci) #7, !dbg !3898
  br label %for.cond295, !dbg !3898

for.cond295:                                      ; preds = %for.cond295.backedge, %if.end294
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy** %cp, metadata !3543, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !3552, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  %call296 = call fastcc zeroext i8 @ira_copy_iter_cond(%struct.ira_copy_iterator* nonnull %ci, %struct.ira_allocno_copy** nonnull %cp) #7, !dbg !3900
  %tobool297 = icmp eq i8 %call296, 0, !dbg !3898
  br i1 %tobool297, label %for.end406, label %for.body298, !dbg !3898

for.body298:                                      ; preds = %for.cond295
  %134 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3902
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %134, metadata !3543, metadata !DIExpression()), !dbg !3580
  %first299 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %134, i64 0, i32 1, !dbg !3902
  %135 = load %struct.ira_allocno*, %struct.ira_allocno** %first299, align 8, !dbg !3902
  %cap_member300 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %135, i64 0, i32 17, !dbg !3902
  %136 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member300, align 8, !dbg !3902
  %cmp301 = icmp eq %struct.ira_allocno* %136, null, !dbg !3905
  br i1 %cmp301, label %lor.lhs.false303, label %if.then308, !dbg !3906

lor.lhs.false303:                                 ; preds = %for.body298
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %134, metadata !3543, metadata !DIExpression()), !dbg !3580
  %second304 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %134, i64 0, i32 2, !dbg !3907
  %137 = load %struct.ira_allocno*, %struct.ira_allocno** %second304, align 8, !dbg !3907
  %cap_member305 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %137, i64 0, i32 17, !dbg !3907
  %138 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member305, align 8, !dbg !3907
  %cmp306 = icmp eq %struct.ira_allocno* %138, null, !dbg !3908
  br i1 %cmp306, label %if.end338, label %if.then308, !dbg !3909

if.then308:                                       ; preds = %lor.lhs.false303, %for.body298
  %139 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3910
  %cmp309 = icmp sgt i32 %139, 4, !dbg !3913
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3914
  %cmp312 = icmp ne %struct._IO_FILE* %140, null, !dbg !3915
  %or.cond5 = and i1 %cmp309, %cmp312, !dbg !3916
  br i1 %or.cond5, label %if.then314, label %if.end336, !dbg !3916

if.then314:                                       ; preds = %if.then308
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %134, metadata !3543, metadata !DIExpression()), !dbg !3580
  %num315 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %134, i64 0, i32 0, !dbg !3917
  %141 = load i32, i32* %num315, align 8, !dbg !3917
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %134, metadata !3543, metadata !DIExpression()), !dbg !3580
  %cond = select i1 %cmp301, i32 97, i32 99, !dbg !3918
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %134, metadata !3543, metadata !DIExpression()), !dbg !3580
  %num321 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %135, i64 0, i32 0, !dbg !3919
  %142 = load i32, i32* %num321, align 8, !dbg !3919
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %134, metadata !3543, metadata !DIExpression()), !dbg !3580
  %reg323 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %135, i64 0, i32 4, !dbg !3920
  %143 = load %struct.rtx_def*, %struct.rtx_def** %reg323, align 8, !dbg !3920
  %call324 = call fastcc i32 @rhs_regno(%struct.rtx_def* %143) #7, !dbg !3920
  %144 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3921
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %144, metadata !3543, metadata !DIExpression()), !dbg !3580
  %second325 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %144, i64 0, i32 2, !dbg !3921
  %145 = load %struct.ira_allocno*, %struct.ira_allocno** %second325, align 8, !dbg !3921
  %cap_member326 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %145, i64 0, i32 17, !dbg !3921
  %146 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member326, align 8, !dbg !3921
  %cmp327 = icmp eq %struct.ira_allocno* %146, null, !dbg !3922
  %cond329 = select i1 %cmp327, i32 97, i32 99, !dbg !3921
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %144, metadata !3543, metadata !DIExpression()), !dbg !3580
  %num331 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %145, i64 0, i32 0, !dbg !3923
  %147 = load i32, i32* %num331, align 8, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %144, metadata !3543, metadata !DIExpression()), !dbg !3580
  %reg333 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %145, i64 0, i32 4, !dbg !3924
  %148 = load %struct.rtx_def*, %struct.rtx_def** %reg333, align 8, !dbg !3924
  %call334 = call fastcc i32 @rhs_regno(%struct.rtx_def* %148) #7, !dbg !3924
  %call335 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %140, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i32 %141, i32 %cond, i32 %142, i32 %call324, i32 %cond329, i32 %147, i32 %call334) #6, !dbg !3925
  %.pre = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3926
  br label %if.end336, !dbg !3925

if.end336:                                        ; preds = %if.then314, %if.then308
  %149 = phi %struct.ira_allocno_copy* [ %.pre, %if.then314 ], [ %134, %if.then308 ], !dbg !3926
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %149, metadata !3543, metadata !DIExpression()), !dbg !3580
  %loop_tree_node337 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %149, i64 0, i32 10, !dbg !3927
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %loop_tree_node337, align 8, !dbg !3928
  br label %for.cond295.backedge, !dbg !3929

for.cond295.backedge:                             ; preds = %if.end336, %if.end405
  br label %for.cond295, !dbg !3580, !llvm.loop !3930

if.end338:                                        ; preds = %lor.lhs.false303
  %150 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !3932
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %134, metadata !3543, metadata !DIExpression()), !dbg !3580
  %reg340 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %135, i64 0, i32 4, !dbg !3933
  %151 = load %struct.rtx_def*, %struct.rtx_def** %reg340, align 8, !dbg !3933
  %call341 = call fastcc i32 @rhs_regno(%struct.rtx_def* %151) #7, !dbg !3933
  %idxprom342 = zext i32 %call341 to i64, !dbg !3932
  %arrayidx343 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %150, i64 %idxprom342, !dbg !3932
  %152 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx343, align 8, !dbg !3932
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %152, metadata !3539, metadata !DIExpression()), !dbg !3580
  %153 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !3934
  %154 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3935
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %154, metadata !3543, metadata !DIExpression()), !dbg !3580
  %second344 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %154, i64 0, i32 2, !dbg !3935
  %155 = load %struct.ira_allocno*, %struct.ira_allocno** %second344, align 8, !dbg !3935
  %reg345 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %155, i64 0, i32 4, !dbg !3935
  %156 = load %struct.rtx_def*, %struct.rtx_def** %reg345, align 8, !dbg !3935
  %call346 = call fastcc i32 @rhs_regno(%struct.rtx_def* %156) #7, !dbg !3935
  %idxprom347 = zext i32 %call346 to i64, !dbg !3934
  %arrayidx348 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %153, i64 %idxprom347, !dbg !3934
  %157 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx348, align 8, !dbg !3934
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %157, metadata !3540, metadata !DIExpression()), !dbg !3580
  %158 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3936
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %158, metadata !3543, metadata !DIExpression()), !dbg !3580
  %loop_tree_node349 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %158, i64 0, i32 10, !dbg !3937
  %159 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node349, align 8, !dbg !3937
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %159, metadata !3545, metadata !DIExpression()), !dbg !3580
  %cmp350 = icmp eq %struct.ira_loop_tree_node* %159, null, !dbg !3938
  br i1 %cmp350, label %if.end378, label %if.else, !dbg !3940

if.else:                                          ; preds = %if.end338
  %regno_allocno_map353 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %159, i64 0, i32 9, !dbg !3941
  %160 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map353, align 8, !dbg !3941
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %158, metadata !3543, metadata !DIExpression()), !dbg !3580
  %first354 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %158, i64 0, i32 1, !dbg !3943
  %161 = load %struct.ira_allocno*, %struct.ira_allocno** %first354, align 8, !dbg !3943
  %regno355 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %161, i64 0, i32 1, !dbg !3943
  %162 = load i32, i32* %regno355, align 4, !dbg !3943
  %idxprom356 = sext i32 %162 to i64, !dbg !3944
  %arrayidx357 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %160, i64 %idxprom356, !dbg !3944
  %163 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx357, align 8, !dbg !3944
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %163, metadata !3541, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %158, metadata !3543, metadata !DIExpression()), !dbg !3580
  %second359 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %158, i64 0, i32 2, !dbg !3945
  %164 = load %struct.ira_allocno*, %struct.ira_allocno** %second359, align 8, !dbg !3945
  %regno360 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %164, i64 0, i32 1, !dbg !3945
  %165 = load i32, i32* %regno360, align 4, !dbg !3945
  %idxprom361 = sext i32 %165 to i64, !dbg !3946
  %arrayidx362 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %160, i64 %idxprom361, !dbg !3946
  %166 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx362, align 8, !dbg !3946
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %166, metadata !3542, metadata !DIExpression()), !dbg !3580
  %reg363 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %152, i64 0, i32 4, !dbg !3947
  %167 = load %struct.rtx_def*, %struct.rtx_def** %reg363, align 8, !dbg !3947
  %call364 = call fastcc i32 @rhs_regno(%struct.rtx_def* %167) #7, !dbg !3947
  %reg365 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %163, i64 0, i32 4, !dbg !3948
  %168 = load %struct.rtx_def*, %struct.rtx_def** %reg365, align 8, !dbg !3948
  %call366 = call fastcc i32 @rhs_regno(%struct.rtx_def* %168) #7, !dbg !3948
  %cmp367 = icmp eq i32 %call364, %call366, !dbg !3949
  br i1 %cmp367, label %land.rhs369, label %land.end376, !dbg !3950

land.rhs369:                                      ; preds = %if.else
  %reg370 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %157, i64 0, i32 4, !dbg !3951
  %169 = load %struct.rtx_def*, %struct.rtx_def** %reg370, align 8, !dbg !3951
  %call371 = call fastcc i32 @rhs_regno(%struct.rtx_def* %169) #7, !dbg !3951
  %reg372 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %166, i64 0, i32 4, !dbg !3952
  %170 = load %struct.rtx_def*, %struct.rtx_def** %reg372, align 8, !dbg !3952
  %call373 = call fastcc i32 @rhs_regno(%struct.rtx_def* %170) #7, !dbg !3952
  %cmp374 = icmp eq i32 %call371, %call373, !dbg !3953
  br label %land.end376

land.end376:                                      ; preds = %land.rhs369, %if.else
  %171 = phi i1 [ false, %if.else ], [ %cmp374, %land.rhs369 ], !dbg !3954
  %conv377 = zext i1 %171 to i8, !dbg !3955
  call void @llvm.dbg.value(metadata i8 %conv377, metadata !3530, metadata !DIExpression()), !dbg !3580
  br label %if.end378

if.end378:                                        ; preds = %if.end338, %land.end376
  %keep_p.0 = phi i8 [ %conv377, %land.end376 ], [ 1, %if.end338 ], !dbg !3956
  call void @llvm.dbg.value(metadata i8 %keep_p.0, metadata !3530, metadata !DIExpression()), !dbg !3580
  %tobool379 = icmp eq i8 %keep_p.0, 0, !dbg !3957
  br i1 %tobool379, label %if.else384, label %if.then380, !dbg !3959

if.then380:                                       ; preds = %if.end378
  %172 = load i64, i64* bitcast (%struct.ira_loop_tree_node** @ira_loop_tree_root to i64*), align 8, !dbg !3960
  %173 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3962
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %173, metadata !3543, metadata !DIExpression()), !dbg !3580
  %loop_tree_node381 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %173, i64 0, i32 10, !dbg !3963
  %174 = bitcast %struct.ira_loop_tree_node** %loop_tree_node381 to i64*, !dbg !3964
  store i64 %172, i64* %174, align 8, !dbg !3964
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %173, metadata !3543, metadata !DIExpression()), !dbg !3580
  %first382 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %173, i64 0, i32 1, !dbg !3965
  store %struct.ira_allocno* %152, %struct.ira_allocno** %first382, align 8, !dbg !3966
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %173, metadata !3543, metadata !DIExpression()), !dbg !3580
  %second383 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %173, i64 0, i32 2, !dbg !3967
  store %struct.ira_allocno* %157, %struct.ira_allocno** %second383, align 8, !dbg !3968
  br label %if.end405, !dbg !3969

if.else384:                                       ; preds = %if.end378
  %175 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3970
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %175, metadata !3543, metadata !DIExpression()), !dbg !3580
  %loop_tree_node385 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %175, i64 0, i32 10, !dbg !3972
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %loop_tree_node385, align 8, !dbg !3973
  %176 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3974
  %cmp386 = icmp sgt i32 %176, 4, !dbg !3976
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3977
  %cmp389 = icmp ne %struct._IO_FILE* %177, null, !dbg !3978
  %or.cond6 = and i1 %cmp386, %cmp389, !dbg !3979
  br i1 %or.cond6, label %if.then391, label %if.end405, !dbg !3979

if.then391:                                       ; preds = %if.else384
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %175, metadata !3543, metadata !DIExpression()), !dbg !3580
  %num392 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %175, i64 0, i32 0, !dbg !3980
  %178 = load i32, i32* %num392, align 8, !dbg !3980
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %175, metadata !3543, metadata !DIExpression()), !dbg !3580
  %first393 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %175, i64 0, i32 1, !dbg !3981
  %179 = load %struct.ira_allocno*, %struct.ira_allocno** %first393, align 8, !dbg !3981
  %num394 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %179, i64 0, i32 0, !dbg !3981
  %180 = load i32, i32* %num394, align 8, !dbg !3981
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %175, metadata !3543, metadata !DIExpression()), !dbg !3580
  %reg396 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %179, i64 0, i32 4, !dbg !3982
  %181 = load %struct.rtx_def*, %struct.rtx_def** %reg396, align 8, !dbg !3982
  %call397 = call fastcc i32 @rhs_regno(%struct.rtx_def* %181) #7, !dbg !3982
  %182 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !3983
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %182, metadata !3543, metadata !DIExpression()), !dbg !3580
  %second398 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %182, i64 0, i32 2, !dbg !3983
  %183 = load %struct.ira_allocno*, %struct.ira_allocno** %second398, align 8, !dbg !3983
  %num399 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %183, i64 0, i32 0, !dbg !3983
  %184 = load i32, i32* %num399, align 8, !dbg !3983
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %182, metadata !3543, metadata !DIExpression()), !dbg !3580
  %reg401 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %183, i64 0, i32 4, !dbg !3984
  %185 = load %struct.rtx_def*, %struct.rtx_def** %reg401, align 8, !dbg !3984
  %call402 = call fastcc i32 @rhs_regno(%struct.rtx_def* %185) #7, !dbg !3984
  %call403 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %177, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i32 %178, i32 %180, i32 %call397, i32 %184, i32 %call402) #6, !dbg !3985
  br label %if.end405, !dbg !3985

if.end405:                                        ; preds = %if.else384, %if.then391, %if.then380
  br label %for.cond295.backedge, !dbg !3900

for.end406:                                       ; preds = %for.cond295
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !3986
  br label %for.cond407, !dbg !3986

for.cond407:                                      ; preds = %for.cond407.backedge, %for.end406
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !3537, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  %call408 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !3988
  %tobool409 = icmp eq i8 %call408, 0, !dbg !3986
  br i1 %tobool409, label %for.end448, label %for.body410, !dbg !3986

for.body410:                                      ; preds = %for.cond407
  %186 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3990
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %186, metadata !3537, metadata !DIExpression()), !dbg !3580
  %187 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !3993
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %186, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg411 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %186, i64 0, i32 4, !dbg !3994
  %188 = load %struct.rtx_def*, %struct.rtx_def** %reg411, align 8, !dbg !3994
  %call412 = call fastcc i32 @rhs_regno(%struct.rtx_def* %188) #7, !dbg !3994
  %idxprom413 = zext i32 %call412 to i64, !dbg !3993
  %arrayidx414 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %187, i64 %idxprom413, !dbg !3993
  %189 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx414, align 8, !dbg !3993
  %cmp415 = icmp eq %struct.ira_allocno* %186, %189, !dbg !3995
  br i1 %cmp415, label %lor.lhs.false417, label %if.then421, !dbg !3996

lor.lhs.false417:                                 ; preds = %for.body410
  %190 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !3997
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %190, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cap_member418 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %190, i64 0, i32 17, !dbg !3997
  %191 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member418, align 8, !dbg !3997
  %cmp419 = icmp eq %struct.ira_allocno* %191, null, !dbg !3998
  br i1 %cmp419, label %if.end433, label %if.then421, !dbg !3999

if.then421:                                       ; preds = %lor.lhs.false417, %for.body410
  %192 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4000
  %cmp422 = icmp sgt i32 %192, 4, !dbg !4003
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4004
  %cmp425 = icmp ne %struct._IO_FILE* %193, null, !dbg !4005
  %or.cond7 = and i1 %cmp422, %cmp425, !dbg !4006
  br i1 %or.cond7, label %if.then427, label %if.end432, !dbg !4006

if.then427:                                       ; preds = %if.then421
  %194 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !4007
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %194, metadata !3537, metadata !DIExpression()), !dbg !3580
  %num428 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %194, i64 0, i32 0, !dbg !4007
  %195 = load i32, i32* %num428, align 8, !dbg !4007
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %194, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg429 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %194, i64 0, i32 4, !dbg !4008
  %196 = load %struct.rtx_def*, %struct.rtx_def** %reg429, align 8, !dbg !4008
  %call430 = call fastcc i32 @rhs_regno(%struct.rtx_def* %196) #7, !dbg !4008
  %call431 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %193, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 %195, i32 %call430) #6, !dbg !4009
  br label %if.end432, !dbg !4009

if.end432:                                        ; preds = %if.then427, %if.then421
  %197 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !4010
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %197, metadata !3537, metadata !DIExpression()), !dbg !3580
  call fastcc void @finish_allocno(%struct.ira_allocno* %197) #7, !dbg !4011
  br label %for.cond407.backedge, !dbg !4012

for.cond407.backedge:                             ; preds = %if.end432, %if.end447
  br label %for.cond407, !dbg !3580, !llvm.loop !4013

if.end433:                                        ; preds = %lor.lhs.false417
  %198 = load i64, i64* bitcast (%struct.ira_loop_tree_node** @ira_loop_tree_root to i64*), align 8, !dbg !4015
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %190, metadata !3537, metadata !DIExpression()), !dbg !3580
  %loop_tree_node434 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %190, i64 0, i32 6, !dbg !4016
  %199 = bitcast %struct.ira_loop_tree_node** %loop_tree_node434 to i64*, !dbg !4017
  store i64 %198, i64* %199, align 8, !dbg !4017
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %190, metadata !3537, metadata !DIExpression()), !dbg !3580
  %reg435 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %190, i64 0, i32 4, !dbg !4018
  %200 = load %struct.rtx_def*, %struct.rtx_def** %reg435, align 8, !dbg !4018
  %call436 = call fastcc i32 @rhs_regno(%struct.rtx_def* %200) #7, !dbg !4018
  %201 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !4019
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %201, metadata !3537, metadata !DIExpression()), !dbg !3580
  %regno437 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %201, i64 0, i32 1, !dbg !4019
  store i32 %call436, i32* %regno437, align 4, !dbg !4020
  %202 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !4021
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %202, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cap438 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %202, i64 0, i32 16, !dbg !4021
  store %struct.ira_allocno* null, %struct.ira_allocno** %cap438, align 8, !dbg !4022
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %202, metadata !3537, metadata !DIExpression()), !dbg !3580
  %memory_cost439 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %202, i64 0, i32 12, !dbg !4023
  %203 = load i32, i32* %memory_cost439, align 4, !dbg !4023
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %202, metadata !3537, metadata !DIExpression()), !dbg !3580
  %updated_memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %202, i64 0, i32 13, !dbg !4024
  store i32 %203, i32* %updated_memory_cost, align 8, !dbg !4025
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %202, metadata !3537, metadata !DIExpression()), !dbg !3580
  %cover_class_cost440 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %202, i64 0, i32 10, !dbg !4026
  %204 = load i32, i32* %cover_class_cost440, align 4, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %202, metadata !3537, metadata !DIExpression()), !dbg !3580
  %updated_cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %202, i64 0, i32 11, !dbg !4027
  store i32 %204, i32* %updated_cover_class_cost, align 8, !dbg !4028
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %202, metadata !3537, metadata !DIExpression()), !dbg !3580
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %202, i64 0, i32 31, !dbg !4029
  %bf.load441 = load i16, i16* %assigned_p, align 4, !dbg !4029
  %bf.clear443 = and i16 %bf.load441, 256, !dbg !4029
  %tobool445 = icmp eq i16 %bf.clear443, 0, !dbg !4029
  br i1 %tobool445, label %if.then446, label %if.end447, !dbg !4031

if.then446:                                       ; preds = %if.end433
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %202, metadata !3537, metadata !DIExpression()), !dbg !3580
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* %202) #7, !dbg !4032
  br label %if.end447, !dbg !4032

if.end447:                                        ; preds = %if.end433, %if.then446
  br label %for.cond407.backedge, !dbg !3988

for.end448:                                       ; preds = %for.cond407
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !3552, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call fastcc void @ira_copy_iter_init(%struct.ira_copy_iterator* nonnull %ci) #7, !dbg !4033
  br label %for.cond449, !dbg !4033

for.cond449:                                      ; preds = %for.cond449.backedge, %for.end448
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy** %cp, metadata !3543, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !3552, metadata !DIExpression(DW_OP_deref)), !dbg !3580
  %call450 = call fastcc zeroext i8 @ira_copy_iter_cond(%struct.ira_copy_iterator* nonnull %ci, %struct.ira_allocno_copy** nonnull %cp) #7, !dbg !4035
  %tobool451 = icmp eq i8 %call450, 0, !dbg !4033
  br i1 %tobool451, label %for.end461, label %for.body452, !dbg !4033

for.body452:                                      ; preds = %for.cond449
  %205 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !4037
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %205, metadata !3543, metadata !DIExpression()), !dbg !3580
  %loop_tree_node453 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %205, i64 0, i32 10, !dbg !4040
  %206 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node453, align 8, !dbg !4040
  %cmp454 = icmp eq %struct.ira_loop_tree_node* %206, null, !dbg !4041
  br i1 %cmp454, label %if.then456, label %if.end460, !dbg !4042

if.then456:                                       ; preds = %for.body452
  %207 = load %struct.ira_allocno_copy**, %struct.ira_allocno_copy*** @ira_copies, align 8, !dbg !4043
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %205, metadata !3543, metadata !DIExpression()), !dbg !3580
  %num457 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %205, i64 0, i32 0, !dbg !4045
  %208 = load i32, i32* %num457, align 8, !dbg !4045
  %idxprom458 = sext i32 %208 to i64, !dbg !4043
  %arrayidx459 = getelementptr inbounds %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %207, i64 %idxprom458, !dbg !4043
  store %struct.ira_allocno_copy* null, %struct.ira_allocno_copy** %arrayidx459, align 8, !dbg !4046
  %209 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !4047
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %209, metadata !3543, metadata !DIExpression()), !dbg !3580
  call fastcc void @finish_copy(%struct.ira_allocno_copy* %209) #7, !dbg !4048
  br label %for.cond449.backedge, !dbg !4049

for.cond449.backedge:                             ; preds = %if.then456, %if.end460
  br label %for.cond449, !dbg !3580, !llvm.loop !4050

if.end460:                                        ; preds = %for.body452
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %205, metadata !3543, metadata !DIExpression()), !dbg !3580
  call void @ira_add_allocno_copy_to_list(%struct.ira_allocno_copy* %205) #7, !dbg !4052
  %210 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !4053
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %210, metadata !3543, metadata !DIExpression()), !dbg !3580
  call void @ira_swap_allocno_copy_ends_if_necessary(%struct.ira_allocno_copy* %210) #7, !dbg !4054
  br label %for.cond449.backedge, !dbg !4035

for.end461:                                       ; preds = %for.cond449
  call fastcc void @rebuild_regno_allocno_maps() #7, !dbg !4055
  %211 = load i32, i32* @ira_max_point, align 4, !dbg !4056
  %cmp462 = icmp eq i32 %211, %ira_max_point_before_emit, !dbg !4058
  br i1 %cmp462, label %if.end465, label %if.then464, !dbg !4059

if.then464:                                       ; preds = %for.end461
  call void @ira_compress_allocno_live_ranges() #6, !dbg !4060
  br label %if.end465, !dbg !4060

if.end465:                                        ; preds = %for.end461, %if.then464
  %212 = load i8*, i8** bitcast (%struct.ira_allocno*** @regno_top_level_allocno_map to i8**), align 8, !dbg !4061
  call void @ira_free(i8* %212) #6, !dbg !4062
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8, !dbg !4063
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4063
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4063
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4063
  ret void, !dbg !4063
}

declare dso_local i32 @max_reg_num() local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* %i) unnamed_addr #0 !dbg !4064 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %i, metadata !4069, metadata !DIExpression()), !dbg !4070
  %n = getelementptr inbounds %struct.ira_allocno_iterator, %struct.ira_allocno_iterator* %i, i64 0, i32 0, !dbg !4071
  store i32 0, i32* %n, align 4, !dbg !4072
  ret void, !dbg !4073
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* %i, %struct.ira_allocno** %a) unnamed_addr #0 !dbg !4074 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %i, metadata !4078, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !4079, metadata !DIExpression()), !dbg !4081
  %n1 = getelementptr inbounds %struct.ira_allocno_iterator, %struct.ira_allocno_iterator* %i, i64 0, i32 0, !dbg !4082
  %0 = load i32, i32* %n1, align 4, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %0, metadata !4080, metadata !DIExpression()), !dbg !4081
  %1 = load i32, i32* @ira_allocnos_num, align 4, !dbg !4084
  %2 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !4086
  %3 = sext i32 %0 to i64, !dbg !4088
  %4 = sext i32 %1 to i64, !dbg !4088
  br label %for.cond, !dbg !4088

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %entry ], !dbg !4089
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4080, metadata !DIExpression()), !dbg !4081
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !4090
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !4091

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %2, i64 %indvars.iv, !dbg !4092
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !4092
  %cmp2 = icmp eq %struct.ira_allocno* %5, null, !dbg !4093
  br i1 %cmp2, label %for.inc, label %if.then, !dbg !4094

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.ira_allocno* [ %5, %for.body ], !dbg !4092
  %indvars.iv.lcssa3 = phi i64 [ %indvars.iv, %for.body ], !dbg !4089
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa3, metadata !4080, metadata !DIExpression()), !dbg !4081
  %6 = ptrtoint %struct.ira_allocno* %.lcssa to i64, !dbg !4094
  %7 = trunc i64 %indvars.iv.lcssa3 to i32, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %7, metadata !4080, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.value(metadata i32 %7, metadata !4080, metadata !DIExpression()), !dbg !4081
  %8 = bitcast %struct.ira_allocno** %a to i64*, !dbg !4095
  store i64 %6, i64* %8, align 8, !dbg !4095
  %add = add nsw i32 %7, 1, !dbg !4097
  store i32 %add, i32* %n1, align 4, !dbg !4098
  br label %cleanup, !dbg !4099

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !4100
  call void @llvm.dbg.value(metadata i32 undef, metadata !4080, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4081
  br label %for.cond, !dbg !4101, !llvm.loop !4102

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4104

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %cleanup.loopexit ], !dbg !4081
  ret i8 %retval.0, !dbg !4104
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !4105 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4112, metadata !DIExpression()), !dbg !4113
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4114
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4114
  %0 = load i32, i32* %rt_uint, align 8, !dbg !4114
  ret i32 %0, !dbg !4115
}

declare dso_local void @ira_print_live_range_list(%struct._IO_FILE*, %struct.ira_allocno_live_range*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @change_allocno_in_range_list(%struct.ira_allocno_live_range* %r, %struct.ira_allocno* %a) unnamed_addr #5 !dbg !4116 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r, metadata !4120, metadata !DIExpression()), !dbg !4122
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !4121, metadata !DIExpression()), !dbg !4122
  br label %for.cond, !dbg !4123

for.cond:                                         ; preds = %for.body, %entry
  %r.addr.0 = phi %struct.ira_allocno_live_range* [ %r, %entry ], [ %0, %for.body ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.addr.0, metadata !4120, metadata !DIExpression()), !dbg !4122
  %cmp = icmp eq %struct.ira_allocno_live_range* %r.addr.0, null, !dbg !4124
  br i1 %cmp, label %for.end, label %for.body, !dbg !4127

for.body:                                         ; preds = %for.cond
  %allocno = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.addr.0, i64 0, i32 0, !dbg !4128
  store %struct.ira_allocno* %a, %struct.ira_allocno** %allocno, align 8, !dbg !4129
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.addr.0, i64 0, i32 3, !dbg !4130
  %0 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next, align 8, !dbg !4130
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %0, metadata !4120, metadata !DIExpression()), !dbg !4122
  br label %for.cond, !dbg !4131, !llvm.loop !4132

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4134
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @copy_info_to_removed_store_destinations(i32 %regno) unnamed_addr #5 !dbg !4135 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4139, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %struct.ira_allocno* null, metadata !4141, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8 0, metadata !4144, metadata !DIExpression()), !dbg !4145
  %0 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4146
  %idxprom = sext i32 %regno to i64, !dbg !4146
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %0, i64 %idxprom, !dbg !4146
  br label %for.cond, !dbg !4148

for.cond:                                         ; preds = %for.inc55, %entry
  %parent_a.0 = phi %struct.ira_allocno* [ null, %entry ], [ %parent_a.3, %for.inc55 ], !dbg !4149
  %a.0.in = phi %struct.ira_allocno** [ %arrayidx, %entry ], [ %next_regno_allocno, %for.inc55 ]
  %merged_p.0 = phi i8 [ 0, %entry ], [ %merged_p.1, %for.inc55 ], !dbg !4150
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !4151
  call void @llvm.dbg.value(metadata i8 %merged_p.0, metadata !4144, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !4140, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %parent_a.0, metadata !4141, metadata !DIExpression()), !dbg !4145
  %cmp = icmp eq %struct.ira_allocno* %a.0, null, !dbg !4152
  br i1 %cmp, label %for.end56, label %for.body, !dbg !4154

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !4155
  %reg = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 4, !dbg !4158
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4158
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %2) #7, !dbg !4158
  %idxprom1 = zext i32 %call to i64, !dbg !4155
  %arrayidx2 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %idxprom1, !dbg !4155
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx2, align 8, !dbg !4155
  %cmp3 = icmp eq %struct.ira_allocno* %a.0, %3, !dbg !4159
  br i1 %cmp3, label %if.end, label %for.inc55, !dbg !4160

if.end:                                           ; preds = %for.body
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 6, !dbg !4161
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !4161
  br label %for.cond5, !dbg !4163

for.cond5:                                        ; preds = %for.inc, %if.end
  %.pn = phi %struct.ira_loop_tree_node* [ %4, %if.end ], [ %parent.0, %for.inc ]
  %parent_a.1 = phi %struct.ira_allocno* [ %parent_a.0, %if.end ], [ %6, %for.inc ], !dbg !4145
  %parent.0.in = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.pn, i64 0, i32 6, !dbg !4164
  %parent.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent.0.in, align 8, !dbg !4164
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %parent_a.1, metadata !4141, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %parent.0, metadata !4142, metadata !DIExpression()), !dbg !4145
  %cmp6 = icmp eq %struct.ira_loop_tree_node* %parent.0, null, !dbg !4165
  br i1 %cmp6, label %for.end, label %for.body7, !dbg !4167

for.body7:                                        ; preds = %for.cond5
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %parent.0, i64 0, i32 9, !dbg !4168
  %5 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !4168
  %arrayidx9 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %5, i64 %idxprom, !dbg !4170
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx9, align 8, !dbg !4170
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %6, metadata !4141, metadata !DIExpression()), !dbg !4145
  %cmp10 = icmp eq %struct.ira_allocno* %6, null, !dbg !4171
  br i1 %cmp10, label %for.end, label %lor.lhs.false, !dbg !4172

lor.lhs.false:                                    ; preds = %for.body7
  %7 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_top_level_allocno_map, align 8, !dbg !4173
  %reg11 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %6, i64 0, i32 4, !dbg !4174
  %8 = load %struct.rtx_def*, %struct.rtx_def** %reg11, align 8, !dbg !4174
  %call12 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #7, !dbg !4174
  %idxprom13 = zext i32 %call12 to i64, !dbg !4173
  %arrayidx14 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %7, i64 %idxprom13, !dbg !4173
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx14, align 8, !dbg !4173
  %cmp15 = icmp eq %struct.ira_allocno* %6, %9, !dbg !4175
  br i1 %cmp15, label %land.lhs.true, label %for.inc, !dbg !4176

land.lhs.true:                                    ; preds = %lor.lhs.false
  %mem_optimized_dest_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %6, i64 0, i32 31, !dbg !4177
  %bf.load = load i16, i16* %mem_optimized_dest_p, align 4, !dbg !4177
  %bf.clear = and i16 %bf.load, 1, !dbg !4177
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !4177
  br i1 %tobool, label %for.inc, label %for.end, !dbg !4178

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false
  br label %for.cond5, !dbg !4179, !llvm.loop !4180

for.end:                                          ; preds = %land.lhs.true, %for.cond5, %for.body7
  %cmp6.lcssa = phi i1 [ %cmp6, %land.lhs.true ], [ %cmp6, %for.cond5 ], [ %cmp6, %for.body7 ], !dbg !4165
  %parent_a.2 = phi %struct.ira_allocno* [ %parent_a.1, %for.cond5 ], [ %6, %land.lhs.true ], [ null, %for.body7 ], !dbg !4145
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %parent_a.2, metadata !4141, metadata !DIExpression()), !dbg !4145
  %cmp21 = icmp eq %struct.ira_allocno* %parent_a.2, null, !dbg !4182
  %or.cond = or i1 %cmp6.lcssa, %cmp21, !dbg !4184
  br i1 %or.cond, label %for.inc55, label %if.end23, !dbg !4184

if.end23:                                         ; preds = %for.end
  %10 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4185
  %cmp24 = icmp sgt i32 %10, 4, !dbg !4187
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4188
  %cmp26 = icmp ne %struct._IO_FILE* %11, null, !dbg !4189
  %or.cond1 = and i1 %cmp24, %cmp26, !dbg !4190
  br i1 %or.cond1, label %if.then27, label %if.end34, !dbg !4190

if.then27:                                        ; preds = %if.end23
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 0, !dbg !4191
  %12 = load i32, i32* %num, align 8, !dbg !4191
  %13 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4193
  %call29 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #7, !dbg !4193
  %num30 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 0, !dbg !4194
  %14 = load i32, i32* %num30, align 8, !dbg !4194
  %reg31 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 4, !dbg !4195
  %15 = load %struct.rtx_def*, %struct.rtx_def** %reg31, align 8, !dbg !4195
  %call32 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %15) #7, !dbg !4195
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0), i32 %12, i32 %call29, i32 %14, i32 %call32) #6, !dbg !4196
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4197
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 20, !dbg !4198
  %17 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !4198
  tail call void @ira_print_live_range_list(%struct._IO_FILE* %16, %struct.ira_allocno_live_range* %17) #6, !dbg !4199
  br label %if.end34, !dbg !4200

if.end34:                                         ; preds = %if.then27, %if.end23
  %live_ranges35 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 20, !dbg !4201
  %18 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges35, align 8, !dbg !4201
  %call36 = tail call %struct.ira_allocno_live_range* @ira_copy_allocno_live_range_list(%struct.ira_allocno_live_range* %18) #7, !dbg !4202
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %call36, metadata !4143, metadata !DIExpression()), !dbg !4145
  tail call fastcc void @change_allocno_in_range_list(%struct.ira_allocno_live_range* %call36, %struct.ira_allocno* %parent_a.2) #7, !dbg !4203
  %live_ranges37 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 20, !dbg !4204
  %19 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges37, align 8, !dbg !4204
  %call38 = tail call %struct.ira_allocno_live_range* @ira_merge_allocno_live_ranges(%struct.ira_allocno_live_range* %call36, %struct.ira_allocno_live_range* %19) #7, !dbg !4205
  store %struct.ira_allocno_live_range* %call38, %struct.ira_allocno_live_range** %live_ranges37, align 8, !dbg !4206
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 27, !dbg !4207
  %20 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !4207
  %total_conflict_hard_regs40 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 27, !dbg !4207
  %21 = load i64, i64* %total_conflict_hard_regs40, align 8, !dbg !4207
  %or = or i64 %21, %20, !dbg !4207
  store i64 %or, i64* %total_conflict_hard_regs40, align 8, !dbg !4207
  %total_no_stack_reg_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 31, !dbg !4208
  %bf.load41 = load i16, i16* %total_no_stack_reg_p, align 4, !dbg !4208
  %bf.clear42 = and i16 %bf.load41, 32, !dbg !4208
  %tobool44 = icmp eq i16 %bf.clear42, 0, !dbg !4208
  br i1 %tobool44, label %if.end49, label %if.then45, !dbg !4210

if.then45:                                        ; preds = %if.end34
  %total_no_stack_reg_p46 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 31, !dbg !4211
  %bf.load47 = load i16, i16* %total_no_stack_reg_p46, align 4, !dbg !4212
  %bf.set = or i16 %bf.load47, 32, !dbg !4212
  store i16 %bf.set, i16* %total_no_stack_reg_p46, align 4, !dbg !4212
  br label %if.end49, !dbg !4211

if.end49:                                         ; preds = %if.end34, %if.then45
  %call_freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 29, !dbg !4213
  %22 = load i32, i32* %call_freq, align 4, !dbg !4213
  %call_freq50 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 29, !dbg !4214
  %23 = load i32, i32* %call_freq50, align 4, !dbg !4215
  %add = add nsw i32 %23, %22, !dbg !4215
  store i32 %add, i32* %call_freq50, align 4, !dbg !4215
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 30, !dbg !4216
  %24 = load i32, i32* %calls_crossed_num, align 8, !dbg !4216
  %calls_crossed_num51 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 30, !dbg !4217
  %25 = load i32, i32* %calls_crossed_num51, align 8, !dbg !4218
  %add52 = add nsw i32 %25, %24, !dbg !4218
  store i32 %add52, i32* %calls_crossed_num51, align 8, !dbg !4218
  %excess_pressure_points_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 14, !dbg !4219
  %26 = load i32, i32* %excess_pressure_points_num, align 4, !dbg !4219
  %excess_pressure_points_num53 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %parent_a.2, i64 0, i32 14, !dbg !4220
  %27 = load i32, i32* %excess_pressure_points_num53, align 4, !dbg !4221
  %add54 = add nsw i32 %27, %26, !dbg !4221
  store i32 %add54, i32* %excess_pressure_points_num53, align 4, !dbg !4221
  call void @llvm.dbg.value(metadata i8 1, metadata !4144, metadata !DIExpression()), !dbg !4145
  br label %for.inc55, !dbg !4222

for.inc55:                                        ; preds = %for.body, %for.end, %if.end49
  %parent_a.3 = phi %struct.ira_allocno* [ %parent_a.2, %if.end49 ], [ %parent_a.0, %for.body ], [ %parent_a.2, %for.end ], !dbg !4145
  %merged_p.1 = phi i8 [ 1, %if.end49 ], [ %merged_p.0, %for.body ], [ %merged_p.0, %for.end ], !dbg !4145
  call void @llvm.dbg.value(metadata i8 %merged_p.1, metadata !4144, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %parent_a.3, metadata !4141, metadata !DIExpression()), !dbg !4145
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 5, !dbg !4223
  br label %for.cond, !dbg !4224, !llvm.loop !4225

for.end56:                                        ; preds = %for.cond
  %merged_p.0.lcssa = phi i8 [ %merged_p.0, %for.cond ], !dbg !4150
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !4144, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !4144, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !4144, metadata !DIExpression()), !dbg !4145
  ret i8 %merged_p.0.lcssa, !dbg !4227
}

declare dso_local void @ira_rebuild_start_finish_chains() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_allocno_conflicts(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !4228 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !4230, metadata !DIExpression()), !dbg !4235
  %conflict_vec_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !4236
  %bf.load = load i16, i16* %conflict_vec_p, align 4, !dbg !4236
  %bf.clear = and i16 %bf.load, 2048, !dbg !4236
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !4236
  br i1 %tobool, label %if.else, label %if.then, !dbg !4237

if.then:                                          ; preds = %entry
  %conflict_allocnos_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 28, !dbg !4238
  store i32 0, i32* %conflict_allocnos_num, align 8, !dbg !4240
  %conflict_allocno_array = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 23, !dbg !4241
  %0 = bitcast i8** %conflict_allocno_array to %struct.ira_allocno***, !dbg !4241
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** %0, align 8, !dbg !4241
  store %struct.ira_allocno* null, %struct.ira_allocno** %1, align 8, !dbg !4242
  br label %if.end3, !dbg !4243

if.else:                                          ; preds = %entry
  %conflict_allocno_array_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 25, !dbg !4244
  %2 = load i32, i32* %conflict_allocno_array_size, align 4, !dbg !4244
  %cmp = icmp eq i32 %2, 0, !dbg !4245
  br i1 %cmp, label %if.end3, label %if.then1, !dbg !4246

if.then1:                                         ; preds = %if.else
  %max = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 22, !dbg !4247
  %3 = load i32, i32* %max, align 4, !dbg !4247
  %min = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 21, !dbg !4248
  %4 = load i32, i32* %min, align 8, !dbg !4248
  %sub = sub nsw i32 %3, %4, !dbg !4249
  %div = sdiv i32 %sub, 64, !dbg !4250
  %add = add nsw i32 %div, 1, !dbg !4251
  call void @llvm.dbg.value(metadata i32 %add, metadata !4231, metadata !DIExpression()), !dbg !4252
  %conflict_allocno_array2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 23, !dbg !4253
  %5 = load i8*, i8** %conflict_allocno_array2, align 8, !dbg !4253
  %conv = sext i32 %add to i64, !dbg !4254
  %mul = shl nsw i64 %conv, 3, !dbg !4255
  %call = tail call i8* @memset(i8* %5, i32 0, i64 %mul) #6, !dbg !4256
  br label %if.end3, !dbg !4257

if.end3:                                          ; preds = %if.else, %if.then1, %if.then
  ret void, !dbg !4258
}

declare dso_local %struct.sparseset_def* @sparseset_alloc(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sparseset_set_bit(%struct.sparseset_def* %s, i32 %e) unnamed_addr #0 !dbg !4259 {
entry:
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %s, metadata !4263, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.value(metadata i32 %e, metadata !4264, metadata !DIExpression()), !dbg !4265
  %call = tail call fastcc zeroext i8 @sparseset_bit_p(%struct.sparseset_def* %s, i32 %e) #7, !dbg !4266
  %tobool = icmp eq i8 %call, 0, !dbg !4266
  br i1 %tobool, label %if.then, label %if.end, !dbg !4268

if.then:                                          ; preds = %entry
  %members = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 2, !dbg !4269
  %0 = load i32, i32* %members, align 8, !dbg !4270
  %inc = add i32 %0, 1, !dbg !4270
  store i32 %inc, i32* %members, align 8, !dbg !4270
  tail call fastcc void @sparseset_insert_bit(%struct.sparseset_def* %s, i32 %e, i32 %0) #7, !dbg !4271
  br label %if.end, !dbg !4271

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4272
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sparseset_iter_init(%struct.sparseset_def* %s) unnamed_addr #0 !dbg !4273 {
entry:
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %s, metadata !4277, metadata !DIExpression()), !dbg !4278
  %iter = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 4, !dbg !4279
  store i32 0, i32* %iter, align 8, !dbg !4280
  %iter_inc = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 5, !dbg !4281
  store i8 1, i8* %iter_inc, align 4, !dbg !4282
  %iterating = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 6, !dbg !4283
  store i8 1, i8* %iterating, align 1, !dbg !4284
  ret void, !dbg !4285
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sparseset_iter_p(%struct.sparseset_def* %s) unnamed_addr #0 !dbg !4286 {
entry:
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %s, metadata !4290, metadata !DIExpression()), !dbg !4291
  %iterating = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 6, !dbg !4292
  %0 = load i8, i8* %iterating, align 1, !dbg !4292
  %tobool = icmp eq i8 %0, 0, !dbg !4294
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4295

land.lhs.true:                                    ; preds = %entry
  %iter = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 4, !dbg !4296
  %1 = load i32, i32* %iter, align 8, !dbg !4296
  %members = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 2, !dbg !4297
  %2 = load i32, i32* %members, align 8, !dbg !4297
  %cmp = icmp ult i32 %1, %2, !dbg !4298
  br i1 %cmp, label %return, label %if.else, !dbg !4299

if.else:                                          ; preds = %entry, %land.lhs.true
  store i8 0, i8* %iterating, align 1, !dbg !4300
  br label %return, !dbg !4301

return:                                           ; preds = %land.lhs.true, %if.else
  %retval.0 = phi i8 [ 0, %if.else ], [ 1, %land.lhs.true ], !dbg !4302
  ret i8 %retval.0, !dbg !4303
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @sparseset_iter_elm(%struct.sparseset_def* %s) unnamed_addr #0 !dbg !4304 {
entry:
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %s, metadata !4308, metadata !DIExpression()), !dbg !4309
  %dense = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 0, !dbg !4310
  %0 = load i32*, i32** %dense, align 8, !dbg !4310
  %iter = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 4, !dbg !4311
  %1 = load i32, i32* %iter, align 8, !dbg !4311
  %idxprom = zext i32 %1 to i64, !dbg !4312
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !4312
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4312
  ret i32 %2, !dbg !4313
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sparseset_iter_next(%struct.sparseset_def* %s) unnamed_addr #0 !dbg !4314 {
entry:
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %s, metadata !4316, metadata !DIExpression()), !dbg !4317
  %iter_inc = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 5, !dbg !4318
  %0 = load i8, i8* %iter_inc, align 4, !dbg !4318
  %conv = zext i8 %0 to i32, !dbg !4319
  %iter = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 4, !dbg !4320
  %1 = load i32, i32* %iter, align 8, !dbg !4321
  %add = add i32 %1, %conv, !dbg !4321
  store i32 %add, i32* %iter, align 8, !dbg !4321
  store i8 1, i8* %iter_inc, align 4, !dbg !4322
  ret void, !dbg !4323
}

declare dso_local void @sparseset_clear_bit(%struct.sparseset_def*, i32) local_unnamed_addr #2

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compress_conflict_vecs() unnamed_addr #5 !dbg !4324 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !4328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4328
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !4329
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4329
  %2 = load i32, i32* @ira_allocnos_num, align 4, !dbg !4330
  %conv = sext i32 %2 to i64, !dbg !4330
  %mul = shl nsw i64 %conv, 2, !dbg !4331
  %call = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !4332
  store i8* %call, i8** bitcast (i32** @allocno_conflict_check to i8**), align 8, !dbg !4333
  %3 = load i32, i32* @ira_allocnos_num, align 4, !dbg !4334
  %conv1 = sext i32 %3 to i64, !dbg !4334
  %mul2 = shl nsw i64 %conv1, 2, !dbg !4335
  %call3 = tail call i8* @memset(i8* %call, i32 0, i64 %mul2) #6, !dbg !4336
  store i32 0, i32* @curr_allocno_conflict_check_tick, align 4, !dbg !4337
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4327, metadata !DIExpression(DW_OP_deref)), !dbg !4338
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !4339
  br label %for.cond, !dbg !4339

for.cond:                                         ; preds = %if.end, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !4326, metadata !DIExpression(DW_OP_deref)), !dbg !4338
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4327, metadata !DIExpression(DW_OP_deref)), !dbg !4338
  %call4 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !4341
  %tobool = icmp eq i8 %call4, 0, !dbg !4339
  br i1 %tobool, label %for.end, label %for.body, !dbg !4339

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !4343
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !4326, metadata !DIExpression()), !dbg !4338
  %conflict_vec_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 31, !dbg !4343
  %bf.load = load i16, i16* %conflict_vec_p, align 4, !dbg !4343
  %bf.clear = and i16 %bf.load, 2048, !dbg !4343
  %tobool5 = icmp eq i16 %bf.clear, 0, !dbg !4343
  br i1 %tobool5, label %if.end, label %if.then, !dbg !4345

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !4326, metadata !DIExpression()), !dbg !4338
  call fastcc void @compress_allocno_conflict_vec(%struct.ira_allocno* %4) #7, !dbg !4346
  br label %if.end, !dbg !4346

if.end:                                           ; preds = %for.body, %if.then
  br label %for.cond, !dbg !4341, !llvm.loop !4347

for.end:                                          ; preds = %for.cond
  %5 = load i8*, i8** bitcast (i32** @allocno_conflict_check to i8**), align 8, !dbg !4349
  call void @ira_free(i8* %5) #6, !dbg !4350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4351
  ret void, !dbg !4351
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_copy_iter_init(%struct.ira_copy_iterator* %i) unnamed_addr #0 !dbg !4352 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %i, metadata !4357, metadata !DIExpression()), !dbg !4358
  %n = getelementptr inbounds %struct.ira_copy_iterator, %struct.ira_copy_iterator* %i, i64 0, i32 0, !dbg !4359
  store i32 0, i32* %n, align 4, !dbg !4360
  ret void, !dbg !4361
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ira_copy_iter_cond(%struct.ira_copy_iterator* %i, %struct.ira_allocno_copy** %cp) unnamed_addr #0 !dbg !4362 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %i, metadata !4366, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy** %cp, metadata !4367, metadata !DIExpression()), !dbg !4369
  %n1 = getelementptr inbounds %struct.ira_copy_iterator, %struct.ira_copy_iterator* %i, i64 0, i32 0, !dbg !4370
  %0 = load i32, i32* %n1, align 4, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %0, metadata !4368, metadata !DIExpression()), !dbg !4369
  %1 = load i32, i32* @ira_copies_num, align 4, !dbg !4372
  %2 = load %struct.ira_allocno_copy**, %struct.ira_allocno_copy*** @ira_copies, align 8, !dbg !4374
  %3 = sext i32 %0 to i64, !dbg !4376
  %4 = sext i32 %1 to i64, !dbg !4376
  br label %for.cond, !dbg !4376

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %entry ], !dbg !4377
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4368, metadata !DIExpression()), !dbg !4369
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !4378
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !4379

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %2, i64 %indvars.iv, !dbg !4380
  %5 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %arrayidx, align 8, !dbg !4380
  %cmp2 = icmp eq %struct.ira_allocno_copy* %5, null, !dbg !4381
  br i1 %cmp2, label %for.inc, label %if.then, !dbg !4382

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.ira_allocno_copy* [ %5, %for.body ], !dbg !4380
  %indvars.iv.lcssa3 = phi i64 [ %indvars.iv, %for.body ], !dbg !4377
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa3, metadata !4368, metadata !DIExpression()), !dbg !4369
  %6 = ptrtoint %struct.ira_allocno_copy* %.lcssa to i64, !dbg !4382
  %7 = trunc i64 %indvars.iv.lcssa3 to i32, !dbg !4369
  call void @llvm.dbg.value(metadata i32 %7, metadata !4368, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.value(metadata i32 %7, metadata !4368, metadata !DIExpression()), !dbg !4369
  %8 = bitcast %struct.ira_allocno_copy** %cp to i64*, !dbg !4383
  store i64 %6, i64* %8, align 8, !dbg !4383
  %add = add nsw i32 %7, 1, !dbg !4385
  store i32 %add, i32* %n1, align 4, !dbg !4386
  br label %cleanup, !dbg !4387

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4369
  br label %for.cond, !dbg !4389, !llvm.loop !4390

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4392

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %cleanup.loopexit ], !dbg !4369
  ret i8 %retval.0, !dbg !4392
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_allocno(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !4393 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !4395, metadata !DIExpression()), !dbg !4397
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !4398
  %0 = load i32, i32* %cover_class1, align 8, !dbg !4398
  call void @llvm.dbg.value(metadata i32 %0, metadata !4396, metadata !DIExpression()), !dbg !4397
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !4399
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 0, !dbg !4400
  %2 = load i32, i32* %num, align 8, !dbg !4400
  %idxprom = sext i32 %2 to i64, !dbg !4399
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %idxprom, !dbg !4399
  store %struct.ira_allocno* null, %struct.ira_allocno** %arrayidx, align 8, !dbg !4401
  %3 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !4402
  %conflict_id = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 24, !dbg !4403
  %4 = load i32, i32* %conflict_id, align 8, !dbg !4403
  %idxprom2 = sext i32 %4 to i64, !dbg !4402
  %arrayidx3 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %3, i64 %idxprom2, !dbg !4402
  store %struct.ira_allocno* null, %struct.ira_allocno** %arrayidx3, align 8, !dbg !4404
  %conflict_allocno_array = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 23, !dbg !4405
  %5 = load i8*, i8** %conflict_allocno_array, align 8, !dbg !4405
  %cmp = icmp eq i8* %5, null, !dbg !4407
  br i1 %cmp, label %if.end, label %if.then, !dbg !4408

if.then:                                          ; preds = %entry
  tail call void @ira_free(i8* nonnull %5) #6, !dbg !4409
  br label %if.end, !dbg !4409

if.end:                                           ; preds = %entry, %if.then
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 33, !dbg !4410
  %6 = load i32*, i32** %hard_reg_costs, align 8, !dbg !4410
  %cmp5 = icmp eq i32* %6, null, !dbg !4412
  br i1 %cmp5, label %if.end8, label %if.then6, !dbg !4413

if.then6:                                         ; preds = %if.end
  tail call void @ira_free_cost_vector(i32* nonnull %6, i32 %0) #7, !dbg !4414
  br label %if.end8, !dbg !4414

if.end8:                                          ; preds = %if.end, %if.then6
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 35, !dbg !4415
  %7 = load i32*, i32** %conflict_hard_reg_costs, align 8, !dbg !4415
  %cmp9 = icmp eq i32* %7, null, !dbg !4417
  br i1 %cmp9, label %if.end12, label %if.then10, !dbg !4418

if.then10:                                        ; preds = %if.end8
  tail call void @ira_free_cost_vector(i32* nonnull %7, i32 %0) #7, !dbg !4419
  br label %if.end12, !dbg !4419

if.end12:                                         ; preds = %if.end8, %if.then10
  %updated_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 34, !dbg !4420
  %8 = load i32*, i32** %updated_hard_reg_costs, align 8, !dbg !4420
  %cmp13 = icmp eq i32* %8, null, !dbg !4422
  br i1 %cmp13, label %if.end16, label %if.then14, !dbg !4423

if.then14:                                        ; preds = %if.end12
  tail call void @ira_free_cost_vector(i32* nonnull %8, i32 %0) #7, !dbg !4424
  br label %if.end16, !dbg !4424

if.end16:                                         ; preds = %if.end12, %if.then14
  %updated_conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 36, !dbg !4425
  %9 = load i32*, i32** %updated_conflict_hard_reg_costs, align 8, !dbg !4425
  %cmp17 = icmp eq i32* %9, null, !dbg !4427
  br i1 %cmp17, label %if.end20, label %if.then18, !dbg !4428

if.then18:                                        ; preds = %if.end16
  tail call void @ira_free_cost_vector(i32* nonnull %9, i32 %0) #7, !dbg !4429
  br label %if.end20, !dbg !4429

if.end20:                                         ; preds = %if.end16, %if.then18
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 20, !dbg !4430
  %10 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !4430
  tail call void @ira_finish_allocno_live_range_list(%struct.ira_allocno_live_range* %10) #7, !dbg !4431
  %11 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @allocno_pool, align 8, !dbg !4432
  %12 = bitcast %struct.ira_allocno* %a to i8*, !dbg !4433
  tail call void @pool_free(%struct.alloc_pool_def* %11, i8* %12) #6, !dbg !4434
  ret void, !dbg !4435
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_copy(%struct.ira_allocno_copy* %cp) unnamed_addr #5 !dbg !4436 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp, metadata !4438, metadata !DIExpression()), !dbg !4439
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @copy_pool, align 8, !dbg !4440
  %1 = bitcast %struct.ira_allocno_copy* %cp to i8*, !dbg !4441
  tail call void @pool_free(%struct.alloc_pool_def* %0, i8* %1) #6, !dbg !4442
  ret void, !dbg !4443
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rebuild_regno_allocno_maps() unnamed_addr #5 !dbg !4444 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %loop = alloca %struct.loop*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !4453
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4453
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !4454
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4454
  %2 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !4455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4455
  %call = tail call i32 @max_reg_num() #6, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %call, metadata !4447, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata i32 0, metadata !4446, metadata !DIExpression()), !dbg !4457
  %conv = sext i32 %call to i64, !dbg !4458
  %mul = shl nsw i64 %conv, 3, !dbg !4458
  br label %for.cond, !dbg !4463

for.cond:                                         ; preds = %for.inc, %entry
  %l.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4464
  call void @llvm.dbg.value(metadata i32 %l.0, metadata !4446, metadata !DIExpression()), !dbg !4457
  %3 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !4465
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %3, i64 0, i32 0, !dbg !4465
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4451, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  %call1 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base, i32 %l.0, %struct.loop** nonnull %loop) #7, !dbg !4465
  %tobool2 = icmp eq i32 %call1, 0, !dbg !4466
  br i1 %tobool2, label %for.end, label %for.body, !dbg !4466

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4467
  %idxprom = zext i32 %l.0 to i64, !dbg !4467
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 %idxprom, i32 9, !dbg !4468
  %5 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !4468
  %cmp = icmp eq %struct.ira_allocno** %5, null, !dbg !4469
  br i1 %cmp, label %for.inc, label %if.then, !dbg !4470

if.then:                                          ; preds = %for.body
  %6 = bitcast %struct.ira_allocno** %5 to i8*, !dbg !4470
  call void @ira_free(i8* nonnull %6) #6, !dbg !4471
  %call6 = call i8* @ira_allocate(i64 %mul) #6, !dbg !4472
  %7 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4473
  %regno_allocno_map9 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %7, i64 %idxprom, i32 9, !dbg !4474
  %8 = bitcast %struct.ira_allocno*** %regno_allocno_map9 to i8**, !dbg !4475
  store i8* %call6, i8** %8, align 8, !dbg !4475
  %9 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4476
  %regno_allocno_map12 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %9, i64 %idxprom, i32 9, !dbg !4477
  %10 = bitcast %struct.ira_allocno*** %regno_allocno_map12 to i8**, !dbg !4477
  %11 = load i8*, i8** %10, align 8, !dbg !4477
  %call15 = call i8* @memset(i8* %11, i32 0, i64 %mul) #6, !dbg !4478
  br label %for.inc, !dbg !4479

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add i32 %l.0, 1, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4446, metadata !DIExpression()), !dbg !4457
  br label %for.cond, !dbg !4481, !llvm.loop !4482

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** bitcast (%struct.ira_allocno*** @ira_regno_allocno_map to i8**), align 8, !dbg !4484
  call void @ira_free(i8* %12) #6, !dbg !4485
  %call18 = call i8* @ira_allocate(i64 %mul) #6, !dbg !4486
  store i8* %call18, i8** bitcast (%struct.ira_allocno*** @ira_regno_allocno_map to i8**), align 8, !dbg !4487
  %call21 = call i8* @memset(i8* %call18, i32 0, i64 %mul) #6, !dbg !4488
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4452, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !4489
  %13 = bitcast %struct.ira_allocno** %a to i64*, !dbg !4491
  br label %for.cond22, !dbg !4489

for.cond22:                                       ; preds = %for.cond22.backedge, %for.end
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !4449, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4452, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  %call23 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !4495
  %tobool24 = icmp eq i8 %call23, 0, !dbg !4489
  br i1 %tobool24, label %for.end46, label %for.body25, !dbg !4489

for.body25:                                       ; preds = %for.cond22
  %14 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !4496
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !4449, metadata !DIExpression()), !dbg !4457
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 17, !dbg !4496
  %15 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !4496
  %cmp26 = icmp eq %struct.ira_allocno* %15, null, !dbg !4498
  br i1 %cmp26, label %if.end29, label %for.cond22.backedge, !dbg !4499

if.end29:                                         ; preds = %for.body25
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !4449, metadata !DIExpression()), !dbg !4457
  %regno30 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 1, !dbg !4500
  %16 = load i32, i32* %regno30, align 4, !dbg !4500
  call void @llvm.dbg.value(metadata i32 %16, metadata !4448, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !4449, metadata !DIExpression()), !dbg !4457
  %loop_tree_node31 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 6, !dbg !4501
  %17 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node31, align 8, !dbg !4501
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %17, metadata !4450, metadata !DIExpression()), !dbg !4457
  %18 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4502
  %idxprom32 = sext i32 %16 to i64, !dbg !4502
  %arrayidx33 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %18, i64 %idxprom32, !dbg !4502
  %19 = bitcast %struct.ira_allocno** %arrayidx33 to i64*, !dbg !4502
  %20 = load i64, i64* %19, align 8, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !4449, metadata !DIExpression()), !dbg !4457
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 5, !dbg !4503
  %21 = bitcast %struct.ira_allocno** %next_regno_allocno to i64*, !dbg !4504
  store i64 %20, i64* %21, align 8, !dbg !4504
  %.cast = ptrtoint %struct.ira_allocno* %14 to i64, !dbg !4505
  store i64 %.cast, i64* %19, align 8, !dbg !4506
  %regno_allocno_map36 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %17, i64 0, i32 9, !dbg !4507
  %22 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map36, align 8, !dbg !4507
  %arrayidx38 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %22, i64 %idxprom32, !dbg !4508
  %23 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx38, align 8, !dbg !4508
  %cmp39 = icmp eq %struct.ira_allocno* %23, null, !dbg !4509
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !4510

if.then41:                                        ; preds = %if.end29
  %24 = load i64, i64* %13, align 8, !dbg !4511
  %25 = bitcast %struct.ira_allocno** %arrayidx38 to i64*, !dbg !4512
  store i64 %24, i64* %25, align 8, !dbg !4512
  br label %if.end45, !dbg !4513

if.end45:                                         ; preds = %if.then41, %if.end29
  br label %for.cond22.backedge, !dbg !4495

for.cond22.backedge:                              ; preds = %if.end45, %for.body25
  br label %for.cond22, !dbg !4457, !llvm.loop !4514

for.end46:                                        ; preds = %for.cond22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4516
  ret void, !dbg !4516
}

declare dso_local void @ira_compress_allocno_live_ranges() local_unnamed_addr #2

declare dso_local void @ira_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ira_build(i8 zeroext %loops_p) local_unnamed_addr #5 !dbg !4517 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %a20 = alloca %struct.ira_allocno*, align 8
  %ai21 = alloca %struct.ira_allocno_iterator, align 4
  call void @llvm.dbg.value(metadata i8 %loops_p, metadata !4521, metadata !DIExpression()), !dbg !4533
  tail call void @df_analyze() #6, !dbg !4534
  tail call fastcc void @initiate_cost_vectors() #7, !dbg !4535
  tail call fastcc void @initiate_allocnos() #7, !dbg !4536
  tail call fastcc void @initiate_copies() #7, !dbg !4537
  tail call fastcc void @create_loop_tree_nodes(i8 zeroext %loops_p) #7, !dbg !4538
  tail call fastcc void @form_loop_tree() #7, !dbg !4539
  tail call fastcc void @create_allocnos() #7, !dbg !4540
  tail call void @ira_costs() #6, !dbg !4541
  tail call void @ira_create_allocno_live_ranges() #6, !dbg !4542
  tail call fastcc void @remove_unnecessary_regions(i8 zeroext 0) #7, !dbg !4543
  tail call void @ira_compress_allocno_live_ranges() #6, !dbg !4544
  tail call fastcc void @update_bad_spill_attribute() #7, !dbg !4545
  %call = tail call fastcc zeroext i8 @more_one_region_p() #7, !dbg !4546
  call void @llvm.dbg.value(metadata i8 %call, metadata !4521, metadata !DIExpression()), !dbg !4533
  %tobool = icmp eq i8 %call, 0, !dbg !4547
  br i1 %tobool, label %if.end, label %if.then, !dbg !4549

if.then:                                          ; preds = %entry
  tail call fastcc void @propagate_allocno_info() #7, !dbg !4550
  tail call fastcc void @create_caps() #7, !dbg !4552
  br label %if.end, !dbg !4553

if.end:                                           ; preds = %entry, %if.then
  tail call void @ira_tune_allocno_costs_and_cover_classes() #6, !dbg !4554
  tail call fastcc void @setup_min_max_allocno_live_range_point() #7, !dbg !4555
  tail call fastcc void @sort_conflict_id_allocno_map() #7, !dbg !4556
  tail call fastcc void @setup_min_max_conflict_allocno_ids() #7, !dbg !4557
  tail call void @ira_build_conflicts() #6, !dbg !4558
  %0 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4559
  %tobool1 = icmp eq i8 %0, 0, !dbg !4559
  br i1 %tobool1, label %if.then2, label %if.end11, !dbg !4560

if.then2:                                         ; preds = %if.end
  %1 = bitcast %struct.ira_allocno** %a to i8*, !dbg !4561
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4561
  %2 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !4562
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4562
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !4563

if.then4:                                         ; preds = %if.then2
  tail call fastcc void @remove_unnecessary_regions(i8 zeroext 1) #7, !dbg !4564
  call void @llvm.dbg.value(metadata i8 0, metadata !4521, metadata !DIExpression()), !dbg !4533
  br label %if.end5, !dbg !4567

if.end5:                                          ; preds = %if.then2, %if.then4
  call void @llvm.dbg.value(metadata i8 0, metadata !4521, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4525, metadata !DIExpression(DW_OP_deref)), !dbg !4568
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !4569
  br label %for.cond, !dbg !4569

for.cond:                                         ; preds = %if.end10, %if.end5
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !4522, metadata !DIExpression(DW_OP_deref)), !dbg !4568
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4525, metadata !DIExpression(DW_OP_deref)), !dbg !4568
  %call6 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !4571
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4569
  br i1 %tobool7, label %for.end, label %for.body, !dbg !4569

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !4573
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !4522, metadata !DIExpression()), !dbg !4568
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 30, !dbg !4573
  %4 = load i32, i32* %calls_crossed_num, align 8, !dbg !4573
  %cmp = icmp eq i32 %4, 0, !dbg !4575
  br i1 %cmp, label %if.end10, label %if.then8, !dbg !4576

if.then8:                                         ; preds = %for.body
  %5 = load i64, i64* @call_used_reg_set, align 8, !dbg !4577
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !4522, metadata !DIExpression()), !dbg !4568
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 27, !dbg !4577
  %6 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !4577
  %or = or i64 %6, %5, !dbg !4577
  store i64 %or, i64* %total_conflict_hard_regs, align 8, !dbg !4577
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !4522, metadata !DIExpression()), !dbg !4568
  %conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 26, !dbg !4579
  %7 = load i64, i64* %conflict_hard_regs, align 8, !dbg !4579
  %or9 = or i64 %7, %5, !dbg !4579
  store i64 %or9, i64* %conflict_hard_regs, align 8, !dbg !4579
  br label %if.end10, !dbg !4580

if.end10:                                         ; preds = %for.body, %if.then8
  br label %for.cond, !dbg !4571, !llvm.loop !4581

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4583
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4583
  br label %if.end11, !dbg !4584

if.end11:                                         ; preds = %if.end, %for.end
  %loops_p.addr.1 = phi i8 [ %call, %if.end ], [ 0, %for.end ], !dbg !4533
  call void @llvm.dbg.value(metadata i8 %loops_p.addr.1, metadata !4521, metadata !DIExpression()), !dbg !4533
  %8 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4585
  %cmp12 = icmp sgt i32 %8, 2, !dbg !4587
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4588
  %cmp13 = icmp ne %struct._IO_FILE* %9, null, !dbg !4589
  %or.cond = and i1 %cmp12, %cmp13, !dbg !4590
  br i1 %or.cond, label %if.then14, label %if.end15, !dbg !4590

if.then14:                                        ; preds = %if.end11
  call fastcc void @print_copies(%struct._IO_FILE* nonnull %9) #7, !dbg !4591
  %.pre = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4592
  %.pre2 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4593
  br label %if.end15, !dbg !4591

if.end15:                                         ; preds = %if.then14, %if.end11
  %10 = phi %struct._IO_FILE* [ %.pre2, %if.then14 ], [ %9, %if.end11 ], !dbg !4593
  %11 = phi i32 [ %.pre, %if.then14 ], [ %8, %if.end11 ], !dbg !4592
  %cmp16 = icmp sgt i32 %11, 0, !dbg !4594
  %cmp18 = icmp ne %struct._IO_FILE* %10, null, !dbg !4595
  %or.cond1 = and i1 %cmp16, %cmp18, !dbg !4596
  br i1 %or.cond1, label %if.then19, label %if.end40, !dbg !4596

if.then19:                                        ; preds = %if.end15
  %12 = bitcast %struct.ira_allocno** %a20 to i8*, !dbg !4597
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8, !dbg !4597
  %13 = bitcast %struct.ira_allocno_iterator* %ai21 to i8*, !dbg !4598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8, !dbg !4598
  call void @llvm.dbg.value(metadata i32 0, metadata !4526, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai21, metadata !4532, metadata !DIExpression(DW_OP_deref)), !dbg !4599
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai21) #7, !dbg !4600
  br label %for.cond22, !dbg !4600

for.cond22:                                       ; preds = %for.body25, %if.then19
  %n.0 = phi i32 [ 0, %if.then19 ], [ %add, %for.body25 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !4526, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a20, metadata !4530, metadata !DIExpression(DW_OP_deref)), !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai21, metadata !4532, metadata !DIExpression(DW_OP_deref)), !dbg !4599
  %call23 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai21, %struct.ira_allocno** nonnull %a20) #7, !dbg !4602
  %tobool24 = icmp eq i8 %call23, 0, !dbg !4600
  br i1 %tobool24, label %for.end26, label %for.body25, !dbg !4600

for.body25:                                       ; preds = %for.cond22
  %14 = load %struct.ira_allocno*, %struct.ira_allocno** %a20, align 8, !dbg !4604
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !4530, metadata !DIExpression()), !dbg !4599
  %conflict_allocnos_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 28, !dbg !4604
  %15 = load i32, i32* %conflict_allocnos_num, align 8, !dbg !4604
  %add = add nsw i32 %n.0, %15, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %add, metadata !4526, metadata !DIExpression()), !dbg !4599
  br label %for.cond22, !dbg !4602, !llvm.loop !4606

for.end26:                                        ; preds = %for.cond22
  %n.0.lcssa = phi i32 [ %n.0, %for.cond22 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4526, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4526, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4526, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32 0, metadata !4529, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai21, metadata !4532, metadata !DIExpression(DW_OP_deref)), !dbg !4599
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai21) #7, !dbg !4608
  br label %for.cond27, !dbg !4608

for.cond27.loopexit:                              ; preds = %for.cond31
  %nr.1.lcssa = phi i32 [ %nr.1, %for.cond31 ], !dbg !4599
  call void @llvm.dbg.value(metadata i32 %nr.1.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32 %nr.1.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32 %nr.1.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4599
  br label %for.cond27, !dbg !4608

for.cond27:                                       ; preds = %for.cond27.loopexit, %for.end26
  %nr.0 = phi i32 [ 0, %for.end26 ], [ %nr.1.lcssa, %for.cond27.loopexit ], !dbg !4610
  call void @llvm.dbg.value(metadata i32 %nr.0, metadata !4529, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a20, metadata !4530, metadata !DIExpression(DW_OP_deref)), !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai21, metadata !4532, metadata !DIExpression(DW_OP_deref)), !dbg !4599
  %call28 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai21, %struct.ira_allocno** nonnull %a20) #7, !dbg !4611
  %tobool29 = icmp eq i8 %call28, 0, !dbg !4608
  br i1 %tobool29, label %for.end35, label %for.body30, !dbg !4608

for.body30:                                       ; preds = %for.cond27
  %16 = load %struct.ira_allocno*, %struct.ira_allocno** %a20, align 8, !dbg !4613
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %16, metadata !4530, metadata !DIExpression()), !dbg !4599
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 20, !dbg !4613
  br label %for.cond31, !dbg !4615

for.cond31:                                       ; preds = %for.body33, %for.body30
  %r.0.in = phi %struct.ira_allocno_live_range** [ %live_ranges, %for.body30 ], [ %next, %for.body33 ]
  %nr.1 = phi i32 [ %nr.0, %for.body30 ], [ %inc, %for.body33 ], !dbg !4599
  %r.0 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.0.in, align 8, !dbg !4616
  call void @llvm.dbg.value(metadata i32 %nr.1, metadata !4529, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0, metadata !4531, metadata !DIExpression()), !dbg !4599
  %cmp32 = icmp eq %struct.ira_allocno_live_range* %r.0, null, !dbg !4617
  br i1 %cmp32, label %for.cond27.loopexit, label %for.body33, !dbg !4619, !llvm.loop !4620

for.body33:                                       ; preds = %for.cond31
  %inc = add nsw i32 %nr.1, 1, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4529, metadata !DIExpression()), !dbg !4599
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 3, !dbg !4623
  br label %for.cond31, !dbg !4624, !llvm.loop !4625

for.end35:                                        ; preds = %for.cond27
  %nr.0.lcssa = phi i32 [ %nr.0, %for.cond27 ], !dbg !4610
  call void @llvm.dbg.value(metadata i32 %nr.0.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32 %nr.0.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32 %nr.0.lcssa, metadata !4529, metadata !DIExpression()), !dbg !4599
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4627
  %18 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !4628
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %18, i64 0, i32 0, !dbg !4628
  %call37 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base) #7, !dbg !4628
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4629
  %cfg = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !4629
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4629
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 3, !dbg !4629
  %21 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4629
  %22 = load i32, i32* @ira_max_point, align 4, !dbg !4630
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i32 %call37, i32 %21, i32 %22) #6, !dbg !4631
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4632
  %24 = load i32, i32* @ira_allocnos_num, align 4, !dbg !4633
  %25 = load i32, i32* @ira_copies_num, align 4, !dbg !4634
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0), i32 %24, i32 %25, i32 %n.0.lcssa, i32 %nr.0.lcssa) #6, !dbg !4635
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8, !dbg !4636
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8, !dbg !4636
  br label %if.end40, !dbg !4637

if.end40:                                         ; preds = %for.end35, %if.end15
  ret i8 %loops_p.addr.1, !dbg !4638
}

declare dso_local void @df_analyze() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @initiate_cost_vectors() unnamed_addr #5 !dbg !4639 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !4641, metadata !DIExpression()), !dbg !4643
  br label %for.cond, !dbg !4644

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4646
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4641, metadata !DIExpression()), !dbg !4643
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4647
  %1 = sext i32 %0 to i64, !dbg !4649
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !4649
  br i1 %cmp, label %for.body, label %for.end, !dbg !4650

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !4651
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %2, metadata !4642, metadata !DIExpression()), !dbg !4643
  %idxprom1 = zext i32 %2 to i64, !dbg !4653
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom1, !dbg !4653
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !4653
  %conv = sext i32 %3 to i64, !dbg !4653
  %mul = shl nsw i64 %conv, 2, !dbg !4654
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i64 %mul, i64 100) #6, !dbg !4655
  %arrayidx4 = getelementptr inbounds [27 x %struct.alloc_pool_def*], [27 x %struct.alloc_pool_def*]* @cost_vector_pool, i64 0, i64 %idxprom1, !dbg !4656
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %arrayidx4, align 8, !dbg !4657
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4658
  call void @llvm.dbg.value(metadata i32 undef, metadata !4641, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4643
  br label %for.cond, !dbg !4659, !llvm.loop !4660

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4662
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initiate_allocnos() unnamed_addr #5 !dbg !4663 {
entry:
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0), i64 40, i64 100) #6, !dbg !4664
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** @allocno_live_range_pool, align 8, !dbg !4665
  %call1 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i64 248, i64 100) #6, !dbg !4666
  store %struct.alloc_pool_def* %call1, %struct.alloc_pool_def** @allocno_pool, align 8, !dbg !4667
  %call2 = tail call i32 @max_reg_num() #6, !dbg !4668
  %mul = shl nsw i32 %call2, 1, !dbg !4668
  %call3 = tail call fastcc %struct.VEC_ira_allocno_t_heap* @VEC_ira_allocno_t_heap_alloc(i32 %mul) #7, !dbg !4668
  store %struct.VEC_ira_allocno_t_heap* %call3, %struct.VEC_ira_allocno_t_heap** @allocno_vec, align 8, !dbg !4669
  store %struct.ira_allocno** null, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !4670
  store i32 0, i32* @ira_allocnos_num, align 4, !dbg !4671
  %call4 = tail call i32 @max_reg_num() #6, !dbg !4672
  %mul5 = shl nsw i32 %call4, 1, !dbg !4672
  %call6 = tail call fastcc %struct.VEC_ira_allocno_t_heap* @VEC_ira_allocno_t_heap_alloc(i32 %mul5) #7, !dbg !4672
  store %struct.VEC_ira_allocno_t_heap* %call6, %struct.VEC_ira_allocno_t_heap** @ira_conflict_id_allocno_map_vec, align 8, !dbg !4673
  store %struct.ira_allocno** null, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !4674
  %call7 = tail call i32 @max_reg_num() #6, !dbg !4675
  %conv = sext i32 %call7 to i64, !dbg !4675
  %mul8 = shl nsw i64 %conv, 3, !dbg !4676
  %call9 = tail call i8* @ira_allocate(i64 %mul8) #6, !dbg !4677
  store i8* %call9, i8** bitcast (%struct.ira_allocno*** @ira_regno_allocno_map to i8**), align 8, !dbg !4678
  %call10 = tail call i32 @max_reg_num() #6, !dbg !4679
  %conv11 = sext i32 %call10 to i64, !dbg !4679
  %mul12 = shl nsw i64 %conv11, 3, !dbg !4680
  %call13 = tail call i8* @memset(i8* %call9, i32 0, i64 %mul12) #6, !dbg !4681
  ret void, !dbg !4682
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initiate_copies() unnamed_addr #5 !dbg !4683 {
entry:
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i64 80, i64 100) #6, !dbg !4684
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** @copy_pool, align 8, !dbg !4685
  %call1 = tail call i32 @get_max_uid() #6, !dbg !4686
  %call2 = tail call fastcc %struct.VEC_ira_copy_t_heap* @VEC_ira_copy_t_heap_alloc(i32 %call1) #7, !dbg !4686
  store %struct.VEC_ira_copy_t_heap* %call2, %struct.VEC_ira_copy_t_heap** @copy_vec, align 8, !dbg !4687
  store %struct.ira_allocno_copy** null, %struct.ira_allocno_copy*** @ira_copies, align 8, !dbg !4688
  store i32 0, i32* @ira_copies_num, align 4, !dbg !4689
  ret void, !dbg !4690
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_loop_tree_nodes(i8 zeroext %loops_p) unnamed_addr #5 !dbg !4691 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %edges = alloca %struct.VEC_edge_heap*, align 8
  %loop = alloca %struct.loop*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %loops_p, metadata !4695, metadata !DIExpression()), !dbg !4715
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4716
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4716
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !4717
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4717
  %2 = bitcast %struct.VEC_edge_heap** %edges to i8*, !dbg !4718
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4718
  %3 = bitcast %struct.loop** %loop to i8*, !dbg !4719
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4719
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4720
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4720
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4720
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 5, !dbg !4720
  %6 = load i32, i32* %x_last_basic_block, align 8, !dbg !4720
  %conv = sext i32 %6 to i64, !dbg !4720
  %mul = mul nsw i64 %conv, 216, !dbg !4721
  %call = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !4722
  store i8* %call, i8** bitcast (%struct.ira_loop_tree_node** @ira_bb_nodes to i8**), align 8, !dbg !4723
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4724
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !4724
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !4724
  %x_last_basic_block3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 5, !dbg !4724
  %9 = load i32, i32* %x_last_basic_block3, align 8, !dbg !4724
  store i32 %9, i32* @last_basic_block_before_change, align 4, !dbg !4725
  call void @llvm.dbg.value(metadata i32 0, metadata !4696, metadata !DIExpression()), !dbg !4715
  br label %for.cond, !dbg !4726

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !4728
  %10 = phi i32 [ %.pre2, %for.body ], [ %9, %entry ], !dbg !4728
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4696, metadata !DIExpression()), !dbg !4715
  %11 = zext i32 %10 to i64, !dbg !4730
  %cmp = icmp ult i64 %indvars.iv, %11, !dbg !4730
  br i1 %cmp, label %for.body, label %for.end, !dbg !4731

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !4732
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %12, i64 %indvars.iv, i32 9, !dbg !4734
  store %struct.ira_allocno** null, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !4735
  %13 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !4736
  %arraydecay = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %13, i64 %indvars.iv, i32 11, i64 0, !dbg !4736
  %14 = bitcast i32* %arraydecay to i8*, !dbg !4736
  %call10 = tail call i8* @memset(i8* nonnull %14, i32 0, i64 108) #6, !dbg !4737
  %15 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !4738
  %all_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %15, i64 %indvars.iv, i32 12, !dbg !4739
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !4740
  %16 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !4741
  %modified_regnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %16, i64 %indvars.iv, i32 14, !dbg !4742
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %modified_regnos, align 8, !dbg !4743
  %17 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !4744
  %border_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %17, i64 %indvars.iv, i32 13, !dbg !4745
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %border_allocnos, align 8, !dbg !4746
  %18 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !4747
  %local_copies = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %18, i64 %indvars.iv, i32 15, !dbg !4748
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %local_copies, align 8, !dbg !4749
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4728
  %cfg5.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4750
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5.phi.trans.insert, align 8, !dbg !4728
  %x_last_basic_block6.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre1, i64 0, i32 5, !dbg !4750
  %.pre2 = load i32, i32* %x_last_basic_block6.phi.trans.insert, align 8, !dbg !4728
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4751
  br label %for.cond, !dbg !4752, !llvm.loop !4753

for.end:                                          ; preds = %for.cond
  %19 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !4755
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %19, i64 0, i32 0, !dbg !4755
  %call19 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base) #7, !dbg !4755
  %conv20 = zext i32 %call19 to i64, !dbg !4755
  %mul21 = mul nuw nsw i64 %conv20, 216, !dbg !4756
  %call22 = tail call i8* @ira_allocate(i64 %mul21) #6, !dbg !4757
  store i8* %call22, i8** bitcast (%struct.ira_loop_tree_node** @ira_loop_nodes to i8**), align 8, !dbg !4758
  %call23 = tail call i32 @max_reg_num() #6, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %call23, metadata !4698, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 0, metadata !4696, metadata !DIExpression()), !dbg !4715
  %tobool39 = icmp eq i8 %loops_p, 0, !dbg !4760
  %20 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4767
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4767
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4767
  %23 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4769
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4769
  %conv133 = sext i32 %call23 to i64, !dbg !4771
  %mul134 = shl nsw i64 %conv133, 3, !dbg !4771
  br label %for.cond24, !dbg !4772

for.cond24:                                       ; preds = %for.inc166, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc167, %for.inc166 ], !dbg !4773
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4696, metadata !DIExpression()), !dbg !4715
  %25 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !4774
  %base27 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %25, i64 0, i32 0, !dbg !4774
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4714, metadata !DIExpression(DW_OP_deref)), !dbg !4715
  %call31 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base27, i32 %i.1, %struct.loop** nonnull %loop) #7, !dbg !4774
  %tobool32 = icmp eq i32 %call31, 0, !dbg !4775
  br i1 %tobool32, label %for.end168, label %for.body33, !dbg !4775

for.body33:                                       ; preds = %for.cond24
  %26 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4776
  call void @llvm.dbg.value(metadata %struct.loop* %26, metadata !4714, metadata !DIExpression()), !dbg !4715
  %27 = load %struct.loop*, %struct.loop** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 3), align 8, !dbg !4777
  %cmp34 = icmp eq %struct.loop* %26, %27, !dbg !4778
  br i1 %cmp34, label %for.body33.if.end132_crit_edge, label %if.then, !dbg !4779

for.body33.if.end132_crit_edge:                   ; preds = %for.body33
  %.pre4 = zext i32 %i.1 to i64, !dbg !4780
  br label %if.end132, !dbg !4779

if.then:                                          ; preds = %for.body33
  %28 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4781
  %idxprom36 = zext i32 %i.1 to i64, !dbg !4781
  %regno_allocno_map38 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %28, i64 %idxprom36, i32 9, !dbg !4782
  store %struct.ira_allocno** null, %struct.ira_allocno*** %regno_allocno_map38, align 8, !dbg !4783
  br i1 %tobool39, label %for.inc166, label %if.end, !dbg !4784

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i8 0, metadata !4699, metadata !DIExpression()), !dbg !4715
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8, !dbg !4785
  %29 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4785
  call void @llvm.dbg.value(metadata %struct.loop* %29, metadata !4714, metadata !DIExpression()), !dbg !4715
  %header = getelementptr inbounds %struct.loop, %struct.loop* %29, i64 0, i32 2, !dbg !4785
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4785
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i64 0, i32 0, !dbg !4785
  %call41 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4785
  %31 = extractvalue { i32, %struct.VEC_edge_gc** } %call41, 0, !dbg !4785
  store i32 %31, i32* %21, align 8, !dbg !4785
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call41, 1, !dbg !4785
  store %struct.VEC_edge_gc** %32, %struct.VEC_edge_gc*** %22, align 8, !dbg !4785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %20, i64 16, i1 false), !dbg !4785
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8, !dbg !4785
  br label %for.cond42, !dbg !4785

for.cond42:                                       ; preds = %for.inc77, %if.end
  %33 = load i32, i32* %23, align 8, !dbg !4786
  %34 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %24, align 8, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4707, metadata !DIExpression(DW_OP_deref)), !dbg !4715
  %call43 = call fastcc zeroext i8 @ei_cond(i32 %33, %struct.VEC_edge_gc** %34, %struct.edge_def** nonnull %e) #7, !dbg !4786
  %tobool44 = icmp eq i8 %call43, 0, !dbg !4785
  br i1 %tobool44, label %for.end78, label %for.body45, !dbg !4785

for.body45:                                       ; preds = %for.cond42
  %35 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4787
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !4707, metadata !DIExpression()), !dbg !4715
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %35, i64 0, i32 0, !dbg !4789
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4789
  %37 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4790
  call void @llvm.dbg.value(metadata %struct.loop* %37, metadata !4714, metadata !DIExpression()), !dbg !4715
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %37, i64 0, i32 3, !dbg !4791
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4791
  %cmp46 = icmp eq %struct.basic_block_def* %36, %38, !dbg !4792
  br i1 %cmp46, label %for.inc77, label %land.lhs.true, !dbg !4793

land.lhs.true:                                    ; preds = %for.body45
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !4707, metadata !DIExpression()), !dbg !4715
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %35, i64 0, i32 7, !dbg !4794
  %39 = load i32, i32* %flags, align 8, !dbg !4794
  %and = and i32 %39, 2, !dbg !4795
  %tobool48 = icmp eq i32 %and, 0, !dbg !4795
  br i1 %tobool48, label %for.inc77, label %land.lhs.true49, !dbg !4796

land.lhs.true49:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !4707, metadata !DIExpression()), !dbg !4715
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i64 0, i32 1, !dbg !4797
  %40 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4797
  %tobool51 = icmp eq %struct.VEC_edge_gc* %40, null, !dbg !4797
  br i1 %tobool51, label %cond.end57, label %cond.true52, !dbg !4797

cond.true52:                                      ; preds = %land.lhs.true49
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !4707, metadata !DIExpression()), !dbg !4715
  %base55 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %40, i64 0, i32 0, !dbg !4797
  br label %cond.end57, !dbg !4797

cond.end57:                                       ; preds = %land.lhs.true49, %cond.true52
  %cond58 = phi %struct.VEC_edge_base* [ %base55, %cond.true52 ], [ null, %land.lhs.true49 ], !dbg !4797
  %call59 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond58) #7, !dbg !4797
  %cmp60 = icmp ugt i32 %call59, 1, !dbg !4797
  br i1 %cmp60, label %land.lhs.true62, label %for.inc77, !dbg !4797

land.lhs.true62:                                  ; preds = %cond.end57
  %41 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4797
  call void @llvm.dbg.value(metadata %struct.edge_def* %41, metadata !4707, metadata !DIExpression()), !dbg !4715
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %41, i64 0, i32 1, !dbg !4797
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4797
  %preds63 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i64 0, i32 0, !dbg !4797
  %43 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds63, align 8, !dbg !4797
  %tobool64 = icmp eq %struct.VEC_edge_gc* %43, null, !dbg !4797
  br i1 %tobool64, label %cond.end70, label %cond.true65, !dbg !4797

cond.true65:                                      ; preds = %land.lhs.true62
  call void @llvm.dbg.value(metadata %struct.edge_def* %41, metadata !4707, metadata !DIExpression()), !dbg !4715
  %base68 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %43, i64 0, i32 0, !dbg !4797
  br label %cond.end70, !dbg !4797

cond.end70:                                       ; preds = %land.lhs.true62, %cond.true65
  %cond71 = phi %struct.VEC_edge_base* [ %base68, %cond.true65 ], [ null, %land.lhs.true62 ], !dbg !4797
  %call72 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond71) #7, !dbg !4797
  %cmp73 = icmp ugt i32 %call72, 1, !dbg !4797
  br i1 %cmp73, label %for.end78, label %for.inc77, !dbg !4798

for.inc77:                                        ; preds = %land.lhs.true, %for.body45, %cond.end57, %cond.end70
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4700, metadata !DIExpression(DW_OP_deref)), !dbg !4715
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4786
  br label %for.cond42, !dbg !4786, !llvm.loop !4799

for.end78:                                        ; preds = %for.cond42, %cond.end70
  %skip_p.0 = phi i1 [ true, %for.cond42 ], [ false, %cond.end70 ]
  br i1 %skip_p.0, label %if.end81, label %for.inc166, !dbg !4801

if.end81:                                         ; preds = %for.end78
  %44 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !4802
  call void @llvm.dbg.value(metadata %struct.loop* %44, metadata !4714, metadata !DIExpression()), !dbg !4715
  %call82 = call %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop* %44) #6, !dbg !4803
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call82, metadata !4708, metadata !DIExpression()), !dbg !4715
  store %struct.VEC_edge_heap* %call82, %struct.VEC_edge_heap** %edges, align 8, !dbg !4804
  call void @llvm.dbg.value(metadata i32 0, metadata !4697, metadata !DIExpression()), !dbg !4715
  br label %for.cond83, !dbg !4805

for.cond83:                                       ; preds = %for.inc126, %if.end81
  %45 = phi %struct.VEC_edge_heap* [ %call82, %if.end81 ], [ %.pre3, %for.inc126 ], !dbg !4807
  %j.0 = phi i32 [ 0, %if.end81 ], [ %inc127, %for.inc126 ], !dbg !4809
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4697, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %45, metadata !4708, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %45, metadata !4708, metadata !DIExpression()), !dbg !4715
  %base86 = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %45, i64 0, i32 0, !dbg !4807
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4707, metadata !DIExpression(DW_OP_deref)), !dbg !4715
  %call90 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base86, i32 %j.0, %struct.edge_def** nonnull %e) #7, !dbg !4807
  %tobool91 = icmp eq i32 %call90, 0, !dbg !4810
  br i1 %tobool91, label %for.end128, label %for.body92, !dbg !4810

for.body92:                                       ; preds = %for.cond83
  %46 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4811
  call void @llvm.dbg.value(metadata %struct.edge_def* %46, metadata !4707, metadata !DIExpression()), !dbg !4715
  %flags93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %46, i64 0, i32 7, !dbg !4813
  %47 = load i32, i32* %flags93, align 8, !dbg !4813
  %and94 = and i32 %47, 2, !dbg !4814
  %tobool95 = icmp eq i32 %and94, 0, !dbg !4814
  br i1 %tobool95, label %for.inc126, label %land.lhs.true96, !dbg !4815

land.lhs.true96:                                  ; preds = %for.body92
  call void @llvm.dbg.value(metadata %struct.edge_def* %46, metadata !4707, metadata !DIExpression()), !dbg !4715
  %src97 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %46, i64 0, i32 0, !dbg !4816
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %src97, align 8, !dbg !4816
  %succs98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i64 0, i32 1, !dbg !4816
  %49 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs98, align 8, !dbg !4816
  %tobool99 = icmp eq %struct.VEC_edge_gc* %49, null, !dbg !4816
  br i1 %tobool99, label %cond.end105, label %cond.true100, !dbg !4816

cond.true100:                                     ; preds = %land.lhs.true96
  call void @llvm.dbg.value(metadata %struct.edge_def* %46, metadata !4707, metadata !DIExpression()), !dbg !4715
  %base103 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %49, i64 0, i32 0, !dbg !4816
  br label %cond.end105, !dbg !4816

cond.end105:                                      ; preds = %land.lhs.true96, %cond.true100
  %cond106 = phi %struct.VEC_edge_base* [ %base103, %cond.true100 ], [ null, %land.lhs.true96 ], !dbg !4816
  %call107 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond106) #7, !dbg !4816
  %cmp108 = icmp ugt i32 %call107, 1, !dbg !4816
  br i1 %cmp108, label %land.lhs.true110, label %for.inc126, !dbg !4816

land.lhs.true110:                                 ; preds = %cond.end105
  %50 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4816
  call void @llvm.dbg.value(metadata %struct.edge_def* %50, metadata !4707, metadata !DIExpression()), !dbg !4715
  %dest111 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %50, i64 0, i32 1, !dbg !4816
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %dest111, align 8, !dbg !4816
  %preds112 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i64 0, i32 0, !dbg !4816
  %52 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds112, align 8, !dbg !4816
  %tobool113 = icmp eq %struct.VEC_edge_gc* %52, null, !dbg !4816
  br i1 %tobool113, label %cond.end119, label %cond.true114, !dbg !4816

cond.true114:                                     ; preds = %land.lhs.true110
  call void @llvm.dbg.value(metadata %struct.edge_def* %50, metadata !4707, metadata !DIExpression()), !dbg !4715
  %base117 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %52, i64 0, i32 0, !dbg !4816
  br label %cond.end119, !dbg !4816

cond.end119:                                      ; preds = %land.lhs.true110, %cond.true114
  %cond120 = phi %struct.VEC_edge_base* [ %base117, %cond.true114 ], [ null, %land.lhs.true110 ], !dbg !4816
  %call121 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond120) #7, !dbg !4816
  %cmp122 = icmp ugt i32 %call121, 1, !dbg !4816
  br i1 %cmp122, label %for.end128, label %for.inc126, !dbg !4817

for.inc126:                                       ; preds = %for.body92, %cond.end105, %cond.end119
  %inc127 = add i32 %j.0, 1, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %inc127, metadata !4697, metadata !DIExpression()), !dbg !4715
  %.pre3 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !4807
  br label %for.cond83, !dbg !4819, !llvm.loop !4820

for.end128:                                       ; preds = %for.cond83, %cond.end119
  %skip_p.1 = phi i1 [ true, %for.cond83 ], [ false, %cond.end119 ]
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %edges, metadata !4708, metadata !DIExpression(DW_OP_deref)), !dbg !4715
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %edges) #7, !dbg !4822
  br i1 %skip_p.1, label %if.end132, label %for.inc166, !dbg !4823

if.end132:                                        ; preds = %for.body33.if.end132_crit_edge, %for.end128
  %idxprom136.pre-phi = phi i64 [ %.pre4, %for.body33.if.end132_crit_edge ], [ %idxprom36, %for.end128 ], !dbg !4780
  %call135 = call i8* @ira_allocate(i64 %mul134) #6, !dbg !4824
  %53 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4780
  %regno_allocno_map138 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %53, i64 %idxprom136.pre-phi, i32 9, !dbg !4825
  %54 = bitcast %struct.ira_allocno*** %regno_allocno_map138 to i8**, !dbg !4826
  store i8* %call135, i8** %54, align 8, !dbg !4826
  %55 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4827
  %regno_allocno_map141 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %55, i64 %idxprom136.pre-phi, i32 9, !dbg !4828
  %56 = bitcast %struct.ira_allocno*** %regno_allocno_map141 to i8**, !dbg !4828
  %57 = load i8*, i8** %56, align 8, !dbg !4828
  %call144 = call i8* @memset(i8* %57, i32 0, i64 %mul134) #6, !dbg !4829
  %58 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4830
  %arraydecay148 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %58, i64 %idxprom136.pre-phi, i32 11, i64 0, !dbg !4830
  %59 = bitcast i32* %arraydecay148 to i8*, !dbg !4830
  %call149 = call i8* @memset(i8* nonnull %59, i32 0, i64 108) #6, !dbg !4831
  %call150 = call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !4832
  %60 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4833
  %all_allocnos153 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %60, i64 %idxprom136.pre-phi, i32 12, !dbg !4834
  store %struct.bitmap_head_def* %call150, %struct.bitmap_head_def** %all_allocnos153, align 8, !dbg !4835
  %call154 = call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !4836
  %61 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4837
  %modified_regnos157 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %61, i64 %idxprom136.pre-phi, i32 14, !dbg !4838
  store %struct.bitmap_head_def* %call154, %struct.bitmap_head_def** %modified_regnos157, align 8, !dbg !4839
  %call158 = call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !4840
  %62 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4841
  %border_allocnos161 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %62, i64 %idxprom136.pre-phi, i32 13, !dbg !4842
  store %struct.bitmap_head_def* %call158, %struct.bitmap_head_def** %border_allocnos161, align 8, !dbg !4843
  %call162 = call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !4844
  %63 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4845
  %local_copies165 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %63, i64 %idxprom136.pre-phi, i32 15, !dbg !4846
  store %struct.bitmap_head_def* %call162, %struct.bitmap_head_def** %local_copies165, align 8, !dbg !4847
  br label %for.inc166, !dbg !4848

for.inc166:                                       ; preds = %for.end128, %for.end78, %if.then, %if.end132
  %inc167 = add i32 %i.1, 1, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %inc167, metadata !4696, metadata !DIExpression()), !dbg !4715
  br label %for.cond24, !dbg !4850, !llvm.loop !4851

for.end168:                                       ; preds = %for.cond24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4853
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4853
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4853
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4853
  ret void, !dbg !4853
}

; Function Attrs: nounwind uwtable
define internal fastcc void @form_loop_tree() unnamed_addr #5 !dbg !4854 {
entry:
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !4862
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4862
  call void @llvm.dbg.value(metadata i32 0, metadata !4856, metadata !DIExpression()), !dbg !4863
  br label %for.cond, !dbg !4864

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4866
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4856, metadata !DIExpression()), !dbg !4863
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !4867
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !4867
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4861, metadata !DIExpression(DW_OP_deref)), !dbg !4863
  %call = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base, i32 %i.0, %struct.loop** nonnull %loop) #7, !dbg !4867
  %tobool1 = icmp eq i32 %call, 0, !dbg !4869
  br i1 %tobool1, label %for.end, label %for.body, !dbg !4869

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4870
  %idxprom = zext i32 %i.0 to i64, !dbg !4870
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %2, i64 %idxprom, i32 9, !dbg !4872
  %3 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !4872
  %cmp = icmp eq %struct.ira_allocno** %3, null, !dbg !4873
  br i1 %cmp, label %for.inc, label %if.then, !dbg !4874

if.then:                                          ; preds = %for.body
  %children = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %2, i64 %idxprom, i32 5, !dbg !4875
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %children, align 8, !dbg !4877
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4878
  %subloops = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 %idxprom, i32 4, !dbg !4879
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %subloops, align 8, !dbg !4880
  br label %for.inc, !dbg !4881

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add i32 %i.0, 1, !dbg !4882
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4856, metadata !DIExpression()), !dbg !4863
  br label %for.cond, !dbg !4883, !llvm.loop !4884

for.end:                                          ; preds = %for.cond
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4886
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !4886
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4886
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !4886
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4886
  br label %for.cond6, !dbg !4886

for.cond6:                                        ; preds = %for.end28, %for.end
  %8 = phi %struct.control_flow_graph* [ %6, %for.end ], [ %.pre1, %for.end28 ], !dbg !4888
  %.pn = phi %struct.basic_block_def* [ %7, %for.end ], [ %bb.0, %for.end28 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4890
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4890
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4857, metadata !DIExpression()), !dbg !4863
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !4888
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4888
  %cmp9 = icmp eq %struct.basic_block_def* %bb.0, %9, !dbg !4888
  br i1 %cmp9, label %for.end38, label %for.body10, !dbg !4886

for.body10:                                       ; preds = %for.cond6
  %10 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !4891
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !4893
  %11 = load i32, i32* %index, align 8, !dbg !4893
  %idxprom11 = sext i32 %11 to i64, !dbg !4891
  %arrayidx12 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %idxprom11, !dbg !4891
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %arrayidx12, metadata !4859, metadata !DIExpression()), !dbg !4863
  %bb13 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %arrayidx12, i64 0, i32 0, !dbg !4894
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %bb13, align 8, !dbg !4895
  %loop14 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %idxprom11, i32 1, !dbg !4896
  store %struct.loop* null, %struct.loop** %loop14, align 8, !dbg !4897
  %subloops15 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %idxprom11, i32 4, !dbg !4898
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %subloops15, align 8, !dbg !4899
  %children16 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %idxprom11, i32 5, !dbg !4900
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %children16, align 8, !dbg !4901
  %subloop_next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %idxprom11, i32 2, !dbg !4902
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %subloop_next, align 8, !dbg !4903
  %next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %idxprom11, i32 3, !dbg !4904
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %next, align 8, !dbg !4905
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 3, !dbg !4906
  %12 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !4906
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !4858, metadata !DIExpression()), !dbg !4863
  br label %for.cond17, !dbg !4908

for.cond17:                                       ; preds = %for.inc26, %for.body10
  %parent.0 = phi %struct.loop* [ %12, %for.body10 ], [ %call27, %for.inc26 ], !dbg !4909
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0, metadata !4858, metadata !DIExpression()), !dbg !4863
  %cmp18 = icmp eq %struct.loop* %parent.0, null, !dbg !4910
  br i1 %cmp18, label %for.end28, label %for.body19, !dbg !4912

for.body19:                                       ; preds = %for.cond17
  %13 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4913
  %num = getelementptr inbounds %struct.loop, %struct.loop* %parent.0, i64 0, i32 0, !dbg !4915
  %14 = load i32, i32* %num, align 8, !dbg !4915
  %idxprom20 = sext i32 %14 to i64, !dbg !4913
  %regno_allocno_map22 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %13, i64 %idxprom20, i32 9, !dbg !4916
  %15 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map22, align 8, !dbg !4916
  %cmp23 = icmp eq %struct.ira_allocno** %15, null, !dbg !4917
  br i1 %cmp23, label %for.inc26, label %for.end28, !dbg !4918

for.inc26:                                        ; preds = %for.body19
  %call27 = call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %parent.0) #7, !dbg !4919
  call void @llvm.dbg.value(metadata %struct.loop* %call27, metadata !4858, metadata !DIExpression()), !dbg !4863
  br label %for.cond17, !dbg !4920, !llvm.loop !4921

for.end28:                                        ; preds = %for.body19, %for.cond17
  %parent.0.lcssa = phi %struct.loop* [ %parent.0, %for.body19 ], [ %parent.0, %for.cond17 ], !dbg !4909
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0.lcssa, metadata !4858, metadata !DIExpression()), !dbg !4863
  call fastcc void @add_loop_to_tree(%struct.loop* %parent.0.lcssa) #7, !dbg !4923
  %16 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4924
  %num29 = getelementptr inbounds %struct.loop, %struct.loop* %parent.0.lcssa, i64 0, i32 0, !dbg !4925
  %17 = load i32, i32* %num29, align 8, !dbg !4925
  %idxprom30 = sext i32 %17 to i64, !dbg !4924
  %arrayidx31 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %16, i64 %idxprom30, !dbg !4924
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %arrayidx31, metadata !4860, metadata !DIExpression()), !dbg !4863
  %children32 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %16, i64 %idxprom30, i32 5, !dbg !4926
  %18 = bitcast %struct.ira_loop_tree_node** %children32 to i64*, !dbg !4926
  %19 = load i64, i64* %18, align 8, !dbg !4926
  %20 = bitcast %struct.ira_loop_tree_node** %next to i64*, !dbg !4927
  store i64 %19, i64* %20, align 8, !dbg !4927
  %parent34 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %idxprom11, i32 6, !dbg !4928
  store %struct.ira_loop_tree_node* %arrayidx31, %struct.ira_loop_tree_node** %parent34, align 8, !dbg !4929
  store %struct.ira_loop_tree_node* %arrayidx12, %struct.ira_loop_tree_node** %children32, align 8, !dbg !4930
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4888
  %cfg8.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4931
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8.phi.trans.insert, align 8, !dbg !4888
  br label %for.cond6, !dbg !4888, !llvm.loop !4932

for.end38:                                        ; preds = %for.cond6
  %21 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !4934
  %22 = load %struct.loop*, %struct.loop** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 3), align 8, !dbg !4934
  %num39 = getelementptr inbounds %struct.loop, %struct.loop* %22, i64 0, i32 0, !dbg !4934
  %23 = load i32, i32* %num39, align 8, !dbg !4934
  %idxprom40 = sext i32 %23 to i64, !dbg !4934
  %arrayidx41 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %21, i64 %idxprom40, !dbg !4934
  store %struct.ira_loop_tree_node* %arrayidx41, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !4935
  %call42 = call fastcc i32 @setup_loop_tree_level(%struct.ira_loop_tree_node* %arrayidx41, i32 0) #7, !dbg !4936
  store i32 %call42, i32* @ira_loop_tree_height, align 4, !dbg !4937
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4938
  ret void, !dbg !4938
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_allocnos() unnamed_addr #5 !dbg !4939 {
entry:
  %0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !4940
  tail call void @ira_traverse_loop_tree(i8 zeroext 1, %struct.ira_loop_tree_node* %0, void (%struct.ira_loop_tree_node*)* nonnull @create_loop_tree_node_allocnos, void (%struct.ira_loop_tree_node*)* null) #7, !dbg !4941
  %1 = load i32, i32* @optimize, align 4, !dbg !4942
  %tobool = icmp eq i32 %1, 0, !dbg !4942
  br i1 %tobool, label %if.end, label %if.then, !dbg !4944

if.then:                                          ; preds = %entry
  %2 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !4945
  tail call void @ira_traverse_loop_tree(i8 zeroext 0, %struct.ira_loop_tree_node* %2, void (%struct.ira_loop_tree_node*)* null, void (%struct.ira_loop_tree_node*)* nonnull @propagate_modified_regnos) #7, !dbg !4946
  br label %if.end, !dbg !4946

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4947
}

declare dso_local void @ira_costs() local_unnamed_addr #2

declare dso_local void @ira_create_allocno_live_ranges() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_unnecessary_regions(i8 zeroext %all_p) unnamed_addr #5 !dbg !4948 {
entry:
  call void @llvm.dbg.value(metadata i8 %all_p, metadata !4950, metadata !DIExpression()), !dbg !4951
  %tobool = icmp eq i8 %all_p, 0, !dbg !4952
  br i1 %tobool, label %if.else, label %if.then, !dbg !4954

if.then:                                          ; preds = %entry
  tail call fastcc void @mark_all_loops_for_removal() #7, !dbg !4955
  br label %if.end, !dbg !4955

if.else:                                          ; preds = %entry
  tail call fastcc void @mark_loops_for_removal() #7, !dbg !4956
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4957
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4957
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4957
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !4957
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !4957
  %3 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !4957
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %3, i64 0, i32 0, !dbg !4957
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base) #7, !dbg !4957
  %add = add i32 %2, %call, !dbg !4957
  %call2 = tail call fastcc %struct.VEC_ira_loop_tree_node_t_heap* @VEC_ira_loop_tree_node_t_heap_alloc(i32 %add) #7, !dbg !4957
  store %struct.VEC_ira_loop_tree_node_t_heap* %call2, %struct.VEC_ira_loop_tree_node_t_heap** @children_vec, align 8, !dbg !4958
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4959
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !4959
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !4959
  %x_last_basic_block5 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 5, !dbg !4959
  %6 = load i32, i32* %x_last_basic_block5, align 8, !dbg !4959
  %7 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !4959
  %base8 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %7, i64 0, i32 0, !dbg !4959
  %call12 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base8) #7, !dbg !4959
  %add13 = add i32 %6, %call12, !dbg !4959
  %call14 = tail call fastcc %struct.VEC_ira_loop_tree_node_t_heap* @VEC_ira_loop_tree_node_t_heap_alloc(i32 %add13) #7, !dbg !4959
  store %struct.VEC_ira_loop_tree_node_t_heap* %call14, %struct.VEC_ira_loop_tree_node_t_heap** @removed_loop_vec, align 8, !dbg !4960
  %8 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !4961
  tail call fastcc void @remove_uneccesary_loop_nodes_from_loop_tree(%struct.ira_loop_tree_node* %8) #7, !dbg !4962
  tail call fastcc void @VEC_ira_loop_tree_node_t_heap_free(%struct.VEC_ira_loop_tree_node_t_heap** nonnull @children_vec) #7, !dbg !4963
  br i1 %tobool, label %if.else17, label %if.then16, !dbg !4964

if.then16:                                        ; preds = %if.end
  tail call fastcc void @remove_low_level_allocnos() #7, !dbg !4965
  br label %if.end18, !dbg !4965

if.else17:                                        ; preds = %if.end
  tail call fastcc void @remove_unnecessary_allocnos() #7, !dbg !4967
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.then16
  br label %while.cond, !dbg !4968

while.cond:                                       ; preds = %while.body, %if.end18
  %9 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** @removed_loop_vec, align 8, !dbg !4969
  %base21 = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_heap, %struct.VEC_ira_loop_tree_node_t_heap* %9, i64 0, i32 0, !dbg !4969
  %call25 = tail call fastcc i32 @VEC_ira_loop_tree_node_t_base_length(%struct.VEC_ira_loop_tree_node_t_base* %base21) #7, !dbg !4969
  %cmp = icmp eq i32 %call25, 0, !dbg !4970
  br i1 %cmp, label %while.end, label %while.body, !dbg !4968

while.body:                                       ; preds = %while.cond
  %10 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** @removed_loop_vec, align 8, !dbg !4971
  %base28 = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_heap, %struct.VEC_ira_loop_tree_node_t_heap* %10, i64 0, i32 0, !dbg !4971
  %call32 = tail call fastcc %struct.ira_loop_tree_node* @VEC_ira_loop_tree_node_t_base_pop(%struct.VEC_ira_loop_tree_node_t_base* %base28) #7, !dbg !4971
  tail call fastcc void @finish_loop_tree_node(%struct.ira_loop_tree_node* %call32) #7, !dbg !4972
  br label %while.cond, !dbg !4968, !llvm.loop !4973

while.end:                                        ; preds = %while.cond
  tail call fastcc void @VEC_ira_loop_tree_node_t_heap_free(%struct.VEC_ira_loop_tree_node_t_heap** nonnull @removed_loop_vec) #7, !dbg !4975
  ret void, !dbg !4976
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_bad_spill_attribute() unnamed_addr #5 !dbg !4977 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %dead_points = alloca [27 x %struct.bitmap_head_def], align 16
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !4987
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4987
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !4988
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !4988
  %2 = bitcast [27 x %struct.bitmap_head_def]* %dead_points to i8*, !dbg !4989
  call void @llvm.lifetime.start.p0i8(i64 864, i8* nonnull %2) #8, !dbg !4989
  call void @llvm.dbg.declare(metadata [27 x %struct.bitmap_head_def]* %dead_points, metadata !4984, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i32 0, metadata !4979, metadata !DIExpression()), !dbg !4991
  br label %for.cond, !dbg !4992

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body ], [ 0, %entry ], !dbg !4994
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !4979, metadata !DIExpression()), !dbg !4991
  %3 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4995
  %4 = sext i32 %3 to i64, !dbg !4997
  %cmp = icmp slt i64 %indvars.iv5, %4, !dbg !4997
  br i1 %cmp, label %for.body, label %for.end, !dbg !4998

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv5, !dbg !4999
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %5, metadata !4983, metadata !DIExpression()), !dbg !4991
  %idxprom1 = zext i32 %5 to i64, !dbg !5001
  %arrayidx2 = getelementptr inbounds [27 x %struct.bitmap_head_def], [27 x %struct.bitmap_head_def]* %dead_points, i64 0, i64 %idxprom1, !dbg !5001
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %arrayidx2, %struct.bitmap_obstack* nonnull @reg_obstack) #7, !dbg !5001
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !5002
  call void @llvm.dbg.value(metadata i32 undef, metadata !4979, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  br label %for.cond, !dbg !5003, !llvm.loop !5004

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4981, metadata !DIExpression(DW_OP_deref)), !dbg !4991
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5006
  br label %for.cond3, !dbg !5006

for.cond3.loopexit:                               ; preds = %for.cond7
  br label %for.cond3.backedge, !dbg !5006

for.cond3:                                        ; preds = %for.cond3.backedge, %for.end
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !4980, metadata !DIExpression(DW_OP_deref)), !dbg !4991
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4981, metadata !DIExpression(DW_OP_deref)), !dbg !4991
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5008
  %tobool = icmp eq i8 %call, 0, !dbg !5006
  br i1 %tobool, label %for.end15, label %for.body4, !dbg !5006

for.body4:                                        ; preds = %for.cond3
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5010
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %6, metadata !4980, metadata !DIExpression()), !dbg !4991
  %cover_class5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %6, i64 0, i32 9, !dbg !5010
  %7 = load i32, i32* %cover_class5, align 8, !dbg !5010
  call void @llvm.dbg.value(metadata i32 %7, metadata !4983, metadata !DIExpression()), !dbg !4991
  %cmp6 = icmp eq i32 %7, 0, !dbg !5012
  br i1 %cmp6, label %for.cond3.backedge, label %if.end, !dbg !5014

for.cond3.backedge:                               ; preds = %for.body4, %for.cond3.loopexit
  br label %for.cond3, !dbg !4991, !llvm.loop !5015

if.end:                                           ; preds = %for.body4
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %6, metadata !4980, metadata !DIExpression()), !dbg !4991
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %6, i64 0, i32 20, !dbg !5017
  %idxprom10 = zext i32 %7 to i64, !dbg !5019
  %arrayidx11 = getelementptr inbounds [27 x %struct.bitmap_head_def], [27 x %struct.bitmap_head_def]* %dead_points, i64 0, i64 %idxprom10, !dbg !5019
  br label %for.cond7, !dbg !5021

for.cond7:                                        ; preds = %for.body9, %if.end
  %r.0.in = phi %struct.ira_allocno_live_range** [ %live_ranges, %if.end ], [ %next, %for.body9 ]
  %r.0 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.0.in, align 8, !dbg !5022
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0, metadata !4982, metadata !DIExpression()), !dbg !4991
  %cmp8 = icmp eq %struct.ira_allocno_live_range* %r.0, null, !dbg !5023
  br i1 %cmp8, label %for.cond3.loopexit, label %for.body9, !dbg !5024, !llvm.loop !5015

for.body9:                                        ; preds = %for.cond7
  %finish = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 2, !dbg !5025
  %8 = load i32, i32* %finish, align 4, !dbg !5025
  %call12 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %arrayidx11, i32 %8) #6, !dbg !5026
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 3, !dbg !5027
  br label %for.cond7, !dbg !5028, !llvm.loop !5029

for.end15:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4981, metadata !DIExpression(DW_OP_deref)), !dbg !4991
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5031
  br label %for.cond16, !dbg !5031

for.cond16:                                       ; preds = %for.cond16.backedge, %for.end15
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !4980, metadata !DIExpression(DW_OP_deref)), !dbg !4991
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !4981, metadata !DIExpression(DW_OP_deref)), !dbg !4991
  %call17 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5033
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5031
  br i1 %tobool18, label %for.cond58.preheader, label %for.body19, !dbg !5031

for.cond58.preheader:                             ; preds = %for.cond16
  br label %for.cond58, !dbg !5035

for.body19:                                       ; preds = %for.cond16
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5037
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %9, metadata !4980, metadata !DIExpression()), !dbg !4991
  %cover_class20 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %9, i64 0, i32 9, !dbg !5037
  %10 = load i32, i32* %cover_class20, align 8, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %10, metadata !4983, metadata !DIExpression()), !dbg !4991
  %cmp21 = icmp eq i32 %10, 0, !dbg !5039
  br i1 %cmp21, label %for.cond16.backedge, label %if.end23, !dbg !5041

if.end23:                                         ; preds = %for.body19
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %9, metadata !4980, metadata !DIExpression()), !dbg !4991
  %bad_spill_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %9, i64 0, i32 31, !dbg !5042
  %bf.load = load i16, i16* %bad_spill_p, align 4, !dbg !5042
  %bf.clear = and i16 %bf.load, 64, !dbg !5042
  %tobool24 = icmp eq i16 %bf.clear, 0, !dbg !5042
  br i1 %tobool24, label %for.cond16.backedge, label %if.end26, !dbg !5044

if.end26:                                         ; preds = %if.end23
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %9, metadata !4980, metadata !DIExpression()), !dbg !4991
  %live_ranges27 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %9, i64 0, i32 20, !dbg !5045
  %idxprom35 = zext i32 %10 to i64, !dbg !5047
  %arrayidx36 = getelementptr inbounds [27 x %struct.bitmap_head_def], [27 x %struct.bitmap_head_def]* %dead_points, i64 0, i64 %idxprom35, !dbg !5047
  br label %for.cond28, !dbg !5053

for.cond28:                                       ; preds = %for.inc48, %if.end26
  %r.1.in = phi %struct.ira_allocno_live_range** [ %live_ranges27, %if.end26 ], [ %next49, %for.inc48 ]
  %r.1 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.1.in, align 8, !dbg !5054
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.1, metadata !4982, metadata !DIExpression()), !dbg !4991
  %cond = icmp eq %struct.ira_allocno_live_range* %r.1, null, !dbg !5055
  br i1 %cond, label %if.end56.loopexit, label %for.body30, !dbg !5055

for.body30:                                       ; preds = %for.cond28
  %start = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.1, i64 0, i32 1, !dbg !5056
  %11 = load i32, i32* %start, align 8, !dbg !5056
  call void @llvm.dbg.value(metadata i32 %11, metadata !4979, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  %finish32 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.1, i64 0, i32 2, !dbg !5057
  br label %for.cond31, !dbg !5058

for.cond31:                                       ; preds = %for.inc41, %for.body30
  %i.1.in = phi i32 [ %11, %for.body30 ], [ %i.1, %for.inc41 ]
  %i.1 = add nsw i32 %i.1.in, 1, !dbg !5059
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4979, metadata !DIExpression()), !dbg !4991
  %12 = load i32, i32* %finish32, align 4, !dbg !5060
  %cmp33 = icmp slt i32 %i.1, %12, !dbg !5061
  br i1 %cmp33, label %for.body34, label %for.end43.loopexit, !dbg !5062

for.body34:                                       ; preds = %for.cond31
  %call37 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %arrayidx36, i32 %i.1) #6, !dbg !5063
  %tobool38 = icmp eq i32 %call37, 0, !dbg !5063
  br i1 %tobool38, label %for.inc41, label %for.body34.for.end43_crit_edge, !dbg !5064

for.body34.for.end43_crit_edge:                   ; preds = %for.body34
  %i.1.lcssa8 = phi i32 [ %i.1, %for.body34 ], !dbg !5059
  %.pre = load i32, i32* %finish32, align 4, !dbg !5065
  br label %for.end43, !dbg !5064

for.inc41:                                        ; preds = %for.body34
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4979, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  br label %for.cond31, !dbg !5067, !llvm.loop !5068

for.end43.loopexit:                               ; preds = %for.cond31
  %i.1.lcssa = phi i32 [ %i.1, %for.cond31 ], !dbg !5059
  %.lcssa = phi i32 [ %12, %for.cond31 ], !dbg !5060
  br label %for.end43, !dbg !5070

for.end43:                                        ; preds = %for.end43.loopexit, %for.body34.for.end43_crit_edge
  %i.19 = phi i32 [ %i.1.lcssa8, %for.body34.for.end43_crit_edge ], [ %i.1.lcssa, %for.end43.loopexit ]
  %13 = phi i32 [ %.pre, %for.body34.for.end43_crit_edge ], [ %.lcssa, %for.end43.loopexit ], !dbg !5065
  %cmp45 = icmp slt i32 %i.19, %13, !dbg !5070
  br i1 %cmp45, label %for.end50, label %for.inc48, !dbg !5071

for.inc48:                                        ; preds = %for.end43
  %next49 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.1, i64 0, i32 3, !dbg !5072
  br label %for.cond28, !dbg !5073, !llvm.loop !5074

for.end50:                                        ; preds = %for.end43
  %14 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5076
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !4980, metadata !DIExpression()), !dbg !4991
  %bad_spill_p53 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 31, !dbg !5076
  %bf.load54 = load i16, i16* %bad_spill_p53, align 4, !dbg !5078
  %bf.clear55 = and i16 %bf.load54, -65, !dbg !5078
  store i16 %bf.clear55, i16* %bad_spill_p53, align 4, !dbg !5078
  br label %if.end56, !dbg !5076

if.end56.loopexit:                                ; preds = %for.cond28
  br label %if.end56, !dbg !5033

if.end56:                                         ; preds = %if.end56.loopexit, %for.end50
  br label %for.cond16.backedge, !dbg !5033

for.cond16.backedge:                              ; preds = %if.end56, %for.body19, %if.end23
  br label %for.cond16, !dbg !4991, !llvm.loop !5079

for.cond58:                                       ; preds = %for.cond58.preheader, %for.body60
  %indvars.iv = phi i64 [ 0, %for.cond58.preheader ], [ %indvars.iv.next, %for.body60 ], !dbg !5081
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4979, metadata !DIExpression()), !dbg !4991
  %15 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !5082
  %16 = sext i32 %15 to i64, !dbg !5084
  %cmp59 = icmp slt i64 %indvars.iv, %16, !dbg !5084
  br i1 %cmp59, label %for.body60, label %for.end67, !dbg !5035

for.body60:                                       ; preds = %for.cond58
  %arrayidx62 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !5085
  %17 = load i32, i32* %arrayidx62, align 4, !dbg !5085
  call void @llvm.dbg.value(metadata i32 %17, metadata !4983, metadata !DIExpression()), !dbg !4991
  %idxprom63 = zext i32 %17 to i64, !dbg !5087
  %arrayidx64 = getelementptr inbounds [27 x %struct.bitmap_head_def], [27 x %struct.bitmap_head_def]* %dead_points, i64 0, i64 %idxprom63, !dbg !5087
  call void @bitmap_clear(%struct.bitmap_head_def* nonnull %arrayidx64) #6, !dbg !5088
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5089
  call void @llvm.dbg.value(metadata i32 undef, metadata !4979, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  br label %for.cond58, !dbg !5090, !llvm.loop !5091

for.end67:                                        ; preds = %for.cond58
  call void @llvm.lifetime.end.p0i8(i64 864, i8* nonnull %2) #8, !dbg !5093
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5093
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5093
  ret void, !dbg !5093
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @more_one_region_p() unnamed_addr #5 !dbg !5094 {
entry:
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !5100
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5100
  call void @llvm.dbg.value(metadata i32 0, metadata !5098, metadata !DIExpression()), !dbg !5101
  br label %for.cond, !dbg !5102

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5104
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5098, metadata !DIExpression()), !dbg !5101
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !5105
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !5105
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !5099, metadata !DIExpression(DW_OP_deref)), !dbg !5101
  %call = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base, i32 %i.0, %struct.loop** nonnull %loop) #7, !dbg !5105
  %tobool1 = icmp eq i32 %call, 0, !dbg !5107
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !5107

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !5108
  %idxprom = zext i32 %i.0 to i64, !dbg !5108
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %2, i64 %idxprom, i32 9, !dbg !5110
  %3 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !5110
  %cmp = icmp eq %struct.ira_allocno** %3, null, !dbg !5111
  br i1 %cmp, label %for.inc, label %land.lhs.true, !dbg !5112

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !5113
  %arrayidx3 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %2, i64 %idxprom, !dbg !5114
  %cmp4 = icmp eq %struct.ira_loop_tree_node* %4, %arrayidx3, !dbg !5115
  br i1 %cmp4, label %for.inc, label %cleanup, !dbg !5116

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %inc = add i32 %i.0, 1, !dbg !5117
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5098, metadata !DIExpression()), !dbg !5101
  br label %for.cond, !dbg !5118, !llvm.loop !5119

cleanup:                                          ; preds = %land.lhs.true, %for.cond
  %retval.0 = phi i8 [ 1, %land.lhs.true ], [ 0, %for.cond ], !dbg !5101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5121
  ret i8 %retval.0, !dbg !5121
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_allocno_info() unnamed_addr #5 !dbg !5122 {
entry:
  %0 = load i32, i32* @flag_ira_region, align 4, !dbg !5129
  %1 = add i32 %0, -1, !dbg !5131
  %2 = icmp ugt i32 %1, 1, !dbg !5131
  br i1 %2, label %cleanup.cont, label %if.end, !dbg !5131

if.end:                                           ; preds = %entry
  %call = tail call i32 @max_reg_num() #6, !dbg !5132
  call void @llvm.dbg.value(metadata i32 %call, metadata !5124, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5134
  %3 = sext i32 %call to i64, !dbg !5135
  br label %for.cond, !dbg !5135

for.cond:                                         ; preds = %for.inc50, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc50 ], [ %3, %if.end ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5136
  call void @llvm.dbg.value(metadata i32 undef, metadata !5124, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5134
  %cmp2 = icmp sgt i64 %indvars.iv.next, 52, !dbg !5137
  br i1 %cmp2, label %for.body, label %cleanup.cont.loopexit, !dbg !5139

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !5140
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %indvars.iv.next, !dbg !5140
  br label %for.cond3, !dbg !5142

for.cond3:                                        ; preds = %for.inc, %for.body
  %a.0.in = phi %struct.ira_allocno** [ %arrayidx, %for.body ], [ %next_regno_allocno, %for.inc ]
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !5143
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !5125, metadata !DIExpression()), !dbg !5134
  %cmp4 = icmp eq %struct.ira_allocno* %a.0, null, !dbg !5144
  br i1 %cmp4, label %for.inc50, label %for.body5, !dbg !5146

for.body5:                                        ; preds = %for.cond3
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 6, !dbg !5147
  %5 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !5147
  %parent6 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 0, i32 6, !dbg !5149
  %6 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent6, align 8, !dbg !5149
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %6, metadata !5127, metadata !DIExpression()), !dbg !5134
  %cmp7 = icmp eq %struct.ira_loop_tree_node* %6, null, !dbg !5150
  br i1 %cmp7, label %for.inc, label %land.lhs.true8, !dbg !5151

land.lhs.true8:                                   ; preds = %for.body5
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %6, i64 0, i32 9, !dbg !5152
  %7 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !5152
  %arrayidx10 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %7, i64 %indvars.iv.next, !dbg !5153
  %8 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx10, align 8, !dbg !5153
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %8, metadata !5126, metadata !DIExpression()), !dbg !5134
  %cmp11 = icmp eq %struct.ira_allocno* %8, null, !dbg !5154
  br i1 %cmp11, label %for.inc, label %land.lhs.true12, !dbg !5155

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %border_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 0, i32 13, !dbg !5156
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %border_allocnos, align 8, !dbg !5156
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 0, !dbg !5157
  %10 = load i32, i32* %num, align 8, !dbg !5157
  %call14 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %9, i32 %10) #6, !dbg !5158
  %tobool = icmp eq i32 %call14, 0, !dbg !5158
  br i1 %tobool, label %for.inc, label %if.then15, !dbg !5159

if.then15:                                        ; preds = %land.lhs.true12
  %bad_spill_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 31, !dbg !5160
  %bf.load = load i16, i16* %bad_spill_p, align 4, !dbg !5160
  %bf.clear = and i16 %bf.load, 64, !dbg !5160
  %tobool16 = icmp eq i16 %bf.clear, 0, !dbg !5160
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !5163

if.then17:                                        ; preds = %if.then15
  %bad_spill_p18 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 31, !dbg !5164
  %bf.load19 = load i16, i16* %bad_spill_p18, align 4, !dbg !5165
  %bf.clear20 = and i16 %bf.load19, -65, !dbg !5165
  store i16 %bf.clear20, i16* %bad_spill_p18, align 4, !dbg !5165
  br label %if.end21, !dbg !5164

if.end21:                                         ; preds = %if.then15, %if.then17
  %nrefs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 7, !dbg !5166
  %11 = load i32, i32* %nrefs, align 8, !dbg !5166
  %nrefs22 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 7, !dbg !5167
  %12 = load i32, i32* %nrefs22, align 8, !dbg !5168
  %add = add nsw i32 %12, %11, !dbg !5168
  store i32 %add, i32* %nrefs22, align 8, !dbg !5168
  %freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 8, !dbg !5169
  %13 = load i32, i32* %freq, align 4, !dbg !5169
  %freq23 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 8, !dbg !5170
  %14 = load i32, i32* %freq23, align 4, !dbg !5171
  %add24 = add nsw i32 %14, %13, !dbg !5171
  store i32 %add24, i32* %freq23, align 4, !dbg !5171
  %call_freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 29, !dbg !5172
  %15 = load i32, i32* %call_freq, align 4, !dbg !5172
  %call_freq25 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 29, !dbg !5173
  %16 = load i32, i32* %call_freq25, align 4, !dbg !5174
  %add26 = add nsw i32 %16, %15, !dbg !5174
  store i32 %add26, i32* %call_freq25, align 4, !dbg !5174
  %bf.load27 = load i16, i16* %bad_spill_p, align 4, !dbg !5175
  %bf.clear29 = and i16 %bf.load27, 32, !dbg !5175
  %tobool31 = icmp eq i16 %bf.clear29, 0, !dbg !5175
  br i1 %tobool31, label %if.end36, label %if.then32, !dbg !5177

if.then32:                                        ; preds = %if.end21
  %total_no_stack_reg_p33 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 31, !dbg !5178
  %bf.load34 = load i16, i16* %total_no_stack_reg_p33, align 4, !dbg !5179
  %bf.set = or i16 %bf.load34, 32, !dbg !5179
  store i16 %bf.set, i16* %total_no_stack_reg_p33, align 4, !dbg !5179
  br label %if.end36, !dbg !5178

if.end36:                                         ; preds = %if.end21, %if.then32
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 27, !dbg !5180
  %17 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !5180
  %total_conflict_hard_regs37 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 27, !dbg !5180
  %18 = load i64, i64* %total_conflict_hard_regs37, align 8, !dbg !5180
  %or = or i64 %18, %17, !dbg !5180
  store i64 %or, i64* %total_conflict_hard_regs37, align 8, !dbg !5180
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 30, !dbg !5181
  %19 = load i32, i32* %calls_crossed_num, align 8, !dbg !5181
  %calls_crossed_num38 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 30, !dbg !5182
  %20 = load i32, i32* %calls_crossed_num38, align 8, !dbg !5183
  %add39 = add nsw i32 %20, %19, !dbg !5183
  store i32 %add39, i32* %calls_crossed_num38, align 8, !dbg !5183
  %excess_pressure_points_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 14, !dbg !5184
  %21 = load i32, i32* %excess_pressure_points_num, align 4, !dbg !5184
  %excess_pressure_points_num40 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 14, !dbg !5185
  %22 = load i32, i32* %excess_pressure_points_num40, align 4, !dbg !5186
  %add41 = add nsw i32 %22, %21, !dbg !5186
  store i32 %add41, i32* %excess_pressure_points_num40, align 4, !dbg !5186
  %cover_class42 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 9, !dbg !5187
  %23 = load i32, i32* %cover_class42, align 8, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %23, metadata !5128, metadata !DIExpression()), !dbg !5134
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 33, !dbg !5188
  %hard_reg_costs43 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 33, !dbg !5189
  %24 = load i32*, i32** %hard_reg_costs43, align 8, !dbg !5189
  tail call fastcc void @ira_allocate_and_accumulate_costs(i32** nonnull %hard_reg_costs, i32 %23, i32* %24) #7, !dbg !5190
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 35, !dbg !5191
  %conflict_hard_reg_costs44 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 35, !dbg !5192
  %25 = load i32*, i32** %conflict_hard_reg_costs44, align 8, !dbg !5192
  tail call fastcc void @ira_allocate_and_accumulate_costs(i32** nonnull %conflict_hard_reg_costs, i32 %23, i32* %25) #7, !dbg !5193
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 10, !dbg !5194
  %26 = load i32, i32* %cover_class_cost, align 4, !dbg !5194
  %cover_class_cost45 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 10, !dbg !5195
  %27 = load i32, i32* %cover_class_cost45, align 4, !dbg !5196
  %add46 = add nsw i32 %27, %26, !dbg !5196
  store i32 %add46, i32* %cover_class_cost45, align 4, !dbg !5196
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 12, !dbg !5197
  %28 = load i32, i32* %memory_cost, align 4, !dbg !5197
  %memory_cost47 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %8, i64 0, i32 12, !dbg !5198
  %29 = load i32, i32* %memory_cost47, align 4, !dbg !5199
  %add48 = add nsw i32 %29, %28, !dbg !5199
  store i32 %add48, i32* %memory_cost47, align 4, !dbg !5199
  br label %for.inc, !dbg !5200

for.inc:                                          ; preds = %land.lhs.true12, %land.lhs.true8, %for.body5, %if.end36
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 5, !dbg !5201
  br label %for.cond3, !dbg !5202, !llvm.loop !5203

for.inc50:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata i32 undef, metadata !5124, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5134
  br label %for.cond, !dbg !5205, !llvm.loop !5206

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5208

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !5208
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_caps() unnamed_addr #5 !dbg !5209 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5214
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5215
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5212, metadata !DIExpression(DW_OP_deref)), !dbg !5216
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5217
  br label %for.cond, !dbg !5217

for.cond:                                         ; preds = %for.cond.backedge, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5211, metadata !DIExpression(DW_OP_deref)), !dbg !5216
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5212, metadata !DIExpression(DW_OP_deref)), !dbg !5216
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5219
  %tobool = icmp eq i8 %call, 0, !dbg !5217
  br i1 %tobool, label %for.end, label %for.body, !dbg !5217

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5221
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5211, metadata !DIExpression()), !dbg !5216
  %loop_tree_node1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 6, !dbg !5221
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node1, align 8, !dbg !5221
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !5224
  %cmp = icmp eq %struct.ira_loop_tree_node* %3, %4, !dbg !5225
  br i1 %cmp, label %for.cond.backedge, label %if.end, !dbg !5226

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5211, metadata !DIExpression()), !dbg !5216
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 17, !dbg !5227
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !5227
  %cmp2 = icmp eq %struct.ira_allocno* %5, null, !dbg !5229
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5211, metadata !DIExpression()), !dbg !5216
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !5230

if.then3:                                         ; preds = %if.end
  %call4 = call fastcc %struct.ira_allocno* @create_cap_allocno(%struct.ira_allocno* %2) #7, !dbg !5231
  br label %if.end14, !dbg !5231

if.else:                                          ; preds = %if.end
  %cap = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 16, !dbg !5232
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %cap, align 8, !dbg !5232
  %cmp5 = icmp eq %struct.ira_allocno* %6, null, !dbg !5234
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !5235

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5211, metadata !DIExpression()), !dbg !5216
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %3, metadata !5213, metadata !DIExpression()), !dbg !5216
  %border_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 0, i32 13, !dbg !5236
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %border_allocnos, align 8, !dbg !5236
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5211, metadata !DIExpression()), !dbg !5216
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 0, !dbg !5239
  %8 = load i32, i32* %num, align 8, !dbg !5239
  %call8 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !5240
  %tobool9 = icmp eq i32 %call8, 0, !dbg !5240
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !5241

if.then10:                                        ; preds = %if.then6
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5242
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %9, metadata !5211, metadata !DIExpression()), !dbg !5216
  %call11 = call fastcc %struct.ira_allocno* @create_cap_allocno(%struct.ira_allocno* %9) #7, !dbg !5243
  br label %if.end14, !dbg !5243

if.end14:                                         ; preds = %if.then6, %if.else, %if.then10, %if.then3
  br label %for.cond.backedge, !dbg !5219

for.cond.backedge:                                ; preds = %if.end14, %for.body
  br label %for.cond, !dbg !5216, !llvm.loop !5244

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5246
  ret void, !dbg !5246
}

declare dso_local void @ira_tune_allocno_costs_and_cover_classes() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_min_max_allocno_live_range_point() unnamed_addr #5 !dbg !5247 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5256
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5257
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5257
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5253, metadata !DIExpression(DW_OP_deref)), !dbg !5258
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5259
  br label %for.cond, !dbg !5259

for.cond:                                         ; preds = %for.cond.backedge, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5250, metadata !DIExpression(DW_OP_deref)), !dbg !5258
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5253, metadata !DIExpression(DW_OP_deref)), !dbg !5258
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5261
  %tobool = icmp eq i8 %call, 0, !dbg !5259
  br i1 %tobool, label %for.end5, label %for.body, !dbg !5259

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5263
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5250, metadata !DIExpression()), !dbg !5258
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 20, !dbg !5263
  %3 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !5263
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %3, metadata !5254, metadata !DIExpression()), !dbg !5258
  %cmp = icmp eq %struct.ira_allocno_live_range* %3, null, !dbg !5265
  br i1 %cmp, label %for.cond.backedge, label %if.end, !dbg !5267

if.end:                                           ; preds = %for.body
  %finish = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %3, i64 0, i32 2, !dbg !5268
  %4 = load i32, i32* %finish, align 4, !dbg !5268
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5250, metadata !DIExpression()), !dbg !5258
  %max = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 22, !dbg !5269
  store i32 %4, i32* %max, align 4, !dbg !5270
  br label %for.cond1, !dbg !5271

for.cond1:                                        ; preds = %for.inc, %if.end
  %r.0 = phi %struct.ira_allocno_live_range* [ %3, %if.end ], [ %5, %for.inc ], !dbg !5272
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0, metadata !5254, metadata !DIExpression()), !dbg !5258
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 3, !dbg !5273
  %5 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %next, align 8, !dbg !5273
  %cmp2 = icmp eq %struct.ira_allocno_live_range* %5, null, !dbg !5276
  br i1 %cmp2, label %for.end, label %for.inc, !dbg !5277

for.inc:                                          ; preds = %for.cond1
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %5, metadata !5254, metadata !DIExpression()), !dbg !5258
  br label %for.cond1, !dbg !5278, !llvm.loop !5279

for.end:                                          ; preds = %for.cond1
  %r.0.lcssa = phi %struct.ira_allocno_live_range* [ %r.0, %for.cond1 ], !dbg !5272
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0.lcssa, metadata !5254, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0.lcssa, metadata !5254, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0.lcssa, metadata !5254, metadata !DIExpression()), !dbg !5258
  %start = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0.lcssa, i64 0, i32 1, !dbg !5281
  %6 = load i32, i32* %start, align 8, !dbg !5281
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5250, metadata !DIExpression()), !dbg !5258
  %min = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 21, !dbg !5282
  store i32 %6, i32* %min, align 8, !dbg !5283
  br label %for.cond.backedge, !dbg !5261

for.cond.backedge:                                ; preds = %for.end, %for.body
  br label %for.cond, !dbg !5258, !llvm.loop !5284

for.end5:                                         ; preds = %for.cond
  %call6 = call i32 @max_reg_num() #6, !dbg !5286
  call void @llvm.dbg.value(metadata i32 %call6, metadata !5249, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5258
  %7 = bitcast %struct.ira_allocno** %a to i64*, !dbg !5288
  %8 = sext i32 %call6 to i64, !dbg !5291
  br label %for.cond7, !dbg !5291

for.cond7:                                        ; preds = %for.inc64, %for.end5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc64 ], [ %8, %for.end5 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5292
  call void @llvm.dbg.value(metadata i32 undef, metadata !5249, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5258
  %cmp8 = icmp sgt i64 %indvars.iv.next, 52, !dbg !5293
  br i1 %cmp8, label %for.body9, label %for.end65, !dbg !5294

for.body9:                                        ; preds = %for.cond7
  %9 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !5295
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %9, i64 %indvars.iv.next, !dbg !5295
  %10 = bitcast %struct.ira_allocno** %arrayidx to i64*, !dbg !5295
  %11 = load i64, i64* %10, align 8, !dbg !5295
  store i64 %11, i64* %7, align 8, !dbg !5296
  %12 = inttoptr i64 %11 to %struct.ira_allocno*, !dbg !5297
  br label %for.cond10, !dbg !5297

for.cond10:                                       ; preds = %for.inc62, %for.body9
  %13 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %14 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %15 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %16 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %17 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %18 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %19 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %20 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ]
  %21 = phi %struct.ira_allocno* [ %40, %for.inc62 ], [ %12, %for.body9 ], !dbg !5298
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %21, metadata !5250, metadata !DIExpression()), !dbg !5258
  %cmp11 = icmp eq %struct.ira_allocno* %21, null, !dbg !5300
  br i1 %cmp11, label %for.inc64, label %for.body12, !dbg !5301

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %20, metadata !5250, metadata !DIExpression()), !dbg !5258
  %max13 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 22, !dbg !5302
  %22 = load i32, i32* %max13, align 4, !dbg !5302
  %cmp14 = icmp slt i32 %22, 0, !dbg !5305
  br i1 %cmp14, label %for.inc62, label %if.end16, !dbg !5306

if.end16:                                         ; preds = %for.body12
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !5250, metadata !DIExpression()), !dbg !5258
  %cap17 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %19, i64 0, i32 16, !dbg !5307
  %23 = load %struct.ira_allocno*, %struct.ira_allocno** %cap17, align 8, !dbg !5307
  %cmp18 = icmp eq %struct.ira_allocno* %23, null, !dbg !5309
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !5250, metadata !DIExpression()), !dbg !5258
  br i1 %cmp18, label %if.end41, label %if.then19, !dbg !5310

if.then19:                                        ; preds = %if.end16
  %max25 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 22, !dbg !5311
  %min32 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 21, !dbg !5317
  br label %for.cond21, !dbg !5319

for.cond21:                                       ; preds = %for.inc38, %if.then19
  %cap.0 = phi %struct.ira_allocno* [ %23, %if.then19 ], [ %cap.0.pre, %for.inc38 ], !dbg !5320
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %cap.0, metadata !5252, metadata !DIExpression()), !dbg !5258
  %cmp22 = icmp eq %struct.ira_allocno* %cap.0, null, !dbg !5321
  br i1 %cmp22, label %for.inc62.loopexit, label %for.body23, !dbg !5322

for.body23:                                       ; preds = %for.cond21
  %max24 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %cap.0, i64 0, i32 22, !dbg !5323
  %24 = load i32, i32* %max24, align 4, !dbg !5323
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !5250, metadata !DIExpression()), !dbg !5258
  %25 = load i32, i32* %max25, align 4, !dbg !5324
  %cmp26 = icmp slt i32 %24, %25, !dbg !5325
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !5326

if.then27:                                        ; preds = %for.body23
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !5250, metadata !DIExpression()), !dbg !5258
  store i32 %25, i32* %max24, align 4, !dbg !5327
  br label %if.end30, !dbg !5328

if.end30:                                         ; preds = %if.then27, %for.body23
  %min31 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %cap.0, i64 0, i32 21, !dbg !5329
  %26 = load i32, i32* %min31, align 8, !dbg !5329
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !5250, metadata !DIExpression()), !dbg !5258
  %27 = load i32, i32* %min32, align 8, !dbg !5330
  %cmp33 = icmp sgt i32 %26, %27, !dbg !5331
  br i1 %cmp33, label %if.then34, label %for.inc38, !dbg !5332

if.then34:                                        ; preds = %if.end30
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !5250, metadata !DIExpression()), !dbg !5258
  store i32 %27, i32* %min31, align 8, !dbg !5333
  br label %for.inc38, !dbg !5334

for.inc38:                                        ; preds = %if.end30, %if.then34
  %cap.0.in.phi.trans.insert = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %cap.0, i64 0, i32 16, !dbg !5320
  %cap.0.pre = load %struct.ira_allocno*, %struct.ira_allocno** %cap.0.in.phi.trans.insert, align 8, !dbg !5320
  br label %for.cond21, !dbg !5335, !llvm.loop !5336

if.end41:                                         ; preds = %if.end16
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %19, i64 0, i32 6, !dbg !5338
  %28 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !5338
  %parent42 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %28, i64 0, i32 6, !dbg !5340
  %29 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent42, align 8, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %29, metadata !5255, metadata !DIExpression()), !dbg !5258
  %cmp43 = icmp eq %struct.ira_loop_tree_node* %29, null, !dbg !5341
  br i1 %cmp43, label %for.inc62, label %if.end45, !dbg !5342

if.end45:                                         ; preds = %if.end41
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %29, i64 0, i32 9, !dbg !5343
  %30 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !5343
  %arrayidx47 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %30, i64 %indvars.iv.next, !dbg !5344
  %31 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx47, align 8, !dbg !5344
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !5251, metadata !DIExpression()), !dbg !5258
  %max48 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 22, !dbg !5345
  %32 = load i32, i32* %max48, align 4, !dbg !5345
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !5250, metadata !DIExpression()), !dbg !5258
  %max49 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 22, !dbg !5347
  %33 = load i32, i32* %max49, align 4, !dbg !5347
  %cmp50 = icmp slt i32 %32, %33, !dbg !5348
  br i1 %cmp50, label %if.then51, label %if.end54, !dbg !5349

if.then51:                                        ; preds = %if.end45
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %16, metadata !5250, metadata !DIExpression()), !dbg !5258
  %max52 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 22, !dbg !5350
  %34 = load i32, i32* %max52, align 4, !dbg !5350
  store i32 %34, i32* %max48, align 4, !dbg !5351
  br label %if.end54, !dbg !5352

if.end54:                                         ; preds = %if.then51, %if.end45
  %min55 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 21, !dbg !5353
  %35 = load i32, i32* %min55, align 8, !dbg !5353
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %15, metadata !5250, metadata !DIExpression()), !dbg !5258
  %min56 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %15, i64 0, i32 21, !dbg !5355
  %36 = load i32, i32* %min56, align 8, !dbg !5355
  %cmp57 = icmp sgt i32 %35, %36, !dbg !5356
  br i1 %cmp57, label %if.then58, label %for.inc62, !dbg !5357

if.then58:                                        ; preds = %if.end54
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !5250, metadata !DIExpression()), !dbg !5258
  %min59 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 21, !dbg !5358
  %37 = load i32, i32* %min59, align 8, !dbg !5358
  store i32 %37, i32* %min55, align 8, !dbg !5359
  br label %for.inc62, !dbg !5360

for.inc62.loopexit:                               ; preds = %for.cond21
  br label %for.inc62, !dbg !5361

for.inc62:                                        ; preds = %for.inc62.loopexit, %if.end54, %if.then58, %if.end41, %for.body12
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %13, metadata !5250, metadata !DIExpression()), !dbg !5258
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %13, i64 0, i32 5, !dbg !5361
  %38 = bitcast %struct.ira_allocno** %next_regno_allocno to i64*, !dbg !5361
  %39 = load i64, i64* %38, align 8, !dbg !5361
  store i64 %39, i64* %7, align 8, !dbg !5362
  %40 = inttoptr i64 %39 to %struct.ira_allocno*, !dbg !5363
  br label %for.cond10, !dbg !5363, !llvm.loop !5364

for.inc64:                                        ; preds = %for.cond10
  call void @llvm.dbg.value(metadata i32 undef, metadata !5249, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5258
  br label %for.cond7, !dbg !5366, !llvm.loop !5367

for.end65:                                        ; preds = %for.cond7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5369
  ret void, !dbg !5369
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sort_conflict_id_allocno_map() unnamed_addr #5 !dbg !5370 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5376
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5376
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5377
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5377
  call void @llvm.dbg.value(metadata i32 0, metadata !5373, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5375, metadata !DIExpression(DW_OP_deref)), !dbg !5378
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5379
  %2 = bitcast %struct.ira_allocno** %a to i64*, !dbg !5381
  br label %for.cond, !dbg !5379

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.body ], [ 0, %entry ], !dbg !5378
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !5373, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5374, metadata !DIExpression(DW_OP_deref)), !dbg !5378
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5375, metadata !DIExpression(DW_OP_deref)), !dbg !5378
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5383
  %tobool = icmp eq i8 %call, 0, !dbg !5379
  br i1 %tobool, label %for.end, label %for.body, !dbg !5379

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %2, align 8, !dbg !5384
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !5385
  %indvars.iv.next4 = add nuw i64 %indvars.iv3, 1, !dbg !5386
  call void @llvm.dbg.value(metadata i32 undef, metadata !5373, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5378
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %indvars.iv3, !dbg !5385
  %5 = bitcast %struct.ira_allocno** %arrayidx to i64*, !dbg !5387
  store i64 %3, i64* %5, align 8, !dbg !5387
  br label %for.cond, !dbg !5383, !llvm.loop !5388

for.end:                                          ; preds = %for.cond
  %indvars.iv3.lcssa = phi i64 [ %indvars.iv3, %for.cond ], !dbg !5378
  call void @llvm.dbg.value(metadata i64 %indvars.iv3.lcssa, metadata !5373, metadata !DIExpression()), !dbg !5378
  %6 = load i8*, i8** bitcast (%struct.ira_allocno*** @ira_conflict_id_allocno_map to i8**), align 8, !dbg !5390
  %conv = and i64 %indvars.iv3.lcssa, 4294967295, !dbg !5391
  call void @spec_qsort(i8* %6, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @allocno_range_compare_func) #6, !dbg !5392
  call void @llvm.dbg.value(metadata i32 0, metadata !5372, metadata !DIExpression()), !dbg !5378
  %wide.trip.count = and i64 %indvars.iv3.lcssa, 4294967295, !dbg !5393
  br label %for.cond1, !dbg !5396

for.cond1:                                        ; preds = %for.inc, %for.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ 0, %for.end ], !dbg !5397
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !5372, metadata !DIExpression()), !dbg !5378
  %exitcond = icmp eq i64 %indvars.iv1, %wide.trip.count, !dbg !5393
  br i1 %exitcond, label %for.cond10.preheader, label %for.body3, !dbg !5398

for.cond10.preheader:                             ; preds = %for.cond1
  %7 = and i64 %indvars.iv3.lcssa, 4294967295, !dbg !5399
  br label %for.cond10, !dbg !5399

for.body3:                                        ; preds = %for.cond1
  %8 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !5401
  %arrayidx5 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %8, i64 %indvars.iv1, !dbg !5401
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx5, align 8, !dbg !5401
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %9, metadata !5374, metadata !DIExpression()), !dbg !5378
  store %struct.ira_allocno* %9, %struct.ira_allocno** %a, align 8, !dbg !5403
  %cmp6 = icmp eq %struct.ira_allocno* %9, null, !dbg !5404
  br i1 %cmp6, label %for.inc, label %if.then, !dbg !5405

if.then:                                          ; preds = %for.body3
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %9, metadata !5374, metadata !DIExpression()), !dbg !5378
  %conflict_id = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %9, i64 0, i32 24, !dbg !5406
  %10 = trunc i64 %indvars.iv1 to i32, !dbg !5407
  store i32 %10, i32* %conflict_id, align 8, !dbg !5407
  br label %for.inc, !dbg !5406

for.inc:                                          ; preds = %for.body3, %if.then
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !5408
  call void @llvm.dbg.value(metadata i32 undef, metadata !5372, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5378
  br label %for.cond1, !dbg !5409, !llvm.loop !5410

for.cond10:                                       ; preds = %for.cond10.preheader, %for.body13
  %indvars.iv = phi i64 [ %7, %for.cond10.preheader ], [ %indvars.iv.next, %for.body13 ], !dbg !5412
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5372, metadata !DIExpression()), !dbg !5378
  %11 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5413
  %12 = sext i32 %11 to i64, !dbg !5415
  %cmp11 = icmp slt i64 %indvars.iv, %12, !dbg !5415
  br i1 %cmp11, label %for.body13, label %for.end18, !dbg !5399

for.body13:                                       ; preds = %for.cond10
  %13 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !5416
  %arrayidx15 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %13, i64 %indvars.iv, !dbg !5416
  store %struct.ira_allocno* null, %struct.ira_allocno** %arrayidx15, align 8, !dbg !5417
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5418
  call void @llvm.dbg.value(metadata i32 undef, metadata !5372, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5378
  br label %for.cond10, !dbg !5419, !llvm.loop !5420

for.end18:                                        ; preds = %for.cond10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5422
  ret void, !dbg !5422
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_min_max_conflict_allocno_ids() unnamed_addr #5 !dbg !5423 {
entry:
  %0 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5437
  %conv = sext i32 %0 to i64, !dbg !5437
  %mul = shl nsw i64 %conv, 2, !dbg !5438
  %call = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !5439
  %1 = bitcast i8* %call to i32*, !dbg !5440
  call void @llvm.dbg.value(metadata i32* %1, metadata !5434, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 -1, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 -1, metadata !5432, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 0, metadata !5426, metadata !DIExpression()), !dbg !5441
  br label %for.cond, !dbg !5442

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv11 = phi i64 [ %indvars.iv.next12, %for.inc ], [ 0, %entry ], !dbg !5444
  %first_not_finished.0 = phi i32 [ %first_not_finished.3, %for.inc ], [ -1, %entry ], !dbg !5444
  %cover_class.0 = phi i32 [ %cover_class.2, %for.inc ], [ -1, %entry ], !dbg !5445
  call void @llvm.dbg.value(metadata i32 %cover_class.0, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !5426, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %first_not_finished.0, metadata !5432, metadata !DIExpression()), !dbg !5441
  %2 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5446
  %3 = sext i32 %2 to i64, !dbg !5448
  %cmp = icmp slt i64 %indvars.iv11, %3, !dbg !5448
  br i1 %cmp, label %for.body, label %for.end, !dbg !5449

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !5450
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %indvars.iv11, !dbg !5450
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !5450
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !5436, metadata !DIExpression()), !dbg !5441
  %cmp2 = icmp eq %struct.ira_allocno* %5, null, !dbg !5452
  br i1 %cmp2, label %for.inc, label %if.end, !dbg !5454

if.end:                                           ; preds = %for.body
  %cmp4 = icmp slt i32 %cover_class.0, 0, !dbg !5455
  br i1 %cmp4, label %if.end.if.then11_crit_edge, label %lor.lhs.false, !dbg !5457

if.end.if.then11_crit_edge:                       ; preds = %if.end
  %cover_class12.phi.trans.insert = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 9, !dbg !5458
  %.pre3 = load i32, i32* %cover_class12.phi.trans.insert, align 8, !dbg !5460
  br label %if.then11, !dbg !5457

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !5461
  %cmp6 = icmp eq i32 %6, 1, !dbg !5462
  br i1 %cmp6, label %if.else, label %land.lhs.true, !dbg !5463

land.lhs.true:                                    ; preds = %lor.lhs.false
  %cover_class8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 9, !dbg !5464
  %7 = load i32, i32* %cover_class8, align 8, !dbg !5464
  %cmp9 = icmp eq i32 %cover_class.0, %7, !dbg !5465
  br i1 %cmp9, label %if.else, label %if.then11, !dbg !5466

if.then11:                                        ; preds = %if.end.if.then11_crit_edge, %land.lhs.true
  %8 = phi i32 [ %.pre3, %if.end.if.then11_crit_edge ], [ %7, %land.lhs.true ], !dbg !5460
  call void @llvm.dbg.value(metadata i32 %8, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !5428, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !5432, metadata !DIExpression()), !dbg !5441
  %min27.phi.trans.insert = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 21, !dbg !5467
  %.pre4 = load i32, i32* %min27.phi.trans.insert, align 8, !dbg !5468
  br label %if.end21, !dbg !5469

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %min13 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 21, !dbg !5470
  %9 = load i32, i32* %min13, align 8, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %9, metadata !5430, metadata !DIExpression()), !dbg !5441
  %10 = sext i32 %first_not_finished.0 to i64, !dbg !5472
  br label %while.cond, !dbg !5472

while.cond:                                       ; preds = %while.body, %if.else
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %while.body ], [ %10, %if.else ], !dbg !5441
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !5432, metadata !DIExpression()), !dbg !5441
  %cmp14 = icmp slt i64 %indvars.iv9, %indvars.iv11, !dbg !5473
  br i1 %cmp14, label %land.rhs, label %if.end21.loopexit, !dbg !5474

land.rhs:                                         ; preds = %while.cond
  %arrayidx17 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %indvars.iv9, !dbg !5475
  %11 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx17, align 8, !dbg !5475
  %max18 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %11, i64 0, i32 22, !dbg !5475
  %12 = load i32, i32* %max18, align 4, !dbg !5475
  %cmp19 = icmp sgt i32 %9, %12, !dbg !5476
  br i1 %cmp19, label %while.body, label %if.end21.loopexit, !dbg !5472

while.body:                                       ; preds = %land.rhs
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1, !dbg !5477
  call void @llvm.dbg.value(metadata i32 undef, metadata !5432, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5441
  br label %while.cond, !dbg !5472, !llvm.loop !5478

if.end21.loopexit:                                ; preds = %while.cond, %land.rhs
  %indvars.iv9.lcssa = phi i64 [ %indvars.iv9, %while.cond ], [ %indvars.iv9, %land.rhs ], !dbg !5441
  call void @llvm.dbg.value(metadata i64 %indvars.iv9.lcssa, metadata !5432, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i64 %indvars.iv9.lcssa, metadata !5432, metadata !DIExpression()), !dbg !5441
  br label %if.end21, !dbg !5479

if.end21:                                         ; preds = %if.end21.loopexit, %if.then11
  %13 = phi i32 [ %.pre4, %if.then11 ], [ %9, %if.end21.loopexit ], !dbg !5468
  %first_not_finished.2.in = phi i64 [ %indvars.iv11, %if.then11 ], [ %indvars.iv9.lcssa, %if.end21.loopexit ]
  %cover_class.1 = phi i32 [ %8, %if.then11 ], [ %cover_class.0, %if.end21.loopexit ], !dbg !5441
  %first_not_finished.2 = trunc i64 %first_not_finished.2.in to i32, !dbg !5441
  call void @llvm.dbg.value(metadata i32 %cover_class.1, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %first_not_finished.2, metadata !5428, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %first_not_finished.2, metadata !5432, metadata !DIExpression()), !dbg !5441
  %14 = and i64 %first_not_finished.2.in, 4294967295, !dbg !5479
  %cmp22 = icmp eq i64 %indvars.iv11, %14, !dbg !5479
  %inc25 = zext i1 %cmp22 to i32, !dbg !5481
  %spec.select = add nsw i32 %first_not_finished.2, %inc25, !dbg !5481
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5428, metadata !DIExpression()), !dbg !5441
  %min27 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 21, !dbg !5468
  %arrayidx29 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv11, !dbg !5482
  store i32 %13, i32* %arrayidx29, align 4, !dbg !5483
  store i32 %spec.select, i32* %min27, align 8, !dbg !5484
  br label %for.inc, !dbg !5485

for.inc:                                          ; preds = %for.body, %if.end21
  %first_not_finished.3 = phi i32 [ %first_not_finished.2, %if.end21 ], [ %first_not_finished.0, %for.body ], !dbg !5441
  %cover_class.2 = phi i32 [ %cover_class.1, %if.end21 ], [ %cover_class.0, %for.body ], !dbg !5441
  call void @llvm.dbg.value(metadata i32 %cover_class.2, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %first_not_finished.3, metadata !5432, metadata !DIExpression()), !dbg !5441
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1, !dbg !5486
  call void @llvm.dbg.value(metadata i32 undef, metadata !5426, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5441
  br label %for.cond, !dbg !5487, !llvm.loop !5488

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* @ira_max_point, align 4, !dbg !5490
  %conv32 = sext i32 %15 to i64, !dbg !5490
  %mul33 = shl nsw i64 %conv32, 2, !dbg !5491
  %call34 = tail call i8* @ira_allocate(i64 %mul33) #6, !dbg !5492
  %16 = bitcast i8* %call34 to i32*, !dbg !5493
  call void @llvm.dbg.value(metadata i32* %16, metadata !5435, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 -1, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 -1, metadata !5433, metadata !DIExpression()), !dbg !5441
  %17 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5494
  call void @llvm.dbg.value(metadata i32 %17, metadata !5426, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5441
  %18 = sext i32 %17 to i64, !dbg !5496
  br label %for.cond35, !dbg !5496

for.cond35:                                       ; preds = %for.inc86, %for.end
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc86 ], [ %18, %for.end ], !dbg !5497
  %filled_area_start.0 = phi i32 [ %filled_area_start.2, %for.inc86 ], [ -1, %for.end ], !dbg !5497
  %cover_class.3 = phi i32 [ %cover_class.5, %for.inc86 ], [ -1, %for.end ], !dbg !5498
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, -1, !dbg !5499
  call void @llvm.dbg.value(metadata i32 %cover_class.3, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 undef, metadata !5426, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %filled_area_start.0, metadata !5433, metadata !DIExpression()), !dbg !5441
  %cmp36 = icmp sgt i64 %indvars.iv7, 0, !dbg !5500
  br i1 %cmp36, label %for.body38, label %for.end87, !dbg !5502

for.body38:                                       ; preds = %for.cond35
  %19 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !5503
  %arrayidx40 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %19, i64 %indvars.iv.next8, !dbg !5503
  %20 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx40, align 8, !dbg !5503
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %20, metadata !5436, metadata !DIExpression()), !dbg !5441
  %cmp41 = icmp eq %struct.ira_allocno* %20, null, !dbg !5505
  br i1 %cmp41, label %for.inc86, label %if.end44, !dbg !5507

if.end44:                                         ; preds = %for.body38
  %cmp45 = icmp slt i32 %cover_class.3, 0, !dbg !5508
  br i1 %cmp45, label %if.end44.if.then54_crit_edge, label %lor.lhs.false47, !dbg !5510

if.end44.if.then54_crit_edge:                     ; preds = %if.end44
  %cover_class55.phi.trans.insert = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 9, !dbg !5511
  %.pre = load i32, i32* %cover_class55.phi.trans.insert, align 8, !dbg !5513
  br label %if.then54, !dbg !5510

lor.lhs.false47:                                  ; preds = %if.end44
  %21 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !5514
  %cmp48 = icmp eq i32 %21, 1, !dbg !5515
  br i1 %cmp48, label %if.end65, label %land.lhs.true50, !dbg !5516

land.lhs.true50:                                  ; preds = %lor.lhs.false47
  %cover_class51 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 9, !dbg !5517
  %22 = load i32, i32* %cover_class51, align 8, !dbg !5517
  %cmp52 = icmp eq i32 %cover_class.3, %22, !dbg !5518
  br i1 %cmp52, label %if.end65, label %if.then54, !dbg !5519

if.then54:                                        ; preds = %if.end44.if.then54_crit_edge, %land.lhs.true50
  %23 = phi i32 [ %.pre, %if.end44.if.then54_crit_edge ], [ %22, %land.lhs.true50 ], !dbg !5513
  call void @llvm.dbg.value(metadata i32 %23, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 0, metadata !5427, metadata !DIExpression()), !dbg !5441
  br label %for.cond56, !dbg !5520

for.cond56:                                       ; preds = %for.body59, %if.then54
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body59 ], [ 0, %if.then54 ], !dbg !5522
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5427, metadata !DIExpression()), !dbg !5441
  %24 = load i32, i32* @ira_max_point, align 4, !dbg !5523
  %25 = sext i32 %24 to i64, !dbg !5525
  %cmp57 = icmp slt i64 %indvars.iv, %25, !dbg !5525
  br i1 %cmp57, label %for.body59, label %for.end64, !dbg !5526

for.body59:                                       ; preds = %for.cond56
  %arrayidx61 = getelementptr inbounds i32, i32* %16, i64 %indvars.iv, !dbg !5527
  store i32 -1, i32* %arrayidx61, align 4, !dbg !5528
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5529
  call void @llvm.dbg.value(metadata i32 undef, metadata !5427, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5441
  br label %for.cond56, !dbg !5530, !llvm.loop !5531

for.end64:                                        ; preds = %for.cond56
  %.lcssa = phi i32 [ %24, %for.cond56 ], !dbg !5523
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !5433, metadata !DIExpression()), !dbg !5441
  br label %if.end65, !dbg !5533

if.end65:                                         ; preds = %land.lhs.true50, %lor.lhs.false47, %for.end64
  %filled_area_start.1 = phi i32 [ %.lcssa, %for.end64 ], [ %filled_area_start.0, %land.lhs.true50 ], [ %filled_area_start.0, %lor.lhs.false47 ], !dbg !5441
  %cover_class.4 = phi i32 [ %23, %for.end64 ], [ %cover_class.3, %land.lhs.true50 ], [ %cover_class.3, %lor.lhs.false47 ], !dbg !5441
  call void @llvm.dbg.value(metadata i32 %cover_class.4, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %filled_area_start.1, metadata !5433, metadata !DIExpression()), !dbg !5441
  %arrayidx67 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv.next8, !dbg !5534
  %26 = load i32, i32* %arrayidx67, align 4, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %26, metadata !5428, metadata !DIExpression()), !dbg !5441
  %max68 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 22, !dbg !5535
  %27 = load i32, i32* %max68, align 4, !dbg !5535
  call void @llvm.dbg.value(metadata i32 %27, metadata !5431, metadata !DIExpression()), !dbg !5441
  %idxprom69 = sext i32 %27 to i64, !dbg !5536
  %arrayidx70 = getelementptr inbounds i32, i32* %16, i64 %idxprom69, !dbg !5536
  %28 = load i32, i32* %arrayidx70, align 4, !dbg !5536
  call void @llvm.dbg.value(metadata i32 %28, metadata !5429, metadata !DIExpression()), !dbg !5441
  %cmp71 = icmp slt i32 %28, 0, !dbg !5537
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !5539

if.then73:                                        ; preds = %if.end65
  %conflict_id = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 24, !dbg !5540
  %29 = load i32, i32* %conflict_id, align 8, !dbg !5540
  %sub74 = add nsw i32 %29, -1, !dbg !5541
  call void @llvm.dbg.value(metadata i32 %sub74, metadata !5429, metadata !DIExpression()), !dbg !5441
  br label %if.end75, !dbg !5542

if.end75:                                         ; preds = %if.then73, %if.end65
  %max.0 = phi i32 [ %sub74, %if.then73 ], [ %28, %if.end65 ], !dbg !5543
  call void @llvm.dbg.value(metadata i32 %max.0, metadata !5429, metadata !DIExpression()), !dbg !5441
  store i32 %max.0, i32* %max68, align 4, !dbg !5544
  call void @llvm.dbg.value(metadata i32 %26, metadata !5427, metadata !DIExpression()), !dbg !5441
  %30 = sext i32 %26 to i64, !dbg !5545
  %31 = sext i32 %filled_area_start.1 to i64, !dbg !5545
  br label %for.cond77, !dbg !5545

for.cond77:                                       ; preds = %for.body80, %if.end75
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body80 ], [ %30, %if.end75 ], !dbg !5547
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !5427, metadata !DIExpression()), !dbg !5441
  %cmp78 = icmp slt i64 %indvars.iv5, %31, !dbg !5548
  br i1 %cmp78, label %for.body80, label %for.inc86.loopexit, !dbg !5550

for.body80:                                       ; preds = %for.cond77
  %arrayidx82 = getelementptr inbounds i32, i32* %16, i64 %indvars.iv5, !dbg !5551
  %32 = trunc i64 %indvars.iv.next8 to i32, !dbg !5552
  store i32 %32, i32* %arrayidx82, align 4, !dbg !5552
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1, !dbg !5553
  call void @llvm.dbg.value(metadata i32 undef, metadata !5427, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5441
  br label %for.cond77, !dbg !5554, !llvm.loop !5555

for.inc86.loopexit:                               ; preds = %for.cond77
  br label %for.inc86, !dbg !5557

for.inc86:                                        ; preds = %for.inc86.loopexit, %for.body38
  %filled_area_start.2 = phi i32 [ %filled_area_start.0, %for.body38 ], [ %26, %for.inc86.loopexit ], !dbg !5441
  %cover_class.5 = phi i32 [ %cover_class.3, %for.body38 ], [ %cover_class.4, %for.inc86.loopexit ], !dbg !5441
  call void @llvm.dbg.value(metadata i32 %cover_class.5, metadata !5425, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %filled_area_start.2, metadata !5433, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 undef, metadata !5426, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5441
  br label %for.cond35, !dbg !5557, !llvm.loop !5558

for.end87:                                        ; preds = %for.cond35
  tail call void @ira_free(i8* %call34) #6, !dbg !5560
  tail call void @ira_free(i8* %call) #6, !dbg !5561
  ret void, !dbg !5562
}

declare dso_local void @ira_build_conflicts() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !5563 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !5569, metadata !DIExpression()), !dbg !5570
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !5571
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5571

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !5571
  %0 = load i32, i32* %num, align 8, !dbg !5571
  br label %cond.end, !dbg !5571

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5571
  ret i32 %cond, !dbg !5571
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_destroy() local_unnamed_addr #5 !dbg !5572 {
entry:
  tail call fastcc void @finish_loop_tree_nodes() #7, !dbg !5573
  tail call fastcc void @finish_copies() #7, !dbg !5574
  tail call fastcc void @finish_allocnos() #7, !dbg !5575
  tail call fastcc void @finish_cost_vectors() #7, !dbg !5576
  tail call void @ira_finish_allocno_live_ranges() #6, !dbg !5577
  ret void, !dbg !5578
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_loop_tree_nodes() unnamed_addr #5 !dbg !5579 {
entry:
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !5583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5583
  call void @llvm.dbg.value(metadata i32 0, metadata !5581, metadata !DIExpression()), !dbg !5584
  br label %for.cond, !dbg !5585

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5587
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5581, metadata !DIExpression()), !dbg !5584
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !5588
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !5588
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !5582, metadata !DIExpression(DW_OP_deref)), !dbg !5584
  %call = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base, i32 %i.0, %struct.loop** nonnull %loop) #7, !dbg !5588
  %tobool1 = icmp eq i32 %call, 0, !dbg !5590
  %2 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !5584
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5590

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64, !dbg !5591
  %arrayidx = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %2, i64 %idxprom, !dbg !5591
  call fastcc void @finish_loop_tree_node(%struct.ira_loop_tree_node* %arrayidx) #7, !dbg !5592
  %inc = add i32 %i.0, 1, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5581, metadata !DIExpression()), !dbg !5584
  br label %for.cond, !dbg !5594, !llvm.loop !5595

for.end:                                          ; preds = %for.cond
  %.lcssa6 = phi %struct.ira_loop_tree_node* [ %2, %for.cond ], !dbg !5584
  %3 = bitcast %struct.ira_loop_tree_node* %.lcssa6 to i8*, !dbg !5597
  call void @ira_free(i8* %3) #6, !dbg !5598
  call void @llvm.dbg.value(metadata i32 0, metadata !5581, metadata !DIExpression()), !dbg !5584
  br label %for.cond2, !dbg !5599

for.cond2:                                        ; preds = %for.inc42, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc42 ], [ 0, %for.end ], !dbg !5601
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5581, metadata !DIExpression()), !dbg !5584
  %4 = load i32, i32* @last_basic_block_before_change, align 4, !dbg !5602
  %5 = zext i32 %4 to i64, !dbg !5604
  %cmp = icmp ult i64 %indvars.iv, %5, !dbg !5604
  %6 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !5584
  br i1 %cmp, label %for.body3, label %for.end44, !dbg !5605

for.body3:                                        ; preds = %for.cond2
  %local_copies = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %6, i64 %indvars.iv, i32 15, !dbg !5606
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_copies, align 8, !dbg !5606
  %cmp6 = icmp eq %struct.bitmap_head_def* %7, null, !dbg !5609
  br i1 %cmp6, label %if.end, label %if.then, !dbg !5610

if.then:                                          ; preds = %for.body3
  call void @ira_free_bitmap(%struct.bitmap_head_def* nonnull %7) #6, !dbg !5611
  %.pre = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !5612
  br label %if.end, !dbg !5611

if.end:                                           ; preds = %for.body3, %if.then
  %8 = phi %struct.ira_loop_tree_node* [ %6, %for.body3 ], [ %.pre, %if.then ], !dbg !5612
  %border_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %8, i64 %indvars.iv, i32 13, !dbg !5614
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %border_allocnos, align 8, !dbg !5614
  %cmp12 = icmp eq %struct.bitmap_head_def* %9, null, !dbg !5615
  br i1 %cmp12, label %if.end17, label %if.then13, !dbg !5616

if.then13:                                        ; preds = %if.end
  call void @ira_free_bitmap(%struct.bitmap_head_def* nonnull %9) #6, !dbg !5617
  %.pre2 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !5618
  br label %if.end17, !dbg !5617

if.end17:                                         ; preds = %if.end, %if.then13
  %10 = phi %struct.ira_loop_tree_node* [ %8, %if.end ], [ %.pre2, %if.then13 ], !dbg !5618
  %modified_regnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %indvars.iv, i32 14, !dbg !5620
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %modified_regnos, align 8, !dbg !5620
  %cmp20 = icmp eq %struct.bitmap_head_def* %11, null, !dbg !5621
  br i1 %cmp20, label %if.end25, label %if.then21, !dbg !5622

if.then21:                                        ; preds = %if.end17
  call void @ira_free_bitmap(%struct.bitmap_head_def* nonnull %11) #6, !dbg !5623
  %.pre3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !5624
  br label %if.end25, !dbg !5623

if.end25:                                         ; preds = %if.end17, %if.then21
  %12 = phi %struct.ira_loop_tree_node* [ %10, %if.end17 ], [ %.pre3, %if.then21 ], !dbg !5624
  %all_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %12, i64 %indvars.iv, i32 12, !dbg !5626
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !5626
  %cmp28 = icmp eq %struct.bitmap_head_def* %13, null, !dbg !5627
  br i1 %cmp28, label %if.end33, label %if.then29, !dbg !5628

if.then29:                                        ; preds = %if.end25
  call void @ira_free_bitmap(%struct.bitmap_head_def* nonnull %13) #6, !dbg !5629
  %.pre4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !5630
  br label %if.end33, !dbg !5629

if.end33:                                         ; preds = %if.end25, %if.then29
  %14 = phi %struct.ira_loop_tree_node* [ %12, %if.end25 ], [ %.pre4, %if.then29 ], !dbg !5630
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %14, i64 %indvars.iv, i32 9, !dbg !5632
  %15 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !5632
  %cmp36 = icmp eq %struct.ira_allocno** %15, null, !dbg !5633
  br i1 %cmp36, label %for.inc42, label %if.then37, !dbg !5634

if.then37:                                        ; preds = %if.end33
  %16 = bitcast %struct.ira_allocno** %15 to i8*, !dbg !5634
  call void @ira_free(i8* nonnull %16) #6, !dbg !5635
  br label %for.inc42, !dbg !5635

for.inc42:                                        ; preds = %if.end33, %if.then37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5636
  br label %for.cond2, !dbg !5637, !llvm.loop !5638

for.end44:                                        ; preds = %for.cond2
  %.lcssa = phi %struct.ira_loop_tree_node* [ %6, %for.cond2 ], !dbg !5584
  %17 = bitcast %struct.ira_loop_tree_node* %.lcssa to i8*, !dbg !5640
  call void @ira_free(i8* %17) #6, !dbg !5641
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5642
  ret void, !dbg !5642
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_copies() unnamed_addr #5 !dbg !5643 {
entry:
  %cp = alloca %struct.ira_allocno_copy*, align 8
  %ci = alloca %struct.ira_copy_iterator, align 4
  %0 = bitcast %struct.ira_allocno_copy** %cp to i8*, !dbg !5647
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5647
  %1 = bitcast %struct.ira_copy_iterator* %ci to i8*, !dbg !5648
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5648
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !5646, metadata !DIExpression(DW_OP_deref)), !dbg !5649
  call fastcc void @ira_copy_iter_init(%struct.ira_copy_iterator* nonnull %ci) #7, !dbg !5650
  br label %for.cond, !dbg !5650

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy** %cp, metadata !5645, metadata !DIExpression(DW_OP_deref)), !dbg !5649
  call void @llvm.dbg.value(metadata %struct.ira_copy_iterator* %ci, metadata !5646, metadata !DIExpression(DW_OP_deref)), !dbg !5649
  %call = call fastcc zeroext i8 @ira_copy_iter_cond(%struct.ira_copy_iterator* nonnull %ci, %struct.ira_allocno_copy** nonnull %cp) #7, !dbg !5652
  %tobool = icmp eq i8 %call, 0, !dbg !5650
  br i1 %tobool, label %for.end, label %for.body, !dbg !5650

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %cp, align 8, !dbg !5654
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %2, metadata !5645, metadata !DIExpression()), !dbg !5649
  call fastcc void @finish_copy(%struct.ira_allocno_copy* %2) #7, !dbg !5655
  br label %for.cond, !dbg !5652, !llvm.loop !5656

for.end:                                          ; preds = %for.cond
  call fastcc void @VEC_ira_copy_t_heap_free(%struct.VEC_ira_copy_t_heap** nonnull @copy_vec) #7, !dbg !5658
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @copy_pool, align 8, !dbg !5659
  call void @free_alloc_pool(%struct.alloc_pool_def* %3) #6, !dbg !5660
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5661
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5661
  ret void, !dbg !5661
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_allocnos() unnamed_addr #5 !dbg !5662 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5666
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5666
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5667
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5667
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5665, metadata !DIExpression(DW_OP_deref)), !dbg !5668
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5669
  br label %for.cond, !dbg !5669

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5664, metadata !DIExpression(DW_OP_deref)), !dbg !5668
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5665, metadata !DIExpression(DW_OP_deref)), !dbg !5668
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5671
  %tobool = icmp eq i8 %call, 0, !dbg !5669
  br i1 %tobool, label %for.end, label %for.body, !dbg !5669

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5673
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5664, metadata !DIExpression()), !dbg !5668
  call fastcc void @finish_allocno(%struct.ira_allocno* %2) #7, !dbg !5674
  br label %for.cond, !dbg !5671, !llvm.loop !5675

for.end:                                          ; preds = %for.cond
  %3 = load i8*, i8** bitcast (%struct.ira_allocno*** @ira_regno_allocno_map to i8**), align 8, !dbg !5677
  call void @ira_free(i8* %3) #6, !dbg !5678
  call fastcc void @VEC_ira_allocno_t_heap_free(%struct.VEC_ira_allocno_t_heap** nonnull @ira_conflict_id_allocno_map_vec) #7, !dbg !5679
  call fastcc void @VEC_ira_allocno_t_heap_free(%struct.VEC_ira_allocno_t_heap** nonnull @allocno_vec) #7, !dbg !5680
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @allocno_pool, align 8, !dbg !5681
  call void @free_alloc_pool(%struct.alloc_pool_def* %4) #6, !dbg !5682
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @allocno_live_range_pool, align 8, !dbg !5683
  call void @free_alloc_pool(%struct.alloc_pool_def* %5) #6, !dbg !5684
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5685
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5685
  ret void, !dbg !5685
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_cost_vectors() unnamed_addr #5 !dbg !5686 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !5688, metadata !DIExpression()), !dbg !5690
  br label %for.cond, !dbg !5691

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !5693
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5688, metadata !DIExpression()), !dbg !5690
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !5694
  %1 = sext i32 %0 to i64, !dbg !5696
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !5696
  br i1 %cmp, label %for.body, label %for.end, !dbg !5697

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !5698
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5698
  call void @llvm.dbg.value(metadata i32 %2, metadata !5689, metadata !DIExpression()), !dbg !5690
  %idxprom1 = zext i32 %2 to i64, !dbg !5700
  %arrayidx2 = getelementptr inbounds [27 x %struct.alloc_pool_def*], [27 x %struct.alloc_pool_def*]* @cost_vector_pool, i64 0, i64 %idxprom1, !dbg !5700
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %arrayidx2, align 8, !dbg !5700
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %3) #6, !dbg !5701
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5702
  call void @llvm.dbg.value(metadata i32 undef, metadata !5688, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5690
  br label %for.cond, !dbg !5703, !llvm.loop !5704

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5706
}

declare dso_local void @ira_finish_allocno_live_ranges() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_allocno_t_heap_reserve(%struct.VEC_ira_allocno_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5707 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_heap** %vec_, metadata !5711, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i32 1, metadata !5712, metadata !DIExpression()), !dbg !5714
  %0 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !5715
  %tobool = icmp eq %struct.VEC_ira_allocno_t_heap* %0, null, !dbg !5715
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5715

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %0, i64 0, i32 0, !dbg !5715
  br label %cond.end, !dbg !5715

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_allocno_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5715
  %call = tail call fastcc i32 @VEC_ira_allocno_t_base_space(%struct.VEC_ira_allocno_t_base* %cond, i32 1) #7, !dbg !5715
  %tobool1 = icmp eq i32 %call, 0, !dbg !5715
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5715
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5713, metadata !DIExpression()), !dbg !5714
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5715

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_ira_allocno_t_heap** %vec_ to i8**, !dbg !5716
  %2 = load i8*, i8** %1, align 8, !dbg !5716
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5716
  store i8* %call3, i8** %1, align 8, !dbg !5716
  br label %if.end, !dbg !5716

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5715
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno** @VEC_ira_allocno_t_base_quick_push(%struct.VEC_ira_allocno_t_base* %vec_, %struct.ira_allocno* %obj_) unnamed_addr #0 !dbg !5718 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !5722, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %obj_, metadata !5723, metadata !DIExpression()), !dbg !5725
  %num1 = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !5726
  %0 = load i32, i32* %num1, align 8, !dbg !5726
  %inc = add i32 %0, 1, !dbg !5726
  store i32 %inc, i32* %num1, align 8, !dbg !5726
  %idxprom = zext i32 %0 to i64, !dbg !5726
  %arrayidx = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5726
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %arrayidx, metadata !5724, metadata !DIExpression()), !dbg !5725
  store %struct.ira_allocno* %obj_, %struct.ira_allocno** %arrayidx, align 8, !dbg !5726
  ret %struct.ira_allocno** %arrayidx, !dbg !5726
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_allocno_t_base_space(%struct.VEC_ira_allocno_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5727 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !5731, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata i32 1, metadata !5732, metadata !DIExpression()), !dbg !5733
  %tobool = icmp eq %struct.VEC_ira_allocno_t_base* %vec_, null, !dbg !5734
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5734

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 1, !dbg !5734
  %0 = load i32, i32* %alloc, align 4, !dbg !5734
  %num = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !5734
  %1 = load i32, i32* %num, align 8, !dbg !5734
  %cmp1 = icmp ne i32 %0, %1, !dbg !5734
  %phitmp = zext i1 %cmp1 to i32, !dbg !5734
  br label %cond.end, !dbg !5734

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5734

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5734
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_copy_t_heap_reserve(%struct.VEC_ira_copy_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5735 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_copy_t_heap** @copy_vec, metadata !5739, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata i32 1, metadata !5740, metadata !DIExpression()), !dbg !5742
  %0 = load %struct.VEC_ira_copy_t_heap*, %struct.VEC_ira_copy_t_heap** @copy_vec, align 8, !dbg !5743
  %tobool = icmp eq %struct.VEC_ira_copy_t_heap* %0, null, !dbg !5743
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5743

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_copy_t_heap, %struct.VEC_ira_copy_t_heap* %0, i64 0, i32 0, !dbg !5743
  br label %cond.end, !dbg !5743

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_copy_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5743
  %call = tail call fastcc i32 @VEC_ira_copy_t_base_space(%struct.VEC_ira_copy_t_base* %cond, i32 1) #7, !dbg !5743
  %tobool1 = icmp eq i32 %call, 0, !dbg !5743
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5743
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5741, metadata !DIExpression()), !dbg !5742
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5743

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_ira_copy_t_heap** @copy_vec to i8**), align 8, !dbg !5744
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !5744
  store i8* %call3, i8** bitcast (%struct.VEC_ira_copy_t_heap** @copy_vec to i8**), align 8, !dbg !5744
  br label %if.end, !dbg !5744

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5743
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno_copy** @VEC_ira_copy_t_base_quick_push(%struct.VEC_ira_copy_t_base* %vec_, %struct.ira_allocno_copy* %obj_) unnamed_addr #0 !dbg !5746 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_copy_t_base* %vec_, metadata !5750, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %obj_, metadata !5751, metadata !DIExpression()), !dbg !5753
  %num1 = getelementptr inbounds %struct.VEC_ira_copy_t_base, %struct.VEC_ira_copy_t_base* %vec_, i64 0, i32 0, !dbg !5754
  %0 = load i32, i32* %num1, align 8, !dbg !5754
  %inc = add i32 %0, 1, !dbg !5754
  store i32 %inc, i32* %num1, align 8, !dbg !5754
  %idxprom = zext i32 %0 to i64, !dbg !5754
  %arrayidx = getelementptr inbounds %struct.VEC_ira_copy_t_base, %struct.VEC_ira_copy_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5754
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy** %arrayidx, metadata !5752, metadata !DIExpression()), !dbg !5753
  store %struct.ira_allocno_copy* %obj_, %struct.ira_allocno_copy** %arrayidx, align 8, !dbg !5754
  ret %struct.ira_allocno_copy** %arrayidx, !dbg !5754
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_copy_t_base_space(%struct.VEC_ira_copy_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5755 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_copy_t_base* %vec_, metadata !5759, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 1, metadata !5760, metadata !DIExpression()), !dbg !5761
  %tobool = icmp eq %struct.VEC_ira_copy_t_base* %vec_, null, !dbg !5762
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5762

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ira_copy_t_base, %struct.VEC_ira_copy_t_base* %vec_, i64 0, i32 1, !dbg !5762
  %0 = load i32, i32* %alloc, align 4, !dbg !5762
  %num = getelementptr inbounds %struct.VEC_ira_copy_t_base, %struct.VEC_ira_copy_t_base* %vec_, i64 0, i32 0, !dbg !5762
  %1 = load i32, i32* %num, align 8, !dbg !5762
  %cmp1 = icmp ne i32 %0, %1, !dbg !5762
  %phitmp = zext i1 %cmp1 to i32, !dbg !5762
  br label %cond.end, !dbg !5762

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5762

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5762
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sparseset_bit_p(%struct.sparseset_def* %s, i32 %e) unnamed_addr #0 !dbg !5763 {
entry:
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %s, metadata !5767, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata i32 %e, metadata !5768, metadata !DIExpression()), !dbg !5770
  %size = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 3, !dbg !5771
  %0 = load i32, i32* %size, align 4, !dbg !5771
  %cmp = icmp ugt i32 %0, %e, !dbg !5771
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5771

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5771
  br label %cond.end, !dbg !5771

cond.end:                                         ; preds = %entry, %cond.true
  %sparse = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 1, !dbg !5772
  %1 = load i32*, i32** %sparse, align 8, !dbg !5772
  %idxprom = zext i32 %e to i64, !dbg !5773
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !5773
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5773
  call void @llvm.dbg.value(metadata i32 %2, metadata !5769, metadata !DIExpression()), !dbg !5770
  %members = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 2, !dbg !5774
  %3 = load i32, i32* %members, align 8, !dbg !5774
  %cmp1 = icmp ult i32 %2, %3, !dbg !5775
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !5776

land.rhs:                                         ; preds = %cond.end
  %dense = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 0, !dbg !5777
  %4 = load i32*, i32** %dense, align 8, !dbg !5777
  %idxprom2 = zext i32 %2 to i64, !dbg !5778
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i64 %idxprom2, !dbg !5778
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !5778
  %cmp4 = icmp eq i32 %5, %e, !dbg !5779
  %phitmp = zext i1 %cmp4 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %6 = phi i8 [ 0, %cond.end ], [ %phitmp, %land.rhs ]
  ret i8 %6, !dbg !5780
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @sparseset_insert_bit(%struct.sparseset_def* %s, i32 %e, i32 %idx) unnamed_addr #0 !dbg !5781 {
entry:
  call void @llvm.dbg.value(metadata %struct.sparseset_def* %s, metadata !5785, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i32 %e, metadata !5786, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i32 %idx, metadata !5787, metadata !DIExpression()), !dbg !5788
  %sparse = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 1, !dbg !5789
  %0 = load i32*, i32** %sparse, align 8, !dbg !5789
  %idxprom = zext i32 %e to i64, !dbg !5790
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !5790
  store i32 %idx, i32* %arrayidx, align 4, !dbg !5791
  %dense = getelementptr inbounds %struct.sparseset_def, %struct.sparseset_def* %s, i64 0, i32 0, !dbg !5792
  %1 = load i32*, i32** %dense, align 8, !dbg !5792
  %idxprom1 = zext i32 %idx to i64, !dbg !5793
  %arrayidx2 = getelementptr inbounds i32, i32* %1, i64 %idxprom1, !dbg !5793
  store i32 %e, i32* %arrayidx2, align 4, !dbg !5794
  ret void, !dbg !5795
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compress_allocno_conflict_vec(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !5796 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !5798, metadata !DIExpression()), !dbg !5803
  %conflict_allocno_array = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 23, !dbg !5804
  %0 = bitcast i8** %conflict_allocno_array to %struct.ira_allocno***, !dbg !5804
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** %0, align 8, !dbg !5804
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %1, metadata !5799, metadata !DIExpression()), !dbg !5803
  %2 = load i32, i32* @curr_allocno_conflict_check_tick, align 4, !dbg !5805
  %inc = add nsw i32 %2, 1, !dbg !5805
  store i32 %inc, i32* @curr_allocno_conflict_check_tick, align 4, !dbg !5805
  call void @llvm.dbg.value(metadata i32 0, metadata !5802, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i32 0, metadata !5801, metadata !DIExpression()), !dbg !5803
  br label %for.cond, !dbg !5806

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5808
  %j.0 = phi i32 [ %j.1, %for.inc ], [ 0, %entry ], !dbg !5808
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5802, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5801, metadata !DIExpression()), !dbg !5803
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %indvars.iv, !dbg !5809
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !5809
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5800, metadata !DIExpression()), !dbg !5803
  %cmp = icmp eq %struct.ira_allocno* %3, null, !dbg !5811
  br i1 %cmp, label %for.end, label %for.body, !dbg !5812

for.body:                                         ; preds = %for.cond
  %4 = load i32*, i32** @allocno_conflict_check, align 8, !dbg !5813
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 0, !dbg !5816
  %5 = load i32, i32* %num, align 8, !dbg !5816
  %idxprom1 = sext i32 %5 to i64, !dbg !5813
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom1, !dbg !5813
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !5813
  %7 = load i32, i32* @curr_allocno_conflict_check_tick, align 4, !dbg !5817
  %cmp3 = icmp eq i32 %6, %7, !dbg !5818
  br i1 %cmp3, label %for.inc, label %if.then, !dbg !5819

if.then:                                          ; preds = %for.body
  store i32 %7, i32* %arrayidx2, align 4, !dbg !5820
  %inc7 = add nsw i32 %j.0, 1, !dbg !5822
  call void @llvm.dbg.value(metadata i32 %inc7, metadata !5802, metadata !DIExpression()), !dbg !5803
  %idxprom8 = sext i32 %j.0 to i64, !dbg !5823
  %arrayidx9 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %idxprom8, !dbg !5823
  store %struct.ira_allocno* %3, %struct.ira_allocno** %arrayidx9, align 8, !dbg !5824
  br label %for.inc, !dbg !5825

for.inc:                                          ; preds = %for.body, %if.then
  %j.1 = phi i32 [ %inc7, %if.then ], [ %j.0, %for.body ], !dbg !5808
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !5802, metadata !DIExpression()), !dbg !5803
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !5826
  call void @llvm.dbg.value(metadata i32 undef, metadata !5801, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5803
  br label %for.cond, !dbg !5827, !llvm.loop !5828

for.end:                                          ; preds = %for.cond
  %j.0.lcssa = phi i32 [ %j.0, %for.cond ], !dbg !5808
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !5802, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !5802, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !5802, metadata !DIExpression()), !dbg !5803
  %conflict_allocnos_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 28, !dbg !5830
  store i32 %j.0.lcssa, i32* %conflict_allocnos_num, align 8, !dbg !5831
  %idxprom11 = sext i32 %j.0.lcssa to i64, !dbg !5832
  %arrayidx12 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %idxprom11, !dbg !5832
  store %struct.ira_allocno* null, %struct.ira_allocno** %arrayidx12, align 8, !dbg !5833
  ret void, !dbg !5834
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !5835 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !5840, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5841, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !5842, metadata !DIExpression()), !dbg !5843
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !5844
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5844

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !5844
  %0 = load i32, i32* %num, align 8, !dbg !5844
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5844
  br i1 %cmp, label %if.then, label %if.else, !dbg !5846

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5847
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5847
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !5847
  br label %return, !dbg !5847

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5849

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !5851
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5851
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !5851
  ret i32 %retval.0, !dbg !5846
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ira_allocno_t_heap* @VEC_ira_allocno_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5852 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5856, metadata !DIExpression()), !dbg !5857
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5858
  %0 = bitcast i8* %call to %struct.VEC_ira_allocno_t_heap*, !dbg !5858
  ret %struct.VEC_ira_allocno_t_heap* %0, !dbg !5858
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ira_copy_t_heap* @VEC_ira_copy_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5859 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5863, metadata !DIExpression()), !dbg !5864
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5865
  %0 = bitcast i8* %call to %struct.VEC_ira_copy_t_heap*, !dbg !5865
  ret %struct.VEC_ira_copy_t_heap* %0, !dbg !5865
}

declare dso_local i32 @get_max_uid() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !5866 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !5870, metadata !DIExpression()), !dbg !5872
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !5873
  store i32 0, i32* %index, align 8, !dbg !5874
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !5875
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !5876
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !5877
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !5877
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !5877
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !5878 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !5884, metadata !DIExpression()), !dbg !5885
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !5886
  %tobool = icmp eq i8 %call, 0, !dbg !5886
  br i1 %tobool, label %if.then, label %if.else, !dbg !5888

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !5889
  br label %return, !dbg !5891

if.else:                                          ; preds = %entry
  br label %return, !dbg !5892

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !5894
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !5894
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !5894
  ret i8 %retval.0, !dbg !5895
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !5896 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5902, metadata !DIExpression()), !dbg !5903
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5904
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5904

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5904
  %0 = load i32, i32* %num, align 8, !dbg !5904
  br label %cond.end, !dbg !5904

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5904
  ret i32 %cond, !dbg !5904
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !5905 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !5910, metadata !DIExpression()), !dbg !5911
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !5912
  %0 = load i32, i32* %index, align 8, !dbg !5912
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !5912
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5912
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !5912
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5912
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5912

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !5912
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !5912
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !5912
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5912
  br label %cond.end, !dbg !5912

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5912
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5912
  %cmp = icmp ult i32 %0, %call2, !dbg !5912
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !5912

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5912
  br label %cond.end5, !dbg !5912

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !5913
  %inc = add i32 %5, 1, !dbg !5913
  store i32 %inc, i32* %index, align 8, !dbg !5913
  ret void, !dbg !5914
}

declare dso_local %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) unnamed_addr #0 !dbg !5915 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5919, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5920, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata %struct.edge_def** %ptr, metadata !5921, metadata !DIExpression()), !dbg !5922
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5923
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5923

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5923
  %0 = load i32, i32* %num, align 8, !dbg !5923
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5923
  br i1 %cmp, label %if.then, label %if.else, !dbg !5925

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5926
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5926
  %1 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5926
  br label %return, !dbg !5926

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5928

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ null, %if.else ], [ %1, %if.then ], !dbg !5930
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5930
  store %struct.edge_def* %storemerge, %struct.edge_def** %ptr, align 8, !dbg !5930
  ret i32 %retval.0, !dbg !5925
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) unnamed_addr #0 !dbg !5931 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !5936, metadata !DIExpression()), !dbg !5937
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !5938
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !5938
  br i1 %tobool, label %if.end, label %if.then, !dbg !5940

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_heap* %0 to i8*, !dbg !5940
  tail call void @free(i8* nonnull %1) #6, !dbg !5938
  br label %if.end, !dbg !5938

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %vec_, align 8, !dbg !5940
  ret void, !dbg !5940
}

declare dso_local %struct.bitmap_head_def* @ira_allocate_bitmap() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5941 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5946
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5946
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5946

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5946
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5946
  br label %cond.end, !dbg !5946

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5946
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5946
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !5947
  %conv3 = zext i1 %cmp to i8, !dbg !5948
  ret i8 %conv3, !dbg !5949
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5950 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5955
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5955
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5955

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5955
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5955
  br label %cond.end, !dbg !5955

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5955
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !5955
  ret %struct.edge_def* %call2, !dbg !5956
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5957 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !5962
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5962

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !5962
  br label %cond.end, !dbg !5962

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !5963
  ret %struct.VEC_edge_gc* %0, !dbg !5964
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5965 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5969, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5970, metadata !DIExpression()), !dbg !5971
  br label %land.end, !dbg !5972

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5972
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5972
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5972
  ret %struct.edge_def* %0, !dbg !5972
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !5973 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5979, metadata !DIExpression()), !dbg !5981
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !5982
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !5982
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !5982
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5982

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !5982
  br label %cond.end, !dbg !5982

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5982
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %call, metadata !5980, metadata !DIExpression()), !dbg !5981
  %cmp = icmp eq i32 %call, 0, !dbg !5983
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5985

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !5986
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !5986
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !5986

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !5986
  br label %cond.end8, !dbg !5986

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !5986
  %sub = add i32 %call, -1, !dbg !5986
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !5986
  br label %cleanup, !dbg !5987

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !5981
  ret %struct.loop* %retval.0, !dbg !5988
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_loop_to_tree(%struct.loop* %loop) unnamed_addr #5 !dbg !5989 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5993, metadata !DIExpression()), !dbg !5997
  %call = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %loop) #7, !dbg !5998
  %cmp = icmp eq %struct.loop* %call, null, !dbg !6000
  br i1 %cmp, label %if.end, label %if.then, !dbg !6001

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %loop) #7, !dbg !6002
  tail call fastcc void @add_loop_to_tree(%struct.loop* %call1) #7, !dbg !6003
  br label %if.end, !dbg !6003

if.end:                                           ; preds = %entry, %if.then
  %0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6004
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !6006
  %1 = load i32, i32* %num, align 8, !dbg !6006
  %idxprom = sext i32 %1 to i64, !dbg !6004
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 9, !dbg !6007
  %2 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6007
  %cmp2 = icmp eq %struct.ira_allocno** %2, null, !dbg !6008
  br i1 %cmp2, label %if.end35, label %land.lhs.true, !dbg !6009

land.lhs.true:                                    ; preds = %if.end
  %children = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 5, !dbg !6010
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %children, align 8, !dbg !6010
  %cmp6 = icmp eq %struct.ira_loop_tree_node* %3, null, !dbg !6011
  br i1 %cmp6, label %if.then7, label %if.end35, !dbg !6012

if.then7:                                         ; preds = %land.lhs.true
  %arrayidx10 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, !dbg !6013
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %arrayidx10, metadata !5995, metadata !DIExpression()), !dbg !5997
  %loop11 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 1, !dbg !6015
  store %struct.loop* %loop, %struct.loop** %loop11, align 8, !dbg !6016
  %bb = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %arrayidx10, i64 0, i32 0, !dbg !6017
  store %struct.basic_block_def* null, %struct.basic_block_def** %bb, align 8, !dbg !6018
  %call12 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %loop) #7, !dbg !6019
  call void @llvm.dbg.value(metadata %struct.loop* %call12, metadata !5994, metadata !DIExpression()), !dbg !5997
  br label %for.cond, !dbg !6021

for.cond:                                         ; preds = %for.inc, %if.then7
  %parent.0 = phi %struct.loop* [ %call12, %if.then7 ], [ %call21, %for.inc ], !dbg !6022
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0, metadata !5994, metadata !DIExpression()), !dbg !5997
  %cond = icmp eq %struct.loop* %parent.0, null, !dbg !6023
  br i1 %cond, label %if.then23.loopexit, label %for.body, !dbg !6023

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6024
  %num14 = getelementptr inbounds %struct.loop, %struct.loop* %parent.0, i64 0, i32 0, !dbg !6027
  %5 = load i32, i32* %num14, align 8, !dbg !6027
  %idxprom15 = sext i32 %5 to i64, !dbg !6024
  %regno_allocno_map17 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 %idxprom15, i32 9, !dbg !6028
  %6 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map17, align 8, !dbg !6028
  %cmp18 = icmp eq %struct.ira_allocno** %6, null, !dbg !6029
  br i1 %cmp18, label %for.inc, label %for.end, !dbg !6030

for.inc:                                          ; preds = %for.body
  %call21 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* nonnull %parent.0) #7, !dbg !6031
  call void @llvm.dbg.value(metadata %struct.loop* %call21, metadata !5994, metadata !DIExpression()), !dbg !5997
  br label %for.cond, !dbg !6032, !llvm.loop !6033

for.end:                                          ; preds = %for.body
  %.lcssa = phi %struct.ira_loop_tree_node* [ %4, %for.body ], !dbg !6024
  %idxprom15.lcssa = phi i64 [ %idxprom15, %for.body ], !dbg !6024
  call void @llvm.dbg.value(metadata %struct.loop* %parent.0, metadata !5994, metadata !DIExpression()), !dbg !5997
  %arrayidx27 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.lcssa, i64 %idxprom15.lcssa, !dbg !6035
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %arrayidx27, metadata !5996, metadata !DIExpression()), !dbg !5997
  %children28 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.lcssa, i64 %idxprom15.lcssa, i32 5, !dbg !6038
  %7 = bitcast %struct.ira_loop_tree_node** %children28 to i64*, !dbg !6038
  %8 = load i64, i64* %7, align 8, !dbg !6038
  %next29 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 3, !dbg !6039
  %9 = bitcast %struct.ira_loop_tree_node** %next29 to i64*, !dbg !6040
  store i64 %8, i64* %9, align 8, !dbg !6040
  store %struct.ira_loop_tree_node* %arrayidx10, %struct.ira_loop_tree_node** %children28, align 8, !dbg !6041
  %subloops = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.lcssa, i64 %idxprom15.lcssa, i32 4, !dbg !6042
  %10 = bitcast %struct.ira_loop_tree_node** %subloops to i64*, !dbg !6042
  %11 = load i64, i64* %10, align 8, !dbg !6042
  %subloop_next31 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 2, !dbg !6043
  %12 = bitcast %struct.ira_loop_tree_node** %subloop_next31 to i64*, !dbg !6044
  store i64 %11, i64* %12, align 8, !dbg !6044
  store %struct.ira_loop_tree_node* %arrayidx10, %struct.ira_loop_tree_node** %subloops, align 8, !dbg !6045
  %parent33 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 6, !dbg !6046
  store %struct.ira_loop_tree_node* %arrayidx27, %struct.ira_loop_tree_node** %parent33, align 8, !dbg !6047
  br label %if.end35

if.then23.loopexit:                               ; preds = %for.cond
  %next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 3, !dbg !6048
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %next, align 8, !dbg !6050
  %subloop_next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 2, !dbg !6051
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %subloop_next, align 8, !dbg !6052
  %parent24 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 %idxprom, i32 6, !dbg !6053
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %parent24, align 8, !dbg !6054
  br label %if.end35, !dbg !6055

if.end35:                                         ; preds = %if.end, %if.then23.loopexit, %for.end, %land.lhs.true
  ret void, !dbg !6056
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @setup_loop_tree_level(%struct.ira_loop_tree_node* %loop_node, i32 %level) unnamed_addr #5 !dbg !6057 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_node, metadata !6061, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %level, metadata !6062, metadata !DIExpression()), !dbg !6066
  %level1 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 7, !dbg !6067
  store i32 %level, i32* %level1, align 8, !dbg !6068
  %add = add nsw i32 %level, 1, !dbg !6069
  call void @llvm.dbg.value(metadata i32 %add, metadata !6064, metadata !DIExpression()), !dbg !6066
  %subloops = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 4, !dbg !6070
  br label %for.cond, !dbg !6072

for.cond:                                         ; preds = %for.body, %entry
  %max_height.0 = phi i32 [ %add, %entry ], [ %spec.select, %for.body ], !dbg !6066
  %subloop_node.0.in = phi %struct.ira_loop_tree_node** [ %subloops, %entry ], [ %subloop_next, %for.body ]
  %subloop_node.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.0.in, align 8, !dbg !6073
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.0, metadata !6065, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %max_height.0, metadata !6064, metadata !DIExpression()), !dbg !6066
  %cmp = icmp eq %struct.ira_loop_tree_node* %subloop_node.0, null, !dbg !6074
  br i1 %cmp, label %for.end, label %for.body, !dbg !6076

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc i32 @setup_loop_tree_level(%struct.ira_loop_tree_node* nonnull %subloop_node.0, i32 %add) #7, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %call, metadata !6063, metadata !DIExpression()), !dbg !6066
  %cmp3 = icmp sgt i32 %call, %max_height.0, !dbg !6079
  %spec.select = select i1 %cmp3, i32 %call, i32 %max_height.0, !dbg !6081
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6064, metadata !DIExpression()), !dbg !6066
  %subloop_next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 2, !dbg !6082
  br label %for.cond, !dbg !6083, !llvm.loop !6084

for.end:                                          ; preds = %for.cond
  %max_height.0.lcssa = phi i32 [ %max_height.0, %for.cond ], !dbg !6066
  call void @llvm.dbg.value(metadata i32 %max_height.0.lcssa, metadata !6064, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %max_height.0.lcssa, metadata !6064, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %max_height.0.lcssa, metadata !6064, metadata !DIExpression()), !dbg !6066
  ret i32 %max_height.0.lcssa, !dbg !6086
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6087 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !6091, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6092, metadata !DIExpression()), !dbg !6093
  br label %land.end, !dbg !6094

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6094
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6094
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !6094
  ret %struct.loop* %0, !dbg !6094
}

; Function Attrs: nounwind uwtable
define internal void @create_loop_tree_node_allocnos(%struct.ira_loop_tree_node* %loop_node) #5 !dbg !6095 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %edges = alloca %struct.VEC_edge_heap*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_node, metadata !6097, metadata !DIExpression()), !dbg !6105
  %bb = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 0, !dbg !6106
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6106
  %cmp = icmp eq %struct.basic_block_def* %0, null, !dbg !6107
  br i1 %cmp, label %if.else, label %if.then, !dbg !6108

if.then:                                          ; preds = %entry
  tail call fastcc void @create_bb_allocnos(%struct.ira_loop_tree_node* %loop_node) #7, !dbg !6109
  br label %if.end17, !dbg !6109

if.else:                                          ; preds = %entry
  %1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !6110
  %cmp1 = icmp eq %struct.ira_loop_tree_node* %1, %loop_node, !dbg !6111
  br i1 %cmp1, label %if.end17, label %if.then2, !dbg !6112

if.then2:                                         ; preds = %if.else
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6113
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !6113
  %3 = bitcast %struct.edge_def** %e to i8*, !dbg !6114
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6114
  %4 = bitcast %struct.VEC_edge_heap** %edges to i8*, !dbg !6115
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6115
  %5 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6116
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6116
  %loop = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 1, !dbg !6116
  %6 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !6116
  %header = getelementptr inbounds %struct.loop, %struct.loop* %6, i64 0, i32 2, !dbg !6116
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !6116
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 0, !dbg !6116
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6116
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6116
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !6116
  store i32 %9, i32* %8, align 8, !dbg !6116
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6116
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !6116
  store %struct.VEC_edge_gc** %11, %struct.VEC_edge_gc*** %10, align 8, !dbg !6116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !6116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8, !dbg !6116
  %12 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6118
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6118
  br label %for.cond, !dbg !6116

for.cond:                                         ; preds = %for.inc, %if.then2
  %14 = load i32, i32* %12, align 8, !dbg !6120
  %15 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !6120
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6103, metadata !DIExpression(DW_OP_deref)), !dbg !6121
  %call3 = call fastcc zeroext i8 @ei_cond(i32 %14, %struct.VEC_edge_gc** %15, %struct.edge_def** nonnull %e) #7, !dbg !6120
  %tobool = icmp eq i8 %call3, 0, !dbg !6116
  br i1 %tobool, label %for.end, label %for.body, !dbg !6116

for.body:                                         ; preds = %for.cond
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6122
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !6103, metadata !DIExpression()), !dbg !6121
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 0, !dbg !6124
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6124
  %18 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !6125
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %18, i64 0, i32 3, !dbg !6126
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !6126
  %cmp5 = icmp eq %struct.basic_block_def* %17, %19, !dbg !6127
  br i1 %cmp5, label %for.inc, label %if.then6, !dbg !6128

if.then6:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !6103, metadata !DIExpression()), !dbg !6121
  call fastcc void @create_loop_allocnos(%struct.edge_def* %16) #7, !dbg !6129
  br label %for.inc, !dbg !6129

for.inc:                                          ; preds = %for.body, %if.then6
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6102, metadata !DIExpression(DW_OP_deref)), !dbg !6121
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6120
  br label %for.cond, !dbg !6120, !llvm.loop !6130

for.end:                                          ; preds = %for.cond
  %20 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !6132
  %call8 = call %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop* %20) #6, !dbg !6133
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call8, metadata !6104, metadata !DIExpression()), !dbg !6121
  store %struct.VEC_edge_heap* %call8, %struct.VEC_edge_heap** %edges, align 8, !dbg !6134
  call void @llvm.dbg.value(metadata i32 0, metadata !6098, metadata !DIExpression()), !dbg !6121
  br label %for.cond9, !dbg !6135

for.cond9:                                        ; preds = %for.body13, %for.end
  %21 = phi %struct.VEC_edge_heap* [ %call8, %for.end ], [ %.pre, %for.body13 ], !dbg !6137
  %i.0 = phi i32 [ 0, %for.end ], [ %inc, %for.body13 ], !dbg !6139
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6098, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %21, metadata !6104, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %21, metadata !6104, metadata !DIExpression()), !dbg !6121
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %21, i64 0, i32 0, !dbg !6137
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6103, metadata !DIExpression(DW_OP_deref)), !dbg !6121
  %call11 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %e) #7, !dbg !6137
  %tobool12 = icmp eq i32 %call11, 0, !dbg !6140
  br i1 %tobool12, label %for.end15, label %for.body13, !dbg !6140

for.body13:                                       ; preds = %for.cond9
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6141
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !6103, metadata !DIExpression()), !dbg !6121
  call fastcc void @create_loop_allocnos(%struct.edge_def* %22) #7, !dbg !6142
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6098, metadata !DIExpression()), !dbg !6121
  %.pre = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !6137
  br label %for.cond9, !dbg !6144, !llvm.loop !6145

for.end15:                                        ; preds = %for.cond9
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %edges, metadata !6104, metadata !DIExpression(DW_OP_deref)), !dbg !6121
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %edges) #7, !dbg !6147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !6148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !6148
  br label %if.end17, !dbg !6149

if.end17:                                         ; preds = %if.else, %for.end15, %if.then
  ret void, !dbg !6150
}

; Function Attrs: nounwind uwtable
define internal void @propagate_modified_regnos(%struct.ira_loop_tree_node* %loop_tree_node) #5 !dbg !6151 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_tree_node, metadata !6153, metadata !DIExpression()), !dbg !6154
  %0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !6155
  %cmp = icmp eq %struct.ira_loop_tree_node* %0, %loop_tree_node, !dbg !6157
  br i1 %cmp, label %return, label %if.end, !dbg !6158

if.end:                                           ; preds = %entry
  %parent = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 6, !dbg !6159
  %1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent, align 8, !dbg !6159
  %modified_regnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %1, i64 0, i32 14, !dbg !6160
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %modified_regnos, align 8, !dbg !6160
  %modified_regnos1 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 14, !dbg !6161
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %modified_regnos1, align 8, !dbg !6161
  %call = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %3) #6, !dbg !6162
  br label %return, !dbg !6163

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !6163
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_bb_allocnos(%struct.ira_loop_tree_node* %bb_node) unnamed_addr #5 !dbg !6164 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %bb_node, metadata !6166, metadata !DIExpression()), !dbg !6178
  %0 = bitcast i32* %i to i8*, !dbg !6179
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6179
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6180
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6180
  %bb1 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %bb_node, i64 0, i32 0, !dbg !6181
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !6181
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !6167, metadata !DIExpression()), !dbg !6178
  store %struct.basic_block_def* %2, %struct.basic_block_def** @curr_bb, align 8, !dbg !6182
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !6183
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6183
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6183
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !6183
  br label %for.cond, !dbg !6183

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0.in = phi %struct.rtx_def** [ %end_, %entry ], [ %rt_rtx26, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6168, metadata !DIExpression()), !dbg !6178
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6186
  br i1 %tobool, label %for.end, label %land.rhs, !dbg !6186

land.rhs:                                         ; preds = %for.cond
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6186
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 0, !dbg !6186
  %5 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6186
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6186
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !6186
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6186
  %cmp = icmp eq %struct.rtx_def* %insn.0, %7, !dbg !6186
  br i1 %cmp, label %for.end, label %for.body, !dbg !6183

for.body:                                         ; preds = %land.rhs
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6188
  %bf.load = load i32, i32* %8, align 8, !dbg !6188
  %bf.clear = and i32 %bf.load, 65535, !dbg !6188
  %cmp4 = icmp eq i32 %bf.clear, 8, !dbg !6188
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false, !dbg !6188

lor.lhs.false:                                    ; preds = %for.body
  %cmp7 = icmp eq i32 %bf.clear, 7, !dbg !6188
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !6188

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i32 %bf.clear, 9, !dbg !6188
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false12, !dbg !6188

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %cmp15 = icmp eq i32 %bf.clear, 10, !dbg !6188
  br i1 %cmp15, label %land.lhs.true, label %for.inc, !dbg !6188

land.lhs.true:                                    ; preds = %lor.lhs.false12, %lor.lhs.false8, %lor.lhs.false, %for.body
  %cmp18 = icmp eq i32 %bf.clear, 7, !dbg !6188
  br i1 %cmp18, label %for.inc, label %if.then, !dbg !6190

if.then:                                          ; preds = %land.lhs.true
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6191
  %9 = getelementptr inbounds %union.u, %union.u* %u19, i64 1, i32 0, i32 0, i64 0, !dbg !6191
  %rt_rtx22 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !6191
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !6191
  tail call fastcc void @create_insn_allocnos(%struct.rtx_def* %10, i8 zeroext 0) #7, !dbg !6192
  br label %for.inc, !dbg !6192

for.inc:                                          ; preds = %lor.lhs.false12, %land.lhs.true, %if.then
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6186
  %rt_rtx26 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !6186
  br label %for.cond, !dbg !6186, !llvm.loop !6193

for.end:                                          ; preds = %land.rhs, %for.cond
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !6195
  %12 = load i32, i32* %index, align 8, !dbg !6195
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %12) #7, !dbg !6195
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 2, !dbg !6195
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6195
  call void @llvm.dbg.value(metadata i32* %i, metadata !6169, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6170, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %13, i32 53, i32* nonnull %i) #7, !dbg !6195
  br label %for.cond27, !dbg !6195

for.cond27:                                       ; preds = %for.inc36, %for.end
  call void @llvm.dbg.value(metadata i32* %i, metadata !6169, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6170, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  %call28 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6197
  %tobool29 = icmp eq i8 %call28, 0, !dbg !6195
  br i1 %tobool29, label %for.end37, label %for.body30, !dbg !6195

for.body30:                                       ; preds = %for.cond27
  %14 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_curr_regno_allocno_map, align 8, !dbg !6199
  %15 = load i32, i32* %i, align 4, !dbg !6201
  call void @llvm.dbg.value(metadata i32 %15, metadata !6169, metadata !DIExpression()), !dbg !6178
  %idxprom = zext i32 %15 to i64, !dbg !6199
  %arrayidx31 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %14, i64 %idxprom, !dbg !6199
  %16 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx31, align 8, !dbg !6199
  %cmp32 = icmp eq %struct.ira_allocno* %16, null, !dbg !6202
  br i1 %cmp32, label %if.then33, label %for.inc36, !dbg !6203

if.then33:                                        ; preds = %for.body30
  call void @llvm.dbg.value(metadata i32 %15, metadata !6169, metadata !DIExpression()), !dbg !6178
  %17 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !6204
  %call34 = call %struct.ira_allocno* @ira_create_allocno(i32 %15, i8 zeroext 0, %struct.ira_loop_tree_node* %17) #7, !dbg !6205
  br label %for.inc36, !dbg !6205

for.inc36:                                        ; preds = %for.body30, %if.then33
  call void @llvm.dbg.value(metadata i32* %i, metadata !6169, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6170, metadata !DIExpression(DW_OP_deref)), !dbg !6178
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6197
  br label %for.cond27, !dbg !6197, !llvm.loop !6206

for.end37:                                        ; preds = %for.cond27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6208
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6208
  ret void, !dbg !6208
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_loop_allocnos(%struct.edge_def* %e) unnamed_addr #5 !dbg !6209 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6213, metadata !DIExpression()), !dbg !6219
  %0 = bitcast i32* %i to i8*, !dbg !6220
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6220
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6221
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6221
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !6222
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6222
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 9, !dbg !6222
  %3 = load i32, i32* %index, align 8, !dbg !6222
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %3) #7, !dbg !6222
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 2, !dbg !6222
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6222
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %4, metadata !6215, metadata !DIExpression()), !dbg !6219
  %5 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !6223
  %border_allocnos1 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 0, i32 13, !dbg !6224
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %border_allocnos1, align 8, !dbg !6224
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !6216, metadata !DIExpression()), !dbg !6219
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !6225
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6225
  %index2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 9, !dbg !6225
  %8 = load i32, i32* %index2, align 8, !dbg !6225
  %call3 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %8) #7, !dbg !6225
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call3, i64 0, i32 3, !dbg !6225
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6225
  call void @llvm.dbg.value(metadata i32* %i, metadata !6214, metadata !DIExpression(DW_OP_deref)), !dbg !6219
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6217, metadata !DIExpression(DW_OP_deref)), !dbg !6219
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %9, i32 53, i32* nonnull %i) #7, !dbg !6225
  br label %for.cond, !dbg !6225

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !6214, metadata !DIExpression(DW_OP_deref)), !dbg !6219
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6217, metadata !DIExpression(DW_OP_deref)), !dbg !6219
  %call4 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6227
  %tobool = icmp eq i8 %call4, 0, !dbg !6225
  br i1 %tobool, label %for.end, label %for.body, !dbg !6225

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !6229
  call void @llvm.dbg.value(metadata i32 %10, metadata !6214, metadata !DIExpression()), !dbg !6219
  %call5 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %4, i32 %10) #6, !dbg !6231
  %tobool6 = icmp eq i32 %call5, 0, !dbg !6231
  br i1 %tobool6, label %for.inc, label %if.then, !dbg !6232

if.then:                                          ; preds = %for.body
  %11 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_curr_regno_allocno_map, align 8, !dbg !6233
  %12 = load i32, i32* %i, align 4, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %12, metadata !6214, metadata !DIExpression()), !dbg !6219
  %idxprom = zext i32 %12 to i64, !dbg !6233
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %11, i64 %idxprom, !dbg !6233
  %13 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !6233
  %cmp = icmp eq %struct.ira_allocno* %13, null, !dbg !6237
  br i1 %cmp, label %if.then7, label %if.end16, !dbg !6238

if.then7:                                         ; preds = %if.then
  %14 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !6239
  %parent8 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %14, i64 0, i32 6, !dbg !6242
  %15 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent8, align 8, !dbg !6242
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %15, metadata !6218, metadata !DIExpression()), !dbg !6219
  %cmp9 = icmp eq %struct.ira_loop_tree_node* %15, null, !dbg !6243
  br i1 %cmp9, label %if.end, label %land.lhs.true, !dbg !6244

land.lhs.true:                                    ; preds = %if.then7
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %15, i64 0, i32 9, !dbg !6245
  %16 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6245
  call void @llvm.dbg.value(metadata i32 %12, metadata !6214, metadata !DIExpression()), !dbg !6219
  %arrayidx11 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %16, i64 %idxprom, !dbg !6246
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx11, align 8, !dbg !6246
  %cmp12 = icmp eq %struct.ira_allocno* %17, null, !dbg !6247
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !6248

if.then13:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 %12, metadata !6214, metadata !DIExpression()), !dbg !6219
  %call14 = call %struct.ira_allocno* @ira_create_allocno(i32 %12, i8 zeroext 0, %struct.ira_loop_tree_node* nonnull %15) #7, !dbg !6249
  %.pre = load i32, i32* %i, align 4, !dbg !6250
  %.pre1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !6251
  br label %if.end, !dbg !6249

if.end:                                           ; preds = %if.then7, %if.then13, %land.lhs.true
  %18 = phi %struct.ira_loop_tree_node* [ %14, %if.then7 ], [ %.pre1, %if.then13 ], [ %14, %land.lhs.true ], !dbg !6251
  %19 = phi i32 [ %12, %if.then7 ], [ %.pre, %if.then13 ], [ %12, %land.lhs.true ], !dbg !6250
  call void @llvm.dbg.value(metadata i32 %19, metadata !6214, metadata !DIExpression()), !dbg !6219
  %call15 = call %struct.ira_allocno* @ira_create_allocno(i32 %19, i8 zeroext 0, %struct.ira_loop_tree_node* %18) #7, !dbg !6252
  %.pre2 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_curr_regno_allocno_map, align 8, !dbg !6253
  %.pre3 = load i32, i32* %i, align 4, !dbg !6253
  %idxprom17.phi.trans.insert = zext i32 %.pre3 to i64, !dbg !6254
  %arrayidx18.phi.trans.insert = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %.pre2, i64 %idxprom17.phi.trans.insert, !dbg !6254
  %.pre4 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx18.phi.trans.insert, align 8, !dbg !6253
  br label %if.end16, !dbg !6255

if.end16:                                         ; preds = %if.end, %if.then
  %20 = phi %struct.ira_allocno* [ %.pre4, %if.end ], [ %13, %if.then ], !dbg !6253
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 0, !dbg !6253
  %21 = load i32, i32* %num, align 8, !dbg !6253
  %call19 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %21) #6, !dbg !6256
  br label %for.inc, !dbg !6257

for.inc:                                          ; preds = %for.body, %if.end16
  call void @llvm.dbg.value(metadata i32* %i, metadata !6214, metadata !DIExpression(DW_OP_deref)), !dbg !6219
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6217, metadata !DIExpression(DW_OP_deref)), !dbg !6219
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6227
  br label %for.cond, !dbg !6227, !llvm.loop !6258

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6260
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6260
  ret void, !dbg !6260
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_insn_allocnos(%struct.rtx_def* %x, i8 zeroext %output_p) unnamed_addr #5 !dbg !6261 {
entry:
  br label %tailrecurse, !dbg !6277

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %x.tr.be, %tailrecurse.backedge ]
  %output_p.tr = phi i8 [ %output_p, %entry ], [ %output_p.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !6265, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8 %output_p.tr, metadata !6266, metadata !DIExpression()), !dbg !6283
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !6284
  %bf.load = load i32, i32* %0, align 8, !dbg !6284
  %trunc = trunc i32 %bf.load to i16, !dbg !6285
  switch i16 %trunc, label %if.end67 [
    i16 37, label %if.then
    i16 23, label %if.then22
    i16 25, label %if.then30
    i16 43, label %if.then37
    i16 74, label %if.then54
    i16 76, label %if.then54
    i16 75, label %if.then54
    i16 77, label %if.then54
    i16 79, label %if.then54
    i16 78, label %if.then54
  ], !dbg !6285

if.then:                                          ; preds = %tailrecurse
  %x.tr.lcssa11 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  %output_p.tr.lcssa10 = phi i8 [ %output_p.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa11, metadata !6265, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8 %output_p.tr.lcssa10, metadata !6266, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa11, metadata !6265, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8 %output_p.tr.lcssa10, metadata !6266, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa11, metadata !6265, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8 %output_p.tr.lcssa10, metadata !6266, metadata !DIExpression()), !dbg !6283
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa11) #7, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %call, metadata !6271, metadata !DIExpression()), !dbg !6287
  %cmp1 = icmp sgt i32 %call, 52, !dbg !6288
  br i1 %cmp1, label %if.then2, label %cleanup.cont, !dbg !6289

if.then2:                                         ; preds = %if.then
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_curr_regno_allocno_map, align 8, !dbg !6290
  %idxprom = sext i32 %call to i64, !dbg !6290
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %idxprom, !dbg !6290
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !6290
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !6274, metadata !DIExpression()), !dbg !6292
  %cmp3 = icmp eq %struct.ira_allocno* %2, null, !dbg !6293
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6294

if.then4:                                         ; preds = %if.then2
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !6295
  %call5 = tail call %struct.ira_allocno* @ira_create_allocno(i32 %call, i8 zeroext 0, %struct.ira_loop_tree_node* %3) #7, !dbg !6296
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %call5, metadata !6274, metadata !DIExpression()), !dbg !6292
  br label %if.end, !dbg !6297

if.end:                                           ; preds = %if.then4, %if.then2
  %a.0 = phi %struct.ira_allocno* [ %call5, %if.then4 ], [ %2, %if.then2 ], !dbg !6298
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !6274, metadata !DIExpression()), !dbg !6292
  %nrefs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 7, !dbg !6299
  %4 = load i32, i32* %nrefs, align 8, !dbg !6300
  %inc = add nsw i32 %4, 1, !dbg !6300
  store i32 %inc, i32* %nrefs, align 8, !dbg !6300
  %5 = load i32, i32* @optimize_size, align 4, !dbg !6301
  %tobool = icmp eq i32 %5, 0, !dbg !6301
  br i1 %tobool, label %lor.lhs.false, label %cond.end14, !dbg !6301

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !6301
  %tobool6 = icmp eq i32 %6, 0, !dbg !6301
  br i1 %tobool6, label %cond.false, label %land.lhs.true, !dbg !6301

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6301
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !6301
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6301
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !6301
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6301
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 8, !dbg !6301
  %10 = load i64, i64* %count, align 8, !dbg !6301
  %tobool7 = icmp eq i64 %10, 0, !dbg !6301
  br i1 %tobool7, label %cond.end14, label %cond.false, !dbg !6301

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** @curr_bb, align 8, !dbg !6301
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 11, !dbg !6301
  %12 = load i32, i32* %frequency, align 8, !dbg !6301
  %.off = add i32 %12, 9, !dbg !6301
  %13 = icmp ugt i32 %.off, 18, !dbg !6301
  br i1 %13, label %cond.true9, label %cond.end14, !dbg !6301

cond.true9:                                       ; preds = %cond.false
  %div12 = sdiv i32 %12, 10, !dbg !6301
  br label %cond.end14, !dbg !6301

cond.end14:                                       ; preds = %land.lhs.true, %if.end, %cond.true9, %cond.false
  %cond15 = phi i32 [ 1000, %land.lhs.true ], [ 1000, %if.end ], [ %div12, %cond.true9 ], [ 1, %cond.false ], !dbg !6301
  %freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 8, !dbg !6302
  %14 = load i32, i32* %freq, align 4, !dbg !6303
  %add = add nsw i32 %14, %cond15, !dbg !6303
  store i32 %add, i32* %freq, align 4, !dbg !6303
  %tobool16 = icmp eq i8 %output_p.tr.lcssa10, 0, !dbg !6304
  br i1 %tobool16, label %cleanup.cont, label %if.then17, !dbg !6306

if.then17:                                        ; preds = %cond.end14
  %15 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_curr_loop_tree_node, align 8, !dbg !6307
  %modified_regnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %15, i64 0, i32 14, !dbg !6308
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %modified_regnos, align 8, !dbg !6308
  %call18 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 %call) #6, !dbg !6309
  br label %cleanup.cont, !dbg !6309

if.then22:                                        ; preds = %tailrecurse
  %arrayidx23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6310
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !6310
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6310
  tail call fastcc void @create_insn_allocnos(%struct.rtx_def* %17, i8 zeroext 1) #7, !dbg !6312
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6313
  br label %tailrecurse.backedge, !dbg !6314

if.then30:                                        ; preds = %tailrecurse
  %arrayidx33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6315
  br label %tailrecurse.backedge, !dbg !6317

if.then37:                                        ; preds = %tailrecurse
  %arrayidx40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6318
  br label %tailrecurse.backedge, !dbg !6320

if.then54:                                        ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %arrayidx57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6321
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !6321
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !6321
  tail call fastcc void @create_insn_allocnos(%struct.rtx_def* %19, i8 zeroext 1) #7, !dbg !6322
  br label %tailrecurse.backedge, !dbg !6277

tailrecurse.backedge:                             ; preds = %if.then54, %if.then37, %if.then30, %if.then22
  %x.tr.be.in.in = phi %union.rtunion_def* [ %arrayidx57, %if.then54 ], [ %arrayidx40, %if.then37 ], [ %arrayidx33, %if.then30 ], [ %18, %if.then22 ]
  %output_p.tr.be = phi i8 [ 0, %if.then54 ], [ 0, %if.then37 ], [ 1, %if.then30 ], [ 0, %if.then22 ]
  %x.tr.be.in = bitcast %union.rtunion_def* %x.tr.be.in.in to %struct.rtx_def**, !dbg !6323
  %x.tr.be = load %struct.rtx_def*, %struct.rtx_def** %x.tr.be.in, align 8, !dbg !6323
  br label %tailrecurse, !dbg !6283

if.end67:                                         ; preds = %tailrecurse
  %x.tr.lcssa = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  %output_p.tr.lcssa = phi i8 [ %output_p.tr, %tailrecurse ]
  %bf.load.lcssa = phi i32 [ %bf.load, %tailrecurse ], !dbg !6284
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6265, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8 %output_p.tr.lcssa, metadata !6266, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6265, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8 %output_p.tr.lcssa, metadata !6266, metadata !DIExpression()), !dbg !6283
  %bf.clear.le = and i32 %bf.load.lcssa, 65535, !dbg !6284
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6265, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8 %output_p.tr.lcssa, metadata !6266, metadata !DIExpression()), !dbg !6283
  %idxprom68 = zext i32 %bf.clear.le to i64, !dbg !6324
  %arrayidx69 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom68, !dbg !6324
  %20 = load i8*, i8** %arrayidx69, align 8, !dbg !6324
  call void @llvm.dbg.value(metadata i8* %20, metadata !6269, metadata !DIExpression()), !dbg !6283
  %arrayidx71 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom68, !dbg !6325
  %21 = load i8, i8* %arrayidx71, align 1, !dbg !6325
  call void @llvm.dbg.value(metadata i8 %21, metadata !6267, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6283
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr.lcssa, i64 0, i32 1, !dbg !6327
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !6327
  %22 = zext i8 %21 to i64, !dbg !6334
  br label %for.cond, !dbg !6334

for.cond:                                         ; preds = %for.inc110, %if.end67
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc110 ], [ %22, %if.end67 ]
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, -1, !dbg !6335
  call void @llvm.dbg.value(metadata i32 undef, metadata !6267, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6283
  %cmp72 = icmp sgt i64 %indvars.iv7, 0, !dbg !6336
  br i1 %cmp72, label %for.body, label %cleanup.cont.loopexit, !dbg !6337

for.body:                                         ; preds = %for.cond
  %arrayidx75 = getelementptr inbounds i8, i8* %20, i64 %indvars.iv.next8, !dbg !6338
  %23 = load i8, i8* %arrayidx75, align 1, !dbg !6338
  %cmp77 = icmp eq i8 %23, 101, !dbg !6339
  br i1 %cmp77, label %if.then79, label %if.else85, !dbg !6340

if.then79:                                        ; preds = %for.body
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 %indvars.iv.next8, !dbg !6341
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !6341
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !6341
  tail call fastcc void @create_insn_allocnos(%struct.rtx_def* %24, i8 zeroext %output_p.tr.lcssa) #7, !dbg !6342
  br label %for.inc110, !dbg !6342

if.else85:                                        ; preds = %for.body
  %cmp89 = icmp eq i8 %23, 69, !dbg !6343
  br i1 %cmp89, label %for.cond92.preheader, label %for.inc110, !dbg !6344

for.cond92.preheader:                             ; preds = %if.else85
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 %indvars.iv.next8, !dbg !6327
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtvec_def**, !dbg !6327
  br label %for.cond92, !dbg !6345

for.cond92:                                       ; preds = %for.cond92.preheader, %for.body99
  %indvars.iv = phi i64 [ 0, %for.cond92.preheader ], [ %indvars.iv.next, %for.body99 ], !dbg !6346
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6268, metadata !DIExpression()), !dbg !6283
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6347
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i64 0, i32 0, !dbg !6347
  %26 = load i32, i32* %num_elem, align 8, !dbg !6347
  %27 = sext i32 %26 to i64, !dbg !6348
  %cmp97 = icmp slt i64 %indvars.iv, %27, !dbg !6348
  br i1 %cmp97, label %for.body99, label %for.inc110.loopexit, !dbg !6345

for.body99:                                       ; preds = %for.cond92
  %arrayidx106 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i64 0, i32 1, i64 %indvars.iv, !dbg !6349
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx106, align 8, !dbg !6349
  tail call fastcc void @create_insn_allocnos(%struct.rtx_def* %28, i8 zeroext %output_p.tr.lcssa) #7, !dbg !6350
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6351
  call void @llvm.dbg.value(metadata i32 undef, metadata !6268, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6283
  br label %for.cond92, !dbg !6352, !llvm.loop !6353

for.inc110.loopexit:                              ; preds = %for.cond92
  br label %for.inc110, !dbg !6355

for.inc110:                                       ; preds = %for.inc110.loopexit, %if.then79, %if.else85
  call void @llvm.dbg.value(metadata i32 undef, metadata !6267, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6283
  br label %for.cond, !dbg !6355, !llvm.loop !6356

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !6358

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %cond.end14, %if.then17, %if.then
  ret void, !dbg !6358
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !6359 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6367, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !6368, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 53, metadata !6369, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6370, metadata !DIExpression()), !dbg !6371
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !6372
  %1 = load i64, i64* %0, align 8, !dbg !6372
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6373
  store i64 %1, i64* %2, align 8, !dbg !6373
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !6374
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !6375
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6376
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !6379
  br label %while.body, !dbg !6379

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !6380
  br i1 %tobool, label %if.then, label %if.end, !dbg !6381

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !6382
  br label %while.end, !dbg !6384

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !6385

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !6379, !llvm.loop !6386

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !6388

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !6388
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !6390
  %7 = load i32, i32* %indx9, align 8, !dbg !6390
  %cmp11 = icmp eq i32 %7, 0, !dbg !6391
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !6392

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !6393
  %8 = load i32, i32* %indx14, align 8, !dbg !6393
  %mul = shl i32 %8, 7, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %mul, metadata !6369, metadata !DIExpression()), !dbg !6371
  br label %if.end15, !dbg !6395

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 53, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !6369, metadata !DIExpression()), !dbg !6371
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6396
  store i32 0, i32* %word_no, align 8, !dbg !6397
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !6398
  %9 = load i64, i64* %arrayidx, align 8, !dbg !6398
  %rem20 = and i32 %start_bit.addr.0, 53, !dbg !6399
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6400
  %sh_prom = zext i32 %rem20 to i64, !dbg !6401
  %shr = lshr i64 %9, %sh_prom, !dbg !6401
  store i64 %shr, i64* %bits21, align 8, !dbg !6401
  %tobool23 = icmp eq i64 %shr, 0, !dbg !6402
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !6402
  %add = add nuw nsw i32 %start_bit.addr.0, %lnot.ext, !dbg !6403
  call void @llvm.dbg.value(metadata i32 %add, metadata !6369, metadata !DIExpression()), !dbg !6371
  store i32 %add, i32* %bit_no, align 4, !dbg !6404
  ret void, !dbg !6405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !6406 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !6410, metadata !DIExpression()), !dbg !6411
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6412
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !6412
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6412
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !6414
  %2 = load i32, i32* %block_info_size, align 8, !dbg !6414
  %cmp = icmp ugt i32 %2, %index, !dbg !6415
  br i1 %cmp, label %if.then, label %return, !dbg !6416

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !6417
  %3 = load i8**, i8*** %block_info, align 8, !dbg !6417
  %idxprom = zext i32 %index to i64, !dbg !6418
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !6418
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !6418
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !6418
  br label %return, !dbg !6419

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !6420
  ret %struct.df_lr_bb_info* %retval.0, !dbg !6421
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6422 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6426, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6427, metadata !DIExpression()), !dbg !6431
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6432
  %0 = load i64, i64* %bits, align 8, !dbg !6432
  %tobool = icmp eq i64 %0, 0, !dbg !6433
  br i1 %tobool, label %if.end, label %next_bit, !dbg !6434

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !6435
  br label %next_bit, !dbg !6438

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !6428), !dbg !6439
  br label %while.cond, !dbg !6438

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !6440
  %and = and i64 %2, 1, !dbg !6441
  %tobool2 = icmp eq i64 %and, 0, !dbg !6442
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !6438

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !6443
  store i64 %shr, i64* %bits, align 8, !dbg !6443
  %3 = load i32, i32* %bit_no, align 4, !dbg !6445
  %add = add i32 %3, 1, !dbg !6445
  store i32 %add, i32* %bit_no, align 4, !dbg !6445
  %.pre = load i64, i64* %bits, align 8, !dbg !6440
  br label %while.cond, !dbg !6438, !llvm.loop !6446

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !6448
  %sub = add i32 %4, 63, !dbg !6449
  %div = and i32 %sub, -64, !dbg !6450
  store i32 %div, i32* %bit_no, align 4, !dbg !6451
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6452
  %5 = load i32, i32* %word_no, align 8, !dbg !6453
  %inc = add i32 %5, 1, !dbg !6453
  store i32 %inc, i32* %word_no, align 8, !dbg !6453
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6454
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6454
  br label %while.body6, !dbg !6455

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !6456

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !6457
  %cmp = icmp eq i32 %8, 2, !dbg !6458
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !6454
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !6456

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !6435
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !6435
  %10 = load i64, i64* %arrayidx, align 8, !dbg !6435
  store i64 %10, i64* %bits, align 8, !dbg !6459
  %tobool14 = icmp eq i64 %10, 0, !dbg !6460
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !6462

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !6463
  %add17 = add i32 %11, 64, !dbg !6463
  store i32 %add17, i32* %bit_no, align 4, !dbg !6463
  %12 = load i32, i32* %word_no, align 8, !dbg !6464
  %inc19 = add i32 %12, 1, !dbg !6464
  store i32 %inc19, i32* %word_no, align 8, !dbg !6464
  br label %while.cond7, !dbg !6456, !llvm.loop !6465

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !6454
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !6467
  %14 = load i64, i64* %13, align 8, !dbg !6467
  store i64 %14, i64* %6, align 8, !dbg !6468
  %tobool24 = icmp eq i64 %14, 0, !dbg !6469
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !6471

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !6471
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !6472
  %16 = load i32, i32* %indx, align 8, !dbg !6472
  %mul28 = shl i32 %16, 7, !dbg !6473
  store i32 %mul28, i32* %bit_no, align 4, !dbg !6474
  store i32 0, i32* %word_no, align 8, !dbg !6475
  br label %while.body6, !dbg !6455, !llvm.loop !6476

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !6478

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !6478

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !6431
  ret i8 %retval.0, !dbg !6478
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6479 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6483, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6484, metadata !DIExpression()), !dbg !6485
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6486
  %0 = load i64, i64* %bits, align 8, !dbg !6487
  %shr = lshr i64 %0, 1, !dbg !6487
  store i64 %shr, i64* %bits, align 8, !dbg !6487
  %1 = load i32, i32* %bit_no, align 4, !dbg !6488
  %add = add i32 %1, 1, !dbg !6488
  store i32 %add, i32* %bit_no, align 4, !dbg !6488
  ret void, !dbg !6489
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_all_loops_for_removal() unnamed_addr #5 !dbg !6490 {
entry:
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !6494
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6494
  call void @llvm.dbg.value(metadata i32 0, metadata !6492, metadata !DIExpression()), !dbg !6495
  br label %for.cond, !dbg !6496

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !6498
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6492, metadata !DIExpression()), !dbg !6495
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !6499
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !6499
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !6493, metadata !DIExpression(DW_OP_deref)), !dbg !6495
  %2 = trunc i64 %indvars.iv to i32, !dbg !6499
  %call = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base, i32 %2, %struct.loop** nonnull %loop) #7, !dbg !6499
  %tobool1 = icmp eq i32 %call, 0, !dbg !6501
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6501

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6502
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 %indvars.iv, i32 9, !dbg !6504
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6504
  %cmp = icmp eq %struct.ira_allocno** %4, null, !dbg !6505
  br i1 %cmp, label %for.inc, label %if.then, !dbg !6506

if.then:                                          ; preds = %for.body
  %parent = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 %indvars.iv, i32 6, !dbg !6507
  %5 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent, align 8, !dbg !6507
  %cmp4 = icmp eq %struct.ira_loop_tree_node* %5, null, !dbg !6510
  %to_remove_p = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 %indvars.iv, i32 8, !dbg !6511
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !6512

if.then5:                                         ; preds = %if.then
  store i8 0, i8* %to_remove_p, align 4, !dbg !6513
  br label %for.inc, !dbg !6515

if.end:                                           ; preds = %if.then
  store i8 1, i8* %to_remove_p, align 4, !dbg !6516
  %6 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6517
  %cmp11 = icmp sgt i32 %6, 1, !dbg !6519
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6520
  %cmp12 = icmp ne %struct._IO_FILE* %7, null, !dbg !6521
  %or.cond = and i1 %cmp11, %cmp12, !dbg !6522
  br i1 %or.cond, label %if.then13, label %for.inc, !dbg !6522

if.then13:                                        ; preds = %if.end
  %8 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6523
  %loop16 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %8, i64 %indvars.iv, i32 1, !dbg !6524
  %9 = load %struct.loop*, %struct.loop** %loop16, align 8, !dbg !6524
  %num = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 0, !dbg !6525
  %10 = load i32, i32* %num, align 8, !dbg !6525
  %header = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 2, !dbg !6526
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !6526
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 9, !dbg !6527
  %12 = load i32, i32* %index, align 8, !dbg !6527
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 11, !dbg !6528
  %13 = load i32, i32* %frequency, align 8, !dbg !6528
  %call27 = call fastcc i32 @loop_depth(%struct.loop* %9) #7, !dbg !6529
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.27, i64 0, i64 0), i32 %10, i32 %12, i32 %13, i32 %call27) #6, !dbg !6530
  br label %for.inc, !dbg !6530

for.inc:                                          ; preds = %for.body, %if.then13, %if.end, %if.then5
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !6531
  call void @llvm.dbg.value(metadata i32 undef, metadata !6492, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6495
  br label %for.cond, !dbg !6532, !llvm.loop !6533

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6535
  ret void, !dbg !6535
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_loops_for_removal() unnamed_addr #5 !dbg !6536 {
entry:
  %loop = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop** %loop to i8*, !dbg !6542
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6542
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !6543
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !6543
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %base) #7, !dbg !6543
  %conv = zext i32 %call to i64, !dbg !6543
  %mul = shl nuw nsw i64 %conv, 3, !dbg !6544
  %call1 = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !6545
  %2 = bitcast i8* %call1 to %struct.ira_loop_tree_node**, !dbg !6546
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node** %2, metadata !6540, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 0, metadata !6538, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 0, metadata !6539, metadata !DIExpression()), !dbg !6547
  br label %for.cond, !dbg !6548

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ 0, %entry ], !dbg !6550
  %n.0 = phi i32 [ %n.2, %for.inc ], [ 0, %entry ], !dbg !6550
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !6538, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !6539, metadata !DIExpression()), !dbg !6547
  %3 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** getelementptr inbounds (%struct.loops, %struct.loops* @ira_loops, i64 0, i32 1), align 8, !dbg !6551
  %base4 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %3, i64 0, i32 0, !dbg !6551
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !6541, metadata !DIExpression(DW_OP_deref)), !dbg !6547
  %4 = trunc i64 %indvars.iv1 to i32, !dbg !6551
  %call8 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base4, i32 %4, %struct.loop** nonnull %loop) #7, !dbg !6551
  %tobool9 = icmp eq i32 %call8, 0, !dbg !6553
  br i1 %tobool9, label %for.end, label %for.body, !dbg !6553

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6554
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 %indvars.iv1, i32 9, !dbg !6556
  %6 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6556
  %cmp = icmp eq %struct.ira_allocno** %6, null, !dbg !6557
  br i1 %cmp, label %for.inc, label %if.then, !dbg !6558

if.then:                                          ; preds = %for.body
  %parent = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 %indvars.iv1, i32 6, !dbg !6559
  %7 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent, align 8, !dbg !6559
  %cmp13 = icmp eq %struct.ira_loop_tree_node* %7, null, !dbg !6562
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !6563

if.then15:                                        ; preds = %if.then
  %to_remove_p = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 %indvars.iv1, i32 8, !dbg !6564
  store i8 0, i8* %to_remove_p, align 4, !dbg !6566
  br label %for.inc, !dbg !6567

if.end:                                           ; preds = %if.then
  %arrayidx17 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 %indvars.iv1, !dbg !6568
  %inc = add nsw i32 %n.0, 1, !dbg !6569
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6539, metadata !DIExpression()), !dbg !6547
  %idxprom20 = sext i32 %n.0 to i64, !dbg !6570
  %arrayidx21 = getelementptr inbounds %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %2, i64 %idxprom20, !dbg !6570
  store %struct.ira_loop_tree_node* %arrayidx17, %struct.ira_loop_tree_node** %arrayidx21, align 8, !dbg !6571
  %8 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6572
  %parent24 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %8, i64 %indvars.iv1, i32 6, !dbg !6573
  %9 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent24, align 8, !dbg !6573
  %call25 = call fastcc zeroext i8 @low_pressure_loop_node_p(%struct.ira_loop_tree_node* %9) #7, !dbg !6574
  %tobool27 = icmp eq i8 %call25, 0, !dbg !6574
  br i1 %tobool27, label %land.end, label %land.rhs, !dbg !6575

land.rhs:                                         ; preds = %if.end
  %10 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6576
  %arrayidx29 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %10, i64 %indvars.iv1, !dbg !6576
  %call30 = call fastcc zeroext i8 @low_pressure_loop_node_p(%struct.ira_loop_tree_node* %arrayidx29) #7, !dbg !6577
  %tobool32 = icmp ne i8 %call30, 0, !dbg !6575
  br label %land.end

land.end:                                         ; preds = %if.end, %land.rhs
  %11 = phi i1 [ false, %if.end ], [ %tobool32, %land.rhs ], !dbg !6568
  %conv33 = zext i1 %11 to i8, !dbg !6578
  %12 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_nodes, align 8, !dbg !6579
  %to_remove_p36 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %12, i64 %indvars.iv1, i32 8, !dbg !6580
  store i8 %conv33, i8* %to_remove_p36, align 4, !dbg !6581
  br label %for.inc, !dbg !6582

for.inc:                                          ; preds = %for.body, %land.end, %if.then15
  %n.2 = phi i32 [ %n.0, %if.then15 ], [ %inc, %land.end ], [ %n.0, %for.body ], !dbg !6583
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !6539, metadata !DIExpression()), !dbg !6547
  %indvars.iv.next2 = add nuw i64 %indvars.iv1, 1, !dbg !6584
  call void @llvm.dbg.value(metadata i32 undef, metadata !6538, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6547
  br label %for.cond, !dbg !6585, !llvm.loop !6586

for.end:                                          ; preds = %for.cond
  %n.0.lcssa = phi i32 [ %n.0, %for.cond ], !dbg !6550
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6539, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6539, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6539, metadata !DIExpression()), !dbg !6547
  %conv39 = sext i32 %n.0.lcssa to i64, !dbg !6588
  call void @spec_qsort(i8* %call1, i64 %conv39, i64 8, i32 (i8*, i8*)* nonnull @loop_compare_func) #6, !dbg !6589
  call void @llvm.dbg.value(metadata i32 0, metadata !6538, metadata !DIExpression()), !dbg !6547
  br label %for.cond40, !dbg !6590

for.cond40:                                       ; preds = %for.inc84, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc84 ], [ 0, %for.end ], !dbg !6592
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6538, metadata !DIExpression()), !dbg !6547
  %13 = trunc i64 %indvars.iv to i32, !dbg !6593
  %sub = sub nsw i32 %n.0.lcssa, %13, !dbg !6593
  %14 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !6595
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %14, i64 105, i32 1, !dbg !6595
  %15 = load i32, i32* %value, align 8, !dbg !6595
  %cmp42 = icmp slt i32 %sub, %15, !dbg !6596
  br i1 %cmp42, label %for.end86, label %for.body44, !dbg !6597

for.body44:                                       ; preds = %for.cond40
  %arrayidx46 = getelementptr inbounds %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %2, i64 %indvars.iv, !dbg !6598
  %16 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %arrayidx46, align 8, !dbg !6598
  %to_remove_p47 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %16, i64 0, i32 8, !dbg !6600
  store i8 1, i8* %to_remove_p47, align 4, !dbg !6601
  %17 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6602
  %cmp48 = icmp sgt i32 %17, 1, !dbg !6604
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6605
  %cmp50 = icmp ne %struct._IO_FILE* %18, null, !dbg !6606
  %or.cond = and i1 %cmp48, %cmp50, !dbg !6607
  br i1 %or.cond, label %if.then52, label %for.inc84, !dbg !6607

if.then52:                                        ; preds = %for.body44
  %19 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %arrayidx46, align 8, !dbg !6608
  %loop55 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %19, i64 0, i32 1, !dbg !6609
  %20 = load %struct.loop*, %struct.loop** %loop55, align 8, !dbg !6609
  %num = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 0, !dbg !6610
  %21 = load i32, i32* %num, align 8, !dbg !6610
  %header = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 2, !dbg !6611
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !6611
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 9, !dbg !6612
  %23 = load i32, i32* %index, align 8, !dbg !6612
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i64 0, i32 11, !dbg !6613
  %24 = load i32, i32* %frequency, align 8, !dbg !6613
  %call66 = call fastcc i32 @loop_depth(%struct.loop* %20) #7, !dbg !6614
  %25 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %arrayidx46, align 8, !dbg !6615
  %parent69 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %25, i64 0, i32 6, !dbg !6616
  %26 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent69, align 8, !dbg !6616
  %call70 = call fastcc zeroext i8 @low_pressure_loop_node_p(%struct.ira_loop_tree_node* %26) #7, !dbg !6617
  %tobool72 = icmp eq i8 %call70, 0, !dbg !6617
  br i1 %tobool72, label %land.end79, label %land.rhs73, !dbg !6618

land.rhs73:                                       ; preds = %if.then52
  %27 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %arrayidx46, align 8, !dbg !6619
  %call76 = call fastcc zeroext i8 @low_pressure_loop_node_p(%struct.ira_loop_tree_node* %27) #7, !dbg !6620
  %tobool78 = icmp ne i8 %call76, 0, !dbg !6618
  br label %land.end79

land.end79:                                       ; preds = %if.then52, %land.rhs73
  %28 = phi i1 [ false, %if.then52 ], [ %tobool78, %land.rhs73 ], !dbg !6621
  %cond81 = select i1 %28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), !dbg !6617
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.28, i64 0, i64 0), i32 %21, i32 %23, i32 %24, i32 %call66, i8* %cond81) #6, !dbg !6622
  br label %for.inc84, !dbg !6622

for.inc84:                                        ; preds = %for.body44, %land.end79
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !6623
  call void @llvm.dbg.value(metadata i32 undef, metadata !6538, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6547
  br label %for.cond40, !dbg !6624, !llvm.loop !6625

for.end86:                                        ; preds = %for.cond40
  call void @ira_free(i8* %call1) #6, !dbg !6627
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6628
  ret void, !dbg !6628
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ira_loop_tree_node_t_heap* @VEC_ira_loop_tree_node_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6629 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6633, metadata !DIExpression()), !dbg !6634
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !6635
  %0 = bitcast i8* %call to %struct.VEC_ira_loop_tree_node_t_heap*, !dbg !6635
  ret %struct.VEC_ira_loop_tree_node_t_heap* %0, !dbg !6635
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_uneccesary_loop_nodes_from_loop_tree(%struct.ira_loop_tree_node* %node) unnamed_addr #5 !dbg !6636 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %node, metadata !6638, metadata !DIExpression()), !dbg !6642
  %to_remove_p = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %node, i64 0, i32 8, !dbg !6643
  %0 = load i8, i8* %to_remove_p, align 4, !dbg !6643
  call void @llvm.dbg.value(metadata i8 %0, metadata !6640, metadata !DIExpression()), !dbg !6642
  %tobool = icmp eq i8 %0, 0, !dbg !6644
  br i1 %tobool, label %if.then, label %if.end, !dbg !6646

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.ira_loop_tree_node** @VEC_ira_loop_tree_node_t_heap_safe_push(%struct.VEC_ira_loop_tree_node_t_heap** nonnull @children_vec, %struct.ira_loop_tree_node* %node) #7, !dbg !6647
  br label %if.end, !dbg !6647

if.end:                                           ; preds = %entry, %if.then
  %1 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** @children_vec, align 8, !dbg !6648
  %base = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_heap, %struct.VEC_ira_loop_tree_node_t_heap* %1, i64 0, i32 0, !dbg !6648
  %call2 = tail call fastcc i32 @VEC_ira_loop_tree_node_t_base_length(%struct.VEC_ira_loop_tree_node_t_base* %base) #7, !dbg !6648
  call void @llvm.dbg.value(metadata i32 %call2, metadata !6639, metadata !DIExpression()), !dbg !6642
  %children = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %node, i64 0, i32 5, !dbg !6649
  br label %for.cond, !dbg !6651

for.cond:                                         ; preds = %for.inc, %if.end
  %subnode.0.in = phi %struct.ira_loop_tree_node** [ %children, %if.end ], [ %next, %for.inc ]
  %subnode.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subnode.0.in, align 8, !dbg !6652
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subnode.0, metadata !6641, metadata !DIExpression()), !dbg !6642
  %cmp = icmp eq %struct.ira_loop_tree_node* %subnode.0, null, !dbg !6653
  br i1 %cmp, label %for.end, label %for.body, !dbg !6655

for.body:                                         ; preds = %for.cond
  %bb = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subnode.0, i64 0, i32 0, !dbg !6656
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6656
  %cmp3 = icmp eq %struct.basic_block_def* %2, null, !dbg !6658
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !6659

if.then4:                                         ; preds = %for.body
  tail call fastcc void @remove_uneccesary_loop_nodes_from_loop_tree(%struct.ira_loop_tree_node* nonnull %subnode.0) #7, !dbg !6660
  br label %for.inc, !dbg !6660

if.else:                                          ; preds = %for.body
  %call5 = tail call fastcc %struct.ira_loop_tree_node** @VEC_ira_loop_tree_node_t_heap_safe_push(%struct.VEC_ira_loop_tree_node_t_heap** nonnull @children_vec, %struct.ira_loop_tree_node* nonnull %subnode.0) #7, !dbg !6661
  br label %for.inc

for.inc:                                          ; preds = %if.then4, %if.else
  %next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subnode.0, i64 0, i32 3, !dbg !6662
  br label %for.cond, !dbg !6663, !llvm.loop !6664

for.end:                                          ; preds = %for.cond
  %subloops = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %node, i64 0, i32 4, !dbg !6666
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %subloops, align 8, !dbg !6667
  store %struct.ira_loop_tree_node* null, %struct.ira_loop_tree_node** %children, align 8, !dbg !6668
  br i1 %tobool, label %while.cond.preheader, label %if.then9, !dbg !6669

while.cond.preheader:                             ; preds = %for.end
  %3 = bitcast %struct.ira_loop_tree_node** %children to i64*, !dbg !6670
  %4 = bitcast %struct.ira_loop_tree_node** %subloops to i64*, !dbg !6672
  br label %while.cond, !dbg !6675

if.then9:                                         ; preds = %for.end
  %call10 = tail call fastcc %struct.ira_loop_tree_node** @VEC_ira_loop_tree_node_t_heap_safe_push(%struct.VEC_ira_loop_tree_node_t_heap** nonnull @removed_loop_vec, %struct.ira_loop_tree_node* %node) #7, !dbg !6676
  br label %cleanup.cont, !dbg !6679

while.cond:                                       ; preds = %while.cond.preheader, %if.end35
  %5 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** @children_vec, align 8, !dbg !6680
  %base14 = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_heap, %struct.VEC_ira_loop_tree_node_t_heap* %5, i64 0, i32 0, !dbg !6680
  %call18 = tail call fastcc i32 @VEC_ira_loop_tree_node_t_base_length(%struct.VEC_ira_loop_tree_node_t_base* %base14) #7, !dbg !6680
  %cmp19 = icmp ugt i32 %call18, %call2, !dbg !6681
  br i1 %cmp19, label %while.body, label %cleanup.cont.loopexit, !dbg !6675

while.body:                                       ; preds = %while.cond
  %6 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** @children_vec, align 8, !dbg !6682
  %base22 = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_heap, %struct.VEC_ira_loop_tree_node_t_heap* %6, i64 0, i32 0, !dbg !6682
  %call26 = tail call fastcc %struct.ira_loop_tree_node* @VEC_ira_loop_tree_node_t_base_pop(%struct.VEC_ira_loop_tree_node_t_base* %base22) #7, !dbg !6682
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %call26, metadata !6641, metadata !DIExpression()), !dbg !6642
  %parent = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %call26, i64 0, i32 6, !dbg !6683
  store %struct.ira_loop_tree_node* %node, %struct.ira_loop_tree_node** %parent, align 8, !dbg !6684
  %7 = load i64, i64* %3, align 8, !dbg !6685
  %next28 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %call26, i64 0, i32 3, !dbg !6686
  %8 = bitcast %struct.ira_loop_tree_node** %next28 to i64*, !dbg !6687
  store i64 %7, i64* %8, align 8, !dbg !6687
  store %struct.ira_loop_tree_node* %call26, %struct.ira_loop_tree_node** %children, align 8, !dbg !6688
  %bb30 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %call26, i64 0, i32 0, !dbg !6689
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb30, align 8, !dbg !6689
  %cmp31 = icmp eq %struct.basic_block_def* %9, null, !dbg !6690
  br i1 %cmp31, label %if.then32, label %if.end35, !dbg !6691

if.then32:                                        ; preds = %while.body
  %10 = load i64, i64* %4, align 8, !dbg !6692
  %subloop_next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %call26, i64 0, i32 2, !dbg !6693
  %11 = bitcast %struct.ira_loop_tree_node** %subloop_next to i64*, !dbg !6694
  store i64 %10, i64* %11, align 8, !dbg !6694
  store %struct.ira_loop_tree_node* %call26, %struct.ira_loop_tree_node** %subloops, align 8, !dbg !6695
  br label %if.end35, !dbg !6696

if.end35:                                         ; preds = %if.then32, %while.body
  br label %while.cond, !dbg !6675, !llvm.loop !6697

cleanup.cont.loopexit:                            ; preds = %while.cond
  br label %cleanup.cont, !dbg !6699

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then9
  ret void, !dbg !6699
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ira_loop_tree_node_t_heap_free(%struct.VEC_ira_loop_tree_node_t_heap** %vec_) unnamed_addr #0 !dbg !6700 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_loop_tree_node_t_heap** %vec_, metadata !6705, metadata !DIExpression()), !dbg !6706
  %0 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** %vec_, align 8, !dbg !6707
  %tobool = icmp eq %struct.VEC_ira_loop_tree_node_t_heap* %0, null, !dbg !6707
  br i1 %tobool, label %if.end, label %if.then, !dbg !6709

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ira_loop_tree_node_t_heap* %0 to i8*, !dbg !6709
  tail call void @free(i8* nonnull %1) #6, !dbg !6707
  br label %if.end, !dbg !6707

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ira_loop_tree_node_t_heap* null, %struct.VEC_ira_loop_tree_node_t_heap** %vec_, align 8, !dbg !6709
  ret void, !dbg !6709
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_low_level_allocnos() unnamed_addr #5 !dbg !6710 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !6721
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6721
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !6722
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6722
  call void @llvm.dbg.value(metadata i8 0, metadata !6713, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !6724
  br label %for.cond.outer, !dbg !6724

for.cond.outer:                                   ; preds = %if.end22, %entry
  %merged_p.0.ph = phi i8 [ 1, %if.end22 ], [ 0, %entry ]
  br label %for.cond, !dbg !6724

for.cond:                                         ; preds = %for.cond.backedge, %for.cond.outer
  call void @llvm.dbg.value(metadata i8 %merged_p.0.ph, metadata !6713, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !6715, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !6726
  %tobool = icmp eq i8 %call, 0, !dbg !6724
  br i1 %tobool, label %for.end, label %for.body, !dbg !6724

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !6728
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !6715, metadata !DIExpression()), !dbg !6723
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 6, !dbg !6728
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !6728
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %3, metadata !6717, metadata !DIExpression()), !dbg !6723
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !6730
  %cmp = icmp eq %struct.ira_loop_tree_node* %3, %4, !dbg !6732
  %5 = ptrtoint %struct.ira_loop_tree_node* %4 to i64, !dbg !6733
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6733

lor.lhs.false:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !6715, metadata !DIExpression()), !dbg !6723
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 17, !dbg !6734
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !6734
  %cmp1 = icmp eq %struct.ira_allocno* %6, null, !dbg !6735
  br i1 %cmp1, label %if.end, label %if.then, !dbg !6736

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.cond.backedge, !dbg !6737

for.cond.backedge:                                ; preds = %if.then, %if.then4
  br label %for.cond, !dbg !6723, !llvm.loop !6738

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !6715, metadata !DIExpression()), !dbg !6723
  %regno2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 1, !dbg !6740
  %7 = load i32, i32* %regno2, align 4, !dbg !6740
  call void @llvm.dbg.value(metadata i32 %7, metadata !6712, metadata !DIExpression()), !dbg !6723
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 0, i32 9, !dbg !6741
  %8 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6741
  %idxprom = sext i32 %7 to i64, !dbg !6743
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %8, i64 %idxprom, !dbg !6743
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !6743
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %9, metadata !6716, metadata !DIExpression()), !dbg !6723
  %cmp3 = icmp eq %struct.ira_allocno* %9, null, !dbg !6744
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !6745

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !6715, metadata !DIExpression()), !dbg !6723
  %10 = bitcast %struct.ira_loop_tree_node** %loop_tree_node to i64*, !dbg !6746
  store i64 %5, i64* %10, align 8, !dbg !6746
  %.cast = ptrtoint %struct.ira_allocno* %2 to i64, !dbg !6748
  %11 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6749
  %arrayidx8 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %11, i64 %idxprom, !dbg !6750
  %12 = bitcast %struct.ira_allocno** %arrayidx8 to i64*, !dbg !6751
  store i64 %.cast, i64* %12, align 8, !dbg !6751
  br label %for.cond.backedge, !dbg !6752

if.end9:                                          ; preds = %if.end
  %idxprom.lcssa = phi i64 [ %idxprom, %if.end ], !dbg !6743
  %.lcssa9 = phi %struct.ira_allocno* [ %9, %if.end ], !dbg !6743
  %.lcssa8 = phi %struct.ira_allocno* [ %2, %if.end ], !dbg !6728
  %.lcssa = phi %struct.ira_loop_tree_node* [ %3, %if.end ], !dbg !6728
  %parent10 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.lcssa, i64 0, i32 6, !dbg !6753
  %13 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent10, align 8, !dbg !6753
  %regno_allocno_map11 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %13, i64 0, i32 9, !dbg !6754
  %14 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map11, align 8, !dbg !6754
  %arrayidx13 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %14, i64 %idxprom.lcssa, !dbg !6755
  %15 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx13, align 8, !dbg !6755
  %cmp14 = icmp eq %struct.ira_allocno* %15, null, !dbg !6756
  call void @llvm.dbg.value(metadata i1 %cmp14, metadata !6714, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.lcssa8, metadata !6715, metadata !DIExpression()), !dbg !6723
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.lcssa8, i64 0, i32 20, !dbg !6757
  %16 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !6757
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %16, metadata !6719, metadata !DIExpression()), !dbg !6723
  call fastcc void @change_allocno_in_range_list(%struct.ira_allocno_live_range* %16, %struct.ira_allocno* nonnull %.lcssa9) #7, !dbg !6758
  %live_ranges16 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.lcssa9, i64 0, i32 20, !dbg !6759
  %17 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges16, align 8, !dbg !6759
  %call17 = call %struct.ira_allocno_live_range* @ira_merge_allocno_live_ranges(%struct.ira_allocno_live_range* %16, %struct.ira_allocno_live_range* %17) #7, !dbg !6760
  store %struct.ira_allocno_live_range* %call17, %struct.ira_allocno_live_range** %live_ranges16, align 8, !dbg !6761
  call void @llvm.dbg.value(metadata i8 1, metadata !6713, metadata !DIExpression()), !dbg !6723
  %18 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !6762
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !6715, metadata !DIExpression()), !dbg !6723
  %live_ranges19 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 20, !dbg !6762
  store %struct.ira_allocno_live_range* null, %struct.ira_allocno_live_range** %live_ranges19, align 8, !dbg !6763
  br i1 %cmp14, label %if.then21, label %if.end22, !dbg !6764

if.then21:                                        ; preds = %if.end9
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !6715, metadata !DIExpression()), !dbg !6723
  call fastcc void @propagate_some_info_from_allocno(%struct.ira_allocno* nonnull %.lcssa9, %struct.ira_allocno* %18) #7, !dbg !6765
  br label %if.end22, !dbg !6765

if.end22:                                         ; preds = %if.then21, %if.end9
  br label %for.cond.outer, !dbg !6726, !llvm.loop !6738

for.end:                                          ; preds = %for.cond
  %merged_p.0.ph.lcssa = phi i8 [ %merged_p.0.ph, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !6767
  br label %for.cond23, !dbg !6767

for.cond23:                                       ; preds = %for.cond23.backedge, %for.end
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !6715, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  %call24 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !6769
  %tobool25 = icmp eq i8 %call24, 0, !dbg !6767
  br i1 %tobool25, label %for.end43, label %for.body26, !dbg !6767

for.body26:                                       ; preds = %for.cond23
  br label %for.cond23.backedge, !dbg !6771

if.end31:                                         ; No predecessors!
  br label %if.end42, !dbg !6773

if.else:                                          ; No predecessors!
  br label %if.end42

if.end42:                                         ; preds = %if.end31, %if.else
  unreachable, !dbg !6769

for.cond23.backedge:                              ; preds = %for.body26
  br label %for.cond23, !dbg !6723, !llvm.loop !6774

for.end43:                                        ; preds = %for.cond23
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !6776
  br label %for.cond44, !dbg !6776

for.cond44:                                       ; preds = %if.end64, %for.end43
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !6715, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6723
  %call45 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !6778
  %tobool46 = icmp eq i8 %call45, 0, !dbg !6776
  br i1 %tobool46, label %for.end65, label %for.body47, !dbg !6776

for.body47:                                       ; preds = %for.cond44
  %19 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !6780
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !6715, metadata !DIExpression()), !dbg !6723
  %regno48 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %19, i64 0, i32 1, !dbg !6780
  %20 = load i32, i32* %regno48, align 4, !dbg !6780
  call void @llvm.dbg.value(metadata i32 %20, metadata !6712, metadata !DIExpression()), !dbg !6723
  %21 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !6782
  %regno_allocno_map49 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %21, i64 0, i32 9, !dbg !6784
  %22 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map49, align 8, !dbg !6784
  %idxprom50 = sext i32 %20 to i64, !dbg !6782
  %arrayidx51 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %22, i64 %idxprom50, !dbg !6782
  %23 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx51, align 8, !dbg !6782
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !6715, metadata !DIExpression()), !dbg !6723
  %cmp52 = icmp eq %struct.ira_allocno* %23, %19, !dbg !6785
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !6715, metadata !DIExpression()), !dbg !6723
  br i1 %cmp52, label %if.then54, label %if.else63, !dbg !6786

if.then54:                                        ; preds = %for.body47
  %24 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !6787
  %arrayidx56 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %24, i64 %idxprom50, !dbg !6787
  store %struct.ira_allocno* %19, %struct.ira_allocno** %arrayidx56, align 8, !dbg !6789
  %25 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !6790
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %25, metadata !6715, metadata !DIExpression()), !dbg !6723
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 5, !dbg !6790
  store %struct.ira_allocno* null, %struct.ira_allocno** %next_regno_allocno, align 8, !dbg !6791
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %25, metadata !6715, metadata !DIExpression()), !dbg !6723
  %cap_member57 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 17, !dbg !6792
  store %struct.ira_allocno* null, %struct.ira_allocno** %cap_member57, align 8, !dbg !6793
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %25, metadata !6715, metadata !DIExpression()), !dbg !6723
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 27, !dbg !6794
  %26 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !6794
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %25, metadata !6715, metadata !DIExpression()), !dbg !6723
  %conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 26, !dbg !6794
  store i64 %26, i64* %conflict_hard_regs, align 8, !dbg !6794
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %25, metadata !6715, metadata !DIExpression()), !dbg !6723
  %total_no_stack_reg_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %25, i64 0, i32 31, !dbg !6795
  %bf.load = load i16, i16* %total_no_stack_reg_p, align 4, !dbg !6795
  %bf.clear = and i16 %bf.load, 32, !dbg !6795
  %tobool58 = icmp eq i16 %bf.clear, 0, !dbg !6795
  br i1 %tobool58, label %if.end64, label %if.then59, !dbg !6797

if.then59:                                        ; preds = %if.then54
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %25, metadata !6715, metadata !DIExpression()), !dbg !6723
  %bf.set = or i16 %bf.load, 16, !dbg !6798
  store i16 %bf.set, i16* %total_no_stack_reg_p, align 4, !dbg !6798
  br label %if.end64, !dbg !6799

if.else63:                                        ; preds = %for.body47
  call fastcc void @finish_allocno(%struct.ira_allocno* %19) #7, !dbg !6800
  br label %if.end64

if.end64:                                         ; preds = %if.then54, %if.then59, %if.else63
  br label %for.cond44, !dbg !6778, !llvm.loop !6801

for.end65:                                        ; preds = %for.cond44
  %tobool66 = icmp eq i8 %merged_p.0.ph.lcssa, 0, !dbg !6803
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !6805

if.then67:                                        ; preds = %for.end65
  call void @ira_rebuild_start_finish_chains() #6, !dbg !6806
  br label %if.end68, !dbg !6806

if.end68:                                         ; preds = %for.end65, %if.then67
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6807
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6807
  ret void, !dbg !6807
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_unnecessary_allocnos() unnamed_addr #5 !dbg !6808 {
entry:
  call void @llvm.dbg.value(metadata i8 0, metadata !6811, metadata !DIExpression()), !dbg !6820
  store %struct.ira_allocno** null, %struct.ira_allocno*** @regno_allocnos, align 8, !dbg !6821
  %call = tail call i32 @max_reg_num() #6, !dbg !6822
  call void @llvm.dbg.value(metadata i32 %call, metadata !6810, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6820
  %0 = sext i32 %call to i64, !dbg !6824
  br label %for.cond, !dbg !6824

for.cond:                                         ; preds = %for.inc46, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc46 ], [ %0, %entry ], !dbg !6825
  %merged_p.0 = phi i8 [ %merged_p.1.lcssa, %for.inc46 ], [ 0, %entry ], !dbg !6825
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6826
  call void @llvm.dbg.value(metadata i32 undef, metadata !6810, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %merged_p.0, metadata !6811, metadata !DIExpression()), !dbg !6820
  %cmp = icmp sgt i64 %indvars.iv.next, 52, !dbg !6827
  br i1 %cmp, label %for.body, label %for.end47, !dbg !6829

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata %struct.ira_allocno* null, metadata !6814, metadata !DIExpression()), !dbg !6820
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !6830
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %indvars.iv.next, !dbg !6830
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !6830
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !6813, metadata !DIExpression()), !dbg !6820
  br label %for.cond1, !dbg !6833

for.cond1:                                        ; preds = %for.inc35, %for.body
  %prev_a.0 = phi %struct.ira_allocno* [ null, %for.body ], [ %prev_a.2, %for.inc35 ], !dbg !6834
  %a.0 = phi %struct.ira_allocno* [ %2, %for.body ], [ %3, %for.inc35 ], !dbg !6834
  %rebuild_p.0 = phi i8 [ 0, %for.body ], [ %rebuild_p.2, %for.inc35 ], !dbg !6835
  %merged_p.1 = phi i8 [ %merged_p.0, %for.body ], [ %merged_p.3, %for.inc35 ], !dbg !6825
  call void @llvm.dbg.value(metadata i8 %merged_p.1, metadata !6811, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %rebuild_p.0, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !6813, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %prev_a.0, metadata !6814, metadata !DIExpression()), !dbg !6820
  %cmp2 = icmp eq %struct.ira_allocno* %a.0, null, !dbg !6836
  br i1 %cmp2, label %for.end36, label %for.body3, !dbg !6838

for.body3:                                        ; preds = %for.cond1
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 5, !dbg !6839
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %next_regno_allocno, align 8, !dbg !6839
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !6815, metadata !DIExpression()), !dbg !6820
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 6, !dbg !6841
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !6841
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %4, metadata !6817, metadata !DIExpression()), !dbg !6820
  %to_remove_p = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 0, i32 8, !dbg !6842
  %5 = load i8, i8* %to_remove_p, align 4, !dbg !6842
  %tobool = icmp eq i8 %5, 0, !dbg !6844
  br i1 %tobool, label %for.inc35, label %if.else, !dbg !6845

if.else:                                          ; preds = %for.body3
  br label %for.cond5, !dbg !6846

for.cond5:                                        ; preds = %for.inc, %if.else
  %.pn = phi %struct.ira_loop_tree_node* [ %4, %if.else ], [ %parent.0, %for.inc ]
  %parent.0.in = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.pn, i64 0, i32 6, !dbg !6849
  %parent.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent.0.in, align 8, !dbg !6849
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %parent.0, metadata !6818, metadata !DIExpression()), !dbg !6820
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %parent.0, i64 0, i32 9, !dbg !6850
  %6 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6850
  %arrayidx7 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %6, i64 %indvars.iv.next, !dbg !6852
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx7, align 8, !dbg !6852
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !6816, metadata !DIExpression()), !dbg !6820
  %cond = icmp eq %struct.ira_allocno* %7, null, !dbg !6853
  br i1 %cond, label %land.rhs, label %if.else21.loopexit, !dbg !6853

land.rhs:                                         ; preds = %for.cond5
  %to_remove_p9 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %parent.0, i64 0, i32 8, !dbg !6854
  %8 = load i8, i8* %to_remove_p9, align 4, !dbg !6854
  %tobool10 = icmp eq i8 %8, 0, !dbg !6853
  br i1 %tobool10, label %for.end, label %for.inc, !dbg !6855

for.inc:                                          ; preds = %land.rhs
  br label %for.cond5, !dbg !6856, !llvm.loop !6857

for.end:                                          ; preds = %land.rhs
  %parent.0.lcssa8 = phi %struct.ira_loop_tree_node* [ %parent.0, %land.rhs ], !dbg !6849
  %regno_allocno_map.lcssa7 = phi %struct.ira_allocno*** [ %regno_allocno_map, %land.rhs ], !dbg !6850
  %.lcssa6 = phi %struct.ira_allocno* [ %7, %land.rhs ], !dbg !6852
  br i1 true, label %if.then15, label %for.end.if.else21_crit_edge, !dbg !6859

for.end.if.else21_crit_edge:                      ; preds = %for.end
  br label %if.else21, !dbg !6859

if.then15:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !6814, metadata !DIExpression()), !dbg !6820
  store %struct.ira_loop_tree_node* %parent.0.lcssa8, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !6860
  %9 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map.lcssa7, align 8, !dbg !6863
  %arrayidx19 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %9, i64 %indvars.iv.next, !dbg !6864
  store %struct.ira_allocno* %a.0, %struct.ira_allocno** %arrayidx19, align 8, !dbg !6865
  %all_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %parent.0.lcssa8, i64 0, i32 12, !dbg !6866
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !6866
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 0, !dbg !6867
  %11 = load i32, i32* %num, align 8, !dbg !6867
  %call20 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !6868
  call void @llvm.dbg.value(metadata i8 1, metadata !6812, metadata !DIExpression()), !dbg !6820
  br label %for.inc35, !dbg !6869

if.else21.loopexit:                               ; preds = %for.cond5
  %.lcssa = phi %struct.ira_allocno* [ %7, %for.cond5 ], !dbg !6852
  br label %if.else21, !dbg !6870

if.else21:                                        ; preds = %for.end.if.else21_crit_edge, %if.else21.loopexit
  %12 = phi %struct.ira_allocno* [ %.lcssa6, %for.end.if.else21_crit_edge ], [ %.lcssa, %if.else21.loopexit ]
  %cmp22 = icmp eq %struct.ira_allocno* %prev_a.0, null, !dbg !6870
  br i1 %cmp22, label %if.then24, label %if.else27, !dbg !6873

if.then24:                                        ; preds = %if.else21
  %13 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !6874
  %arrayidx26 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %13, i64 %indvars.iv.next, !dbg !6874
  store %struct.ira_allocno* %3, %struct.ira_allocno** %arrayidx26, align 8, !dbg !6875
  br label %if.end, !dbg !6874

if.else27:                                        ; preds = %if.else21
  %next_regno_allocno28 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %prev_a.0, i64 0, i32 5, !dbg !6876
  store %struct.ira_allocno* %3, %struct.ira_allocno** %next_regno_allocno28, align 8, !dbg !6877
  br label %if.end

if.end:                                           ; preds = %if.else27, %if.then24
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 20, !dbg !6878
  %14 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !6878
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %14, metadata !6819, metadata !DIExpression()), !dbg !6820
  tail call fastcc void @change_allocno_in_range_list(%struct.ira_allocno_live_range* %14, %struct.ira_allocno* %12) #7, !dbg !6879
  %live_ranges29 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 20, !dbg !6880
  %15 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges29, align 8, !dbg !6880
  %call30 = tail call %struct.ira_allocno_live_range* @ira_merge_allocno_live_ranges(%struct.ira_allocno_live_range* %14, %struct.ira_allocno_live_range* %15) #7, !dbg !6881
  store %struct.ira_allocno_live_range* %call30, %struct.ira_allocno_live_range** %live_ranges29, align 8, !dbg !6882
  call void @llvm.dbg.value(metadata i8 1, metadata !6811, metadata !DIExpression()), !dbg !6820
  store %struct.ira_allocno_live_range* null, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !6883
  tail call fastcc void @propagate_some_info_from_allocno(%struct.ira_allocno* %12, %struct.ira_allocno* nonnull %a.0) #7, !dbg !6884
  tail call fastcc void @finish_allocno(%struct.ira_allocno* nonnull %a.0) #7, !dbg !6885
  br label %for.inc35

for.inc35:                                        ; preds = %for.body3, %if.end, %if.then15
  %prev_a.2 = phi %struct.ira_allocno* [ %a.0, %for.body3 ], [ %a.0, %if.then15 ], [ %prev_a.0, %if.end ], !dbg !6886
  %rebuild_p.2 = phi i8 [ %rebuild_p.0, %for.body3 ], [ 1, %if.then15 ], [ %rebuild_p.0, %if.end ], !dbg !6835
  %merged_p.3 = phi i8 [ %merged_p.1, %for.body3 ], [ %merged_p.1, %if.then15 ], [ 1, %if.end ], !dbg !6825
  call void @llvm.dbg.value(metadata i8 %merged_p.3, metadata !6811, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %rebuild_p.2, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %prev_a.2, metadata !6814, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !6813, metadata !DIExpression()), !dbg !6820
  br label %for.cond1, !dbg !6887, !llvm.loop !6888

for.end36:                                        ; preds = %for.cond1
  %rebuild_p.0.lcssa = phi i8 [ %rebuild_p.0, %for.cond1 ], !dbg !6835
  %merged_p.1.lcssa = phi i8 [ %merged_p.1, %for.cond1 ], !dbg !6825
  call void @llvm.dbg.value(metadata i8 %rebuild_p.0.lcssa, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %merged_p.1.lcssa, metadata !6811, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %rebuild_p.0.lcssa, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %merged_p.1.lcssa, metadata !6811, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %rebuild_p.0.lcssa, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %merged_p.1.lcssa, metadata !6811, metadata !DIExpression()), !dbg !6820
  %tobool37 = icmp eq i8 %rebuild_p.0.lcssa, 0, !dbg !6890
  br i1 %tobool37, label %for.inc46, label %if.then38, !dbg !6892

if.then38:                                        ; preds = %for.end36
  %16 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_allocnos, align 8, !dbg !6893
  %cmp39 = icmp eq %struct.ira_allocno** %16, null, !dbg !6896
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !6897

if.then41:                                        ; preds = %if.then38
  %17 = load i32, i32* @ira_allocnos_num, align 4, !dbg !6898
  %conv42 = sext i32 %17 to i64, !dbg !6898
  %mul = shl nsw i64 %conv42, 3, !dbg !6899
  %call43 = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !6900
  store i8* %call43, i8** bitcast (%struct.ira_allocno*** @regno_allocnos to i8**), align 8, !dbg !6901
  br label %if.end44, !dbg !6902

if.end44:                                         ; preds = %if.then41, %if.then38
  %18 = trunc i64 %indvars.iv.next to i32, !dbg !6903
  tail call fastcc void @ira_rebuild_regno_allocno_list(i32 %18) #7, !dbg !6903
  br label %for.inc46, !dbg !6904

for.inc46:                                        ; preds = %for.end36, %if.end44
  call void @llvm.dbg.value(metadata i32 undef, metadata !6810, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6820
  br label %for.cond, !dbg !6905, !llvm.loop !6906

for.end47:                                        ; preds = %for.cond
  %merged_p.0.lcssa = phi i8 [ %merged_p.0, %for.cond ], !dbg !6825
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !6811, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !6811, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !6811, metadata !DIExpression()), !dbg !6820
  %tobool48 = icmp eq i8 %merged_p.0.lcssa, 0, !dbg !6908
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !6910

if.then49:                                        ; preds = %for.end47
  tail call void @ira_rebuild_start_finish_chains() #6, !dbg !6911
  br label %if.end50, !dbg !6911

if.end50:                                         ; preds = %for.end47, %if.then49
  %19 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_allocnos, align 8, !dbg !6912
  %cmp51 = icmp eq %struct.ira_allocno** %19, null, !dbg !6914
  br i1 %cmp51, label %if.end54, label %if.then53, !dbg !6915

if.then53:                                        ; preds = %if.end50
  %20 = bitcast %struct.ira_allocno** %19 to i8*, !dbg !6915
  tail call void @ira_free(i8* nonnull %20) #6, !dbg !6916
  br label %if.end54, !dbg !6916

if.end54:                                         ; preds = %if.end50, %if.then53
  ret void, !dbg !6917
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_loop_tree_node_t_base_length(%struct.VEC_ira_loop_tree_node_t_base* %vec_) unnamed_addr #0 !dbg !6918 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_loop_tree_node_t_base* %vec_, metadata !6924, metadata !DIExpression()), !dbg !6925
  %tobool = icmp eq %struct.VEC_ira_loop_tree_node_t_base* %vec_, null, !dbg !6926
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6926

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_base, %struct.VEC_ira_loop_tree_node_t_base* %vec_, i64 0, i32 0, !dbg !6926
  %0 = load i32, i32* %num, align 8, !dbg !6926
  br label %cond.end, !dbg !6926

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6926
  ret i32 %cond, !dbg !6926
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_loop_tree_node(%struct.ira_loop_tree_node* %loop) unnamed_addr #5 !dbg !6927 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop, metadata !6929, metadata !DIExpression()), !dbg !6930
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop, i64 0, i32 9, !dbg !6931
  %0 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6931
  %cmp = icmp eq %struct.ira_allocno** %0, null, !dbg !6933
  br i1 %cmp, label %if.end, label %if.then, !dbg !6934

if.then:                                          ; preds = %entry
  %local_copies = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop, i64 0, i32 15, !dbg !6935
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_copies, align 8, !dbg !6935
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %1) #6, !dbg !6937
  %border_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop, i64 0, i32 13, !dbg !6938
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %border_allocnos, align 8, !dbg !6938
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %2) #6, !dbg !6939
  %modified_regnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop, i64 0, i32 14, !dbg !6940
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %modified_regnos, align 8, !dbg !6940
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %3) #6, !dbg !6941
  %all_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop, i64 0, i32 12, !dbg !6942
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !6942
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %4) #6, !dbg !6943
  %5 = bitcast %struct.ira_allocno*** %regno_allocno_map to i8**, !dbg !6944
  %6 = load i8*, i8** %5, align 8, !dbg !6944
  tail call void @ira_free(i8* %6) #6, !dbg !6945
  store %struct.ira_allocno** null, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6946
  br label %if.end, !dbg !6947

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6948
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_loop_tree_node* @VEC_ira_loop_tree_node_t_base_pop(%struct.VEC_ira_loop_tree_node_t_base* %vec_) unnamed_addr #0 !dbg !6949 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_loop_tree_node_t_base* %vec_, metadata !6954, metadata !DIExpression()), !dbg !6956
  %num1 = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_base, %struct.VEC_ira_loop_tree_node_t_base* %vec_, i64 0, i32 0, !dbg !6957
  %0 = load i32, i32* %num1, align 8, !dbg !6957
  %dec = add i32 %0, -1, !dbg !6957
  store i32 %dec, i32* %num1, align 8, !dbg !6957
  %idxprom = zext i32 %dec to i64, !dbg !6957
  %arrayidx = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_base, %struct.VEC_ira_loop_tree_node_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6957
  %1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %arrayidx, align 8, !dbg !6957
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %1, metadata !6955, metadata !DIExpression()), !dbg !6956
  ret %struct.ira_loop_tree_node* %1, !dbg !6957
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !6958 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6962, metadata !DIExpression()), !dbg !6963
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !6964
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6964
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !6964
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6964

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !6964
  br label %cond.end, !dbg !6964

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6964
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !6964
  ret i32 %call, !dbg !6965
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @low_pressure_loop_node_p(%struct.ira_loop_tree_node* %node) unnamed_addr #5 !dbg !6966 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %node, metadata !6970, metadata !DIExpression()), !dbg !6973
  %bb = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %node, i64 0, i32 0, !dbg !6974
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6974
  %cmp = icmp eq %struct.basic_block_def* %0, null, !dbg !6976
  br i1 %cmp, label %for.cond.preheader, label %cleanup, !dbg !6977

for.cond.preheader:                               ; preds = %entry
  %1 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6978
  %2 = sext i32 %1 to i64, !dbg !6981
  br label %for.cond, !dbg !6981

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !6982
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6971, metadata !DIExpression()), !dbg !6973
  %cmp1 = icmp slt i64 %indvars.iv, %2, !dbg !6983
  br i1 %cmp1, label %for.body, label %cleanup.loopexit, !dbg !6981

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !6984
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6984
  call void @llvm.dbg.value(metadata i32 %3, metadata !6972, metadata !DIExpression()), !dbg !6973
  %idxprom2 = zext i32 %3 to i64, !dbg !6986
  %arrayidx3 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %node, i64 0, i32 11, i64 %idxprom2, !dbg !6986
  %4 = load i32, i32* %arrayidx3, align 4, !dbg !6986
  %arrayidx5 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_available_class_regs, i64 0, i64 %idxprom2, !dbg !6988
  %5 = load i32, i32* %arrayidx5, align 4, !dbg !6988
  %cmp6 = icmp sgt i32 %4, %5, !dbg !6989
  br i1 %cmp6, label %cleanup.loopexit, label %for.inc, !dbg !6990

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6991
  call void @llvm.dbg.value(metadata i32 undef, metadata !6971, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6973
  br label %for.cond, !dbg !6992, !llvm.loop !6993

cleanup.loopexit:                                 ; preds = %for.body, %for.cond
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !6995

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !6973
  ret i8 %retval.0, !dbg !6995
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @loop_compare_func(i8* %v1p, i8* %v2p) #5 !dbg !6996 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !6998, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !6999, metadata !DIExpression()), !dbg !7003
  %0 = bitcast i8* %v1p to %struct.ira_loop_tree_node**, !dbg !7004
  %1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %0, align 8, !dbg !7005
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %1, metadata !7001, metadata !DIExpression()), !dbg !7003
  %2 = bitcast i8* %v2p to %struct.ira_loop_tree_node**, !dbg !7006
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %2, align 8, !dbg !7007
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %3, metadata !7002, metadata !DIExpression()), !dbg !7003
  %to_remove_p = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %1, i64 0, i32 8, !dbg !7008
  %4 = load i8, i8* %to_remove_p, align 4, !dbg !7008
  %tobool = icmp eq i8 %4, 0, !dbg !7010
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7011

land.lhs.true:                                    ; preds = %entry
  %to_remove_p1 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 0, i32 8, !dbg !7012
  %5 = load i8, i8* %to_remove_p1, align 4, !dbg !7012
  %tobool2 = icmp eq i8 %5, 0, !dbg !7013
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !7014

if.end:                                           ; preds = %land.lhs.true, %entry
  br i1 %tobool, label %land.lhs.true5, label %if.end10, !dbg !7015

land.lhs.true5:                                   ; preds = %if.end
  %to_remove_p6 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 0, i32 8, !dbg !7017
  %6 = load i8, i8* %to_remove_p6, align 4, !dbg !7017
  %tobool8 = icmp eq i8 %6, 0, !dbg !7018
  br i1 %tobool8, label %if.end10, label %cleanup, !dbg !7019

if.end10:                                         ; preds = %land.lhs.true5, %if.end
  %loop = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %1, i64 0, i32 1, !dbg !7020
  %7 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !7020
  %header = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 2, !dbg !7022
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !7022
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 11, !dbg !7023
  %9 = load i32, i32* %frequency, align 8, !dbg !7023
  %loop11 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %3, i64 0, i32 1, !dbg !7024
  %10 = load %struct.loop*, %struct.loop** %loop11, align 8, !dbg !7024
  %header12 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 2, !dbg !7025
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %header12, align 8, !dbg !7025
  %frequency13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i64 0, i32 11, !dbg !7026
  %12 = load i32, i32* %frequency13, align 8, !dbg !7026
  %sub = sub nsw i32 %9, %12, !dbg !7027
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7000, metadata !DIExpression()), !dbg !7003
  %cmp = icmp eq i32 %sub, 0, !dbg !7028
  br i1 %cmp, label %if.end16, label %cleanup, !dbg !7029

if.end16:                                         ; preds = %if.end10
  %call = tail call fastcc i32 @loop_depth(%struct.loop* %7) #7, !dbg !7030
  %13 = load %struct.loop*, %struct.loop** %loop11, align 8, !dbg !7032
  %call19 = tail call fastcc i32 @loop_depth(%struct.loop* %13) #7, !dbg !7033
  %sub20 = sub nsw i32 %call, %call19, !dbg !7034
  call void @llvm.dbg.value(metadata i32 %sub20, metadata !7000, metadata !DIExpression()), !dbg !7003
  %cmp21 = icmp eq i32 %sub20, 0, !dbg !7035
  br i1 %cmp21, label %if.end24, label %cleanup, !dbg !7036

if.end24:                                         ; preds = %if.end16
  %14 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !7037
  %num = getelementptr inbounds %struct.loop, %struct.loop* %14, i64 0, i32 0, !dbg !7038
  %15 = load i32, i32* %num, align 8, !dbg !7038
  %16 = load %struct.loop*, %struct.loop** %loop11, align 8, !dbg !7039
  %num27 = getelementptr inbounds %struct.loop, %struct.loop* %16, i64 0, i32 0, !dbg !7040
  %17 = load i32, i32* %num27, align 8, !dbg !7040
  %sub28 = sub nsw i32 %15, %17, !dbg !7041
  br label %cleanup, !dbg !7042

cleanup:                                          ; preds = %land.lhs.true, %if.end16, %if.end10, %land.lhs.true5, %if.end24
  %retval.0 = phi i32 [ %sub28, %if.end24 ], [ -1, %land.lhs.true ], [ 1, %land.lhs.true5 ], [ %sub, %if.end10 ], [ %sub20, %if.end16 ], !dbg !7003
  ret i32 %retval.0, !dbg !7043
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_loop_tree_node** @VEC_ira_loop_tree_node_t_heap_safe_push(%struct.VEC_ira_loop_tree_node_t_heap** %vec_, %struct.ira_loop_tree_node* %obj_) unnamed_addr #0 !dbg !7044 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_loop_tree_node_t_heap** %vec_, metadata !7048, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %obj_, metadata !7049, metadata !DIExpression()), !dbg !7050
  %call = tail call fastcc i32 @VEC_ira_loop_tree_node_t_heap_reserve(%struct.VEC_ira_loop_tree_node_t_heap** %vec_, i32 1) #7, !dbg !7051
  %0 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** %vec_, align 8, !dbg !7051
  %tobool = icmp eq %struct.VEC_ira_loop_tree_node_t_heap* %0, null, !dbg !7051
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7051

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_heap, %struct.VEC_ira_loop_tree_node_t_heap* %0, i64 0, i32 0, !dbg !7051
  br label %cond.end, !dbg !7051

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_loop_tree_node_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7051
  %call1 = tail call fastcc %struct.ira_loop_tree_node** @VEC_ira_loop_tree_node_t_base_quick_push(%struct.VEC_ira_loop_tree_node_t_base* %cond, %struct.ira_loop_tree_node* %obj_) #7, !dbg !7051
  ret %struct.ira_loop_tree_node** %call1, !dbg !7051
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_loop_tree_node_t_heap_reserve(%struct.VEC_ira_loop_tree_node_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7052 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_loop_tree_node_t_heap** %vec_, metadata !7056, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.value(metadata i32 1, metadata !7057, metadata !DIExpression()), !dbg !7059
  %0 = load %struct.VEC_ira_loop_tree_node_t_heap*, %struct.VEC_ira_loop_tree_node_t_heap** %vec_, align 8, !dbg !7060
  %tobool = icmp eq %struct.VEC_ira_loop_tree_node_t_heap* %0, null, !dbg !7060
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7060

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_heap, %struct.VEC_ira_loop_tree_node_t_heap* %0, i64 0, i32 0, !dbg !7060
  br label %cond.end, !dbg !7060

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_loop_tree_node_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7060
  %call = tail call fastcc i32 @VEC_ira_loop_tree_node_t_base_space(%struct.VEC_ira_loop_tree_node_t_base* %cond, i32 1) #7, !dbg !7060
  %tobool1 = icmp eq i32 %call, 0, !dbg !7060
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7060
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7058, metadata !DIExpression()), !dbg !7059
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7060

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_ira_loop_tree_node_t_heap** %vec_ to i8**, !dbg !7061
  %2 = load i8*, i8** %1, align 8, !dbg !7061
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !7061
  store i8* %call3, i8** %1, align 8, !dbg !7061
  br label %if.end, !dbg !7061

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7060
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_loop_tree_node** @VEC_ira_loop_tree_node_t_base_quick_push(%struct.VEC_ira_loop_tree_node_t_base* %vec_, %struct.ira_loop_tree_node* %obj_) unnamed_addr #0 !dbg !7063 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_loop_tree_node_t_base* %vec_, metadata !7067, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %obj_, metadata !7068, metadata !DIExpression()), !dbg !7070
  %num1 = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_base, %struct.VEC_ira_loop_tree_node_t_base* %vec_, i64 0, i32 0, !dbg !7071
  %0 = load i32, i32* %num1, align 8, !dbg !7071
  %inc = add i32 %0, 1, !dbg !7071
  store i32 %inc, i32* %num1, align 8, !dbg !7071
  %idxprom = zext i32 %0 to i64, !dbg !7071
  %arrayidx = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_base, %struct.VEC_ira_loop_tree_node_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7071
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node** %arrayidx, metadata !7069, metadata !DIExpression()), !dbg !7070
  store %struct.ira_loop_tree_node* %obj_, %struct.ira_loop_tree_node** %arrayidx, align 8, !dbg !7071
  ret %struct.ira_loop_tree_node** %arrayidx, !dbg !7071
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_loop_tree_node_t_base_space(%struct.VEC_ira_loop_tree_node_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7072 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_loop_tree_node_t_base* %vec_, metadata !7076, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 1, metadata !7077, metadata !DIExpression()), !dbg !7078
  %tobool = icmp eq %struct.VEC_ira_loop_tree_node_t_base* %vec_, null, !dbg !7079
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7079

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_base, %struct.VEC_ira_loop_tree_node_t_base* %vec_, i64 0, i32 1, !dbg !7079
  %0 = load i32, i32* %alloc, align 4, !dbg !7079
  %num = getelementptr inbounds %struct.VEC_ira_loop_tree_node_t_base, %struct.VEC_ira_loop_tree_node_t_base* %vec_, i64 0, i32 0, !dbg !7079
  %1 = load i32, i32* %num, align 8, !dbg !7079
  %cmp1 = icmp ne i32 %0, %1, !dbg !7079
  %phitmp = zext i1 %cmp1 to i32, !dbg !7079
  br label %cond.end, !dbg !7079

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7079

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7079
}

; Function Attrs: nounwind uwtable
define internal fastcc void @propagate_some_info_from_allocno(%struct.ira_allocno* %a, %struct.ira_allocno* %from_a) unnamed_addr #5 !dbg !7080 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !7082, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %from_a, metadata !7083, metadata !DIExpression()), !dbg !7085
  %conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 26, !dbg !7086
  %0 = load i64, i64* %conflict_hard_regs, align 8, !dbg !7086
  %conflict_hard_regs1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 26, !dbg !7086
  %1 = load i64, i64* %conflict_hard_regs1, align 8, !dbg !7086
  %or = or i64 %1, %0, !dbg !7086
  store i64 %or, i64* %conflict_hard_regs1, align 8, !dbg !7086
  %no_stack_reg_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 31, !dbg !7087
  %bf.load = load i16, i16* %no_stack_reg_p, align 4, !dbg !7087
  %bf.clear = and i16 %bf.load, 16, !dbg !7087
  %tobool = icmp eq i16 %bf.clear, 0, !dbg !7087
  br i1 %tobool, label %if.end, label %if.then, !dbg !7089

if.then:                                          ; preds = %entry
  %no_stack_reg_p2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !7090
  %bf.load3 = load i16, i16* %no_stack_reg_p2, align 4, !dbg !7091
  %bf.set = or i16 %bf.load3, 16, !dbg !7091
  store i16 %bf.set, i16* %no_stack_reg_p2, align 4, !dbg !7091
  br label %if.end, !dbg !7090

if.end:                                           ; preds = %entry, %if.then
  %nrefs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 7, !dbg !7092
  %2 = load i32, i32* %nrefs, align 8, !dbg !7092
  %nrefs5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 7, !dbg !7093
  %3 = load i32, i32* %nrefs5, align 8, !dbg !7094
  %add = add nsw i32 %3, %2, !dbg !7094
  store i32 %add, i32* %nrefs5, align 8, !dbg !7094
  %freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 8, !dbg !7095
  %4 = load i32, i32* %freq, align 4, !dbg !7095
  %freq6 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 8, !dbg !7096
  %5 = load i32, i32* %freq6, align 4, !dbg !7097
  %add7 = add nsw i32 %5, %4, !dbg !7097
  store i32 %add7, i32* %freq6, align 4, !dbg !7097
  %call_freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 29, !dbg !7098
  %6 = load i32, i32* %call_freq, align 4, !dbg !7098
  %call_freq8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 29, !dbg !7099
  %7 = load i32, i32* %call_freq8, align 4, !dbg !7100
  %add9 = add nsw i32 %7, %6, !dbg !7100
  store i32 %add9, i32* %call_freq8, align 4, !dbg !7100
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 27, !dbg !7101
  %8 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !7101
  %total_conflict_hard_regs10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 27, !dbg !7101
  %9 = load i64, i64* %total_conflict_hard_regs10, align 8, !dbg !7101
  %or11 = or i64 %9, %8, !dbg !7101
  store i64 %or11, i64* %total_conflict_hard_regs10, align 8, !dbg !7101
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 30, !dbg !7102
  %10 = load i32, i32* %calls_crossed_num, align 8, !dbg !7102
  %calls_crossed_num12 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 30, !dbg !7103
  %11 = load i32, i32* %calls_crossed_num12, align 8, !dbg !7104
  %add13 = add nsw i32 %11, %10, !dbg !7104
  store i32 %add13, i32* %calls_crossed_num12, align 8, !dbg !7104
  %excess_pressure_points_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 14, !dbg !7105
  %12 = load i32, i32* %excess_pressure_points_num, align 4, !dbg !7105
  %excess_pressure_points_num14 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 14, !dbg !7106
  %13 = load i32, i32* %excess_pressure_points_num14, align 4, !dbg !7107
  %add15 = add nsw i32 %13, %12, !dbg !7107
  store i32 %add15, i32* %excess_pressure_points_num14, align 4, !dbg !7107
  %bf.load16 = load i16, i16* %no_stack_reg_p, align 4, !dbg !7108
  %bf.clear18 = and i16 %bf.load16, 64, !dbg !7108
  %tobool20 = icmp eq i16 %bf.clear18, 0, !dbg !7108
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !7110

if.then21:                                        ; preds = %if.end
  %bad_spill_p22 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !7111
  %bf.load23 = load i16, i16* %bad_spill_p22, align 4, !dbg !7112
  %bf.clear24 = and i16 %bf.load23, -65, !dbg !7112
  store i16 %bf.clear24, i16* %bad_spill_p22, align 4, !dbg !7112
  %bf.load26.pre = load i16, i16* %no_stack_reg_p, align 4, !dbg !7113
  br label %if.end25, !dbg !7111

if.end25:                                         ; preds = %if.end, %if.then21
  %bf.load26 = phi i16 [ %bf.load16, %if.end ], [ %bf.load26.pre, %if.then21 ], !dbg !7113
  %bf.clear28 = and i16 %bf.load26, 32, !dbg !7113
  %tobool30 = icmp eq i16 %bf.clear28, 0, !dbg !7113
  br i1 %tobool30, label %if.end36, label %if.then31, !dbg !7115

if.then31:                                        ; preds = %if.end25
  %total_no_stack_reg_p32 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !7116
  %bf.load33 = load i16, i16* %total_no_stack_reg_p32, align 4, !dbg !7117
  %bf.set35 = or i16 %bf.load33, 32, !dbg !7117
  store i16 %bf.set35, i16* %total_no_stack_reg_p32, align 4, !dbg !7117
  br label %if.end36, !dbg !7116

if.end36:                                         ; preds = %if.end25, %if.then31
  %cover_class37 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 9, !dbg !7118
  %14 = load i32, i32* %cover_class37, align 8, !dbg !7118
  call void @llvm.dbg.value(metadata i32 %14, metadata !7084, metadata !DIExpression()), !dbg !7085
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 33, !dbg !7119
  %hard_reg_costs38 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 33, !dbg !7120
  %15 = load i32*, i32** %hard_reg_costs38, align 8, !dbg !7120
  tail call fastcc void @ira_allocate_and_accumulate_costs(i32** nonnull %hard_reg_costs, i32 %14, i32* %15) #7, !dbg !7121
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 35, !dbg !7122
  %conflict_hard_reg_costs39 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 35, !dbg !7123
  %16 = load i32*, i32** %conflict_hard_reg_costs39, align 8, !dbg !7123
  tail call fastcc void @ira_allocate_and_accumulate_costs(i32** nonnull %conflict_hard_reg_costs, i32 %14, i32* %16) #7, !dbg !7124
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 10, !dbg !7125
  %17 = load i32, i32* %cover_class_cost, align 4, !dbg !7125
  %cover_class_cost40 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 10, !dbg !7126
  %18 = load i32, i32* %cover_class_cost40, align 4, !dbg !7127
  %add41 = add nsw i32 %18, %17, !dbg !7127
  store i32 %add41, i32* %cover_class_cost40, align 4, !dbg !7127
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %from_a, i64 0, i32 12, !dbg !7128
  %19 = load i32, i32* %memory_cost, align 4, !dbg !7128
  %memory_cost42 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 12, !dbg !7129
  %20 = load i32, i32* %memory_cost42, align 4, !dbg !7130
  %add43 = add nsw i32 %20, %19, !dbg !7130
  store i32 %add43, i32* %memory_cost42, align 4, !dbg !7130
  ret void, !dbg !7131
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocate_and_accumulate_costs(i32** %vec, i32 %cover_class, i32* %src) unnamed_addr #0 !dbg !7132 {
entry:
  call void @llvm.dbg.value(metadata i32** %vec, metadata !7137, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !7138, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i32* %src, metadata !7139, metadata !DIExpression()), !dbg !7142
  %cmp = icmp eq i32* %src, null, !dbg !7143
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !7145

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %cover_class to i64, !dbg !7146
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom, !dbg !7146
  %0 = load i32, i32* %arrayidx, align 4, !dbg !7146
  call void @llvm.dbg.value(metadata i32 %0, metadata !7141, metadata !DIExpression()), !dbg !7142
  %1 = load i32*, i32** %vec, align 8, !dbg !7147
  %cmp1 = icmp eq i32* %1, null, !dbg !7149
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !7150

if.then2:                                         ; preds = %if.end
  %call = tail call i32* @ira_allocate_cost_vector(i32 %cover_class) #7, !dbg !7151
  store i32* %call, i32** %vec, align 8, !dbg !7153
  %.cast = bitcast i32* %call to i8*, !dbg !7154
  %conv = sext i32 %0 to i64, !dbg !7155
  %mul = shl nsw i64 %conv, 2, !dbg !7156
  %call3 = tail call i8* @memset(i8* %.cast, i32 0, i64 %mul) #6, !dbg !7157
  br label %if.end4, !dbg !7158

if.end4:                                          ; preds = %if.then2, %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !7140, metadata !DIExpression()), !dbg !7142
  %2 = sext i32 %0 to i64, !dbg !7159
  br label %for.cond, !dbg !7159

for.cond:                                         ; preds = %for.body, %if.end4
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end4 ], !dbg !7161
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7140, metadata !DIExpression()), !dbg !7142
  %cmp5 = icmp slt i64 %indvars.iv, %2, !dbg !7162
  br i1 %cmp5, label %for.body, label %cleanup.cont.loopexit, !dbg !7164

for.body:                                         ; preds = %for.cond
  %arrayidx8 = getelementptr inbounds i32, i32* %src, i64 %indvars.iv, !dbg !7165
  %3 = load i32, i32* %arrayidx8, align 4, !dbg !7165
  %4 = load i32*, i32** %vec, align 8, !dbg !7166
  %arrayidx10 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv, !dbg !7167
  %5 = load i32, i32* %arrayidx10, align 4, !dbg !7168
  %add = add nsw i32 %5, %3, !dbg !7168
  store i32 %add, i32* %arrayidx10, align 4, !dbg !7168
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7169
  call void @llvm.dbg.value(metadata i32 undef, metadata !7140, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7142
  br label %for.cond, !dbg !7170, !llvm.loop !7171

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !7173

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !7173
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ira_rebuild_regno_allocno_list(i32 %regno) unnamed_addr #5 !dbg !7174 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7178, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i32 0, metadata !7180, metadata !DIExpression()), !dbg !7182
  %0 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !7183
  %idxprom = sext i32 %regno to i64, !dbg !7183
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %0, i64 %idxprom, !dbg !7183
  br label %for.cond, !dbg !7185

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.body ], [ 0, %entry ], !dbg !7186
  %a.0.in = phi %struct.ira_allocno** [ %next_regno_allocno, %for.body ], [ %arrayidx, %entry ]
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !7186
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !7181, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !7180, metadata !DIExpression()), !dbg !7182
  %cmp = icmp eq %struct.ira_allocno* %a.0, null, !dbg !7187
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_allocnos, align 8, !dbg !7182
  br i1 %cmp, label %for.end, label %for.body, !dbg !7189

for.body:                                         ; preds = %for.cond
  %indvars.iv.next4 = add nuw i64 %indvars.iv3, 1, !dbg !7190
  call void @llvm.dbg.value(metadata i32 undef, metadata !7180, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7182
  %arrayidx2 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %indvars.iv3, !dbg !7191
  store %struct.ira_allocno* %a.0, %struct.ira_allocno** %arrayidx2, align 8, !dbg !7192
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 5, !dbg !7193
  br label %for.cond, !dbg !7194, !llvm.loop !7195

for.end:                                          ; preds = %for.cond
  %indvars.iv3.lcssa = phi i64 [ %indvars.iv3, %for.cond ], !dbg !7186
  %.lcssa = phi %struct.ira_allocno** [ %1, %for.cond ], !dbg !7182
  call void @llvm.dbg.value(metadata i64 %indvars.iv3.lcssa, metadata !7180, metadata !DIExpression()), !dbg !7182
  %2 = bitcast %struct.ira_allocno** %.lcssa to i8*, !dbg !7197
  %conv = and i64 %indvars.iv3.lcssa, 4294967295, !dbg !7198
  tail call void @spec_qsort(i8* %2, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @regno_allocno_order_compare_func) #6, !dbg !7199
  call void @llvm.dbg.value(metadata i32 1, metadata !7179, metadata !DIExpression()), !dbg !7182
  %.pre = load %struct.ira_allocno**, %struct.ira_allocno*** @regno_allocnos, align 8, !dbg !7182
  %3 = and i64 %indvars.iv3.lcssa, 4294967295, !dbg !7200
  br label %for.cond3, !dbg !7200

for.cond3:                                        ; preds = %for.body6, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body6 ], [ 1, %for.end ], !dbg !7202
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7179, metadata !DIExpression()), !dbg !7182
  %cmp4 = icmp ult i64 %indvars.iv, %3, !dbg !7203
  br i1 %cmp4, label %for.body6, label %for.end14, !dbg !7205

for.body6:                                        ; preds = %for.cond3
  %arrayidx8 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %.pre, i64 %indvars.iv, !dbg !7206
  %4 = bitcast %struct.ira_allocno** %arrayidx8 to i64*, !dbg !7206
  %5 = load i64, i64* %4, align 8, !dbg !7206
  %6 = add nsw i64 %indvars.iv, -1, !dbg !7207
  %arrayidx10 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %.pre, i64 %6, !dbg !7207
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx10, align 8, !dbg !7207
  %next_regno_allocno11 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 5, !dbg !7207
  %8 = bitcast %struct.ira_allocno** %next_regno_allocno11 to i64*, !dbg !7208
  store i64 %5, i64* %8, align 8, !dbg !7208
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7209
  call void @llvm.dbg.value(metadata i32 undef, metadata !7179, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7182
  br label %for.cond3, !dbg !7210, !llvm.loop !7211

for.end14:                                        ; preds = %for.cond3
  %9 = bitcast %struct.ira_allocno** %.pre to i64*, !dbg !7200
  %sub15 = shl i64 %indvars.iv3.lcssa, 32, !dbg !7213
  %sext = add i64 %sub15, -4294967296, !dbg !7213
  %idxprom16 = ashr exact i64 %sext, 32, !dbg !7213
  %arrayidx17 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %.pre, i64 %idxprom16, !dbg !7213
  %10 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx17, align 8, !dbg !7213
  %next_regno_allocno18 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %10, i64 0, i32 5, !dbg !7213
  store %struct.ira_allocno* null, %struct.ira_allocno** %next_regno_allocno18, align 8, !dbg !7214
  %11 = load i64, i64* %9, align 8, !dbg !7215
  %12 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !7216
  %arrayidx21 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %12, i64 %idxprom, !dbg !7216
  %13 = bitcast %struct.ira_allocno** %arrayidx21 to i64*, !dbg !7217
  store i64 %11, i64* %13, align 8, !dbg !7217
  %14 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7218
  %cmp22 = icmp sgt i32 %14, 1, !dbg !7220
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7221
  %cmp24 = icmp ne %struct._IO_FILE* %15, null, !dbg !7222
  %or.cond = and i1 %cmp22, %cmp24, !dbg !7223
  br i1 %or.cond, label %if.then, label %if.end, !dbg !7223

if.then:                                          ; preds = %for.end14
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.31, i64 0, i64 0), i32 %regno) #6, !dbg !7224
  br label %if.end, !dbg !7224

if.end:                                           ; preds = %if.then, %for.end14
  ret void, !dbg !7225
}

; Function Attrs: nounwind uwtable
define internal i32 @regno_allocno_order_compare_func(i8* %v1p, i8* %v2p) #5 !dbg !7226 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !7228, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !7229, metadata !DIExpression()), !dbg !7234
  %0 = bitcast i8* %v1p to %struct.ira_allocno**, !dbg !7235
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %0, align 8, !dbg !7236
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !7230, metadata !DIExpression()), !dbg !7234
  %2 = bitcast i8* %v2p to %struct.ira_allocno**, !dbg !7237
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %2, align 8, !dbg !7238
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !7231, metadata !DIExpression()), !dbg !7234
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 6, !dbg !7239
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !7239
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %4, metadata !7232, metadata !DIExpression()), !dbg !7234
  %loop_tree_node1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 6, !dbg !7240
  %5 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node1, align 8, !dbg !7240
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %5, metadata !7233, metadata !DIExpression()), !dbg !7234
  %call = tail call fastcc zeroext i8 @loop_is_inside_p(%struct.ira_loop_tree_node* %4, %struct.ira_loop_tree_node* %5) #7, !dbg !7241
  %tobool = icmp eq i8 %call, 0, !dbg !7241
  br i1 %tobool, label %if.else, label %cleanup, !dbg !7243

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @loop_is_inside_p(%struct.ira_loop_tree_node* %5, %struct.ira_loop_tree_node* %4) #7, !dbg !7244
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7244
  br i1 %tobool3, label %if.end5, label %cleanup, !dbg !7246

if.end5:                                          ; preds = %if.else
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 0, !dbg !7247
  %6 = load i32, i32* %num, align 8, !dbg !7247
  %num6 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !7248
  %7 = load i32, i32* %num6, align 8, !dbg !7248
  %sub = sub nsw i32 %6, %7, !dbg !7249
  br label %cleanup, !dbg !7250

cleanup:                                          ; preds = %if.else, %entry, %if.end5
  %retval.0 = phi i32 [ %sub, %if.end5 ], [ -1, %entry ], [ 1, %if.else ], !dbg !7234
  ret i32 %retval.0, !dbg !7251
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @loop_is_inside_p(%struct.ira_loop_tree_node* %node, %struct.ira_loop_tree_node* %parent) unnamed_addr #5 !dbg !7252 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %node, metadata !7256, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %parent, metadata !7257, metadata !DIExpression()), !dbg !7258
  br label %for.cond, !dbg !7259

for.cond:                                         ; preds = %for.inc, %entry
  %node.pn = phi %struct.ira_loop_tree_node* [ %node, %entry ], [ %node.addr.0, %for.inc ]
  %node.addr.0.in = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %node.pn, i64 0, i32 6, !dbg !7261
  %node.addr.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %node.addr.0.in, align 8, !dbg !7261
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %node.addr.0, metadata !7256, metadata !DIExpression()), !dbg !7258
  %cmp = icmp eq %struct.ira_loop_tree_node* %node.addr.0, null, !dbg !7262
  br i1 %cmp, label %return, label %for.body, !dbg !7264

for.body:                                         ; preds = %for.cond
  %cmp2 = icmp eq %struct.ira_loop_tree_node* %node.addr.0, %parent, !dbg !7265
  br i1 %cmp2, label %return, label %for.inc, !dbg !7267

for.inc:                                          ; preds = %for.body
  br label %for.cond, !dbg !7268, !llvm.loop !7269

return:                                           ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !7258
  ret i8 %retval.0, !dbg !7271
}

declare dso_local void @ira_free_bitmap(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) unnamed_addr #0 !dbg !7272 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %head, metadata !7276, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.value(metadata %struct.bitmap_obstack* @reg_obstack, metadata !7277, metadata !DIExpression()), !dbg !7278
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 1, !dbg !7279
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !7280
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 0, !dbg !7281
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !7282
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 3, !dbg !7283
  store %struct.bitmap_obstack* @reg_obstack, %struct.bitmap_obstack** %obstack1, align 8, !dbg !7284
  ret void, !dbg !7285
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.ira_allocno* @create_cap_allocno(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !7286 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !7290, metadata !DIExpression()), !dbg !7294
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 6, !dbg !7295
  %0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !7295
  %parent1 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %0, i64 0, i32 6, !dbg !7296
  %1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent1, align 8, !dbg !7296
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %1, metadata !7292, metadata !DIExpression()), !dbg !7294
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 1, !dbg !7297
  %2 = load i32, i32* %regno, align 4, !dbg !7297
  %call = tail call %struct.ira_allocno* @ira_create_allocno(i32 %2, i8 zeroext 1, %struct.ira_loop_tree_node* %1) #7, !dbg !7298
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %call, metadata !7291, metadata !DIExpression()), !dbg !7294
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 2, !dbg !7299
  %3 = load i32, i32* %mode, align 8, !dbg !7299
  %mode2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 2, !dbg !7300
  store i32 %3, i32* %mode2, align 8, !dbg !7301
  %cover_class3 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !7302
  %4 = load i32, i32* %cover_class3, align 8, !dbg !7302
  call void @llvm.dbg.value(metadata i32 %4, metadata !7293, metadata !DIExpression()), !dbg !7294
  tail call void @ira_set_allocno_cover_class(%struct.ira_allocno* %call, i32 %4) #7, !dbg !7303
  %available_regs_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 38, !dbg !7304
  %5 = load i32, i32* %available_regs_num, align 4, !dbg !7304
  %available_regs_num4 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 38, !dbg !7305
  store i32 %5, i32* %available_regs_num4, align 4, !dbg !7306
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 17, !dbg !7307
  store %struct.ira_allocno* %a, %struct.ira_allocno** %cap_member, align 8, !dbg !7308
  %cap5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 16, !dbg !7309
  store %struct.ira_allocno* %call, %struct.ira_allocno** %cap5, align 8, !dbg !7310
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 10, !dbg !7311
  %6 = load i32, i32* %cover_class_cost, align 4, !dbg !7311
  %cover_class_cost6 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 10, !dbg !7312
  store i32 %6, i32* %cover_class_cost6, align 4, !dbg !7313
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 12, !dbg !7314
  %7 = load i32, i32* %memory_cost, align 4, !dbg !7314
  %memory_cost7 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 12, !dbg !7315
  store i32 %7, i32* %memory_cost7, align 4, !dbg !7316
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 33, !dbg !7317
  %hard_reg_costs8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 33, !dbg !7318
  %8 = load i32*, i32** %hard_reg_costs8, align 8, !dbg !7318
  tail call fastcc void @ira_allocate_and_copy_costs(i32** nonnull %hard_reg_costs, i32 %4, i32* %8) #7, !dbg !7319
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 35, !dbg !7320
  %conflict_hard_reg_costs9 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 35, !dbg !7321
  %9 = load i32*, i32** %conflict_hard_reg_costs9, align 8, !dbg !7321
  tail call fastcc void @ira_allocate_and_copy_costs(i32** nonnull %conflict_hard_reg_costs, i32 %4, i32* %9) #7, !dbg !7322
  %bad_spill_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !7323
  %bf.load = load i16, i16* %bad_spill_p, align 4, !dbg !7323
  %bf.clear = and i16 %bf.load, 64, !dbg !7323
  %bad_spill_p10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 31, !dbg !7324
  %bf.load11 = load i16, i16* %bad_spill_p10, align 4, !dbg !7325
  %bf.clear12 = and i16 %bf.load11, -65, !dbg !7325
  %bf.set = or i16 %bf.clear12, %bf.clear, !dbg !7325
  store i16 %bf.set, i16* %bad_spill_p10, align 4, !dbg !7325
  %nrefs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 7, !dbg !7326
  %10 = load i32, i32* %nrefs, align 8, !dbg !7326
  %nrefs13 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 7, !dbg !7327
  store i32 %10, i32* %nrefs13, align 8, !dbg !7328
  %freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 8, !dbg !7329
  %11 = load i32, i32* %freq, align 4, !dbg !7329
  %freq14 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 8, !dbg !7330
  store i32 %11, i32* %freq14, align 4, !dbg !7331
  %call_freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 29, !dbg !7332
  %12 = load i32, i32* %call_freq, align 4, !dbg !7332
  %call_freq15 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 29, !dbg !7333
  store i32 %12, i32* %call_freq15, align 4, !dbg !7334
  %conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 26, !dbg !7335
  %13 = load i64, i64* %conflict_hard_regs, align 8, !dbg !7335
  %conflict_hard_regs16 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 26, !dbg !7335
  %14 = load i64, i64* %conflict_hard_regs16, align 8, !dbg !7335
  %or = or i64 %14, %13, !dbg !7335
  store i64 %or, i64* %conflict_hard_regs16, align 8, !dbg !7335
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 27, !dbg !7336
  %15 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !7336
  %total_conflict_hard_regs17 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 27, !dbg !7336
  %16 = load i64, i64* %total_conflict_hard_regs17, align 8, !dbg !7336
  %or18 = or i64 %16, %15, !dbg !7336
  store i64 %or18, i64* %total_conflict_hard_regs17, align 8, !dbg !7336
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 30, !dbg !7337
  %17 = load i32, i32* %calls_crossed_num, align 8, !dbg !7337
  %calls_crossed_num19 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call, i64 0, i32 30, !dbg !7338
  store i32 %17, i32* %calls_crossed_num19, align 8, !dbg !7339
  %bf.load20 = load i16, i16* %bad_spill_p, align 4, !dbg !7340
  %bf.clear22 = and i16 %bf.load20, 16, !dbg !7340
  %bf.clear28 = and i16 %bf.set, -17, !dbg !7341
  %bf.set29 = or i16 %bf.clear28, %bf.clear22, !dbg !7341
  store i16 %bf.set29, i16* %bad_spill_p10, align 4, !dbg !7341
  %bf.load31 = load i16, i16* %bad_spill_p, align 4, !dbg !7342
  %bf.clear33 = and i16 %bf.load31, 32, !dbg !7342
  %bf.clear39 = and i16 %bf.set29, -33, !dbg !7343
  %bf.set40 = or i16 %bf.clear39, %bf.clear33, !dbg !7343
  store i16 %bf.set40, i16* %bad_spill_p10, align 4, !dbg !7343
  %18 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7344
  %cmp = icmp sgt i32 %18, 2, !dbg !7346
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7347
  %cmp42 = icmp ne %struct._IO_FILE* %19, null, !dbg !7348
  %or.cond = and i1 %cmp, %cmp42, !dbg !7349
  br i1 %or.cond, label %if.then, label %if.end, !dbg !7349

if.then:                                          ; preds = %entry
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7350
  tail call void @ira_print_expanded_allocno(%struct.ira_allocno* %call) #7, !dbg !7352
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7353
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !7354
  br label %if.end, !dbg !7355

if.end:                                           ; preds = %if.then, %entry
  ret %struct.ira_allocno* %call, !dbg !7356
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocate_and_copy_costs(i32** %vec, i32 %cover_class, i32* %src) unnamed_addr #0 !dbg !7357 {
entry:
  call void @llvm.dbg.value(metadata i32** %vec, metadata !7359, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !7360, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.value(metadata i32* %src, metadata !7361, metadata !DIExpression()), !dbg !7363
  %0 = load i32*, i32** %vec, align 8, !dbg !7364
  %cmp = icmp ne i32* %0, null, !dbg !7366
  %cmp1 = icmp eq i32* %src, null, !dbg !7367
  %or.cond = or i1 %cmp, %cmp1, !dbg !7368
  br i1 %or.cond, label %cleanup.cont, label %if.end, !dbg !7368

if.end:                                           ; preds = %entry
  %call = tail call i32* @ira_allocate_cost_vector(i32 %cover_class) #7, !dbg !7369
  store i32* %call, i32** %vec, align 8, !dbg !7370
  %idxprom = zext i32 %cover_class to i64, !dbg !7371
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom, !dbg !7371
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7371
  call void @llvm.dbg.value(metadata i32 %1, metadata !7362, metadata !DIExpression()), !dbg !7363
  %.cast = bitcast i32* %call to i8*, !dbg !7372
  %2 = bitcast i32* %src to i8*, !dbg !7373
  %conv = sext i32 %1 to i64, !dbg !7374
  %mul = shl nsw i64 %conv, 2, !dbg !7375
  %call2 = tail call i8* @memcpy(i8* %.cast, i8* %2, i64 %mul) #6, !dbg !7376
  br label %cleanup.cont, !dbg !7377

cleanup.cont:                                     ; preds = %if.end, %entry
  ret void, !dbg !7377
}

; Function Attrs: nounwind uwtable
define internal i32 @allocno_range_compare_func(i8* %v1p, i8* %v2p) #5 !dbg !7378 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !7380, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !7381, metadata !DIExpression()), !dbg !7385
  %0 = bitcast i8* %v1p to %struct.ira_allocno**, !dbg !7386
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %0, align 8, !dbg !7387
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !7383, metadata !DIExpression()), !dbg !7385
  %2 = bitcast i8* %v2p to %struct.ira_allocno**, !dbg !7388
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %2, align 8, !dbg !7389
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !7384, metadata !DIExpression()), !dbg !7385
  %4 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !7390
  %cmp = icmp eq i32 %4, 1, !dbg !7392
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !7393

land.lhs.true:                                    ; preds = %entry
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 9, !dbg !7394
  %5 = load i32, i32* %cover_class, align 8, !dbg !7394
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 9, !dbg !7395
  %6 = load i32, i32* %cover_class1, align 8, !dbg !7395
  %sub = sub i32 %5, %6, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7382, metadata !DIExpression()), !dbg !7385
  %cmp2 = icmp eq i32 %sub, 0, !dbg !7397
  br i1 %cmp2, label %if.end, label %cleanup, !dbg !7398

if.end:                                           ; preds = %land.lhs.true, %entry
  %min = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 21, !dbg !7399
  %7 = load i32, i32* %min, align 8, !dbg !7399
  %min3 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 21, !dbg !7401
  %8 = load i32, i32* %min3, align 8, !dbg !7401
  %sub4 = sub nsw i32 %7, %8, !dbg !7402
  call void @llvm.dbg.value(metadata i32 %sub4, metadata !7382, metadata !DIExpression()), !dbg !7385
  %cmp5 = icmp eq i32 %sub4, 0, !dbg !7403
  br i1 %cmp5, label %if.end7, label %cleanup, !dbg !7404

if.end7:                                          ; preds = %if.end
  %max = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 22, !dbg !7405
  %9 = load i32, i32* %max, align 4, !dbg !7405
  %max8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 22, !dbg !7407
  %10 = load i32, i32* %max8, align 4, !dbg !7407
  %sub9 = sub nsw i32 %9, %10, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %sub9, metadata !7382, metadata !DIExpression()), !dbg !7385
  %cmp10 = icmp eq i32 %sub9, 0, !dbg !7409
  br i1 %cmp10, label %if.end12, label %cleanup, !dbg !7410

if.end12:                                         ; preds = %if.end7
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !7411
  %11 = load i32, i32* %num, align 8, !dbg !7411
  %num13 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 0, !dbg !7412
  %12 = load i32, i32* %num13, align 8, !dbg !7412
  %sub14 = sub nsw i32 %11, %12, !dbg !7413
  br label %cleanup, !dbg !7414

cleanup:                                          ; preds = %land.lhs.true, %if.end7, %if.end, %if.end12
  %retval.0 = phi i32 [ %sub14, %if.end12 ], [ %sub, %land.lhs.true ], [ %sub4, %if.end ], [ %sub9, %if.end7 ], !dbg !7385
  ret i32 %retval.0, !dbg !7415
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ira_copy_t_heap_free(%struct.VEC_ira_copy_t_heap** %vec_) unnamed_addr #0 !dbg !7416 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_copy_t_heap** @copy_vec, metadata !7420, metadata !DIExpression()), !dbg !7421
  %0 = load %struct.VEC_ira_copy_t_heap*, %struct.VEC_ira_copy_t_heap** @copy_vec, align 8, !dbg !7422
  %tobool = icmp eq %struct.VEC_ira_copy_t_heap* %0, null, !dbg !7422
  br i1 %tobool, label %if.end, label %if.then, !dbg !7424

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ira_copy_t_heap* %0 to i8*, !dbg !7424
  tail call void @free(i8* nonnull %1) #6, !dbg !7422
  br label %if.end, !dbg !7422

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ira_copy_t_heap* null, %struct.VEC_ira_copy_t_heap** @copy_vec, align 8, !dbg !7424
  ret void, !dbg !7424
}

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ira_allocno_t_heap_free(%struct.VEC_ira_allocno_t_heap** %vec_) unnamed_addr #0 !dbg !7425 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_heap** %vec_, metadata !7429, metadata !DIExpression()), !dbg !7430
  %0 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !7431
  %tobool = icmp eq %struct.VEC_ira_allocno_t_heap* %0, null, !dbg !7431
  br i1 %tobool, label %if.end, label %if.then, !dbg !7433

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ira_allocno_t_heap* %0 to i8*, !dbg !7433
  tail call void @free(i8* nonnull %1) #6, !dbg !7431
  br label %if.end, !dbg !7431

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ira_allocno_t_heap* null, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !7433
  ret void, !dbg !7433
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1938, !1939, !1940}
!llvm.ident = !{!1941}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "allocno_pool", scope: !2, file: !3, line: 386, type: !1886, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !563, globals: !1862, nameTableKind: None)
!3 = !DIFile(filename: "ira-build.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !143, !147, !153, !158, !163, !182, !189, !196, !390, !420}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !135, line: 31, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142}
!137 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !135, line: 91, baseType: !7, size: 32, elements: !144)
!144 = !{!145, !146}
!145 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !148, line: 363, baseType: !7, size: 32, elements: !149)
!148 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!149 = !{!150, !151, !152}
!150 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !148, line: 355, baseType: !7, size: 32, elements: !154)
!154 = !{!155, !156, !157}
!155 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !159, line: 474, baseType: !7, size: 32, elements: !160)
!159 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !164, line: 280, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!166 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !164, line: 1817, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188}
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !164, line: 1805, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !164, line: 39, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!198 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!228 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!229 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!230 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!231 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!232 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!233 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!234 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!235 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!236 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!237 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!238 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!239 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!241 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!242 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!243 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!244 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!245 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!246 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!247 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!248 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!249 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!250 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!251 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!252 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!253 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!254 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!255 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!256 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!257 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!258 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!259 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!260 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!261 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!262 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!263 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!264 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!265 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!266 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!267 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!268 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!269 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!270 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!271 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!272 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!273 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!274 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!275 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!276 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!277 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!278 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!280 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!281 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!282 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!283 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!284 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!287 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!288 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!293 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!294 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!295 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!296 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!297 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!298 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!299 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!300 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!301 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!302 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!303 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!304 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!305 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!306 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!307 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!308 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!309 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!310 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!311 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!312 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!313 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!314 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!315 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!316 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!317 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!318 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!320 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!321 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!322 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!323 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!324 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!325 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!326 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!327 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!328 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!329 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!330 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!331 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!332 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!333 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!334 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!335 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!336 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!337 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!338 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!339 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!340 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!341 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!342 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!343 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!344 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!345 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!346 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!347 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!348 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!349 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!350 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!363 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!364 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!365 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!366 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!367 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!383 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!384 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!385 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!386 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!387 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!388 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!389 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !159, line: 1188, baseType: !7, size: 32, elements: !391)
!391 = !{!392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419}
!392 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!393 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!394 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!395 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!396 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!397 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!398 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!399 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!400 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!401 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!402 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!403 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!404 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!405 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!406 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!407 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!408 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!409 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!410 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!411 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!412 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!413 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!414 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!415 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!416 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!417 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!418 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!419 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!420 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !421, line: 45, baseType: !7, size: 32, elements: !422)
!421 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!422 = !{!423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!423 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!424 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!425 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!426 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!427 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!428 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!429 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!430 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!431 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!432 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!433 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!434 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!435 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!436 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!437 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!438 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!439 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!440 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!441 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!442 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!443 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!444 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!445 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!446 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!447 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!448 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!449 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!450 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!451 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!452 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!453 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!454 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!455 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!456 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!457 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!458 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!459 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!460 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!461 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!462 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!463 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!464 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!465 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!466 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!467 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!468 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!469 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!470 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!471 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!472 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!473 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!474 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!475 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!476 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!477 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!478 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!479 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!480 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!481 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!482 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!483 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!484 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!485 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!486 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!487 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!488 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!489 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!490 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!491 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!492 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!493 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!494 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!495 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!496 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!497 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!498 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!499 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!500 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!501 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!502 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!503 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!504 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!505 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!506 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!507 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!508 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!509 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!510 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!511 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!512 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!513 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!514 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!515 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!516 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!517 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!518 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!519 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!520 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!521 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!522 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!523 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!524 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!525 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!526 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!527 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!528 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!529 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!530 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!531 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!532 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!533 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!534 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!535 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!536 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!537 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!538 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!539 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!540 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!541 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!542 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!543 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!544 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!545 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!546 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!547 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!548 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!549 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!550 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!551 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!552 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!553 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!554 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!555 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!556 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!557 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!558 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!559 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!560 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!561 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!562 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!563 = !{!564, !565, !566, !567, !570, !571, !573, !5, !1727, !1767, !1747, !1803, !1812, !7, !1824, !568, !670, !1825, !1025, !1714, !973, !420, !1837, !1845, !1846, !1848, !1860}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!566 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_allocno_t", file: !574, line: 63, baseType: !575)
!574 = !DIFile(filename: "./ira-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno", file: !574, line: 232, size: 1984, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !1711, !1712, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1762, !1763, !1764, !1765, !1766, !1777, !1778, !1779, !1780, !1781, !1782, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !576, file: !574, line: 237, baseType: !566, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !576, file: !574, line: 239, baseType: !566, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !576, file: !574, line: 242, baseType: !5, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "hard_regno", scope: !576, file: !574, line: 249, baseType: !566, size: 32, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !576, file: !574, line: 251, baseType: !583, size: 64, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !584, line: 50, baseType: !585)
!584 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !421, line: 240, size: 384, elements: !587)
!587 = !{!588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !586, file: !421, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !586, file: !421, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !586, file: !421, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !586, file: !421, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !586, file: !421, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !586, file: !421, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !586, file: !421, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !586, file: !421, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !586, file: !421, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !586, file: !421, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !586, file: !421, line: 321, baseType: !599, size: 320, offset: 64)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !421, line: 315, size: 320, elements: !600)
!600 = !{!601, !1646, !1648, !1709, !1710}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !599, file: !421, line: 316, baseType: !602, size: 64)
!602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 64, elements: !618)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !421, line: 183, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !421, line: 166, size: 64, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !620, !621, !633, !636, !698, !1624, !1625, !1636, !1643}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !604, file: !421, line: 168, baseType: !566, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !604, file: !421, line: 169, baseType: !7, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !604, file: !421, line: 170, baseType: !571, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !604, file: !421, line: 171, baseType: !583, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !604, file: !421, line: 172, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !584, line: 53, baseType: !612)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !421, line: 359, size: 128, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !613, file: !421, line: 360, baseType: !566, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !613, file: !421, line: 361, baseType: !617, size: 64, offset: 64)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !583, size: 64, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 1)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !604, file: !421, line: 173, baseType: !5, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !604, file: !421, line: 174, baseType: !622, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !421, line: 133, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !421, line: 115, size: 32, elements: !624)
!624 = !{!625, !626, !627, !628, !629, !630, !631, !632}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !623, file: !421, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !623, file: !421, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !623, file: !421, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !623, file: !421, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !623, file: !421, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !623, file: !421, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !623, file: !421, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !623, file: !421, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !604, file: !421, line: 175, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !421, line: 175, flags: DIFlagFwdDecl)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !604, file: !421, line: 176, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !639, line: 75, size: 256, elements: !640)
!639 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!640 = !{!641, !656, !657, !658}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !638, file: !639, line: 76, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !639, line: 68, baseType: !644)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !639, line: 63, size: 320, elements: !645)
!645 = !{!646, !648, !649, !650}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !644, file: !639, line: 64, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !644, file: !639, line: 65, baseType: !647, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !644, file: !639, line: 66, baseType: !7, size: 32, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !644, file: !639, line: 67, baseType: !651, size: 128, offset: 192)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 128, elements: !654)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !639, line: 29, baseType: !653)
!653 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!654 = !{!655}
!655 = !DISubrange(count: 2)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !638, file: !639, line: 77, baseType: !642, size: 64, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !638, file: !639, line: 78, baseType: !7, size: 32, offset: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !638, file: !639, line: 79, baseType: !659, size: 64, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !639, line: 49, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !639, line: 45, size: 832, elements: !662)
!662 = !{!663, !664, !665}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !661, file: !639, line: 46, baseType: !647, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !661, file: !639, line: 47, baseType: !637, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !661, file: !639, line: 48, baseType: !666, size: 704, offset: 128)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !667, line: 164, size: 704, elements: !668)
!667 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!668 = !{!669, !671, !681, !682, !683, !684, !685, !686, !690, !694, !695, !696, !697}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !666, file: !667, line: 166, baseType: !670, size: 64)
!670 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !666, file: !667, line: 167, baseType: !672, size: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !667, line: 157, size: 192, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !673, file: !667, line: 159, baseType: !568, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !673, file: !667, line: 160, baseType: !672, size: 64, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !673, file: !667, line: 161, baseType: !678, size: 32, offset: 128)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 32, elements: !679)
!679 = !{!680}
!680 = !DISubrange(count: 4)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !666, file: !667, line: 168, baseType: !568, size: 64, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !666, file: !667, line: 169, baseType: !568, size: 64, offset: 192)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !666, file: !667, line: 170, baseType: !568, size: 64, offset: 256)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !666, file: !667, line: 171, baseType: !670, size: 64, offset: 320)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !666, file: !667, line: 172, baseType: !566, size: 32, offset: 384)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !666, file: !667, line: 176, baseType: !687, size: 64, offset: 448)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!672, !570, !670}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !666, file: !667, line: 177, baseType: !691, size: 64, offset: 512)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !570, !672}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !666, file: !667, line: 178, baseType: !570, size: 64, offset: 576)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !666, file: !667, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !666, file: !667, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !666, file: !667, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !604, file: !421, line: 177, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !584, line: 56, baseType: !700)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !164, line: 3371, size: 1792, elements: !702)
!702 = !{!703, !736, !742, !753, !772, !783, !788, !795, !801, !814, !826, !864, !869, !897, !905, !906, !911, !920, !926, !931, !935, !939, !1251, !1300, !1306, !1313, !1320, !1343, !1368, !1385, !1397, !1419, !1434, !1606}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !701, file: !164, line: 3372, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !164, line: 360, size: 64, elements: !705)
!705 = !{!706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !704, file: !164, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !704, file: !164, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !704, file: !164, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !704, file: !164, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !704, file: !164, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !704, file: !164, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !704, file: !164, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !704, file: !164, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !704, file: !164, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !704, file: !164, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !704, file: !164, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !704, file: !164, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !704, file: !164, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !704, file: !164, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !704, file: !164, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !704, file: !164, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !704, file: !164, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !704, file: !164, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !704, file: !164, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !704, file: !164, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !704, file: !164, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !704, file: !164, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !704, file: !164, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !704, file: !164, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !704, file: !164, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !704, file: !164, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !704, file: !164, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !704, file: !164, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !704, file: !164, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !704, file: !164, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !701, file: !164, line: 3373, baseType: !737, size: 192)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !164, line: 402, size: 192, elements: !738)
!738 = !{!739, !740, !741}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !737, file: !164, line: 403, baseType: !704, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !737, file: !164, line: 404, baseType: !699, size: 64, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !737, file: !164, line: 405, baseType: !699, size: 64, offset: 128)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !701, file: !164, line: 3374, baseType: !743, size: 320)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !164, line: 1384, size: 320, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !743, file: !164, line: 1385, baseType: !737, size: 192)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !743, file: !164, line: 1386, baseType: !747, size: 128, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !748, line: 58, baseType: !749)
!748 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !748, line: 54, size: 128, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !749, file: !748, line: 56, baseType: !653, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !749, file: !748, line: 57, baseType: !670, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !701, file: !164, line: 3375, baseType: !754, size: 256)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !164, line: 1397, size: 256, elements: !755)
!755 = !{!756, !757}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !754, file: !164, line: 1398, baseType: !737, size: 192)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !754, file: !164, line: 1399, baseType: !758, size: 64, offset: 192)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !760, line: 52, size: 256, elements: !761)
!760 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!761 = !{!762, !763, !764, !765, !766, !767, !768}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !759, file: !760, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !759, file: !760, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !759, file: !760, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !759, file: !760, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !759, file: !760, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !759, file: !760, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !759, file: !760, line: 62, baseType: !769, size: 192, offset: 64)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !653, size: 192, elements: !770)
!770 = !{!771}
!771 = !DISubrange(count: 3)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !701, file: !164, line: 3376, baseType: !773, size: 256)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !164, line: 1408, size: 256, elements: !774)
!774 = !{!775, !776}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !773, file: !164, line: 1409, baseType: !737, size: 192)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !773, file: !164, line: 1410, baseType: !777, size: 64, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !779, line: 27, size: 192, elements: !780)
!779 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!780 = !{!781, !782}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !778, file: !779, line: 29, baseType: !747, size: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !778, file: !779, line: 30, baseType: !5, size: 32, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !701, file: !164, line: 3377, baseType: !784, size: 256)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !164, line: 1437, size: 256, elements: !785)
!785 = !{!786, !787}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !784, file: !164, line: 1438, baseType: !737, size: 192)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !784, file: !164, line: 1439, baseType: !699, size: 64, offset: 192)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !701, file: !164, line: 3378, baseType: !789, size: 256)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !164, line: 1418, size: 256, elements: !790)
!790 = !{!791, !792, !793}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !789, file: !164, line: 1419, baseType: !737, size: 192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !789, file: !164, line: 1420, baseType: !566, size: 32, offset: 192)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !789, file: !164, line: 1421, baseType: !794, size: 8, offset: 224)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 8, elements: !618)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !701, file: !164, line: 3379, baseType: !796, size: 320)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !164, line: 1428, size: 320, elements: !797)
!797 = !{!798, !799, !800}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !796, file: !164, line: 1429, baseType: !737, size: 192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !796, file: !164, line: 1430, baseType: !699, size: 64, offset: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !796, file: !164, line: 1431, baseType: !699, size: 64, offset: 256)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !701, file: !164, line: 3380, baseType: !802, size: 320)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !164, line: 1460, size: 320, elements: !803)
!803 = !{!804, !805}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !802, file: !164, line: 1461, baseType: !737, size: 192)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !802, file: !164, line: 1462, baseType: !806, size: 128, offset: 192)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !807, line: 31, size: 128, elements: !808)
!807 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!808 = !{!809, !812, !813}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !806, file: !807, line: 32, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !806, file: !807, line: 33, baseType: !7, size: 32, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !806, file: !807, line: 34, baseType: !7, size: 32, offset: 96)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !701, file: !164, line: 3381, baseType: !815, size: 384)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !164, line: 2507, size: 384, elements: !816)
!816 = !{!817, !818, !823, !824, !825}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !815, file: !164, line: 2508, baseType: !737, size: 192)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !815, file: !164, line: 2509, baseType: !819, size: 32, offset: 192)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !820, line: 58, baseType: !821)
!820 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !822, line: 44, baseType: !7)
!822 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!823 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !815, file: !164, line: 2510, baseType: !7, size: 32, offset: 224)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !815, file: !164, line: 2511, baseType: !699, size: 64, offset: 256)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !815, file: !164, line: 2512, baseType: !699, size: 64, offset: 320)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !701, file: !164, line: 3382, baseType: !827, size: 896)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !164, line: 2652, size: 896, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !827, file: !164, line: 2653, baseType: !815, size: 384)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !827, file: !164, line: 2654, baseType: !699, size: 64, offset: 384)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !827, file: !164, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !827, file: !164, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !827, file: !164, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !827, file: !164, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !827, file: !164, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !827, file: !164, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !827, file: !164, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !827, file: !164, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !827, file: !164, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !827, file: !164, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !827, file: !164, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !827, file: !164, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !827, file: !164, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !827, file: !164, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !827, file: !164, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !827, file: !164, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !827, file: !164, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !827, file: !164, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !827, file: !164, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !827, file: !164, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !827, file: !164, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !827, file: !164, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !827, file: !164, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !827, file: !164, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !827, file: !164, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !827, file: !164, line: 2703, baseType: !7, size: 32, offset: 512)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !827, file: !164, line: 2705, baseType: !699, size: 64, offset: 576)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !827, file: !164, line: 2706, baseType: !699, size: 64, offset: 640)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !827, file: !164, line: 2707, baseType: !699, size: 64, offset: 704)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !827, file: !164, line: 2708, baseType: !699, size: 64, offset: 768)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !827, file: !164, line: 2711, baseType: !862, size: 64, offset: 832)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !164, line: 2711, flags: DIFlagFwdDecl)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !701, file: !164, line: 3383, baseType: !865, size: 960)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !164, line: 2756, size: 960, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !865, file: !164, line: 2757, baseType: !827, size: 896)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !865, file: !164, line: 2758, baseType: !583, size: 64, offset: 896)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !701, file: !164, line: 3384, baseType: !870, size: 1472)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !164, line: 3114, size: 1472, elements: !871)
!871 = !{!872, !893, !894, !895, !896}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !870, file: !164, line: 3115, baseType: !873, size: 1216)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !164, line: 2984, size: 1216, elements: !874)
!874 = !{!875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !873, file: !164, line: 2985, baseType: !865, size: 960)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !873, file: !164, line: 2986, baseType: !699, size: 64, offset: 960)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !873, file: !164, line: 2987, baseType: !699, size: 64, offset: 1024)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !873, file: !164, line: 2988, baseType: !699, size: 64, offset: 1088)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !873, file: !164, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !873, file: !164, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !873, file: !164, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !873, file: !164, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !873, file: !164, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !873, file: !164, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !873, file: !164, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !873, file: !164, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !873, file: !164, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !873, file: !164, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !873, file: !164, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !873, file: !164, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !873, file: !164, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !873, file: !164, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !870, file: !164, line: 3117, baseType: !699, size: 64, offset: 1216)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !870, file: !164, line: 3119, baseType: !699, size: 64, offset: 1280)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !870, file: !164, line: 3121, baseType: !699, size: 64, offset: 1344)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !870, file: !164, line: 3123, baseType: !699, size: 64, offset: 1408)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !701, file: !164, line: 3385, baseType: !898, size: 1088)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !164, line: 2874, size: 1088, elements: !899)
!899 = !{!900, !901, !902}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !898, file: !164, line: 2875, baseType: !865, size: 960)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !898, file: !164, line: 2876, baseType: !583, size: 64, offset: 960)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !898, file: !164, line: 2877, baseType: !903, size: 64, offset: 1024)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !164, line: 2856, flags: DIFlagFwdDecl)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !701, file: !164, line: 3386, baseType: !873, size: 1216)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !701, file: !164, line: 3387, baseType: !907, size: 1280)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !164, line: 3093, size: 1280, elements: !908)
!908 = !{!909, !910}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !907, file: !164, line: 3094, baseType: !873, size: 1216)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !907, file: !164, line: 3095, baseType: !903, size: 64, offset: 1216)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !701, file: !164, line: 3388, baseType: !912, size: 1216)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !164, line: 2824, size: 1216, elements: !913)
!913 = !{!914, !915, !916, !917, !918, !919}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !912, file: !164, line: 2825, baseType: !827, size: 896)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !912, file: !164, line: 2827, baseType: !699, size: 64, offset: 896)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !912, file: !164, line: 2828, baseType: !699, size: 64, offset: 960)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !912, file: !164, line: 2829, baseType: !699, size: 64, offset: 1024)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !912, file: !164, line: 2830, baseType: !699, size: 64, offset: 1088)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !912, file: !164, line: 2831, baseType: !699, size: 64, offset: 1152)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !701, file: !164, line: 3389, baseType: !921, size: 1024)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !164, line: 2850, size: 1024, elements: !922)
!922 = !{!923, !924, !925}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !921, file: !164, line: 2851, baseType: !865, size: 960)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !921, file: !164, line: 2852, baseType: !566, size: 32, offset: 960)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !921, file: !164, line: 2853, baseType: !566, size: 32, offset: 992)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !701, file: !164, line: 3390, baseType: !927, size: 1024)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !164, line: 2857, size: 1024, elements: !928)
!928 = !{!929, !930}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !927, file: !164, line: 2858, baseType: !865, size: 960)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !927, file: !164, line: 2859, baseType: !903, size: 64, offset: 960)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !701, file: !164, line: 3391, baseType: !932, size: 960)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !164, line: 2862, size: 960, elements: !933)
!933 = !{!934}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !932, file: !164, line: 2863, baseType: !865, size: 960)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !701, file: !164, line: 3392, baseType: !936, size: 1472)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !164, line: 3304, size: 1472, elements: !937)
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !936, file: !164, line: 3305, baseType: !870, size: 1472)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !701, file: !164, line: 3393, baseType: !940, size: 1792)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !164, line: 3248, size: 1792, elements: !941)
!941 = !{!942, !943, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !940, file: !164, line: 3249, baseType: !870, size: 1472)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !940, file: !164, line: 3251, baseType: !944, size: 64, offset: 1472)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !946, line: 463, size: 1152, elements: !947)
!946 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!947 = !{!948, !951, !1111, !1112, !1115, !1174, !1175, !1176, !1177, !1178, !1179, !1203, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !945, file: !946, line: 464, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !946, line: 464, flags: DIFlagFwdDecl)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !945, file: !946, line: 467, baseType: !952, size: 64, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !148, line: 374, size: 640, elements: !954)
!954 = !{!955, !1086, !1087, !1100, !1101, !1102, !1103, !1104, !1105, !1107, !1109, !1110}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !953, file: !148, line: 377, baseType: !956, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !584, line: 111, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !148, line: 217, size: 832, elements: !959)
!959 = !{!960, !995, !996, !997, !1056, !1060, !1061, !1062, !1080, !1081, !1082, !1083, !1084, !1085}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !958, file: !148, line: 219, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !148, line: 151, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !148, line: 151, size: 128, elements: !964)
!964 = !{!965}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !963, file: !148, line: 151, baseType: !966, size: 128)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !148, line: 150, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !148, line: 150, size: 128, elements: !968)
!968 = !{!969, !970, !971}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !967, file: !148, line: 150, baseType: !7, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !967, file: !148, line: 150, baseType: !7, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !967, file: !148, line: 150, baseType: !972, size: 64, offset: 64)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 64, elements: !618)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !584, line: 108, baseType: !974)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !148, line: 122, size: 512, elements: !976)
!976 = !{!977, !978, !979, !987, !988, !989, !990, !991, !992, !993}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !975, file: !148, line: 124, baseType: !957, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !975, file: !148, line: 125, baseType: !957, size: 64, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !975, file: !148, line: 131, baseType: !980, size: 64, offset: 128)
!980 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !148, line: 128, size: 64, elements: !981)
!981 = !{!982, !986}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !980, file: !148, line: 129, baseType: !983, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !584, line: 66, baseType: !984)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !584, line: 65, flags: DIFlagFwdDecl)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !980, file: !148, line: 130, baseType: !583, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !975, file: !148, line: 134, baseType: !570, size: 64, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !975, file: !148, line: 137, baseType: !699, size: 64, offset: 256)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !975, file: !148, line: 138, baseType: !819, size: 32, offset: 320)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !975, file: !148, line: 142, baseType: !7, size: 32, offset: 352)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !975, file: !148, line: 144, baseType: !566, size: 32, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !975, file: !148, line: 145, baseType: !566, size: 32, offset: 416)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !975, file: !148, line: 146, baseType: !994, size: 64, offset: 448)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !148, line: 119, baseType: !670)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !958, file: !148, line: 220, baseType: !961, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !958, file: !148, line: 223, baseType: !570, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !958, file: !148, line: 226, baseType: !998, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 100, size: 1216, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1010, !1011, !1012, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1046, !1054, !1055}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !999, file: !135, line: 102, baseType: !566, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !999, file: !135, line: 105, baseType: !7, size: 32, offset: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !999, file: !135, line: 108, baseType: !957, size: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !999, file: !135, line: 111, baseType: !957, size: 64, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !999, file: !135, line: 114, baseType: !1006, size: 64, offset: 192)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !135, line: 41, size: 64, elements: !1007)
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1006, file: !135, line: 42, baseType: !134, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1006, file: !135, line: 43, baseType: !7, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !999, file: !135, line: 117, baseType: !7, size: 32, offset: 256)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !999, file: !135, line: 120, baseType: !7, size: 32, offset: 288)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !999, file: !135, line: 123, baseType: !1013, size: 64, offset: 320)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !135, line: 87, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !135, line: 87, size: 128, elements: !1016)
!1016 = !{!1017}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1015, file: !135, line: 87, baseType: !1018, size: 128)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !135, line: 85, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !135, line: 85, size: 128, elements: !1020)
!1020 = !{!1021, !1022, !1023}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1019, file: !135, line: 85, baseType: !7, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1019, file: !135, line: 85, baseType: !7, size: 32, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1019, file: !135, line: 85, baseType: !1024, size: 64, offset: 64)
!1024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 64, elements: !618)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !135, line: 84, baseType: !998)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !999, file: !135, line: 126, baseType: !998, size: 64, offset: 384)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !999, file: !135, line: 129, baseType: !998, size: 64, offset: 448)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !999, file: !135, line: 132, baseType: !570, size: 64, offset: 512)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !999, file: !135, line: 139, baseType: !699, size: 64, offset: 576)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !999, file: !135, line: 143, baseType: !747, size: 128, offset: 640)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !999, file: !135, line: 146, baseType: !747, size: 128, offset: 768)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !999, file: !135, line: 148, baseType: !565, size: 8, offset: 896)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !999, file: !135, line: 149, baseType: !565, size: 8, offset: 904)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !999, file: !135, line: 153, baseType: !143, size: 32, offset: 928)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !999, file: !135, line: 156, baseType: !1036, size: 64, offset: 960)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !135, line: 48, size: 320, elements: !1038)
!1038 = !{!1039, !1043, !1044, !1045}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1037, file: !135, line: 50, baseType: !1040, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !584, line: 58, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !584, line: 57, flags: DIFlagFwdDecl)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1037, file: !135, line: 59, baseType: !747, size: 128, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1037, file: !135, line: 64, baseType: !565, size: 8, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1037, file: !135, line: 67, baseType: !1036, size: 64, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !999, file: !135, line: 159, baseType: !1047, size: 64, offset: 1024)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !135, line: 72, size: 256, elements: !1049)
!1049 = !{!1050, !1051, !1052, !1053}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1048, file: !135, line: 74, baseType: !974, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1048, file: !135, line: 77, baseType: !1047, size: 64, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1048, file: !135, line: 78, baseType: !1047, size: 64, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1048, file: !135, line: 81, baseType: !1047, size: 64, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !999, file: !135, line: 162, baseType: !565, size: 8, offset: 1088)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !999, file: !135, line: 166, baseType: !699, size: 64, offset: 1152)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !958, file: !148, line: 229, baseType: !1057, size: 128, offset: 256)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 128, elements: !654)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !148, line: 229, flags: DIFlagFwdDecl)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !958, file: !148, line: 232, baseType: !957, size: 64, offset: 384)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !958, file: !148, line: 233, baseType: !957, size: 64, offset: 448)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !958, file: !148, line: 238, baseType: !1063, size: 64, offset: 512)
!1063 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !148, line: 235, size: 64, elements: !1064)
!1064 = !{!1065, !1071}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1063, file: !148, line: 236, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !148, line: 273, size: 128, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1067, file: !148, line: 275, baseType: !983, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1067, file: !148, line: 278, baseType: !983, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1063, file: !148, line: 237, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !148, line: 259, size: 320, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1073, file: !148, line: 261, baseType: !583, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1073, file: !148, line: 262, baseType: !583, size: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1073, file: !148, line: 266, baseType: !583, size: 64, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1073, file: !148, line: 267, baseType: !583, size: 64, offset: 192)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1073, file: !148, line: 270, baseType: !566, size: 32, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !958, file: !148, line: 241, baseType: !994, size: 64, offset: 576)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !958, file: !148, line: 244, baseType: !566, size: 32, offset: 640)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !958, file: !148, line: 247, baseType: !566, size: 32, offset: 672)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !958, file: !148, line: 250, baseType: !566, size: 32, offset: 704)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !958, file: !148, line: 253, baseType: !566, size: 32, offset: 736)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !958, file: !148, line: 256, baseType: !566, size: 32, offset: 768)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !953, file: !148, line: 378, baseType: !956, size: 64, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !953, file: !148, line: 381, baseType: !1088, size: 64, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !148, line: 282, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !148, line: 282, size: 128, elements: !1091)
!1091 = !{!1092}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1090, file: !148, line: 282, baseType: !1093, size: 128)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !148, line: 281, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !148, line: 281, size: 128, elements: !1095)
!1095 = !{!1096, !1097, !1098}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1094, file: !148, line: 281, baseType: !7, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1094, file: !148, line: 281, baseType: !7, size: 32, offset: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1094, file: !148, line: 281, baseType: !1099, size: 64, offset: 64)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 64, elements: !618)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !953, file: !148, line: 384, baseType: !566, size: 32, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !953, file: !148, line: 387, baseType: !566, size: 32, offset: 224)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !953, file: !148, line: 390, baseType: !566, size: 32, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !953, file: !148, line: 394, baseType: !1088, size: 64, offset: 320)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !953, file: !148, line: 396, baseType: !147, size: 32, offset: 384)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !953, file: !148, line: 399, baseType: !1106, size: 64, offset: 416)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 64, elements: !654)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !953, file: !148, line: 402, baseType: !1108, size: 64, offset: 480)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !654)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !953, file: !148, line: 406, baseType: !566, size: 32, offset: 544)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !953, file: !148, line: 409, baseType: !566, size: 32, offset: 576)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !945, file: !946, line: 470, baseType: !984, size: 64, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !945, file: !946, line: 473, baseType: !1113, size: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !946, line: 166, flags: DIFlagFwdDecl)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !945, file: !946, line: 476, baseType: !1116, size: 64, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !135, line: 187, size: 256, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1173}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1117, file: !135, line: 189, baseType: !566, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1117, file: !135, line: 192, baseType: !1013, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1117, file: !135, line: 197, baseType: !1122, size: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1123, line: 144, baseType: !1124)
!1123 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1123, line: 100, size: 896, elements: !1126)
!1126 = !{!1127, !1135, !1140, !1145, !1147, !1150, !1151, !1152, !1153, !1154, !1159, !1161, !1162, !1167, !1172}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1125, file: !1123, line: 102, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1123, line: 52, baseType: !1129)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!1132, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1123, line: 47, baseType: !7)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1125, file: !1123, line: 105, baseType: !1136, size: 64, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1123, line: 59, baseType: !1137)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!566, !1133, !1133}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1125, file: !1123, line: 108, baseType: !1141, size: 64, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1123, line: 63, baseType: !1142)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !570}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1125, file: !1123, line: 111, baseType: !1146, size: 64, offset: 192)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1125, file: !1123, line: 114, baseType: !1148, size: 64, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1149, line: 46, baseType: !653)
!1149 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1125, file: !1123, line: 117, baseType: !1148, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1125, file: !1123, line: 120, baseType: !1148, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1125, file: !1123, line: 124, baseType: !7, size: 32, offset: 448)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1125, file: !1123, line: 128, baseType: !7, size: 32, offset: 480)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1125, file: !1123, line: 131, baseType: !1155, size: 64, offset: 512)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1123, line: 75, baseType: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!570, !1148, !1148}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1125, file: !1123, line: 132, baseType: !1160, size: 64, offset: 576)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1123, line: 78, baseType: !1142)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1125, file: !1123, line: 135, baseType: !570, size: 64, offset: 640)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1125, file: !1123, line: 136, baseType: !1163, size: 64, offset: 704)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1123, line: 82, baseType: !1164)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!570, !570, !1148, !1148}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1125, file: !1123, line: 137, baseType: !1168, size: 64, offset: 768)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1123, line: 83, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{null, !570, !570}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1125, file: !1123, line: 141, baseType: !7, size: 32, offset: 832)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1117, file: !135, line: 200, baseType: !998, size: 64, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !945, file: !946, line: 479, baseType: !1122, size: 64, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !945, file: !946, line: 484, baseType: !699, size: 64, offset: 384)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !945, file: !946, line: 488, baseType: !699, size: 64, offset: 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !945, file: !946, line: 493, baseType: !699, size: 64, offset: 512)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !945, file: !946, line: 496, baseType: !699, size: 64, offset: 576)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !945, file: !946, line: 501, baseType: !1180, size: 64, offset: 640)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !159, line: 2355, size: 576, elements: !1182)
!1182 = !{!1183, !1186, !1187, !1188, !1189, !1191, !1192, !1197, !1198, !1199, !1200, !1201, !1202}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1181, file: !159, line: 2356, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !159, line: 2356, flags: DIFlagFwdDecl)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1181, file: !159, line: 2357, baseType: !571, size: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1181, file: !159, line: 2358, baseType: !566, size: 32, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1181, file: !159, line: 2359, baseType: !566, size: 32, offset: 160)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1181, file: !159, line: 2360, baseType: !1190, size: 128, offset: 192)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 128, elements: !679)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1181, file: !159, line: 2364, baseType: !566, size: 32, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1181, file: !159, line: 2367, baseType: !1193, size: 128, offset: 384)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !159, line: 2349, size: 128, elements: !1194)
!1194 = !{!1195, !1196}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1193, file: !159, line: 2351, baseType: !583, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1193, file: !159, line: 2352, baseType: !670, size: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1181, file: !159, line: 2371, baseType: !158, size: 32, offset: 512)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1181, file: !159, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1181, file: !159, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1181, file: !159, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1181, file: !159, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1181, file: !159, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !945, file: !946, line: 504, baseType: !1204, size: 64, offset: 704)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !946, line: 504, flags: DIFlagFwdDecl)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !945, file: !946, line: 507, baseType: !1122, size: 64, offset: 768)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !945, file: !946, line: 510, baseType: !566, size: 32, offset: 832)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !945, file: !946, line: 513, baseType: !566, size: 32, offset: 864)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !945, file: !946, line: 516, baseType: !819, size: 32, offset: 896)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !945, file: !946, line: 519, baseType: !819, size: 32, offset: 928)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !945, file: !946, line: 522, baseType: !7, size: 32, offset: 960)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !945, file: !946, line: 523, baseType: !7, size: 32, offset: 992)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !945, file: !946, line: 528, baseType: !571, size: 64, offset: 1024)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !945, file: !946, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !945, file: !946, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !945, file: !946, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !945, file: !946, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !945, file: !946, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !945, file: !946, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !945, file: !946, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !945, file: !946, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !945, file: !946, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !945, file: !946, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !945, file: !946, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !945, file: !946, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !945, file: !946, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !945, file: !946, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !945, file: !946, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !945, file: !946, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !940, file: !164, line: 3254, baseType: !699, size: 64, offset: 1536)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !940, file: !164, line: 3257, baseType: !699, size: 64, offset: 1600)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !940, file: !164, line: 3258, baseType: !699, size: 64, offset: 1664)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !940, file: !164, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !940, file: !164, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !940, file: !164, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !940, file: !164, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !940, file: !164, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !940, file: !164, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !940, file: !164, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !940, file: !164, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !940, file: !164, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !940, file: !164, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !940, file: !164, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !940, file: !164, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !940, file: !164, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !940, file: !164, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !940, file: !164, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !940, file: !164, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !940, file: !164, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !940, file: !164, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !701, file: !164, line: 3394, baseType: !1252, size: 1344)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !164, line: 2279, size: 1344, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1279, !1280, !1281, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1252, file: !164, line: 2280, baseType: !737, size: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1252, file: !164, line: 2281, baseType: !699, size: 64, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1252, file: !164, line: 2282, baseType: !699, size: 64, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1252, file: !164, line: 2283, baseType: !699, size: 64, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1252, file: !164, line: 2284, baseType: !699, size: 64, offset: 384)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1252, file: !164, line: 2285, baseType: !7, size: 32, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1252, file: !164, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1252, file: !164, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1252, file: !164, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1252, file: !164, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1252, file: !164, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1252, file: !164, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1252, file: !164, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1252, file: !164, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1252, file: !164, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1252, file: !164, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1252, file: !164, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1252, file: !164, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1252, file: !164, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1252, file: !164, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1252, file: !164, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1252, file: !164, line: 2305, baseType: !7, size: 32, offset: 512)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1252, file: !164, line: 2306, baseType: !1277, size: 32, offset: 544)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1278, line: 31, baseType: !566)
!1278 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1252, file: !164, line: 2307, baseType: !699, size: 64, offset: 576)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1252, file: !164, line: 2308, baseType: !699, size: 64, offset: 640)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1252, file: !164, line: 2314, baseType: !1282, size: 64, offset: 704)
!1282 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !164, line: 2309, size: 64, elements: !1283)
!1283 = !{!1284, !1285, !1286}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1282, file: !164, line: 2310, baseType: !566, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1282, file: !164, line: 2311, baseType: !571, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1282, file: !164, line: 2312, baseType: !1287, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !164, line: 2277, flags: DIFlagFwdDecl)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1252, file: !164, line: 2315, baseType: !699, size: 64, offset: 768)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1252, file: !164, line: 2316, baseType: !699, size: 64, offset: 832)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1252, file: !164, line: 2317, baseType: !699, size: 64, offset: 896)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1252, file: !164, line: 2318, baseType: !699, size: 64, offset: 960)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1252, file: !164, line: 2319, baseType: !699, size: 64, offset: 1024)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1252, file: !164, line: 2320, baseType: !699, size: 64, offset: 1088)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1252, file: !164, line: 2321, baseType: !699, size: 64, offset: 1152)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1252, file: !164, line: 2322, baseType: !699, size: 64, offset: 1216)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1252, file: !164, line: 2324, baseType: !1298, size: 64, offset: 1280)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !164, line: 2324, flags: DIFlagFwdDecl)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !701, file: !164, line: 3395, baseType: !1301, size: 320)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !164, line: 1469, size: 320, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1301, file: !164, line: 1470, baseType: !737, size: 192)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1301, file: !164, line: 1471, baseType: !699, size: 64, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1301, file: !164, line: 1472, baseType: !699, size: 64, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !701, file: !164, line: 3396, baseType: !1307, size: 320)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !164, line: 1482, size: 320, elements: !1308)
!1308 = !{!1309, !1310, !1311}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1307, file: !164, line: 1483, baseType: !737, size: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1307, file: !164, line: 1484, baseType: !566, size: 32, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1307, file: !164, line: 1485, baseType: !1312, size: 64, offset: 256)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !699, size: 64, elements: !618)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !701, file: !164, line: 3397, baseType: !1314, size: 384)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !164, line: 1829, size: 384, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1319}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1314, file: !164, line: 1830, baseType: !737, size: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1314, file: !164, line: 1831, baseType: !819, size: 32, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1314, file: !164, line: 1832, baseType: !699, size: 64, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1314, file: !164, line: 1835, baseType: !1312, size: 64, offset: 320)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !701, file: !164, line: 3398, baseType: !1321, size: 704)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !164, line: 1898, size: 704, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1326, !1327, !1330}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1321, file: !164, line: 1899, baseType: !737, size: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1321, file: !164, line: 1902, baseType: !699, size: 64, offset: 192)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1321, file: !164, line: 1905, baseType: !1040, size: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1321, file: !164, line: 1908, baseType: !7, size: 32, offset: 320)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1321, file: !164, line: 1911, baseType: !1328, size: 64, offset: 384)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !164, line: 1876, flags: DIFlagFwdDecl)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1321, file: !164, line: 1914, baseType: !1331, size: 256, offset: 448)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !164, line: 1883, size: 256, elements: !1332)
!1332 = !{!1333, !1335, !1336, !1341}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1331, file: !164, line: 1884, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1331, file: !164, line: 1885, baseType: !1334, size: 64, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1331, file: !164, line: 1891, baseType: !1337, size: 64, offset: 128)
!1337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1331, file: !164, line: 1891, size: 64, elements: !1338)
!1338 = !{!1339, !1340}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1337, file: !164, line: 1891, baseType: !1040, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1337, file: !164, line: 1891, baseType: !699, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1331, file: !164, line: 1892, baseType: !1342, size: 64, offset: 192)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !701, file: !164, line: 3399, baseType: !1344, size: 704)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !164, line: 2008, size: 704, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350, !1351, !1363, !1364, !1365, !1366, !1367}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1344, file: !164, line: 2009, baseType: !737, size: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1344, file: !164, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1344, file: !164, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1344, file: !164, line: 2014, baseType: !819, size: 32, offset: 224)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1344, file: !164, line: 2016, baseType: !699, size: 64, offset: 256)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1344, file: !164, line: 2017, baseType: !1352, size: 64, offset: 320)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !164, line: 183, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !164, line: 183, size: 128, elements: !1355)
!1355 = !{!1356}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1354, file: !164, line: 183, baseType: !1357, size: 128)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !164, line: 182, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !164, line: 182, size: 128, elements: !1359)
!1359 = !{!1360, !1361, !1362}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1358, file: !164, line: 182, baseType: !7, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1358, file: !164, line: 182, baseType: !7, size: 32, offset: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1358, file: !164, line: 182, baseType: !1312, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1344, file: !164, line: 2019, baseType: !699, size: 64, offset: 384)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1344, file: !164, line: 2020, baseType: !699, size: 64, offset: 448)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1344, file: !164, line: 2021, baseType: !699, size: 64, offset: 512)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1344, file: !164, line: 2022, baseType: !699, size: 64, offset: 576)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1344, file: !164, line: 2023, baseType: !699, size: 64, offset: 640)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !701, file: !164, line: 3400, baseType: !1369, size: 832)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !164, line: 2430, size: 832, elements: !1370)
!1370 = !{!1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1369, file: !164, line: 2431, baseType: !737, size: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1369, file: !164, line: 2433, baseType: !699, size: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1369, file: !164, line: 2434, baseType: !699, size: 64, offset: 256)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1369, file: !164, line: 2435, baseType: !699, size: 64, offset: 320)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1369, file: !164, line: 2436, baseType: !699, size: 64, offset: 384)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1369, file: !164, line: 2437, baseType: !1352, size: 64, offset: 448)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1369, file: !164, line: 2438, baseType: !699, size: 64, offset: 512)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1369, file: !164, line: 2440, baseType: !699, size: 64, offset: 576)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1369, file: !164, line: 2441, baseType: !699, size: 64, offset: 640)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1369, file: !164, line: 2443, baseType: !1381, size: 128, offset: 704)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !164, line: 182, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !164, line: 182, size: 128, elements: !1383)
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1382, file: !164, line: 182, baseType: !1357, size: 128)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !701, file: !164, line: 3401, baseType: !1386, size: 320)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !164, line: 3327, size: 320, elements: !1387)
!1387 = !{!1388, !1389, !1396}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1386, file: !164, line: 3329, baseType: !737, size: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1386, file: !164, line: 3330, baseType: !1390, size: 64, offset: 192)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !164, line: 3320, size: 192, elements: !1392)
!1392 = !{!1393, !1394, !1395}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1391, file: !164, line: 3322, baseType: !1390, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1391, file: !164, line: 3323, baseType: !1390, size: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1391, file: !164, line: 3324, baseType: !699, size: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1386, file: !164, line: 3331, baseType: !1390, size: 64, offset: 256)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !701, file: !164, line: 3402, baseType: !1398, size: 256)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !164, line: 1540, size: 256, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1398, file: !164, line: 1541, baseType: !737, size: 192)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1398, file: !164, line: 1542, baseType: !1402, size: 64, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !164, line: 1538, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !164, line: 1538, size: 192, elements: !1405)
!1405 = !{!1406}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1404, file: !164, line: 1538, baseType: !1407, size: 192)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !164, line: 1537, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !164, line: 1537, size: 192, elements: !1409)
!1409 = !{!1410, !1411, !1412}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1408, file: !164, line: 1537, baseType: !7, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1408, file: !164, line: 1537, baseType: !7, size: 32, offset: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1408, file: !164, line: 1537, baseType: !1413, size: 128, offset: 64)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1414, size: 128, elements: !618)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !164, line: 1535, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !164, line: 1532, size: 128, elements: !1416)
!1416 = !{!1417, !1418}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1415, file: !164, line: 1533, baseType: !699, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1415, file: !164, line: 1534, baseType: !699, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !701, file: !164, line: 3403, baseType: !1420, size: 512)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !164, line: 1938, size: 512, elements: !1421)
!1421 = !{!1422, !1423, !1424, !1425, !1431, !1432, !1433}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1420, file: !164, line: 1939, baseType: !737, size: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1420, file: !164, line: 1940, baseType: !819, size: 32, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1420, file: !164, line: 1941, baseType: !163, size: 32, offset: 224)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1420, file: !164, line: 1946, baseType: !1426, size: 32, offset: 256)
!1426 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !164, line: 1942, size: 32, elements: !1427)
!1427 = !{!1428, !1429, !1430}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1426, file: !164, line: 1943, baseType: !182, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1426, file: !164, line: 1944, baseType: !189, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1426, file: !164, line: 1945, baseType: !196, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1420, file: !164, line: 1950, baseType: !983, size: 64, offset: 320)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1420, file: !164, line: 1951, baseType: !983, size: 64, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1420, file: !164, line: 1953, baseType: !1312, size: 64, offset: 448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !701, file: !164, line: 3404, baseType: !1435, size: 1664)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !164, line: 3337, size: 1664, elements: !1436)
!1436 = !{!1437, !1438}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1435, file: !164, line: 3338, baseType: !737, size: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1435, file: !164, line: 3341, baseType: !1439, size: 1472, offset: 192)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1440, line: 410, size: 1472, elements: !1441)
!1440 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1441 = !{!1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1439, file: !1440, line: 412, baseType: !566, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1439, file: !1440, line: 413, baseType: !566, size: 32, offset: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1439, file: !1440, line: 414, baseType: !566, size: 32, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1439, file: !1440, line: 415, baseType: !566, size: 32, offset: 96)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1439, file: !1440, line: 416, baseType: !566, size: 32, offset: 128)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1439, file: !1440, line: 417, baseType: !566, size: 32, offset: 160)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1439, file: !1440, line: 418, baseType: !565, size: 8, offset: 192)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1439, file: !1440, line: 419, baseType: !565, size: 8, offset: 200)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1439, file: !1440, line: 420, baseType: !1451, size: 8, offset: 208)
!1451 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1439, file: !1440, line: 421, baseType: !1451, size: 8, offset: 216)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1439, file: !1440, line: 422, baseType: !1451, size: 8, offset: 224)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1439, file: !1440, line: 423, baseType: !1451, size: 8, offset: 232)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1439, file: !1440, line: 424, baseType: !1451, size: 8, offset: 240)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1439, file: !1440, line: 425, baseType: !1451, size: 8, offset: 248)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1439, file: !1440, line: 426, baseType: !1451, size: 8, offset: 256)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1439, file: !1440, line: 427, baseType: !1451, size: 8, offset: 264)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1439, file: !1440, line: 428, baseType: !1451, size: 8, offset: 272)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1439, file: !1440, line: 429, baseType: !1451, size: 8, offset: 280)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1439, file: !1440, line: 430, baseType: !1451, size: 8, offset: 288)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1439, file: !1440, line: 431, baseType: !1451, size: 8, offset: 296)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1439, file: !1440, line: 432, baseType: !1451, size: 8, offset: 304)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1439, file: !1440, line: 433, baseType: !1451, size: 8, offset: 312)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1439, file: !1440, line: 434, baseType: !1451, size: 8, offset: 320)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1439, file: !1440, line: 435, baseType: !1451, size: 8, offset: 328)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1439, file: !1440, line: 436, baseType: !1451, size: 8, offset: 336)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1439, file: !1440, line: 437, baseType: !1451, size: 8, offset: 344)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1439, file: !1440, line: 438, baseType: !1451, size: 8, offset: 352)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1439, file: !1440, line: 439, baseType: !1451, size: 8, offset: 360)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1439, file: !1440, line: 440, baseType: !1451, size: 8, offset: 368)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1439, file: !1440, line: 441, baseType: !1451, size: 8, offset: 376)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1439, file: !1440, line: 442, baseType: !1451, size: 8, offset: 384)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1439, file: !1440, line: 443, baseType: !1451, size: 8, offset: 392)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1439, file: !1440, line: 444, baseType: !1451, size: 8, offset: 400)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1439, file: !1440, line: 445, baseType: !1451, size: 8, offset: 408)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1439, file: !1440, line: 446, baseType: !1451, size: 8, offset: 416)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1439, file: !1440, line: 447, baseType: !1451, size: 8, offset: 424)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1439, file: !1440, line: 448, baseType: !1451, size: 8, offset: 432)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1439, file: !1440, line: 449, baseType: !1451, size: 8, offset: 440)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1439, file: !1440, line: 450, baseType: !1451, size: 8, offset: 448)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1439, file: !1440, line: 451, baseType: !1451, size: 8, offset: 456)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1439, file: !1440, line: 452, baseType: !1451, size: 8, offset: 464)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1439, file: !1440, line: 453, baseType: !1451, size: 8, offset: 472)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1439, file: !1440, line: 454, baseType: !1451, size: 8, offset: 480)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1439, file: !1440, line: 455, baseType: !1451, size: 8, offset: 488)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1439, file: !1440, line: 456, baseType: !1451, size: 8, offset: 496)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1439, file: !1440, line: 457, baseType: !1451, size: 8, offset: 504)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1439, file: !1440, line: 458, baseType: !1451, size: 8, offset: 512)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1439, file: !1440, line: 459, baseType: !1451, size: 8, offset: 520)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1439, file: !1440, line: 460, baseType: !1451, size: 8, offset: 528)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1439, file: !1440, line: 461, baseType: !1451, size: 8, offset: 536)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1439, file: !1440, line: 462, baseType: !1451, size: 8, offset: 544)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1439, file: !1440, line: 463, baseType: !1451, size: 8, offset: 552)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1439, file: !1440, line: 464, baseType: !1451, size: 8, offset: 560)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1439, file: !1440, line: 465, baseType: !1451, size: 8, offset: 568)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1439, file: !1440, line: 466, baseType: !1451, size: 8, offset: 576)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1439, file: !1440, line: 467, baseType: !1451, size: 8, offset: 584)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1439, file: !1440, line: 468, baseType: !1451, size: 8, offset: 592)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1439, file: !1440, line: 469, baseType: !1451, size: 8, offset: 600)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1439, file: !1440, line: 470, baseType: !1451, size: 8, offset: 608)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1439, file: !1440, line: 471, baseType: !1451, size: 8, offset: 616)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1439, file: !1440, line: 472, baseType: !1451, size: 8, offset: 624)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1439, file: !1440, line: 473, baseType: !1451, size: 8, offset: 632)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1439, file: !1440, line: 474, baseType: !1451, size: 8, offset: 640)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1439, file: !1440, line: 475, baseType: !1451, size: 8, offset: 648)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1439, file: !1440, line: 476, baseType: !1451, size: 8, offset: 656)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1439, file: !1440, line: 477, baseType: !1451, size: 8, offset: 664)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1439, file: !1440, line: 478, baseType: !1451, size: 8, offset: 672)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1439, file: !1440, line: 479, baseType: !1451, size: 8, offset: 680)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1439, file: !1440, line: 480, baseType: !1451, size: 8, offset: 688)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1439, file: !1440, line: 481, baseType: !1451, size: 8, offset: 696)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1439, file: !1440, line: 482, baseType: !1451, size: 8, offset: 704)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1439, file: !1440, line: 483, baseType: !1451, size: 8, offset: 712)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1439, file: !1440, line: 484, baseType: !1451, size: 8, offset: 720)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1439, file: !1440, line: 485, baseType: !1451, size: 8, offset: 728)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1439, file: !1440, line: 486, baseType: !1451, size: 8, offset: 736)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1439, file: !1440, line: 487, baseType: !1451, size: 8, offset: 744)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1439, file: !1440, line: 488, baseType: !1451, size: 8, offset: 752)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1439, file: !1440, line: 489, baseType: !1451, size: 8, offset: 760)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1439, file: !1440, line: 490, baseType: !1451, size: 8, offset: 768)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1439, file: !1440, line: 491, baseType: !1451, size: 8, offset: 776)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1439, file: !1440, line: 492, baseType: !1451, size: 8, offset: 784)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1439, file: !1440, line: 493, baseType: !1451, size: 8, offset: 792)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1439, file: !1440, line: 494, baseType: !1451, size: 8, offset: 800)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1439, file: !1440, line: 495, baseType: !1451, size: 8, offset: 808)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1439, file: !1440, line: 496, baseType: !1451, size: 8, offset: 816)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1439, file: !1440, line: 497, baseType: !1451, size: 8, offset: 824)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1439, file: !1440, line: 498, baseType: !1451, size: 8, offset: 832)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1439, file: !1440, line: 499, baseType: !1451, size: 8, offset: 840)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1439, file: !1440, line: 500, baseType: !1451, size: 8, offset: 848)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1439, file: !1440, line: 501, baseType: !1451, size: 8, offset: 856)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1439, file: !1440, line: 502, baseType: !1451, size: 8, offset: 864)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1439, file: !1440, line: 503, baseType: !1451, size: 8, offset: 872)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1439, file: !1440, line: 504, baseType: !1451, size: 8, offset: 880)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1439, file: !1440, line: 505, baseType: !1451, size: 8, offset: 888)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1439, file: !1440, line: 506, baseType: !1451, size: 8, offset: 896)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1439, file: !1440, line: 507, baseType: !1451, size: 8, offset: 904)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1439, file: !1440, line: 508, baseType: !1451, size: 8, offset: 912)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1439, file: !1440, line: 509, baseType: !1451, size: 8, offset: 920)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1439, file: !1440, line: 510, baseType: !1451, size: 8, offset: 928)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1439, file: !1440, line: 511, baseType: !1451, size: 8, offset: 936)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1439, file: !1440, line: 512, baseType: !1451, size: 8, offset: 944)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1439, file: !1440, line: 513, baseType: !1451, size: 8, offset: 952)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1439, file: !1440, line: 514, baseType: !1451, size: 8, offset: 960)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1439, file: !1440, line: 515, baseType: !1451, size: 8, offset: 968)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1439, file: !1440, line: 516, baseType: !1451, size: 8, offset: 976)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1439, file: !1440, line: 517, baseType: !1451, size: 8, offset: 984)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1439, file: !1440, line: 518, baseType: !1451, size: 8, offset: 992)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1439, file: !1440, line: 519, baseType: !1451, size: 8, offset: 1000)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1439, file: !1440, line: 520, baseType: !1451, size: 8, offset: 1008)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1439, file: !1440, line: 521, baseType: !1451, size: 8, offset: 1016)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1439, file: !1440, line: 522, baseType: !1451, size: 8, offset: 1024)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1439, file: !1440, line: 523, baseType: !1451, size: 8, offset: 1032)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1439, file: !1440, line: 524, baseType: !1451, size: 8, offset: 1040)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1439, file: !1440, line: 525, baseType: !1451, size: 8, offset: 1048)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1439, file: !1440, line: 526, baseType: !1451, size: 8, offset: 1056)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1439, file: !1440, line: 527, baseType: !1451, size: 8, offset: 1064)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1439, file: !1440, line: 528, baseType: !1451, size: 8, offset: 1072)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1439, file: !1440, line: 529, baseType: !1451, size: 8, offset: 1080)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1439, file: !1440, line: 530, baseType: !1451, size: 8, offset: 1088)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1439, file: !1440, line: 531, baseType: !1451, size: 8, offset: 1096)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1439, file: !1440, line: 532, baseType: !1451, size: 8, offset: 1104)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1439, file: !1440, line: 533, baseType: !1451, size: 8, offset: 1112)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1439, file: !1440, line: 534, baseType: !1451, size: 8, offset: 1120)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1439, file: !1440, line: 535, baseType: !1451, size: 8, offset: 1128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1439, file: !1440, line: 536, baseType: !1451, size: 8, offset: 1136)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1439, file: !1440, line: 537, baseType: !1451, size: 8, offset: 1144)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1439, file: !1440, line: 538, baseType: !1451, size: 8, offset: 1152)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1439, file: !1440, line: 539, baseType: !1451, size: 8, offset: 1160)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1439, file: !1440, line: 540, baseType: !1451, size: 8, offset: 1168)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1439, file: !1440, line: 541, baseType: !1451, size: 8, offset: 1176)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1439, file: !1440, line: 542, baseType: !1451, size: 8, offset: 1184)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1439, file: !1440, line: 543, baseType: !1451, size: 8, offset: 1192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1439, file: !1440, line: 544, baseType: !1451, size: 8, offset: 1200)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1439, file: !1440, line: 545, baseType: !1451, size: 8, offset: 1208)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1439, file: !1440, line: 546, baseType: !1451, size: 8, offset: 1216)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1439, file: !1440, line: 547, baseType: !1451, size: 8, offset: 1224)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1439, file: !1440, line: 548, baseType: !1451, size: 8, offset: 1232)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1439, file: !1440, line: 549, baseType: !1451, size: 8, offset: 1240)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1439, file: !1440, line: 550, baseType: !1451, size: 8, offset: 1248)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1439, file: !1440, line: 551, baseType: !1451, size: 8, offset: 1256)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1439, file: !1440, line: 552, baseType: !1451, size: 8, offset: 1264)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1439, file: !1440, line: 553, baseType: !1451, size: 8, offset: 1272)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1439, file: !1440, line: 554, baseType: !1451, size: 8, offset: 1280)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1439, file: !1440, line: 555, baseType: !1451, size: 8, offset: 1288)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1439, file: !1440, line: 556, baseType: !1451, size: 8, offset: 1296)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1439, file: !1440, line: 557, baseType: !1451, size: 8, offset: 1304)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1439, file: !1440, line: 558, baseType: !1451, size: 8, offset: 1312)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1439, file: !1440, line: 559, baseType: !1451, size: 8, offset: 1320)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1439, file: !1440, line: 560, baseType: !1451, size: 8, offset: 1328)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1439, file: !1440, line: 561, baseType: !1451, size: 8, offset: 1336)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1439, file: !1440, line: 562, baseType: !1451, size: 8, offset: 1344)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1439, file: !1440, line: 563, baseType: !1451, size: 8, offset: 1352)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1439, file: !1440, line: 564, baseType: !1451, size: 8, offset: 1360)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1439, file: !1440, line: 565, baseType: !1451, size: 8, offset: 1368)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1439, file: !1440, line: 566, baseType: !1451, size: 8, offset: 1376)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1439, file: !1440, line: 567, baseType: !1451, size: 8, offset: 1384)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1439, file: !1440, line: 568, baseType: !1451, size: 8, offset: 1392)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1439, file: !1440, line: 569, baseType: !1451, size: 8, offset: 1400)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1439, file: !1440, line: 570, baseType: !1451, size: 8, offset: 1408)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1439, file: !1440, line: 571, baseType: !1451, size: 8, offset: 1416)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1439, file: !1440, line: 572, baseType: !1451, size: 8, offset: 1424)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1439, file: !1440, line: 573, baseType: !1451, size: 8, offset: 1432)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1439, file: !1440, line: 574, baseType: !1451, size: 8, offset: 1440)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !701, file: !164, line: 3405, baseType: !1607, size: 384)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !164, line: 3352, size: 384, elements: !1608)
!1608 = !{!1609, !1610}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1607, file: !164, line: 3353, baseType: !737, size: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1607, file: !164, line: 3356, baseType: !1611, size: 192, offset: 192)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1440, line: 578, size: 192, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1611, file: !1440, line: 580, baseType: !566, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1611, file: !1440, line: 581, baseType: !566, size: 32, offset: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1611, file: !1440, line: 582, baseType: !566, size: 32, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1611, file: !1440, line: 583, baseType: !566, size: 32, offset: 96)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1611, file: !1440, line: 584, baseType: !565, size: 8, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1611, file: !1440, line: 585, baseType: !565, size: 8, offset: 136)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1611, file: !1440, line: 586, baseType: !565, size: 8, offset: 144)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1611, file: !1440, line: 587, baseType: !565, size: 8, offset: 152)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1611, file: !1440, line: 588, baseType: !565, size: 8, offset: 160)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1611, file: !1440, line: 589, baseType: !565, size: 8, offset: 168)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1611, file: !1440, line: 590, baseType: !565, size: 8, offset: 176)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !604, file: !421, line: 178, baseType: !957, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !604, file: !421, line: 179, baseType: !1626, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !421, line: 150, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !421, line: 142, size: 320, elements: !1629)
!1629 = !{!1630, !1631, !1632, !1633, !1634, !1635}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1628, file: !421, line: 144, baseType: !699, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1628, file: !421, line: 145, baseType: !583, size: 64, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1628, file: !421, line: 146, baseType: !583, size: 64, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1628, file: !421, line: 147, baseType: !1277, size: 32, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1628, file: !421, line: 148, baseType: !7, size: 32, offset: 224)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1628, file: !421, line: 149, baseType: !565, size: 8, offset: 256)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !604, file: !421, line: 180, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !421, line: 162, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !421, line: 159, size: 128, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1639, file: !421, line: 160, baseType: !699, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1639, file: !421, line: 161, baseType: !670, size: 64, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !604, file: !421, line: 181, baseType: !1644, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !421, line: 181, flags: DIFlagFwdDecl)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !599, file: !421, line: 317, baseType: !1647, size: 64)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !670, size: 64, elements: !618)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !599, file: !421, line: 318, baseType: !1649, size: 320)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !421, line: 188, size: 320, elements: !1650)
!1650 = !{!1651, !1653, !1708}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1649, file: !421, line: 190, baseType: !1652, size: 192)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 192, elements: !770)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1649, file: !421, line: 193, baseType: !1654, size: 64, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !421, line: 206, size: 320, elements: !1656)
!1656 = !{!1657, !1693, !1694, !1695, !1707}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1655, file: !421, line: 208, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !584, line: 62, baseType: !1660)
!1660 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1661, line: 538, size: 256, elements: !1662)
!1661 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1662 = !{!1663, !1667, !1673, !1684}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1660, file: !1661, line: 539, baseType: !1664, size: 32)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1661, line: 482, size: 32, elements: !1665)
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1664, file: !1661, line: 484, baseType: !7, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1660, file: !1661, line: 540, baseType: !1668, size: 192)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1661, line: 488, size: 192, elements: !1669)
!1669 = !{!1670, !1671, !1672}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1668, file: !1661, line: 489, baseType: !1664, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1668, file: !1661, line: 492, baseType: !571, size: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1668, file: !1661, line: 496, baseType: !699, size: 64, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1660, file: !1661, line: 541, baseType: !1674, size: 256)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1661, line: 504, size: 256, elements: !1675)
!1675 = !{!1676, !1677, !1682, !1683}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1674, file: !1661, line: 505, baseType: !1664, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1674, file: !1661, line: 509, baseType: !1678, size: 64, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1661, line: 501, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{null, !1133}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1674, file: !1661, line: 510, baseType: !1133, size: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1674, file: !1661, line: 513, baseType: !1658, size: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1660, file: !1661, line: 542, baseType: !1685, size: 128)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1661, line: 530, size: 128, elements: !1686)
!1686 = !{!1687, !1688}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1685, file: !1661, line: 531, baseType: !1664, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1685, file: !1661, line: 534, baseType: !1689, size: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1661, line: 525, baseType: !1690)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!565, !699, !571, !653, !653}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1655, file: !421, line: 211, baseType: !7, size: 32, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1655, file: !421, line: 214, baseType: !670, size: 64, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1655, file: !421, line: 224, baseType: !1696, size: 64, offset: 192)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !421, line: 202, baseType: !1698)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !421, line: 202, size: 128, elements: !1699)
!1699 = !{!1700}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1698, file: !421, line: 202, baseType: !1701, size: 128)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !421, line: 200, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !421, line: 200, size: 128, elements: !1703)
!1703 = !{!1704, !1705, !1706}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1702, file: !421, line: 200, baseType: !7, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1702, file: !421, line: 200, baseType: !7, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1702, file: !421, line: 200, baseType: !617, size: 64, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1655, file: !421, line: 234, baseType: !1696, size: 64, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1649, file: !421, line: 197, baseType: !670, size: 64, offset: 256)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !599, file: !421, line: 319, baseType: !759, size: 256)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !599, file: !421, line: 320, baseType: !778, size: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_allocno", scope: !576, file: !574, line: 255, baseType: !573, size: 64, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "loop_tree_node", scope: !576, file: !574, line: 260, baseType: !1713, size: 64, offset: 256)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_loop_tree_node_t", file: !574, line: 73, baseType: !1714)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_loop_tree_node", file: !574, line: 83, size: 1728, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1728, !1729, !1733, !1735, !1736, !1737}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1715, file: !574, line: 86, baseType: !956, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !1715, file: !574, line: 87, baseType: !998, size: 64, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "subloop_next", scope: !1715, file: !574, line: 90, baseType: !1713, size: 64, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1715, file: !574, line: 90, baseType: !1713, size: 64, offset: 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "subloops", scope: !1715, file: !574, line: 93, baseType: !1713, size: 64, offset: 256)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1715, file: !574, line: 93, baseType: !1713, size: 64, offset: 320)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1715, file: !574, line: 95, baseType: !1713, size: 64, offset: 384)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1715, file: !574, line: 98, baseType: !566, size: 32, offset: 448)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "to_remove_p", scope: !1715, file: !574, line: 105, baseType: !565, size: 8, offset: 480)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "regno_allocno_map", scope: !1715, file: !574, line: 114, baseType: !1727, size: 64, offset: 512)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "entered_from_non_parent_p", scope: !1715, file: !574, line: 119, baseType: !565, size: 8, offset: 576)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !1715, file: !574, line: 123, baseType: !1730, size: 864, offset: 608)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 864, elements: !1731)
!1731 = !{!1732}
!1732 = !DISubrange(count: 27)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "all_allocnos", scope: !1715, file: !574, line: 127, baseType: !1734, size: 64, offset: 1472)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !584, line: 47, baseType: !637)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "border_allocnos", scope: !1715, file: !574, line: 130, baseType: !1734, size: 64, offset: 1536)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "modified_regnos", scope: !1715, file: !574, line: 134, baseType: !1734, size: 64, offset: 1600)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "local_copies", scope: !1715, file: !574, line: 137, baseType: !1734, size: 64, offset: 1664)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "nrefs", scope: !576, file: !574, line: 266, baseType: !566, size: 32, offset: 320)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !576, file: !574, line: 268, baseType: !566, size: 32, offset: 352)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "cover_class", scope: !576, file: !574, line: 271, baseType: !390, size: 32, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cover_class_cost", scope: !576, file: !574, line: 274, baseType: !566, size: 32, offset: 416)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "updated_cover_class_cost", scope: !576, file: !574, line: 274, baseType: !566, size: 32, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "memory_cost", scope: !576, file: !574, line: 282, baseType: !566, size: 32, offset: 480)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "updated_memory_cost", scope: !576, file: !574, line: 282, baseType: !566, size: 32, offset: 512)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "excess_pressure_points_num", scope: !576, file: !574, line: 288, baseType: !566, size: 32, offset: 544)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "allocno_copies", scope: !576, file: !574, line: 292, baseType: !1747, size: 64, offset: 576)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_copy_t", file: !574, line: 64, baseType: !1748)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno_copy", file: !574, line: 506, size: 640, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1749, file: !574, line: 509, baseType: !566, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1749, file: !574, line: 512, baseType: !573, size: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !1749, file: !574, line: 512, baseType: !573, size: 64, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !1749, file: !574, line: 514, baseType: !566, size: 32, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "constraint_p", scope: !1749, file: !574, line: 515, baseType: !565, size: 8, offset: 224)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1749, file: !574, line: 521, baseType: !583, size: 64, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "prev_first_allocno_copy", scope: !1749, file: !574, line: 524, baseType: !1747, size: 64, offset: 320)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "next_first_allocno_copy", scope: !1749, file: !574, line: 524, baseType: !1747, size: 64, offset: 384)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "prev_second_allocno_copy", scope: !1749, file: !574, line: 527, baseType: !1747, size: 64, offset: 448)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "next_second_allocno_copy", scope: !1749, file: !574, line: 527, baseType: !1747, size: 64, offset: 512)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "loop_tree_node", scope: !1749, file: !574, line: 529, baseType: !1713, size: 64, offset: 576)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !576, file: !574, line: 295, baseType: !573, size: 64, offset: 640)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "cap_member", scope: !576, file: !574, line: 298, baseType: !573, size: 64, offset: 704)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "first_coalesced_allocno", scope: !576, file: !574, line: 302, baseType: !573, size: 64, offset: 768)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "next_coalesced_allocno", scope: !576, file: !574, line: 303, baseType: !573, size: 64, offset: 832)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "live_ranges", scope: !576, file: !574, line: 308, baseType: !1767, size: 64, offset: 896)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocno_live_range_t", file: !574, line: 62, baseType: !1768)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno_live_range", file: !574, line: 199, size: 320, elements: !1770)
!1770 = !{!1771, !1772, !1773, !1774, !1775, !1776}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "allocno", scope: !1769, file: !574, line: 202, baseType: !573, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1769, file: !574, line: 204, baseType: !566, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !1769, file: !574, line: 204, baseType: !566, size: 32, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1769, file: !574, line: 207, baseType: !1767, size: 64, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "start_next", scope: !1769, file: !574, line: 209, baseType: !1767, size: 64, offset: 192)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "finish_next", scope: !1769, file: !574, line: 209, baseType: !1767, size: 64, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !576, file: !574, line: 314, baseType: !566, size: 32, offset: 960)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !576, file: !574, line: 314, baseType: !566, size: 32, offset: 992)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocno_array", scope: !576, file: !574, line: 319, baseType: !570, size: 64, offset: 1024)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_id", scope: !576, file: !574, line: 322, baseType: !566, size: 32, offset: 1088)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocno_array_size", scope: !576, file: !574, line: 324, baseType: !7, size: 32, offset: 1120)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_hard_regs", scope: !576, file: !574, line: 329, baseType: !1783, size: 64, offset: 1152)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1784, line: 42, baseType: !653)
!1784 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "total_conflict_hard_regs", scope: !576, file: !574, line: 329, baseType: !1783, size: 64, offset: 1216)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocnos_num", scope: !576, file: !574, line: 332, baseType: !566, size: 32, offset: 1280)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "call_freq", scope: !576, file: !574, line: 335, baseType: !566, size: 32, offset: 1312)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "calls_crossed_num", scope: !576, file: !574, line: 337, baseType: !566, size: 32, offset: 1344)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "mem_optimized_dest_p", scope: !576, file: !574, line: 342, baseType: !7, size: 1, offset: 1376, flags: DIFlagBitField, extraData: i64 1376)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "somewhere_renamed_p", scope: !576, file: !574, line: 346, baseType: !7, size: 1, offset: 1377, flags: DIFlagBitField, extraData: i64 1376)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "child_renamed_p", scope: !576, file: !574, line: 349, baseType: !7, size: 1, offset: 1378, flags: DIFlagBitField, extraData: i64 1376)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "dont_reassign_p", scope: !576, file: !574, line: 354, baseType: !7, size: 1, offset: 1379, flags: DIFlagBitField, extraData: i64 1376)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "no_stack_reg_p", scope: !576, file: !574, line: 359, baseType: !7, size: 1, offset: 1380, flags: DIFlagBitField, extraData: i64 1376)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "total_no_stack_reg_p", scope: !576, file: !574, line: 359, baseType: !7, size: 1, offset: 1381, flags: DIFlagBitField, extraData: i64 1376)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "bad_spill_p", scope: !576, file: !574, line: 364, baseType: !7, size: 1, offset: 1382, flags: DIFlagBitField, extraData: i64 1376)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "in_graph_p", scope: !576, file: !574, line: 367, baseType: !7, size: 1, offset: 1383, flags: DIFlagBitField, extraData: i64 1376)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "assigned_p", scope: !576, file: !574, line: 370, baseType: !7, size: 1, offset: 1384, flags: DIFlagBitField, extraData: i64 1376)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_spilled_p", scope: !576, file: !574, line: 373, baseType: !7, size: 1, offset: 1385, flags: DIFlagBitField, extraData: i64 1376)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "splay_removed_p", scope: !576, file: !574, line: 376, baseType: !7, size: 1, offset: 1386, flags: DIFlagBitField, extraData: i64 1376)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_vec_p", scope: !576, file: !574, line: 381, baseType: !7, size: 1, offset: 1387, flags: DIFlagBitField, extraData: i64 1376)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "mem_optimized_dest", scope: !576, file: !574, line: 385, baseType: !573, size: 64, offset: 1408)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "hard_reg_costs", scope: !576, file: !574, line: 400, baseType: !1803, size: 64, offset: 1472)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "updated_hard_reg_costs", scope: !576, file: !574, line: 400, baseType: !1803, size: 64, offset: 1536)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_hard_reg_costs", scope: !576, file: !574, line: 407, baseType: !1803, size: 64, offset: 1600)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "updated_conflict_hard_reg_costs", scope: !576, file: !574, line: 407, baseType: !1803, size: 64, offset: 1664)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "left_conflicts_size", scope: !576, file: !574, line: 411, baseType: !566, size: 32, offset: 1728)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "available_regs_num", scope: !576, file: !574, line: 414, baseType: !566, size: 32, offset: 1760)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "next_bucket_allocno", scope: !576, file: !574, line: 417, baseType: !573, size: 64, offset: 1792)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bucket_allocno", scope: !576, file: !574, line: 418, baseType: !573, size: 64, offset: 1856)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !576, file: !574, line: 420, baseType: !566, size: 32, offset: 1920)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_allocno_t_heap", file: !574, line: 68, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_allocno_t_heap", file: !574, line: 68, size: 128, elements: !1815)
!1815 = !{!1816}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1814, file: !574, line: 68, baseType: !1817, size: 128)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_allocno_t_base", file: !574, line: 67, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_allocno_t_base", file: !574, line: 67, size: 128, elements: !1819)
!1819 = !{!1820, !1821, !1822}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1818, file: !574, line: 67, baseType: !7, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1818, file: !574, line: 67, baseType: !7, size: 32, offset: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1818, file: !574, line: 67, baseType: !1823, size: 64, offset: 64)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 64, elements: !618)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_copy_t_heap", file: !574, line: 70, baseType: !1827)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_copy_t_heap", file: !574, line: 70, size: 128, elements: !1828)
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1827, file: !574, line: 70, baseType: !1830, size: 128)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_copy_t_base", file: !574, line: 69, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_copy_t_base", file: !574, line: 69, size: 128, elements: !1832)
!1832 = !{!1833, !1834, !1835}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1831, file: !574, line: 69, baseType: !7, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1831, file: !574, line: 69, baseType: !7, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1831, file: !574, line: 69, baseType: !1836, size: 64, offset: 64)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1747, size: 64, elements: !618)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !1839, line: 826, size: 256, elements: !1840)
!1839 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1840 = !{!1841, !1842, !1843, !1844}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1838, file: !1839, line: 829, baseType: !1734, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1838, file: !1839, line: 831, baseType: !1734, size: 64, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1838, file: !1839, line: 834, baseType: !1734, size: 64, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1838, file: !1839, line: 835, baseType: !1734, size: 64, offset: 192)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_loop_tree_node_t_heap", file: !3, line: 1788, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_loop_tree_node_t_heap", file: !3, line: 1788, size: 128, elements: !1851)
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1850, file: !3, line: 1788, baseType: !1853, size: 128)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_loop_tree_node_t_base", file: !3, line: 1787, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_loop_tree_node_t_base", file: !3, line: 1787, size: 128, elements: !1855)
!1855 = !{!1856, !1857, !1858}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1854, file: !3, line: 1787, baseType: !7, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1854, file: !3, line: 1787, baseType: !7, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1854, file: !3, line: 1787, baseType: !1859, size: 64, offset: 64)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 64, elements: !618)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !573)
!1862 = !{!1863, !1865, !1867, !1869, !1871, !1873, !1875, !1877, !1879, !1882, !0, !1884, !1907, !1909, !1911, !1913, !1915, !1918, !1920, !1922, !1924, !1926, !1928, !1930, !1932, !1934, !1936}
!1863 = !DIGlobalVariableExpression(var: !1864, expr: !DIExpression())
!1864 = distinct !DIGlobalVariable(name: "ira_loop_tree_root", scope: !2, file: !3, line: 47, type: !1713, isLocal: false, isDefinition: true)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "ira_loop_tree_height", scope: !2, file: !3, line: 50, type: !566, isLocal: false, isDefinition: true)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "ira_bb_nodes", scope: !2, file: !3, line: 55, type: !1713, isLocal: false, isDefinition: true)
!1869 = !DIGlobalVariableExpression(var: !1870, expr: !DIExpression())
!1870 = distinct !DIGlobalVariable(name: "ira_loop_nodes", scope: !2, file: !3, line: 59, type: !1713, isLocal: false, isDefinition: true)
!1871 = !DIGlobalVariableExpression(var: !1872, expr: !DIExpression())
!1872 = distinct !DIGlobalVariable(name: "ira_regno_allocno_map", scope: !2, file: !3, line: 63, type: !1727, isLocal: false, isDefinition: true)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "ira_allocnos", scope: !2, file: !3, line: 68, type: !1727, isLocal: false, isDefinition: true)
!1875 = !DIGlobalVariableExpression(var: !1876, expr: !DIExpression())
!1876 = distinct !DIGlobalVariable(name: "ira_allocnos_num", scope: !2, file: !3, line: 71, type: !566, isLocal: false, isDefinition: true)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "ira_conflict_id_allocno_map", scope: !2, file: !3, line: 75, type: !1727, isLocal: false, isDefinition: true)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "ira_copies", scope: !2, file: !3, line: 80, type: !1881, isLocal: false, isDefinition: true)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "ira_copies_num", scope: !2, file: !3, line: 83, type: !566, isLocal: false, isDefinition: true)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "allocno_live_range_pool", scope: !2, file: !3, line: 386, type: !1886, isLocal: true, isDefinition: true)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !1887, line: 58, baseType: !1888)
!1887 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !1887, line: 32, size: 704, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1889, file: !1887, line: 34, baseType: !571, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !1889, file: !1887, line: 38, baseType: !1148, size: 64, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !1889, file: !1887, line: 41, baseType: !1894, size: 64, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !1887, line: 30, baseType: !1895)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !1887, line: 26, size: 64, elements: !1897)
!1897 = !{!1898}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1896, file: !1887, line: 28, baseType: !1895, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !1889, file: !1887, line: 45, baseType: !568, size: 64, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !1889, file: !1887, line: 49, baseType: !1148, size: 64, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !1889, file: !1887, line: 51, baseType: !1148, size: 64, offset: 320)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !1889, file: !1887, line: 52, baseType: !1148, size: 64, offset: 384)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !1889, file: !1887, line: 53, baseType: !1148, size: 64, offset: 448)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !1889, file: !1887, line: 54, baseType: !1894, size: 64, offset: 512)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1889, file: !1887, line: 55, baseType: !1148, size: 64, offset: 576)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !1889, file: !1887, line: 56, baseType: !1148, size: 64, offset: 640)
!1907 = !DIGlobalVariableExpression(var: !1908, expr: !DIExpression())
!1908 = distinct !DIGlobalVariable(name: "allocno_vec", scope: !2, file: !3, line: 390, type: !1812, isLocal: true, isDefinition: true)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "ira_conflict_id_allocno_map_vec", scope: !2, file: !3, line: 394, type: !1812, isLocal: true, isDefinition: true)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "copy_pool", scope: !2, file: !3, line: 1023, type: !1886, isLocal: true, isDefinition: true)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "copy_vec", scope: !2, file: !3, line: 1027, type: !1825, isLocal: true, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "cost_vector_pool", scope: !2, file: !3, line: 1306, type: !1917, isLocal: true, isDefinition: true)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 1728, elements: !1731)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "ira_curr_loop_tree_node", scope: !2, file: !3, line: 1360, type: !1713, isLocal: false, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "ira_curr_regno_allocno_map", scope: !2, file: !3, line: 1361, type: !1727, isLocal: false, isDefinition: true)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "regno_top_level_allocno_map", scope: !2, file: !3, line: 2401, type: !1727, isLocal: true, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "allocno_conflict_check", scope: !2, file: !3, line: 686, type: !1803, isLocal: true, isDefinition: true)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "curr_allocno_conflict_check_tick", scope: !2, file: !3, line: 690, type: !566, isLocal: true, isDefinition: true)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "last_basic_block_before_change", scope: !2, file: !3, line: 90, type: !566, isLocal: true, isDefinition: true)
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(name: "curr_bb", scope: !2, file: !3, line: 1415, type: !956, isLocal: true, isDefinition: true)
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "children_vec", scope: !2, file: !3, line: 1794, type: !1848, isLocal: true, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "removed_loop_vec", scope: !2, file: !3, line: 1791, type: !1848, isLocal: true, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "regno_allocnos", scope: !2, file: !3, line: 1866, type: !1727, isLocal: true, isDefinition: true)
!1938 = !{i32 2, !"Dwarf Version", i32 4}
!1939 = !{i32 2, !"Debug Info Version", i32 3}
!1940 = !{i32 1, !"wchar_size", i32 4}
!1941 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1942 = distinct !DISubprogram(name: "vprintf", scope: !1943, file: !1943, line: 39, type: !1944, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1954)
!1943 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!566, !1946, !1947}
!1946 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !571)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1949)
!1949 = !{!1950, !1951, !1952, !1953}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1948, file: !3, baseType: !7, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1948, file: !3, baseType: !7, size: 32, offset: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1948, file: !3, baseType: !570, size: 64, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1948, file: !3, baseType: !570, size: 64, offset: 128)
!1954 = !{!1955, !1956}
!1955 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1942, file: !1943, line: 39, type: !1946)
!1956 = !DILocalVariable(name: "__arg", arg: 2, scope: !1942, file: !1943, line: 39, type: !1947)
!1957 = !DILocation(line: 0, scope: !1942)
!1958 = !DILocation(line: 41, column: 20, scope: !1942)
!1959 = !DILocation(line: 41, column: 10, scope: !1942)
!1960 = !DILocation(line: 41, column: 3, scope: !1942)
!1961 = distinct !DISubprogram(name: "getchar", scope: !1943, file: !1943, line: 47, type: !1962, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!566}
!1964 = !{}
!1965 = !DILocation(line: 49, column: 16, scope: !1961)
!1966 = !DILocation(line: 49, column: 10, scope: !1961)
!1967 = !DILocation(line: 49, column: 3, scope: !1961)
!1968 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1943, file: !1943, line: 56, type: !1969, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2022)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!566, !1971}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1973, line: 7, baseType: !1974)
!1973 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1975, line: 49, size: 1728, elements: !1976)
!1975 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1992, !1994, !1995, !1996, !1999, !2001, !2002, !2003, !2006, !2008, !2011, !2014, !2015, !2016, !2017, !2018}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1974, file: !1975, line: 51, baseType: !566, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1974, file: !1975, line: 54, baseType: !568, size: 64, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1974, file: !1975, line: 55, baseType: !568, size: 64, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1974, file: !1975, line: 56, baseType: !568, size: 64, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1974, file: !1975, line: 57, baseType: !568, size: 64, offset: 256)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1974, file: !1975, line: 58, baseType: !568, size: 64, offset: 320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1974, file: !1975, line: 59, baseType: !568, size: 64, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1974, file: !1975, line: 60, baseType: !568, size: 64, offset: 448)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1974, file: !1975, line: 61, baseType: !568, size: 64, offset: 512)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1974, file: !1975, line: 64, baseType: !568, size: 64, offset: 576)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1974, file: !1975, line: 65, baseType: !568, size: 64, offset: 640)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1974, file: !1975, line: 66, baseType: !568, size: 64, offset: 704)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1974, file: !1975, line: 68, baseType: !1990, size: 64, offset: 768)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1975, line: 36, flags: DIFlagFwdDecl)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1974, file: !1975, line: 70, baseType: !1993, size: 64, offset: 832)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1974, file: !1975, line: 72, baseType: !566, size: 32, offset: 896)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1974, file: !1975, line: 73, baseType: !566, size: 32, offset: 928)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1974, file: !1975, line: 74, baseType: !1997, size: 64, offset: 960)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1998, line: 152, baseType: !670)
!1998 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1974, file: !1975, line: 77, baseType: !2000, size: 16, offset: 1024)
!2000 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1974, file: !1975, line: 78, baseType: !1451, size: 8, offset: 1040)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1974, file: !1975, line: 79, baseType: !794, size: 8, offset: 1048)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1974, file: !1975, line: 81, baseType: !2004, size: 64, offset: 1088)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1975, line: 43, baseType: null)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1974, file: !1975, line: 89, baseType: !2007, size: 64, offset: 1152)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1998, line: 153, baseType: !670)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1974, file: !1975, line: 91, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1975, line: 37, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1974, file: !1975, line: 92, baseType: !2012, size: 64, offset: 1280)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1975, line: 38, flags: DIFlagFwdDecl)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1974, file: !1975, line: 93, baseType: !1993, size: 64, offset: 1344)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1974, file: !1975, line: 94, baseType: !570, size: 64, offset: 1408)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1974, file: !1975, line: 95, baseType: !1148, size: 64, offset: 1472)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1974, file: !1975, line: 96, baseType: !566, size: 32, offset: 1536)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1974, file: !1975, line: 98, baseType: !2019, size: 160, offset: 1568)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 160, elements: !2020)
!2020 = !{!2021}
!2021 = !DISubrange(count: 20)
!2022 = !{!2023}
!2023 = !DILocalVariable(name: "__fp", arg: 1, scope: !1968, file: !1943, line: 56, type: !1971)
!2024 = !DILocation(line: 0, scope: !1968)
!2025 = !DILocation(line: 58, column: 10, scope: !1968)
!2026 = !DILocation(line: 58, column: 3, scope: !1968)
!2027 = distinct !DISubprogram(name: "getc_unlocked", scope: !1943, file: !1943, line: 66, type: !1969, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2028)
!2028 = !{!2029}
!2029 = !DILocalVariable(name: "__fp", arg: 1, scope: !2027, file: !1943, line: 66, type: !1971)
!2030 = !DILocation(line: 0, scope: !2027)
!2031 = !DILocation(line: 68, column: 10, scope: !2027)
!2032 = !DILocation(line: 68, column: 3, scope: !2027)
!2033 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1943, file: !1943, line: 73, type: !1962, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!2034 = !DILocation(line: 75, column: 10, scope: !2033)
!2035 = !DILocation(line: 75, column: 3, scope: !2033)
!2036 = distinct !DISubprogram(name: "putchar", scope: !1943, file: !1943, line: 82, type: !2037, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2039)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!566, !566}
!2039 = !{!2040}
!2040 = !DILocalVariable(name: "__c", arg: 1, scope: !2036, file: !1943, line: 82, type: !566)
!2041 = !DILocation(line: 0, scope: !2036)
!2042 = !DILocation(line: 84, column: 21, scope: !2036)
!2043 = !DILocation(line: 84, column: 10, scope: !2036)
!2044 = !DILocation(line: 84, column: 3, scope: !2036)
!2045 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1943, file: !1943, line: 91, type: !2046, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2048)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!566, !566, !1971}
!2048 = !{!2049, !2050}
!2049 = !DILocalVariable(name: "__c", arg: 1, scope: !2045, file: !1943, line: 91, type: !566)
!2050 = !DILocalVariable(name: "__stream", arg: 2, scope: !2045, file: !1943, line: 91, type: !1971)
!2051 = !DILocation(line: 0, scope: !2045)
!2052 = !DILocation(line: 93, column: 10, scope: !2045)
!2053 = !DILocation(line: 93, column: 3, scope: !2045)
!2054 = distinct !DISubprogram(name: "putc_unlocked", scope: !1943, file: !1943, line: 101, type: !2046, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!2055 = !{!2056, !2057}
!2056 = !DILocalVariable(name: "__c", arg: 1, scope: !2054, file: !1943, line: 101, type: !566)
!2057 = !DILocalVariable(name: "__stream", arg: 2, scope: !2054, file: !1943, line: 101, type: !1971)
!2058 = !DILocation(line: 0, scope: !2054)
!2059 = !DILocation(line: 103, column: 10, scope: !2054)
!2060 = !DILocation(line: 103, column: 3, scope: !2054)
!2061 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1943, file: !1943, line: 108, type: !2037, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2062)
!2062 = !{!2063}
!2063 = !DILocalVariable(name: "__c", arg: 1, scope: !2061, file: !1943, line: 108, type: !566)
!2064 = !DILocation(line: 0, scope: !2061)
!2065 = !DILocation(line: 110, column: 10, scope: !2061)
!2066 = !DILocation(line: 110, column: 3, scope: !2061)
!2067 = distinct !DISubprogram(name: "getline", scope: !1943, file: !1943, line: 118, type: !2068, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2072)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!2070, !567, !2071, !1971}
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1998, line: 193, baseType: !670)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!2072 = !{!2073, !2074, !2075}
!2073 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2067, file: !1943, line: 118, type: !567)
!2074 = !DILocalVariable(name: "__n", arg: 2, scope: !2067, file: !1943, line: 118, type: !2071)
!2075 = !DILocalVariable(name: "__stream", arg: 3, scope: !2067, file: !1943, line: 118, type: !1971)
!2076 = !DILocation(line: 0, scope: !2067)
!2077 = !DILocation(line: 120, column: 10, scope: !2067)
!2078 = !DILocation(line: 120, column: 3, scope: !2067)
!2079 = distinct !DISubprogram(name: "feof_unlocked", scope: !1943, file: !1943, line: 128, type: !1969, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2080)
!2080 = !{!2081}
!2081 = !DILocalVariable(name: "__stream", arg: 1, scope: !2079, file: !1943, line: 128, type: !1971)
!2082 = !DILocation(line: 0, scope: !2079)
!2083 = !DILocation(line: 130, column: 10, scope: !2079)
!2084 = !DILocation(line: 130, column: 3, scope: !2079)
!2085 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1943, file: !1943, line: 135, type: !1969, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2086)
!2086 = !{!2087}
!2087 = !DILocalVariable(name: "__stream", arg: 1, scope: !2085, file: !1943, line: 135, type: !1971)
!2088 = !DILocation(line: 0, scope: !2085)
!2089 = !DILocation(line: 137, column: 10, scope: !2085)
!2090 = !DILocation(line: 137, column: 3, scope: !2085)
!2091 = distinct !DISubprogram(name: "tolower", scope: !2092, file: !2092, line: 207, type: !2037, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2093)
!2092 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2093 = !{!2094}
!2094 = !DILocalVariable(name: "__c", arg: 1, scope: !2091, file: !2092, line: 207, type: !566)
!2095 = !DILocation(line: 0, scope: !2091)
!2096 = !DILocation(line: 209, column: 22, scope: !2091)
!2097 = !DILocation(line: 209, column: 39, scope: !2091)
!2098 = !DILocation(line: 209, column: 38, scope: !2091)
!2099 = !DILocation(line: 209, column: 37, scope: !2091)
!2100 = !DILocation(line: 209, column: 10, scope: !2091)
!2101 = !DILocation(line: 209, column: 3, scope: !2091)
!2102 = distinct !DISubprogram(name: "toupper", scope: !2092, file: !2092, line: 213, type: !2037, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2103)
!2103 = !{!2104}
!2104 = !DILocalVariable(name: "__c", arg: 1, scope: !2102, file: !2092, line: 213, type: !566)
!2105 = !DILocation(line: 0, scope: !2102)
!2106 = !DILocation(line: 215, column: 22, scope: !2102)
!2107 = !DILocation(line: 215, column: 39, scope: !2102)
!2108 = !DILocation(line: 215, column: 38, scope: !2102)
!2109 = !DILocation(line: 215, column: 37, scope: !2102)
!2110 = !DILocation(line: 215, column: 10, scope: !2102)
!2111 = !DILocation(line: 215, column: 3, scope: !2102)
!2112 = distinct !DISubprogram(name: "atoi", scope: !2113, file: !2113, line: 361, type: !2114, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2116)
!2113 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!566, !571}
!2116 = !{!2117}
!2117 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2112, file: !2113, line: 361, type: !571)
!2118 = !DILocation(line: 0, scope: !2112)
!2119 = !DILocation(line: 363, column: 16, scope: !2112)
!2120 = !DILocation(line: 363, column: 10, scope: !2112)
!2121 = !DILocation(line: 363, column: 3, scope: !2112)
!2122 = distinct !DISubprogram(name: "atol", scope: !2113, file: !2113, line: 366, type: !2123, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2125)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!670, !571}
!2125 = !{!2126}
!2126 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2122, file: !2113, line: 366, type: !571)
!2127 = !DILocation(line: 0, scope: !2122)
!2128 = !DILocation(line: 368, column: 10, scope: !2122)
!2129 = !DILocation(line: 368, column: 3, scope: !2122)
!2130 = distinct !DISubprogram(name: "atoll", scope: !2113, file: !2113, line: 373, type: !2131, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2134)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!2133, !571}
!2133 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2134 = !{!2135}
!2135 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2130, file: !2113, line: 373, type: !571)
!2136 = !DILocation(line: 0, scope: !2130)
!2137 = !DILocation(line: 375, column: 10, scope: !2130)
!2138 = !DILocation(line: 375, column: 3, scope: !2130)
!2139 = distinct !DISubprogram(name: "bsearch", scope: !2140, file: !2140, line: 20, type: !2141, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2144)
!2140 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!570, !1133, !1133, !1148, !1148, !2143}
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2113, line: 808, baseType: !1137)
!2144 = !{!2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154}
!2145 = !DILocalVariable(name: "__key", arg: 1, scope: !2139, file: !2140, line: 20, type: !1133)
!2146 = !DILocalVariable(name: "__base", arg: 2, scope: !2139, file: !2140, line: 20, type: !1133)
!2147 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2139, file: !2140, line: 20, type: !1148)
!2148 = !DILocalVariable(name: "__size", arg: 4, scope: !2139, file: !2140, line: 20, type: !1148)
!2149 = !DILocalVariable(name: "__compar", arg: 5, scope: !2139, file: !2140, line: 21, type: !2143)
!2150 = !DILocalVariable(name: "__l", scope: !2139, file: !2140, line: 23, type: !1148)
!2151 = !DILocalVariable(name: "__u", scope: !2139, file: !2140, line: 23, type: !1148)
!2152 = !DILocalVariable(name: "__idx", scope: !2139, file: !2140, line: 23, type: !1148)
!2153 = !DILocalVariable(name: "__p", scope: !2139, file: !2140, line: 24, type: !1133)
!2154 = !DILocalVariable(name: "__comparison", scope: !2139, file: !2140, line: 25, type: !566)
!2155 = !DILocation(line: 0, scope: !2139)
!2156 = !DILocation(line: 29, column: 3, scope: !2139)
!2157 = !DILocation(line: 27, column: 7, scope: !2139)
!2158 = !DILocation(line: 29, column: 14, scope: !2139)
!2159 = !DILocation(line: 31, column: 20, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2139, file: !2140, line: 30, column: 5)
!2161 = !DILocation(line: 31, column: 27, scope: !2160)
!2162 = !DILocation(line: 32, column: 56, scope: !2160)
!2163 = !DILocation(line: 32, column: 47, scope: !2160)
!2164 = !DILocation(line: 33, column: 22, scope: !2160)
!2165 = !DILocation(line: 34, column: 24, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2160, file: !2140, line: 34, column: 11)
!2167 = !DILocation(line: 34, column: 11, scope: !2160)
!2168 = !DILocation(line: 36, column: 29, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2166, file: !2140, line: 36, column: 16)
!2170 = !DILocation(line: 36, column: 16, scope: !2166)
!2171 = !DILocation(line: 37, column: 14, scope: !2169)
!2172 = distinct !{!2172, !2156, !2173}
!2173 = !DILocation(line: 40, column: 5, scope: !2139)
!2174 = !DILocation(line: 43, column: 1, scope: !2139)
!2175 = distinct !DISubprogram(name: "atof", scope: !2176, file: !2176, line: 25, type: !2177, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2180)
!2176 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!2179, !571}
!2179 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2180 = !{!2181}
!2181 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2175, file: !2176, line: 25, type: !571)
!2182 = !DILocation(line: 0, scope: !2175)
!2183 = !DILocation(line: 27, column: 10, scope: !2175)
!2184 = !DILocation(line: 27, column: 3, scope: !2175)
!2185 = distinct !DISubprogram(name: "strtoimax", scope: !2186, file: !2186, line: 324, type: !2187, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2193)
!2186 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!2189, !1946, !2192, !566}
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2190, line: 101, baseType: !2191)
!2190 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1998, line: 72, baseType: !670)
!2192 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!2193 = !{!2194, !2195, !2196}
!2194 = !DILocalVariable(name: "nptr", arg: 1, scope: !2185, file: !2186, line: 324, type: !1946)
!2195 = !DILocalVariable(name: "endptr", arg: 2, scope: !2185, file: !2186, line: 324, type: !2192)
!2196 = !DILocalVariable(name: "base", arg: 3, scope: !2185, file: !2186, line: 324, type: !566)
!2197 = !DILocation(line: 0, scope: !2185)
!2198 = !DILocation(line: 327, column: 10, scope: !2185)
!2199 = !DILocation(line: 327, column: 3, scope: !2185)
!2200 = distinct !DISubprogram(name: "strtoumax", scope: !2186, file: !2186, line: 336, type: !2201, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2205)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!2203, !1946, !2192, !566}
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2190, line: 102, baseType: !2204)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1998, line: 73, baseType: !653)
!2205 = !{!2206, !2207, !2208}
!2206 = !DILocalVariable(name: "nptr", arg: 1, scope: !2200, file: !2186, line: 336, type: !1946)
!2207 = !DILocalVariable(name: "endptr", arg: 2, scope: !2200, file: !2186, line: 336, type: !2192)
!2208 = !DILocalVariable(name: "base", arg: 3, scope: !2200, file: !2186, line: 336, type: !566)
!2209 = !DILocation(line: 0, scope: !2200)
!2210 = !DILocation(line: 339, column: 10, scope: !2200)
!2211 = !DILocation(line: 339, column: 3, scope: !2200)
!2212 = distinct !DISubprogram(name: "wcstoimax", scope: !2186, file: !2186, line: 348, type: !2213, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2222)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!2189, !2215, !2219, !566}
!2215 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2216)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2218)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2186, line: 34, baseType: !566)
!2219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2220)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2222 = !{!2223, !2224, !2225}
!2223 = !DILocalVariable(name: "nptr", arg: 1, scope: !2212, file: !2186, line: 348, type: !2215)
!2224 = !DILocalVariable(name: "endptr", arg: 2, scope: !2212, file: !2186, line: 348, type: !2219)
!2225 = !DILocalVariable(name: "base", arg: 3, scope: !2212, file: !2186, line: 348, type: !566)
!2226 = !DILocation(line: 0, scope: !2212)
!2227 = !DILocation(line: 351, column: 10, scope: !2212)
!2228 = !DILocation(line: 351, column: 3, scope: !2212)
!2229 = distinct !DISubprogram(name: "wcstoumax", scope: !2186, file: !2186, line: 362, type: !2230, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2232)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{!2203, !2215, !2219, !566}
!2232 = !{!2233, !2234, !2235}
!2233 = !DILocalVariable(name: "nptr", arg: 1, scope: !2229, file: !2186, line: 362, type: !2215)
!2234 = !DILocalVariable(name: "endptr", arg: 2, scope: !2229, file: !2186, line: 362, type: !2219)
!2235 = !DILocalVariable(name: "base", arg: 3, scope: !2229, file: !2186, line: 362, type: !566)
!2236 = !DILocation(line: 0, scope: !2229)
!2237 = !DILocation(line: 365, column: 10, scope: !2229)
!2238 = !DILocation(line: 365, column: 3, scope: !2229)
!2239 = distinct !DISubprogram(name: "stat", scope: !2240, file: !2240, line: 453, type: !2241, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2278)
!2240 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!566, !571, !2243}
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2245, line: 46, size: 1152, elements: !2246)
!2245 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2246 = !{!2247, !2249, !2251, !2253, !2255, !2257, !2259, !2260, !2261, !2262, !2264, !2266, !2274, !2275, !2276}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2244, file: !2245, line: 48, baseType: !2248, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1998, line: 145, baseType: !653)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2244, file: !2245, line: 53, baseType: !2250, size: 64, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1998, line: 148, baseType: !653)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2244, file: !2245, line: 61, baseType: !2252, size: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1998, line: 151, baseType: !653)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2244, file: !2245, line: 62, baseType: !2254, size: 32, offset: 192)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1998, line: 150, baseType: !7)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2244, file: !2245, line: 64, baseType: !2256, size: 32, offset: 224)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1998, line: 146, baseType: !7)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2244, file: !2245, line: 65, baseType: !2258, size: 32, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1998, line: 147, baseType: !7)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2244, file: !2245, line: 67, baseType: !566, size: 32, offset: 288)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2244, file: !2245, line: 69, baseType: !2248, size: 64, offset: 320)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2244, file: !2245, line: 74, baseType: !1997, size: 64, offset: 384)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2244, file: !2245, line: 78, baseType: !2263, size: 64, offset: 448)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1998, line: 174, baseType: !670)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2244, file: !2245, line: 80, baseType: !2265, size: 64, offset: 512)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1998, line: 179, baseType: !670)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2244, file: !2245, line: 91, baseType: !2267, size: 128, offset: 576)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2268, line: 10, size: 128, elements: !2269)
!2268 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2269 = !{!2270, !2272}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2267, file: !2268, line: 12, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1998, line: 160, baseType: !670)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2267, file: !2268, line: 16, baseType: !2273, size: 64, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1998, line: 196, baseType: !670)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2244, file: !2245, line: 92, baseType: !2267, size: 128, offset: 704)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2244, file: !2245, line: 93, baseType: !2267, size: 128, offset: 832)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2244, file: !2245, line: 106, baseType: !2277, size: 192, offset: 960)
!2277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2273, size: 192, elements: !770)
!2278 = !{!2279, !2280}
!2279 = !DILocalVariable(name: "__path", arg: 1, scope: !2239, file: !2240, line: 453, type: !571)
!2280 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2239, file: !2240, line: 453, type: !2243)
!2281 = !DILocation(line: 0, scope: !2239)
!2282 = !DILocation(line: 455, column: 10, scope: !2239)
!2283 = !DILocation(line: 455, column: 3, scope: !2239)
!2284 = distinct !DISubprogram(name: "lstat", scope: !2240, file: !2240, line: 460, type: !2241, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2285)
!2285 = !{!2286, !2287}
!2286 = !DILocalVariable(name: "__path", arg: 1, scope: !2284, file: !2240, line: 460, type: !571)
!2287 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2284, file: !2240, line: 460, type: !2243)
!2288 = !DILocation(line: 0, scope: !2284)
!2289 = !DILocation(line: 462, column: 10, scope: !2284)
!2290 = !DILocation(line: 462, column: 3, scope: !2284)
!2291 = distinct !DISubprogram(name: "fstat", scope: !2240, file: !2240, line: 467, type: !2292, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2294)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!566, !566, !2243}
!2294 = !{!2295, !2296}
!2295 = !DILocalVariable(name: "__fd", arg: 1, scope: !2291, file: !2240, line: 467, type: !566)
!2296 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2291, file: !2240, line: 467, type: !2243)
!2297 = !DILocation(line: 0, scope: !2291)
!2298 = !DILocation(line: 469, column: 10, scope: !2291)
!2299 = !DILocation(line: 469, column: 3, scope: !2291)
!2300 = distinct !DISubprogram(name: "fstatat", scope: !2240, file: !2240, line: 474, type: !2301, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2303)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!566, !566, !571, !2243, !566}
!2303 = !{!2304, !2305, !2306, !2307}
!2304 = !DILocalVariable(name: "__fd", arg: 1, scope: !2300, file: !2240, line: 474, type: !566)
!2305 = !DILocalVariable(name: "__filename", arg: 2, scope: !2300, file: !2240, line: 474, type: !571)
!2306 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2300, file: !2240, line: 474, type: !2243)
!2307 = !DILocalVariable(name: "__flag", arg: 4, scope: !2300, file: !2240, line: 474, type: !566)
!2308 = !DILocation(line: 0, scope: !2300)
!2309 = !DILocation(line: 477, column: 10, scope: !2300)
!2310 = !DILocation(line: 477, column: 3, scope: !2300)
!2311 = distinct !DISubprogram(name: "mknod", scope: !2240, file: !2240, line: 483, type: !2312, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!566, !571, !2254, !2248}
!2314 = !{!2315, !2316, !2317}
!2315 = !DILocalVariable(name: "__path", arg: 1, scope: !2311, file: !2240, line: 483, type: !571)
!2316 = !DILocalVariable(name: "__mode", arg: 2, scope: !2311, file: !2240, line: 483, type: !2254)
!2317 = !DILocalVariable(name: "__dev", arg: 3, scope: !2311, file: !2240, line: 483, type: !2248)
!2318 = !DILocation(line: 0, scope: !2311)
!2319 = !DILocation(line: 485, column: 10, scope: !2311)
!2320 = !DILocation(line: 485, column: 3, scope: !2311)
!2321 = distinct !DISubprogram(name: "mknodat", scope: !2240, file: !2240, line: 491, type: !2322, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2324)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!566, !566, !571, !2254, !2248}
!2324 = !{!2325, !2326, !2327, !2328}
!2325 = !DILocalVariable(name: "__fd", arg: 1, scope: !2321, file: !2240, line: 491, type: !566)
!2326 = !DILocalVariable(name: "__path", arg: 2, scope: !2321, file: !2240, line: 491, type: !571)
!2327 = !DILocalVariable(name: "__mode", arg: 3, scope: !2321, file: !2240, line: 491, type: !2254)
!2328 = !DILocalVariable(name: "__dev", arg: 4, scope: !2321, file: !2240, line: 491, type: !2248)
!2329 = !DILocation(line: 0, scope: !2321)
!2330 = !DILocation(line: 494, column: 10, scope: !2321)
!2331 = !DILocation(line: 494, column: 3, scope: !2321)
!2332 = distinct !DISubprogram(name: "stat64", scope: !2240, file: !2240, line: 502, type: !2333, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2355)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!566, !571, !2335}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2245, line: 119, size: 1152, elements: !2337)
!2337 = !{!2338, !2339, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2351, !2352, !2353, !2354}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2336, file: !2245, line: 121, baseType: !2248, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2336, file: !2245, line: 123, baseType: !2340, size: 64, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1998, line: 149, baseType: !653)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2336, file: !2245, line: 124, baseType: !2252, size: 64, offset: 128)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2336, file: !2245, line: 125, baseType: !2254, size: 32, offset: 192)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2336, file: !2245, line: 132, baseType: !2256, size: 32, offset: 224)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2336, file: !2245, line: 133, baseType: !2258, size: 32, offset: 256)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2336, file: !2245, line: 135, baseType: !566, size: 32, offset: 288)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2336, file: !2245, line: 136, baseType: !2248, size: 64, offset: 320)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2336, file: !2245, line: 137, baseType: !1997, size: 64, offset: 384)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2336, file: !2245, line: 143, baseType: !2263, size: 64, offset: 448)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2336, file: !2245, line: 144, baseType: !2350, size: 64, offset: 512)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1998, line: 180, baseType: !670)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2336, file: !2245, line: 152, baseType: !2267, size: 128, offset: 576)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2336, file: !2245, line: 153, baseType: !2267, size: 128, offset: 704)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2336, file: !2245, line: 154, baseType: !2267, size: 128, offset: 832)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2336, file: !2245, line: 164, baseType: !2277, size: 192, offset: 960)
!2355 = !{!2356, !2357}
!2356 = !DILocalVariable(name: "__path", arg: 1, scope: !2332, file: !2240, line: 502, type: !571)
!2357 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2332, file: !2240, line: 502, type: !2335)
!2358 = !DILocation(line: 0, scope: !2332)
!2359 = !DILocation(line: 504, column: 10, scope: !2332)
!2360 = !DILocation(line: 504, column: 3, scope: !2332)
!2361 = distinct !DISubprogram(name: "lstat64", scope: !2240, file: !2240, line: 509, type: !2333, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2362)
!2362 = !{!2363, !2364}
!2363 = !DILocalVariable(name: "__path", arg: 1, scope: !2361, file: !2240, line: 509, type: !571)
!2364 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2361, file: !2240, line: 509, type: !2335)
!2365 = !DILocation(line: 0, scope: !2361)
!2366 = !DILocation(line: 511, column: 10, scope: !2361)
!2367 = !DILocation(line: 511, column: 3, scope: !2361)
!2368 = distinct !DISubprogram(name: "fstat64", scope: !2240, file: !2240, line: 516, type: !2369, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2371)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{!566, !566, !2335}
!2371 = !{!2372, !2373}
!2372 = !DILocalVariable(name: "__fd", arg: 1, scope: !2368, file: !2240, line: 516, type: !566)
!2373 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2368, file: !2240, line: 516, type: !2335)
!2374 = !DILocation(line: 0, scope: !2368)
!2375 = !DILocation(line: 518, column: 10, scope: !2368)
!2376 = !DILocation(line: 518, column: 3, scope: !2368)
!2377 = distinct !DISubprogram(name: "fstatat64", scope: !2240, file: !2240, line: 523, type: !2378, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2380)
!2378 = !DISubroutineType(types: !2379)
!2379 = !{!566, !566, !571, !2335, !566}
!2380 = !{!2381, !2382, !2383, !2384}
!2381 = !DILocalVariable(name: "__fd", arg: 1, scope: !2377, file: !2240, line: 523, type: !566)
!2382 = !DILocalVariable(name: "__filename", arg: 2, scope: !2377, file: !2240, line: 523, type: !571)
!2383 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2377, file: !2240, line: 523, type: !2335)
!2384 = !DILocalVariable(name: "__flag", arg: 4, scope: !2377, file: !2240, line: 523, type: !566)
!2385 = !DILocation(line: 0, scope: !2377)
!2386 = !DILocation(line: 526, column: 10, scope: !2377)
!2387 = !DILocation(line: 526, column: 3, scope: !2377)
!2388 = distinct !DISubprogram(name: "ira_create_allocno", scope: !3, file: !3, line: 420, type: !2389, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2391)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!573, !566, !565, !1713}
!2391 = !{!2392, !2393, !2394, !2395}
!2392 = !DILocalVariable(name: "regno", arg: 1, scope: !2388, file: !3, line: 420, type: !566)
!2393 = !DILocalVariable(name: "cap_p", arg: 2, scope: !2388, file: !3, line: 420, type: !565)
!2394 = !DILocalVariable(name: "loop_tree_node", arg: 3, scope: !2388, file: !3, line: 420, type: !1713)
!2395 = !DILocalVariable(name: "a", scope: !2388, file: !3, line: 422, type: !573)
!2396 = !DILocation(line: 0, scope: !2388)
!2397 = !DILocation(line: 424, column: 35, scope: !2388)
!2398 = !DILocation(line: 424, column: 23, scope: !2388)
!2399 = !DILocation(line: 424, column: 7, scope: !2388)
!2400 = !DILocation(line: 425, column: 3, scope: !2388)
!2401 = !DILocation(line: 425, column: 21, scope: !2388)
!2402 = !DILocation(line: 426, column: 3, scope: !2388)
!2403 = !DILocation(line: 426, column: 30, scope: !2388)
!2404 = !DILocation(line: 427, column: 9, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2388, file: !3, line: 427, column: 7)
!2406 = !DILocation(line: 427, column: 7, scope: !2388)
!2407 = !DILocation(line: 429, column: 40, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 428, column: 5)
!2409 = !DILocation(line: 429, column: 7, scope: !2408)
!2410 = !DILocation(line: 429, column: 38, scope: !2408)
!2411 = !DILocation(line: 430, column: 36, scope: !2408)
!2412 = !DILocation(line: 431, column: 27, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 431, column: 11)
!2414 = !DILocation(line: 431, column: 11, scope: !2413)
!2415 = !DILocation(line: 431, column: 52, scope: !2413)
!2416 = !DILocation(line: 431, column: 11, scope: !2408)
!2417 = !DILocation(line: 435, column: 43, scope: !2413)
!2418 = !DILocation(line: 435, column: 2, scope: !2413)
!2419 = !DILocation(line: 437, column: 3, scope: !2388)
!2420 = !DILocation(line: 437, column: 19, scope: !2388)
!2421 = !DILocation(line: 438, column: 3, scope: !2388)
!2422 = !DILocation(line: 438, column: 26, scope: !2388)
!2423 = !DILocation(line: 439, column: 21, scope: !2388)
!2424 = !DILocation(line: 439, column: 3, scope: !2388)
!2425 = !DILocation(line: 439, column: 19, scope: !2388)
!2426 = !DILocation(line: 440, column: 35, scope: !2388)
!2427 = !DILocation(line: 440, column: 3, scope: !2388)
!2428 = !DILocation(line: 441, column: 3, scope: !2388)
!2429 = !DILocation(line: 441, column: 38, scope: !2388)
!2430 = !DILocation(line: 442, column: 3, scope: !2388)
!2431 = !DILocation(line: 442, column: 37, scope: !2388)
!2432 = !DILocation(line: 443, column: 3, scope: !2388)
!2433 = !DILocation(line: 444, column: 3, scope: !2388)
!2434 = !DILocation(line: 445, column: 3, scope: !2388)
!2435 = !DILocation(line: 445, column: 21, scope: !2388)
!2436 = !DILocation(line: 446, column: 3, scope: !2388)
!2437 = !DILocation(line: 446, column: 20, scope: !2388)
!2438 = !DILocation(line: 447, column: 3, scope: !2388)
!2439 = !DILocation(line: 447, column: 26, scope: !2388)
!2440 = !DILocation(line: 448, column: 3, scope: !2388)
!2441 = !DILocation(line: 448, column: 25, scope: !2388)
!2442 = !DILocation(line: 449, column: 3, scope: !2388)
!2443 = !DILocation(line: 449, column: 33, scope: !2388)
!2444 = !DILocation(line: 451, column: 3, scope: !2388)
!2445 = !DILocation(line: 451, column: 30, scope: !2388)
!2446 = !DILocation(line: 454, column: 3, scope: !2388)
!2447 = !DILocation(line: 454, column: 34, scope: !2388)
!2448 = !DILocation(line: 464, column: 30, scope: !2388)
!2449 = !DILocation(line: 465, column: 29, scope: !2388)
!2450 = !DILocation(line: 465, column: 23, scope: !2388)
!2451 = !DILocation(line: 465, column: 46, scope: !2388)
!2452 = !DILocation(line: 465, column: 3, scope: !2388)
!2453 = !DILocation(line: 465, column: 20, scope: !2388)
!2454 = !DILocation(line: 466, column: 3, scope: !2388)
!2455 = !DILocation(line: 466, column: 22, scope: !2388)
!2456 = !DILocation(line: 467, column: 3, scope: !2388)
!2457 = !DILocation(line: 467, column: 30, scope: !2388)
!2458 = !DILocation(line: 468, column: 3, scope: !2388)
!2459 = !DILocation(line: 468, column: 39, scope: !2388)
!2460 = !DILocation(line: 469, column: 3, scope: !2388)
!2461 = !DILocation(line: 469, column: 38, scope: !2388)
!2462 = !DILocation(line: 470, column: 3, scope: !2388)
!2463 = !DILocation(line: 470, column: 47, scope: !2388)
!2464 = !DILocation(line: 471, column: 3, scope: !2388)
!2465 = !DILocation(line: 471, column: 35, scope: !2388)
!2466 = !DILocation(line: 472, column: 3, scope: !2388)
!2467 = !DILocation(line: 472, column: 27, scope: !2388)
!2468 = !DILocation(line: 473, column: 3, scope: !2388)
!2469 = !DILocation(line: 473, column: 40, scope: !2388)
!2470 = !DILocation(line: 474, column: 3, scope: !2388)
!2471 = !DILocation(line: 474, column: 32, scope: !2388)
!2472 = !DILocation(line: 475, column: 3, scope: !2388)
!2473 = !DILocation(line: 475, column: 27, scope: !2388)
!2474 = !DILocation(line: 476, column: 3, scope: !2388)
!2475 = !DILocation(line: 476, column: 35, scope: !2388)
!2476 = !DILocation(line: 477, column: 3, scope: !2388)
!2477 = !DILocation(line: 477, column: 42, scope: !2388)
!2478 = !DILocation(line: 478, column: 3, scope: !2388)
!2479 = !DILocation(line: 478, column: 35, scope: !2388)
!2480 = !DILocation(line: 479, column: 3, scope: !2388)
!2481 = !DILocation(line: 479, column: 35, scope: !2388)
!2482 = !DILocation(line: 480, column: 3, scope: !2388)
!2483 = !DILocation(line: 480, column: 39, scope: !2388)
!2484 = !DILocation(line: 481, column: 3, scope: !2388)
!2485 = !DILocation(line: 481, column: 38, scope: !2388)
!2486 = !DILocation(line: 482, column: 3, scope: !2388)
!2487 = !DILocation(line: 482, column: 27, scope: !2388)
!2488 = !DILocation(line: 483, column: 3, scope: !2388)
!2489 = !DILocation(line: 483, column: 19, scope: !2388)
!2490 = !DILocation(line: 484, column: 3, scope: !2388)
!2491 = !DILocation(line: 484, column: 19, scope: !2388)
!2492 = !DILocation(line: 485, column: 29, scope: !2388)
!2493 = !DILocation(line: 485, column: 3, scope: !2388)
!2494 = !DILocation(line: 485, column: 27, scope: !2388)
!2495 = !DILocation(line: 486, column: 3, scope: !2388)
!2496 = !DILocation(line: 487, column: 18, scope: !2388)
!2497 = !DILocation(line: 487, column: 16, scope: !2388)
!2498 = !DILocation(line: 488, column: 22, scope: !2388)
!2499 = !DILocation(line: 488, column: 20, scope: !2388)
!2500 = !DILocation(line: 489, column: 3, scope: !2388)
!2501 = !DILocation(line: 491, column: 7, scope: !2388)
!2502 = !DILocation(line: 491, column: 5, scope: !2388)
!2503 = !DILocation(line: 492, column: 3, scope: !2388)
!2504 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_safe_push", scope: !574, file: !574, line: 68, type: !2505, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2508)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!1727, !2507, !573}
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!2508 = !{!2509, !2510}
!2509 = !DILocalVariable(name: "vec_", arg: 1, scope: !2504, file: !574, line: 68, type: !2507)
!2510 = !DILocalVariable(name: "obj_", arg: 2, scope: !2504, file: !574, line: 68, type: !573)
!2511 = !DILocation(line: 0, scope: !2504)
!2512 = !DILocation(line: 68, column: 1, scope: !2504)
!2513 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_address", scope: !574, file: !574, line: 67, type: !2514, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2517)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{!1727, !2516}
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!2517 = !{!2518}
!2518 = !DILocalVariable(name: "vec_", arg: 1, scope: !2513, file: !574, line: 67, type: !2516)
!2519 = !DILocation(line: 0, scope: !2513)
!2520 = !DILocation(line: 67, column: 1, scope: !2513)
!2521 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_length", scope: !574, file: !574, line: 67, type: !2522, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2526)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!7, !2524}
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!2526 = !{!2527}
!2527 = !DILocalVariable(name: "vec_", arg: 1, scope: !2521, file: !574, line: 67, type: !2524)
!2528 = !DILocation(line: 0, scope: !2521)
!2529 = !DILocation(line: 67, column: 1, scope: !2521)
!2530 = distinct !DISubprogram(name: "ira_set_allocno_cover_class", scope: !3, file: !3, line: 497, type: !2531, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2533)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{null, !573, !390}
!2533 = !{!2534, !2535}
!2534 = !DILocalVariable(name: "a", arg: 1, scope: !2530, file: !3, line: 497, type: !573)
!2535 = !DILocalVariable(name: "cover_class", arg: 2, scope: !2530, file: !3, line: 497, type: !390)
!2536 = !DILocation(line: 0, scope: !2530)
!2537 = !DILocation(line: 499, column: 3, scope: !2530)
!2538 = !DILocation(line: 499, column: 27, scope: !2530)
!2539 = !DILocation(line: 500, column: 3, scope: !2530)
!2540 = !DILocation(line: 502, column: 3, scope: !2530)
!2541 = !DILocation(line: 504, column: 1, scope: !2530)
!2542 = distinct !DISubprogram(name: "ira_conflict_vector_profitable_p", scope: !3, file: !3, line: 509, type: !2543, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!565, !573, !566}
!2545 = !{!2546, !2547, !2548}
!2546 = !DILocalVariable(name: "a", arg: 1, scope: !2542, file: !3, line: 509, type: !573)
!2547 = !DILocalVariable(name: "num", arg: 2, scope: !2542, file: !3, line: 509, type: !566)
!2548 = !DILocalVariable(name: "nw", scope: !2542, file: !3, line: 511, type: !566)
!2549 = !DILocation(line: 0, scope: !2542)
!2550 = !DILocation(line: 513, column: 7, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2542, file: !3, line: 513, column: 7)
!2552 = !DILocation(line: 513, column: 25, scope: !2551)
!2553 = !DILocation(line: 513, column: 23, scope: !2551)
!2554 = !DILocation(line: 513, column: 7, scope: !2542)
!2555 = !DILocation(line: 518, column: 25, scope: !2542)
!2556 = !DILocation(line: 518, column: 43, scope: !2542)
!2557 = !DILocation(line: 518, column: 59, scope: !2542)
!2558 = !DILocation(line: 519, column: 45, scope: !2542)
!2559 = !DILocation(line: 519, column: 40, scope: !2542)
!2560 = !DILocation(line: 519, column: 38, scope: !2542)
!2561 = !DILocation(line: 520, column: 8, scope: !2542)
!2562 = !DILocation(line: 520, column: 6, scope: !2542)
!2563 = !DILocation(line: 520, column: 13, scope: !2542)
!2564 = !DILocation(line: 520, column: 4, scope: !2542)
!2565 = !DILocation(line: 519, column: 10, scope: !2542)
!2566 = !DILocation(line: 519, column: 3, scope: !2542)
!2567 = !DILocation(line: 521, column: 1, scope: !2542)
!2568 = distinct !DISubprogram(name: "ira_allocate_allocno_conflict_vec", scope: !3, file: !3, line: 526, type: !2569, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2571)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{null, !573, !566}
!2571 = !{!2572, !2573, !2574, !2575}
!2572 = !DILocalVariable(name: "a", arg: 1, scope: !2568, file: !3, line: 526, type: !573)
!2573 = !DILocalVariable(name: "num", arg: 2, scope: !2568, file: !3, line: 526, type: !566)
!2574 = !DILocalVariable(name: "size", scope: !2568, file: !3, line: 528, type: !566)
!2575 = !DILocalVariable(name: "vec", scope: !2568, file: !3, line: 529, type: !1727)
!2576 = !DILocation(line: 0, scope: !2568)
!2577 = !DILocation(line: 533, column: 33, scope: !2568)
!2578 = !DILocation(line: 534, column: 54, scope: !2568)
!2579 = !DILocation(line: 534, column: 40, scope: !2568)
!2580 = !DILocation(line: 534, column: 3, scope: !2568)
!2581 = !DILocation(line: 534, column: 38, scope: !2568)
!2582 = !DILocation(line: 535, column: 27, scope: !2568)
!2583 = !DILocation(line: 536, column: 10, scope: !2568)
!2584 = !DILocation(line: 537, column: 3, scope: !2568)
!2585 = !DILocation(line: 537, column: 37, scope: !2568)
!2586 = !DILocation(line: 538, column: 3, scope: !2568)
!2587 = !DILocation(line: 538, column: 43, scope: !2568)
!2588 = !DILocation(line: 539, column: 3, scope: !2568)
!2589 = !DILocation(line: 539, column: 30, scope: !2568)
!2590 = !DILocation(line: 540, column: 1, scope: !2568)
!2591 = distinct !DISubprogram(name: "ira_allocate_allocno_conflicts", scope: !3, file: !3, line: 560, type: !2569, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2592)
!2592 = !{!2593, !2594}
!2593 = !DILocalVariable(name: "a", arg: 1, scope: !2591, file: !3, line: 560, type: !573)
!2594 = !DILocalVariable(name: "num", arg: 2, scope: !2591, file: !3, line: 560, type: !566)
!2595 = !DILocation(line: 0, scope: !2591)
!2596 = !DILocation(line: 562, column: 7, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 562, column: 7)
!2598 = !DILocation(line: 562, column: 7, scope: !2591)
!2599 = !DILocation(line: 563, column: 5, scope: !2597)
!2600 = !DILocation(line: 565, column: 5, scope: !2597)
!2601 = !DILocation(line: 566, column: 1, scope: !2591)
!2602 = distinct !DISubprogram(name: "allocate_allocno_conflict_bit_vec", scope: !3, file: !3, line: 544, type: !2603, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2605)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{null, !573}
!2605 = !{!2606, !2607}
!2606 = !DILocalVariable(name: "a", arg: 1, scope: !2602, file: !3, line: 544, type: !573)
!2607 = !DILocalVariable(name: "size", scope: !2602, file: !3, line: 546, type: !7)
!2608 = !DILocation(line: 0, scope: !2602)
!2609 = !DILocation(line: 549, column: 12, scope: !2602)
!2610 = !DILocation(line: 549, column: 30, scope: !2602)
!2611 = !DILocation(line: 549, column: 28, scope: !2602)
!2612 = !DILocation(line: 549, column: 46, scope: !2602)
!2613 = !DILocation(line: 550, column: 4, scope: !2602)
!2614 = !DILocation(line: 550, column: 19, scope: !2602)
!2615 = !DILocation(line: 551, column: 54, scope: !2602)
!2616 = !DILocation(line: 551, column: 40, scope: !2602)
!2617 = !DILocation(line: 551, column: 3, scope: !2602)
!2618 = !DILocation(line: 551, column: 38, scope: !2602)
!2619 = !DILocation(line: 552, column: 3, scope: !2602)
!2620 = !DILocation(line: 553, column: 3, scope: !2602)
!2621 = !DILocation(line: 553, column: 43, scope: !2602)
!2622 = !DILocation(line: 554, column: 3, scope: !2602)
!2623 = !DILocation(line: 554, column: 30, scope: !2602)
!2624 = !DILocation(line: 555, column: 1, scope: !2602)
!2625 = distinct !DISubprogram(name: "ira_add_allocno_conflict", scope: !3, file: !3, line: 659, type: !2626, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2628)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{null, !573, !573}
!2628 = !{!2629, !2630}
!2629 = !DILocalVariable(name: "a1", arg: 1, scope: !2625, file: !3, line: 659, type: !573)
!2630 = !DILocalVariable(name: "a2", arg: 2, scope: !2625, file: !3, line: 659, type: !573)
!2631 = !DILocation(line: 0, scope: !2625)
!2632 = !DILocation(line: 661, column: 3, scope: !2625)
!2633 = !DILocation(line: 662, column: 3, scope: !2625)
!2634 = !DILocation(line: 663, column: 1, scope: !2625)
!2635 = distinct !DISubprogram(name: "add_to_allocno_conflicts", scope: !3, file: !3, line: 570, type: !2626, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2644, !2646, !2647, !2648}
!2637 = !DILocalVariable(name: "a1", arg: 1, scope: !2635, file: !3, line: 570, type: !573)
!2638 = !DILocalVariable(name: "a2", arg: 2, scope: !2635, file: !3, line: 570, type: !573)
!2639 = !DILocalVariable(name: "num", scope: !2635, file: !3, line: 572, type: !566)
!2640 = !DILocalVariable(name: "size", scope: !2635, file: !3, line: 573, type: !7)
!2641 = !DILocalVariable(name: "vec", scope: !2642, file: !3, line: 577, type: !1727)
!2642 = distinct !DILexicalBlock(scope: !2643, file: !3, line: 576, column: 5)
!2643 = distinct !DILexicalBlock(scope: !2635, file: !3, line: 575, column: 7)
!2644 = !DILocalVariable(name: "nw", scope: !2645, file: !3, line: 599, type: !566)
!2645 = distinct !DILexicalBlock(scope: !2643, file: !3, line: 598, column: 5)
!2646 = !DILocalVariable(name: "added_head_nw", scope: !2645, file: !3, line: 599, type: !566)
!2647 = !DILocalVariable(name: "id", scope: !2645, file: !3, line: 599, type: !566)
!2648 = !DILocalVariable(name: "vec", scope: !2645, file: !3, line: 600, type: !1824)
!2649 = !DILocation(line: 0, scope: !2635)
!2650 = !DILocation(line: 575, column: 7, scope: !2643)
!2651 = !DILocation(line: 575, column: 7, scope: !2635)
!2652 = !DILocation(line: 579, column: 13, scope: !2642)
!2653 = !DILocation(line: 579, column: 48, scope: !2642)
!2654 = !DILocation(line: 580, column: 11, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 580, column: 11)
!2656 = !DILocation(line: 581, column: 8, scope: !2655)
!2657 = !DILocation(line: 581, column: 12, scope: !2655)
!2658 = !DILocation(line: 581, column: 4, scope: !2655)
!2659 = !DILocation(line: 580, column: 11, scope: !2642)
!2660 = !DILocation(line: 582, column: 26, scope: !2655)
!2661 = !DILocation(line: 0, scope: !2642)
!2662 = !DILocation(line: 582, column: 2, scope: !2655)
!2663 = !DILocation(line: 585, column: 14, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 584, column: 2)
!2665 = !DILocation(line: 585, column: 20, scope: !2664)
!2666 = !DILocation(line: 585, column: 29, scope: !2664)
!2667 = !DILocation(line: 586, column: 42, scope: !2664)
!2668 = !DILocation(line: 586, column: 28, scope: !2664)
!2669 = !DILocation(line: 587, column: 17, scope: !2664)
!2670 = !DILocation(line: 588, column: 30, scope: !2664)
!2671 = !DILocation(line: 588, column: 28, scope: !2664)
!2672 = !DILocation(line: 587, column: 4, scope: !2664)
!2673 = !DILocation(line: 589, column: 14, scope: !2664)
!2674 = !DILocation(line: 589, column: 4, scope: !2664)
!2675 = !DILocation(line: 590, column: 40, scope: !2664)
!2676 = !DILocation(line: 591, column: 45, scope: !2664)
!2677 = !DILocation(line: 0, scope: !2655)
!2678 = !DILocation(line: 593, column: 7, scope: !2642)
!2679 = !DILocation(line: 593, column: 20, scope: !2642)
!2680 = !DILocation(line: 594, column: 15, scope: !2642)
!2681 = !DILocation(line: 594, column: 7, scope: !2642)
!2682 = !DILocation(line: 594, column: 20, scope: !2642)
!2683 = !DILocation(line: 595, column: 41, scope: !2642)
!2684 = !DILocation(line: 596, column: 5, scope: !2642)
!2685 = !DILocation(line: 602, column: 12, scope: !2645)
!2686 = !DILocation(line: 0, scope: !2645)
!2687 = !DILocation(line: 603, column: 30, scope: !2645)
!2688 = !DILocation(line: 604, column: 11, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 604, column: 11)
!2690 = !DILocation(line: 604, column: 28, scope: !2689)
!2691 = !DILocation(line: 604, column: 11, scope: !2645)
!2692 = !DILocation(line: 607, column: 43, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 605, column: 2)
!2694 = !DILocation(line: 607, column: 48, scope: !2693)
!2695 = !DILocation(line: 607, column: 63, scope: !2693)
!2696 = !DILocation(line: 608, column: 10, scope: !2693)
!2697 = !DILocation(line: 608, column: 27, scope: !2693)
!2698 = !DILocation(line: 608, column: 47, scope: !2693)
!2699 = !DILocation(line: 608, column: 62, scope: !2693)
!2700 = !DILocation(line: 609, column: 15, scope: !2693)
!2701 = !DILocation(line: 609, column: 32, scope: !2693)
!2702 = !DILocation(line: 610, column: 8, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 610, column: 8)
!2704 = !DILocation(line: 610, column: 49, scope: !2703)
!2705 = !DILocation(line: 610, column: 8, scope: !2693)
!2706 = !DILocation(line: 612, column: 32, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 611, column: 6)
!2708 = !DILocation(line: 612, column: 30, scope: !2707)
!2709 = !DILocation(line: 613, column: 10, scope: !2707)
!2710 = !DILocation(line: 613, column: 15, scope: !2707)
!2711 = !DILocation(line: 613, column: 18, scope: !2707)
!2712 = !DILocation(line: 612, column: 8, scope: !2707)
!2713 = !DILocation(line: 614, column: 38, scope: !2707)
!2714 = !DILocation(line: 614, column: 8, scope: !2707)
!2715 = !DILocation(line: 615, column: 6, scope: !2707)
!2716 = !DILocation(line: 619, column: 8, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 617, column: 6)
!2718 = !DILocation(line: 619, column: 31, scope: !2717)
!2719 = !DILocation(line: 619, column: 40, scope: !2717)
!2720 = !DILocation(line: 620, column: 45, scope: !2717)
!2721 = !DILocation(line: 620, column: 31, scope: !2717)
!2722 = !DILocation(line: 620, column: 14, scope: !2717)
!2723 = !DILocation(line: 621, column: 31, scope: !2717)
!2724 = !DILocation(line: 621, column: 45, scope: !2717)
!2725 = !DILocation(line: 621, column: 29, scope: !2717)
!2726 = !DILocation(line: 622, column: 9, scope: !2717)
!2727 = !DILocation(line: 623, column: 9, scope: !2717)
!2728 = !DILocation(line: 623, column: 12, scope: !2717)
!2729 = !DILocation(line: 621, column: 8, scope: !2717)
!2730 = !DILocation(line: 624, column: 8, scope: !2717)
!2731 = !DILocation(line: 626, column: 11, scope: !2717)
!2732 = !DILocation(line: 626, column: 32, scope: !2717)
!2733 = !DILocation(line: 626, column: 9, scope: !2717)
!2734 = !DILocation(line: 627, column: 17, scope: !2717)
!2735 = !DILocation(line: 625, column: 8, scope: !2717)
!2736 = !DILocation(line: 628, column: 18, scope: !2717)
!2737 = !DILocation(line: 628, column: 8, scope: !2717)
!2738 = !DILocation(line: 629, column: 44, scope: !2717)
!2739 = !DILocation(line: 630, column: 49, scope: !2717)
!2740 = !DILocation(line: 632, column: 38, scope: !2693)
!2741 = !DILocation(line: 632, column: 21, scope: !2693)
!2742 = !DILocation(line: 633, column: 2, scope: !2693)
!2743 = !DILocation(line: 634, column: 16, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 634, column: 16)
!2745 = !DILocation(line: 634, column: 33, scope: !2744)
!2746 = !DILocation(line: 634, column: 16, scope: !2689)
!2747 = !DILocation(line: 636, column: 13, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2744, file: !3, line: 635, column: 2)
!2749 = !DILocation(line: 636, column: 33, scope: !2748)
!2750 = !DILocation(line: 636, column: 48, scope: !2748)
!2751 = !DILocation(line: 637, column: 14, scope: !2748)
!2752 = !DILocation(line: 638, column: 8, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 638, column: 8)
!2754 = !DILocation(line: 638, column: 49, scope: !2753)
!2755 = !DILocation(line: 638, column: 8, scope: !2748)
!2756 = !DILocation(line: 641, column: 18, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 639, column: 6)
!2758 = !DILocation(line: 641, column: 23, scope: !2757)
!2759 = !DILocation(line: 641, column: 32, scope: !2757)
!2760 = !DILocation(line: 642, column: 45, scope: !2757)
!2761 = !DILocation(line: 642, column: 31, scope: !2757)
!2762 = !DILocation(line: 642, column: 14, scope: !2757)
!2763 = !DILocation(line: 643, column: 21, scope: !2757)
!2764 = !DILocation(line: 644, column: 9, scope: !2757)
!2765 = !DILocation(line: 643, column: 8, scope: !2757)
!2766 = !DILocation(line: 645, column: 31, scope: !2757)
!2767 = !DILocation(line: 645, column: 29, scope: !2757)
!2768 = !DILocation(line: 646, column: 17, scope: !2757)
!2769 = !DILocation(line: 646, column: 12, scope: !2757)
!2770 = !DILocation(line: 645, column: 8, scope: !2757)
!2771 = !DILocation(line: 647, column: 18, scope: !2757)
!2772 = !DILocation(line: 647, column: 8, scope: !2757)
!2773 = !DILocation(line: 648, column: 44, scope: !2757)
!2774 = !DILocation(line: 649, column: 49, scope: !2757)
!2775 = !DILocation(line: 653, column: 7, scope: !2645)
!2776 = !DILocation(line: 650, column: 6, scope: !2757)
!2777 = !DILocation(line: 651, column: 21, scope: !2748)
!2778 = !DILocation(line: 652, column: 2, scope: !2748)
!2779 = !DILocation(line: 655, column: 1, scope: !2635)
!2780 = distinct !DISubprogram(name: "ira_print_expanded_allocno", scope: !3, file: !3, line: 736, type: !2603, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2781)
!2781 = !{!2782, !2783}
!2782 = !DILocalVariable(name: "a", arg: 1, scope: !2780, file: !3, line: 736, type: !573)
!2783 = !DILocalVariable(name: "bb", scope: !2780, file: !3, line: 738, type: !956)
!2784 = !DILocation(line: 0, scope: !2780)
!2785 = !DILocation(line: 740, column: 12, scope: !2780)
!2786 = !DILocation(line: 740, column: 39, scope: !2780)
!2787 = !DILocation(line: 740, column: 56, scope: !2780)
!2788 = !DILocation(line: 740, column: 3, scope: !2780)
!2789 = !DILocation(line: 741, column: 13, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 741, column: 7)
!2791 = !DILocation(line: 741, column: 41, scope: !2790)
!2792 = !DILocation(line: 741, column: 45, scope: !2790)
!2793 = !DILocation(line: 0, scope: !2790)
!2794 = !DILocation(line: 741, column: 7, scope: !2780)
!2795 = !DILocation(line: 742, column: 41, scope: !2790)
!2796 = !DILocation(line: 742, column: 5, scope: !2790)
!2797 = !DILocation(line: 744, column: 65, scope: !2790)
!2798 = !DILocation(line: 744, column: 71, scope: !2790)
!2799 = !DILocation(line: 744, column: 5, scope: !2790)
!2800 = !DILocation(line: 745, column: 7, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 745, column: 7)
!2802 = !DILocation(line: 745, column: 30, scope: !2801)
!2803 = !DILocation(line: 745, column: 7, scope: !2780)
!2804 = !DILocation(line: 747, column: 16, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 746, column: 5)
!2806 = !DILocation(line: 747, column: 7, scope: !2805)
!2807 = !DILocation(line: 748, column: 35, scope: !2805)
!2808 = !DILocation(line: 748, column: 7, scope: !2805)
!2809 = !DILocation(line: 749, column: 5, scope: !2805)
!2810 = !DILocation(line: 750, column: 12, scope: !2780)
!2811 = !DILocation(line: 750, column: 3, scope: !2780)
!2812 = !DILocation(line: 751, column: 1, scope: !2780)
!2813 = distinct !DISubprogram(name: "ira_create_allocno_live_range", scope: !3, file: !3, line: 803, type: !2814, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2816)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!1767, !573, !566, !566, !1767}
!2816 = !{!2817, !2818, !2819, !2820, !2821}
!2817 = !DILocalVariable(name: "a", arg: 1, scope: !2813, file: !3, line: 803, type: !573)
!2818 = !DILocalVariable(name: "start", arg: 2, scope: !2813, file: !3, line: 803, type: !566)
!2819 = !DILocalVariable(name: "finish", arg: 3, scope: !2813, file: !3, line: 803, type: !566)
!2820 = !DILocalVariable(name: "next", arg: 4, scope: !2813, file: !3, line: 804, type: !1767)
!2821 = !DILocalVariable(name: "p", scope: !2813, file: !3, line: 806, type: !1767)
!2822 = !DILocation(line: 0, scope: !2813)
!2823 = !DILocation(line: 808, column: 42, scope: !2813)
!2824 = !DILocation(line: 808, column: 30, scope: !2813)
!2825 = !DILocation(line: 808, column: 7, scope: !2813)
!2826 = !DILocation(line: 809, column: 6, scope: !2813)
!2827 = !DILocation(line: 809, column: 14, scope: !2813)
!2828 = !DILocation(line: 810, column: 6, scope: !2813)
!2829 = !DILocation(line: 810, column: 12, scope: !2813)
!2830 = !DILocation(line: 811, column: 6, scope: !2813)
!2831 = !DILocation(line: 811, column: 13, scope: !2813)
!2832 = !DILocation(line: 812, column: 6, scope: !2813)
!2833 = !DILocation(line: 812, column: 11, scope: !2813)
!2834 = !DILocation(line: 813, column: 3, scope: !2813)
!2835 = distinct !DISubprogram(name: "ira_copy_allocno_live_range_list", scope: !3, file: !3, line: 830, type: !2836, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2838)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!1767, !1767}
!2838 = !{!2839, !2840, !2841, !2842}
!2839 = !DILocalVariable(name: "r", arg: 1, scope: !2835, file: !3, line: 830, type: !1767)
!2840 = !DILocalVariable(name: "p", scope: !2835, file: !3, line: 832, type: !1767)
!2841 = !DILocalVariable(name: "first", scope: !2835, file: !3, line: 832, type: !1767)
!2842 = !DILocalVariable(name: "last", scope: !2835, file: !3, line: 832, type: !1767)
!2843 = !DILocation(line: 0, scope: !2835)
!2844 = !DILocation(line: 834, column: 9, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 834, column: 7)
!2846 = !DILocation(line: 834, column: 7, scope: !2835)
!2847 = !DILocation(line: 836, column: 3, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 836, column: 3)
!2849 = !DILocation(line: 0, scope: !2848)
!2850 = !DILocation(line: 836, column: 31, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2848, file: !3, line: 836, column: 3)
!2852 = !DILocation(line: 838, column: 11, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2851, file: !3, line: 837, column: 5)
!2854 = !DILocation(line: 839, column: 17, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 839, column: 11)
!2856 = !DILocation(line: 839, column: 11, scope: !2853)
!2857 = !DILocation(line: 842, column: 8, scope: !2855)
!2858 = !DILocation(line: 842, column: 13, scope: !2855)
!2859 = !DILocation(line: 836, column: 47, scope: !2851)
!2860 = !DILocation(line: 836, column: 3, scope: !2851)
!2861 = distinct !{!2861, !2847, !2862}
!2862 = !DILocation(line: 844, column: 5, scope: !2848)
!2863 = !DILocation(line: 846, column: 1, scope: !2835)
!2864 = distinct !DISubprogram(name: "copy_allocno_live_range", scope: !3, file: !3, line: 818, type: !2836, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2865)
!2865 = !{!2866, !2867}
!2866 = !DILocalVariable(name: "r", arg: 1, scope: !2864, file: !3, line: 818, type: !1767)
!2867 = !DILocalVariable(name: "p", scope: !2864, file: !3, line: 820, type: !1767)
!2868 = !DILocation(line: 0, scope: !2864)
!2869 = !DILocation(line: 822, column: 42, scope: !2864)
!2870 = !DILocation(line: 822, column: 30, scope: !2864)
!2871 = !DILocation(line: 822, column: 7, scope: !2864)
!2872 = !DILocation(line: 823, column: 8, scope: !2864)
!2873 = !DILocation(line: 824, column: 3, scope: !2864)
!2874 = distinct !DISubprogram(name: "ira_merge_allocno_live_ranges", scope: !3, file: !3, line: 852, type: !2875, scopeLine: 854, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2877)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!1767, !1767, !1767}
!2877 = !{!2878, !2879, !2880, !2881, !2882}
!2878 = !DILocalVariable(name: "r1", arg: 1, scope: !2874, file: !3, line: 852, type: !1767)
!2879 = !DILocalVariable(name: "r2", arg: 2, scope: !2874, file: !3, line: 853, type: !1767)
!2880 = !DILocalVariable(name: "first", scope: !2874, file: !3, line: 855, type: !1767)
!2881 = !DILocalVariable(name: "last", scope: !2874, file: !3, line: 855, type: !1767)
!2882 = !DILocalVariable(name: "temp", scope: !2874, file: !3, line: 855, type: !1767)
!2883 = !DILocation(line: 0, scope: !2874)
!2884 = !DILocation(line: 857, column: 10, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 857, column: 7)
!2886 = !DILocation(line: 857, column: 7, scope: !2874)
!2887 = !DILocation(line: 859, column: 10, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 859, column: 7)
!2889 = !DILocation(line: 859, column: 7, scope: !2874)
!2890 = !DILocation(line: 861, column: 3, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 861, column: 3)
!2892 = !DILocation(line: 861, column: 21, scope: !2891)
!2893 = !DILocation(line: 861, column: 14, scope: !2891)
!2894 = !DILocation(line: 861, column: 32, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2891, file: !3, line: 861, column: 3)
!2896 = !DILocation(line: 861, column: 46, scope: !2895)
!2897 = !DILocation(line: 861, column: 40, scope: !2895)
!2898 = !DILocation(line: 863, column: 15, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2900, file: !3, line: 863, column: 11)
!2900 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 862, column: 5)
!2901 = !DILocation(line: 863, column: 27, scope: !2899)
!2902 = !DILocation(line: 863, column: 21, scope: !2899)
!2903 = !DILocation(line: 863, column: 11, scope: !2900)
!2904 = !DILocation(line: 869, column: 15, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2900, file: !3, line: 869, column: 11)
!2906 = !DILocation(line: 869, column: 28, scope: !2905)
!2907 = !DILocation(line: 869, column: 35, scope: !2905)
!2908 = !DILocation(line: 869, column: 21, scope: !2905)
!2909 = !DILocation(line: 869, column: 11, scope: !2900)
!2910 = !DILocation(line: 872, column: 20, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 870, column: 2)
!2912 = !DILocation(line: 872, column: 14, scope: !2911)
!2913 = !DILocation(line: 873, column: 12, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 873, column: 8)
!2915 = !DILocation(line: 873, column: 25, scope: !2914)
!2916 = !DILocation(line: 873, column: 19, scope: !2914)
!2917 = !DILocation(line: 873, column: 8, scope: !2911)
!2918 = !DILocation(line: 874, column: 17, scope: !2914)
!2919 = !DILocation(line: 874, column: 6, scope: !2914)
!2920 = !DILocation(line: 876, column: 13, scope: !2911)
!2921 = !DILocation(line: 877, column: 4, scope: !2911)
!2922 = !DILocation(line: 878, column: 11, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 878, column: 8)
!2924 = !DILocation(line: 878, column: 8, scope: !2911)
!2925 = !DILocation(line: 881, column: 17, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 879, column: 6)
!2927 = !DILocation(line: 882, column: 17, scope: !2926)
!2928 = !DILocation(line: 883, column: 6, scope: !2926)
!2929 = !DILocation(line: 888, column: 14, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 888, column: 8)
!2931 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 886, column: 2)
!2932 = !DILocation(line: 888, column: 8, scope: !2931)
!2933 = !DILocation(line: 892, column: 14, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 891, column: 6)
!2935 = !DILocation(line: 892, column: 19, scope: !2934)
!2936 = !DILocation(line: 0, scope: !2891)
!2937 = !DILocation(line: 895, column: 13, scope: !2931)
!2938 = !DILocation(line: 896, column: 11, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 896, column: 8)
!2940 = !DILocation(line: 896, column: 8, scope: !2931)
!2941 = !DILocation(line: 899, column: 17, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2939, file: !3, line: 897, column: 6)
!2943 = !DILocation(line: 900, column: 17, scope: !2942)
!2944 = !DILocation(line: 901, column: 6, scope: !2942)
!2945 = !DILocation(line: 0, scope: !2900)
!2946 = !DILocation(line: 861, column: 3, scope: !2895)
!2947 = distinct !{!2947, !2890, !2948}
!2948 = !DILocation(line: 903, column: 5, scope: !2891)
!2949 = !DILocation(line: 904, column: 10, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2874, file: !3, line: 904, column: 7)
!2951 = !DILocation(line: 904, column: 7, scope: !2874)
!2952 = !DILocation(line: 906, column: 17, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 906, column: 11)
!2954 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 905, column: 5)
!2955 = !DILocation(line: 906, column: 11, scope: !2954)
!2956 = !DILocation(line: 909, column: 8, scope: !2953)
!2957 = !DILocation(line: 909, column: 13, scope: !2953)
!2958 = !DILocation(line: 912, column: 15, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 912, column: 12)
!2960 = !DILocation(line: 912, column: 12, scope: !2950)
!2961 = !DILocation(line: 914, column: 17, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2963, file: !3, line: 914, column: 11)
!2963 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 913, column: 5)
!2964 = !DILocation(line: 914, column: 11, scope: !2963)
!2965 = !DILocation(line: 917, column: 8, scope: !2962)
!2966 = !DILocation(line: 917, column: 13, scope: !2962)
!2967 = !DILocation(line: 925, column: 1, scope: !2874)
!2968 = distinct !DISubprogram(name: "ira_finish_allocno_live_range", scope: !3, file: !3, line: 947, type: !2969, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2971)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{null, !1767}
!2971 = !{!2972}
!2972 = !DILocalVariable(name: "r", arg: 1, scope: !2968, file: !3, line: 947, type: !1767)
!2973 = !DILocation(line: 0, scope: !2968)
!2974 = !DILocation(line: 949, column: 14, scope: !2968)
!2975 = !DILocation(line: 949, column: 39, scope: !2968)
!2976 = !DILocation(line: 949, column: 3, scope: !2968)
!2977 = !DILocation(line: 950, column: 1, scope: !2968)
!2978 = distinct !DISubprogram(name: "ira_allocno_live_ranges_intersect_p", scope: !3, file: !3, line: 929, type: !2979, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2981)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!565, !1767, !1767}
!2981 = !{!2982, !2983}
!2982 = !DILocalVariable(name: "r1", arg: 1, scope: !2978, file: !3, line: 929, type: !1767)
!2983 = !DILocalVariable(name: "r2", arg: 2, scope: !2978, file: !3, line: 930, type: !1767)
!2984 = !DILocation(line: 0, scope: !2978)
!2985 = !DILocation(line: 933, column: 3, scope: !2978)
!2986 = !DILocation(line: 933, column: 13, scope: !2978)
!2987 = !DILocation(line: 933, column: 27, scope: !2978)
!2988 = !DILocation(line: 933, column: 21, scope: !2978)
!2989 = !DILocation(line: 935, column: 15, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 935, column: 11)
!2991 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 934, column: 5)
!2992 = !DILocation(line: 935, column: 27, scope: !2990)
!2993 = !DILocation(line: 935, column: 21, scope: !2990)
!2994 = !DILocation(line: 935, column: 11, scope: !2991)
!2995 = !DILocation(line: 936, column: 11, scope: !2990)
!2996 = !DILocation(line: 936, column: 2, scope: !2990)
!2997 = !DILocation(line: 937, column: 20, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 937, column: 16)
!2999 = !DILocation(line: 937, column: 32, scope: !2998)
!3000 = !DILocation(line: 937, column: 26, scope: !2998)
!3001 = !DILocation(line: 937, column: 16, scope: !2990)
!3002 = !DILocation(line: 938, column: 11, scope: !2998)
!3003 = distinct !{!3003, !2985, !3004}
!3004 = !DILocation(line: 941, column: 5, scope: !2978)
!3005 = !DILocation(line: 943, column: 1, scope: !2978)
!3006 = distinct !DISubprogram(name: "ira_finish_allocno_live_range_list", scope: !3, file: !3, line: 954, type: !2969, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3007)
!3007 = !{!3008, !3009}
!3008 = !DILocalVariable(name: "r", arg: 1, scope: !3006, file: !3, line: 954, type: !1767)
!3009 = !DILocalVariable(name: "next_r", scope: !3006, file: !3, line: 956, type: !1767)
!3010 = !DILocation(line: 0, scope: !3006)
!3011 = !DILocation(line: 958, column: 3, scope: !3006)
!3012 = !DILocation(line: 958, column: 12, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 958, column: 3)
!3014 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 958, column: 3)
!3015 = !DILocation(line: 958, column: 3, scope: !3014)
!3016 = !DILocation(line: 960, column: 19, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 959, column: 5)
!3018 = !DILocation(line: 961, column: 7, scope: !3017)
!3019 = !DILocation(line: 958, column: 3, scope: !3013)
!3020 = distinct !{!3020, !3015, !3021}
!3021 = !DILocation(line: 962, column: 5, scope: !3014)
!3022 = !DILocation(line: 963, column: 1, scope: !3006)
!3023 = distinct !DISubprogram(name: "ira_free_allocno_updated_costs", scope: !3, file: !3, line: 967, type: !2603, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3024)
!3024 = !{!3025, !3026}
!3025 = !DILocalVariable(name: "a", arg: 1, scope: !3023, file: !3, line: 967, type: !573)
!3026 = !DILocalVariable(name: "cover_class", scope: !3023, file: !3, line: 969, type: !390)
!3027 = !DILocation(line: 0, scope: !3023)
!3028 = !DILocation(line: 971, column: 17, scope: !3023)
!3029 = !DILocation(line: 972, column: 7, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 972, column: 7)
!3031 = !DILocation(line: 972, column: 42, scope: !3030)
!3032 = !DILocation(line: 972, column: 7, scope: !3023)
!3033 = !DILocation(line: 973, column: 5, scope: !3030)
!3034 = !DILocation(line: 974, column: 38, scope: !3023)
!3035 = !DILocation(line: 975, column: 7, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 975, column: 7)
!3037 = !DILocation(line: 975, column: 51, scope: !3036)
!3038 = !DILocation(line: 975, column: 7, scope: !3023)
!3039 = !DILocation(line: 976, column: 5, scope: !3036)
!3040 = !DILocation(line: 978, column: 47, scope: !3023)
!3041 = !DILocation(line: 979, column: 1, scope: !3023)
!3042 = distinct !DISubprogram(name: "ira_free_cost_vector", scope: !3, file: !3, line: 1336, type: !3043, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3045)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{null, !1803, !390}
!3045 = !{!3046, !3047}
!3046 = !DILocalVariable(name: "vec", arg: 1, scope: !3042, file: !3, line: 1336, type: !1803)
!3047 = !DILocalVariable(name: "cover_class", arg: 2, scope: !3042, file: !3, line: 1336, type: !390)
!3048 = !DILocation(line: 0, scope: !3042)
!3049 = !DILocation(line: 1339, column: 14, scope: !3042)
!3050 = !DILocation(line: 1339, column: 45, scope: !3042)
!3051 = !DILocation(line: 1339, column: 3, scope: !3042)
!3052 = !DILocation(line: 1340, column: 1, scope: !3042)
!3053 = distinct !DISubprogram(name: "ira_create_copy", scope: !3, file: !3, line: 1073, type: !3054, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3056)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!1747, !573, !573, !566, !565, !583, !1713}
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3057 = !DILocalVariable(name: "first", arg: 1, scope: !3053, file: !3, line: 1073, type: !573)
!3058 = !DILocalVariable(name: "second", arg: 2, scope: !3053, file: !3, line: 1073, type: !573)
!3059 = !DILocalVariable(name: "freq", arg: 3, scope: !3053, file: !3, line: 1073, type: !566)
!3060 = !DILocalVariable(name: "constraint_p", arg: 4, scope: !3053, file: !3, line: 1074, type: !565)
!3061 = !DILocalVariable(name: "insn", arg: 5, scope: !3053, file: !3, line: 1074, type: !583)
!3062 = !DILocalVariable(name: "loop_tree_node", arg: 6, scope: !3053, file: !3, line: 1075, type: !1713)
!3063 = !DILocalVariable(name: "cp", scope: !3053, file: !3, line: 1077, type: !1747)
!3064 = !DILocation(line: 0, scope: !3053)
!3065 = !DILocation(line: 1079, column: 33, scope: !3053)
!3066 = !DILocation(line: 1079, column: 21, scope: !3053)
!3067 = !DILocation(line: 1079, column: 8, scope: !3053)
!3068 = !DILocation(line: 1080, column: 13, scope: !3053)
!3069 = !DILocation(line: 1080, column: 7, scope: !3053)
!3070 = !DILocation(line: 1080, column: 11, scope: !3053)
!3071 = !DILocation(line: 1081, column: 7, scope: !3053)
!3072 = !DILocation(line: 1081, column: 13, scope: !3053)
!3073 = !DILocation(line: 1082, column: 7, scope: !3053)
!3074 = !DILocation(line: 1082, column: 14, scope: !3053)
!3075 = !DILocation(line: 1083, column: 7, scope: !3053)
!3076 = !DILocation(line: 1083, column: 12, scope: !3053)
!3077 = !DILocation(line: 1084, column: 7, scope: !3053)
!3078 = !DILocation(line: 1084, column: 20, scope: !3053)
!3079 = !DILocation(line: 1085, column: 7, scope: !3053)
!3080 = !DILocation(line: 1085, column: 12, scope: !3053)
!3081 = !DILocation(line: 1086, column: 7, scope: !3053)
!3082 = !DILocation(line: 1086, column: 22, scope: !3053)
!3083 = !DILocation(line: 1087, column: 3, scope: !3053)
!3084 = !DILocation(line: 1088, column: 16, scope: !3053)
!3085 = !DILocation(line: 1088, column: 14, scope: !3053)
!3086 = !DILocation(line: 1089, column: 20, scope: !3053)
!3087 = !DILocation(line: 1089, column: 18, scope: !3053)
!3088 = !DILocation(line: 1090, column: 3, scope: !3053)
!3089 = distinct !DISubprogram(name: "VEC_ira_copy_t_heap_safe_push", scope: !574, file: !574, line: 70, type: !3090, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3093)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!1881, !3092, !1747}
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!3093 = !{!3094, !3095}
!3094 = !DILocalVariable(name: "vec_", arg: 1, scope: !3089, file: !574, line: 70, type: !3092)
!3095 = !DILocalVariable(name: "obj_", arg: 2, scope: !3089, file: !574, line: 70, type: !1747)
!3096 = !DILocation(line: 0, scope: !3089)
!3097 = !DILocation(line: 70, column: 1, scope: !3089)
!3098 = distinct !DISubprogram(name: "VEC_ira_copy_t_base_address", scope: !574, file: !574, line: 69, type: !3099, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3102)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!1881, !3101}
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!3102 = !{!3103}
!3103 = !DILocalVariable(name: "vec_", arg: 1, scope: !3098, file: !574, line: 69, type: !3101)
!3104 = !DILocation(line: 0, scope: !3098)
!3105 = !DILocation(line: 69, column: 1, scope: !3098)
!3106 = distinct !DISubprogram(name: "VEC_ira_copy_t_base_length", scope: !574, file: !574, line: 69, type: !3107, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3111)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{!7, !3109}
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!3111 = !{!3112}
!3112 = !DILocalVariable(name: "vec_", arg: 1, scope: !3106, file: !574, line: 69, type: !3109)
!3113 = !DILocation(line: 0, scope: !3106)
!3114 = !DILocation(line: 69, column: 1, scope: !3106)
!3115 = distinct !DISubprogram(name: "ira_add_allocno_copy_to_list", scope: !3, file: !3, line: 1095, type: !3116, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3118)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{null, !1747}
!3118 = !{!3119, !3120, !3121}
!3119 = !DILocalVariable(name: "cp", arg: 1, scope: !3115, file: !3, line: 1095, type: !1747)
!3120 = !DILocalVariable(name: "first", scope: !3115, file: !3, line: 1097, type: !573)
!3121 = !DILocalVariable(name: "second", scope: !3115, file: !3, line: 1097, type: !573)
!3122 = !DILocation(line: 0, scope: !3115)
!3123 = !DILocation(line: 1097, column: 29, scope: !3115)
!3124 = !DILocation(line: 1097, column: 49, scope: !3115)
!3125 = !DILocation(line: 1099, column: 7, scope: !3115)
!3126 = !DILocation(line: 1099, column: 31, scope: !3115)
!3127 = !DILocation(line: 1100, column: 7, scope: !3115)
!3128 = !DILocation(line: 1100, column: 32, scope: !3115)
!3129 = !DILocation(line: 1101, column: 33, scope: !3115)
!3130 = !DILocation(line: 1101, column: 7, scope: !3115)
!3131 = !DILocation(line: 1101, column: 31, scope: !3115)
!3132 = !DILocation(line: 1102, column: 35, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 1102, column: 7)
!3134 = !DILocation(line: 1102, column: 7, scope: !3115)
!3135 = !DILocation(line: 1104, column: 40, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 1104, column: 11)
!3137 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 1103, column: 5)
!3138 = !DILocation(line: 1104, column: 46, scope: !3136)
!3139 = !DILocation(line: 1104, column: 11, scope: !3137)
!3140 = !DILocation(line: 1105, column: 31, scope: !3136)
!3141 = !DILocation(line: 1105, column: 55, scope: !3136)
!3142 = !DILocation(line: 1105, column: 2, scope: !3136)
!3143 = !DILocation(line: 1107, column: 31, scope: !3136)
!3144 = !DILocation(line: 1107, column: 56, scope: !3136)
!3145 = !DILocation(line: 1109, column: 34, scope: !3115)
!3146 = !DILocation(line: 1109, column: 7, scope: !3115)
!3147 = !DILocation(line: 1109, column: 32, scope: !3115)
!3148 = !DILocation(line: 1110, column: 36, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 1110, column: 7)
!3150 = !DILocation(line: 1110, column: 7, scope: !3115)
!3151 = !DILocation(line: 1112, column: 41, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 1112, column: 11)
!3153 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1111, column: 5)
!3154 = !DILocation(line: 1112, column: 48, scope: !3152)
!3155 = !DILocation(line: 1112, column: 11, scope: !3153)
!3156 = !DILocation(line: 1113, column: 32, scope: !3152)
!3157 = !DILocation(line: 1113, column: 57, scope: !3152)
!3158 = !DILocation(line: 1113, column: 2, scope: !3152)
!3159 = !DILocation(line: 1115, column: 32, scope: !3152)
!3160 = !DILocation(line: 1115, column: 56, scope: !3152)
!3161 = !DILocation(line: 1117, column: 26, scope: !3115)
!3162 = !DILocation(line: 1118, column: 27, scope: !3115)
!3163 = !DILocation(line: 1119, column: 1, scope: !3115)
!3164 = distinct !DISubprogram(name: "ira_remove_allocno_copy_from_list", scope: !3, file: !3, line: 1123, type: !3116, scopeLine: 1124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3170}
!3166 = !DILocalVariable(name: "cp", arg: 1, scope: !3164, file: !3, line: 1123, type: !1747)
!3167 = !DILocalVariable(name: "first", scope: !3164, file: !3, line: 1125, type: !573)
!3168 = !DILocalVariable(name: "second", scope: !3164, file: !3, line: 1125, type: !573)
!3169 = !DILocalVariable(name: "prev", scope: !3164, file: !3, line: 1126, type: !1747)
!3170 = !DILocalVariable(name: "next", scope: !3164, file: !3, line: 1126, type: !1747)
!3171 = !DILocation(line: 0, scope: !3164)
!3172 = !DILocation(line: 1125, column: 29, scope: !3164)
!3173 = !DILocation(line: 1125, column: 49, scope: !3164)
!3174 = !DILocation(line: 1128, column: 14, scope: !3164)
!3175 = !DILocation(line: 1129, column: 14, scope: !3164)
!3176 = !DILocation(line: 1130, column: 12, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 1130, column: 7)
!3178 = !DILocation(line: 1130, column: 7, scope: !3164)
!3179 = !DILocation(line: 1131, column: 5, scope: !3177)
!3180 = !DILocation(line: 1131, column: 28, scope: !3177)
!3181 = !DILocation(line: 1132, column: 18, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3177, file: !3, line: 1132, column: 12)
!3183 = !DILocation(line: 1132, column: 24, scope: !3182)
!3184 = !DILocation(line: 1132, column: 12, scope: !3177)
!3185 = !DILocation(line: 1133, column: 11, scope: !3182)
!3186 = !DILocation(line: 1133, column: 35, scope: !3182)
!3187 = !DILocation(line: 1133, column: 5, scope: !3182)
!3188 = !DILocation(line: 1135, column: 11, scope: !3182)
!3189 = !DILocation(line: 1135, column: 36, scope: !3182)
!3190 = !DILocation(line: 1136, column: 12, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 1136, column: 7)
!3192 = !DILocation(line: 1136, column: 7, scope: !3164)
!3193 = !DILocation(line: 1138, column: 17, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1138, column: 11)
!3195 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 1137, column: 5)
!3196 = !DILocation(line: 1138, column: 23, scope: !3194)
!3197 = !DILocation(line: 1138, column: 11, scope: !3195)
!3198 = !DILocation(line: 1139, column: 8, scope: !3194)
!3199 = !DILocation(line: 1139, column: 32, scope: !3194)
!3200 = !DILocation(line: 1139, column: 2, scope: !3194)
!3201 = !DILocation(line: 1141, column: 8, scope: !3194)
!3202 = !DILocation(line: 1141, column: 33, scope: !3194)
!3203 = !DILocation(line: 1143, column: 61, scope: !3164)
!3204 = !DILocation(line: 1143, column: 31, scope: !3164)
!3205 = !DILocation(line: 1145, column: 14, scope: !3164)
!3206 = !DILocation(line: 1146, column: 14, scope: !3164)
!3207 = !DILocation(line: 1147, column: 12, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 1147, column: 7)
!3209 = !DILocation(line: 1147, column: 7, scope: !3164)
!3210 = !DILocation(line: 1148, column: 5, scope: !3208)
!3211 = !DILocation(line: 1148, column: 29, scope: !3208)
!3212 = !DILocation(line: 1149, column: 18, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1149, column: 12)
!3214 = !DILocation(line: 1149, column: 25, scope: !3213)
!3215 = !DILocation(line: 1149, column: 12, scope: !3208)
!3216 = !DILocation(line: 1150, column: 11, scope: !3213)
!3217 = !DILocation(line: 1150, column: 36, scope: !3213)
!3218 = !DILocation(line: 1150, column: 5, scope: !3213)
!3219 = !DILocation(line: 1152, column: 11, scope: !3213)
!3220 = !DILocation(line: 1152, column: 35, scope: !3213)
!3221 = !DILocation(line: 1153, column: 12, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 1153, column: 7)
!3223 = !DILocation(line: 1153, column: 7, scope: !3164)
!3224 = !DILocation(line: 1155, column: 17, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 1155, column: 11)
!3226 = distinct !DILexicalBlock(scope: !3222, file: !3, line: 1154, column: 5)
!3227 = !DILocation(line: 1155, column: 24, scope: !3225)
!3228 = !DILocation(line: 1155, column: 11, scope: !3226)
!3229 = !DILocation(line: 1156, column: 8, scope: !3225)
!3230 = !DILocation(line: 1156, column: 33, scope: !3225)
!3231 = !DILocation(line: 1156, column: 2, scope: !3225)
!3232 = !DILocation(line: 1158, column: 8, scope: !3225)
!3233 = !DILocation(line: 1158, column: 32, scope: !3225)
!3234 = !DILocation(line: 1160, column: 63, scope: !3164)
!3235 = !DILocation(line: 1160, column: 32, scope: !3164)
!3236 = !DILocation(line: 1161, column: 1, scope: !3164)
!3237 = distinct !DISubprogram(name: "ira_swap_allocno_copy_ends_if_necessary", scope: !3, file: !3, line: 1166, type: !3116, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3238)
!3238 = !{!3239, !3240, !3241}
!3239 = !DILocalVariable(name: "cp", arg: 1, scope: !3237, file: !3, line: 1166, type: !1747)
!3240 = !DILocalVariable(name: "temp", scope: !3237, file: !3, line: 1168, type: !573)
!3241 = !DILocalVariable(name: "temp_cp", scope: !3237, file: !3, line: 1169, type: !1747)
!3242 = !DILocation(line: 0, scope: !3237)
!3243 = !DILocation(line: 1171, column: 7, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1171, column: 7)
!3245 = !DILocation(line: 1171, column: 34, scope: !3244)
!3246 = !DILocation(line: 1171, column: 31, scope: !3244)
!3247 = !DILocation(line: 1171, column: 7, scope: !3237)
!3248 = !DILocation(line: 1174, column: 14, scope: !3237)
!3249 = !DILocation(line: 1175, column: 19, scope: !3237)
!3250 = !DILocation(line: 1175, column: 13, scope: !3237)
!3251 = !DILocation(line: 1176, column: 14, scope: !3237)
!3252 = !DILocation(line: 1178, column: 17, scope: !3237)
!3253 = !DILocation(line: 1179, column: 37, scope: !3237)
!3254 = !DILocation(line: 1179, column: 31, scope: !3237)
!3255 = !DILocation(line: 1180, column: 32, scope: !3237)
!3256 = !DILocation(line: 1182, column: 17, scope: !3237)
!3257 = !DILocation(line: 1183, column: 37, scope: !3237)
!3258 = !DILocation(line: 1183, column: 31, scope: !3237)
!3259 = !DILocation(line: 1184, column: 32, scope: !3237)
!3260 = !DILocation(line: 1185, column: 1, scope: !3237)
!3261 = distinct !DISubprogram(name: "ira_add_allocno_copy", scope: !3, file: !3, line: 1192, type: !3054, scopeLine: 1195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3262)
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269}
!3263 = !DILocalVariable(name: "first", arg: 1, scope: !3261, file: !3, line: 1192, type: !573)
!3264 = !DILocalVariable(name: "second", arg: 2, scope: !3261, file: !3, line: 1192, type: !573)
!3265 = !DILocalVariable(name: "freq", arg: 3, scope: !3261, file: !3, line: 1192, type: !566)
!3266 = !DILocalVariable(name: "constraint_p", arg: 4, scope: !3261, file: !3, line: 1193, type: !565)
!3267 = !DILocalVariable(name: "insn", arg: 5, scope: !3261, file: !3, line: 1193, type: !583)
!3268 = !DILocalVariable(name: "loop_tree_node", arg: 6, scope: !3261, file: !3, line: 1194, type: !1713)
!3269 = !DILocalVariable(name: "cp", scope: !3261, file: !3, line: 1196, type: !1747)
!3270 = !DILocation(line: 0, scope: !3261)
!3271 = !DILocation(line: 1198, column: 13, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 1198, column: 7)
!3273 = !DILocation(line: 1198, column: 70, scope: !3272)
!3274 = !DILocation(line: 1198, column: 7, scope: !3261)
!3275 = !DILocation(line: 1200, column: 11, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1199, column: 5)
!3277 = !DILocation(line: 1200, column: 16, scope: !3276)
!3278 = !DILocation(line: 1201, column: 7, scope: !3276)
!3279 = !DILocation(line: 1203, column: 8, scope: !3261)
!3280 = !DILocation(line: 1206, column: 3, scope: !3261)
!3281 = !DILocation(line: 1207, column: 3, scope: !3261)
!3282 = !DILocation(line: 1208, column: 3, scope: !3261)
!3283 = !DILocation(line: 1209, column: 1, scope: !3261)
!3284 = distinct !DISubprogram(name: "find_allocno_copy", scope: !3, file: !3, line: 1043, type: !3285, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3287)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!1747, !573, !573, !583, !1713}
!3287 = !{!3288, !3289, !3290, !3291, !3292, !3293, !3294}
!3288 = !DILocalVariable(name: "a1", arg: 1, scope: !3284, file: !3, line: 1043, type: !573)
!3289 = !DILocalVariable(name: "a2", arg: 2, scope: !3284, file: !3, line: 1043, type: !573)
!3290 = !DILocalVariable(name: "insn", arg: 3, scope: !3284, file: !3, line: 1043, type: !583)
!3291 = !DILocalVariable(name: "loop_tree_node", arg: 4, scope: !3284, file: !3, line: 1044, type: !1713)
!3292 = !DILocalVariable(name: "cp", scope: !3284, file: !3, line: 1046, type: !1747)
!3293 = !DILocalVariable(name: "next_cp", scope: !3284, file: !3, line: 1046, type: !1747)
!3294 = !DILocalVariable(name: "another_a", scope: !3284, file: !3, line: 1047, type: !573)
!3295 = !DILocation(line: 0, scope: !3284)
!3296 = !DILocation(line: 1049, column: 13, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 1049, column: 3)
!3298 = !DILocation(line: 1049, column: 8, scope: !3297)
!3299 = !DILocation(line: 0, scope: !3297)
!3300 = !DILocation(line: 1049, column: 37, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 1049, column: 3)
!3302 = !DILocation(line: 1049, column: 3, scope: !3297)
!3303 = !DILocation(line: 1051, column: 15, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1051, column: 11)
!3305 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 1050, column: 5)
!3306 = !DILocation(line: 1051, column: 21, scope: !3304)
!3307 = !DILocation(line: 1051, column: 11, scope: !3305)
!3308 = !DILocation(line: 1053, column: 18, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 1052, column: 2)
!3310 = !DILocation(line: 1054, column: 20, scope: !3309)
!3311 = !DILocation(line: 1055, column: 2, scope: !3309)
!3312 = !DILocation(line: 1056, column: 20, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 1056, column: 16)
!3314 = !DILocation(line: 1056, column: 27, scope: !3313)
!3315 = !DILocation(line: 1056, column: 16, scope: !3304)
!3316 = !DILocation(line: 1058, column: 18, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 1057, column: 2)
!3318 = !DILocation(line: 1060, column: 2, scope: !3317)
!3319 = !DILocation(line: 1062, column: 2, scope: !3313)
!3320 = !DILocation(line: 0, scope: !3304)
!3321 = !DILocation(line: 1063, column: 21, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1063, column: 11)
!3323 = !DILocation(line: 1063, column: 27, scope: !3322)
!3324 = !DILocation(line: 1063, column: 34, scope: !3322)
!3325 = !DILocation(line: 1063, column: 39, scope: !3322)
!3326 = !DILocation(line: 1064, column: 4, scope: !3322)
!3327 = !DILocation(line: 1064, column: 11, scope: !3322)
!3328 = !DILocation(line: 1064, column: 26, scope: !3322)
!3329 = !DILocation(line: 1063, column: 11, scope: !3305)
!3330 = !DILocation(line: 1049, column: 3, scope: !3301)
!3331 = distinct !{!3331, !3302, !3332}
!3332 = !DILocation(line: 1066, column: 5, scope: !3297)
!3333 = !DILocation(line: 1068, column: 1, scope: !3284)
!3334 = distinct !DISubprogram(name: "ira_debug_copy", scope: !3, file: !3, line: 1224, type: !3116, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3335)
!3335 = !{!3336}
!3336 = !DILocalVariable(name: "cp", arg: 1, scope: !3334, file: !3, line: 1224, type: !1747)
!3337 = !DILocation(line: 0, scope: !3334)
!3338 = !DILocation(line: 1226, column: 15, scope: !3334)
!3339 = !DILocation(line: 1226, column: 3, scope: !3334)
!3340 = !DILocation(line: 1227, column: 1, scope: !3334)
!3341 = distinct !DISubprogram(name: "print_copy", scope: !3, file: !3, line: 1213, type: !3342, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3344)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{null, !1971, !1747}
!3344 = !{!3345, !3346}
!3345 = !DILocalVariable(name: "f", arg: 1, scope: !3341, file: !3, line: 1213, type: !1971)
!3346 = !DILocalVariable(name: "cp", arg: 2, scope: !3341, file: !3, line: 1213, type: !1747)
!3347 = !DILocation(line: 0, scope: !3341)
!3348 = !DILocation(line: 1215, column: 57, scope: !3341)
!3349 = !DILocation(line: 1216, column: 5, scope: !3341)
!3350 = !DILocation(line: 1216, column: 30, scope: !3341)
!3351 = !DILocation(line: 1217, column: 5, scope: !3341)
!3352 = !DILocation(line: 1217, column: 31, scope: !3341)
!3353 = !DILocation(line: 1217, column: 63, scope: !3341)
!3354 = !DILocation(line: 1218, column: 9, scope: !3341)
!3355 = !DILocation(line: 1218, column: 14, scope: !3341)
!3356 = !DILocation(line: 1218, column: 5, scope: !3341)
!3357 = !DILocation(line: 1219, column: 20, scope: !3341)
!3358 = !DILocation(line: 1219, column: 16, scope: !3341)
!3359 = !DILocation(line: 1215, column: 3, scope: !3341)
!3360 = !DILocation(line: 1220, column: 1, scope: !3341)
!3361 = distinct !DISubprogram(name: "ira_debug_copies", scope: !3, file: !3, line: 1242, type: !3362, scopeLine: 1243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{null}
!3364 = !DILocation(line: 1244, column: 17, scope: !3361)
!3365 = !DILocation(line: 1244, column: 3, scope: !3361)
!3366 = !DILocation(line: 1245, column: 1, scope: !3361)
!3367 = distinct !DISubprogram(name: "print_copies", scope: !3, file: !3, line: 1231, type: !3368, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3370)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{null, !1971}
!3370 = !{!3371, !3372, !3373}
!3371 = !DILocalVariable(name: "f", arg: 1, scope: !3367, file: !3, line: 1231, type: !1971)
!3372 = !DILocalVariable(name: "cp", scope: !3367, file: !3, line: 1233, type: !1747)
!3373 = !DILocalVariable(name: "ci", scope: !3367, file: !3, line: 1234, type: !3374)
!3374 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_copy_iterator", file: !574, line: 975, baseType: !3375)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 972, size: 32, elements: !3376)
!3376 = !{!3377}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3375, file: !574, line: 974, baseType: !566, size: 32)
!3378 = !DILocation(line: 0, scope: !3367)
!3379 = !DILocation(line: 1233, column: 3, scope: !3367)
!3380 = !DILocation(line: 1234, column: 3, scope: !3367)
!3381 = !DILocation(line: 1236, column: 3, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 1236, column: 3)
!3383 = !DILocation(line: 1236, column: 3, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 1236, column: 3)
!3385 = !DILocation(line: 1237, column: 20, scope: !3384)
!3386 = !DILocation(line: 1237, column: 5, scope: !3384)
!3387 = distinct !{!3387, !3381, !3388}
!3388 = !DILocation(line: 1237, column: 22, scope: !3382)
!3389 = !DILocation(line: 1238, column: 1, scope: !3367)
!3390 = distinct !DISubprogram(name: "ira_debug_allocno_copies", scope: !3, file: !3, line: 1277, type: !2603, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3391)
!3391 = !{!3392}
!3392 = !DILocalVariable(name: "a", arg: 1, scope: !3390, file: !3, line: 1277, type: !573)
!3393 = !DILocation(line: 0, scope: !3390)
!3394 = !DILocation(line: 1279, column: 25, scope: !3390)
!3395 = !DILocation(line: 1279, column: 3, scope: !3390)
!3396 = !DILocation(line: 1280, column: 1, scope: !3390)
!3397 = distinct !DISubprogram(name: "print_allocno_copies", scope: !3, file: !3, line: 1249, type: !3398, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3400)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{null, !1971, !573}
!3400 = !{!3401, !3402, !3403, !3404, !3405}
!3401 = !DILocalVariable(name: "f", arg: 1, scope: !3397, file: !3, line: 1249, type: !1971)
!3402 = !DILocalVariable(name: "a", arg: 2, scope: !3397, file: !3, line: 1249, type: !573)
!3403 = !DILocalVariable(name: "another_a", scope: !3397, file: !3, line: 1251, type: !573)
!3404 = !DILocalVariable(name: "cp", scope: !3397, file: !3, line: 1252, type: !1747)
!3405 = !DILocalVariable(name: "next_cp", scope: !3397, file: !3, line: 1252, type: !1747)
!3406 = !DILocation(line: 0, scope: !3397)
!3407 = !DILocation(line: 1254, column: 29, scope: !3397)
!3408 = !DILocation(line: 1254, column: 46, scope: !3397)
!3409 = !DILocation(line: 1254, column: 3, scope: !3397)
!3410 = !DILocation(line: 1255, column: 13, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 1255, column: 3)
!3412 = !DILocation(line: 1255, column: 8, scope: !3411)
!3413 = !DILocation(line: 0, scope: !3411)
!3414 = !DILocation(line: 1255, column: 36, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 1255, column: 3)
!3416 = !DILocation(line: 1255, column: 3, scope: !3411)
!3417 = !DILocation(line: 1257, column: 15, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 1257, column: 11)
!3419 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 1256, column: 5)
!3420 = !DILocation(line: 1257, column: 21, scope: !3418)
!3421 = !DILocation(line: 1257, column: 11, scope: !3419)
!3422 = !DILocation(line: 1259, column: 18, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1258, column: 2)
!3424 = !DILocation(line: 1260, column: 20, scope: !3423)
!3425 = !DILocation(line: 1261, column: 2, scope: !3423)
!3426 = !DILocation(line: 1262, column: 20, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1262, column: 16)
!3428 = !DILocation(line: 1262, column: 27, scope: !3427)
!3429 = !DILocation(line: 1262, column: 16, scope: !3418)
!3430 = !DILocation(line: 1264, column: 18, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 1263, column: 2)
!3432 = !DILocation(line: 1266, column: 2, scope: !3431)
!3433 = !DILocation(line: 1268, column: 2, scope: !3427)
!3434 = !DILocation(line: 0, scope: !3418)
!3435 = !DILocation(line: 1269, column: 44, scope: !3419)
!3436 = !DILocation(line: 1270, column: 9, scope: !3419)
!3437 = !DILocation(line: 1270, column: 34, scope: !3419)
!3438 = !DILocation(line: 1270, column: 65, scope: !3419)
!3439 = !DILocation(line: 1269, column: 7, scope: !3419)
!3440 = !DILocation(line: 1255, column: 3, scope: !3415)
!3441 = distinct !{!3441, !3416, !3442}
!3442 = !DILocation(line: 1271, column: 5, scope: !3411)
!3443 = !DILocation(line: 1272, column: 3, scope: !3397)
!3444 = !DILocation(line: 1273, column: 1, scope: !3397)
!3445 = distinct !DISubprogram(name: "ira_allocate_cost_vector", scope: !3, file: !3, line: 1329, type: !3446, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3448)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!1803, !390}
!3448 = !{!3449}
!3449 = !DILocalVariable(name: "cover_class", arg: 1, scope: !3445, file: !3, line: 1329, type: !390)
!3450 = !DILocation(line: 0, scope: !3445)
!3451 = !DILocation(line: 1331, column: 30, scope: !3445)
!3452 = !DILocation(line: 1331, column: 18, scope: !3445)
!3453 = !DILocation(line: 1331, column: 10, scope: !3445)
!3454 = !DILocation(line: 1331, column: 3, scope: !3445)
!3455 = distinct !DISubprogram(name: "ira_traverse_loop_tree", scope: !3, file: !3, line: 1370, type: !3456, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3461)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{null, !565, !1713, !3458, !3458}
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{null, !1713}
!3461 = !{!3462, !3463, !3464, !3465, !3466}
!3462 = !DILocalVariable(name: "bb_p", arg: 1, scope: !3455, file: !3, line: 1370, type: !565)
!3463 = !DILocalVariable(name: "loop_node", arg: 2, scope: !3455, file: !3, line: 1370, type: !1713)
!3464 = !DILocalVariable(name: "preorder_func", arg: 3, scope: !3455, file: !3, line: 1371, type: !3458)
!3465 = !DILocalVariable(name: "postorder_func", arg: 4, scope: !3455, file: !3, line: 1372, type: !3458)
!3466 = !DILocalVariable(name: "subloop_node", scope: !3455, file: !3, line: 1374, type: !1713)
!3467 = !DILocation(line: 0, scope: !3455)
!3468 = !DILocation(line: 1377, column: 27, scope: !3455)
!3469 = !DILocation(line: 1378, column: 57, scope: !3455)
!3470 = !DILocation(line: 1378, column: 30, scope: !3455)
!3471 = !DILocation(line: 1380, column: 21, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1380, column: 7)
!3473 = !DILocation(line: 1380, column: 7, scope: !3455)
!3474 = !DILocation(line: 1381, column: 5, scope: !3472)
!3475 = !DILocation(line: 1383, column: 7, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1383, column: 7)
!3477 = !DILocation(line: 1383, column: 7, scope: !3455)
!3478 = !DILocation(line: 1384, column: 36, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 1384, column: 5)
!3480 = !DILocation(line: 0, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 1392, column: 8)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1388, column: 2)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 1387, column: 11)
!3484 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 1384, column: 5)
!3485 = !DILocation(line: 1384, column: 10, scope: !3479)
!3486 = !DILocation(line: 0, scope: !3479)
!3487 = !DILocation(line: 1385, column: 16, scope: !3484)
!3488 = !DILocation(line: 1384, column: 5, scope: !3479)
!3489 = !DILocation(line: 1387, column: 11, scope: !3484)
!3490 = !DILocation(line: 1392, column: 8, scope: !3482)
!3491 = !DILocation(line: 1386, column: 32, scope: !3484)
!3492 = !DILocation(line: 1384, column: 5, scope: !3484)
!3493 = distinct !{!3493, !3488, !3494}
!3494 = !DILocation(line: 1394, column: 2, scope: !3479)
!3495 = !DILocation(line: 1396, column: 34, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1396, column: 3)
!3497 = !DILocation(line: 1387, column: 25, scope: !3483)
!3498 = !DILocation(line: 1387, column: 28, scope: !3483)
!3499 = !DILocation(line: 1393, column: 6, scope: !3481)
!3500 = !DILocation(line: 1390, column: 6, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 1389, column: 8)
!3502 = !DILocation(line: 1396, column: 8, scope: !3496)
!3503 = !DILocation(line: 0, scope: !3496)
!3504 = !DILocation(line: 1397, column: 21, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 1396, column: 3)
!3506 = !DILocation(line: 1396, column: 3, scope: !3496)
!3507 = !DILocation(line: 1401, column: 7, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 1399, column: 5)
!3509 = !DILocation(line: 1398, column: 37, scope: !3505)
!3510 = !DILocation(line: 1396, column: 3, scope: !3505)
!3511 = distinct !{!3511, !3506, !3512}
!3512 = !DILocation(line: 1403, column: 5, scope: !3496)
!3513 = !DILocation(line: 1405, column: 27, scope: !3455)
!3514 = !DILocation(line: 1406, column: 57, scope: !3455)
!3515 = !DILocation(line: 1406, column: 30, scope: !3455)
!3516 = !DILocation(line: 1408, column: 22, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1408, column: 7)
!3518 = !DILocation(line: 1408, column: 7, scope: !3455)
!3519 = !DILocation(line: 1409, column: 5, scope: !3517)
!3520 = !DILocation(line: 1410, column: 1, scope: !3455)
!3521 = distinct !DISubprogram(name: "ira_flattening", scope: !3, file: !3, line: 2474, type: !3522, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3524)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !566, !566}
!3524 = !{!3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3552, !3553, !3568}
!3525 = !DILocalVariable(name: "max_regno_before_emit", arg: 1, scope: !3521, file: !3, line: 2474, type: !566)
!3526 = !DILocalVariable(name: "ira_max_point_before_emit", arg: 2, scope: !3521, file: !3, line: 2474, type: !566)
!3527 = !DILocalVariable(name: "i", scope: !3521, file: !3, line: 2476, type: !566)
!3528 = !DILocalVariable(name: "j", scope: !3521, file: !3, line: 2476, type: !566)
!3529 = !DILocalVariable(name: "num", scope: !3521, file: !3, line: 2476, type: !566)
!3530 = !DILocalVariable(name: "keep_p", scope: !3521, file: !3, line: 2477, type: !565)
!3531 = !DILocalVariable(name: "hard_regs_num", scope: !3521, file: !3, line: 2478, type: !566)
!3532 = !DILocalVariable(name: "new_pseudos_p", scope: !3521, file: !3, line: 2479, type: !565)
!3533 = !DILocalVariable(name: "merged_p", scope: !3521, file: !3, line: 2479, type: !565)
!3534 = !DILocalVariable(name: "mem_dest_p", scope: !3521, file: !3, line: 2479, type: !565)
!3535 = !DILocalVariable(name: "n", scope: !3521, file: !3, line: 2480, type: !7)
!3536 = !DILocalVariable(name: "cover_class", scope: !3521, file: !3, line: 2481, type: !390)
!3537 = !DILocalVariable(name: "a", scope: !3521, file: !3, line: 2482, type: !573)
!3538 = !DILocalVariable(name: "parent_a", scope: !3521, file: !3, line: 2482, type: !573)
!3539 = !DILocalVariable(name: "first", scope: !3521, file: !3, line: 2482, type: !573)
!3540 = !DILocalVariable(name: "second", scope: !3521, file: !3, line: 2482, type: !573)
!3541 = !DILocalVariable(name: "node_first", scope: !3521, file: !3, line: 2482, type: !573)
!3542 = !DILocalVariable(name: "node_second", scope: !3521, file: !3, line: 2482, type: !573)
!3543 = !DILocalVariable(name: "cp", scope: !3521, file: !3, line: 2483, type: !1747)
!3544 = !DILocalVariable(name: "parent", scope: !3521, file: !3, line: 2484, type: !1713)
!3545 = !DILocalVariable(name: "node", scope: !3521, file: !3, line: 2484, type: !1713)
!3546 = !DILocalVariable(name: "r", scope: !3521, file: !3, line: 2485, type: !1767)
!3547 = !DILocalVariable(name: "ai", scope: !3521, file: !3, line: 2486, type: !3548)
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_allocno_iterator", file: !574, line: 935, baseType: !3549)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 932, size: 32, elements: !3550)
!3550 = !{!3551}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3549, file: !574, line: 934, baseType: !566, size: 32)
!3552 = !DILocalVariable(name: "ci", scope: !3521, file: !3, line: 2487, type: !3374)
!3553 = !DILocalVariable(name: "allocnos_live", scope: !3521, file: !3, line: 2488, type: !3554)
!3554 = !DIDerivedType(tag: DW_TAG_typedef, name: "sparseset", file: !3555, line: 41, baseType: !3556)
!3555 = !DIFile(filename: "./sparseset.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sparseset_def", file: !3555, line: 31, size: 320, elements: !3558)
!3558 = !{!3559, !3561, !3562, !3563, !3564, !3565, !3566, !3567}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "dense", scope: !3557, file: !3555, line: 33, baseType: !3560, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "sparse", scope: !3557, file: !3555, line: 34, baseType: !3560, size: 64, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !3557, file: !3555, line: 35, baseType: !7, size: 32, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3557, file: !3555, line: 36, baseType: !7, size: 32, offset: 160)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !3557, file: !3555, line: 37, baseType: !7, size: 32, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "iter_inc", scope: !3557, file: !3555, line: 38, baseType: !565, size: 8, offset: 224)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "iterating", scope: !3557, file: !3555, line: 39, baseType: !565, size: 8, offset: 232)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !3557, file: !3555, line: 40, baseType: !1108, size: 64, offset: 256)
!3568 = !DILocalVariable(name: "live_a", scope: !3569, file: !3, line: 2631, type: !573)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 2630, column: 3)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 2629, column: 8)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 2629, column: 8)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 2621, column: 6)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 2620, column: 4)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !3, line: 2620, column: 4)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 2619, column: 2)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 2618, column: 7)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 2618, column: 7)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 2606, column: 5)
!3579 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2605, column: 7)
!3580 = !DILocation(line: 0, scope: !3521)
!3581 = !DILocation(line: 2482, column: 3, scope: !3521)
!3582 = !DILocation(line: 2483, column: 3, scope: !3521)
!3583 = !DILocation(line: 2486, column: 3, scope: !3521)
!3584 = !DILocation(line: 2487, column: 3, scope: !3521)
!3585 = !DILocation(line: 2491, column: 39, scope: !3521)
!3586 = !DILocation(line: 2491, column: 54, scope: !3521)
!3587 = !DILocation(line: 2491, column: 25, scope: !3521)
!3588 = !DILocation(line: 2491, column: 5, scope: !3521)
!3589 = !DILocation(line: 2493, column: 4, scope: !3521)
!3590 = !DILocation(line: 2493, column: 19, scope: !3521)
!3591 = !DILocation(line: 2492, column: 3, scope: !3521)
!3592 = !DILocation(line: 2495, column: 3, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2495, column: 3)
!3594 = !DILocation(line: 2495, column: 3, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 2495, column: 3)
!3596 = !DILocation(line: 2497, column: 11, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 2497, column: 11)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 2496, column: 5)
!3599 = !DILocation(line: 2497, column: 34, scope: !3597)
!3600 = !DILocation(line: 2497, column: 11, scope: !3598)
!3601 = !DILocation(line: 2502, column: 7, scope: !3598)
!3602 = !DILocation(line: 2505, column: 42, scope: !3598)
!3603 = !DILocation(line: 2505, column: 40, scope: !3598)
!3604 = distinct !{!3604, !3592, !3605}
!3605 = !DILocation(line: 2507, column: 5, scope: !3593)
!3606 = !DILocation(line: 0, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 2512, column: 7)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 2510, column: 5)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 2509, column: 3)
!3610 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2509, column: 3)
!3611 = !DILocation(line: 2509, column: 8, scope: !3610)
!3612 = !DILocation(line: 2494, column: 17, scope: !3521)
!3613 = !DILocation(line: 0, scope: !3610)
!3614 = !DILocation(line: 2509, column: 41, scope: !3609)
!3615 = !DILocation(line: 2509, column: 3, scope: !3610)
!3616 = !DILocation(line: 2512, column: 16, scope: !3607)
!3617 = !DILocation(line: 2512, column: 14, scope: !3607)
!3618 = !DILocation(line: 2512, column: 12, scope: !3607)
!3619 = !DILocation(line: 2513, column: 5, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 2512, column: 7)
!3621 = !DILocation(line: 2511, column: 18, scope: !3608)
!3622 = !DILocation(line: 2494, column: 28, scope: !3521)
!3623 = !DILocation(line: 2513, column: 7, scope: !3620)
!3624 = !DILocation(line: 2512, column: 7, scope: !3607)
!3625 = !DILocation(line: 2517, column: 8, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2517, column: 8)
!3627 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 2515, column: 2)
!3628 = !DILocation(line: 2517, column: 8, scope: !3627)
!3629 = !DILocation(line: 2519, column: 8, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2519, column: 8)
!3631 = !DILocation(line: 2519, column: 24, scope: !3630)
!3632 = !DILocation(line: 2520, column: 8, scope: !3630)
!3633 = !DILocation(line: 2520, column: 21, scope: !3630)
!3634 = !DILocation(line: 2520, column: 49, scope: !3630)
!3635 = !DILocation(line: 2520, column: 57, scope: !3630)
!3636 = !DILocation(line: 2521, column: 8, scope: !3630)
!3637 = !DILocation(line: 2521, column: 32, scope: !3630)
!3638 = !DILocation(line: 2521, column: 50, scope: !3630)
!3639 = !DILocation(line: 2521, column: 24, scope: !3630)
!3640 = !DILocation(line: 2522, column: 5, scope: !3630)
!3641 = !DILocation(line: 2519, column: 8, scope: !3627)
!3642 = !DILocation(line: 2524, column: 8, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 2523, column: 6)
!3644 = !DILocation(line: 2524, column: 27, scope: !3643)
!3645 = !DILocation(line: 2525, column: 63, scope: !3643)
!3646 = !DILocation(line: 2525, column: 8, scope: !3643)
!3647 = !DILocation(line: 2525, column: 36, scope: !3643)
!3648 = !DILocation(line: 2525, column: 61, scope: !3643)
!3649 = !DILocation(line: 2526, column: 8, scope: !3643)
!3650 = !DILocation(line: 2530, column: 8, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2530, column: 8)
!3652 = !DILocation(line: 2530, column: 39, scope: !3651)
!3653 = !DILocation(line: 2530, column: 8, scope: !3627)
!3654 = !DILocation(line: 2532, column: 8, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2532, column: 8)
!3656 = !DILocation(line: 2532, column: 35, scope: !3655)
!3657 = !DILocation(line: 2532, column: 32, scope: !3655)
!3658 = !DILocation(line: 2532, column: 8, scope: !3627)
!3659 = !DILocation(line: 2564, column: 36, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 2563, column: 6)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 2562, column: 4)
!3662 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2562, column: 4)
!3663 = !DILocation(line: 2562, column: 4, scope: !3662)
!3664 = !DILocation(line: 2534, column: 8, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 2533, column: 6)
!3666 = !DILocation(line: 2537, column: 12, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 2537, column: 12)
!3668 = !DILocation(line: 2537, column: 12, scope: !3665)
!3669 = !DILocation(line: 2538, column: 3, scope: !3667)
!3670 = !DILocation(line: 2538, column: 43, scope: !3667)
!3671 = !DILocation(line: 2540, column: 12, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 2540, column: 12)
!3673 = !DILocation(line: 2540, column: 38, scope: !3672)
!3674 = !DILocation(line: 2540, column: 45, scope: !3672)
!3675 = !DILocation(line: 2540, column: 59, scope: !3672)
!3676 = !DILocation(line: 2540, column: 42, scope: !3672)
!3677 = !DILocation(line: 2544, column: 7, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 2541, column: 3)
!3679 = !DILocation(line: 2544, column: 24, scope: !3678)
!3680 = !DILocation(line: 2545, column: 7, scope: !3678)
!3681 = !DILocation(line: 2546, column: 7, scope: !3678)
!3682 = !DILocation(line: 2542, column: 5, scope: !3678)
!3683 = !DILocation(line: 2547, column: 32, scope: !3678)
!3684 = !DILocation(line: 2548, column: 11, scope: !3678)
!3685 = !DILocation(line: 2547, column: 5, scope: !3678)
!3686 = !DILocation(line: 2550, column: 38, scope: !3665)
!3687 = !DILocation(line: 2549, column: 3, scope: !3678)
!3688 = !DILocation(line: 2550, column: 8, scope: !3665)
!3689 = !DILocation(line: 2553, column: 6, scope: !3665)
!3690 = !DILocation(line: 2553, column: 31, scope: !3665)
!3691 = !DILocation(line: 2552, column: 5, scope: !3665)
!3692 = !DILocation(line: 2552, column: 3, scope: !3665)
!3693 = !DILocation(line: 2555, column: 8, scope: !3665)
!3694 = !DILocation(line: 2555, column: 32, scope: !3665)
!3695 = !DILocation(line: 2557, column: 6, scope: !3665)
!3696 = !DILocation(line: 2558, column: 6, scope: !3665)
!3697 = !DILocation(line: 2558, column: 9, scope: !3665)
!3698 = !DILocation(line: 2557, column: 3, scope: !3665)
!3699 = !DILocation(line: 2559, column: 8, scope: !3665)
!3700 = !DILocation(line: 2576, column: 12, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 2576, column: 12)
!3702 = !DILocation(line: 0, scope: !3627)
!3703 = !DILocation(line: 2564, column: 8, scope: !3660)
!3704 = !DILocation(line: 2564, column: 33, scope: !3660)
!3705 = !DILocation(line: 2565, column: 35, scope: !3660)
!3706 = !DILocation(line: 2565, column: 8, scope: !3660)
!3707 = !DILocation(line: 2565, column: 32, scope: !3660)
!3708 = !DILocation(line: 2566, column: 40, scope: !3660)
!3709 = !DILocation(line: 2566, column: 8, scope: !3660)
!3710 = !DILocation(line: 2566, column: 37, scope: !3660)
!3711 = !DILocation(line: 2568, column: 6, scope: !3660)
!3712 = !DILocation(line: 2567, column: 8, scope: !3660)
!3713 = !DILocation(line: 2568, column: 3, scope: !3660)
!3714 = !DILocation(line: 2570, column: 6, scope: !3660)
!3715 = !DILocation(line: 2569, column: 8, scope: !3660)
!3716 = !DILocation(line: 2570, column: 3, scope: !3660)
!3717 = !DILocation(line: 2574, column: 22, scope: !3660)
!3718 = !DILocation(line: 2575, column: 24, scope: !3660)
!3719 = !DILocation(line: 2576, column: 39, scope: !3701)
!3720 = !DILocation(line: 2577, column: 5, scope: !3701)
!3721 = !DILocation(line: 2577, column: 8, scope: !3701)
!3722 = !DILocation(line: 2577, column: 42, scope: !3701)
!3723 = !DILocation(line: 2576, column: 12, scope: !3660)
!3724 = !DILocation(line: 2578, column: 3, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 2578, column: 3)
!3726 = !DILocation(line: 0, scope: !3725)
!3727 = !DILocation(line: 2578, column: 17, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 2578, column: 3)
!3729 = !DILocation(line: 2580, column: 10, scope: !3728)
!3730 = !DILocation(line: 2579, column: 5, scope: !3728)
!3731 = !DILocation(line: 2580, column: 7, scope: !3728)
!3732 = !DILocation(line: 2578, column: 35, scope: !3728)
!3733 = !DILocation(line: 2578, column: 3, scope: !3728)
!3734 = distinct !{!3734, !3724, !3735}
!3735 = !DILocation(line: 2580, column: 38, scope: !3725)
!3736 = !DILocation(line: 2581, column: 12, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 2581, column: 12)
!3738 = !DILocation(line: 2581, column: 48, scope: !3737)
!3739 = !DILocation(line: 2582, column: 5, scope: !3737)
!3740 = !DILocation(line: 2582, column: 8, scope: !3737)
!3741 = !DILocation(line: 2582, column: 51, scope: !3737)
!3742 = !DILocation(line: 2581, column: 12, scope: !3660)
!3743 = !DILocation(line: 2583, column: 3, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 2583, column: 3)
!3745 = !DILocation(line: 0, scope: !3744)
!3746 = !DILocation(line: 2583, column: 17, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 2583, column: 3)
!3748 = !DILocation(line: 2585, column: 10, scope: !3747)
!3749 = !DILocation(line: 2584, column: 5, scope: !3747)
!3750 = !DILocation(line: 2585, column: 7, scope: !3747)
!3751 = !DILocation(line: 2583, column: 35, scope: !3747)
!3752 = !DILocation(line: 2583, column: 3, scope: !3747)
!3753 = distinct !{!3753, !3743, !3754}
!3754 = !DILocation(line: 2585, column: 47, scope: !3744)
!3755 = !DILocation(line: 2587, column: 6, scope: !3660)
!3756 = !DILocation(line: 2588, column: 42, scope: !3660)
!3757 = !DILocation(line: 2586, column: 8, scope: !3660)
!3758 = !DILocation(line: 2587, column: 3, scope: !3660)
!3759 = !DILocation(line: 2588, column: 8, scope: !3660)
!3760 = !DILocation(line: 2588, column: 39, scope: !3660)
!3761 = !DILocation(line: 2589, column: 12, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 2589, column: 12)
!3763 = !DILocation(line: 2589, column: 35, scope: !3762)
!3764 = !DILocation(line: 2590, column: 5, scope: !3762)
!3765 = !DILocation(line: 2591, column: 11, scope: !3762)
!3766 = !DILocation(line: 2591, column: 46, scope: !3762)
!3767 = !DILocation(line: 2591, column: 54, scope: !3762)
!3768 = !DILocation(line: 2592, column: 5, scope: !3762)
!3769 = !DILocation(line: 2592, column: 29, scope: !3762)
!3770 = !DILocation(line: 2593, column: 8, scope: !3762)
!3771 = !DILocation(line: 2592, column: 21, scope: !3762)
!3772 = !DILocation(line: 2593, column: 36, scope: !3762)
!3773 = !DILocation(line: 2589, column: 12, scope: !3660)
!3774 = distinct !{!3774, !3663, !3775}
!3775 = !DILocation(line: 2595, column: 6, scope: !3662)
!3776 = !DILocation(line: 2596, column: 4, scope: !3627)
!3777 = !DILocation(line: 2596, column: 23, scope: !3627)
!3778 = !DILocation(line: 2597, column: 59, scope: !3627)
!3779 = !DILocation(line: 2597, column: 4, scope: !3627)
!3780 = !DILocation(line: 2597, column: 32, scope: !3627)
!3781 = !DILocation(line: 2597, column: 57, scope: !3627)
!3782 = !DILocation(line: 2598, column: 2, scope: !3627)
!3783 = !DILocation(line: 0, scope: !3608)
!3784 = !DILocation(line: 2514, column: 9, scope: !3620)
!3785 = !DILocation(line: 2514, column: 7, scope: !3620)
!3786 = !DILocation(line: 2512, column: 7, scope: !3620)
!3787 = distinct !{!3787, !3624, !3788}
!3788 = !DILocation(line: 2598, column: 2, scope: !3607)
!3789 = !DILocation(line: 2599, column: 11, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 2599, column: 11)
!3791 = !DILocation(line: 2599, column: 22, scope: !3790)
!3792 = !DILocation(line: 2599, column: 25, scope: !3790)
!3793 = !DILocation(line: 2599, column: 11, scope: !3608)
!3794 = !DILocation(line: 2509, column: 3, scope: !3609)
!3795 = distinct !{!3795, !3615, !3796}
!3796 = !DILocation(line: 2601, column: 5, scope: !3610)
!3797 = !DILocation(line: 2603, column: 7, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2603, column: 7)
!3799 = !DILocation(line: 2603, column: 48, scope: !3798)
!3800 = !DILocation(line: 2603, column: 45, scope: !3798)
!3801 = !DILocation(line: 2603, column: 16, scope: !3798)
!3802 = !DILocation(line: 2604, column: 5, scope: !3798)
!3803 = !DILocation(line: 2605, column: 7, scope: !3579)
!3804 = !DILocation(line: 2605, column: 7, scope: !3521)
!3805 = !DILocation(line: 2608, column: 7, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 2608, column: 7)
!3807 = !DILocation(line: 2608, column: 7, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2608, column: 7)
!3809 = !DILocation(line: 2610, column: 8, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 2610, column: 8)
!3811 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 2609, column: 2)
!3812 = !DILocation(line: 2610, column: 13, scope: !3810)
!3813 = !DILocation(line: 2610, column: 41, scope: !3810)
!3814 = !DILocation(line: 2610, column: 10, scope: !3810)
!3815 = !DILocation(line: 2611, column: 8, scope: !3810)
!3816 = !DILocation(line: 2611, column: 11, scope: !3810)
!3817 = !DILocation(line: 2611, column: 34, scope: !3810)
!3818 = !DILocation(line: 2610, column: 8, scope: !3811)
!3819 = !DILocation(line: 2612, column: 6, scope: !3810)
!3820 = distinct !{!3820, !3805, !3821}
!3821 = !DILocation(line: 2616, column: 2, scope: !3806)
!3822 = !DILocation(line: 2613, column: 13, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 2613, column: 4)
!3824 = !DILocation(line: 2613, column: 9, scope: !3823)
!3825 = !DILocation(line: 0, scope: !3823)
!3826 = !DILocation(line: 2613, column: 40, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 2613, column: 4)
!3828 = !DILocation(line: 2613, column: 4, scope: !3823)
!3829 = !DILocation(line: 2613, column: 56, scope: !3827)
!3830 = !DILocation(line: 2613, column: 4, scope: !3827)
!3831 = distinct !{!3831, !3828, !3832}
!3832 = !DILocation(line: 2614, column: 6, scope: !3823)
!3833 = !DILocation(line: 2615, column: 4, scope: !3811)
!3834 = !DILocation(line: 2617, column: 40, scope: !3578)
!3835 = !DILocation(line: 2617, column: 23, scope: !3578)
!3836 = !DILocation(line: 2618, column: 12, scope: !3577)
!3837 = !DILocation(line: 2618, column: 23, scope: !3576)
!3838 = !DILocation(line: 2618, column: 21, scope: !3576)
!3839 = !DILocation(line: 2618, column: 7, scope: !3577)
!3840 = !DILocation(line: 2620, column: 13, scope: !3574)
!3841 = !DILocation(line: 2620, column: 9, scope: !3574)
!3842 = !DILocation(line: 0, scope: !3574)
!3843 = !DILocation(line: 2620, column: 42, scope: !3573)
!3844 = !DILocation(line: 2620, column: 4, scope: !3574)
!3845 = !DILocation(line: 2622, column: 15, scope: !3572)
!3846 = !DILocation(line: 2622, column: 10, scope: !3572)
!3847 = !DILocation(line: 2623, column: 12, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 2623, column: 12)
!3849 = !DILocation(line: 2623, column: 17, scope: !3848)
!3850 = !DILocation(line: 2623, column: 45, scope: !3848)
!3851 = !DILocation(line: 2623, column: 14, scope: !3848)
!3852 = !DILocation(line: 2624, column: 5, scope: !3848)
!3853 = !DILocation(line: 2624, column: 8, scope: !3848)
!3854 = !DILocation(line: 2624, column: 31, scope: !3848)
!3855 = !DILocation(line: 2623, column: 12, scope: !3572)
!3856 = !DILocation(line: 2626, column: 14, scope: !3572)
!3857 = !DILocation(line: 2627, column: 22, scope: !3572)
!3858 = !DILocation(line: 2628, column: 8, scope: !3572)
!3859 = !DILocation(line: 2629, column: 8, scope: !3571)
!3860 = !DILocation(line: 0, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 2633, column: 9)
!3862 = !DILocation(line: 2629, column: 8, scope: !3570)
!3863 = !DILocation(line: 0, scope: !3570)
!3864 = !DILocation(line: 2631, column: 28, scope: !3569)
!3865 = !DILocation(line: 0, scope: !3569)
!3866 = !DILocation(line: 2634, column: 23, scope: !3861)
!3867 = !DILocation(line: 2633, column: 9, scope: !3861)
!3868 = !DILocation(line: 2636, column: 16, scope: !3861)
!3869 = !DILocation(line: 2636, column: 9, scope: !3861)
!3870 = !DILocation(line: 2637, column: 33, scope: !3861)
!3871 = !DILocation(line: 2637, column: 7, scope: !3861)
!3872 = distinct !{!3872, !3859, !3873}
!3873 = !DILocation(line: 2638, column: 3, scope: !3571)
!3874 = !DILocation(line: 2620, column: 58, scope: !3573)
!3875 = !DILocation(line: 2620, column: 4, scope: !3573)
!3876 = distinct !{!3876, !3844, !3877}
!3877 = !DILocation(line: 2639, column: 6, scope: !3574)
!3878 = !DILocation(line: 2641, column: 13, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3575, file: !3, line: 2641, column: 4)
!3880 = !DILocation(line: 2641, column: 9, scope: !3879)
!3881 = !DILocation(line: 0, scope: !3879)
!3882 = !DILocation(line: 2641, column: 43, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 2641, column: 4)
!3884 = !DILocation(line: 2641, column: 4, scope: !3879)
!3885 = !DILocation(line: 2642, column: 42, scope: !3883)
!3886 = !DILocation(line: 2642, column: 6, scope: !3883)
!3887 = !DILocation(line: 2641, column: 59, scope: !3883)
!3888 = !DILocation(line: 2641, column: 4, scope: !3883)
!3889 = distinct !{!3889, !3884, !3890}
!3890 = !DILocation(line: 2642, column: 66, scope: !3879)
!3891 = !DILocation(line: 2618, column: 39, scope: !3576)
!3892 = !DILocation(line: 2618, column: 7, scope: !3576)
!3893 = distinct !{!3893, !3839, !3894}
!3894 = !DILocation(line: 2643, column: 2, scope: !3577)
!3895 = !DILocation(line: 2644, column: 7, scope: !3578)
!3896 = !DILocation(line: 2645, column: 7, scope: !3578)
!3897 = !DILocation(line: 2646, column: 5, scope: !3578)
!3898 = !DILocation(line: 2649, column: 3, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2649, column: 3)
!3900 = !DILocation(line: 2649, column: 3, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 2649, column: 3)
!3902 = !DILocation(line: 2651, column: 11, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 2651, column: 11)
!3904 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 2650, column: 5)
!3905 = !DILocation(line: 2651, column: 42, scope: !3903)
!3906 = !DILocation(line: 2652, column: 4, scope: !3903)
!3907 = !DILocation(line: 2652, column: 7, scope: !3903)
!3908 = !DILocation(line: 2652, column: 39, scope: !3903)
!3909 = !DILocation(line: 2651, column: 11, scope: !3904)
!3910 = !DILocation(line: 2654, column: 8, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 2654, column: 8)
!3912 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 2653, column: 2)
!3913 = !DILocation(line: 2654, column: 34, scope: !3911)
!3914 = !DILocation(line: 2654, column: 41, scope: !3911)
!3915 = !DILocation(line: 2654, column: 55, scope: !3911)
!3916 = !DILocation(line: 2654, column: 38, scope: !3911)
!3917 = !DILocation(line: 2657, column: 13, scope: !3911)
!3918 = !DILocation(line: 2657, column: 18, scope: !3911)
!3919 = !DILocation(line: 2658, column: 9, scope: !3911)
!3920 = !DILocation(line: 2658, column: 34, scope: !3911)
!3921 = !DILocation(line: 2659, column: 9, scope: !3911)
!3922 = !DILocation(line: 2659, column: 41, scope: !3911)
!3923 = !DILocation(line: 2660, column: 9, scope: !3911)
!3924 = !DILocation(line: 2660, column: 35, scope: !3911)
!3925 = !DILocation(line: 2655, column: 6, scope: !3911)
!3926 = !DILocation(line: 2661, column: 4, scope: !3912)
!3927 = !DILocation(line: 2661, column: 8, scope: !3912)
!3928 = !DILocation(line: 2661, column: 23, scope: !3912)
!3929 = !DILocation(line: 2662, column: 4, scope: !3912)
!3930 = distinct !{!3930, !3898, !3931}
!3931 = !DILocation(line: 2695, column: 5, scope: !3899)
!3932 = !DILocation(line: 2664, column: 15, scope: !3904)
!3933 = !DILocation(line: 2664, column: 43, scope: !3904)
!3934 = !DILocation(line: 2665, column: 16, scope: !3904)
!3935 = !DILocation(line: 2665, column: 44, scope: !3904)
!3936 = !DILocation(line: 2666, column: 14, scope: !3904)
!3937 = !DILocation(line: 2666, column: 18, scope: !3904)
!3938 = !DILocation(line: 2667, column: 16, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 2667, column: 11)
!3940 = !DILocation(line: 2667, column: 11, scope: !3904)
!3941 = !DILocation(line: 2673, column: 23, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2670, column: 2)
!3943 = !DILocation(line: 2673, column: 41, scope: !3942)
!3944 = !DILocation(line: 2673, column: 17, scope: !3942)
!3945 = !DILocation(line: 2674, column: 42, scope: !3942)
!3946 = !DILocation(line: 2674, column: 18, scope: !3942)
!3947 = !DILocation(line: 2675, column: 15, scope: !3942)
!3948 = !DILocation(line: 2676, column: 11, scope: !3942)
!3949 = !DILocation(line: 2676, column: 8, scope: !3942)
!3950 = !DILocation(line: 2677, column: 8, scope: !3942)
!3951 = !DILocation(line: 2677, column: 12, scope: !3942)
!3952 = !DILocation(line: 2678, column: 8, scope: !3942)
!3953 = !DILocation(line: 2678, column: 5, scope: !3942)
!3954 = !DILocation(line: 0, scope: !3942)
!3955 = !DILocation(line: 2675, column: 13, scope: !3942)
!3956 = !DILocation(line: 0, scope: !3939)
!3957 = !DILocation(line: 2680, column: 11, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 2680, column: 11)
!3959 = !DILocation(line: 2680, column: 11, scope: !3904)
!3960 = !DILocation(line: 2682, column: 25, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 2681, column: 2)
!3962 = !DILocation(line: 2682, column: 4, scope: !3961)
!3963 = !DILocation(line: 2682, column: 8, scope: !3961)
!3964 = !DILocation(line: 2682, column: 23, scope: !3961)
!3965 = !DILocation(line: 2683, column: 8, scope: !3961)
!3966 = !DILocation(line: 2683, column: 14, scope: !3961)
!3967 = !DILocation(line: 2684, column: 8, scope: !3961)
!3968 = !DILocation(line: 2684, column: 15, scope: !3961)
!3969 = !DILocation(line: 2685, column: 2, scope: !3961)
!3970 = !DILocation(line: 2688, column: 4, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 2687, column: 2)
!3972 = !DILocation(line: 2688, column: 8, scope: !3971)
!3973 = !DILocation(line: 2688, column: 23, scope: !3971)
!3974 = !DILocation(line: 2689, column: 8, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 2689, column: 8)
!3976 = !DILocation(line: 2689, column: 34, scope: !3975)
!3977 = !DILocation(line: 2689, column: 41, scope: !3975)
!3978 = !DILocation(line: 2689, column: 55, scope: !3975)
!3979 = !DILocation(line: 2689, column: 38, scope: !3975)
!3980 = !DILocation(line: 2691, column: 12, scope: !3975)
!3981 = !DILocation(line: 2691, column: 17, scope: !3975)
!3982 = !DILocation(line: 2692, column: 8, scope: !3975)
!3983 = !DILocation(line: 2692, column: 41, scope: !3975)
!3984 = !DILocation(line: 2693, column: 8, scope: !3975)
!3985 = !DILocation(line: 2690, column: 6, scope: !3975)
!3986 = !DILocation(line: 2697, column: 3, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2697, column: 3)
!3988 = !DILocation(line: 2697, column: 3, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 2697, column: 3)
!3990 = !DILocation(line: 2699, column: 11, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 2699, column: 11)
!3992 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 2698, column: 5)
!3993 = !DILocation(line: 2699, column: 16, scope: !3991)
!3994 = !DILocation(line: 2699, column: 44, scope: !3991)
!3995 = !DILocation(line: 2699, column: 13, scope: !3991)
!3996 = !DILocation(line: 2700, column: 4, scope: !3991)
!3997 = !DILocation(line: 2700, column: 7, scope: !3991)
!3998 = !DILocation(line: 2700, column: 30, scope: !3991)
!3999 = !DILocation(line: 2699, column: 11, scope: !3992)
!4000 = !DILocation(line: 2702, column: 8, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 2702, column: 8)
!4002 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 2701, column: 2)
!4003 = !DILocation(line: 2702, column: 34, scope: !4001)
!4004 = !DILocation(line: 2702, column: 41, scope: !4001)
!4005 = !DILocation(line: 2702, column: 55, scope: !4001)
!4006 = !DILocation(line: 2702, column: 38, scope: !4001)
!4007 = !DILocation(line: 2704, column: 8, scope: !4001)
!4008 = !DILocation(line: 2704, column: 25, scope: !4001)
!4009 = !DILocation(line: 2703, column: 6, scope: !4001)
!4010 = !DILocation(line: 2705, column: 20, scope: !4002)
!4011 = !DILocation(line: 2705, column: 4, scope: !4002)
!4012 = !DILocation(line: 2706, column: 4, scope: !4002)
!4013 = distinct !{!4013, !3986, !4014}
!4014 = !DILocation(line: 2718, column: 5, scope: !3987)
!4015 = !DILocation(line: 2708, column: 36, scope: !3992)
!4016 = !DILocation(line: 2708, column: 7, scope: !3992)
!4017 = !DILocation(line: 2708, column: 34, scope: !3992)
!4018 = !DILocation(line: 2709, column: 27, scope: !3992)
!4019 = !DILocation(line: 2709, column: 7, scope: !3992)
!4020 = !DILocation(line: 2709, column: 25, scope: !3992)
!4021 = !DILocation(line: 2710, column: 7, scope: !3992)
!4022 = !DILocation(line: 2710, column: 23, scope: !3992)
!4023 = !DILocation(line: 2712, column: 41, scope: !3992)
!4024 = !DILocation(line: 2712, column: 7, scope: !3992)
!4025 = !DILocation(line: 2712, column: 39, scope: !3992)
!4026 = !DILocation(line: 2713, column: 46, scope: !3992)
!4027 = !DILocation(line: 2713, column: 7, scope: !3992)
!4028 = !DILocation(line: 2713, column: 44, scope: !3992)
!4029 = !DILocation(line: 2714, column: 13, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 2714, column: 11)
!4031 = !DILocation(line: 2714, column: 11, scope: !3992)
!4032 = !DILocation(line: 2715, column: 2, scope: !4030)
!4033 = !DILocation(line: 2720, column: 3, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2720, column: 3)
!4035 = !DILocation(line: 2720, column: 3, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2720, column: 3)
!4037 = !DILocation(line: 2722, column: 11, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 2722, column: 11)
!4039 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 2721, column: 5)
!4040 = !DILocation(line: 2722, column: 15, scope: !4038)
!4041 = !DILocation(line: 2722, column: 30, scope: !4038)
!4042 = !DILocation(line: 2722, column: 11, scope: !4039)
!4043 = !DILocation(line: 2724, column: 4, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4038, file: !3, line: 2723, column: 2)
!4045 = !DILocation(line: 2724, column: 19, scope: !4044)
!4046 = !DILocation(line: 2724, column: 24, scope: !4044)
!4047 = !DILocation(line: 2725, column: 17, scope: !4044)
!4048 = !DILocation(line: 2725, column: 4, scope: !4044)
!4049 = !DILocation(line: 2726, column: 4, scope: !4044)
!4050 = distinct !{!4050, !4033, !4051}
!4051 = !DILocation(line: 2733, column: 5, scope: !4034)
!4052 = !DILocation(line: 2731, column: 7, scope: !4039)
!4053 = !DILocation(line: 2732, column: 48, scope: !4039)
!4054 = !DILocation(line: 2732, column: 7, scope: !4039)
!4055 = !DILocation(line: 2734, column: 3, scope: !3521)
!4056 = !DILocation(line: 2735, column: 7, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 2735, column: 7)
!4058 = !DILocation(line: 2735, column: 21, scope: !4057)
!4059 = !DILocation(line: 2735, column: 7, scope: !3521)
!4060 = !DILocation(line: 2736, column: 5, scope: !4057)
!4061 = !DILocation(line: 2737, column: 13, scope: !3521)
!4062 = !DILocation(line: 2737, column: 3, scope: !3521)
!4063 = !DILocation(line: 2738, column: 1, scope: !3521)
!4064 = distinct !DISubprogram(name: "ira_allocno_iter_init", scope: !574, file: !574, line: 939, type: !4065, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4068)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{null, !4067}
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!4068 = !{!4069}
!4069 = !DILocalVariable(name: "i", arg: 1, scope: !4064, file: !574, line: 939, type: !4067)
!4070 = !DILocation(line: 0, scope: !4064)
!4071 = !DILocation(line: 941, column: 6, scope: !4064)
!4072 = !DILocation(line: 941, column: 8, scope: !4064)
!4073 = !DILocation(line: 942, column: 1, scope: !4064)
!4074 = distinct !DISubprogram(name: "ira_allocno_iter_cond", scope: !574, file: !574, line: 947, type: !4075, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4077)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!565, !4067, !1727}
!4077 = !{!4078, !4079, !4080}
!4078 = !DILocalVariable(name: "i", arg: 1, scope: !4074, file: !574, line: 947, type: !4067)
!4079 = !DILocalVariable(name: "a", arg: 2, scope: !4074, file: !574, line: 947, type: !1727)
!4080 = !DILocalVariable(name: "n", scope: !4074, file: !574, line: 949, type: !566)
!4081 = !DILocation(line: 0, scope: !4074)
!4082 = !DILocation(line: 951, column: 15, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4074, file: !574, line: 951, column: 3)
!4084 = !DILocation(line: 0, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4083, file: !574, line: 951, column: 3)
!4086 = !DILocation(line: 0, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4085, file: !574, line: 952, column: 9)
!4088 = !DILocation(line: 951, column: 8, scope: !4083)
!4089 = !DILocation(line: 0, scope: !4083)
!4090 = !DILocation(line: 951, column: 20, scope: !4085)
!4091 = !DILocation(line: 951, column: 3, scope: !4083)
!4092 = !DILocation(line: 952, column: 9, scope: !4087)
!4093 = !DILocation(line: 952, column: 25, scope: !4087)
!4094 = !DILocation(line: 952, column: 9, scope: !4085)
!4095 = !DILocation(line: 954, column: 5, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4087, file: !574, line: 953, column: 7)
!4097 = !DILocation(line: 955, column: 11, scope: !4096)
!4098 = !DILocation(line: 955, column: 7, scope: !4096)
!4099 = !DILocation(line: 956, column: 2, scope: !4096)
!4100 = !DILocation(line: 951, column: 41, scope: !4085)
!4101 = !DILocation(line: 951, column: 3, scope: !4085)
!4102 = distinct !{!4102, !4091, !4103}
!4103 = !DILocation(line: 957, column: 7, scope: !4083)
!4104 = !DILocation(line: 959, column: 1, scope: !4074)
!4105 = distinct !DISubprogram(name: "rhs_regno", scope: !421, file: !421, line: 1051, type: !4106, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4111)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!7, !4108}
!4108 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !584, line: 51, baseType: !4109)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !586)
!4111 = !{!4112}
!4112 = !DILocalVariable(name: "x", arg: 1, scope: !4105, file: !421, line: 1051, type: !4108)
!4113 = !DILocation(line: 0, scope: !4105)
!4114 = !DILocation(line: 1053, column: 10, scope: !4105)
!4115 = !DILocation(line: 1053, column: 3, scope: !4105)
!4116 = distinct !DISubprogram(name: "change_allocno_in_range_list", scope: !3, file: !3, line: 1653, type: !4117, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4119)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{null, !1767, !573}
!4119 = !{!4120, !4121}
!4120 = !DILocalVariable(name: "r", arg: 1, scope: !4116, file: !3, line: 1653, type: !1767)
!4121 = !DILocalVariable(name: "a", arg: 2, scope: !4116, file: !3, line: 1653, type: !573)
!4122 = !DILocation(line: 0, scope: !4116)
!4123 = !DILocation(line: 1655, column: 3, scope: !4116)
!4124 = !DILocation(line: 1655, column: 12, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1655, column: 3)
!4126 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 1655, column: 3)
!4127 = !DILocation(line: 1655, column: 3, scope: !4126)
!4128 = !DILocation(line: 1656, column: 8, scope: !4125)
!4129 = !DILocation(line: 1656, column: 16, scope: !4125)
!4130 = !DILocation(line: 1655, column: 28, scope: !4125)
!4131 = !DILocation(line: 1655, column: 3, scope: !4125)
!4132 = distinct !{!4132, !4127, !4133}
!4133 = !DILocation(line: 1656, column: 18, scope: !4126)
!4134 = !DILocation(line: 1657, column: 1, scope: !4116)
!4135 = distinct !DISubprogram(name: "copy_info_to_removed_store_destinations", scope: !3, file: !3, line: 2409, type: !4136, scopeLine: 2410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4138)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!565, !566}
!4138 = !{!4139, !4140, !4141, !4142, !4143, !4144}
!4139 = !DILocalVariable(name: "regno", arg: 1, scope: !4135, file: !3, line: 2409, type: !566)
!4140 = !DILocalVariable(name: "a", scope: !4135, file: !3, line: 2411, type: !573)
!4141 = !DILocalVariable(name: "parent_a", scope: !4135, file: !3, line: 2412, type: !573)
!4142 = !DILocalVariable(name: "parent", scope: !4135, file: !3, line: 2413, type: !1713)
!4143 = !DILocalVariable(name: "r", scope: !4135, file: !3, line: 2414, type: !1767)
!4144 = !DILocalVariable(name: "merged_p", scope: !4135, file: !3, line: 2415, type: !565)
!4145 = !DILocation(line: 0, scope: !4135)
!4146 = !DILocation(line: 2418, column: 12, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 2418, column: 3)
!4148 = !DILocation(line: 2418, column: 8, scope: !4147)
!4149 = !DILocation(line: 2412, column: 17, scope: !4135)
!4150 = !DILocation(line: 2417, column: 12, scope: !4135)
!4151 = !DILocation(line: 0, scope: !4147)
!4152 = !DILocation(line: 2419, column: 10, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 2418, column: 3)
!4154 = !DILocation(line: 2418, column: 3, scope: !4147)
!4155 = !DILocation(line: 2422, column: 16, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 2422, column: 11)
!4157 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 2421, column: 5)
!4158 = !DILocation(line: 2422, column: 44, scope: !4156)
!4159 = !DILocation(line: 2422, column: 13, scope: !4156)
!4160 = !DILocation(line: 2422, column: 11, scope: !4157)
!4161 = !DILocation(line: 2427, column: 21, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 2427, column: 7)
!4163 = !DILocation(line: 2427, column: 12, scope: !4162)
!4164 = !DILocation(line: 0, scope: !4162)
!4165 = !DILocation(line: 2428, column: 12, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 2427, column: 7)
!4167 = !DILocation(line: 2427, column: 7, scope: !4162)
!4168 = !DILocation(line: 2430, column: 26, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 2430, column: 6)
!4170 = !DILocation(line: 2430, column: 18, scope: !4169)
!4171 = !DILocation(line: 2430, column: 52, scope: !4169)
!4172 = !DILocation(line: 2431, column: 6, scope: !4169)
!4173 = !DILocation(line: 2431, column: 22, scope: !4169)
!4174 = !DILocation(line: 2431, column: 50, scope: !4169)
!4175 = !DILocation(line: 2431, column: 19, scope: !4169)
!4176 = !DILocation(line: 2433, column: 3, scope: !4169)
!4177 = !DILocation(line: 2433, column: 6, scope: !4169)
!4178 = !DILocation(line: 2430, column: 6, scope: !4166)
!4179 = !DILocation(line: 2427, column: 7, scope: !4166)
!4180 = distinct !{!4180, !4167, !4181}
!4181 = !DILocation(line: 2434, column: 4, scope: !4162)
!4182 = !DILocation(line: 2435, column: 38, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 2435, column: 11)
!4184 = !DILocation(line: 2435, column: 26, scope: !4183)
!4185 = !DILocation(line: 2437, column: 11, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 2437, column: 11)
!4187 = !DILocation(line: 2437, column: 37, scope: !4186)
!4188 = !DILocation(line: 2437, column: 44, scope: !4186)
!4189 = !DILocation(line: 2437, column: 58, scope: !4186)
!4190 = !DILocation(line: 2437, column: 41, scope: !4186)
!4191 = !DILocation(line: 2442, column: 7, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 2438, column: 2)
!4193 = !DILocation(line: 2442, column: 24, scope: !4192)
!4194 = !DILocation(line: 2443, column: 7, scope: !4192)
!4195 = !DILocation(line: 2443, column: 31, scope: !4192)
!4196 = !DILocation(line: 2439, column: 4, scope: !4192)
!4197 = !DILocation(line: 2444, column: 31, scope: !4192)
!4198 = !DILocation(line: 2445, column: 10, scope: !4192)
!4199 = !DILocation(line: 2444, column: 4, scope: !4192)
!4200 = !DILocation(line: 2446, column: 2, scope: !4192)
!4201 = !DILocation(line: 2447, column: 45, scope: !4157)
!4202 = !DILocation(line: 2447, column: 11, scope: !4157)
!4203 = !DILocation(line: 2448, column: 7, scope: !4157)
!4204 = !DILocation(line: 2450, column: 38, scope: !4157)
!4205 = !DILocation(line: 2450, column: 4, scope: !4157)
!4206 = !DILocation(line: 2450, column: 2, scope: !4157)
!4207 = !DILocation(line: 2451, column: 7, scope: !4157)
!4208 = !DILocation(line: 2454, column: 11, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 2454, column: 11)
!4210 = !DILocation(line: 2454, column: 11, scope: !4157)
!4211 = !DILocation(line: 2455, column: 2, scope: !4209)
!4212 = !DILocation(line: 2455, column: 42, scope: !4209)
!4213 = !DILocation(line: 2457, column: 39, scope: !4157)
!4214 = !DILocation(line: 2457, column: 7, scope: !4157)
!4215 = !DILocation(line: 2457, column: 36, scope: !4157)
!4216 = !DILocation(line: 2459, column: 5, scope: !4157)
!4217 = !DILocation(line: 2458, column: 7, scope: !4157)
!4218 = !DILocation(line: 2459, column: 2, scope: !4157)
!4219 = !DILocation(line: 2461, column: 5, scope: !4157)
!4220 = !DILocation(line: 2460, column: 7, scope: !4157)
!4221 = !DILocation(line: 2461, column: 2, scope: !4157)
!4222 = !DILocation(line: 2463, column: 5, scope: !4157)
!4223 = !DILocation(line: 2420, column: 12, scope: !4153)
!4224 = !DILocation(line: 2418, column: 3, scope: !4153)
!4225 = distinct !{!4225, !4154, !4226}
!4226 = !DILocation(line: 2463, column: 5, scope: !4147)
!4227 = !DILocation(line: 2464, column: 3, scope: !4135)
!4228 = distinct !DISubprogram(name: "clear_allocno_conflicts", scope: !3, file: !3, line: 667, type: !2603, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4229)
!4229 = !{!4230, !4231}
!4230 = !DILocalVariable(name: "a", arg: 1, scope: !4228, file: !3, line: 667, type: !573)
!4231 = !DILocalVariable(name: "nw", scope: !4232, file: !3, line: 676, type: !566)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 675, column: 5)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 674, column: 12)
!4234 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 669, column: 7)
!4235 = !DILocation(line: 0, scope: !4228)
!4236 = !DILocation(line: 669, column: 7, scope: !4234)
!4237 = !DILocation(line: 669, column: 7, scope: !4228)
!4238 = !DILocation(line: 671, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4234, file: !3, line: 670, column: 5)
!4240 = !DILocation(line: 671, column: 41, scope: !4239)
!4241 = !DILocation(line: 672, column: 26, scope: !4239)
!4242 = !DILocation(line: 672, column: 65, scope: !4239)
!4243 = !DILocation(line: 673, column: 5, scope: !4239)
!4244 = !DILocation(line: 674, column: 12, scope: !4233)
!4245 = !DILocation(line: 674, column: 52, scope: !4233)
!4246 = !DILocation(line: 674, column: 12, scope: !4234)
!4247 = !DILocation(line: 678, column: 13, scope: !4232)
!4248 = !DILocation(line: 678, column: 31, scope: !4232)
!4249 = !DILocation(line: 678, column: 29, scope: !4232)
!4250 = !DILocation(line: 678, column: 48, scope: !4232)
!4251 = !DILocation(line: 678, column: 63, scope: !4232)
!4252 = !DILocation(line: 0, scope: !4232)
!4253 = !DILocation(line: 679, column: 15, scope: !4232)
!4254 = !DILocation(line: 680, column: 8, scope: !4232)
!4255 = !DILocation(line: 680, column: 11, scope: !4232)
!4256 = !DILocation(line: 679, column: 7, scope: !4232)
!4257 = !DILocation(line: 681, column: 5, scope: !4232)
!4258 = !DILocation(line: 682, column: 1, scope: !4228)
!4259 = distinct !DISubprogram(name: "sparseset_set_bit", scope: !3555, file: !3555, line: 106, type: !4260, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4262)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{null, !3554, !7}
!4262 = !{!4263, !4264}
!4263 = !DILocalVariable(name: "s", arg: 1, scope: !4259, file: !3555, line: 106, type: !3554)
!4264 = !DILocalVariable(name: "e", arg: 2, scope: !4259, file: !3555, line: 106, type: !7)
!4265 = !DILocation(line: 0, scope: !4259)
!4266 = !DILocation(line: 108, column: 8, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4259, file: !3555, line: 108, column: 7)
!4268 = !DILocation(line: 108, column: 7, scope: !4259)
!4269 = !DILocation(line: 109, column: 36, scope: !4267)
!4270 = !DILocation(line: 109, column: 43, scope: !4267)
!4271 = !DILocation(line: 109, column: 5, scope: !4267)
!4272 = !DILocation(line: 110, column: 1, scope: !4259)
!4273 = distinct !DISubprogram(name: "sparseset_iter_init", scope: !3555, file: !3555, line: 126, type: !4274, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4276)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{null, !3554}
!4276 = !{!4277}
!4277 = !DILocalVariable(name: "s", arg: 1, scope: !4273, file: !3555, line: 126, type: !3554)
!4278 = !DILocation(line: 0, scope: !4273)
!4279 = !DILocation(line: 128, column: 6, scope: !4273)
!4280 = !DILocation(line: 128, column: 11, scope: !4273)
!4281 = !DILocation(line: 129, column: 6, scope: !4273)
!4282 = !DILocation(line: 129, column: 15, scope: !4273)
!4283 = !DILocation(line: 130, column: 6, scope: !4273)
!4284 = !DILocation(line: 130, column: 16, scope: !4273)
!4285 = !DILocation(line: 131, column: 1, scope: !4273)
!4286 = distinct !DISubprogram(name: "sparseset_iter_p", scope: !3555, file: !3555, line: 134, type: !4287, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!565, !3554}
!4289 = !{!4290}
!4290 = !DILocalVariable(name: "s", arg: 1, scope: !4286, file: !3555, line: 134, type: !3554)
!4291 = !DILocation(line: 0, scope: !4286)
!4292 = !DILocation(line: 136, column: 10, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4286, file: !3555, line: 136, column: 7)
!4294 = !DILocation(line: 136, column: 7, scope: !4293)
!4295 = !DILocation(line: 136, column: 20, scope: !4293)
!4296 = !DILocation(line: 136, column: 26, scope: !4293)
!4297 = !DILocation(line: 136, column: 36, scope: !4293)
!4298 = !DILocation(line: 136, column: 31, scope: !4293)
!4299 = !DILocation(line: 136, column: 7, scope: !4286)
!4300 = !DILocation(line: 139, column: 25, scope: !4293)
!4301 = !DILocation(line: 139, column: 5, scope: !4293)
!4302 = !DILocation(line: 0, scope: !4293)
!4303 = !DILocation(line: 140, column: 1, scope: !4286)
!4304 = distinct !DISubprogram(name: "sparseset_iter_elm", scope: !3555, file: !3555, line: 143, type: !4305, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4307)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!7, !3554}
!4307 = !{!4308}
!4308 = !DILocalVariable(name: "s", arg: 1, scope: !4304, file: !3555, line: 143, type: !3554)
!4309 = !DILocation(line: 0, scope: !4304)
!4310 = !DILocation(line: 145, column: 13, scope: !4304)
!4311 = !DILocation(line: 145, column: 22, scope: !4304)
!4312 = !DILocation(line: 145, column: 10, scope: !4304)
!4313 = !DILocation(line: 145, column: 3, scope: !4304)
!4314 = distinct !DISubprogram(name: "sparseset_iter_next", scope: !3555, file: !3555, line: 149, type: !4274, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4315)
!4315 = !{!4316}
!4316 = !DILocalVariable(name: "s", arg: 1, scope: !4314, file: !3555, line: 149, type: !3554)
!4317 = !DILocation(line: 0, scope: !4314)
!4318 = !DILocation(line: 151, column: 17, scope: !4314)
!4319 = !DILocation(line: 151, column: 14, scope: !4314)
!4320 = !DILocation(line: 151, column: 6, scope: !4314)
!4321 = !DILocation(line: 151, column: 11, scope: !4314)
!4322 = !DILocation(line: 152, column: 15, scope: !4314)
!4323 = !DILocation(line: 153, column: 1, scope: !4314)
!4324 = distinct !DISubprogram(name: "compress_conflict_vecs", scope: !3, file: !3, line: 718, type: !3362, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4325)
!4325 = !{!4326, !4327}
!4326 = !DILocalVariable(name: "a", scope: !4324, file: !3, line: 720, type: !573)
!4327 = !DILocalVariable(name: "ai", scope: !4324, file: !3, line: 721, type: !3548)
!4328 = !DILocation(line: 720, column: 3, scope: !4324)
!4329 = !DILocation(line: 721, column: 3, scope: !4324)
!4330 = !DILocation(line: 724, column: 44, scope: !4324)
!4331 = !DILocation(line: 724, column: 42, scope: !4324)
!4332 = !DILocation(line: 724, column: 15, scope: !4324)
!4333 = !DILocation(line: 724, column: 5, scope: !4324)
!4334 = !DILocation(line: 725, column: 53, scope: !4324)
!4335 = !DILocation(line: 725, column: 51, scope: !4324)
!4336 = !DILocation(line: 725, column: 3, scope: !4324)
!4337 = !DILocation(line: 726, column: 36, scope: !4324)
!4338 = !DILocation(line: 0, scope: !4324)
!4339 = !DILocation(line: 727, column: 3, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 727, column: 3)
!4341 = !DILocation(line: 727, column: 3, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 727, column: 3)
!4343 = !DILocation(line: 728, column: 9, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 728, column: 9)
!4345 = !DILocation(line: 728, column: 9, scope: !4342)
!4346 = !DILocation(line: 729, column: 7, scope: !4344)
!4347 = distinct !{!4347, !4339, !4348}
!4348 = !DILocation(line: 729, column: 39, scope: !4340)
!4349 = !DILocation(line: 730, column: 13, scope: !4324)
!4350 = !DILocation(line: 730, column: 3, scope: !4324)
!4351 = !DILocation(line: 731, column: 1, scope: !4324)
!4352 = distinct !DISubprogram(name: "ira_copy_iter_init", scope: !574, file: !574, line: 979, type: !4353, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4356)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{null, !4355}
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!4356 = !{!4357}
!4357 = !DILocalVariable(name: "i", arg: 1, scope: !4352, file: !574, line: 979, type: !4355)
!4358 = !DILocation(line: 0, scope: !4352)
!4359 = !DILocation(line: 981, column: 6, scope: !4352)
!4360 = !DILocation(line: 981, column: 8, scope: !4352)
!4361 = !DILocation(line: 982, column: 1, scope: !4352)
!4362 = distinct !DISubprogram(name: "ira_copy_iter_cond", scope: !574, file: !574, line: 987, type: !4363, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4365)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!565, !4355, !1881}
!4365 = !{!4366, !4367, !4368}
!4366 = !DILocalVariable(name: "i", arg: 1, scope: !4362, file: !574, line: 987, type: !4355)
!4367 = !DILocalVariable(name: "cp", arg: 2, scope: !4362, file: !574, line: 987, type: !1881)
!4368 = !DILocalVariable(name: "n", scope: !4362, file: !574, line: 989, type: !566)
!4369 = !DILocation(line: 0, scope: !4362)
!4370 = !DILocation(line: 991, column: 15, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4362, file: !574, line: 991, column: 3)
!4372 = !DILocation(line: 0, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4371, file: !574, line: 991, column: 3)
!4374 = !DILocation(line: 0, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4373, file: !574, line: 992, column: 9)
!4376 = !DILocation(line: 991, column: 8, scope: !4371)
!4377 = !DILocation(line: 0, scope: !4371)
!4378 = !DILocation(line: 991, column: 20, scope: !4373)
!4379 = !DILocation(line: 991, column: 3, scope: !4371)
!4380 = !DILocation(line: 992, column: 9, scope: !4375)
!4381 = !DILocation(line: 992, column: 23, scope: !4375)
!4382 = !DILocation(line: 992, column: 9, scope: !4373)
!4383 = !DILocation(line: 994, column: 6, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4375, file: !574, line: 993, column: 7)
!4385 = !DILocation(line: 995, column: 11, scope: !4384)
!4386 = !DILocation(line: 995, column: 7, scope: !4384)
!4387 = !DILocation(line: 996, column: 2, scope: !4384)
!4388 = !DILocation(line: 991, column: 39, scope: !4373)
!4389 = !DILocation(line: 991, column: 3, scope: !4373)
!4390 = distinct !{!4390, !4379, !4391}
!4391 = !DILocation(line: 997, column: 7, scope: !4371)
!4392 = !DILocation(line: 999, column: 1, scope: !4362)
!4393 = distinct !DISubprogram(name: "finish_allocno", scope: !3, file: !3, line: 983, type: !2603, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4394)
!4394 = !{!4395, !4396}
!4395 = !DILocalVariable(name: "a", arg: 1, scope: !4393, file: !3, line: 983, type: !573)
!4396 = !DILocalVariable(name: "cover_class", scope: !4393, file: !3, line: 985, type: !390)
!4397 = !DILocation(line: 0, scope: !4393)
!4398 = !DILocation(line: 985, column: 32, scope: !4393)
!4399 = !DILocation(line: 987, column: 3, scope: !4393)
!4400 = !DILocation(line: 987, column: 16, scope: !4393)
!4401 = !DILocation(line: 987, column: 33, scope: !4393)
!4402 = !DILocation(line: 988, column: 3, scope: !4393)
!4403 = !DILocation(line: 988, column: 31, scope: !4393)
!4404 = !DILocation(line: 988, column: 56, scope: !4393)
!4405 = !DILocation(line: 989, column: 7, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 989, column: 7)
!4407 = !DILocation(line: 989, column: 42, scope: !4406)
!4408 = !DILocation(line: 989, column: 7, scope: !4393)
!4409 = !DILocation(line: 990, column: 5, scope: !4406)
!4410 = !DILocation(line: 991, column: 7, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 991, column: 7)
!4412 = !DILocation(line: 991, column: 34, scope: !4411)
!4413 = !DILocation(line: 991, column: 7, scope: !4393)
!4414 = !DILocation(line: 992, column: 5, scope: !4411)
!4415 = !DILocation(line: 993, column: 7, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 993, column: 7)
!4417 = !DILocation(line: 993, column: 43, scope: !4416)
!4418 = !DILocation(line: 993, column: 7, scope: !4393)
!4419 = !DILocation(line: 994, column: 5, scope: !4416)
!4420 = !DILocation(line: 995, column: 7, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 995, column: 7)
!4422 = !DILocation(line: 995, column: 42, scope: !4421)
!4423 = !DILocation(line: 995, column: 7, scope: !4393)
!4424 = !DILocation(line: 996, column: 5, scope: !4421)
!4425 = !DILocation(line: 997, column: 7, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 997, column: 7)
!4427 = !DILocation(line: 997, column: 51, scope: !4426)
!4428 = !DILocation(line: 997, column: 7, scope: !4393)
!4429 = !DILocation(line: 998, column: 5, scope: !4426)
!4430 = !DILocation(line: 1000, column: 39, scope: !4393)
!4431 = !DILocation(line: 1000, column: 3, scope: !4393)
!4432 = !DILocation(line: 1001, column: 14, scope: !4393)
!4433 = !DILocation(line: 1001, column: 28, scope: !4393)
!4434 = !DILocation(line: 1001, column: 3, scope: !4393)
!4435 = !DILocation(line: 1002, column: 1, scope: !4393)
!4436 = distinct !DISubprogram(name: "finish_copy", scope: !3, file: !3, line: 1284, type: !3116, scopeLine: 1285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4437)
!4437 = !{!4438}
!4438 = !DILocalVariable(name: "cp", arg: 1, scope: !4436, file: !3, line: 1284, type: !1747)
!4439 = !DILocation(line: 0, scope: !4436)
!4440 = !DILocation(line: 1286, column: 14, scope: !4436)
!4441 = !DILocation(line: 1286, column: 25, scope: !4436)
!4442 = !DILocation(line: 1286, column: 3, scope: !4436)
!4443 = !DILocation(line: 1287, column: 1, scope: !4436)
!4444 = distinct !DISubprogram(name: "rebuild_regno_allocno_maps", scope: !3, file: !3, line: 343, type: !3362, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4445)
!4445 = !{!4446, !4447, !4448, !4449, !4450, !4451, !4452}
!4446 = !DILocalVariable(name: "l", scope: !4444, file: !3, line: 345, type: !7)
!4447 = !DILocalVariable(name: "max_regno", scope: !4444, file: !3, line: 346, type: !566)
!4448 = !DILocalVariable(name: "regno", scope: !4444, file: !3, line: 346, type: !566)
!4449 = !DILocalVariable(name: "a", scope: !4444, file: !3, line: 347, type: !573)
!4450 = !DILocalVariable(name: "loop_tree_node", scope: !4444, file: !3, line: 348, type: !1713)
!4451 = !DILocalVariable(name: "loop", scope: !4444, file: !3, line: 349, type: !1025)
!4452 = !DILocalVariable(name: "ai", scope: !4444, file: !3, line: 350, type: !3548)
!4453 = !DILocation(line: 347, column: 3, scope: !4444)
!4454 = !DILocation(line: 349, column: 3, scope: !4444)
!4455 = !DILocation(line: 350, column: 3, scope: !4444)
!4456 = !DILocation(line: 352, column: 15, scope: !4444)
!4457 = !DILocation(line: 0, scope: !4444)
!4458 = !DILocation(line: 0, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 355, column: 7)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 354, column: 9)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 353, column: 3)
!4462 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 353, column: 3)
!4463 = !DILocation(line: 353, column: 8, scope: !4462)
!4464 = !DILocation(line: 0, scope: !4462)
!4465 = !DILocation(line: 353, column: 15, scope: !4461)
!4466 = !DILocation(line: 353, column: 3, scope: !4462)
!4467 = !DILocation(line: 354, column: 9, scope: !4460)
!4468 = !DILocation(line: 354, column: 27, scope: !4460)
!4469 = !DILocation(line: 354, column: 45, scope: !4460)
!4470 = !DILocation(line: 354, column: 9, scope: !4461)
!4471 = !DILocation(line: 356, column: 2, scope: !4459)
!4472 = !DILocation(line: 358, column: 24, scope: !4459)
!4473 = !DILocation(line: 357, column: 2, scope: !4459)
!4474 = !DILocation(line: 357, column: 20, scope: !4459)
!4475 = !DILocation(line: 358, column: 4, scope: !4459)
!4476 = !DILocation(line: 360, column: 10, scope: !4459)
!4477 = !DILocation(line: 360, column: 28, scope: !4459)
!4478 = !DILocation(line: 360, column: 2, scope: !4459)
!4479 = !DILocation(line: 362, column: 7, scope: !4459)
!4480 = !DILocation(line: 353, column: 65, scope: !4461)
!4481 = !DILocation(line: 353, column: 3, scope: !4461)
!4482 = distinct !{!4482, !4466, !4483}
!4483 = !DILocation(line: 362, column: 7, scope: !4462)
!4484 = !DILocation(line: 363, column: 13, scope: !4444)
!4485 = !DILocation(line: 363, column: 3, scope: !4444)
!4486 = !DILocation(line: 365, column: 25, scope: !4444)
!4487 = !DILocation(line: 365, column: 5, scope: !4444)
!4488 = !DILocation(line: 366, column: 3, scope: !4444)
!4489 = !DILocation(line: 367, column: 3, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 367, column: 3)
!4491 = !DILocation(line: 0, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 376, column: 11)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 368, column: 5)
!4494 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 367, column: 3)
!4495 = !DILocation(line: 367, column: 3, scope: !4494)
!4496 = !DILocation(line: 369, column: 11, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 369, column: 11)
!4498 = !DILocation(line: 369, column: 34, scope: !4497)
!4499 = !DILocation(line: 369, column: 11, scope: !4493)
!4500 = !DILocation(line: 372, column: 15, scope: !4493)
!4501 = !DILocation(line: 373, column: 24, scope: !4493)
!4502 = !DILocation(line: 374, column: 40, scope: !4493)
!4503 = !DILocation(line: 374, column: 7, scope: !4493)
!4504 = !DILocation(line: 374, column: 38, scope: !4493)
!4505 = !DILocation(line: 375, column: 38, scope: !4493)
!4506 = !DILocation(line: 375, column: 36, scope: !4493)
!4507 = !DILocation(line: 376, column: 27, scope: !4492)
!4508 = !DILocation(line: 376, column: 11, scope: !4492)
!4509 = !DILocation(line: 376, column: 52, scope: !4492)
!4510 = !DILocation(line: 376, column: 11, scope: !4493)
!4511 = !DILocation(line: 379, column: 45, scope: !4492)
!4512 = !DILocation(line: 379, column: 43, scope: !4492)
!4513 = !DILocation(line: 379, column: 2, scope: !4492)
!4514 = distinct !{!4514, !4489, !4515}
!4515 = !DILocation(line: 380, column: 5, scope: !4490)
!4516 = !DILocation(line: 381, column: 1, scope: !4444)
!4517 = distinct !DISubprogram(name: "ira_build", scope: !3, file: !3, line: 2780, type: !4518, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4520)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!565, !565}
!4520 = !{!4521, !4522, !4525, !4526, !4529, !4530, !4531, !4532}
!4521 = !DILocalVariable(name: "loops_p", arg: 1, scope: !4517, file: !3, line: 2780, type: !565)
!4522 = !DILocalVariable(name: "a", scope: !4523, file: !3, line: 2811, type: !573)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 2810, column: 5)
!4524 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 2809, column: 7)
!4525 = !DILocalVariable(name: "ai", scope: !4523, file: !3, line: 2812, type: !3548)
!4526 = !DILocalVariable(name: "n", scope: !4527, file: !3, line: 2836, type: !566)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 2835, column: 5)
!4528 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 2834, column: 7)
!4529 = !DILocalVariable(name: "nr", scope: !4527, file: !3, line: 2836, type: !566)
!4530 = !DILocalVariable(name: "a", scope: !4527, file: !3, line: 2837, type: !573)
!4531 = !DILocalVariable(name: "r", scope: !4527, file: !3, line: 2838, type: !1767)
!4532 = !DILocalVariable(name: "ai", scope: !4527, file: !3, line: 2839, type: !3548)
!4533 = !DILocation(line: 0, scope: !4517)
!4534 = !DILocation(line: 2782, column: 3, scope: !4517)
!4535 = !DILocation(line: 2784, column: 3, scope: !4517)
!4536 = !DILocation(line: 2785, column: 3, scope: !4517)
!4537 = !DILocation(line: 2786, column: 3, scope: !4517)
!4538 = !DILocation(line: 2787, column: 3, scope: !4517)
!4539 = !DILocation(line: 2788, column: 3, scope: !4517)
!4540 = !DILocation(line: 2789, column: 3, scope: !4517)
!4541 = !DILocation(line: 2790, column: 3, scope: !4517)
!4542 = !DILocation(line: 2791, column: 3, scope: !4517)
!4543 = !DILocation(line: 2792, column: 3, scope: !4517)
!4544 = !DILocation(line: 2793, column: 3, scope: !4517)
!4545 = !DILocation(line: 2794, column: 3, scope: !4517)
!4546 = !DILocation(line: 2795, column: 13, scope: !4517)
!4547 = !DILocation(line: 2796, column: 7, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 2796, column: 7)
!4549 = !DILocation(line: 2796, column: 7, scope: !4517)
!4550 = !DILocation(line: 2798, column: 7, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 2797, column: 5)
!4552 = !DILocation(line: 2799, column: 7, scope: !4551)
!4553 = !DILocation(line: 2800, column: 5, scope: !4551)
!4554 = !DILocation(line: 2801, column: 3, scope: !4517)
!4555 = !DILocation(line: 2805, column: 3, scope: !4517)
!4556 = !DILocation(line: 2806, column: 3, scope: !4517)
!4557 = !DILocation(line: 2807, column: 3, scope: !4517)
!4558 = !DILocation(line: 2808, column: 3, scope: !4517)
!4559 = !DILocation(line: 2809, column: 9, scope: !4524)
!4560 = !DILocation(line: 2809, column: 7, scope: !4517)
!4561 = !DILocation(line: 2811, column: 7, scope: !4523)
!4562 = !DILocation(line: 2812, column: 7, scope: !4523)
!4563 = !DILocation(line: 2815, column: 11, scope: !4523)
!4564 = !DILocation(line: 2817, column: 4, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 2816, column: 2)
!4566 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 2815, column: 11)
!4567 = !DILocation(line: 2819, column: 2, scope: !4565)
!4568 = !DILocation(line: 0, scope: !4523)
!4569 = !DILocation(line: 2823, column: 7, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 2823, column: 7)
!4571 = !DILocation(line: 2823, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 2823, column: 7)
!4573 = !DILocation(line: 2824, column: 6, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 2824, column: 6)
!4575 = !DILocation(line: 2824, column: 36, scope: !4574)
!4576 = !DILocation(line: 2824, column: 6, scope: !4572)
!4577 = !DILocation(line: 2826, column: 6, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 2825, column: 4)
!4579 = !DILocation(line: 2828, column: 6, scope: !4578)
!4580 = !DILocation(line: 2830, column: 4, scope: !4578)
!4581 = distinct !{!4581, !4569, !4582}
!4582 = !DILocation(line: 2830, column: 4, scope: !4570)
!4583 = !DILocation(line: 2831, column: 5, scope: !4524)
!4584 = !DILocation(line: 2831, column: 5, scope: !4523)
!4585 = !DILocation(line: 2832, column: 7, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 2832, column: 7)
!4587 = !DILocation(line: 2832, column: 33, scope: !4586)
!4588 = !DILocation(line: 2832, column: 40, scope: !4586)
!4589 = !DILocation(line: 2832, column: 54, scope: !4586)
!4590 = !DILocation(line: 2832, column: 37, scope: !4586)
!4591 = !DILocation(line: 2833, column: 5, scope: !4586)
!4592 = !DILocation(line: 2834, column: 7, scope: !4528)
!4593 = !DILocation(line: 2834, column: 40, scope: !4528)
!4594 = !DILocation(line: 2834, column: 33, scope: !4528)
!4595 = !DILocation(line: 2834, column: 54, scope: !4528)
!4596 = !DILocation(line: 2834, column: 37, scope: !4528)
!4597 = !DILocation(line: 2837, column: 7, scope: !4527)
!4598 = !DILocation(line: 2839, column: 7, scope: !4527)
!4599 = !DILocation(line: 0, scope: !4527)
!4600 = !DILocation(line: 2842, column: 7, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 2842, column: 7)
!4602 = !DILocation(line: 2842, column: 7, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 2842, column: 7)
!4604 = !DILocation(line: 2843, column: 7, scope: !4603)
!4605 = !DILocation(line: 2843, column: 4, scope: !4603)
!4606 = distinct !{!4606, !4600, !4607}
!4607 = !DILocation(line: 2843, column: 7, scope: !4601)
!4608 = !DILocation(line: 2845, column: 7, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 2845, column: 7)
!4610 = !DILocation(line: 2844, column: 10, scope: !4527)
!4611 = !DILocation(line: 2845, column: 7, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 2845, column: 7)
!4613 = !DILocation(line: 2846, column: 11, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 2846, column: 2)
!4615 = !DILocation(line: 2846, column: 7, scope: !4614)
!4616 = !DILocation(line: 0, scope: !4614)
!4617 = !DILocation(line: 2846, column: 38, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 2846, column: 2)
!4619 = !DILocation(line: 2846, column: 2, scope: !4614)
!4620 = distinct !{!4620, !4608, !4621}
!4621 = !DILocation(line: 2847, column: 6, scope: !4609)
!4622 = !DILocation(line: 2847, column: 6, scope: !4618)
!4623 = !DILocation(line: 2846, column: 54, scope: !4618)
!4624 = !DILocation(line: 2846, column: 2, scope: !4618)
!4625 = distinct !{!4625, !4619, !4626}
!4626 = !DILocation(line: 2847, column: 6, scope: !4614)
!4627 = !DILocation(line: 2848, column: 16, scope: !4527)
!4628 = !DILocation(line: 2849, column: 9, scope: !4527)
!4629 = !DILocation(line: 2849, column: 48, scope: !4527)
!4630 = !DILocation(line: 2850, column: 9, scope: !4527)
!4631 = !DILocation(line: 2848, column: 7, scope: !4527)
!4632 = !DILocation(line: 2851, column: 16, scope: !4527)
!4633 = !DILocation(line: 2853, column: 9, scope: !4527)
!4634 = !DILocation(line: 2853, column: 27, scope: !4527)
!4635 = !DILocation(line: 2851, column: 7, scope: !4527)
!4636 = !DILocation(line: 2854, column: 5, scope: !4528)
!4637 = !DILocation(line: 2854, column: 5, scope: !4527)
!4638 = !DILocation(line: 2855, column: 3, scope: !4517)
!4639 = distinct !DISubprogram(name: "initiate_cost_vectors", scope: !3, file: !3, line: 1311, type: !3362, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4640)
!4640 = !{!4641, !4642}
!4641 = !DILocalVariable(name: "i", scope: !4639, file: !3, line: 1313, type: !566)
!4642 = !DILocalVariable(name: "cover_class", scope: !4639, file: !3, line: 1314, type: !390)
!4643 = !DILocation(line: 0, scope: !4639)
!4644 = !DILocation(line: 1316, column: 8, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 1316, column: 3)
!4646 = !DILocation(line: 0, scope: !4645)
!4647 = !DILocation(line: 1316, column: 19, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1316, column: 3)
!4649 = !DILocation(line: 1316, column: 17, scope: !4648)
!4650 = !DILocation(line: 1316, column: 3, scope: !4645)
!4651 = !DILocation(line: 1318, column: 21, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 1317, column: 5)
!4653 = !DILocation(line: 1322, column: 11, scope: !4652)
!4654 = !DILocation(line: 1322, column: 9, scope: !4652)
!4655 = !DILocation(line: 1320, column: 4, scope: !4652)
!4656 = !DILocation(line: 1319, column: 7, scope: !4652)
!4657 = !DILocation(line: 1320, column: 2, scope: !4652)
!4658 = !DILocation(line: 1316, column: 46, scope: !4648)
!4659 = !DILocation(line: 1316, column: 3, scope: !4648)
!4660 = distinct !{!4660, !4650, !4661}
!4661 = !DILocation(line: 1324, column: 5, scope: !4645)
!4662 = !DILocation(line: 1325, column: 1, scope: !4639)
!4663 = distinct !DISubprogram(name: "initiate_allocnos", scope: !3, file: !3, line: 398, type: !3362, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!4664 = !DILocation(line: 401, column: 7, scope: !4663)
!4665 = !DILocation(line: 401, column: 5, scope: !4663)
!4666 = !DILocation(line: 404, column: 7, scope: !4663)
!4667 = !DILocation(line: 404, column: 5, scope: !4663)
!4668 = !DILocation(line: 405, column: 17, scope: !4663)
!4669 = !DILocation(line: 405, column: 15, scope: !4663)
!4670 = !DILocation(line: 406, column: 16, scope: !4663)
!4671 = !DILocation(line: 407, column: 20, scope: !4663)
!4672 = !DILocation(line: 409, column: 7, scope: !4663)
!4673 = !DILocation(line: 409, column: 5, scope: !4663)
!4674 = !DILocation(line: 410, column: 31, scope: !4663)
!4675 = !DILocation(line: 412, column: 39, scope: !4663)
!4676 = !DILocation(line: 412, column: 54, scope: !4663)
!4677 = !DILocation(line: 412, column: 25, scope: !4663)
!4678 = !DILocation(line: 412, column: 5, scope: !4663)
!4679 = !DILocation(line: 413, column: 37, scope: !4663)
!4680 = !DILocation(line: 413, column: 52, scope: !4663)
!4681 = !DILocation(line: 413, column: 3, scope: !4663)
!4682 = !DILocation(line: 414, column: 1, scope: !4663)
!4683 = distinct !DISubprogram(name: "initiate_copies", scope: !3, file: !3, line: 1031, type: !3362, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!4684 = !DILocation(line: 1034, column: 7, scope: !4683)
!4685 = !DILocation(line: 1034, column: 5, scope: !4683)
!4686 = !DILocation(line: 1035, column: 14, scope: !4683)
!4687 = !DILocation(line: 1035, column: 12, scope: !4683)
!4688 = !DILocation(line: 1036, column: 14, scope: !4683)
!4689 = !DILocation(line: 1037, column: 18, scope: !4683)
!4690 = !DILocation(line: 1038, column: 1, scope: !4683)
!4691 = distinct !DISubprogram(name: "create_loop_tree_nodes", scope: !3, file: !3, line: 97, type: !4692, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4694)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{null, !565}
!4694 = !{!4695, !4696, !4697, !4698, !4699, !4700, !4707, !4708, !4714}
!4695 = !DILocalVariable(name: "loops_p", arg: 1, scope: !4691, file: !3, line: 97, type: !565)
!4696 = !DILocalVariable(name: "i", scope: !4691, file: !3, line: 99, type: !7)
!4697 = !DILocalVariable(name: "j", scope: !4691, file: !3, line: 99, type: !7)
!4698 = !DILocalVariable(name: "max_regno", scope: !4691, file: !3, line: 100, type: !566)
!4699 = !DILocalVariable(name: "skip_p", scope: !4691, file: !3, line: 101, type: !565)
!4700 = !DILocalVariable(name: "ei", scope: !4691, file: !3, line: 102, type: !4701)
!4701 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !148, line: 682, baseType: !4702)
!4702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !148, line: 679, size: 128, elements: !4703)
!4703 = !{!4704, !4705}
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4702, file: !148, line: 680, baseType: !7, size: 32)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !4702, file: !148, line: 681, baseType: !4706, size: 64, offset: 64)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!4707 = !DILocalVariable(name: "e", scope: !4691, file: !3, line: 103, type: !973)
!4708 = !DILocalVariable(name: "edges", scope: !4691, file: !3, line: 104, type: !4709)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !148, line: 152, baseType: !4711)
!4711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !148, line: 152, size: 128, elements: !4712)
!4712 = !{!4713}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4711, file: !148, line: 152, baseType: !966, size: 128)
!4714 = !DILocalVariable(name: "loop", scope: !4691, file: !3, line: 105, type: !1025)
!4715 = !DILocation(line: 0, scope: !4691)
!4716 = !DILocation(line: 102, column: 3, scope: !4691)
!4717 = !DILocation(line: 103, column: 3, scope: !4691)
!4718 = !DILocation(line: 104, column: 3, scope: !4691)
!4719 = !DILocation(line: 105, column: 3, scope: !4691)
!4720 = !DILocation(line: 109, column: 59, scope: !4691)
!4721 = !DILocation(line: 109, column: 57, scope: !4691)
!4722 = !DILocation(line: 109, column: 8, scope: !4691)
!4723 = !DILocation(line: 108, column: 5, scope: !4691)
!4724 = !DILocation(line: 110, column: 36, scope: !4691)
!4725 = !DILocation(line: 110, column: 34, scope: !4691)
!4726 = !DILocation(line: 111, column: 8, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 111, column: 3)
!4728 = !DILocation(line: 111, column: 34, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 111, column: 3)
!4730 = !DILocation(line: 111, column: 17, scope: !4729)
!4731 = !DILocation(line: 111, column: 3, scope: !4727)
!4732 = !DILocation(line: 113, column: 7, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 112, column: 5)
!4734 = !DILocation(line: 113, column: 23, scope: !4733)
!4735 = !DILocation(line: 113, column: 41, scope: !4733)
!4736 = !DILocation(line: 114, column: 15, scope: !4733)
!4737 = !DILocation(line: 114, column: 7, scope: !4733)
!4738 = !DILocation(line: 116, column: 7, scope: !4733)
!4739 = !DILocation(line: 116, column: 23, scope: !4733)
!4740 = !DILocation(line: 116, column: 36, scope: !4733)
!4741 = !DILocation(line: 117, column: 7, scope: !4733)
!4742 = !DILocation(line: 117, column: 23, scope: !4733)
!4743 = !DILocation(line: 117, column: 39, scope: !4733)
!4744 = !DILocation(line: 118, column: 7, scope: !4733)
!4745 = !DILocation(line: 118, column: 23, scope: !4733)
!4746 = !DILocation(line: 118, column: 39, scope: !4733)
!4747 = !DILocation(line: 119, column: 7, scope: !4733)
!4748 = !DILocation(line: 119, column: 23, scope: !4733)
!4749 = !DILocation(line: 119, column: 36, scope: !4733)
!4750 = !DILocation(line: 0, scope: !4729)
!4751 = !DILocation(line: 111, column: 53, scope: !4729)
!4752 = !DILocation(line: 111, column: 3, scope: !4729)
!4753 = distinct !{!4753, !4731, !4754}
!4754 = !DILocation(line: 120, column: 5, scope: !4727)
!4755 = !DILocation(line: 123, column: 9, scope: !4691)
!4756 = !DILocation(line: 123, column: 7, scope: !4691)
!4757 = !DILocation(line: 122, column: 7, scope: !4691)
!4758 = !DILocation(line: 121, column: 18, scope: !4691)
!4759 = !DILocation(line: 124, column: 15, scope: !4691)
!4760 = !DILocation(line: 0, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 130, column: 8)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 128, column: 2)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 127, column: 11)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 126, column: 5)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 125, column: 3)
!4766 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 125, column: 3)
!4767 = !DILocation(line: 0, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 133, column: 4)
!4769 = !DILocation(line: 0, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 133, column: 4)
!4771 = !DILocation(line: 0, scope: !4764)
!4772 = !DILocation(line: 125, column: 8, scope: !4766)
!4773 = !DILocation(line: 0, scope: !4766)
!4774 = !DILocation(line: 125, column: 15, scope: !4765)
!4775 = !DILocation(line: 125, column: 3, scope: !4766)
!4776 = !DILocation(line: 127, column: 11, scope: !4763)
!4777 = !DILocation(line: 127, column: 29, scope: !4763)
!4778 = !DILocation(line: 127, column: 16, scope: !4763)
!4779 = !DILocation(line: 127, column: 11, scope: !4764)
!4780 = !DILocation(line: 153, column: 7, scope: !4764)
!4781 = !DILocation(line: 129, column: 4, scope: !4762)
!4782 = !DILocation(line: 129, column: 22, scope: !4762)
!4783 = !DILocation(line: 129, column: 40, scope: !4762)
!4784 = !DILocation(line: 130, column: 8, scope: !4762)
!4785 = !DILocation(line: 133, column: 4, scope: !4768)
!4786 = !DILocation(line: 133, column: 4, scope: !4770)
!4787 = !DILocation(line: 134, column: 10, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 134, column: 10)
!4789 = !DILocation(line: 134, column: 13, scope: !4788)
!4790 = !DILocation(line: 134, column: 20, scope: !4788)
!4791 = !DILocation(line: 134, column: 26, scope: !4788)
!4792 = !DILocation(line: 134, column: 17, scope: !4788)
!4793 = !DILocation(line: 135, column: 3, scope: !4788)
!4794 = !DILocation(line: 135, column: 10, scope: !4788)
!4795 = !DILocation(line: 135, column: 16, scope: !4788)
!4796 = !DILocation(line: 135, column: 33, scope: !4788)
!4797 = !DILocation(line: 135, column: 36, scope: !4788)
!4798 = !DILocation(line: 134, column: 10, scope: !4770)
!4799 = distinct !{!4799, !4785, !4800}
!4800 = !DILocation(line: 139, column: 8, scope: !4768)
!4801 = !DILocation(line: 140, column: 8, scope: !4762)
!4802 = !DILocation(line: 142, column: 33, scope: !4762)
!4803 = !DILocation(line: 142, column: 12, scope: !4762)
!4804 = !DILocation(line: 142, column: 10, scope: !4762)
!4805 = !DILocation(line: 143, column: 9, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 143, column: 4)
!4807 = !DILocation(line: 143, column: 16, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 143, column: 4)
!4809 = !DILocation(line: 0, scope: !4806)
!4810 = !DILocation(line: 143, column: 4, scope: !4806)
!4811 = !DILocation(line: 144, column: 11, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 144, column: 10)
!4813 = !DILocation(line: 144, column: 14, scope: !4812)
!4814 = !DILocation(line: 144, column: 20, scope: !4812)
!4815 = !DILocation(line: 144, column: 37, scope: !4812)
!4816 = !DILocation(line: 144, column: 40, scope: !4812)
!4817 = !DILocation(line: 144, column: 10, scope: !4808)
!4818 = !DILocation(line: 143, column: 50, scope: !4808)
!4819 = !DILocation(line: 143, column: 4, scope: !4808)
!4820 = distinct !{!4820, !4810, !4821}
!4821 = !DILocation(line: 148, column: 8, scope: !4806)
!4822 = !DILocation(line: 149, column: 4, scope: !4762)
!4823 = !DILocation(line: 150, column: 8, scope: !4762)
!4824 = !DILocation(line: 154, column: 22, scope: !4764)
!4825 = !DILocation(line: 153, column: 25, scope: !4764)
!4826 = !DILocation(line: 154, column: 2, scope: !4764)
!4827 = !DILocation(line: 155, column: 15, scope: !4764)
!4828 = !DILocation(line: 155, column: 33, scope: !4764)
!4829 = !DILocation(line: 155, column: 7, scope: !4764)
!4830 = !DILocation(line: 157, column: 15, scope: !4764)
!4831 = !DILocation(line: 157, column: 7, scope: !4764)
!4832 = !DILocation(line: 159, column: 40, scope: !4764)
!4833 = !DILocation(line: 159, column: 7, scope: !4764)
!4834 = !DILocation(line: 159, column: 25, scope: !4764)
!4835 = !DILocation(line: 159, column: 38, scope: !4764)
!4836 = !DILocation(line: 160, column: 43, scope: !4764)
!4837 = !DILocation(line: 160, column: 7, scope: !4764)
!4838 = !DILocation(line: 160, column: 25, scope: !4764)
!4839 = !DILocation(line: 160, column: 41, scope: !4764)
!4840 = !DILocation(line: 161, column: 43, scope: !4764)
!4841 = !DILocation(line: 161, column: 7, scope: !4764)
!4842 = !DILocation(line: 161, column: 25, scope: !4764)
!4843 = !DILocation(line: 161, column: 41, scope: !4764)
!4844 = !DILocation(line: 162, column: 40, scope: !4764)
!4845 = !DILocation(line: 162, column: 7, scope: !4764)
!4846 = !DILocation(line: 162, column: 25, scope: !4764)
!4847 = !DILocation(line: 162, column: 38, scope: !4764)
!4848 = !DILocation(line: 163, column: 5, scope: !4764)
!4849 = !DILocation(line: 125, column: 65, scope: !4765)
!4850 = !DILocation(line: 125, column: 3, scope: !4765)
!4851 = distinct !{!4851, !4775, !4852}
!4852 = !DILocation(line: 163, column: 5, scope: !4766)
!4853 = !DILocation(line: 164, column: 1, scope: !4691)
!4854 = distinct !DISubprogram(name: "form_loop_tree", scope: !3, file: !3, line: 296, type: !3362, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4855)
!4855 = !{!4856, !4857, !4858, !4859, !4860, !4861}
!4856 = !DILocalVariable(name: "i", scope: !4854, file: !3, line: 298, type: !7)
!4857 = !DILocalVariable(name: "bb", scope: !4854, file: !3, line: 299, type: !956)
!4858 = !DILocalVariable(name: "parent", scope: !4854, file: !3, line: 300, type: !998)
!4859 = !DILocalVariable(name: "bb_node", scope: !4854, file: !3, line: 301, type: !1713)
!4860 = !DILocalVariable(name: "loop_node", scope: !4854, file: !3, line: 301, type: !1713)
!4861 = !DILocalVariable(name: "loop", scope: !4854, file: !3, line: 302, type: !1025)
!4862 = !DILocation(line: 302, column: 3, scope: !4854)
!4863 = !DILocation(line: 0, scope: !4854)
!4864 = !DILocation(line: 307, column: 8, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 307, column: 3)
!4866 = !DILocation(line: 0, scope: !4865)
!4867 = !DILocation(line: 307, column: 15, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 307, column: 3)
!4869 = !DILocation(line: 307, column: 3, scope: !4865)
!4870 = !DILocation(line: 308, column: 10, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 308, column: 10)
!4872 = !DILocation(line: 308, column: 28, scope: !4871)
!4873 = !DILocation(line: 308, column: 46, scope: !4871)
!4874 = !DILocation(line: 308, column: 10, scope: !4868)
!4875 = !DILocation(line: 310, column: 21, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 309, column: 8)
!4877 = !DILocation(line: 310, column: 30, scope: !4876)
!4878 = !DILocation(line: 311, column: 3, scope: !4876)
!4879 = !DILocation(line: 311, column: 21, scope: !4876)
!4880 = !DILocation(line: 311, column: 30, scope: !4876)
!4881 = !DILocation(line: 312, column: 8, scope: !4876)
!4882 = !DILocation(line: 307, column: 65, scope: !4868)
!4883 = !DILocation(line: 307, column: 3, scope: !4868)
!4884 = distinct !{!4884, !4869, !4885}
!4885 = !DILocation(line: 312, column: 8, scope: !4865)
!4886 = !DILocation(line: 313, column: 3, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 313, column: 3)
!4888 = !DILocation(line: 313, column: 3, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 313, column: 3)
!4890 = !DILocation(line: 0, scope: !4887)
!4891 = !DILocation(line: 315, column: 18, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 314, column: 5)
!4893 = !DILocation(line: 315, column: 35, scope: !4892)
!4894 = !DILocation(line: 316, column: 16, scope: !4892)
!4895 = !DILocation(line: 316, column: 19, scope: !4892)
!4896 = !DILocation(line: 317, column: 16, scope: !4892)
!4897 = !DILocation(line: 317, column: 21, scope: !4892)
!4898 = !DILocation(line: 318, column: 16, scope: !4892)
!4899 = !DILocation(line: 318, column: 25, scope: !4892)
!4900 = !DILocation(line: 319, column: 16, scope: !4892)
!4901 = !DILocation(line: 319, column: 25, scope: !4892)
!4902 = !DILocation(line: 320, column: 16, scope: !4892)
!4903 = !DILocation(line: 320, column: 29, scope: !4892)
!4904 = !DILocation(line: 321, column: 16, scope: !4892)
!4905 = !DILocation(line: 321, column: 21, scope: !4892)
!4906 = !DILocation(line: 322, column: 25, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 322, column: 7)
!4908 = !DILocation(line: 322, column: 12, scope: !4907)
!4909 = !DILocation(line: 0, scope: !4907)
!4910 = !DILocation(line: 323, column: 12, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 322, column: 7)
!4912 = !DILocation(line: 322, column: 7, scope: !4907)
!4913 = !DILocation(line: 325, column: 6, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 325, column: 6)
!4915 = !DILocation(line: 325, column: 29, scope: !4914)
!4916 = !DILocation(line: 325, column: 34, scope: !4914)
!4917 = !DILocation(line: 325, column: 52, scope: !4914)
!4918 = !DILocation(line: 325, column: 6, scope: !4911)
!4919 = !DILocation(line: 324, column: 14, scope: !4911)
!4920 = !DILocation(line: 322, column: 7, scope: !4911)
!4921 = distinct !{!4921, !4912, !4922}
!4922 = !DILocation(line: 326, column: 4, scope: !4907)
!4923 = !DILocation(line: 327, column: 7, scope: !4892)
!4924 = !DILocation(line: 328, column: 20, scope: !4892)
!4925 = !DILocation(line: 328, column: 43, scope: !4892)
!4926 = !DILocation(line: 329, column: 34, scope: !4892)
!4927 = !DILocation(line: 329, column: 21, scope: !4892)
!4928 = !DILocation(line: 330, column: 16, scope: !4892)
!4929 = !DILocation(line: 330, column: 23, scope: !4892)
!4930 = !DILocation(line: 331, column: 27, scope: !4892)
!4931 = !DILocation(line: 0, scope: !4889)
!4932 = distinct !{!4932, !4886, !4933}
!4933 = !DILocation(line: 332, column: 5, scope: !4887)
!4934 = !DILocation(line: 333, column: 24, scope: !4854)
!4935 = !DILocation(line: 333, column: 22, scope: !4854)
!4936 = !DILocation(line: 334, column: 26, scope: !4854)
!4937 = !DILocation(line: 334, column: 24, scope: !4854)
!4938 = !DILocation(line: 336, column: 1, scope: !4854)
!4939 = distinct !DISubprogram(name: "create_allocnos", scope: !3, file: !3, line: 1633, type: !3362, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!4940 = !DILocation(line: 1637, column: 33, scope: !4939)
!4941 = !DILocation(line: 1637, column: 3, scope: !4939)
!4942 = !DILocation(line: 1639, column: 7, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4939, file: !3, line: 1639, column: 7)
!4944 = !DILocation(line: 1639, column: 7, scope: !4939)
!4945 = !DILocation(line: 1640, column: 36, scope: !4943)
!4946 = !DILocation(line: 1640, column: 5, scope: !4943)
!4947 = !DILocation(line: 1642, column: 1, scope: !4939)
!4948 = distinct !DISubprogram(name: "remove_unnecessary_regions", scope: !3, file: !3, line: 2086, type: !4692, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4949)
!4949 = !{!4950}
!4950 = !DILocalVariable(name: "all_p", arg: 1, scope: !4948, file: !3, line: 2086, type: !565)
!4951 = !DILocation(line: 0, scope: !4948)
!4952 = !DILocation(line: 2088, column: 7, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 2088, column: 7)
!4954 = !DILocation(line: 2088, column: 7, scope: !4948)
!4955 = !DILocation(line: 2089, column: 5, scope: !4953)
!4956 = !DILocation(line: 2091, column: 5, scope: !4953)
!4957 = !DILocation(line: 2093, column: 7, scope: !4948)
!4958 = !DILocation(line: 2093, column: 5, scope: !4948)
!4959 = !DILocation(line: 2096, column: 7, scope: !4948)
!4960 = !DILocation(line: 2096, column: 5, scope: !4948)
!4961 = !DILocation(line: 2098, column: 48, scope: !4948)
!4962 = !DILocation(line: 2098, column: 3, scope: !4948)
!4963 = !DILocation(line: 2099, column: 3, scope: !4948)
!4964 = !DILocation(line: 2100, column: 7, scope: !4948)
!4965 = !DILocation(line: 2101, column: 5, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 2100, column: 7)
!4967 = !DILocation(line: 2103, column: 5, scope: !4966)
!4968 = !DILocation(line: 2104, column: 3, scope: !4948)
!4969 = !DILocation(line: 2104, column: 10, scope: !4948)
!4970 = !DILocation(line: 2104, column: 62, scope: !4948)
!4971 = !DILocation(line: 2105, column: 28, scope: !4948)
!4972 = !DILocation(line: 2105, column: 5, scope: !4948)
!4973 = distinct !{!4973, !4968, !4974}
!4974 = !DILocation(line: 2105, column: 76, scope: !4948)
!4975 = !DILocation(line: 2106, column: 3, scope: !4948)
!4976 = !DILocation(line: 2107, column: 1, scope: !4948)
!4977 = distinct !DISubprogram(name: "update_bad_spill_attribute", scope: !3, file: !3, line: 2125, type: !3362, scopeLine: 2126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4978)
!4978 = !{!4979, !4980, !4981, !4982, !4983, !4984}
!4979 = !DILocalVariable(name: "i", scope: !4977, file: !3, line: 2127, type: !566)
!4980 = !DILocalVariable(name: "a", scope: !4977, file: !3, line: 2128, type: !573)
!4981 = !DILocalVariable(name: "ai", scope: !4977, file: !3, line: 2129, type: !3548)
!4982 = !DILocalVariable(name: "r", scope: !4977, file: !3, line: 2130, type: !1767)
!4983 = !DILocalVariable(name: "cover_class", scope: !4977, file: !3, line: 2131, type: !390)
!4984 = !DILocalVariable(name: "dead_points", scope: !4977, file: !3, line: 2132, type: !4985)
!4985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4986, size: 6912, elements: !1731)
!4986 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !639, line: 84, baseType: !638)
!4987 = !DILocation(line: 2128, column: 3, scope: !4977)
!4988 = !DILocation(line: 2129, column: 3, scope: !4977)
!4989 = !DILocation(line: 2132, column: 3, scope: !4977)
!4990 = !DILocation(line: 2132, column: 15, scope: !4977)
!4991 = !DILocation(line: 0, scope: !4977)
!4992 = !DILocation(line: 2134, column: 8, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2134, column: 3)
!4994 = !DILocation(line: 0, scope: !4993)
!4995 = !DILocation(line: 2134, column: 19, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 2134, column: 3)
!4997 = !DILocation(line: 2134, column: 17, scope: !4996)
!4998 = !DILocation(line: 2134, column: 3, scope: !4993)
!4999 = !DILocation(line: 2136, column: 21, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 2135, column: 5)
!5001 = !DILocation(line: 2137, column: 7, scope: !5000)
!5002 = !DILocation(line: 2134, column: 46, scope: !4996)
!5003 = !DILocation(line: 2134, column: 3, scope: !4996)
!5004 = distinct !{!5004, !4998, !5005}
!5005 = !DILocation(line: 2138, column: 5, scope: !4993)
!5006 = !DILocation(line: 2139, column: 3, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2139, column: 3)
!5008 = !DILocation(line: 2139, column: 3, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 2139, column: 3)
!5010 = !DILocation(line: 2141, column: 21, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 2140, column: 5)
!5012 = !DILocation(line: 2142, column: 23, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 2142, column: 11)
!5014 = !DILocation(line: 2142, column: 11, scope: !5011)
!5015 = distinct !{!5015, !5006, !5016}
!5016 = !DILocation(line: 2146, column: 5, scope: !5007)
!5017 = !DILocation(line: 2144, column: 16, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 2144, column: 7)
!5019 = !DILocation(line: 0, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 2144, column: 7)
!5021 = !DILocation(line: 2144, column: 12, scope: !5018)
!5022 = !DILocation(line: 0, scope: !5018)
!5023 = !DILocation(line: 2144, column: 43, scope: !5020)
!5024 = !DILocation(line: 2144, column: 7, scope: !5018)
!5025 = !DILocation(line: 2145, column: 48, scope: !5020)
!5026 = !DILocation(line: 2145, column: 2, scope: !5020)
!5027 = !DILocation(line: 2144, column: 59, scope: !5020)
!5028 = !DILocation(line: 2144, column: 7, scope: !5020)
!5029 = distinct !{!5029, !5024, !5030}
!5030 = !DILocation(line: 2145, column: 54, scope: !5018)
!5031 = !DILocation(line: 2147, column: 3, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2147, column: 3)
!5033 = !DILocation(line: 2147, column: 3, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 2147, column: 3)
!5035 = !DILocation(line: 2165, column: 3, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2165, column: 3)
!5037 = !DILocation(line: 2149, column: 21, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 2148, column: 5)
!5039 = !DILocation(line: 2150, column: 23, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2150, column: 11)
!5041 = !DILocation(line: 2150, column: 11, scope: !5038)
!5042 = !DILocation(line: 2152, column: 13, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2152, column: 11)
!5044 = !DILocation(line: 2152, column: 11, scope: !5038)
!5045 = !DILocation(line: 2154, column: 16, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2154, column: 7)
!5047 = !DILocation(line: 0, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 2157, column: 10)
!5049 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 2156, column: 4)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2156, column: 4)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 2155, column: 2)
!5052 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 2154, column: 7)
!5053 = !DILocation(line: 2154, column: 12, scope: !5046)
!5054 = !DILocation(line: 0, scope: !5046)
!5055 = !DILocation(line: 2154, column: 7, scope: !5046)
!5056 = !DILocation(line: 2156, column: 16, scope: !5050)
!5057 = !DILocation(line: 0, scope: !5049)
!5058 = !DILocation(line: 2156, column: 9, scope: !5050)
!5059 = !DILocation(line: 0, scope: !5050)
!5060 = !DILocation(line: 2156, column: 34, scope: !5049)
!5061 = !DILocation(line: 2156, column: 29, scope: !5049)
!5062 = !DILocation(line: 2156, column: 4, scope: !5050)
!5063 = !DILocation(line: 2157, column: 10, scope: !5048)
!5064 = !DILocation(line: 2157, column: 10, scope: !5049)
!5065 = !DILocation(line: 2159, column: 15, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2159, column: 8)
!5067 = !DILocation(line: 2156, column: 4, scope: !5049)
!5068 = distinct !{!5068, !5062, !5069}
!5069 = !DILocation(line: 2158, column: 8, scope: !5050)
!5070 = !DILocation(line: 2159, column: 10, scope: !5066)
!5071 = !DILocation(line: 2159, column: 8, scope: !5051)
!5072 = !DILocation(line: 2154, column: 59, scope: !5052)
!5073 = !DILocation(line: 2154, column: 7, scope: !5052)
!5074 = distinct !{!5074, !5055, !5075}
!5075 = !DILocation(line: 2161, column: 2, scope: !5046)
!5076 = !DILocation(line: 2163, column: 2, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2162, column: 11)
!5078 = !DILocation(line: 2163, column: 26, scope: !5077)
!5079 = distinct !{!5079, !5031, !5080}
!5080 = !DILocation(line: 2164, column: 5, scope: !5032)
!5081 = !DILocation(line: 0, scope: !5036)
!5082 = !DILocation(line: 2165, column: 19, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 2165, column: 3)
!5084 = !DILocation(line: 2165, column: 17, scope: !5083)
!5085 = !DILocation(line: 2167, column: 21, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 2166, column: 5)
!5087 = !DILocation(line: 2168, column: 22, scope: !5086)
!5088 = !DILocation(line: 2168, column: 7, scope: !5086)
!5089 = !DILocation(line: 2165, column: 46, scope: !5083)
!5090 = !DILocation(line: 2165, column: 3, scope: !5083)
!5091 = distinct !{!5091, !5035, !5092}
!5092 = !DILocation(line: 2169, column: 5, scope: !5036)
!5093 = !DILocation(line: 2170, column: 1, scope: !4977)
!5094 = distinct !DISubprogram(name: "more_one_region_p", scope: !3, file: !3, line: 169, type: !5095, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5097)
!5095 = !DISubroutineType(types: !5096)
!5096 = !{!565}
!5097 = !{!5098, !5099}
!5098 = !DILocalVariable(name: "i", scope: !5094, file: !3, line: 171, type: !7)
!5099 = !DILocalVariable(name: "loop", scope: !5094, file: !3, line: 172, type: !1025)
!5100 = !DILocation(line: 172, column: 3, scope: !5094)
!5101 = !DILocation(line: 0, scope: !5094)
!5102 = !DILocation(line: 174, column: 8, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 174, column: 3)
!5104 = !DILocation(line: 0, scope: !5103)
!5105 = !DILocation(line: 174, column: 15, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 174, column: 3)
!5107 = !DILocation(line: 174, column: 3, scope: !5103)
!5108 = !DILocation(line: 175, column: 9, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 175, column: 9)
!5110 = !DILocation(line: 175, column: 27, scope: !5109)
!5111 = !DILocation(line: 175, column: 45, scope: !5109)
!5112 = !DILocation(line: 176, column: 2, scope: !5109)
!5113 = !DILocation(line: 176, column: 5, scope: !5109)
!5114 = !DILocation(line: 176, column: 28, scope: !5109)
!5115 = !DILocation(line: 176, column: 24, scope: !5109)
!5116 = !DILocation(line: 175, column: 9, scope: !5106)
!5117 = !DILocation(line: 174, column: 65, scope: !5106)
!5118 = !DILocation(line: 174, column: 3, scope: !5106)
!5119 = distinct !{!5119, !5107, !5120}
!5120 = !DILocation(line: 177, column: 14, scope: !5103)
!5121 = !DILocation(line: 179, column: 1, scope: !5094)
!5122 = distinct !DISubprogram(name: "propagate_allocno_info", scope: !3, file: !3, line: 1579, type: !3362, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5123)
!5123 = !{!5124, !5125, !5126, !5127, !5128}
!5124 = !DILocalVariable(name: "i", scope: !5122, file: !3, line: 1581, type: !566)
!5125 = !DILocalVariable(name: "a", scope: !5122, file: !3, line: 1582, type: !573)
!5126 = !DILocalVariable(name: "parent_a", scope: !5122, file: !3, line: 1582, type: !573)
!5127 = !DILocalVariable(name: "parent", scope: !5122, file: !3, line: 1583, type: !1713)
!5128 = !DILocalVariable(name: "cover_class", scope: !5122, file: !3, line: 1584, type: !390)
!5129 = !DILocation(line: 1586, column: 7, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1586, column: 7)
!5131 = !DILocation(line: 1587, column: 7, scope: !5130)
!5132 = !DILocation(line: 1589, column: 12, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1589, column: 3)
!5134 = !DILocation(line: 0, scope: !5122)
!5135 = !DILocation(line: 1589, column: 8, scope: !5133)
!5136 = !DILocation(line: 0, scope: !5133)
!5137 = !DILocation(line: 1589, column: 34, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 1589, column: 3)
!5139 = !DILocation(line: 1589, column: 3, scope: !5133)
!5140 = !DILocation(line: 1590, column: 14, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1590, column: 5)
!5142 = !DILocation(line: 1590, column: 10, scope: !5141)
!5143 = !DILocation(line: 0, scope: !5141)
!5144 = !DILocation(line: 1591, column: 5, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 1590, column: 5)
!5146 = !DILocation(line: 1590, column: 5, scope: !5141)
!5147 = !DILocation(line: 1593, column: 21, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 1593, column: 11)
!5149 = !DILocation(line: 1593, column: 49, scope: !5148)
!5150 = !DILocation(line: 1593, column: 57, scope: !5148)
!5151 = !DILocation(line: 1594, column: 4, scope: !5148)
!5152 = !DILocation(line: 1594, column: 27, scope: !5148)
!5153 = !DILocation(line: 1594, column: 19, scope: !5148)
!5154 = !DILocation(line: 1594, column: 49, scope: !5148)
!5155 = !DILocation(line: 1597, column: 4, scope: !5148)
!5156 = !DILocation(line: 1597, column: 49, scope: !5148)
!5157 = !DILocation(line: 1598, column: 7, scope: !5148)
!5158 = !DILocation(line: 1597, column: 7, scope: !5148)
!5159 = !DILocation(line: 1593, column: 11, scope: !5145)
!5160 = !DILocation(line: 1600, column: 10, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 1600, column: 8)
!5162 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 1599, column: 2)
!5163 = !DILocation(line: 1600, column: 8, scope: !5162)
!5164 = !DILocation(line: 1601, column: 6, scope: !5161)
!5165 = !DILocation(line: 1601, column: 37, scope: !5161)
!5166 = !DILocation(line: 1602, column: 32, scope: !5162)
!5167 = !DILocation(line: 1602, column: 4, scope: !5162)
!5168 = !DILocation(line: 1602, column: 29, scope: !5162)
!5169 = !DILocation(line: 1603, column: 31, scope: !5162)
!5170 = !DILocation(line: 1603, column: 4, scope: !5162)
!5171 = !DILocation(line: 1603, column: 28, scope: !5162)
!5172 = !DILocation(line: 1604, column: 36, scope: !5162)
!5173 = !DILocation(line: 1604, column: 4, scope: !5162)
!5174 = !DILocation(line: 1604, column: 33, scope: !5162)
!5175 = !DILocation(line: 1606, column: 8, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 1606, column: 8)
!5177 = !DILocation(line: 1606, column: 8, scope: !5162)
!5178 = !DILocation(line: 1607, column: 6, scope: !5176)
!5179 = !DILocation(line: 1607, column: 46, scope: !5176)
!5180 = !DILocation(line: 1609, column: 4, scope: !5162)
!5181 = !DILocation(line: 1612, column: 9, scope: !5162)
!5182 = !DILocation(line: 1611, column: 4, scope: !5162)
!5183 = !DILocation(line: 1612, column: 6, scope: !5162)
!5184 = !DILocation(line: 1614, column: 9, scope: !5162)
!5185 = !DILocation(line: 1613, column: 4, scope: !5162)
!5186 = !DILocation(line: 1614, column: 6, scope: !5162)
!5187 = !DILocation(line: 1615, column: 18, scope: !5162)
!5188 = !DILocation(line: 1618, column: 8, scope: !5162)
!5189 = !DILocation(line: 1619, column: 7, scope: !5162)
!5190 = !DILocation(line: 1617, column: 4, scope: !5162)
!5191 = !DILocation(line: 1621, column: 8, scope: !5162)
!5192 = !DILocation(line: 1623, column: 7, scope: !5162)
!5193 = !DILocation(line: 1620, column: 4, scope: !5162)
!5194 = !DILocation(line: 1625, column: 9, scope: !5162)
!5195 = !DILocation(line: 1624, column: 4, scope: !5162)
!5196 = !DILocation(line: 1625, column: 6, scope: !5162)
!5197 = !DILocation(line: 1626, column: 38, scope: !5162)
!5198 = !DILocation(line: 1626, column: 4, scope: !5162)
!5199 = !DILocation(line: 1626, column: 35, scope: !5162)
!5200 = !DILocation(line: 1627, column: 2, scope: !5162)
!5201 = !DILocation(line: 1592, column: 7, scope: !5145)
!5202 = !DILocation(line: 1590, column: 5, scope: !5145)
!5203 = distinct !{!5203, !5146, !5204}
!5204 = !DILocation(line: 1627, column: 2, scope: !5141)
!5205 = !DILocation(line: 1589, column: 3, scope: !5138)
!5206 = distinct !{!5206, !5139, !5207}
!5207 = !DILocation(line: 1627, column: 2, scope: !5133)
!5208 = !DILocation(line: 1628, column: 1, scope: !5122)
!5209 = distinct !DISubprogram(name: "create_caps", scope: !3, file: !3, line: 2370, type: !3362, scopeLine: 2371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5210)
!5210 = !{!5211, !5212, !5213}
!5211 = !DILocalVariable(name: "a", scope: !5209, file: !3, line: 2372, type: !573)
!5212 = !DILocalVariable(name: "ai", scope: !5209, file: !3, line: 2373, type: !3548)
!5213 = !DILocalVariable(name: "loop_tree_node", scope: !5209, file: !3, line: 2374, type: !1713)
!5214 = !DILocation(line: 2372, column: 3, scope: !5209)
!5215 = !DILocation(line: 2373, column: 3, scope: !5209)
!5216 = !DILocation(line: 0, scope: !5209)
!5217 = !DILocation(line: 2376, column: 3, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 2376, column: 3)
!5219 = !DILocation(line: 2376, column: 3, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 2376, column: 3)
!5221 = !DILocation(line: 2378, column: 11, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 2378, column: 11)
!5223 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 2377, column: 5)
!5224 = !DILocation(line: 2378, column: 41, scope: !5222)
!5225 = !DILocation(line: 2378, column: 38, scope: !5222)
!5226 = !DILocation(line: 2378, column: 11, scope: !5223)
!5227 = !DILocation(line: 2380, column: 11, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 2380, column: 11)
!5229 = !DILocation(line: 2380, column: 34, scope: !5228)
!5230 = !DILocation(line: 2380, column: 11, scope: !5223)
!5231 = !DILocation(line: 2381, column: 2, scope: !5228)
!5232 = !DILocation(line: 2382, column: 16, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 2382, column: 16)
!5234 = !DILocation(line: 2382, column: 32, scope: !5233)
!5235 = !DILocation(line: 2382, column: 16, scope: !5228)
!5236 = !DILocation(line: 2385, column: 39, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2385, column: 8)
!5238 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2383, column: 2)
!5239 = !DILocation(line: 2385, column: 56, scope: !5237)
!5240 = !DILocation(line: 2385, column: 9, scope: !5237)
!5241 = !DILocation(line: 2385, column: 8, scope: !5238)
!5242 = !DILocation(line: 2386, column: 26, scope: !5237)
!5243 = !DILocation(line: 2386, column: 6, scope: !5237)
!5244 = distinct !{!5244, !5217, !5245}
!5245 = !DILocation(line: 2388, column: 5, scope: !5218)
!5246 = !DILocation(line: 2389, column: 1, scope: !5209)
!5247 = distinct !DISubprogram(name: "setup_min_max_allocno_live_range_point", scope: !3, file: !3, line: 2176, type: !3362, scopeLine: 2177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5248)
!5248 = !{!5249, !5250, !5251, !5252, !5253, !5254, !5255}
!5249 = !DILocalVariable(name: "i", scope: !5247, file: !3, line: 2178, type: !566)
!5250 = !DILocalVariable(name: "a", scope: !5247, file: !3, line: 2179, type: !573)
!5251 = !DILocalVariable(name: "parent_a", scope: !5247, file: !3, line: 2179, type: !573)
!5252 = !DILocalVariable(name: "cap", scope: !5247, file: !3, line: 2179, type: !573)
!5253 = !DILocalVariable(name: "ai", scope: !5247, file: !3, line: 2180, type: !3548)
!5254 = !DILocalVariable(name: "r", scope: !5247, file: !3, line: 2181, type: !1767)
!5255 = !DILocalVariable(name: "parent", scope: !5247, file: !3, line: 2182, type: !1713)
!5256 = !DILocation(line: 2179, column: 3, scope: !5247)
!5257 = !DILocation(line: 2180, column: 3, scope: !5247)
!5258 = !DILocation(line: 0, scope: !5247)
!5259 = !DILocation(line: 2184, column: 3, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 2184, column: 3)
!5261 = !DILocation(line: 2184, column: 3, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2184, column: 3)
!5263 = !DILocation(line: 2186, column: 11, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2185, column: 5)
!5265 = !DILocation(line: 2187, column: 13, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 2187, column: 11)
!5267 = !DILocation(line: 2187, column: 11, scope: !5264)
!5268 = !DILocation(line: 2189, column: 28, scope: !5264)
!5269 = !DILocation(line: 2189, column: 7, scope: !5264)
!5270 = !DILocation(line: 2189, column: 23, scope: !5264)
!5271 = !DILocation(line: 2190, column: 7, scope: !5264)
!5272 = !DILocation(line: 0, scope: !5264)
!5273 = !DILocation(line: 2190, column: 17, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 2190, column: 7)
!5275 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 2190, column: 7)
!5276 = !DILocation(line: 2190, column: 22, scope: !5274)
!5277 = !DILocation(line: 2190, column: 7, scope: !5275)
!5278 = !DILocation(line: 2190, column: 7, scope: !5274)
!5279 = distinct !{!5279, !5277, !5280}
!5280 = !DILocation(line: 2191, column: 2, scope: !5275)
!5281 = !DILocation(line: 2192, column: 28, scope: !5264)
!5282 = !DILocation(line: 2192, column: 7, scope: !5264)
!5283 = !DILocation(line: 2192, column: 23, scope: !5264)
!5284 = distinct !{!5284, !5259, !5285}
!5285 = !DILocation(line: 2193, column: 5, scope: !5260)
!5286 = !DILocation(line: 2194, column: 12, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 2194, column: 3)
!5288 = !DILocation(line: 0, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 2195, column: 5)
!5290 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 2194, column: 3)
!5291 = !DILocation(line: 2194, column: 8, scope: !5287)
!5292 = !DILocation(line: 0, scope: !5287)
!5293 = !DILocation(line: 2194, column: 34, scope: !5290)
!5294 = !DILocation(line: 2194, column: 3, scope: !5287)
!5295 = !DILocation(line: 2195, column: 14, scope: !5289)
!5296 = !DILocation(line: 2195, column: 12, scope: !5289)
!5297 = !DILocation(line: 2195, column: 10, scope: !5289)
!5298 = !DILocation(line: 2196, column: 3, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 2195, column: 5)
!5300 = !DILocation(line: 2196, column: 5, scope: !5299)
!5301 = !DILocation(line: 2195, column: 5, scope: !5289)
!5302 = !DILocation(line: 2199, column: 6, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 2199, column: 6)
!5304 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2198, column: 7)
!5305 = !DILocation(line: 2199, column: 22, scope: !5303)
!5306 = !DILocation(line: 2199, column: 6, scope: !5304)
!5307 = !DILocation(line: 2203, column: 6, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 2203, column: 6)
!5309 = !DILocation(line: 2203, column: 22, scope: !5308)
!5310 = !DILocation(line: 2203, column: 6, scope: !5304)
!5311 = !DILocation(line: 0, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2207, column: 7)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 2206, column: 8)
!5314 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2205, column: 6)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 2205, column: 6)
!5316 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 2204, column: 4)
!5317 = !DILocation(line: 0, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2209, column: 7)
!5319 = !DILocation(line: 2205, column: 11, scope: !5315)
!5320 = !DILocation(line: 0, scope: !5315)
!5321 = !DILocation(line: 2205, column: 38, scope: !5314)
!5322 = !DILocation(line: 2205, column: 6, scope: !5315)
!5323 = !DILocation(line: 2207, column: 7, scope: !5312)
!5324 = !DILocation(line: 2207, column: 27, scope: !5312)
!5325 = !DILocation(line: 2207, column: 25, scope: !5312)
!5326 = !DILocation(line: 2207, column: 7, scope: !5313)
!5327 = !DILocation(line: 2208, column: 23, scope: !5312)
!5328 = !DILocation(line: 2208, column: 5, scope: !5312)
!5329 = !DILocation(line: 2209, column: 7, scope: !5318)
!5330 = !DILocation(line: 2209, column: 27, scope: !5318)
!5331 = !DILocation(line: 2209, column: 25, scope: !5318)
!5332 = !DILocation(line: 2209, column: 7, scope: !5313)
!5333 = !DILocation(line: 2210, column: 23, scope: !5318)
!5334 = !DILocation(line: 2210, column: 5, scope: !5318)
!5335 = !DILocation(line: 2205, column: 6, scope: !5314)
!5336 = distinct !{!5336, !5322, !5337}
!5337 = !DILocation(line: 2211, column: 8, scope: !5315)
!5338 = !DILocation(line: 2214, column: 16, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 2214, column: 6)
!5340 = !DILocation(line: 2214, column: 44, scope: !5339)
!5341 = !DILocation(line: 2214, column: 52, scope: !5339)
!5342 = !DILocation(line: 2214, column: 6, scope: !5304)
!5343 = !DILocation(line: 2216, column: 21, scope: !5304)
!5344 = !DILocation(line: 2216, column: 13, scope: !5304)
!5345 = !DILocation(line: 2217, column: 6, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 2217, column: 6)
!5347 = !DILocation(line: 2217, column: 31, scope: !5346)
!5348 = !DILocation(line: 2217, column: 29, scope: !5346)
!5349 = !DILocation(line: 2217, column: 6, scope: !5304)
!5350 = !DILocation(line: 2218, column: 29, scope: !5346)
!5351 = !DILocation(line: 2218, column: 27, scope: !5346)
!5352 = !DILocation(line: 2218, column: 4, scope: !5346)
!5353 = !DILocation(line: 2219, column: 6, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 2219, column: 6)
!5355 = !DILocation(line: 2219, column: 31, scope: !5354)
!5356 = !DILocation(line: 2219, column: 29, scope: !5354)
!5357 = !DILocation(line: 2219, column: 6, scope: !5304)
!5358 = !DILocation(line: 2220, column: 29, scope: !5354)
!5359 = !DILocation(line: 2220, column: 27, scope: !5354)
!5360 = !DILocation(line: 2220, column: 4, scope: !5354)
!5361 = !DILocation(line: 2197, column: 7, scope: !5299)
!5362 = !DILocation(line: 2197, column: 5, scope: !5299)
!5363 = !DILocation(line: 2195, column: 5, scope: !5299)
!5364 = distinct !{!5364, !5301, !5365}
!5365 = !DILocation(line: 2221, column: 7, scope: !5289)
!5366 = !DILocation(line: 2194, column: 3, scope: !5290)
!5367 = distinct !{!5367, !5294, !5368}
!5368 = !DILocation(line: 2221, column: 7, scope: !5287)
!5369 = !DILocation(line: 2231, column: 1, scope: !5247)
!5370 = distinct !DISubprogram(name: "sort_conflict_id_allocno_map", scope: !3, file: !3, line: 2258, type: !3362, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5371)
!5371 = !{!5372, !5373, !5374, !5375}
!5372 = !DILocalVariable(name: "i", scope: !5370, file: !3, line: 2260, type: !566)
!5373 = !DILocalVariable(name: "num", scope: !5370, file: !3, line: 2260, type: !566)
!5374 = !DILocalVariable(name: "a", scope: !5370, file: !3, line: 2261, type: !573)
!5375 = !DILocalVariable(name: "ai", scope: !5370, file: !3, line: 2262, type: !3548)
!5376 = !DILocation(line: 2261, column: 3, scope: !5370)
!5377 = !DILocation(line: 2262, column: 3, scope: !5370)
!5378 = !DILocation(line: 0, scope: !5370)
!5379 = !DILocation(line: 2265, column: 3, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 2265, column: 3)
!5381 = !DILocation(line: 0, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 2265, column: 3)
!5383 = !DILocation(line: 2265, column: 3, scope: !5382)
!5384 = !DILocation(line: 2266, column: 42, scope: !5382)
!5385 = !DILocation(line: 2266, column: 5, scope: !5382)
!5386 = !DILocation(line: 2266, column: 36, scope: !5382)
!5387 = !DILocation(line: 2266, column: 40, scope: !5382)
!5388 = distinct !{!5388, !5379, !5389}
!5389 = !DILocation(line: 2266, column: 42, scope: !5380)
!5390 = !DILocation(line: 2268, column: 15, scope: !5370)
!5391 = !DILocation(line: 2268, column: 44, scope: !5370)
!5392 = !DILocation(line: 2268, column: 3, scope: !5370)
!5393 = !DILocation(line: 2274, column: 17, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 2274, column: 3)
!5395 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 2274, column: 3)
!5396 = !DILocation(line: 2274, column: 8, scope: !5395)
!5397 = !DILocation(line: 0, scope: !5395)
!5398 = !DILocation(line: 2274, column: 3, scope: !5395)
!5399 = !DILocation(line: 2277, column: 3, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 2277, column: 3)
!5401 = !DILocation(line: 2275, column: 14, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 2275, column: 9)
!5403 = !DILocation(line: 2275, column: 12, scope: !5402)
!5404 = !DILocation(line: 2275, column: 46, scope: !5402)
!5405 = !DILocation(line: 2275, column: 9, scope: !5394)
!5406 = !DILocation(line: 2276, column: 7, scope: !5402)
!5407 = !DILocation(line: 2276, column: 31, scope: !5402)
!5408 = !DILocation(line: 2274, column: 25, scope: !5394)
!5409 = !DILocation(line: 2274, column: 3, scope: !5394)
!5410 = distinct !{!5410, !5398, !5411}
!5411 = !DILocation(line: 2276, column: 33, scope: !5395)
!5412 = !DILocation(line: 0, scope: !5400)
!5413 = !DILocation(line: 2277, column: 21, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 2277, column: 3)
!5415 = !DILocation(line: 2277, column: 19, scope: !5414)
!5416 = !DILocation(line: 2278, column: 5, scope: !5414)
!5417 = !DILocation(line: 2278, column: 36, scope: !5414)
!5418 = !DILocation(line: 2277, column: 40, scope: !5414)
!5419 = !DILocation(line: 2277, column: 3, scope: !5414)
!5420 = distinct !{!5420, !5399, !5421}
!5421 = !DILocation(line: 2278, column: 38, scope: !5400)
!5422 = !DILocation(line: 2279, column: 1, scope: !5370)
!5423 = distinct !DISubprogram(name: "setup_min_max_conflict_allocno_ids", scope: !3, file: !3, line: 2284, type: !3362, scopeLine: 2285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5424)
!5424 = !{!5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436}
!5425 = !DILocalVariable(name: "cover_class", scope: !5423, file: !3, line: 2286, type: !566)
!5426 = !DILocalVariable(name: "i", scope: !5423, file: !3, line: 2287, type: !566)
!5427 = !DILocalVariable(name: "j", scope: !5423, file: !3, line: 2287, type: !566)
!5428 = !DILocalVariable(name: "min", scope: !5423, file: !3, line: 2287, type: !566)
!5429 = !DILocalVariable(name: "max", scope: !5423, file: !3, line: 2287, type: !566)
!5430 = !DILocalVariable(name: "start", scope: !5423, file: !3, line: 2287, type: !566)
!5431 = !DILocalVariable(name: "finish", scope: !5423, file: !3, line: 2287, type: !566)
!5432 = !DILocalVariable(name: "first_not_finished", scope: !5423, file: !3, line: 2287, type: !566)
!5433 = !DILocalVariable(name: "filled_area_start", scope: !5423, file: !3, line: 2287, type: !566)
!5434 = !DILocalVariable(name: "live_range_min", scope: !5423, file: !3, line: 2288, type: !1803)
!5435 = !DILocalVariable(name: "last_lived", scope: !5423, file: !3, line: 2288, type: !1803)
!5436 = !DILocalVariable(name: "a", scope: !5423, file: !3, line: 2289, type: !573)
!5437 = !DILocation(line: 2291, column: 57, scope: !5423)
!5438 = !DILocation(line: 2291, column: 55, scope: !5423)
!5439 = !DILocation(line: 2291, column: 28, scope: !5423)
!5440 = !DILocation(line: 2291, column: 20, scope: !5423)
!5441 = !DILocation(line: 0, scope: !5423)
!5442 = !DILocation(line: 2294, column: 8, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 2294, column: 3)
!5444 = !DILocation(line: 2293, column: 22, scope: !5423)
!5445 = !DILocation(line: 2292, column: 15, scope: !5423)
!5446 = !DILocation(line: 2294, column: 19, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 2294, column: 3)
!5448 = !DILocation(line: 2294, column: 17, scope: !5447)
!5449 = !DILocation(line: 2294, column: 3, scope: !5443)
!5450 = !DILocation(line: 2296, column: 11, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2295, column: 5)
!5452 = !DILocation(line: 2297, column: 13, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 2297, column: 11)
!5454 = !DILocation(line: 2297, column: 11, scope: !5451)
!5455 = !DILocation(line: 2299, column: 23, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 2299, column: 11)
!5457 = !DILocation(line: 2300, column: 4, scope: !5456)
!5458 = !DILocation(line: 0, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 2302, column: 2)
!5460 = !DILocation(line: 2303, column: 18, scope: !5459)
!5461 = !DILocation(line: 2300, column: 8, scope: !5456)
!5462 = !DILocation(line: 2300, column: 27, scope: !5456)
!5463 = !DILocation(line: 2301, column: 8, scope: !5456)
!5464 = !DILocation(line: 2301, column: 32, scope: !5456)
!5465 = !DILocation(line: 2301, column: 23, scope: !5456)
!5466 = !DILocation(line: 2299, column: 11, scope: !5451)
!5467 = !DILocation(line: 0, scope: !5451)
!5468 = !DILocation(line: 2324, column: 27, scope: !5451)
!5469 = !DILocation(line: 2306, column: 2, scope: !5459)
!5470 = !DILocation(line: 2309, column: 12, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 2308, column: 2)
!5472 = !DILocation(line: 2314, column: 4, scope: !5471)
!5473 = !DILocation(line: 2314, column: 30, scope: !5471)
!5474 = !DILocation(line: 2315, column: 4, scope: !5471)
!5475 = !DILocation(line: 2315, column: 15, scope: !5471)
!5476 = !DILocation(line: 2315, column: 13, scope: !5471)
!5477 = !DILocation(line: 2317, column: 24, scope: !5471)
!5478 = distinct !{!5478, !5472, !5477}
!5479 = !DILocation(line: 2320, column: 15, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 2320, column: 11)
!5481 = !DILocation(line: 2320, column: 11, scope: !5451)
!5482 = !DILocation(line: 2324, column: 7, scope: !5451)
!5483 = !DILocation(line: 2324, column: 25, scope: !5451)
!5484 = !DILocation(line: 2325, column: 23, scope: !5451)
!5485 = !DILocation(line: 2326, column: 5, scope: !5451)
!5486 = !DILocation(line: 2294, column: 38, scope: !5447)
!5487 = !DILocation(line: 2294, column: 3, scope: !5447)
!5488 = distinct !{!5488, !5449, !5489}
!5489 = !DILocation(line: 2326, column: 5, scope: !5443)
!5490 = !DILocation(line: 2327, column: 53, scope: !5423)
!5491 = !DILocation(line: 2327, column: 51, scope: !5423)
!5492 = !DILocation(line: 2327, column: 24, scope: !5423)
!5493 = !DILocation(line: 2327, column: 16, scope: !5423)
!5494 = !DILocation(line: 2330, column: 12, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 2330, column: 3)
!5496 = !DILocation(line: 2330, column: 8, scope: !5495)
!5497 = !DILocation(line: 2329, column: 21, scope: !5423)
!5498 = !DILocation(line: 2328, column: 15, scope: !5423)
!5499 = !DILocation(line: 0, scope: !5495)
!5500 = !DILocation(line: 2330, column: 36, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 2330, column: 3)
!5502 = !DILocation(line: 2330, column: 3, scope: !5495)
!5503 = !DILocation(line: 2332, column: 11, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 2331, column: 5)
!5505 = !DILocation(line: 2333, column: 13, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 2333, column: 11)
!5507 = !DILocation(line: 2333, column: 11, scope: !5504)
!5508 = !DILocation(line: 2335, column: 23, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 2335, column: 11)
!5510 = !DILocation(line: 2336, column: 4, scope: !5509)
!5511 = !DILocation(line: 0, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 2338, column: 2)
!5513 = !DILocation(line: 2339, column: 18, scope: !5512)
!5514 = !DILocation(line: 2336, column: 8, scope: !5509)
!5515 = !DILocation(line: 2336, column: 27, scope: !5509)
!5516 = !DILocation(line: 2337, column: 8, scope: !5509)
!5517 = !DILocation(line: 2337, column: 32, scope: !5509)
!5518 = !DILocation(line: 2337, column: 23, scope: !5509)
!5519 = !DILocation(line: 2335, column: 11, scope: !5504)
!5520 = !DILocation(line: 2340, column: 9, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 2340, column: 4)
!5522 = !DILocation(line: 0, scope: !5521)
!5523 = !DILocation(line: 2340, column: 20, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 2340, column: 4)
!5525 = !DILocation(line: 2340, column: 18, scope: !5524)
!5526 = !DILocation(line: 2340, column: 4, scope: !5521)
!5527 = !DILocation(line: 2341, column: 6, scope: !5524)
!5528 = !DILocation(line: 2341, column: 20, scope: !5524)
!5529 = !DILocation(line: 2340, column: 36, scope: !5524)
!5530 = !DILocation(line: 2340, column: 4, scope: !5524)
!5531 = distinct !{!5531, !5526, !5532}
!5532 = !DILocation(line: 2341, column: 23, scope: !5521)
!5533 = !DILocation(line: 2343, column: 2, scope: !5512)
!5534 = !DILocation(line: 2344, column: 13, scope: !5504)
!5535 = !DILocation(line: 2345, column: 16, scope: !5504)
!5536 = !DILocation(line: 2346, column: 13, scope: !5504)
!5537 = !DILocation(line: 2347, column: 15, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 2347, column: 11)
!5539 = !DILocation(line: 2347, column: 11, scope: !5504)
!5540 = !DILocation(line: 2350, column: 8, scope: !5538)
!5541 = !DILocation(line: 2350, column: 32, scope: !5538)
!5542 = !DILocation(line: 2350, column: 2, scope: !5538)
!5543 = !DILocation(line: 0, scope: !5504)
!5544 = !DILocation(line: 2351, column: 23, scope: !5504)
!5545 = !DILocation(line: 2359, column: 12, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 2359, column: 7)
!5547 = !DILocation(line: 0, scope: !5546)
!5548 = !DILocation(line: 2359, column: 23, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 2359, column: 7)
!5550 = !DILocation(line: 2359, column: 7, scope: !5546)
!5551 = !DILocation(line: 2360, column: 2, scope: !5549)
!5552 = !DILocation(line: 2360, column: 16, scope: !5549)
!5553 = !DILocation(line: 2359, column: 45, scope: !5549)
!5554 = !DILocation(line: 2359, column: 7, scope: !5549)
!5555 = distinct !{!5555, !5550, !5556}
!5556 = !DILocation(line: 2360, column: 18, scope: !5546)
!5557 = !DILocation(line: 2330, column: 3, scope: !5501)
!5558 = distinct !{!5558, !5502, !5559}
!5559 = !DILocation(line: 2362, column: 5, scope: !5495)
!5560 = !DILocation(line: 2363, column: 3, scope: !5423)
!5561 = !DILocation(line: 2364, column: 3, scope: !5423)
!5562 = !DILocation(line: 2365, column: 1, scope: !5423)
!5563 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !135, file: !135, line: 85, type: !5564, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5568)
!5564 = !DISubroutineType(types: !5565)
!5565 = !{!7, !5566}
!5566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 64)
!5567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!5568 = !{!5569}
!5569 = !DILocalVariable(name: "vec_", arg: 1, scope: !5563, file: !135, line: 85, type: !5566)
!5570 = !DILocation(line: 0, scope: !5563)
!5571 = !DILocation(line: 85, column: 1, scope: !5563)
!5572 = distinct !DISubprogram(name: "ira_destroy", scope: !3, file: !3, line: 2860, type: !3362, scopeLine: 2861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1964)
!5573 = !DILocation(line: 2862, column: 3, scope: !5572)
!5574 = !DILocation(line: 2863, column: 3, scope: !5572)
!5575 = !DILocation(line: 2864, column: 3, scope: !5572)
!5576 = !DILocation(line: 2865, column: 3, scope: !5572)
!5577 = !DILocation(line: 2866, column: 3, scope: !5572)
!5578 = !DILocation(line: 2867, column: 1, scope: !5572)
!5579 = distinct !DISubprogram(name: "finish_loop_tree_nodes", scope: !3, file: !3, line: 199, type: !3362, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5580)
!5580 = !{!5581, !5582}
!5581 = !DILocalVariable(name: "i", scope: !5579, file: !3, line: 201, type: !7)
!5582 = !DILocalVariable(name: "loop", scope: !5579, file: !3, line: 202, type: !1025)
!5583 = !DILocation(line: 202, column: 3, scope: !5579)
!5584 = !DILocation(line: 0, scope: !5579)
!5585 = !DILocation(line: 204, column: 8, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 204, column: 3)
!5587 = !DILocation(line: 0, scope: !5586)
!5588 = !DILocation(line: 204, column: 15, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 204, column: 3)
!5590 = !DILocation(line: 204, column: 3, scope: !5586)
!5591 = !DILocation(line: 205, column: 29, scope: !5589)
!5592 = !DILocation(line: 205, column: 5, scope: !5589)
!5593 = !DILocation(line: 204, column: 65, scope: !5589)
!5594 = !DILocation(line: 204, column: 3, scope: !5589)
!5595 = distinct !{!5595, !5590, !5596}
!5596 = !DILocation(line: 205, column: 46, scope: !5586)
!5597 = !DILocation(line: 206, column: 13, scope: !5579)
!5598 = !DILocation(line: 206, column: 3, scope: !5579)
!5599 = !DILocation(line: 207, column: 8, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 207, column: 3)
!5601 = !DILocation(line: 0, scope: !5600)
!5602 = !DILocation(line: 207, column: 34, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 207, column: 3)
!5604 = !DILocation(line: 207, column: 17, scope: !5603)
!5605 = !DILocation(line: 207, column: 3, scope: !5600)
!5606 = !DILocation(line: 209, column: 27, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 209, column: 11)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 208, column: 5)
!5609 = !DILocation(line: 209, column: 40, scope: !5607)
!5610 = !DILocation(line: 209, column: 11, scope: !5608)
!5611 = !DILocation(line: 210, column: 2, scope: !5607)
!5612 = !DILocation(line: 211, column: 11, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 211, column: 11)
!5614 = !DILocation(line: 211, column: 27, scope: !5613)
!5615 = !DILocation(line: 211, column: 43, scope: !5613)
!5616 = !DILocation(line: 211, column: 11, scope: !5608)
!5617 = !DILocation(line: 212, column: 2, scope: !5613)
!5618 = !DILocation(line: 213, column: 11, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 213, column: 11)
!5620 = !DILocation(line: 213, column: 27, scope: !5619)
!5621 = !DILocation(line: 213, column: 43, scope: !5619)
!5622 = !DILocation(line: 213, column: 11, scope: !5608)
!5623 = !DILocation(line: 214, column: 2, scope: !5619)
!5624 = !DILocation(line: 215, column: 11, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 215, column: 11)
!5626 = !DILocation(line: 215, column: 27, scope: !5625)
!5627 = !DILocation(line: 215, column: 40, scope: !5625)
!5628 = !DILocation(line: 215, column: 11, scope: !5608)
!5629 = !DILocation(line: 216, column: 2, scope: !5625)
!5630 = !DILocation(line: 217, column: 11, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 217, column: 11)
!5632 = !DILocation(line: 217, column: 27, scope: !5631)
!5633 = !DILocation(line: 217, column: 45, scope: !5631)
!5634 = !DILocation(line: 217, column: 11, scope: !5608)
!5635 = !DILocation(line: 218, column: 2, scope: !5631)
!5636 = !DILocation(line: 207, column: 67, scope: !5603)
!5637 = !DILocation(line: 207, column: 3, scope: !5603)
!5638 = distinct !{!5638, !5605, !5639}
!5639 = !DILocation(line: 219, column: 5, scope: !5600)
!5640 = !DILocation(line: 220, column: 13, scope: !5579)
!5641 = !DILocation(line: 220, column: 3, scope: !5579)
!5642 = !DILocation(line: 221, column: 1, scope: !5579)
!5643 = distinct !DISubprogram(name: "finish_copies", scope: !3, file: !3, line: 1292, type: !3362, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5644)
!5644 = !{!5645, !5646}
!5645 = !DILocalVariable(name: "cp", scope: !5643, file: !3, line: 1294, type: !1747)
!5646 = !DILocalVariable(name: "ci", scope: !5643, file: !3, line: 1295, type: !3374)
!5647 = !DILocation(line: 1294, column: 3, scope: !5643)
!5648 = !DILocation(line: 1295, column: 3, scope: !5643)
!5649 = !DILocation(line: 0, scope: !5643)
!5650 = !DILocation(line: 1297, column: 3, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 1297, column: 3)
!5652 = !DILocation(line: 1297, column: 3, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1297, column: 3)
!5654 = !DILocation(line: 1298, column: 18, scope: !5653)
!5655 = !DILocation(line: 1298, column: 5, scope: !5653)
!5656 = distinct !{!5656, !5650, !5657}
!5657 = !DILocation(line: 1298, column: 20, scope: !5651)
!5658 = !DILocation(line: 1299, column: 3, scope: !5643)
!5659 = !DILocation(line: 1300, column: 20, scope: !5643)
!5660 = !DILocation(line: 1300, column: 3, scope: !5643)
!5661 = !DILocation(line: 1301, column: 1, scope: !5643)
!5662 = distinct !DISubprogram(name: "finish_allocnos", scope: !3, file: !3, line: 1006, type: !3362, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5663)
!5663 = !{!5664, !5665}
!5664 = !DILocalVariable(name: "a", scope: !5662, file: !3, line: 1008, type: !573)
!5665 = !DILocalVariable(name: "ai", scope: !5662, file: !3, line: 1009, type: !3548)
!5666 = !DILocation(line: 1008, column: 3, scope: !5662)
!5667 = !DILocation(line: 1009, column: 3, scope: !5662)
!5668 = !DILocation(line: 0, scope: !5662)
!5669 = !DILocation(line: 1011, column: 3, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 1011, column: 3)
!5671 = !DILocation(line: 1011, column: 3, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 1011, column: 3)
!5673 = !DILocation(line: 1012, column: 21, scope: !5672)
!5674 = !DILocation(line: 1012, column: 5, scope: !5672)
!5675 = distinct !{!5675, !5669, !5676}
!5676 = !DILocation(line: 1012, column: 22, scope: !5670)
!5677 = !DILocation(line: 1013, column: 13, scope: !5662)
!5678 = !DILocation(line: 1013, column: 3, scope: !5662)
!5679 = !DILocation(line: 1014, column: 3, scope: !5662)
!5680 = !DILocation(line: 1015, column: 3, scope: !5662)
!5681 = !DILocation(line: 1016, column: 20, scope: !5662)
!5682 = !DILocation(line: 1016, column: 3, scope: !5662)
!5683 = !DILocation(line: 1017, column: 20, scope: !5662)
!5684 = !DILocation(line: 1017, column: 3, scope: !5662)
!5685 = !DILocation(line: 1018, column: 1, scope: !5662)
!5686 = distinct !DISubprogram(name: "finish_cost_vectors", scope: !3, file: !3, line: 1345, type: !3362, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5687)
!5687 = !{!5688, !5689}
!5688 = !DILocalVariable(name: "i", scope: !5686, file: !3, line: 1347, type: !566)
!5689 = !DILocalVariable(name: "cover_class", scope: !5686, file: !3, line: 1348, type: !390)
!5690 = !DILocation(line: 0, scope: !5686)
!5691 = !DILocation(line: 1350, column: 8, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 1350, column: 3)
!5693 = !DILocation(line: 0, scope: !5692)
!5694 = !DILocation(line: 1350, column: 19, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1350, column: 3)
!5696 = !DILocation(line: 1350, column: 17, scope: !5695)
!5697 = !DILocation(line: 1350, column: 3, scope: !5692)
!5698 = !DILocation(line: 1352, column: 21, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 1351, column: 5)
!5700 = !DILocation(line: 1353, column: 24, scope: !5699)
!5701 = !DILocation(line: 1353, column: 7, scope: !5699)
!5702 = !DILocation(line: 1350, column: 46, scope: !5695)
!5703 = !DILocation(line: 1350, column: 3, scope: !5695)
!5704 = distinct !{!5704, !5697, !5705}
!5705 = !DILocation(line: 1354, column: 5, scope: !5692)
!5706 = !DILocation(line: 1355, column: 1, scope: !5686)
!5707 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_reserve", scope: !574, file: !574, line: 68, type: !5708, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5710)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!566, !2507, !566}
!5710 = !{!5711, !5712, !5713}
!5711 = !DILocalVariable(name: "vec_", arg: 1, scope: !5707, file: !574, line: 68, type: !2507)
!5712 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5707, file: !574, line: 68, type: !566)
!5713 = !DILocalVariable(name: "extend", scope: !5707, file: !574, line: 68, type: !566)
!5714 = !DILocation(line: 0, scope: !5707)
!5715 = !DILocation(line: 68, column: 1, scope: !5707)
!5716 = !DILocation(line: 68, column: 1, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5707, file: !574, line: 68, column: 1)
!5718 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_quick_push", scope: !574, file: !574, line: 67, type: !5719, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5721)
!5719 = !DISubroutineType(types: !5720)
!5720 = !{!1727, !2516, !573}
!5721 = !{!5722, !5723, !5724}
!5722 = !DILocalVariable(name: "vec_", arg: 1, scope: !5718, file: !574, line: 67, type: !2516)
!5723 = !DILocalVariable(name: "obj_", arg: 2, scope: !5718, file: !574, line: 67, type: !573)
!5724 = !DILocalVariable(name: "slot_", scope: !5718, file: !574, line: 67, type: !1727)
!5725 = !DILocation(line: 0, scope: !5718)
!5726 = !DILocation(line: 67, column: 1, scope: !5718)
!5727 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_space", scope: !574, file: !574, line: 67, type: !5728, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5730)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!566, !2516, !566}
!5730 = !{!5731, !5732}
!5731 = !DILocalVariable(name: "vec_", arg: 1, scope: !5727, file: !574, line: 67, type: !2516)
!5732 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5727, file: !574, line: 67, type: !566)
!5733 = !DILocation(line: 0, scope: !5727)
!5734 = !DILocation(line: 67, column: 1, scope: !5727)
!5735 = distinct !DISubprogram(name: "VEC_ira_copy_t_heap_reserve", scope: !574, file: !574, line: 70, type: !5736, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5738)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{!566, !3092, !566}
!5738 = !{!5739, !5740, !5741}
!5739 = !DILocalVariable(name: "vec_", arg: 1, scope: !5735, file: !574, line: 70, type: !3092)
!5740 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5735, file: !574, line: 70, type: !566)
!5741 = !DILocalVariable(name: "extend", scope: !5735, file: !574, line: 70, type: !566)
!5742 = !DILocation(line: 0, scope: !5735)
!5743 = !DILocation(line: 70, column: 1, scope: !5735)
!5744 = !DILocation(line: 70, column: 1, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5735, file: !574, line: 70, column: 1)
!5746 = distinct !DISubprogram(name: "VEC_ira_copy_t_base_quick_push", scope: !574, file: !574, line: 69, type: !5747, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5749)
!5747 = !DISubroutineType(types: !5748)
!5748 = !{!1881, !3101, !1747}
!5749 = !{!5750, !5751, !5752}
!5750 = !DILocalVariable(name: "vec_", arg: 1, scope: !5746, file: !574, line: 69, type: !3101)
!5751 = !DILocalVariable(name: "obj_", arg: 2, scope: !5746, file: !574, line: 69, type: !1747)
!5752 = !DILocalVariable(name: "slot_", scope: !5746, file: !574, line: 69, type: !1881)
!5753 = !DILocation(line: 0, scope: !5746)
!5754 = !DILocation(line: 69, column: 1, scope: !5746)
!5755 = distinct !DISubprogram(name: "VEC_ira_copy_t_base_space", scope: !574, file: !574, line: 69, type: !5756, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5758)
!5756 = !DISubroutineType(types: !5757)
!5757 = !{!566, !3101, !566}
!5758 = !{!5759, !5760}
!5759 = !DILocalVariable(name: "vec_", arg: 1, scope: !5755, file: !574, line: 69, type: !3101)
!5760 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5755, file: !574, line: 69, type: !566)
!5761 = !DILocation(line: 0, scope: !5755)
!5762 = !DILocation(line: 69, column: 1, scope: !5755)
!5763 = distinct !DISubprogram(name: "sparseset_bit_p", scope: !3555, file: !3555, line: 81, type: !5764, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5766)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!565, !3554, !7}
!5766 = !{!5767, !5768, !5769}
!5767 = !DILocalVariable(name: "s", arg: 1, scope: !5763, file: !3555, line: 81, type: !3554)
!5768 = !DILocalVariable(name: "e", arg: 2, scope: !5763, file: !3555, line: 81, type: !7)
!5769 = !DILocalVariable(name: "idx", scope: !5763, file: !3555, line: 83, type: !7)
!5770 = !DILocation(line: 0, scope: !5763)
!5771 = !DILocation(line: 85, column: 3, scope: !5763)
!5772 = !DILocation(line: 87, column: 12, scope: !5763)
!5773 = !DILocation(line: 87, column: 9, scope: !5763)
!5774 = !DILocation(line: 89, column: 19, scope: !5763)
!5775 = !DILocation(line: 89, column: 14, scope: !5763)
!5776 = !DILocation(line: 89, column: 27, scope: !5763)
!5777 = !DILocation(line: 89, column: 33, scope: !5763)
!5778 = !DILocation(line: 89, column: 30, scope: !5763)
!5779 = !DILocation(line: 89, column: 44, scope: !5763)
!5780 = !DILocation(line: 89, column: 3, scope: !5763)
!5781 = distinct !DISubprogram(name: "sparseset_insert_bit", scope: !3555, file: !3555, line: 96, type: !5782, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5784)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{null, !3554, !7, !7}
!5784 = !{!5785, !5786, !5787}
!5785 = !DILocalVariable(name: "s", arg: 1, scope: !5781, file: !3555, line: 96, type: !3554)
!5786 = !DILocalVariable(name: "e", arg: 2, scope: !5781, file: !3555, line: 96, type: !7)
!5787 = !DILocalVariable(name: "idx", arg: 3, scope: !5781, file: !3555, line: 96, type: !7)
!5788 = !DILocation(line: 0, scope: !5781)
!5789 = !DILocation(line: 98, column: 6, scope: !5781)
!5790 = !DILocation(line: 98, column: 3, scope: !5781)
!5791 = !DILocation(line: 98, column: 16, scope: !5781)
!5792 = !DILocation(line: 99, column: 6, scope: !5781)
!5793 = !DILocation(line: 99, column: 3, scope: !5781)
!5794 = !DILocation(line: 99, column: 17, scope: !5781)
!5795 = !DILocation(line: 100, column: 1, scope: !5781)
!5796 = distinct !DISubprogram(name: "compress_allocno_conflict_vec", scope: !3, file: !3, line: 694, type: !2603, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5797)
!5797 = !{!5798, !5799, !5800, !5801, !5802}
!5798 = !DILocalVariable(name: "a", arg: 1, scope: !5796, file: !3, line: 694, type: !573)
!5799 = !DILocalVariable(name: "vec", scope: !5796, file: !3, line: 696, type: !1727)
!5800 = !DILocalVariable(name: "conflict_a", scope: !5796, file: !3, line: 696, type: !573)
!5801 = !DILocalVariable(name: "i", scope: !5796, file: !3, line: 697, type: !566)
!5802 = !DILocalVariable(name: "j", scope: !5796, file: !3, line: 697, type: !566)
!5803 = !DILocation(line: 0, scope: !5796)
!5804 = !DILocation(line: 700, column: 27, scope: !5796)
!5805 = !DILocation(line: 701, column: 35, scope: !5796)
!5806 = !DILocation(line: 702, column: 8, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 702, column: 3)
!5808 = !DILocation(line: 0, scope: !5807)
!5809 = !DILocation(line: 702, column: 33, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 702, column: 3)
!5811 = !DILocation(line: 702, column: 41, scope: !5810)
!5812 = !DILocation(line: 702, column: 3, scope: !5807)
!5813 = !DILocation(line: 704, column: 11, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 704, column: 11)
!5815 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 703, column: 5)
!5816 = !DILocation(line: 704, column: 34, scope: !5814)
!5817 = !DILocation(line: 705, column: 7, scope: !5814)
!5818 = !DILocation(line: 705, column: 4, scope: !5814)
!5819 = !DILocation(line: 704, column: 11, scope: !5815)
!5820 = !DILocation(line: 708, column: 6, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 706, column: 2)
!5822 = !DILocation(line: 709, column: 9, scope: !5821)
!5823 = !DILocation(line: 709, column: 4, scope: !5821)
!5824 = !DILocation(line: 709, column: 13, scope: !5821)
!5825 = !DILocation(line: 710, column: 2, scope: !5821)
!5826 = !DILocation(line: 702, column: 51, scope: !5810)
!5827 = !DILocation(line: 702, column: 3, scope: !5810)
!5828 = distinct !{!5828, !5812, !5829}
!5829 = !DILocation(line: 711, column: 5, scope: !5807)
!5830 = !DILocation(line: 712, column: 3, scope: !5796)
!5831 = !DILocation(line: 712, column: 37, scope: !5796)
!5832 = !DILocation(line: 713, column: 3, scope: !5796)
!5833 = !DILocation(line: 713, column: 10, scope: !5796)
!5834 = !DILocation(line: 714, column: 1, scope: !5796)
!5835 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !135, file: !135, line: 85, type: !5836, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5839)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!566, !5566, !7, !5838}
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!5839 = !{!5840, !5841, !5842}
!5840 = !DILocalVariable(name: "vec_", arg: 1, scope: !5835, file: !135, line: 85, type: !5566)
!5841 = !DILocalVariable(name: "ix_", arg: 2, scope: !5835, file: !135, line: 85, type: !7)
!5842 = !DILocalVariable(name: "ptr", arg: 3, scope: !5835, file: !135, line: 85, type: !5838)
!5843 = !DILocation(line: 0, scope: !5835)
!5844 = !DILocation(line: 85, column: 1, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5835, file: !135, line: 85, column: 1)
!5846 = !DILocation(line: 85, column: 1, scope: !5835)
!5847 = !DILocation(line: 85, column: 1, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !135, line: 85, column: 1)
!5849 = !DILocation(line: 85, column: 1, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5845, file: !135, line: 85, column: 1)
!5851 = !DILocation(line: 0, scope: !5845)
!5852 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_alloc", scope: !574, file: !574, line: 68, type: !5853, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5855)
!5853 = !DISubroutineType(types: !5854)
!5854 = !{!1812, !566}
!5855 = !{!5856}
!5856 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5852, file: !574, line: 68, type: !566)
!5857 = !DILocation(line: 0, scope: !5852)
!5858 = !DILocation(line: 68, column: 1, scope: !5852)
!5859 = distinct !DISubprogram(name: "VEC_ira_copy_t_heap_alloc", scope: !574, file: !574, line: 70, type: !5860, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5862)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{!1825, !566}
!5862 = !{!5863}
!5863 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5859, file: !574, line: 70, type: !566)
!5864 = !DILocation(line: 0, scope: !5859)
!5865 = !DILocation(line: 70, column: 1, scope: !5859)
!5866 = distinct !DISubprogram(name: "ei_start_1", scope: !148, file: !148, line: 696, type: !5867, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5869)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!4701, !4706}
!5869 = !{!5870, !5871}
!5870 = !DILocalVariable(name: "ev", arg: 1, scope: !5866, file: !148, line: 696, type: !4706)
!5871 = !DILocalVariable(name: "i", scope: !5866, file: !148, line: 698, type: !4701)
!5872 = !DILocation(line: 0, scope: !5866)
!5873 = !DILocation(line: 700, column: 5, scope: !5866)
!5874 = !DILocation(line: 700, column: 11, scope: !5866)
!5875 = !DILocation(line: 701, column: 5, scope: !5866)
!5876 = !DILocation(line: 701, column: 15, scope: !5866)
!5877 = !DILocation(line: 703, column: 3, scope: !5866)
!5878 = distinct !DISubprogram(name: "ei_cond", scope: !148, file: !148, line: 771, type: !5879, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5882)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!565, !4701, !5881}
!5881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!5882 = !{!5883, !5884}
!5883 = !DILocalVariable(name: "ei", arg: 1, scope: !5878, file: !148, line: 771, type: !4701)
!5884 = !DILocalVariable(name: "p", arg: 2, scope: !5878, file: !148, line: 771, type: !5881)
!5885 = !DILocation(line: 0, scope: !5878)
!5886 = !DILocation(line: 773, column: 8, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5878, file: !148, line: 773, column: 7)
!5888 = !DILocation(line: 773, column: 7, scope: !5878)
!5889 = !DILocation(line: 775, column: 12, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5887, file: !148, line: 774, column: 5)
!5891 = !DILocation(line: 776, column: 7, scope: !5890)
!5892 = !DILocation(line: 781, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5887, file: !148, line: 779, column: 5)
!5894 = !DILocation(line: 0, scope: !5887)
!5895 = !DILocation(line: 783, column: 1, scope: !5878)
!5896 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !148, file: !148, line: 150, type: !5897, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5901)
!5897 = !DISubroutineType(types: !5898)
!5898 = !{!7, !5899}
!5899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5900, size: 64)
!5900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!5901 = !{!5902}
!5902 = !DILocalVariable(name: "vec_", arg: 1, scope: !5896, file: !148, line: 150, type: !5899)
!5903 = !DILocation(line: 0, scope: !5896)
!5904 = !DILocation(line: 150, column: 1, scope: !5896)
!5905 = distinct !DISubprogram(name: "ei_next", scope: !148, file: !148, line: 736, type: !5906, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5909)
!5906 = !DISubroutineType(types: !5907)
!5907 = !{null, !5908}
!5908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!5909 = !{!5910}
!5910 = !DILocalVariable(name: "i", arg: 1, scope: !5905, file: !148, line: 736, type: !5908)
!5911 = !DILocation(line: 0, scope: !5905)
!5912 = !DILocation(line: 738, column: 3, scope: !5905)
!5913 = !DILocation(line: 739, column: 11, scope: !5905)
!5914 = !DILocation(line: 740, column: 1, scope: !5905)
!5915 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !148, file: !148, line: 150, type: !5916, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5918)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!566, !5899, !7, !5881}
!5918 = !{!5919, !5920, !5921}
!5919 = !DILocalVariable(name: "vec_", arg: 1, scope: !5915, file: !148, line: 150, type: !5899)
!5920 = !DILocalVariable(name: "ix_", arg: 2, scope: !5915, file: !148, line: 150, type: !7)
!5921 = !DILocalVariable(name: "ptr", arg: 3, scope: !5915, file: !148, line: 150, type: !5881)
!5922 = !DILocation(line: 0, scope: !5915)
!5923 = !DILocation(line: 150, column: 1, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5915, file: !148, line: 150, column: 1)
!5925 = !DILocation(line: 150, column: 1, scope: !5915)
!5926 = !DILocation(line: 150, column: 1, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5924, file: !148, line: 150, column: 1)
!5928 = !DILocation(line: 150, column: 1, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5924, file: !148, line: 150, column: 1)
!5930 = !DILocation(line: 0, scope: !5924)
!5931 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !148, file: !148, line: 152, type: !5932, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5935)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{null, !5934}
!5934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!5935 = !{!5936}
!5936 = !DILocalVariable(name: "vec_", arg: 1, scope: !5931, file: !148, line: 152, type: !5934)
!5937 = !DILocation(line: 0, scope: !5931)
!5938 = !DILocation(line: 152, column: 1, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5931, file: !148, line: 152, column: 1)
!5940 = !DILocation(line: 152, column: 1, scope: !5931)
!5941 = distinct !DISubprogram(name: "ei_end_p", scope: !148, file: !148, line: 721, type: !5942, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!565, !4701}
!5944 = !{!5945}
!5945 = !DILocalVariable(name: "i", arg: 1, scope: !5941, file: !148, line: 721, type: !4701)
!5946 = !DILocation(line: 723, column: 22, scope: !5941)
!5947 = !DILocation(line: 723, column: 19, scope: !5941)
!5948 = !DILocation(line: 723, column: 10, scope: !5941)
!5949 = !DILocation(line: 723, column: 3, scope: !5941)
!5950 = distinct !DISubprogram(name: "ei_edge", scope: !148, file: !148, line: 752, type: !5951, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5953)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!973, !4701}
!5953 = !{!5954}
!5954 = !DILocalVariable(name: "i", arg: 1, scope: !5950, file: !148, line: 752, type: !4701)
!5955 = !DILocation(line: 754, column: 10, scope: !5950)
!5956 = !DILocation(line: 754, column: 3, scope: !5950)
!5957 = distinct !DISubprogram(name: "ei_container", scope: !148, file: !148, line: 685, type: !5958, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5960)
!5958 = !DISubroutineType(types: !5959)
!5959 = !{!961, !4701}
!5960 = !{!5961}
!5961 = !DILocalVariable(name: "i", arg: 1, scope: !5957, file: !148, line: 685, type: !4701)
!5962 = !DILocation(line: 687, column: 3, scope: !5957)
!5963 = !DILocation(line: 688, column: 10, scope: !5957)
!5964 = !DILocation(line: 688, column: 3, scope: !5957)
!5965 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !148, file: !148, line: 150, type: !5966, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5968)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!973, !5899, !7}
!5968 = !{!5969, !5970}
!5969 = !DILocalVariable(name: "vec_", arg: 1, scope: !5965, file: !148, line: 150, type: !5899)
!5970 = !DILocalVariable(name: "ix_", arg: 2, scope: !5965, file: !148, line: 150, type: !7)
!5971 = !DILocation(line: 0, scope: !5965)
!5972 = !DILocation(line: 150, column: 1, scope: !5965)
!5973 = distinct !DISubprogram(name: "loop_outer", scope: !135, file: !135, line: 434, type: !5974, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5978)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!998, !5976}
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!5978 = !{!5979, !5980}
!5979 = !DILocalVariable(name: "loop", arg: 1, scope: !5973, file: !135, line: 434, type: !5976)
!5980 = !DILocalVariable(name: "n", scope: !5973, file: !135, line: 436, type: !7)
!5981 = !DILocation(line: 0, scope: !5973)
!5982 = !DILocation(line: 436, column: 16, scope: !5973)
!5983 = !DILocation(line: 438, column: 9, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5973, file: !135, line: 438, column: 7)
!5985 = !DILocation(line: 438, column: 7, scope: !5973)
!5986 = !DILocation(line: 441, column: 10, scope: !5973)
!5987 = !DILocation(line: 441, column: 3, scope: !5973)
!5988 = !DILocation(line: 442, column: 1, scope: !5973)
!5989 = distinct !DISubprogram(name: "add_loop_to_tree", scope: !3, file: !3, line: 228, type: !5990, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5992)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{null, !998}
!5992 = !{!5993, !5994, !5995, !5996}
!5993 = !DILocalVariable(name: "loop", arg: 1, scope: !5989, file: !3, line: 228, type: !998)
!5994 = !DILocalVariable(name: "parent", scope: !5989, file: !3, line: 230, type: !998)
!5995 = !DILocalVariable(name: "loop_node", scope: !5989, file: !3, line: 231, type: !1713)
!5996 = !DILocalVariable(name: "parent_node", scope: !5989, file: !3, line: 231, type: !1713)
!5997 = !DILocation(line: 0, scope: !5989)
!5998 = !DILocation(line: 236, column: 7, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 236, column: 7)
!6000 = !DILocation(line: 236, column: 25, scope: !5999)
!6001 = !DILocation(line: 236, column: 7, scope: !5989)
!6002 = !DILocation(line: 237, column: 23, scope: !5999)
!6003 = !DILocation(line: 237, column: 5, scope: !5999)
!6004 = !DILocation(line: 238, column: 7, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 238, column: 7)
!6006 = !DILocation(line: 238, column: 28, scope: !6005)
!6007 = !DILocation(line: 238, column: 33, scope: !6005)
!6008 = !DILocation(line: 238, column: 51, scope: !6005)
!6009 = !DILocation(line: 239, column: 7, scope: !6005)
!6010 = !DILocation(line: 239, column: 36, scope: !6005)
!6011 = !DILocation(line: 239, column: 45, scope: !6005)
!6012 = !DILocation(line: 238, column: 7, scope: !5989)
!6013 = !DILocation(line: 242, column: 20, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 240, column: 5)
!6015 = !DILocation(line: 243, column: 18, scope: !6014)
!6016 = !DILocation(line: 243, column: 23, scope: !6014)
!6017 = !DILocation(line: 244, column: 18, scope: !6014)
!6018 = !DILocation(line: 244, column: 21, scope: !6014)
!6019 = !DILocation(line: 245, column: 21, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 245, column: 7)
!6021 = !DILocation(line: 245, column: 12, scope: !6020)
!6022 = !DILocation(line: 0, scope: !6020)
!6023 = !DILocation(line: 245, column: 7, scope: !6020)
!6024 = !DILocation(line: 248, column: 6, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 248, column: 6)
!6026 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 245, column: 7)
!6027 = !DILocation(line: 248, column: 29, scope: !6025)
!6028 = !DILocation(line: 248, column: 34, scope: !6025)
!6029 = !DILocation(line: 248, column: 52, scope: !6025)
!6030 = !DILocation(line: 248, column: 6, scope: !6026)
!6031 = !DILocation(line: 247, column: 14, scope: !6026)
!6032 = !DILocation(line: 245, column: 7, scope: !6026)
!6033 = distinct !{!6033, !6023, !6034}
!6034 = !DILocation(line: 249, column: 4, scope: !6020)
!6035 = !DILocation(line: 258, column: 19, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 257, column: 2)
!6037 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 250, column: 11)
!6038 = !DILocation(line: 259, column: 35, scope: !6036)
!6039 = !DILocation(line: 259, column: 15, scope: !6036)
!6040 = !DILocation(line: 259, column: 20, scope: !6036)
!6041 = !DILocation(line: 260, column: 26, scope: !6036)
!6042 = !DILocation(line: 261, column: 43, scope: !6036)
!6043 = !DILocation(line: 261, column: 15, scope: !6036)
!6044 = !DILocation(line: 261, column: 28, scope: !6036)
!6045 = !DILocation(line: 262, column: 26, scope: !6036)
!6046 = !DILocation(line: 263, column: 15, scope: !6036)
!6047 = !DILocation(line: 263, column: 22, scope: !6036)
!6048 = !DILocation(line: 252, column: 15, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 251, column: 2)
!6050 = !DILocation(line: 252, column: 20, scope: !6049)
!6051 = !DILocation(line: 253, column: 15, scope: !6049)
!6052 = !DILocation(line: 253, column: 28, scope: !6049)
!6053 = !DILocation(line: 254, column: 15, scope: !6049)
!6054 = !DILocation(line: 254, column: 22, scope: !6049)
!6055 = !DILocation(line: 255, column: 2, scope: !6049)
!6056 = !DILocation(line: 266, column: 1, scope: !5989)
!6057 = distinct !DISubprogram(name: "setup_loop_tree_level", scope: !3, file: !3, line: 272, type: !6058, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6060)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!566, !1713, !566}
!6060 = !{!6061, !6062, !6063, !6064, !6065}
!6061 = !DILocalVariable(name: "loop_node", arg: 1, scope: !6057, file: !3, line: 272, type: !1713)
!6062 = !DILocalVariable(name: "level", arg: 2, scope: !6057, file: !3, line: 272, type: !566)
!6063 = !DILocalVariable(name: "height", scope: !6057, file: !3, line: 274, type: !566)
!6064 = !DILocalVariable(name: "max_height", scope: !6057, file: !3, line: 274, type: !566)
!6065 = !DILocalVariable(name: "subloop_node", scope: !6057, file: !3, line: 275, type: !1713)
!6066 = !DILocation(line: 0, scope: !6057)
!6067 = !DILocation(line: 278, column: 14, scope: !6057)
!6068 = !DILocation(line: 278, column: 20, scope: !6057)
!6069 = !DILocation(line: 279, column: 22, scope: !6057)
!6070 = !DILocation(line: 280, column: 34, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 280, column: 3)
!6072 = !DILocation(line: 280, column: 8, scope: !6071)
!6073 = !DILocation(line: 0, scope: !6071)
!6074 = !DILocation(line: 281, column: 21, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 280, column: 3)
!6076 = !DILocation(line: 280, column: 3, scope: !6071)
!6077 = !DILocation(line: 285, column: 16, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 283, column: 5)
!6079 = !DILocation(line: 286, column: 18, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 286, column: 11)
!6081 = !DILocation(line: 286, column: 11, scope: !6078)
!6082 = !DILocation(line: 282, column: 37, scope: !6075)
!6083 = !DILocation(line: 280, column: 3, scope: !6075)
!6084 = distinct !{!6084, !6076, !6085}
!6085 = !DILocation(line: 288, column: 5, scope: !6071)
!6086 = !DILocation(line: 289, column: 3, scope: !6057)
!6087 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !135, file: !135, line: 85, type: !6088, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6090)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!1025, !5566, !7}
!6090 = !{!6091, !6092}
!6091 = !DILocalVariable(name: "vec_", arg: 1, scope: !6087, file: !135, line: 85, type: !5566)
!6092 = !DILocalVariable(name: "ix_", arg: 2, scope: !6087, file: !135, line: 85, type: !7)
!6093 = !DILocation(line: 0, scope: !6087)
!6094 = !DILocation(line: 85, column: 1, scope: !6087)
!6095 = distinct !DISubprogram(name: "create_loop_tree_node_allocnos", scope: !3, file: !3, line: 1538, type: !3459, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6096)
!6096 = !{!6097, !6098, !6102, !6103, !6104}
!6097 = !DILocalVariable(name: "loop_node", arg: 1, scope: !6095, file: !3, line: 1538, type: !1713)
!6098 = !DILocalVariable(name: "i", scope: !6099, file: !3, line: 1544, type: !566)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 1543, column: 5)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 1542, column: 12)
!6101 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 1540, column: 7)
!6102 = !DILocalVariable(name: "ei", scope: !6099, file: !3, line: 1545, type: !4701)
!6103 = !DILocalVariable(name: "e", scope: !6099, file: !3, line: 1546, type: !973)
!6104 = !DILocalVariable(name: "edges", scope: !6099, file: !3, line: 1547, type: !4709)
!6105 = !DILocation(line: 0, scope: !6095)
!6106 = !DILocation(line: 1540, column: 18, scope: !6101)
!6107 = !DILocation(line: 1540, column: 21, scope: !6101)
!6108 = !DILocation(line: 1540, column: 7, scope: !6095)
!6109 = !DILocation(line: 1541, column: 5, scope: !6101)
!6110 = !DILocation(line: 1542, column: 25, scope: !6100)
!6111 = !DILocation(line: 1542, column: 22, scope: !6100)
!6112 = !DILocation(line: 1542, column: 12, scope: !6101)
!6113 = !DILocation(line: 1545, column: 7, scope: !6099)
!6114 = !DILocation(line: 1546, column: 7, scope: !6099)
!6115 = !DILocation(line: 1547, column: 7, scope: !6099)
!6116 = !DILocation(line: 1549, column: 7, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1549, column: 7)
!6118 = !DILocation(line: 0, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1549, column: 7)
!6120 = !DILocation(line: 1549, column: 7, scope: !6119)
!6121 = !DILocation(line: 0, scope: !6099)
!6122 = !DILocation(line: 1550, column: 6, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1550, column: 6)
!6124 = !DILocation(line: 1550, column: 9, scope: !6123)
!6125 = !DILocation(line: 1550, column: 27, scope: !6123)
!6126 = !DILocation(line: 1550, column: 33, scope: !6123)
!6127 = !DILocation(line: 1550, column: 13, scope: !6123)
!6128 = !DILocation(line: 1550, column: 6, scope: !6119)
!6129 = !DILocation(line: 1551, column: 4, scope: !6123)
!6130 = distinct !{!6130, !6116, !6131}
!6131 = !DILocation(line: 1551, column: 27, scope: !6117)
!6132 = !DILocation(line: 1553, column: 47, scope: !6099)
!6133 = !DILocation(line: 1553, column: 15, scope: !6099)
!6134 = !DILocation(line: 1553, column: 13, scope: !6099)
!6135 = !DILocation(line: 1554, column: 12, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1554, column: 7)
!6137 = !DILocation(line: 1554, column: 19, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 1554, column: 7)
!6139 = !DILocation(line: 0, scope: !6136)
!6140 = !DILocation(line: 1554, column: 7, scope: !6136)
!6141 = !DILocation(line: 1555, column: 24, scope: !6138)
!6142 = !DILocation(line: 1555, column: 2, scope: !6138)
!6143 = !DILocation(line: 1554, column: 53, scope: !6138)
!6144 = !DILocation(line: 1554, column: 7, scope: !6138)
!6145 = distinct !{!6145, !6140, !6146}
!6146 = !DILocation(line: 1555, column: 25, scope: !6136)
!6147 = !DILocation(line: 1556, column: 7, scope: !6099)
!6148 = !DILocation(line: 1557, column: 5, scope: !6100)
!6149 = !DILocation(line: 1557, column: 5, scope: !6099)
!6150 = !DILocation(line: 1558, column: 1, scope: !6095)
!6151 = distinct !DISubprogram(name: "propagate_modified_regnos", scope: !3, file: !3, line: 1563, type: !3459, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6152)
!6152 = !{!6153}
!6153 = !DILocalVariable(name: "loop_tree_node", arg: 1, scope: !6151, file: !3, line: 1563, type: !1713)
!6154 = !DILocation(line: 0, scope: !6151)
!6155 = !DILocation(line: 1565, column: 25, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 1565, column: 7)
!6157 = !DILocation(line: 1565, column: 22, scope: !6156)
!6158 = !DILocation(line: 1565, column: 7, scope: !6151)
!6159 = !DILocation(line: 1568, column: 36, scope: !6151)
!6160 = !DILocation(line: 1568, column: 44, scope: !6151)
!6161 = !DILocation(line: 1569, column: 22, scope: !6151)
!6162 = !DILocation(line: 1568, column: 3, scope: !6151)
!6163 = !DILocation(line: 1570, column: 1, scope: !6151)
!6164 = distinct !DISubprogram(name: "create_bb_allocnos", scope: !3, file: !3, line: 1484, type: !3459, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6165)
!6165 = !{!6166, !6167, !6168, !6169, !6170}
!6166 = !DILocalVariable(name: "bb_node", arg: 1, scope: !6164, file: !3, line: 1484, type: !1713)
!6167 = !DILocalVariable(name: "bb", scope: !6164, file: !3, line: 1486, type: !956)
!6168 = !DILocalVariable(name: "insn", scope: !6164, file: !3, line: 1487, type: !583)
!6169 = !DILocalVariable(name: "i", scope: !6164, file: !3, line: 1488, type: !7)
!6170 = !DILocalVariable(name: "bi", scope: !6164, file: !3, line: 1489, type: !6171)
!6171 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !639, line: 218, baseType: !6172)
!6172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 203, size: 256, elements: !6173)
!6173 = !{!6174, !6175, !6176, !6177}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !6172, file: !639, line: 206, baseType: !642, size: 64)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !6172, file: !639, line: 209, baseType: !642, size: 64, offset: 64)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !6172, file: !639, line: 212, baseType: !7, size: 32, offset: 128)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !6172, file: !639, line: 217, baseType: !652, size: 64, offset: 192)
!6178 = !DILocation(line: 0, scope: !6164)
!6179 = !DILocation(line: 1488, column: 3, scope: !6164)
!6180 = !DILocation(line: 1489, column: 3, scope: !6164)
!6181 = !DILocation(line: 1491, column: 27, scope: !6164)
!6182 = !DILocation(line: 1491, column: 11, scope: !6164)
!6183 = !DILocation(line: 1493, column: 3, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1493, column: 3)
!6185 = !DILocation(line: 0, scope: !6184)
!6186 = !DILocation(line: 1493, column: 3, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 1493, column: 3)
!6188 = !DILocation(line: 1494, column: 9, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1494, column: 9)
!6190 = !DILocation(line: 1494, column: 9, scope: !6187)
!6191 = !DILocation(line: 1495, column: 29, scope: !6189)
!6192 = !DILocation(line: 1495, column: 7, scope: !6189)
!6193 = distinct !{!6193, !6183, !6194}
!6194 = !DILocation(line: 1495, column: 50, scope: !6184)
!6195 = !DILocation(line: 1498, column: 3, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1498, column: 3)
!6197 = !DILocation(line: 1498, column: 3, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 1498, column: 3)
!6199 = !DILocation(line: 1499, column: 9, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1499, column: 9)
!6201 = !DILocation(line: 1499, column: 36, scope: !6200)
!6202 = !DILocation(line: 1499, column: 39, scope: !6200)
!6203 = !DILocation(line: 1499, column: 9, scope: !6198)
!6204 = !DILocation(line: 1500, column: 37, scope: !6200)
!6205 = !DILocation(line: 1500, column: 7, scope: !6200)
!6206 = distinct !{!6206, !6195, !6207}
!6207 = !DILocation(line: 1500, column: 60, scope: !6196)
!6208 = !DILocation(line: 1501, column: 1, scope: !6164)
!6209 = distinct !DISubprogram(name: "create_loop_allocnos", scope: !3, file: !3, line: 1507, type: !6210, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6212)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{null, !973}
!6212 = !{!6213, !6214, !6215, !6216, !6217, !6218}
!6213 = !DILocalVariable(name: "e", arg: 1, scope: !6209, file: !3, line: 1507, type: !973)
!6214 = !DILocalVariable(name: "i", scope: !6209, file: !3, line: 1509, type: !7)
!6215 = !DILocalVariable(name: "live_in_regs", scope: !6209, file: !3, line: 1510, type: !1734)
!6216 = !DILocalVariable(name: "border_allocnos", scope: !6209, file: !3, line: 1510, type: !1734)
!6217 = !DILocalVariable(name: "bi", scope: !6209, file: !3, line: 1511, type: !6171)
!6218 = !DILocalVariable(name: "parent", scope: !6209, file: !3, line: 1512, type: !1713)
!6219 = !DILocation(line: 0, scope: !6209)
!6220 = !DILocation(line: 1509, column: 3, scope: !6209)
!6221 = !DILocation(line: 1511, column: 3, scope: !6209)
!6222 = !DILocation(line: 1514, column: 18, scope: !6209)
!6223 = !DILocation(line: 1515, column: 21, scope: !6209)
!6224 = !DILocation(line: 1515, column: 46, scope: !6209)
!6225 = !DILocation(line: 1516, column: 3, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1516, column: 3)
!6227 = !DILocation(line: 1516, column: 3, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 1516, column: 3)
!6229 = !DILocation(line: 1518, column: 37, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 1518, column: 9)
!6231 = !DILocation(line: 1518, column: 9, scope: !6230)
!6232 = !DILocation(line: 1518, column: 9, scope: !6228)
!6233 = !DILocation(line: 1520, column: 6, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1520, column: 6)
!6235 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1519, column: 7)
!6236 = !DILocation(line: 1520, column: 33, scope: !6234)
!6237 = !DILocation(line: 1520, column: 36, scope: !6234)
!6238 = !DILocation(line: 1520, column: 6, scope: !6235)
!6239 = !DILocation(line: 1524, column: 20, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 1524, column: 10)
!6241 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 1521, column: 4)
!6242 = !DILocation(line: 1524, column: 45, scope: !6240)
!6243 = !DILocation(line: 1524, column: 53, scope: !6240)
!6244 = !DILocation(line: 1525, column: 3, scope: !6240)
!6245 = !DILocation(line: 1525, column: 14, scope: !6240)
!6246 = !DILocation(line: 1525, column: 6, scope: !6240)
!6247 = !DILocation(line: 1525, column: 35, scope: !6240)
!6248 = !DILocation(line: 1524, column: 10, scope: !6241)
!6249 = !DILocation(line: 1526, column: 8, scope: !6240)
!6250 = !DILocation(line: 1527, column: 26, scope: !6241)
!6251 = !DILocation(line: 1527, column: 36, scope: !6241)
!6252 = !DILocation(line: 1527, column: 6, scope: !6241)
!6253 = !DILocation(line: 1530, column: 4, scope: !6235)
!6254 = !DILocation(line: 0, scope: !6235)
!6255 = !DILocation(line: 1528, column: 4, scope: !6241)
!6256 = !DILocation(line: 1529, column: 2, scope: !6235)
!6257 = !DILocation(line: 1531, column: 7, scope: !6235)
!6258 = distinct !{!6258, !6225, !6259}
!6259 = !DILocation(line: 1531, column: 7, scope: !6226)
!6260 = !DILocation(line: 1532, column: 1, scope: !6209)
!6261 = distinct !DISubprogram(name: "create_insn_allocnos", scope: !3, file: !3, line: 1421, type: !6262, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6264)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{null, !583, !565}
!6264 = !{!6265, !6266, !6267, !6268, !6269, !6270, !6271, !6274}
!6265 = !DILocalVariable(name: "x", arg: 1, scope: !6261, file: !3, line: 1421, type: !583)
!6266 = !DILocalVariable(name: "output_p", arg: 2, scope: !6261, file: !3, line: 1421, type: !565)
!6267 = !DILocalVariable(name: "i", scope: !6261, file: !3, line: 1423, type: !566)
!6268 = !DILocalVariable(name: "j", scope: !6261, file: !3, line: 1423, type: !566)
!6269 = !DILocalVariable(name: "fmt", scope: !6261, file: !3, line: 1424, type: !571)
!6270 = !DILocalVariable(name: "code", scope: !6261, file: !3, line: 1425, type: !420)
!6271 = !DILocalVariable(name: "regno", scope: !6272, file: !3, line: 1429, type: !566)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1428, column: 5)
!6273 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1427, column: 7)
!6274 = !DILocalVariable(name: "a", scope: !6275, file: !3, line: 1433, type: !573)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1432, column: 2)
!6276 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 1431, column: 11)
!6277 = !DILocation(line: 1465, column: 7, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1463, column: 5)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1461, column: 12)
!6280 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 1456, column: 12)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 1451, column: 12)
!6282 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1445, column: 12)
!6283 = !DILocation(line: 0, scope: !6261)
!6284 = !DILocation(line: 1425, column: 24, scope: !6261)
!6285 = !DILocation(line: 1427, column: 7, scope: !6261)
!6286 = !DILocation(line: 1431, column: 20, scope: !6276)
!6287 = !DILocation(line: 0, scope: !6272)
!6288 = !DILocation(line: 1431, column: 31, scope: !6276)
!6289 = !DILocation(line: 1431, column: 11, scope: !6272)
!6290 = !DILocation(line: 1435, column: 13, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 1435, column: 8)
!6292 = !DILocation(line: 0, scope: !6275)
!6293 = !DILocation(line: 1435, column: 48, scope: !6291)
!6294 = !DILocation(line: 1435, column: 8, scope: !6275)
!6295 = !DILocation(line: 1436, column: 44, scope: !6291)
!6296 = !DILocation(line: 1436, column: 10, scope: !6291)
!6297 = !DILocation(line: 1436, column: 6, scope: !6291)
!6298 = !DILocation(line: 0, scope: !6291)
!6299 = !DILocation(line: 1438, column: 4, scope: !6275)
!6300 = !DILocation(line: 1438, column: 21, scope: !6275)
!6301 = !DILocation(line: 1439, column: 24, scope: !6275)
!6302 = !DILocation(line: 1439, column: 4, scope: !6275)
!6303 = !DILocation(line: 1439, column: 21, scope: !6275)
!6304 = !DILocation(line: 1440, column: 8, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 1440, column: 8)
!6306 = !DILocation(line: 1440, column: 8, scope: !6275)
!6307 = !DILocation(line: 1441, column: 22, scope: !6305)
!6308 = !DILocation(line: 1441, column: 47, scope: !6305)
!6309 = !DILocation(line: 1441, column: 6, scope: !6305)
!6310 = !DILocation(line: 1447, column: 29, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 1446, column: 5)
!6312 = !DILocation(line: 1447, column: 7, scope: !6311)
!6313 = !DILocation(line: 1448, column: 29, scope: !6311)
!6314 = !DILocation(line: 1448, column: 7, scope: !6311)
!6315 = !DILocation(line: 1453, column: 29, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 1452, column: 5)
!6317 = !DILocation(line: 1453, column: 7, scope: !6316)
!6318 = !DILocation(line: 1458, column: 29, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1457, column: 5)
!6320 = !DILocation(line: 1458, column: 7, scope: !6319)
!6321 = !DILocation(line: 1464, column: 29, scope: !6278)
!6322 = !DILocation(line: 1464, column: 7, scope: !6278)
!6323 = !DILocation(line: 0, scope: !6282)
!6324 = !DILocation(line: 1469, column: 9, scope: !6261)
!6325 = !DILocation(line: 1470, column: 12, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1470, column: 3)
!6327 = !DILocation(line: 0, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 1475, column: 2)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 1475, column: 2)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 1474, column: 16)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1472, column: 11)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 1471, column: 5)
!6333 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 1470, column: 3)
!6334 = !DILocation(line: 1470, column: 8, scope: !6326)
!6335 = !DILocation(line: 0, scope: !6326)
!6336 = !DILocation(line: 1470, column: 41, scope: !6333)
!6337 = !DILocation(line: 1470, column: 3, scope: !6326)
!6338 = !DILocation(line: 1472, column: 11, scope: !6331)
!6339 = !DILocation(line: 1472, column: 18, scope: !6331)
!6340 = !DILocation(line: 1472, column: 11, scope: !6332)
!6341 = !DILocation(line: 1473, column: 24, scope: !6331)
!6342 = !DILocation(line: 1473, column: 2, scope: !6331)
!6343 = !DILocation(line: 1474, column: 23, scope: !6330)
!6344 = !DILocation(line: 1474, column: 16, scope: !6331)
!6345 = !DILocation(line: 1475, column: 2, scope: !6329)
!6346 = !DILocation(line: 0, scope: !6329)
!6347 = !DILocation(line: 1475, column: 18, scope: !6328)
!6348 = !DILocation(line: 1475, column: 16, scope: !6328)
!6349 = !DILocation(line: 1476, column: 26, scope: !6328)
!6350 = !DILocation(line: 1476, column: 4, scope: !6328)
!6351 = !DILocation(line: 1475, column: 35, scope: !6328)
!6352 = !DILocation(line: 1475, column: 2, scope: !6328)
!6353 = distinct !{!6353, !6345, !6354}
!6354 = !DILocation(line: 1476, column: 53, scope: !6329)
!6355 = !DILocation(line: 1470, column: 3, scope: !6333)
!6356 = distinct !{!6356, !6337, !6357}
!6357 = !DILocation(line: 1477, column: 5, scope: !6326)
!6358 = !DILocation(line: 1478, column: 1, scope: !6261)
!6359 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !639, file: !639, line: 224, type: !6360, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6366)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{null, !6362, !6363, !7, !3560}
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6363 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !584, line: 48, baseType: !6364)
!6364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6365, size: 64)
!6365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!6366 = !{!6367, !6368, !6369, !6370}
!6367 = !DILocalVariable(name: "bi", arg: 1, scope: !6359, file: !639, line: 224, type: !6362)
!6368 = !DILocalVariable(name: "map", arg: 2, scope: !6359, file: !639, line: 224, type: !6363)
!6369 = !DILocalVariable(name: "start_bit", arg: 3, scope: !6359, file: !639, line: 225, type: !7)
!6370 = !DILocalVariable(name: "bit_no", arg: 4, scope: !6359, file: !639, line: 225, type: !3560)
!6371 = !DILocation(line: 0, scope: !6359)
!6372 = !DILocation(line: 227, column: 19, scope: !6359)
!6373 = !DILocation(line: 227, column: 12, scope: !6359)
!6374 = !DILocation(line: 228, column: 7, scope: !6359)
!6375 = !DILocation(line: 228, column: 12, scope: !6359)
!6376 = !DILocation(line: 0, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !639, line: 233, column: 11)
!6378 = distinct !DILexicalBlock(scope: !6359, file: !639, line: 232, column: 5)
!6379 = !DILocation(line: 231, column: 3, scope: !6359)
!6380 = !DILocation(line: 233, column: 12, scope: !6377)
!6381 = !DILocation(line: 233, column: 11, scope: !6378)
!6382 = !DILocation(line: 235, column: 13, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6377, file: !639, line: 234, column: 2)
!6384 = !DILocation(line: 236, column: 4, scope: !6383)
!6385 = !DILocation(line: 239, column: 11, scope: !6378)
!6386 = distinct !{!6386, !6379, !6387}
!6387 = !DILocation(line: 242, column: 5, scope: !6359)
!6388 = !DILocation(line: 245, column: 11, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6359, file: !639, line: 245, column: 7)
!6390 = !DILocation(line: 245, column: 17, scope: !6389)
!6391 = !DILocation(line: 245, column: 22, scope: !6389)
!6392 = !DILocation(line: 245, column: 7, scope: !6359)
!6393 = !DILocation(line: 246, column: 27, scope: !6389)
!6394 = !DILocation(line: 246, column: 32, scope: !6389)
!6395 = !DILocation(line: 246, column: 5, scope: !6389)
!6396 = !DILocation(line: 249, column: 7, scope: !6359)
!6397 = !DILocation(line: 249, column: 15, scope: !6359)
!6398 = !DILocation(line: 250, column: 14, scope: !6359)
!6399 = !DILocation(line: 251, column: 26, scope: !6359)
!6400 = !DILocation(line: 251, column: 7, scope: !6359)
!6401 = !DILocation(line: 251, column: 12, scope: !6359)
!6402 = !DILocation(line: 257, column: 16, scope: !6359)
!6403 = !DILocation(line: 257, column: 13, scope: !6359)
!6404 = !DILocation(line: 259, column: 11, scope: !6359)
!6405 = !DILocation(line: 260, column: 1, scope: !6359)
!6406 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !1839, file: !1839, line: 1052, type: !6407, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6409)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!1837, !7}
!6409 = !{!6410}
!6410 = !DILocalVariable(name: "index", arg: 1, scope: !6406, file: !1839, line: 1052, type: !7)
!6411 = !DILocation(line: 0, scope: !6406)
!6412 = !DILocation(line: 1054, column: 15, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6406, file: !1839, line: 1054, column: 7)
!6414 = !DILocation(line: 1054, column: 22, scope: !6413)
!6415 = !DILocation(line: 1054, column: 13, scope: !6413)
!6416 = !DILocation(line: 1054, column: 7, scope: !6406)
!6417 = !DILocation(line: 1055, column: 44, scope: !6413)
!6418 = !DILocation(line: 1055, column: 37, scope: !6413)
!6419 = !DILocation(line: 1055, column: 5, scope: !6413)
!6420 = !DILocation(line: 0, scope: !6413)
!6421 = !DILocation(line: 1058, column: 1, scope: !6406)
!6422 = distinct !DISubprogram(name: "bmp_iter_set", scope: !639, file: !639, line: 393, type: !6423, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6425)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{!565, !6362, !3560}
!6425 = !{!6426, !6427, !6428}
!6426 = !DILocalVariable(name: "bi", arg: 1, scope: !6422, file: !639, line: 393, type: !6362)
!6427 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6422, file: !639, line: 393, type: !3560)
!6428 = !DILabel(scope: !6429, name: "next_bit", file: !639, line: 398)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !639, line: 397, column: 5)
!6430 = distinct !DILexicalBlock(scope: !6422, file: !639, line: 396, column: 7)
!6431 = !DILocation(line: 0, scope: !6422)
!6432 = !DILocation(line: 396, column: 11, scope: !6430)
!6433 = !DILocation(line: 396, column: 7, scope: !6430)
!6434 = !DILocation(line: 396, column: 7, scope: !6422)
!6435 = !DILocation(line: 419, column: 15, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !639, line: 418, column: 2)
!6437 = distinct !DILexicalBlock(scope: !6422, file: !639, line: 415, column: 5)
!6438 = !DILocation(line: 399, column: 7, scope: !6429)
!6439 = !DILocation(line: 398, column: 5, scope: !6429)
!6440 = !DILocation(line: 399, column: 20, scope: !6429)
!6441 = !DILocation(line: 399, column: 25, scope: !6429)
!6442 = !DILocation(line: 399, column: 14, scope: !6429)
!6443 = !DILocation(line: 401, column: 13, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6429, file: !639, line: 400, column: 2)
!6445 = !DILocation(line: 402, column: 12, scope: !6444)
!6446 = distinct !{!6446, !6438, !6447}
!6447 = !DILocation(line: 403, column: 2, scope: !6429)
!6448 = !DILocation(line: 410, column: 15, scope: !6422)
!6449 = !DILocation(line: 410, column: 42, scope: !6422)
!6450 = !DILocation(line: 411, column: 26, scope: !6422)
!6451 = !DILocation(line: 410, column: 11, scope: !6422)
!6452 = !DILocation(line: 412, column: 7, scope: !6422)
!6453 = !DILocation(line: 412, column: 14, scope: !6422)
!6454 = !DILocation(line: 0, scope: !6437)
!6455 = !DILocation(line: 414, column: 3, scope: !6422)
!6456 = !DILocation(line: 417, column: 7, scope: !6437)
!6457 = !DILocation(line: 417, column: 18, scope: !6437)
!6458 = !DILocation(line: 417, column: 26, scope: !6437)
!6459 = !DILocation(line: 419, column: 13, scope: !6436)
!6460 = !DILocation(line: 420, column: 8, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6436, file: !639, line: 420, column: 8)
!6462 = !DILocation(line: 420, column: 8, scope: !6436)
!6463 = !DILocation(line: 422, column: 12, scope: !6436)
!6464 = !DILocation(line: 423, column: 15, scope: !6436)
!6465 = distinct !{!6465, !6456, !6466}
!6466 = !DILocation(line: 424, column: 2, scope: !6437)
!6467 = !DILocation(line: 427, column: 28, scope: !6437)
!6468 = !DILocation(line: 427, column: 16, scope: !6437)
!6469 = !DILocation(line: 428, column: 12, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6437, file: !639, line: 428, column: 11)
!6471 = !DILocation(line: 428, column: 11, scope: !6437)
!6472 = !DILocation(line: 430, column: 27, scope: !6437)
!6473 = !DILocation(line: 430, column: 32, scope: !6437)
!6474 = !DILocation(line: 430, column: 15, scope: !6437)
!6475 = !DILocation(line: 431, column: 19, scope: !6437)
!6476 = distinct !{!6476, !6455, !6477}
!6477 = !DILocation(line: 432, column: 5, scope: !6422)
!6478 = !DILocation(line: 433, column: 1, scope: !6422)
!6479 = distinct !DISubprogram(name: "bmp_iter_next", scope: !639, file: !639, line: 382, type: !6480, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6482)
!6480 = !DISubroutineType(types: !6481)
!6481 = !{null, !6362, !3560}
!6482 = !{!6483, !6484}
!6483 = !DILocalVariable(name: "bi", arg: 1, scope: !6479, file: !639, line: 382, type: !6362)
!6484 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6479, file: !639, line: 382, type: !3560)
!6485 = !DILocation(line: 0, scope: !6479)
!6486 = !DILocation(line: 384, column: 7, scope: !6479)
!6487 = !DILocation(line: 384, column: 12, scope: !6479)
!6488 = !DILocation(line: 385, column: 11, scope: !6479)
!6489 = !DILocation(line: 386, column: 1, scope: !6479)
!6490 = distinct !DISubprogram(name: "mark_all_loops_for_removal", scope: !3, file: !3, line: 1760, type: !3362, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6491)
!6491 = !{!6492, !6493}
!6492 = !DILocalVariable(name: "i", scope: !6490, file: !3, line: 1762, type: !566)
!6493 = !DILocalVariable(name: "loop", scope: !6490, file: !3, line: 1763, type: !1025)
!6494 = !DILocation(line: 1763, column: 3, scope: !6490)
!6495 = !DILocation(line: 0, scope: !6490)
!6496 = !DILocation(line: 1765, column: 8, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 1765, column: 3)
!6498 = !DILocation(line: 0, scope: !6497)
!6499 = !DILocation(line: 1765, column: 15, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 1765, column: 3)
!6501 = !DILocation(line: 1765, column: 3, scope: !6497)
!6502 = !DILocation(line: 1766, column: 9, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 1766, column: 9)
!6504 = !DILocation(line: 1766, column: 27, scope: !6503)
!6505 = !DILocation(line: 1766, column: 45, scope: !6503)
!6506 = !DILocation(line: 1766, column: 9, scope: !6500)
!6507 = !DILocation(line: 1768, column: 24, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1768, column: 6)
!6509 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 1767, column: 7)
!6510 = !DILocation(line: 1768, column: 31, scope: !6508)
!6511 = !DILocation(line: 0, scope: !6509)
!6512 = !DILocation(line: 1768, column: 6, scope: !6509)
!6513 = !DILocation(line: 1771, column: 36, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1769, column: 4)
!6515 = !DILocation(line: 1772, column: 6, scope: !6514)
!6516 = !DILocation(line: 1774, column: 32, scope: !6509)
!6517 = !DILocation(line: 1775, column: 6, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1775, column: 6)
!6519 = !DILocation(line: 1775, column: 32, scope: !6518)
!6520 = !DILocation(line: 1775, column: 39, scope: !6518)
!6521 = !DILocation(line: 1775, column: 53, scope: !6518)
!6522 = !DILocation(line: 1775, column: 36, scope: !6518)
!6523 = !DILocation(line: 1779, column: 7, scope: !6518)
!6524 = !DILocation(line: 1779, column: 25, scope: !6518)
!6525 = !DILocation(line: 1779, column: 31, scope: !6518)
!6526 = !DILocation(line: 1780, column: 31, scope: !6518)
!6527 = !DILocation(line: 1780, column: 39, scope: !6518)
!6528 = !DILocation(line: 1781, column: 39, scope: !6518)
!6529 = !DILocation(line: 1782, column: 7, scope: !6518)
!6530 = !DILocation(line: 1776, column: 4, scope: !6518)
!6531 = !DILocation(line: 1765, column: 65, scope: !6500)
!6532 = !DILocation(line: 1765, column: 3, scope: !6500)
!6533 = distinct !{!6533, !6501, !6534}
!6534 = !DILocation(line: 1783, column: 7, scope: !6497)
!6535 = !DILocation(line: 1784, column: 1, scope: !6490)
!6536 = distinct !DISubprogram(name: "mark_loops_for_removal", scope: !3, file: !3, line: 1712, type: !3362, scopeLine: 1713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6537)
!6537 = !{!6538, !6539, !6540, !6541}
!6538 = !DILocalVariable(name: "i", scope: !6536, file: !3, line: 1714, type: !566)
!6539 = !DILocalVariable(name: "n", scope: !6536, file: !3, line: 1714, type: !566)
!6540 = !DILocalVariable(name: "sorted_loops", scope: !6536, file: !3, line: 1715, type: !1845)
!6541 = !DILocalVariable(name: "loop", scope: !6536, file: !3, line: 1716, type: !1025)
!6542 = !DILocation(line: 1716, column: 3, scope: !6536)
!6543 = !DILocation(line: 1720, column: 13, scope: !6536)
!6544 = !DILocation(line: 1720, column: 11, scope: !6536)
!6545 = !DILocation(line: 1719, column: 32, scope: !6536)
!6546 = !DILocation(line: 1719, column: 7, scope: !6536)
!6547 = !DILocation(line: 0, scope: !6536)
!6548 = !DILocation(line: 1722, column: 8, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 1722, column: 3)
!6550 = !DILocation(line: 1722, column: 10, scope: !6549)
!6551 = !DILocation(line: 1722, column: 19, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1722, column: 3)
!6553 = !DILocation(line: 1722, column: 3, scope: !6549)
!6554 = !DILocation(line: 1723, column: 9, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1723, column: 9)
!6556 = !DILocation(line: 1723, column: 27, scope: !6555)
!6557 = !DILocation(line: 1723, column: 45, scope: !6555)
!6558 = !DILocation(line: 1723, column: 9, scope: !6552)
!6559 = !DILocation(line: 1725, column: 24, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 1725, column: 6)
!6561 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 1724, column: 7)
!6562 = !DILocation(line: 1725, column: 31, scope: !6560)
!6563 = !DILocation(line: 1725, column: 6, scope: !6561)
!6564 = !DILocation(line: 1728, column: 24, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1726, column: 4)
!6566 = !DILocation(line: 1728, column: 36, scope: !6565)
!6567 = !DILocation(line: 1729, column: 6, scope: !6565)
!6568 = !DILocation(line: 0, scope: !6561)
!6569 = !DILocation(line: 1731, column: 16, scope: !6561)
!6570 = !DILocation(line: 1731, column: 2, scope: !6561)
!6571 = !DILocation(line: 1731, column: 20, scope: !6561)
!6572 = !DILocation(line: 1733, column: 33, scope: !6561)
!6573 = !DILocation(line: 1733, column: 51, scope: !6561)
!6574 = !DILocation(line: 1733, column: 7, scope: !6561)
!6575 = !DILocation(line: 1734, column: 7, scope: !6561)
!6576 = !DILocation(line: 1734, column: 37, scope: !6561)
!6577 = !DILocation(line: 1734, column: 10, scope: !6561)
!6578 = !DILocation(line: 1733, column: 6, scope: !6561)
!6579 = !DILocation(line: 1732, column: 2, scope: !6561)
!6580 = !DILocation(line: 1732, column: 20, scope: !6561)
!6581 = !DILocation(line: 1733, column: 4, scope: !6561)
!6582 = !DILocation(line: 1735, column: 7, scope: !6561)
!6583 = !DILocation(line: 0, scope: !6549)
!6584 = !DILocation(line: 1722, column: 69, scope: !6552)
!6585 = !DILocation(line: 1722, column: 3, scope: !6552)
!6586 = distinct !{!6586, !6553, !6587}
!6587 = !DILocation(line: 1735, column: 7, scope: !6549)
!6588 = !DILocation(line: 1737, column: 29, scope: !6536)
!6589 = !DILocation(line: 1737, column: 3, scope: !6536)
!6590 = !DILocation(line: 1741, column: 8, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 1741, column: 3)
!6592 = !DILocation(line: 0, scope: !6591)
!6593 = !DILocation(line: 1741, column: 17, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 1741, column: 3)
!6595 = !DILocation(line: 1741, column: 27, scope: !6594)
!6596 = !DILocation(line: 1741, column: 25, scope: !6594)
!6597 = !DILocation(line: 1741, column: 3, scope: !6591)
!6598 = !DILocation(line: 1743, column: 7, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1742, column: 5)
!6600 = !DILocation(line: 1743, column: 24, scope: !6599)
!6601 = !DILocation(line: 1743, column: 36, scope: !6599)
!6602 = !DILocation(line: 1744, column: 11, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 1744, column: 11)
!6604 = !DILocation(line: 1744, column: 37, scope: !6603)
!6605 = !DILocation(line: 1744, column: 44, scope: !6603)
!6606 = !DILocation(line: 1744, column: 58, scope: !6603)
!6607 = !DILocation(line: 1744, column: 41, scope: !6603)
!6608 = !DILocation(line: 1748, column: 5, scope: !6603)
!6609 = !DILocation(line: 1748, column: 22, scope: !6603)
!6610 = !DILocation(line: 1748, column: 28, scope: !6603)
!6611 = !DILocation(line: 1748, column: 56, scope: !6603)
!6612 = !DILocation(line: 1748, column: 64, scope: !6603)
!6613 = !DILocation(line: 1749, column: 36, scope: !6603)
!6614 = !DILocation(line: 1750, column: 5, scope: !6603)
!6615 = !DILocation(line: 1751, column: 31, scope: !6603)
!6616 = !DILocation(line: 1751, column: 48, scope: !6603)
!6617 = !DILocation(line: 1751, column: 5, scope: !6603)
!6618 = !DILocation(line: 1752, column: 5, scope: !6603)
!6619 = !DILocation(line: 1752, column: 34, scope: !6603)
!6620 = !DILocation(line: 1752, column: 8, scope: !6603)
!6621 = !DILocation(line: 0, scope: !6603)
!6622 = !DILocation(line: 1745, column: 2, scope: !6603)
!6623 = !DILocation(line: 1741, column: 47, scope: !6594)
!6624 = !DILocation(line: 1741, column: 3, scope: !6594)
!6625 = distinct !{!6625, !6597, !6626}
!6626 = !DILocation(line: 1754, column: 5, scope: !6591)
!6627 = !DILocation(line: 1755, column: 3, scope: !6536)
!6628 = !DILocation(line: 1756, column: 1, scope: !6536)
!6629 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_heap_alloc", scope: !3, file: !3, line: 1788, type: !6630, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6632)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!1848, !566}
!6632 = !{!6633}
!6633 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6629, file: !3, line: 1788, type: !566)
!6634 = !DILocation(line: 0, scope: !6629)
!6635 = !DILocation(line: 1788, column: 1, scope: !6629)
!6636 = distinct !DISubprogram(name: "remove_uneccesary_loop_nodes_from_loop_tree", scope: !3, file: !3, line: 1799, type: !3459, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6637)
!6637 = !{!6638, !6639, !6640, !6641}
!6638 = !DILocalVariable(name: "node", arg: 1, scope: !6636, file: !3, line: 1799, type: !1713)
!6639 = !DILocalVariable(name: "start", scope: !6636, file: !3, line: 1801, type: !7)
!6640 = !DILocalVariable(name: "remove_p", scope: !6636, file: !3, line: 1802, type: !565)
!6641 = !DILocalVariable(name: "subnode", scope: !6636, file: !3, line: 1803, type: !1713)
!6642 = !DILocation(line: 0, scope: !6636)
!6643 = !DILocation(line: 1805, column: 20, scope: !6636)
!6644 = !DILocation(line: 1806, column: 9, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1806, column: 7)
!6646 = !DILocation(line: 1806, column: 7, scope: !6636)
!6647 = !DILocation(line: 1807, column: 5, scope: !6645)
!6648 = !DILocation(line: 1808, column: 11, scope: !6636)
!6649 = !DILocation(line: 1809, column: 24, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1809, column: 3)
!6651 = !DILocation(line: 1809, column: 8, scope: !6650)
!6652 = !DILocation(line: 0, scope: !6650)
!6653 = !DILocation(line: 1809, column: 42, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 1809, column: 3)
!6655 = !DILocation(line: 1809, column: 3, scope: !6650)
!6656 = !DILocation(line: 1810, column: 18, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 1810, column: 9)
!6658 = !DILocation(line: 1810, column: 21, scope: !6657)
!6659 = !DILocation(line: 1810, column: 9, scope: !6654)
!6660 = !DILocation(line: 1811, column: 7, scope: !6657)
!6661 = !DILocation(line: 1813, column: 7, scope: !6657)
!6662 = !DILocation(line: 1809, column: 70, scope: !6654)
!6663 = !DILocation(line: 1809, column: 3, scope: !6654)
!6664 = distinct !{!6664, !6655, !6665}
!6665 = !DILocation(line: 1813, column: 7, scope: !6650)
!6666 = !DILocation(line: 1814, column: 26, scope: !6636)
!6667 = !DILocation(line: 1814, column: 35, scope: !6636)
!6668 = !DILocation(line: 1814, column: 18, scope: !6636)
!6669 = !DILocation(line: 1815, column: 7, scope: !6636)
!6670 = !DILocation(line: 0, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1821, column: 5)
!6672 = !DILocation(line: 0, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1827, column: 2)
!6674 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 1826, column: 11)
!6675 = !DILocation(line: 1820, column: 3, scope: !6636)
!6676 = !DILocation(line: 1817, column: 7, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1816, column: 5)
!6678 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1815, column: 7)
!6679 = !DILocation(line: 1818, column: 7, scope: !6677)
!6680 = !DILocation(line: 1820, column: 10, scope: !6636)
!6681 = !DILocation(line: 1820, column: 58, scope: !6636)
!6682 = !DILocation(line: 1822, column: 17, scope: !6671)
!6683 = !DILocation(line: 1823, column: 16, scope: !6671)
!6684 = !DILocation(line: 1823, column: 23, scope: !6671)
!6685 = !DILocation(line: 1824, column: 29, scope: !6671)
!6686 = !DILocation(line: 1824, column: 16, scope: !6671)
!6687 = !DILocation(line: 1824, column: 21, scope: !6671)
!6688 = !DILocation(line: 1825, column: 22, scope: !6671)
!6689 = !DILocation(line: 1826, column: 20, scope: !6674)
!6690 = !DILocation(line: 1826, column: 23, scope: !6674)
!6691 = !DILocation(line: 1826, column: 11, scope: !6671)
!6692 = !DILocation(line: 1828, column: 34, scope: !6673)
!6693 = !DILocation(line: 1828, column: 13, scope: !6673)
!6694 = !DILocation(line: 1828, column: 26, scope: !6673)
!6695 = !DILocation(line: 1829, column: 19, scope: !6673)
!6696 = !DILocation(line: 1830, column: 2, scope: !6673)
!6697 = distinct !{!6697, !6675, !6698}
!6698 = !DILocation(line: 1831, column: 5, scope: !6636)
!6699 = !DILocation(line: 1832, column: 1, scope: !6636)
!6700 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_heap_free", scope: !3, file: !3, line: 1788, type: !6701, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6704)
!6701 = !DISubroutineType(types: !6702)
!6702 = !{null, !6703}
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!6704 = !{!6705}
!6705 = !DILocalVariable(name: "vec_", arg: 1, scope: !6700, file: !3, line: 1788, type: !6703)
!6706 = !DILocation(line: 0, scope: !6700)
!6707 = !DILocation(line: 1788, column: 1, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1788, column: 1)
!6709 = !DILocation(line: 1788, column: 1, scope: !6700)
!6710 = distinct !DISubprogram(name: "remove_low_level_allocnos", scope: !3, file: !3, line: 2012, type: !3362, scopeLine: 2013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6711)
!6711 = !{!6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719, !6720}
!6712 = !DILocalVariable(name: "regno", scope: !6710, file: !3, line: 2014, type: !566)
!6713 = !DILocalVariable(name: "merged_p", scope: !6710, file: !3, line: 2015, type: !565)
!6714 = !DILocalVariable(name: "propagate_p", scope: !6710, file: !3, line: 2015, type: !565)
!6715 = !DILocalVariable(name: "a", scope: !6710, file: !3, line: 2016, type: !573)
!6716 = !DILocalVariable(name: "top_a", scope: !6710, file: !3, line: 2016, type: !573)
!6717 = !DILocalVariable(name: "a_node", scope: !6710, file: !3, line: 2017, type: !1713)
!6718 = !DILocalVariable(name: "parent", scope: !6710, file: !3, line: 2017, type: !1713)
!6719 = !DILocalVariable(name: "r", scope: !6710, file: !3, line: 2018, type: !1767)
!6720 = !DILocalVariable(name: "ai", scope: !6710, file: !3, line: 2019, type: !3548)
!6721 = !DILocation(line: 2016, column: 3, scope: !6710)
!6722 = !DILocation(line: 2019, column: 3, scope: !6710)
!6723 = !DILocation(line: 0, scope: !6710)
!6724 = !DILocation(line: 2022, column: 3, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2022, column: 3)
!6726 = !DILocation(line: 2022, column: 3, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 2022, column: 3)
!6728 = !DILocation(line: 2024, column: 16, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 2023, column: 5)
!6730 = !DILocation(line: 2025, column: 21, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 2025, column: 11)
!6732 = !DILocation(line: 2025, column: 18, scope: !6731)
!6733 = !DILocation(line: 2025, column: 40, scope: !6731)
!6734 = !DILocation(line: 2025, column: 43, scope: !6731)
!6735 = !DILocation(line: 2025, column: 66, scope: !6731)
!6736 = !DILocation(line: 2025, column: 11, scope: !6729)
!6737 = !DILocation(line: 2026, column: 2, scope: !6731)
!6738 = distinct !{!6738, !6724, !6739}
!6739 = !DILocation(line: 2045, column: 5, scope: !6725)
!6740 = !DILocation(line: 2027, column: 15, scope: !6729)
!6741 = !DILocation(line: 2028, column: 40, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 2028, column: 11)
!6743 = !DILocation(line: 2028, column: 20, scope: !6742)
!6744 = !DILocation(line: 2028, column: 66, scope: !6742)
!6745 = !DILocation(line: 2028, column: 11, scope: !6729)
!6746 = !DILocation(line: 2030, column: 31, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 2029, column: 2)
!6748 = !DILocation(line: 2031, column: 51, scope: !6747)
!6749 = !DILocation(line: 2031, column: 24, scope: !6747)
!6750 = !DILocation(line: 2031, column: 4, scope: !6747)
!6751 = !DILocation(line: 2031, column: 49, scope: !6747)
!6752 = !DILocation(line: 2032, column: 4, scope: !6747)
!6753 = !DILocation(line: 2034, column: 29, scope: !6729)
!6754 = !DILocation(line: 2034, column: 37, scope: !6729)
!6755 = !DILocation(line: 2034, column: 21, scope: !6729)
!6756 = !DILocation(line: 2034, column: 62, scope: !6729)
!6757 = !DILocation(line: 2037, column: 11, scope: !6729)
!6758 = !DILocation(line: 2038, column: 7, scope: !6729)
!6759 = !DILocation(line: 2040, column: 38, scope: !6729)
!6760 = !DILocation(line: 2040, column: 4, scope: !6729)
!6761 = !DILocation(line: 2040, column: 2, scope: !6729)
!6762 = !DILocation(line: 2042, column: 7, scope: !6729)
!6763 = !DILocation(line: 2042, column: 31, scope: !6729)
!6764 = !DILocation(line: 2043, column: 11, scope: !6729)
!6765 = !DILocation(line: 2044, column: 2, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 2043, column: 11)
!6767 = !DILocation(line: 2046, column: 3, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2046, column: 3)
!6769 = !DILocation(line: 2046, column: 3, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 2046, column: 3)
!6771 = !DILocation(line: 2049, column: 11, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2047, column: 5)
!6773 = !DILocation(line: 2053, column: 11, scope: !6772)
!6774 = distinct !{!6774, !6767, !6775}
!6775 = !DILocation(line: 2057, column: 5, scope: !6768)
!6776 = !DILocation(line: 2058, column: 3, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2058, column: 3)
!6778 = !DILocation(line: 2058, column: 3, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 2058, column: 3)
!6780 = !DILocation(line: 2060, column: 15, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 2059, column: 5)
!6782 = !DILocation(line: 2061, column: 11, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 2061, column: 11)
!6784 = !DILocation(line: 2061, column: 31, scope: !6783)
!6785 = !DILocation(line: 2061, column: 56, scope: !6783)
!6786 = !DILocation(line: 2061, column: 11, scope: !6781)
!6787 = !DILocation(line: 2063, column: 4, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 2062, column: 2)
!6789 = !DILocation(line: 2063, column: 33, scope: !6788)
!6790 = !DILocation(line: 2064, column: 4, scope: !6788)
!6791 = !DILocation(line: 2064, column: 35, scope: !6788)
!6792 = !DILocation(line: 2065, column: 4, scope: !6788)
!6793 = !DILocation(line: 2065, column: 27, scope: !6788)
!6794 = !DILocation(line: 2066, column: 4, scope: !6788)
!6795 = !DILocation(line: 2069, column: 8, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 2069, column: 8)
!6797 = !DILocation(line: 2069, column: 8, scope: !6788)
!6798 = !DILocation(line: 2070, column: 33, scope: !6796)
!6799 = !DILocation(line: 2070, column: 6, scope: !6796)
!6800 = !DILocation(line: 2074, column: 2, scope: !6783)
!6801 = distinct !{!6801, !6776, !6802}
!6802 = !DILocation(line: 2075, column: 5, scope: !6777)
!6803 = !DILocation(line: 2076, column: 7, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2076, column: 7)
!6805 = !DILocation(line: 2076, column: 7, scope: !6710)
!6806 = !DILocation(line: 2077, column: 5, scope: !6804)
!6807 = !DILocation(line: 2078, column: 1, scope: !6710)
!6808 = distinct !DISubprogram(name: "remove_unnecessary_allocnos", scope: !3, file: !3, line: 1935, type: !3362, scopeLine: 1936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6809)
!6809 = !{!6810, !6811, !6812, !6813, !6814, !6815, !6816, !6817, !6818, !6819}
!6810 = !DILocalVariable(name: "regno", scope: !6808, file: !3, line: 1937, type: !566)
!6811 = !DILocalVariable(name: "merged_p", scope: !6808, file: !3, line: 1938, type: !565)
!6812 = !DILocalVariable(name: "rebuild_p", scope: !6808, file: !3, line: 1938, type: !565)
!6813 = !DILocalVariable(name: "a", scope: !6808, file: !3, line: 1939, type: !573)
!6814 = !DILocalVariable(name: "prev_a", scope: !6808, file: !3, line: 1939, type: !573)
!6815 = !DILocalVariable(name: "next_a", scope: !6808, file: !3, line: 1939, type: !573)
!6816 = !DILocalVariable(name: "parent_a", scope: !6808, file: !3, line: 1939, type: !573)
!6817 = !DILocalVariable(name: "a_node", scope: !6808, file: !3, line: 1940, type: !1713)
!6818 = !DILocalVariable(name: "parent", scope: !6808, file: !3, line: 1940, type: !1713)
!6819 = !DILocalVariable(name: "r", scope: !6808, file: !3, line: 1941, type: !1767)
!6820 = !DILocation(line: 0, scope: !6808)
!6821 = !DILocation(line: 1944, column: 18, scope: !6808)
!6822 = !DILocation(line: 1945, column: 16, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 1945, column: 3)
!6824 = !DILocation(line: 1945, column: 8, scope: !6823)
!6825 = !DILocation(line: 1943, column: 12, scope: !6808)
!6826 = !DILocation(line: 0, scope: !6823)
!6827 = !DILocation(line: 1945, column: 42, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 1945, column: 3)
!6829 = !DILocation(line: 1945, column: 3, scope: !6823)
!6830 = !DILocation(line: 1948, column: 31, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 1948, column: 7)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 1946, column: 5)
!6833 = !DILocation(line: 1948, column: 12, scope: !6831)
!6834 = !DILocation(line: 0, scope: !6831)
!6835 = !DILocation(line: 0, scope: !6832)
!6836 = !DILocation(line: 1949, column: 7, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 1948, column: 7)
!6838 = !DILocation(line: 1948, column: 7, scope: !6831)
!6839 = !DILocation(line: 1952, column: 13, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 1951, column: 2)
!6841 = !DILocation(line: 1953, column: 13, scope: !6840)
!6842 = !DILocation(line: 1954, column: 18, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1954, column: 8)
!6844 = !DILocation(line: 1954, column: 10, scope: !6843)
!6845 = !DILocation(line: 1954, column: 8, scope: !6840)
!6846 = !DILocation(line: 1958, column: 13, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 1958, column: 8)
!6848 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1957, column: 6)
!6849 = !DILocation(line: 0, scope: !6847)
!6850 = !DILocation(line: 1959, column: 26, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1958, column: 8)
!6852 = !DILocation(line: 1959, column: 18, scope: !6851)
!6853 = !DILocation(line: 1960, column: 8, scope: !6851)
!6854 = !DILocation(line: 1960, column: 19, scope: !6851)
!6855 = !DILocation(line: 1958, column: 8, scope: !6847)
!6856 = !DILocation(line: 1958, column: 8, scope: !6851)
!6857 = distinct !{!6857, !6855, !6858}
!6858 = !DILocation(line: 1962, column: 3, scope: !6847)
!6859 = !DILocation(line: 1963, column: 12, scope: !6848)
!6860 = !DILocation(line: 1969, column: 32, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 1964, column: 3)
!6862 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 1963, column: 12)
!6863 = !DILocation(line: 1970, column: 13, scope: !6861)
!6864 = !DILocation(line: 1970, column: 5, scope: !6861)
!6865 = !DILocation(line: 1970, column: 38, scope: !6861)
!6866 = !DILocation(line: 1971, column: 29, scope: !6861)
!6867 = !DILocation(line: 1971, column: 43, scope: !6861)
!6868 = !DILocation(line: 1971, column: 5, scope: !6861)
!6869 = !DILocation(line: 1973, column: 3, scope: !6861)
!6870 = !DILocation(line: 1978, column: 16, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1978, column: 9)
!6872 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 1975, column: 3)
!6873 = !DILocation(line: 1978, column: 9, scope: !6872)
!6874 = !DILocation(line: 1979, column: 7, scope: !6871)
!6875 = !DILocation(line: 1979, column: 36, scope: !6871)
!6876 = !DILocation(line: 1981, column: 7, scope: !6871)
!6877 = !DILocation(line: 1981, column: 43, scope: !6871)
!6878 = !DILocation(line: 1982, column: 9, scope: !6872)
!6879 = !DILocation(line: 1983, column: 5, scope: !6872)
!6880 = !DILocation(line: 1986, column: 13, scope: !6872)
!6881 = !DILocation(line: 1985, column: 9, scope: !6872)
!6882 = !DILocation(line: 1985, column: 7, scope: !6872)
!6883 = !DILocation(line: 1988, column: 29, scope: !6872)
!6884 = !DILocation(line: 1989, column: 5, scope: !6872)
!6885 = !DILocation(line: 1990, column: 5, scope: !6872)
!6886 = !DILocation(line: 0, scope: !6843)
!6887 = !DILocation(line: 1948, column: 7, scope: !6837)
!6888 = distinct !{!6888, !6838, !6889}
!6889 = !DILocation(line: 1993, column: 2, scope: !6831)
!6890 = !DILocation(line: 1994, column: 11, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 1994, column: 11)
!6892 = !DILocation(line: 1994, column: 11, scope: !6832)
!6893 = !DILocation(line: 1997, column: 8, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 1997, column: 8)
!6895 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 1996, column: 2)
!6896 = !DILocation(line: 1997, column: 23, scope: !6894)
!6897 = !DILocation(line: 1997, column: 8, scope: !6895)
!6898 = !DILocation(line: 2000, column: 9, scope: !6894)
!6899 = !DILocation(line: 2000, column: 7, scope: !6894)
!6900 = !DILocation(line: 1999, column: 28, scope: !6894)
!6901 = !DILocation(line: 1999, column: 8, scope: !6894)
!6902 = !DILocation(line: 1998, column: 6, scope: !6894)
!6903 = !DILocation(line: 2001, column: 4, scope: !6895)
!6904 = !DILocation(line: 2002, column: 2, scope: !6895)
!6905 = !DILocation(line: 1945, column: 3, scope: !6828)
!6906 = distinct !{!6906, !6829, !6907}
!6907 = !DILocation(line: 2003, column: 5, scope: !6823)
!6908 = !DILocation(line: 2004, column: 7, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 2004, column: 7)
!6910 = !DILocation(line: 2004, column: 7, scope: !6808)
!6911 = !DILocation(line: 2005, column: 5, scope: !6909)
!6912 = !DILocation(line: 2006, column: 7, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 2006, column: 7)
!6914 = !DILocation(line: 2006, column: 22, scope: !6913)
!6915 = !DILocation(line: 2006, column: 7, scope: !6808)
!6916 = !DILocation(line: 2007, column: 5, scope: !6913)
!6917 = !DILocation(line: 2008, column: 1, scope: !6808)
!6918 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_base_length", scope: !3, file: !3, line: 1787, type: !6919, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6923)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{!7, !6921}
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!6923 = !{!6924}
!6924 = !DILocalVariable(name: "vec_", arg: 1, scope: !6918, file: !3, line: 1787, type: !6921)
!6925 = !DILocation(line: 0, scope: !6918)
!6926 = !DILocation(line: 1787, column: 1, scope: !6918)
!6927 = distinct !DISubprogram(name: "finish_loop_tree_node", scope: !3, file: !3, line: 183, type: !3459, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6928)
!6928 = !{!6929}
!6929 = !DILocalVariable(name: "loop", arg: 1, scope: !6927, file: !3, line: 183, type: !1713)
!6930 = !DILocation(line: 0, scope: !6927)
!6931 = !DILocation(line: 185, column: 13, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 185, column: 7)
!6933 = !DILocation(line: 185, column: 31, scope: !6932)
!6934 = !DILocation(line: 185, column: 7, scope: !6927)
!6935 = !DILocation(line: 188, column: 30, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 186, column: 5)
!6937 = !DILocation(line: 188, column: 7, scope: !6936)
!6938 = !DILocation(line: 189, column: 30, scope: !6936)
!6939 = !DILocation(line: 189, column: 7, scope: !6936)
!6940 = !DILocation(line: 190, column: 30, scope: !6936)
!6941 = !DILocation(line: 190, column: 7, scope: !6936)
!6942 = !DILocation(line: 191, column: 30, scope: !6936)
!6943 = !DILocation(line: 191, column: 7, scope: !6936)
!6944 = !DILocation(line: 192, column: 23, scope: !6936)
!6945 = !DILocation(line: 192, column: 7, scope: !6936)
!6946 = !DILocation(line: 193, column: 31, scope: !6936)
!6947 = !DILocation(line: 194, column: 5, scope: !6936)
!6948 = !DILocation(line: 195, column: 1, scope: !6927)
!6949 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_base_pop", scope: !3, file: !3, line: 1787, type: !6950, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6953)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!1713, !6952}
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!6953 = !{!6954, !6955}
!6954 = !DILocalVariable(name: "vec_", arg: 1, scope: !6949, file: !3, line: 1787, type: !6952)
!6955 = !DILocalVariable(name: "obj_", scope: !6949, file: !3, line: 1787, type: !1713)
!6956 = !DILocation(line: 0, scope: !6949)
!6957 = !DILocation(line: 1787, column: 1, scope: !6949)
!6958 = distinct !DISubprogram(name: "loop_depth", scope: !135, file: !135, line: 425, type: !6959, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6961)
!6959 = !DISubroutineType(types: !6960)
!6960 = !{!7, !5976}
!6961 = !{!6962}
!6962 = !DILocalVariable(name: "loop", arg: 1, scope: !6958, file: !135, line: 425, type: !5976)
!6963 = !DILocation(line: 0, scope: !6958)
!6964 = !DILocation(line: 427, column: 10, scope: !6958)
!6965 = !DILocation(line: 427, column: 3, scope: !6958)
!6966 = distinct !DISubprogram(name: "low_pressure_loop_node_p", scope: !3, file: !3, line: 1662, type: !6967, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6969)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{!565, !1713}
!6969 = !{!6970, !6971, !6972}
!6970 = !DILocalVariable(name: "node", arg: 1, scope: !6966, file: !3, line: 1662, type: !1713)
!6971 = !DILocalVariable(name: "i", scope: !6966, file: !3, line: 1664, type: !566)
!6972 = !DILocalVariable(name: "cover_class", scope: !6966, file: !3, line: 1665, type: !390)
!6973 = !DILocation(line: 0, scope: !6966)
!6974 = !DILocation(line: 1667, column: 13, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1667, column: 7)
!6976 = !DILocation(line: 1667, column: 16, scope: !6975)
!6977 = !DILocation(line: 1667, column: 7, scope: !6966)
!6978 = !DILocation(line: 0, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 1670, column: 3)
!6980 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1670, column: 3)
!6981 = !DILocation(line: 1670, column: 3, scope: !6980)
!6982 = !DILocation(line: 0, scope: !6980)
!6983 = !DILocation(line: 1670, column: 17, scope: !6979)
!6984 = !DILocation(line: 1672, column: 21, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 1671, column: 5)
!6986 = !DILocation(line: 1673, column: 11, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1673, column: 11)
!6988 = !DILocation(line: 1674, column: 6, scope: !6987)
!6989 = !DILocation(line: 1674, column: 4, scope: !6987)
!6990 = !DILocation(line: 1673, column: 11, scope: !6985)
!6991 = !DILocation(line: 1670, column: 46, scope: !6979)
!6992 = !DILocation(line: 1670, column: 3, scope: !6979)
!6993 = distinct !{!6993, !6981, !6994}
!6994 = !DILocation(line: 1676, column: 5, scope: !6980)
!6995 = !DILocation(line: 1678, column: 1, scope: !6966)
!6996 = distinct !DISubprogram(name: "loop_compare_func", scope: !3, file: !3, line: 1684, type: !1138, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6997)
!6997 = !{!6998, !6999, !7000, !7001, !7002}
!6998 = !DILocalVariable(name: "v1p", arg: 1, scope: !6996, file: !3, line: 1684, type: !1133)
!6999 = !DILocalVariable(name: "v2p", arg: 2, scope: !6996, file: !3, line: 1684, type: !1133)
!7000 = !DILocalVariable(name: "diff", scope: !6996, file: !3, line: 1686, type: !566)
!7001 = !DILocalVariable(name: "l1", scope: !6996, file: !3, line: 1687, type: !1713)
!7002 = !DILocalVariable(name: "l2", scope: !6996, file: !3, line: 1688, type: !1713)
!7003 = !DILocation(line: 0, scope: !6996)
!7004 = !DILocation(line: 1687, column: 30, scope: !6996)
!7005 = !DILocation(line: 1687, column: 29, scope: !6996)
!7006 = !DILocation(line: 1688, column: 30, scope: !6996)
!7007 = !DILocation(line: 1688, column: 29, scope: !6996)
!7008 = !DILocation(line: 1691, column: 11, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 1691, column: 7)
!7010 = !DILocation(line: 1691, column: 7, scope: !7009)
!7011 = !DILocation(line: 1691, column: 23, scope: !7009)
!7012 = !DILocation(line: 1691, column: 32, scope: !7009)
!7013 = !DILocation(line: 1691, column: 28, scope: !7009)
!7014 = !DILocation(line: 1691, column: 7, scope: !6996)
!7015 = !DILocation(line: 1693, column: 25, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 1693, column: 7)
!7017 = !DILocation(line: 1693, column: 32, scope: !7016)
!7018 = !DILocation(line: 1693, column: 28, scope: !7016)
!7019 = !DILocation(line: 1693, column: 7, scope: !6996)
!7020 = !DILocation(line: 1695, column: 19, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 1695, column: 7)
!7022 = !DILocation(line: 1695, column: 25, scope: !7021)
!7023 = !DILocation(line: 1695, column: 33, scope: !7021)
!7024 = !DILocation(line: 1695, column: 49, scope: !7021)
!7025 = !DILocation(line: 1695, column: 55, scope: !7021)
!7026 = !DILocation(line: 1695, column: 63, scope: !7021)
!7027 = !DILocation(line: 1695, column: 43, scope: !7021)
!7028 = !DILocation(line: 1695, column: 74, scope: !7021)
!7029 = !DILocation(line: 1695, column: 7, scope: !6996)
!7030 = !DILocation(line: 1697, column: 21, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 1697, column: 7)
!7032 = !DILocation(line: 1697, column: 67, scope: !7031)
!7033 = !DILocation(line: 1697, column: 51, scope: !7031)
!7034 = !DILocation(line: 1697, column: 43, scope: !7031)
!7035 = !DILocation(line: 1697, column: 74, scope: !7031)
!7036 = !DILocation(line: 1697, column: 7, scope: !6996)
!7037 = !DILocation(line: 1700, column: 14, scope: !6996)
!7038 = !DILocation(line: 1700, column: 20, scope: !6996)
!7039 = !DILocation(line: 1700, column: 30, scope: !6996)
!7040 = !DILocation(line: 1700, column: 36, scope: !6996)
!7041 = !DILocation(line: 1700, column: 24, scope: !6996)
!7042 = !DILocation(line: 1700, column: 3, scope: !6996)
!7043 = !DILocation(line: 1701, column: 1, scope: !6996)
!7044 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_heap_safe_push", scope: !3, file: !3, line: 1788, type: !7045, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7047)
!7045 = !DISubroutineType(types: !7046)
!7046 = !{!1845, !6703, !1713}
!7047 = !{!7048, !7049}
!7048 = !DILocalVariable(name: "vec_", arg: 1, scope: !7044, file: !3, line: 1788, type: !6703)
!7049 = !DILocalVariable(name: "obj_", arg: 2, scope: !7044, file: !3, line: 1788, type: !1713)
!7050 = !DILocation(line: 0, scope: !7044)
!7051 = !DILocation(line: 1788, column: 1, scope: !7044)
!7052 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_heap_reserve", scope: !3, file: !3, line: 1788, type: !7053, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7055)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{!566, !6703, !566}
!7055 = !{!7056, !7057, !7058}
!7056 = !DILocalVariable(name: "vec_", arg: 1, scope: !7052, file: !3, line: 1788, type: !6703)
!7057 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7052, file: !3, line: 1788, type: !566)
!7058 = !DILocalVariable(name: "extend", scope: !7052, file: !3, line: 1788, type: !566)
!7059 = !DILocation(line: 0, scope: !7052)
!7060 = !DILocation(line: 1788, column: 1, scope: !7052)
!7061 = !DILocation(line: 1788, column: 1, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 1788, column: 1)
!7063 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_base_quick_push", scope: !3, file: !3, line: 1787, type: !7064, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7066)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{!1845, !6952, !1713}
!7066 = !{!7067, !7068, !7069}
!7067 = !DILocalVariable(name: "vec_", arg: 1, scope: !7063, file: !3, line: 1787, type: !6952)
!7068 = !DILocalVariable(name: "obj_", arg: 2, scope: !7063, file: !3, line: 1787, type: !1713)
!7069 = !DILocalVariable(name: "slot_", scope: !7063, file: !3, line: 1787, type: !1845)
!7070 = !DILocation(line: 0, scope: !7063)
!7071 = !DILocation(line: 1787, column: 1, scope: !7063)
!7072 = distinct !DISubprogram(name: "VEC_ira_loop_tree_node_t_base_space", scope: !3, file: !3, line: 1787, type: !7073, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7075)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!566, !6952, !566}
!7075 = !{!7076, !7077}
!7076 = !DILocalVariable(name: "vec_", arg: 1, scope: !7072, file: !3, line: 1787, type: !6952)
!7077 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7072, file: !3, line: 1787, type: !566)
!7078 = !DILocation(line: 0, scope: !7072)
!7079 = !DILocation(line: 1787, column: 1, scope: !7072)
!7080 = distinct !DISubprogram(name: "propagate_some_info_from_allocno", scope: !3, file: !3, line: 1897, type: !2626, scopeLine: 1898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7081)
!7081 = !{!7082, !7083, !7084}
!7082 = !DILocalVariable(name: "a", arg: 1, scope: !7080, file: !3, line: 1897, type: !573)
!7083 = !DILocalVariable(name: "from_a", arg: 2, scope: !7080, file: !3, line: 1897, type: !573)
!7084 = !DILocalVariable(name: "cover_class", scope: !7080, file: !3, line: 1899, type: !390)
!7085 = !DILocation(line: 0, scope: !7080)
!7086 = !DILocation(line: 1901, column: 3, scope: !7080)
!7087 = !DILocation(line: 1904, column: 7, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 1904, column: 7)
!7089 = !DILocation(line: 1904, column: 7, scope: !7080)
!7090 = !DILocation(line: 1905, column: 5, scope: !7088)
!7091 = !DILocation(line: 1905, column: 32, scope: !7088)
!7092 = !DILocation(line: 1907, column: 24, scope: !7080)
!7093 = !DILocation(line: 1907, column: 3, scope: !7080)
!7094 = !DILocation(line: 1907, column: 21, scope: !7080)
!7095 = !DILocation(line: 1908, column: 23, scope: !7080)
!7096 = !DILocation(line: 1908, column: 3, scope: !7080)
!7097 = !DILocation(line: 1908, column: 20, scope: !7080)
!7098 = !DILocation(line: 1909, column: 28, scope: !7080)
!7099 = !DILocation(line: 1909, column: 3, scope: !7080)
!7100 = !DILocation(line: 1909, column: 25, scope: !7080)
!7101 = !DILocation(line: 1910, column: 3, scope: !7080)
!7102 = !DILocation(line: 1912, column: 36, scope: !7080)
!7103 = !DILocation(line: 1912, column: 3, scope: !7080)
!7104 = !DILocation(line: 1912, column: 33, scope: !7080)
!7105 = !DILocation(line: 1914, column: 8, scope: !7080)
!7106 = !DILocation(line: 1913, column: 3, scope: !7080)
!7107 = !DILocation(line: 1914, column: 5, scope: !7080)
!7108 = !DILocation(line: 1915, column: 9, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 1915, column: 7)
!7110 = !DILocation(line: 1915, column: 7, scope: !7080)
!7111 = !DILocation(line: 1916, column: 5, scope: !7109)
!7112 = !DILocation(line: 1916, column: 29, scope: !7109)
!7113 = !DILocation(line: 1918, column: 7, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 1918, column: 7)
!7115 = !DILocation(line: 1918, column: 7, scope: !7080)
!7116 = !DILocation(line: 1919, column: 5, scope: !7114)
!7117 = !DILocation(line: 1919, column: 38, scope: !7114)
!7118 = !DILocation(line: 1921, column: 17, scope: !7080)
!7119 = !DILocation(line: 1923, column: 39, scope: !7080)
!7120 = !DILocation(line: 1924, column: 10, scope: !7080)
!7121 = !DILocation(line: 1923, column: 3, scope: !7080)
!7122 = !DILocation(line: 1925, column: 39, scope: !7080)
!7123 = !DILocation(line: 1927, column: 10, scope: !7080)
!7124 = !DILocation(line: 1925, column: 3, scope: !7080)
!7125 = !DILocation(line: 1928, column: 35, scope: !7080)
!7126 = !DILocation(line: 1928, column: 3, scope: !7080)
!7127 = !DILocation(line: 1928, column: 32, scope: !7080)
!7128 = !DILocation(line: 1929, column: 30, scope: !7080)
!7129 = !DILocation(line: 1929, column: 3, scope: !7080)
!7130 = !DILocation(line: 1929, column: 27, scope: !7080)
!7131 = !DILocation(line: 1930, column: 1, scope: !7080)
!7132 = distinct !DISubprogram(name: "ira_allocate_and_accumulate_costs", scope: !574, file: !574, line: 1186, type: !7133, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7136)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{null, !7135, !390, !1803}
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!7136 = !{!7137, !7138, !7139, !7140, !7141}
!7137 = !DILocalVariable(name: "vec", arg: 1, scope: !7132, file: !574, line: 1186, type: !7135)
!7138 = !DILocalVariable(name: "cover_class", arg: 2, scope: !7132, file: !574, line: 1186, type: !390)
!7139 = !DILocalVariable(name: "src", arg: 3, scope: !7132, file: !574, line: 1187, type: !1803)
!7140 = !DILocalVariable(name: "i", scope: !7132, file: !574, line: 1189, type: !566)
!7141 = !DILocalVariable(name: "len", scope: !7132, file: !574, line: 1189, type: !566)
!7142 = !DILocation(line: 0, scope: !7132)
!7143 = !DILocation(line: 1191, column: 11, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7132, file: !574, line: 1191, column: 7)
!7145 = !DILocation(line: 1191, column: 7, scope: !7132)
!7146 = !DILocation(line: 1193, column: 9, scope: !7132)
!7147 = !DILocation(line: 1194, column: 7, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7132, file: !574, line: 1194, column: 7)
!7149 = !DILocation(line: 1194, column: 12, scope: !7148)
!7150 = !DILocation(line: 1194, column: 7, scope: !7132)
!7151 = !DILocation(line: 1196, column: 14, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !574, line: 1195, column: 5)
!7153 = !DILocation(line: 1196, column: 12, scope: !7152)
!7154 = !DILocation(line: 1197, column: 15, scope: !7152)
!7155 = !DILocation(line: 1197, column: 39, scope: !7152)
!7156 = !DILocation(line: 1197, column: 37, scope: !7152)
!7157 = !DILocation(line: 1197, column: 7, scope: !7152)
!7158 = !DILocation(line: 1198, column: 5, scope: !7152)
!7159 = !DILocation(line: 1199, column: 8, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7132, file: !574, line: 1199, column: 3)
!7161 = !DILocation(line: 0, scope: !7160)
!7162 = !DILocation(line: 1199, column: 17, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !574, line: 1199, column: 3)
!7164 = !DILocation(line: 1199, column: 3, scope: !7160)
!7165 = !DILocation(line: 1200, column: 18, scope: !7163)
!7166 = !DILocation(line: 1200, column: 6, scope: !7163)
!7167 = !DILocation(line: 1200, column: 5, scope: !7163)
!7168 = !DILocation(line: 1200, column: 15, scope: !7163)
!7169 = !DILocation(line: 1199, column: 25, scope: !7163)
!7170 = !DILocation(line: 1199, column: 3, scope: !7163)
!7171 = distinct !{!7171, !7164, !7172}
!7172 = !DILocation(line: 1200, column: 23, scope: !7160)
!7173 = !DILocation(line: 1201, column: 1, scope: !7132)
!7174 = distinct !DISubprogram(name: "ira_rebuild_regno_allocno_list", scope: !3, file: !3, line: 1870, type: !7175, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7177)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{null, !566}
!7177 = !{!7178, !7179, !7180, !7181}
!7178 = !DILocalVariable(name: "regno", arg: 1, scope: !7174, file: !3, line: 1870, type: !566)
!7179 = !DILocalVariable(name: "i", scope: !7174, file: !3, line: 1872, type: !566)
!7180 = !DILocalVariable(name: "n", scope: !7174, file: !3, line: 1872, type: !566)
!7181 = !DILocalVariable(name: "a", scope: !7174, file: !3, line: 1873, type: !573)
!7182 = !DILocation(line: 0, scope: !7174)
!7183 = !DILocation(line: 1875, column: 19, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 1875, column: 3)
!7185 = !DILocation(line: 1875, column: 8, scope: !7184)
!7186 = !DILocation(line: 0, scope: !7184)
!7187 = !DILocation(line: 1876, column: 10, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 1875, column: 3)
!7189 = !DILocation(line: 1875, column: 3, scope: !7184)
!7190 = !DILocation(line: 1878, column: 21, scope: !7188)
!7191 = !DILocation(line: 1878, column: 5, scope: !7188)
!7192 = !DILocation(line: 1878, column: 25, scope: !7188)
!7193 = !DILocation(line: 1877, column: 12, scope: !7188)
!7194 = !DILocation(line: 1875, column: 3, scope: !7188)
!7195 = distinct !{!7195, !7189, !7196}
!7196 = !DILocation(line: 1878, column: 27, scope: !7184)
!7197 = !DILocation(line: 1881, column: 15, scope: !7174)
!7198 = !DILocation(line: 1881, column: 31, scope: !7174)
!7199 = !DILocation(line: 1881, column: 3, scope: !7174)
!7200 = !DILocation(line: 1887, column: 8, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 1887, column: 3)
!7202 = !DILocation(line: 0, scope: !7201)
!7203 = !DILocation(line: 1887, column: 17, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 1887, column: 3)
!7205 = !DILocation(line: 1887, column: 3, scope: !7201)
!7206 = !DILocation(line: 1888, column: 58, scope: !7204)
!7207 = !DILocation(line: 1888, column: 5, scope: !7204)
!7208 = !DILocation(line: 1888, column: 56, scope: !7204)
!7209 = !DILocation(line: 1887, column: 23, scope: !7204)
!7210 = !DILocation(line: 1887, column: 3, scope: !7204)
!7211 = distinct !{!7211, !7205, !7212}
!7212 = !DILocation(line: 1888, column: 74, scope: !7201)
!7213 = !DILocation(line: 1889, column: 3, scope: !7174)
!7214 = !DILocation(line: 1889, column: 54, scope: !7174)
!7215 = !DILocation(line: 1890, column: 34, scope: !7174)
!7216 = !DILocation(line: 1890, column: 3, scope: !7174)
!7217 = !DILocation(line: 1890, column: 32, scope: !7174)
!7218 = !DILocation(line: 1891, column: 7, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 1891, column: 7)
!7220 = !DILocation(line: 1891, column: 33, scope: !7219)
!7221 = !DILocation(line: 1891, column: 40, scope: !7219)
!7222 = !DILocation(line: 1891, column: 54, scope: !7219)
!7223 = !DILocation(line: 1891, column: 37, scope: !7219)
!7224 = !DILocation(line: 1892, column: 5, scope: !7219)
!7225 = !DILocation(line: 1893, column: 1, scope: !7174)
!7226 = distinct !DISubprogram(name: "regno_allocno_order_compare_func", scope: !3, file: !3, line: 1846, type: !1138, scopeLine: 1847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7227)
!7227 = !{!7228, !7229, !7230, !7231, !7232, !7233}
!7228 = !DILocalVariable(name: "v1p", arg: 1, scope: !7226, file: !3, line: 1846, type: !1133)
!7229 = !DILocalVariable(name: "v2p", arg: 2, scope: !7226, file: !3, line: 1846, type: !1133)
!7230 = !DILocalVariable(name: "a1", scope: !7226, file: !3, line: 1848, type: !573)
!7231 = !DILocalVariable(name: "a2", scope: !7226, file: !3, line: 1849, type: !573)
!7232 = !DILocalVariable(name: "n1", scope: !7226, file: !3, line: 1850, type: !1713)
!7233 = !DILocalVariable(name: "n2", scope: !7226, file: !3, line: 1851, type: !1713)
!7234 = !DILocation(line: 0, scope: !7226)
!7235 = !DILocation(line: 1848, column: 23, scope: !7226)
!7236 = !DILocation(line: 1848, column: 22, scope: !7226)
!7237 = !DILocation(line: 1849, column: 23, scope: !7226)
!7238 = !DILocation(line: 1849, column: 22, scope: !7226)
!7239 = !DILocation(line: 1850, column: 29, scope: !7226)
!7240 = !DILocation(line: 1851, column: 29, scope: !7226)
!7241 = !DILocation(line: 1853, column: 7, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 1853, column: 7)
!7243 = !DILocation(line: 1853, column: 7, scope: !7226)
!7244 = !DILocation(line: 1855, column: 12, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 1855, column: 12)
!7246 = !DILocation(line: 1855, column: 12, scope: !7242)
!7247 = !DILocation(line: 1861, column: 10, scope: !7226)
!7248 = !DILocation(line: 1861, column: 29, scope: !7226)
!7249 = !DILocation(line: 1861, column: 27, scope: !7226)
!7250 = !DILocation(line: 1861, column: 3, scope: !7226)
!7251 = !DILocation(line: 1862, column: 1, scope: !7226)
!7252 = distinct !DISubprogram(name: "loop_is_inside_p", scope: !3, file: !3, line: 1836, type: !7253, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7255)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!565, !1713, !1713}
!7255 = !{!7256, !7257}
!7256 = !DILocalVariable(name: "node", arg: 1, scope: !7252, file: !3, line: 1836, type: !1713)
!7257 = !DILocalVariable(name: "parent", arg: 2, scope: !7252, file: !3, line: 1836, type: !1713)
!7258 = !DILocation(line: 0, scope: !7252)
!7259 = !DILocation(line: 1838, column: 8, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 1838, column: 3)
!7261 = !DILocation(line: 0, scope: !7260)
!7262 = !DILocation(line: 1838, column: 34, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 1838, column: 3)
!7264 = !DILocation(line: 1838, column: 3, scope: !7260)
!7265 = !DILocation(line: 1839, column: 14, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 1839, column: 9)
!7267 = !DILocation(line: 1839, column: 9, scope: !7263)
!7268 = !DILocation(line: 1838, column: 3, scope: !7263)
!7269 = distinct !{!7269, !7264, !7270}
!7270 = !DILocation(line: 1840, column: 14, scope: !7260)
!7271 = !DILocation(line: 1842, column: 1, scope: !7252)
!7272 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !639, file: !639, line: 165, type: !7273, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7275)
!7273 = !DISubroutineType(types: !7274)
!7274 = !{null, !1734, !659}
!7275 = !{!7276, !7277}
!7276 = !DILocalVariable(name: "head", arg: 1, scope: !7272, file: !639, line: 165, type: !1734)
!7277 = !DILocalVariable(name: "obstack", arg: 2, scope: !7272, file: !639, line: 165, type: !659)
!7278 = !DILocation(line: 0, scope: !7272)
!7279 = !DILocation(line: 167, column: 23, scope: !7272)
!7280 = !DILocation(line: 167, column: 31, scope: !7272)
!7281 = !DILocation(line: 167, column: 9, scope: !7272)
!7282 = !DILocation(line: 167, column: 15, scope: !7272)
!7283 = !DILocation(line: 168, column: 9, scope: !7272)
!7284 = !DILocation(line: 168, column: 17, scope: !7272)
!7285 = !DILocation(line: 172, column: 1, scope: !7272)
!7286 = distinct !DISubprogram(name: "create_cap_allocno", scope: !3, file: !3, line: 756, type: !7287, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7289)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{!573, !573}
!7289 = !{!7290, !7291, !7292, !7293}
!7290 = !DILocalVariable(name: "a", arg: 1, scope: !7286, file: !3, line: 756, type: !573)
!7291 = !DILocalVariable(name: "cap", scope: !7286, file: !3, line: 758, type: !573)
!7292 = !DILocalVariable(name: "parent", scope: !7286, file: !3, line: 759, type: !1713)
!7293 = !DILocalVariable(name: "cover_class", scope: !7286, file: !3, line: 760, type: !390)
!7294 = !DILocation(line: 0, scope: !7286)
!7295 = !DILocation(line: 764, column: 12, scope: !7286)
!7296 = !DILocation(line: 764, column: 40, scope: !7286)
!7297 = !DILocation(line: 765, column: 29, scope: !7286)
!7298 = !DILocation(line: 765, column: 9, scope: !7286)
!7299 = !DILocation(line: 766, column: 24, scope: !7286)
!7300 = !DILocation(line: 766, column: 3, scope: !7286)
!7301 = !DILocation(line: 766, column: 22, scope: !7286)
!7302 = !DILocation(line: 767, column: 17, scope: !7286)
!7303 = !DILocation(line: 768, column: 3, scope: !7286)
!7304 = !DILocation(line: 769, column: 38, scope: !7286)
!7305 = !DILocation(line: 769, column: 3, scope: !7286)
!7306 = !DILocation(line: 769, column: 36, scope: !7286)
!7307 = !DILocation(line: 770, column: 3, scope: !7286)
!7308 = !DILocation(line: 770, column: 28, scope: !7286)
!7309 = !DILocation(line: 771, column: 3, scope: !7286)
!7310 = !DILocation(line: 771, column: 19, scope: !7286)
!7311 = !DILocation(line: 772, column: 36, scope: !7286)
!7312 = !DILocation(line: 772, column: 3, scope: !7286)
!7313 = !DILocation(line: 772, column: 34, scope: !7286)
!7314 = !DILocation(line: 773, column: 31, scope: !7286)
!7315 = !DILocation(line: 773, column: 3, scope: !7286)
!7316 = !DILocation(line: 773, column: 29, scope: !7286)
!7317 = !DILocation(line: 775, column: 7, scope: !7286)
!7318 = !DILocation(line: 775, column: 50, scope: !7286)
!7319 = !DILocation(line: 774, column: 3, scope: !7286)
!7320 = !DILocation(line: 777, column: 7, scope: !7286)
!7321 = !DILocation(line: 778, column: 6, scope: !7286)
!7322 = !DILocation(line: 776, column: 3, scope: !7286)
!7323 = !DILocation(line: 779, column: 31, scope: !7286)
!7324 = !DILocation(line: 779, column: 3, scope: !7286)
!7325 = !DILocation(line: 779, column: 29, scope: !7286)
!7326 = !DILocation(line: 780, column: 25, scope: !7286)
!7327 = !DILocation(line: 780, column: 3, scope: !7286)
!7328 = !DILocation(line: 780, column: 23, scope: !7286)
!7329 = !DILocation(line: 781, column: 24, scope: !7286)
!7330 = !DILocation(line: 781, column: 3, scope: !7286)
!7331 = !DILocation(line: 781, column: 22, scope: !7286)
!7332 = !DILocation(line: 782, column: 29, scope: !7286)
!7333 = !DILocation(line: 782, column: 3, scope: !7286)
!7334 = !DILocation(line: 782, column: 27, scope: !7286)
!7335 = !DILocation(line: 783, column: 3, scope: !7286)
!7336 = !DILocation(line: 785, column: 3, scope: !7286)
!7337 = !DILocation(line: 787, column: 37, scope: !7286)
!7338 = !DILocation(line: 787, column: 3, scope: !7286)
!7339 = !DILocation(line: 787, column: 35, scope: !7286)
!7340 = !DILocation(line: 789, column: 34, scope: !7286)
!7341 = !DILocation(line: 789, column: 32, scope: !7286)
!7342 = !DILocation(line: 790, column: 40, scope: !7286)
!7343 = !DILocation(line: 790, column: 38, scope: !7286)
!7344 = !DILocation(line: 792, column: 7, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 792, column: 7)
!7346 = !DILocation(line: 792, column: 33, scope: !7345)
!7347 = !DILocation(line: 792, column: 40, scope: !7345)
!7348 = !DILocation(line: 792, column: 54, scope: !7345)
!7349 = !DILocation(line: 792, column: 37, scope: !7345)
!7350 = !DILocation(line: 794, column: 7, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 793, column: 5)
!7352 = !DILocation(line: 795, column: 7, scope: !7351)
!7353 = !DILocation(line: 796, column: 16, scope: !7351)
!7354 = !DILocation(line: 796, column: 7, scope: !7351)
!7355 = !DILocation(line: 797, column: 5, scope: !7351)
!7356 = !DILocation(line: 798, column: 3, scope: !7286)
!7357 = distinct !DISubprogram(name: "ira_allocate_and_copy_costs", scope: !574, file: !574, line: 1172, type: !7133, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7358)
!7358 = !{!7359, !7360, !7361, !7362}
!7359 = !DILocalVariable(name: "vec", arg: 1, scope: !7357, file: !574, line: 1172, type: !7135)
!7360 = !DILocalVariable(name: "cover_class", arg: 2, scope: !7357, file: !574, line: 1172, type: !390)
!7361 = !DILocalVariable(name: "src", arg: 3, scope: !7357, file: !574, line: 1172, type: !1803)
!7362 = !DILocalVariable(name: "len", scope: !7357, file: !574, line: 1174, type: !566)
!7363 = !DILocation(line: 0, scope: !7357)
!7364 = !DILocation(line: 1176, column: 7, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7357, file: !574, line: 1176, column: 7)
!7366 = !DILocation(line: 1176, column: 12, scope: !7365)
!7367 = !DILocation(line: 1176, column: 27, scope: !7365)
!7368 = !DILocation(line: 1176, column: 20, scope: !7365)
!7369 = !DILocation(line: 1178, column: 10, scope: !7357)
!7370 = !DILocation(line: 1178, column: 8, scope: !7357)
!7371 = !DILocation(line: 1179, column: 9, scope: !7357)
!7372 = !DILocation(line: 1180, column: 11, scope: !7357)
!7373 = !DILocation(line: 1180, column: 17, scope: !7357)
!7374 = !DILocation(line: 1180, column: 37, scope: !7357)
!7375 = !DILocation(line: 1180, column: 35, scope: !7357)
!7376 = !DILocation(line: 1180, column: 3, scope: !7357)
!7377 = !DILocation(line: 1181, column: 1, scope: !7357)
!7378 = distinct !DISubprogram(name: "allocno_range_compare_func", scope: !3, file: !3, line: 2239, type: !1138, scopeLine: 2240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7379)
!7379 = !{!7380, !7381, !7382, !7383, !7384}
!7380 = !DILocalVariable(name: "v1p", arg: 1, scope: !7378, file: !3, line: 2239, type: !1133)
!7381 = !DILocalVariable(name: "v2p", arg: 2, scope: !7378, file: !3, line: 2239, type: !1133)
!7382 = !DILocalVariable(name: "diff", scope: !7378, file: !3, line: 2241, type: !566)
!7383 = !DILocalVariable(name: "a1", scope: !7378, file: !3, line: 2242, type: !573)
!7384 = !DILocalVariable(name: "a2", scope: !7378, file: !3, line: 2243, type: !573)
!7385 = !DILocation(line: 0, scope: !7378)
!7386 = !DILocation(line: 2242, column: 23, scope: !7378)
!7387 = !DILocation(line: 2242, column: 22, scope: !7378)
!7388 = !DILocation(line: 2243, column: 23, scope: !7378)
!7389 = !DILocation(line: 2243, column: 22, scope: !7378)
!7390 = !DILocation(line: 2245, column: 7, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 2245, column: 7)
!7392 = !DILocation(line: 2245, column: 26, scope: !7391)
!7393 = !DILocation(line: 2246, column: 7, scope: !7391)
!7394 = !DILocation(line: 2246, column: 18, scope: !7391)
!7395 = !DILocation(line: 2246, column: 45, scope: !7391)
!7396 = !DILocation(line: 2246, column: 43, scope: !7391)
!7397 = !DILocation(line: 2246, column: 71, scope: !7391)
!7398 = !DILocation(line: 2245, column: 7, scope: !7378)
!7399 = !DILocation(line: 2248, column: 15, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 2248, column: 7)
!7401 = !DILocation(line: 2248, column: 34, scope: !7400)
!7402 = !DILocation(line: 2248, column: 32, scope: !7400)
!7403 = !DILocation(line: 2248, column: 52, scope: !7400)
!7404 = !DILocation(line: 2248, column: 7, scope: !7378)
!7405 = !DILocation(line: 2250, column: 15, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 2250, column: 7)
!7407 = !DILocation(line: 2250, column: 34, scope: !7406)
!7408 = !DILocation(line: 2250, column: 32, scope: !7406)
!7409 = !DILocation(line: 2250, column: 52, scope: !7406)
!7410 = !DILocation(line: 2250, column: 7, scope: !7378)
!7411 = !DILocation(line: 2252, column: 10, scope: !7378)
!7412 = !DILocation(line: 2252, column: 29, scope: !7378)
!7413 = !DILocation(line: 2252, column: 27, scope: !7378)
!7414 = !DILocation(line: 2252, column: 3, scope: !7378)
!7415 = !DILocation(line: 2253, column: 1, scope: !7378)
!7416 = distinct !DISubprogram(name: "VEC_ira_copy_t_heap_free", scope: !574, file: !574, line: 70, type: !7417, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7419)
!7417 = !DISubroutineType(types: !7418)
!7418 = !{null, !3092}
!7419 = !{!7420}
!7420 = !DILocalVariable(name: "vec_", arg: 1, scope: !7416, file: !574, line: 70, type: !3092)
!7421 = !DILocation(line: 0, scope: !7416)
!7422 = !DILocation(line: 70, column: 1, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7416, file: !574, line: 70, column: 1)
!7424 = !DILocation(line: 70, column: 1, scope: !7416)
!7425 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_free", scope: !574, file: !574, line: 68, type: !7426, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7428)
!7426 = !DISubroutineType(types: !7427)
!7427 = !{null, !2507}
!7428 = !{!7429}
!7429 = !DILocalVariable(name: "vec_", arg: 1, scope: !7425, file: !574, line: 68, type: !2507)
!7430 = !DILocation(line: 0, scope: !7425)
!7431 = !DILocation(line: 68, column: 1, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7425, file: !574, line: 68, column: 1)
!7433 = !DILocation(line: 68, column: 1, scope: !7425)
