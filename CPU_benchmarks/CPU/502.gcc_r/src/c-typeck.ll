; ModuleID = 'c-typeck.bc'
source_filename = "c-typeck.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type { i8 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type { %struct.c_language_function, %union.tree_node*, %union.tree_node*, %struct.c_switch*, %struct.c_arg_info*, i32, i32, i32, i32 }
%struct.c_language_function = type { %struct.stmt_tree_s }
%struct.stmt_tree_s = type { %union.tree_node*, i32 }
%struct.c_switch = type { %union.tree_node*, %union.tree_node*, %struct.splay_tree_s*, %struct.c_spot_bindings*, %struct.c_switch* }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.c_spot_bindings = type opaque
%struct.c_arg_info = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.tagged_tu_seen_cache = type { %struct.tagged_tu_seen_cache*, %union.tree_node*, %union.tree_node*, i32 }
%struct.maybe_used_decl = type { %union.tree_node*, i32, %struct.maybe_used_decl* }
%struct.constructor_stack = type { %struct.constructor_stack*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.VEC_constructor_elt_gc*, %struct.init_node*, i32, i32, %struct.c_expr, %struct.constructor_range_stack*, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.init_node = type { %struct.init_node*, %struct.init_node*, %struct.init_node*, i32, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.c_expr = type { %union.tree_node*, i32, %union.tree_node* }
%struct.constructor_range_stack = type { %struct.constructor_range_stack*, %struct.constructor_range_stack*, %struct.constructor_stack*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.spelling = type { i32, %union.anon.1 }
%union.anon.1 = type { i64 }
%struct.initializer_stack = type { %struct.initializer_stack*, %union.tree_node*, %struct.constructor_stack*, %struct.constructor_range_stack*, %struct.VEC_constructor_elt_gc*, %struct.spelling*, %struct.spelling*, i32, i8, i8, i8 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type { %struct.sorted_fields_type*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.sorted_fields_type = type { i32, [1 x %union.tree_node*] }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.c_type_name = type { %struct.c_declspecs*, %struct.c_declarator* }
%struct.c_declspecs = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i8, i32, i16, i8 }
%struct.c_declarator = type { i32, %struct.c_declarator*, i32, %union.anon.0 }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { %union.tree_node*, i32, %union.tree_node*, i8 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_stmt_iterator = type { %struct.tree_statement_list_node*, %union.tree_node* }
%struct.tree_statement_list_node = type { %struct.tree_statement_list_node*, %struct.tree_statement_list_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str = private unnamed_addr constant [27 x i8] c"%qD has an incomplete type\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"invalid use of void expression\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"invalid use of flexible array member\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"invalid use of array with unspecified bounds\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"c-typeck.c\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"invalid use of undefined type %<%s %E%>\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"invalid use of incomplete typedef %qD\00", align 1
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@c_override_global_bindings_to_false = external dso_local local_unnamed_addr global i8, align 1
@input_location = external dso_local local_unnamed_addr global i32, align 4
@.str.11 = private unnamed_addr constant [45 x i8] c"function types not truly compatible in ISO C\00", align 1
@tagged_tu_seen_base = internal unnamed_addr global %struct.tagged_tu_seen_cache* null, align 8, !dbg !0
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@flag_isoc99 = external dso_local local_unnamed_addr global i32, align 4
@.str.12 = private unnamed_addr constant [41 x i8] c"void value not ignored as it ought to be\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"%qT has no member named %qE\00", align 1
@.str.14 = private unnamed_addr constant [61 x i8] c"request for member %qE in something not a structure or union\00", align 1
@warn_strict_aliasing = external dso_local local_unnamed_addr global i32, align 4
@.str.15 = private unnamed_addr constant [41 x i8] c"dereferencing pointer to incomplete type\00", align 1
@c_inhibit_evaluation_warnings = external dso_local local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [33 x i8] c"dereferencing %<void *%> pointer\00", align 1
@.str.17 = private unnamed_addr constant [51 x i8] c"invalid type argument of array indexing (have %qT)\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"invalid type argument of unary %<*%> (have %qT)\00", align 1
@.str.19 = private unnamed_addr constant [43 x i8] c"invalid type argument of %<->%> (have %qT)\00", align 1
@.str.20 = private unnamed_addr constant [47 x i8] c"subscripted value is neither array nor pointer\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"array subscript is not an integer\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"subscripted value is pointer to function\00", align 1
@pedantic = external dso_local local_unnamed_addr global i32, align 4
@.str.23 = private unnamed_addr constant [46 x i8] c"ISO C forbids subscripting %<register%> array\00", align 1
@.str.24 = private unnamed_addr constant [46 x i8] c"ISO C90 forbids subscripting non-lvalue array\00", align 1
@in_alignof = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1972
@in_sizeof = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1974
@in_typeof = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1976
@warn_cxx_compat = external dso_local local_unnamed_addr global i32, align 4
@.str.25 = private unnamed_addr constant [63 x i8] c"enum constant defined in struct or union is not visible in C++\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"enum constant defined here\00", align 1
@maybe_used_decls = internal unnamed_addr global %struct.maybe_used_decl* null, align 8, !dbg !1984
@require_constant_value = internal unnamed_addr global i32 0, align 4, !dbg !1980
@.str.27 = private unnamed_addr constant [36 x i8] c"called object %qE is not a function\00", align 1
@current_function_returns_abnormally = external dso_local local_unnamed_addr global i32, align 4
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.28 = private unnamed_addr constant [46 x i8] c"function called through a non-compatible type\00", align 1
@.str.29 = private unnamed_addr constant [48 x i8] c"if this code is reached, the program will abort\00", align 1
@.str.30 = private unnamed_addr constant [48 x i8] c"function with qualified void return type called\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"__builtin_\00", align 1
@warn_parentheses = external dso_local local_unnamed_addr global i32, align 4
@warn_logical_op = external dso_local local_unnamed_addr global i32, align 4
@.str.32 = private unnamed_addr constant [63 x i8] c"comparison with string literal results in unspecified behavior\00", align 1
@warn_enum_compare = external dso_local local_unnamed_addr global i32, align 4
@.str.33 = private unnamed_addr constant [31 x i8] c"comparison between %qT and %qT\00", align 1
@.str.34 = private unnamed_addr constant [34 x i8] c"wrong type argument to unary plus\00", align 1
@.str.35 = private unnamed_addr constant [35 x i8] c"wrong type argument to unary minus\00", align 1
@.str.36 = private unnamed_addr constant [53 x i8] c"ISO C does not support %<~%> for complex conjugation\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"wrong type argument to bit-complement\00", align 1
@.str.38 = private unnamed_addr constant [27 x i8] c"wrong type argument to abs\00", align 1
@.str.39 = private unnamed_addr constant [35 x i8] c"wrong type argument to conjugation\00", align 1
@.str.40 = private unnamed_addr constant [46 x i8] c"wrong type argument to unary exclamation mark\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"increment of enumeration value is invalid in C++\00", align 1
@.str.42 = private unnamed_addr constant [49 x i8] c"decrement of enumeration value is invalid in C++\00", align 1
@.str.43 = private unnamed_addr constant [58 x i8] c"ISO C does not support %<++%> and %<--%> on complex types\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"wrong type argument to increment\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"wrong type argument to decrement\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"increment of pointer to unknown structure\00", align 1
@.str.47 = private unnamed_addr constant [42 x i8] c"decrement of pointer to unknown structure\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.48 = private unnamed_addr constant [46 x i8] c"taking address of expression of type %<void%>\00", align 1
@.str.49 = private unnamed_addr constant [37 x i8] c"cannot take address of bit-field %qD\00", align 1
@.str.50 = private unnamed_addr constant [53 x i8] c"global register variable %qD used in nested function\00", align 1
@.str.51 = private unnamed_addr constant [46 x i8] c"register variable %qD used in nested function\00", align 1
@.str.52 = private unnamed_addr constant [50 x i8] c"address of global register variable %qD requested\00", align 1
@.str.53 = private unnamed_addr constant [43 x i8] c"address of register variable %qD requested\00", align 1
@.str.54 = private unnamed_addr constant [43 x i8] c"non-lvalue array in conditional expression\00", align 1
@.str.55 = private unnamed_addr constant [66 x i8] c"different enum types in conditional is invalid in C++: %qT vs %qT\00", align 1
@c_global_trees = external dso_local local_unnamed_addr global [55 x %union.tree_node*], align 16
@warn_sign_compare = external dso_local local_unnamed_addr global i32, align 4
@.str.56 = private unnamed_addr constant [51 x i8] c"signed and unsigned type in conditional expression\00", align 1
@.str.57 = private unnamed_addr constant [55 x i8] c"ISO C forbids conditional expr with only one void side\00", align 1
@.str.58 = private unnamed_addr constant [67 x i8] c"pointers to disjoint address spaces used in conditional expression\00", align 1
@.str.59 = private unnamed_addr constant [71 x i8] c"ISO C forbids conditional expr between %<void *%> and function pointer\00", align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"pointer type mismatch in conditional expression\00", align 1
@.str.61 = private unnamed_addr constant [56 x i8] c"pointer/integer type mismatch in conditional expression\00", align 1
@flag_cond_mismatch = external dso_local local_unnamed_addr global i32, align 4
@.str.62 = private unnamed_addr constant [40 x i8] c"type mismatch in conditional expression\00", align 1
@warn_unused_value = external dso_local local_unnamed_addr global i32, align 4
@.str.63 = private unnamed_addr constant [52 x i8] c"left-hand operand of comma expression has no effect\00", align 1
@.str.64 = private unnamed_addr constant [26 x i8] c"cast specifies array type\00", align 1
@.str.65 = private unnamed_addr constant [29 x i8] c"cast specifies function type\00", align 1
@.str.66 = private unnamed_addr constant [49 x i8] c"ISO C forbids casting nonscalar to the same type\00", align 1
@.str.67 = private unnamed_addr constant [34 x i8] c"ISO C forbids casts to union type\00", align 1
@.str.68 = private unnamed_addr constant [50 x i8] c"cast to union type from type not present in union\00", align 1
@warn_cast_qual = external dso_local local_unnamed_addr global i32, align 4
@.str.69 = private unnamed_addr constant [77 x i8] c"cast to %s address space pointer from disjoint generic address space pointer\00", align 1
@.str.70 = private unnamed_addr constant [77 x i8] c"cast to generic address space pointer from disjoint %s address space pointer\00", align 1
@.str.71 = private unnamed_addr constant [72 x i8] c"cast to %s address space pointer from disjoint %s address space pointer\00", align 1
@.str.72 = private unnamed_addr constant [47 x i8] c"cast from pointer to integer of different size\00", align 1
@.str.73 = private unnamed_addr constant [61 x i8] c"cast from function call of type %qT to non-matching type %qT\00", align 1
@.str.74 = private unnamed_addr constant [47 x i8] c"cast to pointer from integer of different size\00", align 1
@.str.75 = private unnamed_addr constant [68 x i8] c"ISO C forbids conversion of function pointer to object pointer type\00", align 1
@.str.76 = private unnamed_addr constant [68 x i8] c"ISO C forbids conversion of object pointer to function pointer type\00", align 1
@warn_strict_prototypes = external dso_local local_unnamed_addr global i32, align 4
@.str.77 = private unnamed_addr constant [44 x i8] c"defining a type in a cast is invalid in C++\00", align 1
@.str.78 = private unnamed_addr constant [48 x i8] c"enum conversion in assignment is invalid in C++\00", align 1
@c_language = external dso_local local_unnamed_addr global i32, align 4
@flag_objc_gc = external dso_local local_unnamed_addr global i32, align 4
@.str.79 = private unnamed_addr constant [57 x i8] c"traditional C rejects automatic aggregate initialization\00", align 1
@.str.80 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.81 = private unnamed_addr constant [30 x i8] c"(near initialization for %qs)\00", align 1
@.str.82 = private unnamed_addr constant [53 x i8] c"array initialized from parenthesized string constant\00", align 1
@constructor_decl = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2022
@require_constant_elements = internal unnamed_addr global i32 0, align 4, !dbg !1982
@constructor_stack = internal unnamed_addr global %struct.constructor_stack* null, align 8, !dbg !2032
@constructor_range_stack = internal unnamed_addr global %struct.constructor_range_stack* null, align 8, !dbg !2034
@constructor_elements = internal global %struct.VEC_constructor_elt_gc* null, align 8, !dbg !2006
@spelling = internal unnamed_addr global %struct.spelling* null, align 8, !dbg !1986
@spelling_base = internal unnamed_addr global %struct.spelling* null, align 8, !dbg !1988
@spelling_size = internal unnamed_addr global i32 0, align 4, !dbg !1990
@constructor_top_level = internal unnamed_addr global i32 0, align 4, !dbg !2024
@initializer_stack = internal unnamed_addr global %struct.initializer_stack* null, align 8, !dbg !2036
@constructor_designated = internal unnamed_addr global i32 0, align 4, !dbg !2026
@.str.83 = private unnamed_addr constant [12 x i8] c"(anonymous)\00", align 1
@missing_braces_mentioned = internal unnamed_addr global i1 false, align 4, !dbg !2040
@.str.84 = private unnamed_addr constant [42 x i8] c"opaque vector types cannot be initialized\00", align 1
@constructor_type = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !1992
@constructor_fields = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !1994
@constructor_index = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !1996
@constructor_max_index = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !1998
@constructor_unfilled_index = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2002
@constructor_unfilled_fields = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2000
@constructor_bit_index = internal unnamed_addr global %union.tree_node* null, align 8, !dbg !2004
@constructor_constant = internal unnamed_addr global i32 0, align 4, !dbg !2010
@constructor_simple = internal unnamed_addr global i32 0, align 4, !dbg !2012
@constructor_nonconst = internal unnamed_addr global i32 0, align 4, !dbg !2014
@constructor_erroneous = internal unnamed_addr global i32 0, align 4, !dbg !2016
@constructor_pending_elts = internal unnamed_addr global %struct.init_node* null, align 8, !dbg !2018
@constructor_depth = internal unnamed_addr global i32 0, align 4, !dbg !2020
@constructor_incremental = internal unnamed_addr global i32 0, align 4, !dbg !2008
@designator_depth = internal unnamed_addr global i32 0, align 4, !dbg !2028
@designator_erroneous = internal unnamed_addr global i1 false, align 4, !dbg !2041
@.str.85 = private unnamed_addr constant [40 x i8] c"extra brace group at end of initializer\00", align 1
@warn_missing_braces = external dso_local local_unnamed_addr global i32, align 4
@.str.86 = private unnamed_addr constant [34 x i8] c"missing braces around initializer\00", align 1
@.str.87 = private unnamed_addr constant [33 x i8] c"braces around scalar initializer\00", align 1
@.str.88 = private unnamed_addr constant [60 x i8] c"initialization of flexible array member in a nested context\00", align 1
@.str.89 = private unnamed_addr constant [42 x i8] c"initialization of a flexible array member\00", align 1
@warn_missing_field_initializers = external dso_local local_unnamed_addr global i32, align 4
@.str.90 = private unnamed_addr constant [20 x i8] c"missing initializer\00", align 1
@.str.91 = private unnamed_addr constant [25 x i8] c"empty scalar initializer\00", align 1
@.str.92 = private unnamed_addr constant [37 x i8] c"extra elements in scalar initializer\00", align 1
@.str.93 = private unnamed_addr constant [47 x i8] c"array index in initializer not of integer type\00", align 1
@.str.94 = private unnamed_addr constant [65 x i8] c"array index in initializer is not an integer constant expression\00", align 1
@.str.95 = private unnamed_addr constant [39 x i8] c"nonconstant array index in initializer\00", align 1
@.str.96 = private unnamed_addr constant [37 x i8] c"array index in non-array initializer\00", align 1
@.str.97 = private unnamed_addr constant [48 x i8] c"array index in initializer exceeds array bounds\00", align 1
@.str.98 = private unnamed_addr constant [33 x i8] c"empty index range in initializer\00", align 1
@.str.99 = private unnamed_addr constant [54 x i8] c"array index range in initializer exceeds array bounds\00", align 1
@.str.100 = private unnamed_addr constant [46 x i8] c"field name not in record or union initializer\00", align 1
@.str.101 = private unnamed_addr constant [43 x i8] c"unknown field %qE specified in initializer\00", align 1
@.str.102 = private unnamed_addr constant [42 x i8] c"excess elements in char array initializer\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"excess elements in struct initializer\00", align 1
@.str.104 = private unnamed_addr constant [53 x i8] c"non-static initialization of a flexible array member\00", align 1
@.str.105 = private unnamed_addr constant [37 x i8] c"excess elements in union initializer\00", align 1
@.str.106 = private unnamed_addr constant [47 x i8] c"traditional C rejects initialization of unions\00", align 1
@.str.107 = private unnamed_addr constant [37 x i8] c"excess elements in array initializer\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"excess elements in vector initializer\00", align 1
@.str.109 = private unnamed_addr constant [38 x i8] c"excess elements in scalar initializer\00", align 1
@.str.110 = private unnamed_addr constant [30 x i8] c"ISO C forbids %<goto *expr;%>\00", align 1
@.str.111 = private unnamed_addr constant [58 x i8] c"function declared %<noreturn%> has a %<return%> statement\00", align 1
@current_function_returns_null = external dso_local local_unnamed_addr global i32, align 4
@warn_return_type = external dso_local local_unnamed_addr global i32, align 4
@.str.112 = private unnamed_addr constant [57 x i8] c"%<return%> with no value, in function returning non-void\00", align 1
@.str.113 = private unnamed_addr constant [52 x i8] c"%<return%> with a value, in function returning void\00", align 1
@.str.114 = private unnamed_addr constant [69 x i8] c"ISO C forbids %<return%> with expression, in function returning void\00", align 1
@current_function_returns_value = external dso_local local_unnamed_addr global i32, align 4
@.str.115 = private unnamed_addr constant [43 x i8] c"function returns address of local variable\00", align 1
@warn_sequence_point = external dso_local local_unnamed_addr global i32, align 4
@.str.116 = private unnamed_addr constant [31 x i8] c"switch quantity not an integer\00", align 1
@.str.117 = private unnamed_addr constant [61 x i8] c"%<long%> switch expression not converted to %<int%> in ISO C\00", align 1
@c_switch_stack = common dso_local local_unnamed_addr global %struct.c_switch* null, align 8, !dbg !2038
@.str.118 = private unnamed_addr constant [49 x i8] c"case label is not an integer constant expression\00", align 1
@.str.119 = private unnamed_addr constant [41 x i8] c"case label not within a switch statement\00", align 1
@.str.120 = private unnamed_addr constant [48 x i8] c"%<default%> label not within a switch statement\00", align 1
@.str.121 = private unnamed_addr constant [52 x i8] c"suggest explicit braces to avoid ambiguous %<else%>\00", align 1
@.str.122 = private unnamed_addr constant [42 x i8] c"break statement not within loop or switch\00", align 1
@.str.123 = private unnamed_addr constant [37 x i8] c"continue statement not within a loop\00", align 1
@.str.124 = private unnamed_addr constant [42 x i8] c"break statement used with OpenMP for loop\00", align 1
@.str.125 = private unnamed_addr constant [41 x i8] c"expression statement has incomplete type\00", align 1
@.str.126 = private unnamed_addr constant [30 x i8] c"right shift count is negative\00", align 1
@.str.127 = private unnamed_addr constant [35 x i8] c"right shift count >= width of type\00", align 1
@.str.128 = private unnamed_addr constant [29 x i8] c"left shift count is negative\00", align 1
@.str.129 = private unnamed_addr constant [34 x i8] c"left shift count >= width of type\00", align 1
@.str.130 = private unnamed_addr constant [49 x i8] c"comparing floating point with == or != is unsafe\00", align 1
@.str.131 = private unnamed_addr constant [50 x i8] c"comparison of pointers to disjoint address spaces\00", align 1
@.str.132 = private unnamed_addr constant [61 x i8] c"ISO C forbids comparison of %<void *%> with function pointer\00", align 1
@.str.133 = private unnamed_addr constant [50 x i8] c"comparison of distinct pointer types lacks a cast\00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"the address of %qD will never be NULL\00", align 1
@.str.135 = private unnamed_addr constant [39 x i8] c"comparison between pointer and integer\00", align 1
@.str.136 = private unnamed_addr constant [47 x i8] c"comparison of complete and incomplete pointers\00", align 1
@.str.137 = private unnamed_addr constant [59 x i8] c"ISO C forbids ordered comparisons of pointers to functions\00", align 1
@.str.138 = private unnamed_addr constant [48 x i8] c"ordered comparison of pointer with integer zero\00", align 1
@extra_warnings = external dso_local local_unnamed_addr global i32, align 4
@flag_signed_zeros = external dso_local local_unnamed_addr global i32, align 4
@in_late_binary_op = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !1970
@.str.139 = private unnamed_addr constant [72 x i8] c"used array that cannot be converted to pointer where scalar is required\00", align 1
@.str.140 = private unnamed_addr constant [48 x i8] c"used struct type value where scalar is required\00", align 1
@.str.141 = private unnamed_addr constant [47 x i8] c"used union type value where scalar is required\00", align 1
@bitmap_default_obstack = external dso_local global %struct.bitmap_obstack, align 8
@.str.142 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.144 = private unnamed_addr constant [10 x i8] c"reduction\00", align 1
@.str.145 = private unnamed_addr constant [39 x i8] c"%qE has invalid type for %<reduction%>\00", align 1
@.str.146 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.147 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.148 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.149 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.150 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.151 = private unnamed_addr constant [43 x i8] c"%qE has invalid type for %<reduction(%s)%>\00", align 1
@.str.152 = private unnamed_addr constant [12 x i8] c"copyprivate\00", align 1
@.str.153 = private unnamed_addr constant [7 x i8] c"copyin\00", align 1
@.str.154 = private unnamed_addr constant [45 x i8] c"%qE must be %<threadprivate%> for %<copyin%>\00", align 1
@.str.155 = private unnamed_addr constant [36 x i8] c"%qE is not a variable in clause %qs\00", align 1
@.str.156 = private unnamed_addr constant [43 x i8] c"%qE appears more than once in data clauses\00", align 1
@.str.157 = private unnamed_addr constant [13 x i8] c"firstprivate\00", align 1
@.str.158 = private unnamed_addr constant [49 x i8] c"%qE is not a variable in clause %<firstprivate%>\00", align 1
@.str.159 = private unnamed_addr constant [12 x i8] c"lastprivate\00", align 1
@.str.160 = private unnamed_addr constant [48 x i8] c"%qE is not a variable in clause %<lastprivate%>\00", align 1
@.str.161 = private unnamed_addr constant [14 x i8] c"threadprivate\00", align 1
@.str.162 = private unnamed_addr constant [33 x i8] c"%qE is predetermined %qs for %qs\00", align 1
@.str.163 = private unnamed_addr constant [28 x i8] c"invalid use of %<restrict%>\00", align 1
@.str.164 = private unnamed_addr constant [57 x i8] c"C++ requires promoted type, not enum type, in %<va_arg%>\00", align 1
@.str.165 = private unnamed_addr constant [49 x i8] c"%qT and %qT are in disjoint named address spaces\00", align 1
@.str.166 = private unnamed_addr constant [54 x i8] c"can%'t mix operands of decimal float and vector types\00", align 1
@.str.167 = private unnamed_addr constant [55 x i8] c"can%'t mix operands of decimal float and complex types\00", align 1
@.str.168 = private unnamed_addr constant [59 x i8] c"can%'t mix operands of decimal float and other float types\00", align 1
@mode_precision = external dso_local local_unnamed_addr constant [87 x i16], align 16
@mode_fbit = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_ibit = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.169 = private unnamed_addr constant [57 x i8] c"function return types not compatible due to %<volatile%>\00", align 1
@parser_obstack = external dso_local global %struct.obstack, align 8
@.str.170 = private unnamed_addr constant [13 x i8] c"type generic\00", align 1
@.str.171 = private unnamed_addr constant [35 x i8] c"too many arguments to function %qE\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"declared here\00", align 1
@.str.173 = private unnamed_addr constant [42 x i8] c"type of formal parameter %d is incomplete\00", align 1
@warn_traditional_conversion = external dso_local local_unnamed_addr global i32, align 4
@warn_traditional = external dso_local local_unnamed_addr global i32, align 4
@.str.174 = private unnamed_addr constant [76 x i8] c"passing argument %d of %qE as integer rather than floating due to prototype\00", align 1
@.str.175 = private unnamed_addr constant [75 x i8] c"passing argument %d of %qE as integer rather than complex due to prototype\00", align 1
@.str.176 = private unnamed_addr constant [76 x i8] c"passing argument %d of %qE as complex rather than floating due to prototype\00", align 1
@.str.177 = private unnamed_addr constant [76 x i8] c"passing argument %d of %qE as floating rather than integer due to prototype\00", align 1
@.str.178 = private unnamed_addr constant [75 x i8] c"passing argument %d of %qE as complex rather than integer due to prototype\00", align 1
@.str.179 = private unnamed_addr constant [76 x i8] c"passing argument %d of %qE as floating rather than complex due to prototype\00", align 1
@.str.180 = private unnamed_addr constant [80 x i8] c"passing argument %d of %qE as %<float%> rather than %<double%> due to prototype\00", align 1
@.str.181 = private unnamed_addr constant [67 x i8] c"passing argument %d of %qE as %qT rather than %qT due to prototype\00", align 1
@.str.182 = private unnamed_addr constant [65 x i8] c"passing argument %d of %qE with different width due to prototype\00", align 1
@.str.183 = private unnamed_addr constant [56 x i8] c"passing argument %d of %qE as unsigned due to prototype\00", align 1
@.str.184 = private unnamed_addr constant [54 x i8] c"passing argument %d of %qE as signed due to prototype\00", align 1
@.str.185 = private unnamed_addr constant [34 x i8] c"too few arguments to function %qE\00", align 1
@.str.186 = private unnamed_addr constant [44 x i8] c"arithmetic on pointer to an incomplete type\00", align 1
@.str.187 = private unnamed_addr constant [35 x i8] c"assignment of read-only member %qD\00", align 1
@.str.188 = private unnamed_addr constant [34 x i8] c"increment of read-only member %qD\00", align 1
@.str.189 = private unnamed_addr constant [34 x i8] c"decrement of read-only member %qD\00", align 1
@.str.190 = private unnamed_addr constant [44 x i8] c"read-only member %qD used as %<asm%> output\00", align 1
@.str.191 = private unnamed_addr constant [37 x i8] c"assignment of read-only variable %qD\00", align 1
@.str.192 = private unnamed_addr constant [36 x i8] c"increment of read-only variable %qD\00", align 1
@.str.193 = private unnamed_addr constant [36 x i8] c"decrement of read-only variable %qD\00", align 1
@.str.194 = private unnamed_addr constant [46 x i8] c"read-only variable %qD used as %<asm%> output\00", align 1
@.str.195 = private unnamed_addr constant [37 x i8] c"assignment of read-only location %qE\00", align 1
@.str.196 = private unnamed_addr constant [36 x i8] c"increment of read-only location %qE\00", align 1
@.str.197 = private unnamed_addr constant [36 x i8] c"decrement of read-only location %qE\00", align 1
@.str.198 = private unnamed_addr constant [46 x i8] c"read-only location %qE used as %<asm%> output\00", align 1
@.str.199 = private unnamed_addr constant [31 x i8] c"types are not quite compatible\00", align 1
@.str.200 = private unnamed_addr constant [41 x i8] c"pointer target types incompatible in C++\00", align 1
@.str.201 = private unnamed_addr constant [42 x i8] c"cast adds new qualifiers to function type\00", align 1
@.str.202 = private unnamed_addr constant [50 x i8] c"cast discards qualifiers from pointer target type\00", align 1
@.str.203 = private unnamed_addr constant [66 x i8] c"new qualifiers in middle of multi-level non-const cast are unsafe\00", align 1
@.str.204 = private unnamed_addr constant [66 x i8] c"enum conversion when passing argument %d of %qE is invalid in C++\00", align 1
@.str.205 = private unnamed_addr constant [41 x i8] c"expected %qT but argument is of type %qT\00", align 1
@.str.206 = private unnamed_addr constant [52 x i8] c"enum conversion in initialization is invalid in C++\00", align 1
@.str.207 = private unnamed_addr constant [44 x i8] c"enum conversion in return is invalid in C++\00", align 1
@.str.208 = private unnamed_addr constant [42 x i8] c"cannot pass rvalue to reference parameter\00", align 1
@.str.209 = private unnamed_addr constant [77 x i8] c"passing argument %d of %qE makes qualified function pointer from unqualified\00", align 1
@.str.210 = private unnamed_addr constant [61 x i8] c"assignment makes qualified function pointer from unqualified\00", align 1
@.str.211 = private unnamed_addr constant [65 x i8] c"initialization makes qualified function pointer from unqualified\00", align 1
@.str.212 = private unnamed_addr constant [57 x i8] c"return makes qualified function pointer from unqualified\00", align 1
@.str.213 = private unnamed_addr constant [72 x i8] c"passing argument %d of %qE discards qualifiers from pointer target type\00", align 1
@.str.214 = private unnamed_addr constant [56 x i8] c"assignment discards qualifiers from pointer target type\00", align 1
@.str.215 = private unnamed_addr constant [60 x i8] c"initialization discards qualifiers from pointer target type\00", align 1
@.str.216 = private unnamed_addr constant [52 x i8] c"return discards qualifiers from pointer target type\00", align 1
@.str.217 = private unnamed_addr constant [50 x i8] c"ISO C prohibits argument conversion to union type\00", align 1
@.str.218 = private unnamed_addr constant [69 x i8] c"request for implicit conversion from %qT to %qT not permitted in C++\00", align 1
@.str.219 = private unnamed_addr constant [70 x i8] c"passing argument %d of %qE from pointer to non-enclosed address space\00", align 1
@.str.220 = private unnamed_addr constant [54 x i8] c"assignment from pointer to non-enclosed address space\00", align 1
@.str.221 = private unnamed_addr constant [58 x i8] c"initialization from pointer to non-enclosed address space\00", align 1
@.str.222 = private unnamed_addr constant [50 x i8] c"return from pointer to non-enclosed address space\00", align 1
@warn_missing_format_attribute = external dso_local local_unnamed_addr global i32, align 4
@.str.223 = private unnamed_addr constant [63 x i8] c"argument %d of %qE might be a candidate for a format attribute\00", align 1
@.str.224 = private unnamed_addr constant [70 x i8] c"assignment left-hand side might be a candidate for a format attribute\00", align 1
@.str.225 = private unnamed_addr constant [74 x i8] c"initialization left-hand side might be a candidate for a format attribute\00", align 1
@.str.226 = private unnamed_addr constant [56 x i8] c"return type might be a candidate for a format attribute\00", align 1
@.str.227 = private unnamed_addr constant [81 x i8] c"ISO C forbids passing argument %d of %qE between function pointer and %<void *%>\00", align 1
@.str.228 = private unnamed_addr constant [65 x i8] c"ISO C forbids assignment between function pointer and %<void *%>\00", align 1
@.str.229 = private unnamed_addr constant [69 x i8] c"ISO C forbids initialization between function pointer and %<void *%>\00", align 1
@.str.230 = private unnamed_addr constant [61 x i8] c"ISO C forbids return between function pointer and %<void *%>\00", align 1
@warn_pointer_sign = external dso_local local_unnamed_addr global i32, align 4
@.str.231 = private unnamed_addr constant [67 x i8] c"pointer targets in passing argument %d of %qE differ in signedness\00", align 1
@.str.232 = private unnamed_addr constant [51 x i8] c"pointer targets in assignment differ in signedness\00", align 1
@.str.233 = private unnamed_addr constant [55 x i8] c"pointer targets in initialization differ in signedness\00", align 1
@.str.234 = private unnamed_addr constant [47 x i8] c"pointer targets in return differ in signedness\00", align 1
@.str.235 = private unnamed_addr constant [58 x i8] c"passing argument %d of %qE from incompatible pointer type\00", align 1
@.str.236 = private unnamed_addr constant [42 x i8] c"assignment from incompatible pointer type\00", align 1
@.str.237 = private unnamed_addr constant [46 x i8] c"initialization from incompatible pointer type\00", align 1
@.str.238 = private unnamed_addr constant [38 x i8] c"return from incompatible pointer type\00", align 1
@.str.239 = private unnamed_addr constant [32 x i8] c"invalid use of non-lvalue array\00", align 1
@.str.240 = private unnamed_addr constant [69 x i8] c"passing argument %d of %qE makes pointer from integer without a cast\00", align 1
@.str.241 = private unnamed_addr constant [53 x i8] c"assignment makes pointer from integer without a cast\00", align 1
@.str.242 = private unnamed_addr constant [57 x i8] c"initialization makes pointer from integer without a cast\00", align 1
@.str.243 = private unnamed_addr constant [49 x i8] c"return makes pointer from integer without a cast\00", align 1
@.str.244 = private unnamed_addr constant [69 x i8] c"passing argument %d of %qE makes integer from pointer without a cast\00", align 1
@.str.245 = private unnamed_addr constant [53 x i8] c"assignment makes integer from pointer without a cast\00", align 1
@.str.246 = private unnamed_addr constant [57 x i8] c"initialization makes integer from pointer without a cast\00", align 1
@.str.247 = private unnamed_addr constant [49 x i8] c"return makes integer from pointer without a cast\00", align 1
@.str.248 = private unnamed_addr constant [41 x i8] c"incompatible type for argument %d of %qE\00", align 1
@.str.249 = private unnamed_addr constant [60 x i8] c"incompatible types when assigning to type %qT from type %qT\00", align 1
@.str.250 = private unnamed_addr constant [61 x i8] c"incompatible types when initializing type %qT using type %qT\00", align 1
@.str.251 = private unnamed_addr constant [64 x i8] c"incompatible types when returning type %qT but %qT was expected\00", align 1
@.str.252 = private unnamed_addr constant [6 x i8] c"[%lu]\00", align 1
@.str.253 = private unnamed_addr constant [40 x i8] c"char-array initialized from wide string\00", align 1
@.str.254 = private unnamed_addr constant [54 x i8] c"wide character array initialized from non-wide string\00", align 1
@.str.255 = private unnamed_addr constant [63 x i8] c"wide character array initialized from incompatible wide string\00", align 1
@.str.256 = private unnamed_addr constant [50 x i8] c"initializer-string for array of chars is too long\00", align 1
@.str.257 = private unnamed_addr constant [55 x i8] c"initializer-string for array chars is too long for C++\00", align 1
@.str.258 = private unnamed_addr constant [61 x i8] c"array of inappropriate type initialized from string constant\00", align 1
@.str.259 = private unnamed_addr constant [53 x i8] c"array initialized from non-constant array expression\00", align 1
@.str.260 = private unnamed_addr constant [36 x i8] c"initializer element is not constant\00", align 1
@flag_pedantic_errors = external dso_local local_unnamed_addr global i32, align 4
@.str.261 = private unnamed_addr constant [49 x i8] c"initializer element is not a constant expression\00", align 1
@.str.262 = private unnamed_addr constant [51 x i8] c"initializer element is not computable at load time\00", align 1
@.str.263 = private unnamed_addr constant [45 x i8] c"variable-sized object may not be initialized\00", align 1
@.str.264 = private unnamed_addr constant [20 x i8] c"invalid initializer\00", align 1
@.str.265 = private unnamed_addr constant [12 x i8] c"<anonymous>\00", align 1
@.str.266 = private unnamed_addr constant [48 x i8] c"initialized field with side-effects overwritten\00", align 1
@warn_override_init = external dso_local local_unnamed_addr global i32, align 4
@.str.267 = private unnamed_addr constant [30 x i8] c"initialized field overwritten\00", align 1
@.str.268 = private unnamed_addr constant [25 x i8] c"statement with no effect\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.269 = private unnamed_addr constant [47 x i8] c"pointer of type %<void *%> used in subtraction\00", align 1
@.str.270 = private unnamed_addr constant [42 x i8] c"pointer to a function used in subtraction\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2046 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2059, metadata !DIExpression()), !dbg !2061
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2060, metadata !DIExpression()), !dbg !2061
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2062
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2063
  ret i32 %call, !dbg !2064
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2065 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2069
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2070
  ret i32 %call, !dbg !2071
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2072 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2127, metadata !DIExpression()), !dbg !2128
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2129
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2129
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2129
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2129
  %cmp = icmp uge i8* %0, %1, !dbg !2129
  %conv1 = zext i1 %cmp to i64, !dbg !2129
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2129
  %tobool = icmp eq i64 %expval, 0, !dbg !2129
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2129

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2129
  br label %cond.end, !dbg !2129

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2129
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2129
  %2 = load i8, i8* %0, align 1, !dbg !2129
  %conv3 = zext i8 %2 to i32, !dbg !2129
  br label %cond.end, !dbg !2129

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2129
  ret i32 %cond, !dbg !2130
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2131 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2133, metadata !DIExpression()), !dbg !2134
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2135
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2135
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2135
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2135
  %cmp = icmp uge i8* %0, %1, !dbg !2135
  %conv1 = zext i1 %cmp to i64, !dbg !2135
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2135
  %tobool = icmp eq i64 %expval, 0, !dbg !2135
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2135

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2135
  br label %cond.end, !dbg !2135

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2135
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2135
  %2 = load i8, i8* %0, align 1, !dbg !2135
  %conv3 = zext i8 %2 to i32, !dbg !2135
  br label %cond.end, !dbg !2135

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2135
  ret i32 %cond, !dbg !2136
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2137 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2138
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2138
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2138
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2138
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2138
  %cmp = icmp uge i8* %1, %2, !dbg !2138
  %conv1 = zext i1 %cmp to i64, !dbg !2138
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2138
  %tobool = icmp eq i64 %expval, 0, !dbg !2138
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2138

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2138
  br label %cond.end, !dbg !2138

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2138
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2138
  %3 = load i8, i8* %1, align 1, !dbg !2138
  %conv3 = zext i8 %3 to i32, !dbg !2138
  br label %cond.end, !dbg !2138

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2138
  ret i32 %cond, !dbg !2139
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2140 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2144, metadata !DIExpression()), !dbg !2145
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2146
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2147
  ret i32 %call, !dbg !2148
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2149 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2153, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2154, metadata !DIExpression()), !dbg !2155
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2156
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2156
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2156
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2156
  %cmp = icmp uge i8* %0, %1, !dbg !2156
  %conv1 = zext i1 %cmp to i64, !dbg !2156
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2156
  %tobool = icmp eq i64 %expval, 0, !dbg !2156
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2156

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2156
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2156
  br label %cond.end, !dbg !2156

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2156
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2156
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2156
  store i8 %conv2, i8* %0, align 1, !dbg !2156
  %conv6 = and i32 %__c, 255, !dbg !2156
  br label %cond.end, !dbg !2156

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2156
  ret i32 %cond, !dbg !2157
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2158 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2160, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2161, metadata !DIExpression()), !dbg !2162
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2163
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2163
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2163
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2163
  %cmp = icmp uge i8* %0, %1, !dbg !2163
  %conv1 = zext i1 %cmp to i64, !dbg !2163
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2163
  %tobool = icmp eq i64 %expval, 0, !dbg !2163
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2163

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2163
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2163
  br label %cond.end, !dbg !2163

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2163
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2163
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2163
  store i8 %conv2, i8* %0, align 1, !dbg !2163
  %conv6 = and i32 %__c, 255, !dbg !2163
  br label %cond.end, !dbg !2163

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2163
  ret i32 %cond, !dbg !2164
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2165 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2167, metadata !DIExpression()), !dbg !2168
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2169
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2169
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2169
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2169
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2169
  %cmp = icmp uge i8* %1, %2, !dbg !2169
  %conv1 = zext i1 %cmp to i64, !dbg !2169
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2169
  %tobool = icmp eq i64 %expval, 0, !dbg !2169
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2169

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2169
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2169
  br label %cond.end, !dbg !2169

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2169
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2169
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2169
  store i8 %conv4, i8* %1, align 1, !dbg !2169
  %conv6 = and i32 %__c, 255, !dbg !2169
  br label %cond.end, !dbg !2169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2169
  ret i32 %cond, !dbg !2170
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2171 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2177, metadata !DIExpression()), !dbg !2180
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2178, metadata !DIExpression()), !dbg !2180
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2179, metadata !DIExpression()), !dbg !2180
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2181
  ret i64 %call, !dbg !2182
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2183 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2185, metadata !DIExpression()), !dbg !2186
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2187
  %0 = load i32, i32* %_flags, align 8, !dbg !2187
  %and = lshr i32 %0, 4, !dbg !2187
  %and.lobit = and i32 %and, 1, !dbg !2187
  ret i32 %and.lobit, !dbg !2188
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2189 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2191, metadata !DIExpression()), !dbg !2192
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2193
  %0 = load i32, i32* %_flags, align 8, !dbg !2193
  %and = lshr i32 %0, 5, !dbg !2193
  %and.lobit = and i32 %and, 1, !dbg !2193
  ret i32 %and.lobit, !dbg !2194
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2195 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2198, metadata !DIExpression()), !dbg !2199
  %__c.off = add i32 %__c, 128, !dbg !2200
  %0 = icmp ult i32 %__c.off, 384, !dbg !2200
  br i1 %0, label %cond.true, label %cond.end, !dbg !2200

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2201
  %1 = load i32*, i32** %call, align 8, !dbg !2202
  %idxprom = sext i32 %__c to i64, !dbg !2203
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2203
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2203
  br label %cond.end, !dbg !2204

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2204
  ret i32 %cond, !dbg !2205
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2206 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2208, metadata !DIExpression()), !dbg !2209
  %__c.off = add i32 %__c, 128, !dbg !2210
  %0 = icmp ult i32 %__c.off, 384, !dbg !2210
  br i1 %0, label %cond.true, label %cond.end, !dbg !2210

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2211
  %1 = load i32*, i32** %call, align 8, !dbg !2212
  %idxprom = sext i32 %__c to i64, !dbg !2213
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2213
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2213
  br label %cond.end, !dbg !2214

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2214
  ret i32 %cond, !dbg !2215
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2216 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2221, metadata !DIExpression()), !dbg !2222
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2223
  %conv = trunc i64 %call to i32, !dbg !2224
  ret i32 %conv, !dbg !2225
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2226 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2230, metadata !DIExpression()), !dbg !2231
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2232
  ret i64 %call, !dbg !2233
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2234 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2239, metadata !DIExpression()), !dbg !2240
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2241
  ret i64 %call, !dbg !2242
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2243 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2249, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2250, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2251, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2252, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2253, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i64 0, metadata !2254, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2255, metadata !DIExpression()), !dbg !2259
  br label %while.cond, !dbg !2260

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2261
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2259
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2255, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2254, metadata !DIExpression()), !dbg !2259
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2262
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2260

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2263
  %div = lshr i64 %add, 1, !dbg !2265
  call void @llvm.dbg.value(metadata i64 %div, metadata !2256, metadata !DIExpression()), !dbg !2259
  %mul = mul i64 %div, %__size, !dbg !2266
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2267
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2257, metadata !DIExpression()), !dbg !2259
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2268
  call void @llvm.dbg.value(metadata i32 %call, metadata !2258, metadata !DIExpression()), !dbg !2259
  %cmp1 = icmp slt i32 %call, 0, !dbg !2269
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2271

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2272
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2274

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2275
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2254, metadata !DIExpression()), !dbg !2259
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2259
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2259
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2255, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2254, metadata !DIExpression()), !dbg !2259
  br label %while.cond, !dbg !2260, !llvm.loop !2276

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2259
  ret i8* %retval.0, !dbg !2278
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2279 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2285, metadata !DIExpression()), !dbg !2286
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2287
  ret double %call, !dbg !2288
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2289 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2298, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2299, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.value(metadata i32 %base, metadata !2300, metadata !DIExpression()), !dbg !2301
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2302
  ret i64 %call, !dbg !2303
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2304 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2310, metadata !DIExpression()), !dbg !2313
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2311, metadata !DIExpression()), !dbg !2313
  call void @llvm.dbg.value(metadata i32 %base, metadata !2312, metadata !DIExpression()), !dbg !2313
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2314
  ret i64 %call, !dbg !2315
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2316 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2327, metadata !DIExpression()), !dbg !2330
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2328, metadata !DIExpression()), !dbg !2330
  call void @llvm.dbg.value(metadata i32 %base, metadata !2329, metadata !DIExpression()), !dbg !2330
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2331
  ret i64 %call, !dbg !2332
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2333 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2337, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2338, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i32 %base, metadata !2339, metadata !DIExpression()), !dbg !2340
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2341
  ret i64 %call, !dbg !2342
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2343 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2383, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2384, metadata !DIExpression()), !dbg !2385
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2386
  ret i32 %call, !dbg !2387
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2390, metadata !DIExpression()), !dbg !2392
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2391, metadata !DIExpression()), !dbg !2392
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2393
  ret i32 %call, !dbg !2394
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2395 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2399, metadata !DIExpression()), !dbg !2401
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2400, metadata !DIExpression()), !dbg !2401
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2402
  ret i32 %call, !dbg !2403
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2404 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2408, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2409, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2410, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2411, metadata !DIExpression()), !dbg !2412
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2413
  ret i32 %call, !dbg !2414
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2415 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2419, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2420, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2421, metadata !DIExpression()), !dbg !2422
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2421, metadata !DIExpression(DW_OP_deref)), !dbg !2422
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2423
  ret i32 %call, !dbg !2424
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2425 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2429, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2430, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2431, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2432, metadata !DIExpression()), !dbg !2433
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2432, metadata !DIExpression(DW_OP_deref)), !dbg !2433
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2434
  ret i32 %call, !dbg !2435
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2436 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2460, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2461, metadata !DIExpression()), !dbg !2462
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2463
  ret i32 %call, !dbg !2464
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2465 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2467, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2468, metadata !DIExpression()), !dbg !2469
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2470
  ret i32 %call, !dbg !2471
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2476, metadata !DIExpression()), !dbg !2478
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2477, metadata !DIExpression()), !dbg !2478
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2479
  ret i32 %call, !dbg !2480
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2481 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2485, metadata !DIExpression()), !dbg !2489
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2486, metadata !DIExpression()), !dbg !2489
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2487, metadata !DIExpression()), !dbg !2489
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2488, metadata !DIExpression()), !dbg !2489
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2490
  ret i32 %call, !dbg !2491
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @require_complete_type(%union.tree_node* %value) local_unnamed_addr #5 !dbg !2492 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !2496, metadata !DIExpression()), !dbg !2498
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2499
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !2499
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2497, metadata !DIExpression()), !dbg !2498
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2500
  %cmp = icmp eq %union.tree_node* %1, %value, !dbg !2502
  %cmp2 = icmp eq %union.tree_node* %0, %1, !dbg !2503
  %or.cond = or i1 %cmp, %cmp2, !dbg !2504
  br i1 %or.cond, label %if.then, label %if.end, !dbg !2504

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !2505

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2506
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !2506
  %cmp4 = icmp eq %union.tree_node* %3, null, !dbg !2506
  br i1 %cmp4, label %if.end6, label %cleanup, !dbg !2508

if.end6:                                          ; preds = %if.end
  tail call void @c_incomplete_type_error(%union.tree_node* %value, %union.tree_node* %0) #7, !dbg !2509
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2510
  br label %cleanup, !dbg !2511

cleanup:                                          ; preds = %if.end, %if.end6, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ %4, %if.end6 ], [ %value, %if.end ], !dbg !2498
  ret %union.tree_node* %retval.0, !dbg !2512
}

; Function Attrs: nounwind uwtable
define dso_local void @c_incomplete_type_error(%union.tree_node* %value, %union.tree_node* %type) local_unnamed_addr #5 !dbg !2513 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !2517, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2518, metadata !DIExpression()), !dbg !2523
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2524
  %bf.load = load i64, i64* %0, align 8, !dbg !2524
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2526
  %cmp = icmp eq i64 %bf.cast1, 0, !dbg !2526
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !2527

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %union.tree_node* %value, null, !dbg !2528
  br i1 %cmp1, label %if.else, label %land.lhs.true, !dbg !2529

land.lhs.true:                                    ; preds = %if.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2530
  %bf.load3 = load i64, i64* %1, align 8, !dbg !2530
  %bf.cast53 = and i64 %bf.load3, 65535, !dbg !2531
  %cmp6 = icmp eq i64 %bf.cast53, 32, !dbg !2531
  br i1 %cmp6, label %if.then12, label %lor.lhs.false, !dbg !2532

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp11 = icmp eq i64 %bf.cast53, 34, !dbg !2533
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !2534

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), %union.tree_node* nonnull %value) #6, !dbg !2535
  br label %cleanup.cont, !dbg !2535

if.else:                                          ; preds = %if.end, %lor.lhs.false
  br label %retry, !dbg !2536

retry:                                            ; preds = %if.end28, %if.else
  %bf.load14 = phi i64 [ %bf.load, %if.else ], [ %bf.load14.pre, %if.end28 ], !dbg !2537
  %type.addr.0 = phi %union.tree_node* [ %type, %if.else ], [ %7, %if.end28 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.label(metadata !2520), !dbg !2538
  %2 = trunc i64 %bf.load14 to i16, !dbg !2537
  switch i16 %2, label %sw.default [
    i16 16, label %sw.epilog.loopexit
    i16 17, label %sw.bb17
    i16 6, label %sw.bb18
    i16 19, label %sw.bb19
    i16 15, label %sw.bb20
  ], !dbg !2539

sw.bb17:                                          ; preds = %retry
  %type.addr.0.lcssa21 = phi %union.tree_node* [ %type.addr.0, %retry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa21, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa21, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa21, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), metadata !2519, metadata !DIExpression()), !dbg !2523
  br label %sw.epilog, !dbg !2540

sw.bb18:                                          ; preds = %retry
  %type.addr.0.lcssa22 = phi %union.tree_node* [ %type.addr.0, %retry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa22, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa22, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa22, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), metadata !2519, metadata !DIExpression()), !dbg !2523
  br label %sw.epilog, !dbg !2542

sw.bb19:                                          ; preds = %retry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2543
  br label %cleanup.cont, !dbg !2544

sw.bb20:                                          ; preds = %retry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2545
  %3 = bitcast i32* %values to %union.tree_node**, !dbg !2545
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !2545
  %tobool = icmp eq %union.tree_node* %4, null, !dbg !2545
  br i1 %tobool, label %if.end30, label %if.then22, !dbg !2547

if.then22:                                        ; preds = %sw.bb20
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2548
  %5 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !2548
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !2548
  %cmp26 = icmp eq %union.tree_node* %6, null, !dbg !2551
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !2552

if.then27:                                        ; preds = %if.then22
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2553
  br label %cleanup.cont, !dbg !2555

if.end28:                                         ; preds = %if.then22
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2556
  %7 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !2556
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !2518, metadata !DIExpression()), !dbg !2523
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2557
  %bf.load14.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !2537
  br label %retry, !dbg !2558

if.end30:                                         ; preds = %sw.bb20
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !2559
  br label %cleanup.cont, !dbg !2560

sw.default:                                       ; preds = %retry
  %type.addr.0.lcssa = phi %union.tree_node* [ %type.addr.0, %retry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !2518, metadata !DIExpression()), !dbg !2523
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 254, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2561
  br label %sw.epilog, !dbg !2562

sw.epilog.loopexit:                               ; preds = %retry
  %type.addr.0.lcssa20 = phi %union.tree_node* [ %type.addr.0, %retry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa20, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa20, metadata !2518, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa20, metadata !2518, metadata !DIExpression()), !dbg !2523
  br label %sw.epilog, !dbg !2563

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %sw.bb18, %sw.bb17
  %type.addr.026 = phi %union.tree_node* [ %type.addr.0.lcssa, %sw.default ], [ %type.addr.0.lcssa22, %sw.bb18 ], [ %type.addr.0.lcssa21, %sw.bb17 ], [ %type.addr.0.lcssa20, %sw.epilog.loopexit ]
  %type_code_string.0 = phi i8* [ undef, %sw.default ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), %sw.bb18 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), %sw.bb17 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %sw.epilog.loopexit ]
  call void @llvm.dbg.value(metadata i8* %type_code_string.0, metadata !2519, metadata !DIExpression()), !dbg !2523
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.026, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !2563
  %9 = bitcast %union.tree_node** %8 to i64**, !dbg !2563
  %10 = load i64*, i64** %9, align 8, !dbg !2563
  %bf.load33 = load i64, i64* %10, align 8, !dbg !2563
  %bf.cast352 = and i64 %bf.load33, 65535, !dbg !2565
  %cmp36 = icmp eq i64 %bf.cast352, 1, !dbg !2565
  br i1 %cmp36, label %if.then37, label %if.else40, !dbg !2566

if.then37:                                        ; preds = %sw.epilog
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0), i8* %type_code_string.0, i64* %10) #6, !dbg !2567
  br label %cleanup.cont, !dbg !2567

if.else40:                                        ; preds = %sw.epilog
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i64* %10) #6, !dbg !2568
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %sw.bb19, %if.then27, %if.end30, %entry, %if.then37, %if.else40, %if.then12
  ret void, !dbg !2569
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_type_promotes_to(%union.tree_node* %type) local_unnamed_addr #5 !dbg !2570 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2572, metadata !DIExpression()), !dbg !2573
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2574
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !2574
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !2576
  %cmp = icmp eq %union.tree_node* %1, %2, !dbg !2577
  br i1 %cmp, label %if.then, label %if.end, !dbg !2578

if.then:                                          ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !2579
  br label %return, !dbg !2580

if.end:                                           ; preds = %entry
  %call = tail call zeroext i8 @c_promoting_integer_type_p(%union.tree_node* %type) #6, !dbg !2581
  %tobool = icmp eq i8 %call, 0, !dbg !2581
  br i1 %tobool, label %return, label %if.then2, !dbg !2583

if.then2:                                         ; preds = %if.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2584
  %bf.load = load i64, i64* %4, align 8, !dbg !2584
  %bf.cast1 = and i64 %bf.load, 2097152, !dbg !2584
  %tobool3 = icmp eq i64 %bf.cast1, 0, !dbg !2584
  br i1 %tobool3, label %if.then2.if.end13_crit_edge, label %land.lhs.true, !dbg !2587

if.then2.if.end13_crit_edge:                      ; preds = %if.then2
  %.pre = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !2588
  br label %if.end13, !dbg !2587

land.lhs.true:                                    ; preds = %if.then2
  %type4 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !2589
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type4, i64 0, i32 6, !dbg !2589
  %bf.load5 = load i32, i32* %precision, align 4, !dbg !2589
  %5 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !2590
  %precision8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !2590
  %bf.load9 = load i32, i32* %precision8, align 4, !dbg !2590
  %6 = xor i32 %bf.load5, %bf.load9, !dbg !2591
  %7 = and i32 %6, 1023, !dbg !2591
  %cmp11 = icmp eq i32 %7, 0, !dbg !2591
  %8 = bitcast %struct.tree_type* %5 to %union.tree_node*, !dbg !2592
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2592

if.then12:                                        ; preds = %land.lhs.true
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !2593
  br label %return, !dbg !2594

if.end13:                                         ; preds = %if.then2.if.end13_crit_edge, %land.lhs.true
  %10 = phi %union.tree_node* [ %.pre, %if.then2.if.end13_crit_edge ], [ %8, %land.lhs.true ], !dbg !2588
  br label %return, !dbg !2595

return:                                           ; preds = %if.end, %if.end13, %if.then12, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ %9, %if.then12 ], [ %10, %if.end13 ], [ %type, %if.end ], !dbg !2573
  ret %union.tree_node* %retval.0, !dbg !2596
}

declare dso_local zeroext i8 @c_promoting_integer_type_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @c_vla_type_p(%union.tree_node* %t) local_unnamed_addr #5 !dbg !2597 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2601, metadata !DIExpression()), !dbg !2602
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2603
  %bf.load = load i64, i64* %0, align 8, !dbg !2603
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2605
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !2605
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2606

land.lhs.true:                                    ; preds = %entry
  %type = bitcast %union.tree_node* %t to %struct.tree_type*, !dbg !2607
  %lang_flag_1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !2607
  %bf.load1 = load i32, i32* %lang_flag_1, align 4, !dbg !2607
  %bf.clear2 = and i32 %bf.load1, 67108864, !dbg !2607
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !2607
  br i1 %tobool, label %if.end, label %return, !dbg !2608

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %return, !dbg !2609

return:                                           ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %land.lhs.true ], !dbg !2602
  ret i8 %retval.0, !dbg !2610
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @composite_type(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !2611 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !2615, metadata !DIExpression()), !dbg !2665
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !2616, metadata !DIExpression()), !dbg !2665
  %cmp = icmp eq %union.tree_node* %t1, %t2, !dbg !2666
  br i1 %cmp, label %cleanup605, label %if.end, !dbg !2668

if.end:                                           ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2669
  %cmp1 = icmp eq %union.tree_node* %0, %t1, !dbg !2671
  br i1 %cmp1, label %cleanup605, label %if.end3, !dbg !2672

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq %union.tree_node* %0, %t2, !dbg !2673
  br i1 %cmp4, label %cleanup605, label %if.end6, !dbg !2675

if.end6:                                          ; preds = %if.end3
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2676
  %bf.load = load i64, i64* %1, align 8, !dbg !2676
  %2 = trunc i64 %bf.load to i32, !dbg !2676
  %bf.cast = and i32 %2, 65535, !dbg !2676
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !2617, metadata !DIExpression()), !dbg !2665
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2677
  %bf.load8 = load i64, i64* %3, align 8, !dbg !2677
  %4 = trunc i64 %bf.load8 to i32, !dbg !2677
  %bf.cast10 = and i32 %4, 65535, !dbg !2677
  call void @llvm.dbg.value(metadata i32 %bf.cast10, metadata !2618, metadata !DIExpression()), !dbg !2665
  %5 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 12), align 8, !dbg !2678
  %call = tail call %union.tree_node* %5(%union.tree_node* %t1, %union.tree_node* %t2) #6, !dbg !2679
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2619, metadata !DIExpression()), !dbg !2665
  %cmp11 = icmp eq i32 %bf.cast, 6, !dbg !2680
  %cmp12 = icmp eq i32 %bf.cast10, 8, !dbg !2682
  %or.cond = and i1 %cmp11, %cmp12, !dbg !2683
  br i1 %or.cond, label %cleanup605, label %if.end14, !dbg !2683

if.end14:                                         ; preds = %if.end6
  %cmp15 = icmp eq i32 %bf.cast10, 6, !dbg !2684
  %cmp17 = icmp eq i32 %bf.cast, 8, !dbg !2686
  %or.cond4 = and i1 %cmp15, %cmp17, !dbg !2687
  br i1 %or.cond4, label %cleanup605, label %if.end19, !dbg !2687

if.end19:                                         ; preds = %if.end14
  %cmp20 = icmp eq i32 %bf.cast, %bf.cast10, !dbg !2688
  br i1 %cmp20, label %cond.end, label %cond.true, !dbg !2688

cond.true:                                        ; preds = %if.end19
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 388, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2688
  br label %cond.end, !dbg !2688

cond.end:                                         ; preds = %if.end19, %cond.true
  %trunc = trunc i64 %bf.load to i16, !dbg !2689
  switch i16 %trunc, label %sw.default [
    i16 10, label %sw.bb
    i16 15, label %sw.bb27
    i16 6, label %sw.bb321
    i16 16, label %sw.bb321
    i16 17, label %sw.bb321
    i16 20, label %sw.bb339
  ], !dbg !2689

sw.bb:                                            ; preds = %cond.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2690
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !2690
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !2620, metadata !DIExpression()), !dbg !2691
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2692
  %7 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !2692
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !2623, metadata !DIExpression()), !dbg !2691
  %call23 = tail call %union.tree_node* @composite_type(%union.tree_node* %6, %union.tree_node* %7) #7, !dbg !2693
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !2624, metadata !DIExpression()), !dbg !2691
  %call24 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call23) #6, !dbg !2694
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call25 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call24, %union.tree_node* %call) #6, !dbg !2695
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call26 = tail call fastcc %union.tree_node* @qualify_type(%union.tree_node* %call25, %union.tree_node* %t2) #7, !dbg !2696
  ret %union.tree_node* %call26, !dbg !2697

sw.bb27:                                          ; preds = %cond.end
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2698
  %8 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !2698
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2699
  %9 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !2699
  %call32 = tail call %union.tree_node* @composite_type(%union.tree_node* %8, %union.tree_node* %9) #7, !dbg !2700
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !2625, metadata !DIExpression()), !dbg !2701
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2702
  %10 = bitcast i32* %values to %union.tree_node**, !dbg !2702
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !2702
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !2629, metadata !DIExpression()), !dbg !2701
  %values35 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2703
  %12 = bitcast i32* %values35 to %union.tree_node**, !dbg !2703
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2703
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !2630, metadata !DIExpression()), !dbg !2701
  %bf.load37 = load i64, i64* %1, align 8, !dbg !2704
  %bf.lshr = lshr i64 %bf.load37, 20, !dbg !2704
  %14 = trunc i64 %bf.lshr to i32, !dbg !2704
  %bf.cast39 = and i32 %14, 1, !dbg !2704
  %15 = lshr i64 %bf.load37, 18, !dbg !2704
  %16 = trunc i64 %15 to i32, !dbg !2704
  %mul45 = and i32 %16, 2, !dbg !2704
  %or = or i32 %bf.cast39, %mul45, !dbg !2704
  %type46 = bitcast %union.tree_node* %t1 to %struct.tree_type*, !dbg !2704
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type46, i64 0, i32 6, !dbg !2704
  %bf.load47 = load i32, i32* %restrict_flag, align 4, !dbg !2704
  %17 = lshr i32 %bf.load47, 11, !dbg !2704
  %mul50 = and i32 %17, 4, !dbg !2704
  %or51 = or i32 %or, %mul50, !dbg !2704
  %tobool = icmp eq i32 %or51, 0, !dbg !2704
  br i1 %tobool, label %land.lhs.true52, label %cond.true74, !dbg !2704

land.lhs.true52:                                  ; preds = %sw.bb27
  %bf.load54 = load i64, i64* %3, align 8, !dbg !2704
  %bf.lshr55 = lshr i64 %bf.load54, 20, !dbg !2704
  %18 = trunc i64 %bf.lshr55 to i32, !dbg !2704
  %bf.cast57 = and i32 %18, 1, !dbg !2704
  %19 = lshr i64 %bf.load54, 18, !dbg !2704
  %20 = trunc i64 %19 to i32, !dbg !2704
  %mul64 = and i32 %20, 2, !dbg !2704
  %or65 = or i32 %bf.cast57, %mul64, !dbg !2704
  %type66 = bitcast %union.tree_node* %t2 to %struct.tree_type*, !dbg !2704
  %restrict_flag67 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type66, i64 0, i32 6, !dbg !2704
  %bf.load68 = load i32, i32* %restrict_flag67, align 4, !dbg !2704
  %21 = lshr i32 %bf.load68, 11, !dbg !2704
  %mul71 = and i32 %21, 4, !dbg !2704
  %or72 = or i32 %or65, %mul71, !dbg !2704
  %tobool73 = icmp eq i32 %or72, 0, !dbg !2704
  br i1 %tobool73, label %cond.end76, label %cond.true74, !dbg !2704

cond.true74:                                      ; preds = %land.lhs.true52, %sw.bb27
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2704
  br label %cond.end76, !dbg !2704

cond.end76:                                       ; preds = %land.lhs.true52, %cond.true74
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2705
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !2705
  %cmp79 = icmp ne %union.tree_node* %23, null, !dbg !2705
  call void @llvm.dbg.value(metadata i1 %cmp79, metadata !2635, metadata !DIExpression()), !dbg !2701
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2706
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !2706
  %cmp83 = icmp ne %union.tree_node* %25, null, !dbg !2706
  call void @llvm.dbg.value(metadata i1 %cmp83, metadata !2636, metadata !DIExpression()), !dbg !2701
  %cmp86 = icmp eq %union.tree_node* %11, null, !dbg !2707
  br i1 %cmp86, label %lor.end, label %lor.rhs, !dbg !2708

lor.rhs:                                          ; preds = %cond.end76
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2709
  %26 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !2709
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !2709
  %tobool89 = icmp eq %union.tree_node* %27, null, !dbg !2710
  br label %lor.end, !dbg !2708

lor.end:                                          ; preds = %lor.rhs, %cond.end76
  %28 = phi i1 [ true, %cond.end76 ], [ %tobool89, %lor.rhs ]
  call void @llvm.dbg.value(metadata i1 %28, metadata !2633, metadata !DIExpression()), !dbg !2701
  %cmp91 = icmp eq %union.tree_node* %13, null, !dbg !2711
  br i1 %cmp91, label %lor.end98, label %lor.rhs93, !dbg !2712

lor.rhs93:                                        ; preds = %lor.end
  %maxval95 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2713
  %29 = bitcast %struct.rtx_def** %maxval95 to %union.tree_node**, !dbg !2713
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8, !dbg !2713
  %tobool96 = icmp eq %union.tree_node* %30, null, !dbg !2714
  br label %lor.end98, !dbg !2712

lor.end98:                                        ; preds = %lor.rhs93, %lor.end
  %31 = phi i1 [ true, %lor.end ], [ %tobool96, %lor.rhs93 ]
  call void @llvm.dbg.value(metadata i1 %31, metadata !2634, metadata !DIExpression()), !dbg !2701
  br i1 %28, label %land.end, label %land.rhs, !dbg !2715

land.rhs:                                         ; preds = %lor.end98
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !2716
  %32 = bitcast %struct.lang_decl** %minval to i64**, !dbg !2716
  %33 = load i64*, i64** %32, align 8, !dbg !2716
  %bf.load104 = load i64, i64* %33, align 8, !dbg !2716
  %bf.cast10625 = and i64 %bf.load104, 65535, !dbg !2717
  %cmp107 = icmp eq i64 %bf.cast10625, 23, !dbg !2717
  br i1 %cmp107, label %lor.rhs109, label %land.end, !dbg !2718

lor.rhs109:                                       ; preds = %land.rhs
  %maxval111 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2719
  %34 = bitcast %struct.rtx_def** %maxval111 to i64**, !dbg !2719
  %35 = load i64*, i64** %34, align 8, !dbg !2719
  %bf.load113 = load i64, i64* %35, align 8, !dbg !2719
  %bf.cast11526 = and i64 %bf.load113, 65535, !dbg !2720
  %cmp116 = icmp ne i64 %bf.cast11526, 23, !dbg !2720
  %phitmp29 = zext i1 %cmp116 to i32, !dbg !2718
  br label %land.end, !dbg !2718

land.end:                                         ; preds = %land.rhs, %lor.rhs109, %lor.end98
  %36 = phi i32 [ 0, %lor.end98 ], [ 1, %land.rhs ], [ %phitmp29, %lor.rhs109 ]
  br i1 %31, label %land.end142, label %land.rhs122, !dbg !2721

land.rhs122:                                      ; preds = %land.end
  %minval124 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !2722
  %37 = bitcast %struct.lang_decl** %minval124 to i64**, !dbg !2722
  %38 = load i64*, i64** %37, align 8, !dbg !2722
  %bf.load126 = load i64, i64* %38, align 8, !dbg !2722
  %bf.cast12827 = and i64 %bf.load126, 65535, !dbg !2723
  %cmp129 = icmp eq i64 %bf.cast12827, 23, !dbg !2723
  br i1 %cmp129, label %lor.rhs131, label %land.end142, !dbg !2724

lor.rhs131:                                       ; preds = %land.rhs122
  %maxval133 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2725
  %39 = bitcast %struct.rtx_def** %maxval133 to i64**, !dbg !2725
  %40 = load i64*, i64** %39, align 8, !dbg !2725
  %bf.load135 = load i64, i64* %40, align 8, !dbg !2725
  %bf.cast13728 = and i64 %bf.load135, 65535, !dbg !2726
  %cmp138 = icmp ne i64 %bf.cast13728, 23, !dbg !2726
  %phitmp31 = zext i1 %cmp138 to i32, !dbg !2724
  br label %land.end142, !dbg !2724

land.end142:                                      ; preds = %land.rhs122, %lor.rhs131, %land.end
  %41 = phi i32 [ 0, %land.end ], [ 1, %land.rhs122 ], [ %phitmp31, %lor.rhs131 ]
  %tobool146 = icmp eq i32 %36, 0, !dbg !2727
  br i1 %tobool146, label %lor.rhs147, label %lor.end156, !dbg !2728

lor.rhs147:                                       ; preds = %land.end142
  br i1 %28, label %land.rhs150, label %lor.end156, !dbg !2729

land.rhs150:                                      ; preds = %lor.rhs147
  %call151 = tail call zeroext i8 @c_vla_type_p(%union.tree_node* %t1) #7, !dbg !2730
  %tobool153 = icmp ne i8 %call151, 0, !dbg !2729
  %phitmp30 = zext i1 %tobool153 to i8
  br label %lor.end156

lor.end156:                                       ; preds = %land.end142, %lor.rhs147, %land.rhs150
  %42 = phi i8 [ 1, %land.end142 ], [ 0, %lor.rhs147 ], [ %phitmp30, %land.rhs150 ]
  call void @llvm.dbg.value(metadata i8 %42, metadata !2631, metadata !DIExpression()), !dbg !2701
  %tobool160 = icmp eq i32 %41, 0, !dbg !2731
  br i1 %tobool160, label %lor.rhs161, label %lor.end170, !dbg !2732

lor.rhs161:                                       ; preds = %lor.end156
  br i1 %31, label %land.rhs164, label %lor.end170, !dbg !2733

land.rhs164:                                      ; preds = %lor.rhs161
  %call165 = tail call zeroext i8 @c_vla_type_p(%union.tree_node* %t2) #7, !dbg !2734
  %tobool167 = icmp ne i8 %call165, 0, !dbg !2733
  %phitmp = zext i1 %tobool167 to i8
  br label %lor.end170

lor.end170:                                       ; preds = %lor.end156, %lor.rhs161, %land.rhs164
  %43 = phi i8 [ 1, %lor.end156 ], [ 0, %lor.rhs161 ], [ %phitmp, %land.rhs164 ]
  call void @llvm.dbg.value(metadata i8 %43, metadata !2632, metadata !DIExpression()), !dbg !2701
  %44 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !2735
  %cmp175 = icmp eq %union.tree_node* %call32, %44, !dbg !2737
  br i1 %cmp175, label %land.lhs.true177, label %if.end190, !dbg !2738

land.lhs.true177:                                 ; preds = %lor.end170
  %45 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !2739
  %tobool180 = icmp eq %union.tree_node* %45, null, !dbg !2739
  br i1 %tobool180, label %if.end190, label %land.lhs.true181, !dbg !2740

land.lhs.true181:                                 ; preds = %land.lhs.true177
  %tobool183 = icmp ne i8 %43, 0, !dbg !2741
  %or.cond5 = or i1 %tobool183, %31, !dbg !2742
  %or.cond5.not = xor i1 %or.cond5, true, !dbg !2742
  %tobool187 = icmp ne i8 %42, 0, !dbg !2743
  %or.cond6 = and i1 %tobool187, %or.cond5.not, !dbg !2742
  br i1 %or.cond6, label %if.end190, label %if.then188, !dbg !2742

if.then188:                                       ; preds = %land.lhs.true181
  %call189 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t1, %union.tree_node* %call) #6, !dbg !2744
  br label %cleanup605, !dbg !2745

if.end190:                                        ; preds = %land.lhs.true177, %land.lhs.true181, %lor.end170
  %46 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !2746
  %cmp193 = icmp eq %union.tree_node* %call32, %46, !dbg !2748
  br i1 %cmp193, label %land.lhs.true195, label %if.end209, !dbg !2749

land.lhs.true195:                                 ; preds = %if.end190
  %47 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2750
  %tobool198 = icmp eq %union.tree_node* %47, null, !dbg !2750
  br i1 %tobool198, label %if.end209, label %land.lhs.true199, !dbg !2751

land.lhs.true199:                                 ; preds = %land.lhs.true195
  %tobool201 = icmp ne i8 %42, 0, !dbg !2752
  %or.cond7 = or i1 %tobool201, %28, !dbg !2753
  %or.cond7.not = xor i1 %or.cond7, true, !dbg !2753
  %tobool206 = icmp ne i8 %43, 0, !dbg !2754
  %or.cond8 = and i1 %tobool206, %or.cond7.not, !dbg !2753
  br i1 %or.cond8, label %if.end209, label %if.then207, !dbg !2753

if.then207:                                       ; preds = %land.lhs.true199
  %call208 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t2, %union.tree_node* %call) #6, !dbg !2755
  br label %cleanup605, !dbg !2756

if.end209:                                        ; preds = %land.lhs.true195, %land.lhs.true199, %if.end190
  br i1 %cmp175, label %land.lhs.true214, label %if.end224, !dbg !2757

land.lhs.true214:                                 ; preds = %if.end209
  %48 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2759
  %tobool217 = icmp eq %union.tree_node* %48, null, !dbg !2759
  br i1 %tobool217, label %land.lhs.true218, label %if.end224, !dbg !2760

land.lhs.true218:                                 ; preds = %land.lhs.true214
  %49 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !2761
  %tobool221 = icmp eq %union.tree_node* %49, null, !dbg !2761
  br i1 %tobool221, label %if.then222, label %if.end224, !dbg !2762

if.then222:                                       ; preds = %land.lhs.true218
  %call223 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t1, %union.tree_node* %call) #6, !dbg !2763
  br label %cleanup605, !dbg !2764

if.end224:                                        ; preds = %land.lhs.true218, %land.lhs.true214, %if.end209
  br i1 %cmp193, label %land.lhs.true229, label %if.end239, !dbg !2765

land.lhs.true229:                                 ; preds = %if.end224
  %50 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2767
  %tobool232 = icmp eq %union.tree_node* %50, null, !dbg !2767
  br i1 %tobool232, label %land.lhs.true233, label %if.end239, !dbg !2768

land.lhs.true233:                                 ; preds = %land.lhs.true229
  %51 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !2769
  %tobool236 = icmp eq %union.tree_node* %51, null, !dbg !2769
  br i1 %tobool236, label %if.then237, label %if.end239, !dbg !2770

if.then237:                                       ; preds = %land.lhs.true233
  %call238 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t2, %union.tree_node* %call) #6, !dbg !2771
  br label %cleanup605, !dbg !2772

if.end239:                                        ; preds = %land.lhs.true233, %land.lhs.true229, %if.end224
  %call240 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %call32) #6, !dbg !2773
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %call240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2773
  %bf.load242 = load i64, i64* %52, align 8, !dbg !2773
  %bf.lshr243 = lshr i64 %bf.load242, 20, !dbg !2773
  %53 = trunc i64 %bf.lshr243 to i32, !dbg !2773
  %bf.cast245 = and i32 %53, 1, !dbg !2773
  %call247 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %call32) #6, !dbg !2773
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %call247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2773
  %bf.load249 = load i64, i64* %54, align 8, !dbg !2773
  %55 = lshr i64 %bf.load249, 18, !dbg !2773
  %56 = trunc i64 %55 to i32, !dbg !2773
  %mul253 = and i32 %56, 2, !dbg !2773
  %or254 = or i32 %bf.cast245, %mul253, !dbg !2773
  %call255 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %call32) #6, !dbg !2773
  %type256 = bitcast %union.tree_node* %call255 to %struct.tree_type*, !dbg !2773
  %restrict_flag257 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type256, i64 0, i32 6, !dbg !2773
  %bf.load258 = load i32, i32* %restrict_flag257, align 4, !dbg !2773
  %57 = lshr i32 %bf.load258, 11, !dbg !2773
  %mul261 = and i32 %57, 4, !dbg !2773
  %or262 = or i32 %or254, %mul261, !dbg !2773
  %call263 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %call32) #6, !dbg !2773
  %58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2773
  %bf.load265 = load i64, i64* %58, align 8, !dbg !2773
  %59 = lshr i64 %bf.load265, 48, !dbg !2773
  %60 = trunc i64 %59 to i32, !dbg !2773
  %shl = and i32 %60, 65280, !dbg !2773
  %or268 = or i32 %or262, %shl, !dbg !2773
  call void @llvm.dbg.value(metadata i32 %or268, metadata !2627, metadata !DIExpression()), !dbg !2701
  %call269 = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call32, i32 0) #7, !dbg !2774
  call void @llvm.dbg.value(metadata %union.tree_node* %call269, metadata !2628, metadata !DIExpression()), !dbg !2701
  %61 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !2775
  %tobool272 = icmp eq %union.tree_node* %61, null, !dbg !2775
  br i1 %tobool272, label %cond.false282, label %land.lhs.true273, !dbg !2775

land.lhs.true273:                                 ; preds = %if.end239
  %tobool275 = icmp ne i8 %43, 0, !dbg !2775
  %or.cond9 = or i1 %tobool275, %31, !dbg !2775
  %or.cond9.not = xor i1 %or.cond9, true, !dbg !2775
  %tobool280 = icmp ne i8 %42, 0, !dbg !2775
  %or.cond10 = and i1 %tobool280, %or.cond9.not, !dbg !2775
  br i1 %or.cond10, label %cond.false282, label %cond.end283, !dbg !2775

cond.false282:                                    ; preds = %if.end239, %land.lhs.true273
  %.pre41 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !2775
  br label %cond.end283, !dbg !2775

cond.end283:                                      ; preds = %land.lhs.true273, %cond.false282
  %62 = phi %union.tree_node* [ %.pre41, %cond.false282 ], [ %61, %land.lhs.true273 ], !dbg !2775
  %call287 = tail call %union.tree_node* @build_array_type(%union.tree_node* %call269, %union.tree_node* %62) #6, !dbg !2776
  call void @llvm.dbg.value(metadata %union.tree_node* %call287, metadata !2615, metadata !DIExpression()), !dbg !2665
  %or.cond11 = and i1 %28, %31, !dbg !2777
  br i1 %or.cond11, label %land.lhs.true293, label %if.end308, !dbg !2777

land.lhs.true293:                                 ; preds = %cond.end283
  %or.cond12 = or i1 %cmp79, %cmp83, !dbg !2779
  br i1 %or.cond12, label %land.lhs.true299, label %if.end308, !dbg !2779

land.lhs.true299:                                 ; preds = %land.lhs.true293
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call287, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2780
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8, !dbg !2780
  %cmp302 = icmp eq %union.tree_node* %64, null, !dbg !2780
  br i1 %cmp302, label %if.then304, label %if.end308, !dbg !2781

if.then304:                                       ; preds = %land.lhs.true299
  %65 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !2782
  %66 = bitcast %union.tree_node** %63 to i64*, !dbg !2784
  store i64 %65, i64* %66, align 8, !dbg !2784
  %67 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17) to i64*), align 8, !dbg !2785
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %call287, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2786
  %69 = bitcast %union.tree_node** %68 to i64*, !dbg !2787
  store i64 %67, i64* %69, align 8, !dbg !2787
  br label %if.end308, !dbg !2788

if.end308:                                        ; preds = %land.lhs.true299, %land.lhs.true293, %if.then304, %cond.end283
  %call309 = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call287, i32 %or268) #7, !dbg !2789
  call void @llvm.dbg.value(metadata %union.tree_node* %call309, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call310 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call309, %union.tree_node* %call) #6, !dbg !2790
  br label %cleanup605, !dbg !2791

sw.bb321:                                         ; preds = %cond.end, %cond.end, %cond.end
  %cmp322 = icmp eq %union.tree_node* %call, null, !dbg !2792
  br i1 %cmp322, label %if.end337, label %if.then324, !dbg !2794

if.then324:                                       ; preds = %sw.bb321
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2795
  %71 = load %union.tree_node*, %union.tree_node** %70, align 8, !dbg !2795
  %call327 = tail call i32 @attribute_list_equal(%union.tree_node* %71, %union.tree_node* nonnull %call) #6, !dbg !2798
  %tobool328 = icmp eq i32 %call327, 0, !dbg !2798
  br i1 %tobool328, label %if.end330, label %cleanup605, !dbg !2799

if.end330:                                        ; preds = %if.then324
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2800
  %73 = load %union.tree_node*, %union.tree_node** %72, align 8, !dbg !2800
  %call333 = tail call i32 @attribute_list_equal(%union.tree_node* %73, %union.tree_node* nonnull %call) #6, !dbg !2802
  %tobool334 = icmp eq i32 %call333, 0, !dbg !2802
  br i1 %tobool334, label %if.end337, label %cleanup605, !dbg !2803

if.end337:                                        ; preds = %if.end330, %sw.bb321
  %call338 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t1, %union.tree_node* %call) #6, !dbg !2804
  br label %cleanup605, !dbg !2805

sw.bb339:                                         ; preds = %cond.end
  %type341 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2806
  %74 = load %union.tree_node*, %union.tree_node** %type341, align 8, !dbg !2806
  %type343 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2807
  %75 = load %union.tree_node*, %union.tree_node** %type343, align 8, !dbg !2807
  %call344 = tail call %union.tree_node* @composite_type(%union.tree_node* %74, %union.tree_node* %75) #7, !dbg !2808
  call void @llvm.dbg.value(metadata %union.tree_node* %call344, metadata !2637, metadata !DIExpression()), !dbg !2809
  %values346 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2810
  %76 = bitcast i32* %values346 to %union.tree_node**, !dbg !2810
  %77 = load %union.tree_node*, %union.tree_node** %76, align 8, !dbg !2810
  call void @llvm.dbg.value(metadata %union.tree_node* %77, metadata !2639, metadata !DIExpression()), !dbg !2809
  %values348 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2811
  %78 = bitcast i32* %values348 to %union.tree_node**, !dbg !2811
  %79 = load %union.tree_node*, %union.tree_node** %78, align 8, !dbg !2811
  call void @llvm.dbg.value(metadata %union.tree_node* %79, metadata !2640, metadata !DIExpression()), !dbg !2809
  %80 = load %union.tree_node*, %union.tree_node** %type341, align 8, !dbg !2812
  %cmp351 = icmp eq %union.tree_node* %call344, %80, !dbg !2814
  br i1 %cmp351, label %land.lhs.true353, label %if.end359, !dbg !2815

land.lhs.true353:                                 ; preds = %sw.bb339
  %tobool356 = icmp eq %union.tree_node* %79, null, !dbg !2816
  br i1 %tobool356, label %if.then357, label %if.end359, !dbg !2817

if.then357:                                       ; preds = %land.lhs.true353
  %call358 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t1, %union.tree_node* %call) #6, !dbg !2818
  br label %cleanup595, !dbg !2819

if.end359:                                        ; preds = %land.lhs.true353, %sw.bb339
  %81 = load %union.tree_node*, %union.tree_node** %type343, align 8, !dbg !2820
  %cmp362 = icmp eq %union.tree_node* %call344, %81, !dbg !2822
  br i1 %cmp362, label %land.lhs.true364, label %if.end370, !dbg !2823

land.lhs.true364:                                 ; preds = %if.end359
  %tobool367 = icmp eq %union.tree_node* %77, null, !dbg !2824
  br i1 %tobool367, label %if.then368, label %if.end370, !dbg !2825

if.then368:                                       ; preds = %land.lhs.true364
  %call369 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t2, %union.tree_node* %call) #6, !dbg !2826
  br label %cleanup595, !dbg !2827

if.end370:                                        ; preds = %land.lhs.true364, %if.end359
  %cmp373 = icmp eq %union.tree_node* %77, null, !dbg !2828
  br i1 %cmp373, label %if.then375, label %if.end381, !dbg !2830

if.then375:                                       ; preds = %if.end370
  %call378 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call344, %union.tree_node* %79) #6, !dbg !2831
  call void @llvm.dbg.value(metadata %union.tree_node* %call378, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call379 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call378, %union.tree_node* %call) #6, !dbg !2833
  call void @llvm.dbg.value(metadata %union.tree_node* %call379, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call380 = tail call fastcc %union.tree_node* @qualify_type(%union.tree_node* %call379, %union.tree_node* %t2) #7, !dbg !2834
  br label %cleanup595, !dbg !2835

if.end381:                                        ; preds = %if.end370
  %cmp384 = icmp eq %union.tree_node* %79, null, !dbg !2836
  br i1 %cmp384, label %if.then386, label %if.end392, !dbg !2838

if.then386:                                       ; preds = %if.end381
  %call389 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call344, %union.tree_node* nonnull %77) #6, !dbg !2839
  call void @llvm.dbg.value(metadata %union.tree_node* %call389, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call390 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call389, %union.tree_node* %call) #6, !dbg !2841
  call void @llvm.dbg.value(metadata %union.tree_node* %call390, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call391 = tail call fastcc %union.tree_node* @qualify_type(%union.tree_node* %call390, %union.tree_node* %t2) #7, !dbg !2842
  br label %cleanup595, !dbg !2843

if.end392:                                        ; preds = %if.end381
  store i8 1, i8* @c_override_global_bindings_to_false, align 1, !dbg !2844
  %call393 = tail call i32 @list_length(%union.tree_node* nonnull %77) #6, !dbg !2845
  call void @llvm.dbg.value(metadata i32 %call393, metadata !2641, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2642, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.value(metadata i32 0, metadata !2644, metadata !DIExpression()), !dbg !2809
  br label %for.cond, !dbg !2846

for.cond:                                         ; preds = %for.body, %if.end392
  %newargs.0 = phi %union.tree_node* [ null, %if.end392 ], [ %call396, %for.body ], !dbg !2809
  %i.0 = phi i32 [ 0, %if.end392 ], [ %inc, %for.body ], !dbg !2848
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2644, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %newargs.0, metadata !2642, metadata !DIExpression()), !dbg !2809
  %cmp394 = icmp slt i32 %i.0, %call393, !dbg !2849
  br i1 %cmp394, label %for.body, label %for.cond397.preheader, !dbg !2851

for.cond397.preheader:                            ; preds = %for.cond
  %newargs.0.lcssa = phi %union.tree_node* [ %newargs.0, %for.cond ], !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %newargs.0.lcssa, metadata !2642, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %newargs.0.lcssa, metadata !2642, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %newargs.0.lcssa, metadata !2642, metadata !DIExpression()), !dbg !2809
  br label %for.cond397, !dbg !2852

for.body:                                         ; preds = %for.cond
  %call396 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %newargs.0) #6, !dbg !2853
  call void @llvm.dbg.value(metadata %union.tree_node* %call396, metadata !2642, metadata !DIExpression()), !dbg !2809
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2854
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2644, metadata !DIExpression()), !dbg !2809
  br label %for.cond, !dbg !2855, !llvm.loop !2856

for.cond397:                                      ; preds = %for.cond397.preheader, %for.inc585
  %p1.0 = phi %union.tree_node* [ %128, %for.inc585 ], [ %77, %for.cond397.preheader ], !dbg !2809
  %.in = phi %union.tree_node* [ %129, %for.inc585 ], [ %79, %for.cond397.preheader ]
  %p2.0 = phi %union.tree_node* [ %129, %for.inc585 ], [ %79, %for.cond397.preheader ], !dbg !2809
  %n.0 = phi %union.tree_node* [ %130, %for.inc585 ], [ %newargs.0.lcssa, %for.cond397.preheader ], !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %n.0, metadata !2643, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %p2.0, metadata !2640, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.value(metadata %union.tree_node* %p1.0, metadata !2639, metadata !DIExpression()), !dbg !2809
  %tobool398 = icmp eq %union.tree_node* %p1.0, null, !dbg !2852
  br i1 %tobool398, label %for.end592, label %for.body399, !dbg !2852

for.body399:                                      ; preds = %for.cond397
  %82 = getelementptr inbounds %union.tree_node, %union.tree_node* %p1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2858
  %83 = load %union.tree_node*, %union.tree_node** %82, align 8, !dbg !2858
  %cmp400 = icmp eq %union.tree_node* %83, null, !dbg !2860
  %84 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2861
  %85 = load %union.tree_node*, %union.tree_node** %84, align 8, !dbg !2861
  %86 = getelementptr inbounds %union.tree_node, %union.tree_node* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2862
  %87 = bitcast %union.tree_node* %85 to %struct.tree_type*, !dbg !2862
  br i1 %cmp400, label %if.then402, label %if.end407, !dbg !2862

if.then402:                                       ; preds = %for.body399
  %88 = getelementptr inbounds %union.tree_node, %union.tree_node* %n.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2863
  store %union.tree_node* %85, %union.tree_node** %88, align 8, !dbg !2865
  br label %for.inc585, !dbg !2866

if.end407:                                        ; preds = %for.body399
  %cmp410 = icmp eq %union.tree_node* %85, null, !dbg !2867
  br i1 %cmp410, label %if.then412, label %if.end417, !dbg !2869

if.then412:                                       ; preds = %if.end407
  %89 = getelementptr inbounds %union.tree_node, %union.tree_node* %n.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2870
  store %union.tree_node* %83, %union.tree_node** %89, align 8, !dbg !2872
  br label %for.inc585, !dbg !2873

if.end417:                                        ; preds = %if.end407
  %90 = getelementptr inbounds %union.tree_node, %union.tree_node* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2874
  %bf.load421 = load i64, i64* %90, align 8, !dbg !2874
  %bf.cast42317 = and i64 %bf.load421, 65535, !dbg !2875
  %cmp424 = icmp eq i64 %bf.cast42317, 17, !dbg !2875
  br i1 %cmp424, label %land.lhs.true426, label %if.end494, !dbg !2876

land.lhs.true426:                                 ; preds = %if.end417
  %cmp431 = icmp eq %union.tree_node* %83, %85, !dbg !2877
  br i1 %cmp431, label %if.end494, label %if.then433, !dbg !2878

if.then433:                                       ; preds = %land.lhs.true426
  call void @llvm.dbg.value(metadata %union.tree_node* %85, metadata !2651, metadata !DIExpression()), !dbg !2879
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2880
  %cmp438 = icmp eq %union.tree_node* %85, %91, !dbg !2882
  br i1 %cmp438, label %if.end449, label %land.lhs.true440, !dbg !2883

land.lhs.true440:                                 ; preds = %if.then433
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2884
  %bf.load442 = load i64, i64* %92, align 8, !dbg !2884
  %bf.cast44422 = and i64 %bf.load442, 65535, !dbg !2885
  %cmp445 = icmp eq i64 %bf.cast44422, 15, !dbg !2885
  br i1 %cmp445, label %if.end449, label %if.then447, !dbg !2886

if.then447:                                       ; preds = %land.lhs.true440
  %93 = getelementptr inbounds %union.tree_node, %union.tree_node* %85, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2887
  %94 = load %union.tree_node*, %union.tree_node** %93, align 8, !dbg !2887
  call void @llvm.dbg.value(metadata %union.tree_node* %94, metadata !2651, metadata !DIExpression()), !dbg !2879
  br label %if.end449, !dbg !2888

if.end449:                                        ; preds = %if.then433, %land.lhs.true440, %if.then447
  %mv2.0 = phi %union.tree_node* [ %94, %if.then447 ], [ %85, %land.lhs.true440 ], [ %85, %if.then433 ], !dbg !2879
  call void @llvm.dbg.value(metadata %union.tree_node* %mv2.0, metadata !2651, metadata !DIExpression()), !dbg !2879
  %values453 = getelementptr inbounds %union.tree_node, %union.tree_node* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2889
  %95 = bitcast i32* %values453 to %union.tree_node**, !dbg !2889
  %96 = getelementptr inbounds %union.tree_node, %union.tree_node* %n.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2890
  br label %for.cond454, !dbg !2893

for.cond454:                                      ; preds = %for.inc487, %if.end449
  %memb.0.in = phi %union.tree_node** [ %95, %if.end449 ], [ %chain, %for.inc487 ]
  %memb.0 = load %union.tree_node*, %union.tree_node** %memb.0.in, align 8, !dbg !2894
  call void @llvm.dbg.value(metadata %union.tree_node* %memb.0, metadata !2645, metadata !DIExpression()), !dbg !2879
  %tobool455 = icmp eq %union.tree_node* %memb.0, null, !dbg !2895
  br i1 %tobool455, label %cleanup490, label %for.body456, !dbg !2895

for.body456:                                      ; preds = %for.cond454
  %type458 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2896
  %97 = load %union.tree_node*, %union.tree_node** %type458, align 8, !dbg !2896
  call void @llvm.dbg.value(metadata %union.tree_node* %97, metadata !2652, metadata !DIExpression()), !dbg !2897
  %tobool459 = icmp ne %union.tree_node* %97, null, !dbg !2898
  %98 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2900
  %cmp461 = icmp ne %union.tree_node* %97, %98, !dbg !2901
  %or.cond14 = and i1 %tobool459, %cmp461, !dbg !2902
  br i1 %or.cond14, label %land.lhs.true463, label %if.end473, !dbg !2902

land.lhs.true463:                                 ; preds = %for.body456
  %99 = getelementptr inbounds %union.tree_node, %union.tree_node* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2903
  %bf.load465 = load i64, i64* %99, align 8, !dbg !2903
  %bf.cast46721 = and i64 %bf.load465, 65535, !dbg !2904
  %cmp468 = icmp eq i64 %bf.cast46721, 15, !dbg !2904
  br i1 %cmp468, label %if.end473, label %if.then470, !dbg !2905

if.then470:                                       ; preds = %land.lhs.true463
  %100 = getelementptr inbounds %union.tree_node, %union.tree_node* %97, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2906
  %101 = load %union.tree_node*, %union.tree_node** %100, align 8, !dbg !2906
  call void @llvm.dbg.value(metadata %union.tree_node* %101, metadata !2652, metadata !DIExpression()), !dbg !2897
  br label %if.end473, !dbg !2907

if.end473:                                        ; preds = %land.lhs.true463, %if.then470, %for.body456
  %mv3.0 = phi %union.tree_node* [ %101, %if.then470 ], [ %97, %land.lhs.true463 ], [ %97, %for.body456 ], !dbg !2897
  call void @llvm.dbg.value(metadata %union.tree_node* %mv3.0, metadata !2652, metadata !DIExpression()), !dbg !2897
  %call474 = tail call i32 @comptypes(%union.tree_node* %mv3.0, %union.tree_node* %mv2.0) #7, !dbg !2908
  %tobool475 = icmp eq i32 %call474, 0, !dbg !2908
  br i1 %tobool475, label %cleanup486, label %if.then476, !dbg !2909

if.then476:                                       ; preds = %if.end473
  %102 = load %union.tree_node*, %union.tree_node** %type458, align 8, !dbg !2910
  %103 = load %union.tree_node*, %union.tree_node** %84, align 8, !dbg !2911
  %call481 = tail call %union.tree_node* @composite_type(%union.tree_node* %102, %union.tree_node* %103) #7, !dbg !2912
  store %union.tree_node* %call481, %union.tree_node** %96, align 8, !dbg !2913
  %104 = load i32, i32* @input_location, align 4, !dbg !2914
  %call484 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %104, i32 834, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2915
  br label %cleanup486, !dbg !2916

cleanup486:                                       ; preds = %if.end473, %if.then476
  %cleanup.dest.slot.0 = phi i32 [ 9, %if.then476 ], [ 0, %if.end473 ]
  %cond3 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond3, label %for.inc487, label %cleanup490

for.inc487:                                       ; preds = %cleanup486
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %memb.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2917
  br label %for.cond454, !dbg !2918, !llvm.loop !2919

cleanup490:                                       ; preds = %for.cond454, %cleanup486
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup486 ], [ 0, %for.cond454 ]
  switch i32 %cleanup.dest.slot.1, label %cleanup595.loopexit [
    i32 0, label %cleanup490.if.end494_crit_edge
    i32 9, label %for.inc585
  ]

cleanup490.if.end494_crit_edge:                   ; preds = %cleanup490
  %.phi.trans.insert = bitcast %union.tree_node** %84 to i64**, !dbg !2921
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !2922
  %105 = bitcast i64* %.pre to %union.tree_node*
  %106 = bitcast i64* %.pre to %struct.tree_type*
  br label %if.end494

if.end494:                                        ; preds = %cleanup490.if.end494_crit_edge, %land.lhs.true426, %if.end417
  %107 = phi %union.tree_node* [ %105, %cleanup490.if.end494_crit_edge ], [ %83, %land.lhs.true426 ], [ %85, %if.end417 ]
  %108 = phi %struct.tree_type* [ %106, %cleanup490.if.end494_crit_edge ], [ %87, %land.lhs.true426 ], [ %87, %if.end417 ]
  %109 = phi %union.tree_node* [ %105, %cleanup490.if.end494_crit_edge ], [ %83, %land.lhs.true426 ], [ %85, %if.end417 ]
  %110 = phi i64* [ %.pre, %cleanup490.if.end494_crit_edge ], [ %86, %land.lhs.true426 ], [ %86, %if.end417 ], !dbg !2922
  %bf.load498 = load i64, i64* %110, align 8, !dbg !2922
  %bf.cast50018 = and i64 %bf.load498, 65535, !dbg !2923
  %cmp501 = icmp eq i64 %bf.cast50018, 17, !dbg !2923
  br i1 %cmp501, label %land.lhs.true503, label %if.end577, !dbg !2924

land.lhs.true503:                                 ; preds = %if.end494
  %111 = load %union.tree_node*, %union.tree_node** %82, align 8, !dbg !2925
  %cmp508 = icmp eq %union.tree_node* %109, %111, !dbg !2926
  br i1 %cmp508, label %if.end577, label %if.then510, !dbg !2927

if.then510:                                       ; preds = %land.lhs.true503
  call void @llvm.dbg.value(metadata %union.tree_node* %111, metadata !2659, metadata !DIExpression()), !dbg !2928
  %tobool514 = icmp ne %union.tree_node* %111, null, !dbg !2929
  %112 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2931
  %cmp516 = icmp ne %union.tree_node* %111, %112, !dbg !2932
  %or.cond15 = and i1 %tobool514, %cmp516, !dbg !2933
  br i1 %or.cond15, label %land.lhs.true518, label %if.end528, !dbg !2933

land.lhs.true518:                                 ; preds = %if.then510
  %113 = getelementptr inbounds %union.tree_node, %union.tree_node* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2934
  %bf.load520 = load i64, i64* %113, align 8, !dbg !2934
  %bf.cast52220 = and i64 %bf.load520, 65535, !dbg !2935
  %cmp523 = icmp eq i64 %bf.cast52220, 15, !dbg !2935
  br i1 %cmp523, label %if.end528, label %if.then525, !dbg !2936

if.then525:                                       ; preds = %land.lhs.true518
  %114 = getelementptr inbounds %union.tree_node, %union.tree_node* %111, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2937
  %115 = load %union.tree_node*, %union.tree_node** %114, align 8, !dbg !2937
  call void @llvm.dbg.value(metadata %union.tree_node* %115, metadata !2659, metadata !DIExpression()), !dbg !2928
  br label %if.end528, !dbg !2938

if.end528:                                        ; preds = %land.lhs.true518, %if.then525, %if.then510
  %mv1.0 = phi %union.tree_node* [ %115, %if.then525 ], [ %111, %land.lhs.true518 ], [ %111, %if.then510 ], !dbg !2928
  call void @llvm.dbg.value(metadata %union.tree_node* %mv1.0, metadata !2659, metadata !DIExpression()), !dbg !2928
  %values532 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %108, i64 0, i32 1, !dbg !2939
  %116 = getelementptr inbounds %union.tree_node, %union.tree_node* %n.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2940
  br label %for.cond533, !dbg !2943

for.cond533:                                      ; preds = %for.inc569, %if.end528
  %memb511.0.in = phi %union.tree_node** [ %values532, %if.end528 ], [ %chain571, %for.inc569 ]
  %memb511.0 = load %union.tree_node*, %union.tree_node** %memb511.0.in, align 8, !dbg !2944
  call void @llvm.dbg.value(metadata %union.tree_node* %memb511.0, metadata !2656, metadata !DIExpression()), !dbg !2928
  %tobool534 = icmp eq %union.tree_node* %memb511.0, null, !dbg !2945
  br i1 %tobool534, label %cleanup573, label %for.body535, !dbg !2945

for.body535:                                      ; preds = %for.cond533
  %type538 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb511.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2946
  %117 = load %union.tree_node*, %union.tree_node** %type538, align 8, !dbg !2946
  call void @llvm.dbg.value(metadata %union.tree_node* %117, metadata !2660, metadata !DIExpression()), !dbg !2947
  %tobool539 = icmp ne %union.tree_node* %117, null, !dbg !2948
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2950
  %cmp541 = icmp ne %union.tree_node* %117, %118, !dbg !2951
  %or.cond16 = and i1 %tobool539, %cmp541, !dbg !2952
  br i1 %or.cond16, label %land.lhs.true543, label %if.end553, !dbg !2952

land.lhs.true543:                                 ; preds = %for.body535
  %119 = getelementptr inbounds %union.tree_node, %union.tree_node* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2953
  %bf.load545 = load i64, i64* %119, align 8, !dbg !2953
  %bf.cast54719 = and i64 %bf.load545, 65535, !dbg !2954
  %cmp548 = icmp eq i64 %bf.cast54719, 15, !dbg !2954
  br i1 %cmp548, label %if.end553, label %if.then550, !dbg !2955

if.then550:                                       ; preds = %land.lhs.true543
  %120 = getelementptr inbounds %union.tree_node, %union.tree_node* %117, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2956
  %121 = load %union.tree_node*, %union.tree_node** %120, align 8, !dbg !2956
  call void @llvm.dbg.value(metadata %union.tree_node* %121, metadata !2660, metadata !DIExpression()), !dbg !2947
  br label %if.end553, !dbg !2957

if.end553:                                        ; preds = %land.lhs.true543, %if.then550, %for.body535
  %mv3536.0 = phi %union.tree_node* [ %121, %if.then550 ], [ %117, %land.lhs.true543 ], [ %117, %for.body535 ], !dbg !2947
  call void @llvm.dbg.value(metadata %union.tree_node* %mv3536.0, metadata !2660, metadata !DIExpression()), !dbg !2947
  %call554 = tail call i32 @comptypes(%union.tree_node* %mv3536.0, %union.tree_node* %mv1.0) #7, !dbg !2958
  %tobool555 = icmp eq i32 %call554, 0, !dbg !2958
  br i1 %tobool555, label %cleanup566, label %if.then556, !dbg !2959

if.then556:                                       ; preds = %if.end553
  %122 = load %union.tree_node*, %union.tree_node** %type538, align 8, !dbg !2960
  %123 = load %union.tree_node*, %union.tree_node** %82, align 8, !dbg !2961
  %call561 = tail call %union.tree_node* @composite_type(%union.tree_node* %122, %union.tree_node* %123) #7, !dbg !2962
  store %union.tree_node* %call561, %union.tree_node** %116, align 8, !dbg !2963
  %124 = load i32, i32* @input_location, align 4, !dbg !2964
  %call564 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %124, i32 834, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2965
  br label %cleanup566, !dbg !2966

cleanup566:                                       ; preds = %if.end553, %if.then556
  %cleanup.dest.slot.2 = phi i32 [ 9, %if.then556 ], [ 0, %if.end553 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond2, label %for.inc569, label %cleanup573

for.inc569:                                       ; preds = %cleanup566
  %chain571 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb511.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2967
  br label %for.cond533, !dbg !2968, !llvm.loop !2969

cleanup573:                                       ; preds = %for.cond533, %cleanup566
  %cleanup.dest.slot.3 = phi i32 [ %cleanup.dest.slot.2, %cleanup566 ], [ 0, %for.cond533 ]
  switch i32 %cleanup.dest.slot.3, label %cleanup595.loopexit [
    i32 0, label %cleanup573.if.end577_crit_edge
    i32 9, label %for.inc585
  ]

cleanup573.if.end577_crit_edge:                   ; preds = %cleanup573
  %.pre40 = load %union.tree_node*, %union.tree_node** %84, align 8, !dbg !2971
  br label %if.end577

if.end577:                                        ; preds = %cleanup573.if.end577_crit_edge, %land.lhs.true503, %if.end494
  %125 = phi %union.tree_node* [ %.pre40, %cleanup573.if.end577_crit_edge ], [ %107, %land.lhs.true503 ], [ %107, %if.end494 ], !dbg !2971
  %126 = load %union.tree_node*, %union.tree_node** %82, align 8, !dbg !2972
  %call582 = tail call %union.tree_node* @composite_type(%union.tree_node* %126, %union.tree_node* %125) #7, !dbg !2973
  %127 = getelementptr inbounds %union.tree_node, %union.tree_node* %n.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2974
  store %union.tree_node* %call582, %union.tree_node** %127, align 8, !dbg !2975
  br label %for.inc585, !dbg !2974

for.inc585:                                       ; preds = %if.then402, %if.then412, %cleanup490, %cleanup573, %if.end577
  call void @llvm.dbg.label(metadata !2664), !dbg !2976
  %chain587 = getelementptr inbounds %union.tree_node, %union.tree_node* %p1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2977
  %128 = load %union.tree_node*, %union.tree_node** %chain587, align 8, !dbg !2977
  call void @llvm.dbg.value(metadata %union.tree_node* %128, metadata !2639, metadata !DIExpression()), !dbg !2809
  %chain589 = getelementptr inbounds %union.tree_node, %union.tree_node* %p2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2978
  %129 = load %union.tree_node*, %union.tree_node** %chain589, align 8, !dbg !2978
  call void @llvm.dbg.value(metadata %union.tree_node* %129, metadata !2640, metadata !DIExpression()), !dbg !2809
  %chain591 = getelementptr inbounds %union.tree_node, %union.tree_node* %n.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2979
  %130 = load %union.tree_node*, %union.tree_node** %chain591, align 8, !dbg !2979
  call void @llvm.dbg.value(metadata %union.tree_node* %130, metadata !2643, metadata !DIExpression()), !dbg !2809
  br label %for.cond397, !dbg !2980, !llvm.loop !2981

for.end592:                                       ; preds = %for.cond397
  store i8 0, i8* @c_override_global_bindings_to_false, align 1, !dbg !2983
  %call593 = tail call %union.tree_node* @build_function_type(%union.tree_node* %call344, %union.tree_node* %newargs.0.lcssa) #6, !dbg !2984
  call void @llvm.dbg.value(metadata %union.tree_node* %call593, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call594 = tail call fastcc %union.tree_node* @qualify_type(%union.tree_node* %call593, %union.tree_node* %t2) #7, !dbg !2985
  call void @llvm.dbg.value(metadata %union.tree_node* %call594, metadata !2615, metadata !DIExpression()), !dbg !2665
  br label %cleanup595, !dbg !2986

cleanup595.loopexit:                              ; preds = %cleanup490, %cleanup573
  %cleanup.dest.slot.4.ph = phi i32 [ %cleanup.dest.slot.3, %cleanup573 ], [ %cleanup.dest.slot.1, %cleanup490 ]
  br label %cleanup595

cleanup595:                                       ; preds = %cleanup595.loopexit, %for.end592, %if.then386, %if.then375, %if.then368, %if.then357
  %cleanup.dest.slot.4 = phi i32 [ 1, %if.then375 ], [ 1, %if.then386 ], [ 0, %for.end592 ], [ 1, %if.then368 ], [ 1, %if.then357 ], [ %cleanup.dest.slot.4.ph, %cleanup595.loopexit ]
  %t1.addr.0 = phi %union.tree_node* [ %call379, %if.then375 ], [ %call390, %if.then386 ], [ %call594, %for.end592 ], [ %t1, %if.then368 ], [ %t1, %if.then357 ], [ %t1, %cleanup595.loopexit ]
  %retval.1 = phi %union.tree_node* [ %call380, %if.then375 ], [ %call391, %if.then386 ], [ undef, %for.end592 ], [ %call369, %if.then368 ], [ %call358, %if.then357 ], [ undef, %cleanup595.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0, metadata !2615, metadata !DIExpression()), !dbg !2665
  %cond1 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond1, label %sw.default, label %cleanup605

sw.default:                                       ; preds = %cleanup595, %cond.end
  %t1.addr.1 = phi %union.tree_node* [ %t1, %cond.end ], [ %t1.addr.0, %cleanup595 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.1, metadata !2615, metadata !DIExpression()), !dbg !2665
  %call604 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t1.addr.1, %union.tree_node* %call) #6, !dbg !2987
  br label %cleanup605, !dbg !2988

cleanup605:                                       ; preds = %if.end330, %if.then324, %if.then188, %if.then207, %if.then222, %if.then237, %if.end308, %if.end14, %if.end6, %if.end3, %if.end, %entry, %cleanup595, %sw.default, %if.end337
  %retval.2 = phi %union.tree_node* [ %call604, %sw.default ], [ %retval.1, %cleanup595 ], [ %call338, %if.end337 ], [ %t1, %entry ], [ %t2, %if.end ], [ %t1, %if.end3 ], [ %t1, %if.end6 ], [ %t2, %if.end14 ], [ %call189, %if.then188 ], [ %call208, %if.then207 ], [ %call310, %if.end308 ], [ %call238, %if.then237 ], [ %call223, %if.then222 ], [ %t1, %if.then324 ], [ %t2, %if.end330 ], !dbg !2665
  ret %union.tree_node* %retval.2, !dbg !2697
}

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_type_attribute_variant(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @qualify_type(%union.tree_node* %type, %union.tree_node* %like) unnamed_addr #5 !dbg !2989 {
entry:
  %as_common = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2991, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.value(metadata %union.tree_node* %like, metadata !2992, metadata !DIExpression()), !dbg !2997
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2998
  %bf.load = load i64, i64* %0, align 8, !dbg !2998
  %bf.lshr = lshr i64 %bf.load, 56, !dbg !2998
  %conv = trunc i64 %bf.lshr to i8, !dbg !2998
  call void @llvm.dbg.value(metadata i8 %conv, metadata !2993, metadata !DIExpression()), !dbg !2997
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %like, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2999
  %bf.load2 = load i64, i64* %1, align 8, !dbg !2999
  %bf.lshr3 = lshr i64 %bf.load2, 56, !dbg !2999
  %conv5 = trunc i64 %bf.lshr3 to i8, !dbg !2999
  call void @llvm.dbg.value(metadata i8 %conv5, metadata !2995, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !2996, metadata !DIExpression(DW_OP_deref)), !dbg !2997
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !3000
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !2996, metadata !DIExpression(DW_OP_deref)), !dbg !2997
  %call = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv, i8 zeroext %conv5, i8* nonnull %as_common) #7, !dbg !3001
  %tobool = icmp eq i8 %call, 0, !dbg !3001
  br i1 %tobool, label %if.then, label %if.end, !dbg !3003

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8 %conv, metadata !2996, metadata !DIExpression()), !dbg !2997
  store i8 %conv, i8* %as_common, align 1, !dbg !3004
  call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.165, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %like) #6, !dbg !3006
  br label %if.end, !dbg !3007

if.end:                                           ; preds = %entry, %if.then
  %bf.load7 = load i64, i64* %0, align 8, !dbg !3008
  %bf.lshr8 = lshr i64 %bf.load7, 20, !dbg !3008
  %2 = trunc i64 %bf.lshr8 to i32, !dbg !3008
  %bf.cast9 = and i32 %2, 1, !dbg !3008
  %3 = lshr i64 %bf.load7, 18, !dbg !3008
  %4 = trunc i64 %3 to i32, !dbg !3008
  %mul15 = and i32 %4, 2, !dbg !3008
  %or = or i32 %bf.cast9, %mul15, !dbg !3008
  %type16 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3008
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i64 0, i32 6, !dbg !3008
  %bf.load17 = load i32, i32* %restrict_flag, align 4, !dbg !3008
  %5 = lshr i32 %bf.load17, 11, !dbg !3008
  %mul20 = and i32 %5, 4, !dbg !3008
  %or21 = or i32 %or, %mul20, !dbg !3008
  %bf.load23 = load i64, i64* %1, align 8, !dbg !3009
  %bf.lshr24 = lshr i64 %bf.load23, 20, !dbg !3009
  %6 = trunc i64 %bf.lshr24 to i32, !dbg !3009
  %bf.cast26 = and i32 %6, 1, !dbg !3009
  %7 = lshr i64 %bf.load23, 18, !dbg !3009
  %8 = trunc i64 %7 to i32, !dbg !3009
  %mul33 = and i32 %8, 2, !dbg !3009
  %or34 = or i32 %bf.cast26, %mul33, !dbg !3009
  %type35 = bitcast %union.tree_node* %like to %struct.tree_type*, !dbg !3009
  %restrict_flag36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type35, i64 0, i32 6, !dbg !3009
  %bf.load37 = load i32, i32* %restrict_flag36, align 4, !dbg !3009
  %9 = lshr i32 %bf.load37, 11, !dbg !3009
  %mul40 = and i32 %9, 4, !dbg !3009
  %or41 = or i32 %or34, %mul40, !dbg !3009
  %or42 = or i32 %or21, %or41, !dbg !3010
  %10 = load i8, i8* %as_common, align 1, !dbg !3011
  call void @llvm.dbg.value(metadata i8 %10, metadata !2996, metadata !DIExpression()), !dbg !2997
  %conv43 = zext i8 %10 to i32, !dbg !3011
  %shl = shl nuw nsw i32 %conv43, 8, !dbg !3011
  %or44 = or i32 %or42, %shl, !dbg !3012
  %call45 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %type, i32 %or44) #7, !dbg !3013
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !2996, metadata !DIExpression(DW_OP_deref)), !dbg !2997
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !3014
  ret %union.tree_node* %call45, !dbg !3015
}

declare dso_local %union.tree_node* @strip_array_types(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_build_qualified_type(%union.tree_node* %type, i32 %type_quals) local_unnamed_addr #5 !dbg !3016 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3020, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i32 %type_quals, metadata !3021, metadata !DIExpression()), !dbg !3033
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3034
  %cmp = icmp eq %union.tree_node* %0, %type, !dbg !3036
  br i1 %cmp, label %return, label %if.end, !dbg !3037

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3038
  %bf.load = load i64, i64* %1, align 8, !dbg !3038
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3039
  %cmp1 = icmp eq i64 %bf.cast2, 15, !dbg !3039
  br i1 %cmp1, label %if.then2, label %if.end90, !dbg !3040

if.then2:                                         ; preds = %if.end
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3041
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !3041
  %call = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %2, i32 %type_quals) #7, !dbg !3042
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3025, metadata !DIExpression()), !dbg !3043
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3044
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3046
  %context38 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3046
  %5 = bitcast i24* %context38 to %union.tree_node**, !dbg !3046
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3046
  br label %for.cond, !dbg !3050

for.cond:                                         ; preds = %for.inc, %if.then2
  %t.0.in = phi %union.tree_node** [ %3, %if.then2 ], [ %25, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !3051
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3022, metadata !DIExpression()), !dbg !3043
  %cond1 = icmp eq %union.tree_node* %t.0, null, !dbg !3052
  br i1 %cond1, label %if.then50.loopexit, label %for.body, !dbg !3052

for.body:                                         ; preds = %for.cond
  %call5 = tail call %union.tree_node* @strip_array_types(%union.tree_node* nonnull %t.0) #6, !dbg !3053
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3053
  %bf.load7 = load i64, i64* %7, align 8, !dbg !3053
  %bf.lshr = lshr i64 %bf.load7, 20, !dbg !3053
  %8 = trunc i64 %bf.lshr to i32, !dbg !3053
  %bf.cast9 = and i32 %8, 1, !dbg !3053
  %call10 = tail call %union.tree_node* @strip_array_types(%union.tree_node* nonnull %t.0) #6, !dbg !3053
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3053
  %bf.load12 = load i64, i64* %9, align 8, !dbg !3053
  %10 = lshr i64 %bf.load12, 18, !dbg !3053
  %11 = trunc i64 %10 to i32, !dbg !3053
  %mul16 = and i32 %11, 2, !dbg !3053
  %or = or i32 %bf.cast9, %mul16, !dbg !3053
  %call17 = tail call %union.tree_node* @strip_array_types(%union.tree_node* nonnull %t.0) #6, !dbg !3053
  %type18 = bitcast %union.tree_node* %call17 to %struct.tree_type*, !dbg !3053
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i64 0, i32 6, !dbg !3053
  %bf.load19 = load i32, i32* %restrict_flag, align 4, !dbg !3053
  %12 = lshr i32 %bf.load19, 11, !dbg !3053
  %mul22 = and i32 %12, 4, !dbg !3053
  %or23 = or i32 %or, %mul22, !dbg !3053
  %call24 = tail call %union.tree_node* @strip_array_types(%union.tree_node* nonnull %t.0) #6, !dbg !3053
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3053
  %bf.load26 = load i64, i64* %13, align 8, !dbg !3053
  %14 = lshr i64 %bf.load26, 48, !dbg !3053
  %15 = trunc i64 %14 to i32, !dbg !3053
  %shl = and i32 %15, 65280, !dbg !3053
  %or29 = or i32 %or23, %shl, !dbg !3053
  %cmp30 = icmp eq i32 %or29, %type_quals, !dbg !3054
  br i1 %cmp30, label %land.lhs.true, label %for.inc, !dbg !3055

land.lhs.true:                                    ; preds = %for.body
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3056
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !3056
  %18 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3057
  %cmp34 = icmp eq %union.tree_node* %17, %18, !dbg !3058
  br i1 %cmp34, label %land.lhs.true35, label %for.inc, !dbg !3059

land.lhs.true35:                                  ; preds = %land.lhs.true
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3060
  %19 = bitcast i24* %context to %union.tree_node**, !dbg !3060
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !3060
  %21 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3061
  %cmp39 = icmp eq %union.tree_node* %20, %21, !dbg !3062
  br i1 %cmp39, label %land.lhs.true40, label %for.inc, !dbg !3063

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3064
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !3064
  %24 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !3065
  %call44 = tail call i32 @attribute_list_equal(%union.tree_node* %23, %union.tree_node* %24) #6, !dbg !3066
  %tobool45 = icmp eq i32 %call44, 0, !dbg !3066
  br i1 %tobool45, label %for.inc, label %for.end, !dbg !3067

for.inc:                                          ; preds = %land.lhs.true40, %for.body, %land.lhs.true, %land.lhs.true35
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3068
  br label %for.cond, !dbg !3069, !llvm.loop !3070

for.end:                                          ; preds = %land.lhs.true40
  %t.0.lcssa11 = phi %union.tree_node* [ %t.0, %land.lhs.true40 ], !dbg !3051
  br label %return, !dbg !3072

if.then50.loopexit:                               ; preds = %for.cond
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3073
  %26 = bitcast i32* %values to %union.tree_node**, !dbg !3073
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !3073
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !3026, metadata !DIExpression()), !dbg !3074
  %call52 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %type) #6, !dbg !3075
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !3022, metadata !DIExpression()), !dbg !3043
  %type54 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3076
  store %union.tree_node* %call, %union.tree_node** %type54, align 8, !dbg !3077
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1, !dbg !3078
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !3078
  %cmp56 = icmp eq %union.tree_node* %29, null, !dbg !3078
  br i1 %cmp56, label %if.then62, label %lor.lhs.false, !dbg !3079

lor.lhs.false:                                    ; preds = %if.then50.loopexit
  %tobool57 = icmp eq %union.tree_node* %27, null, !dbg !3080
  br i1 %tobool57, label %if.else, label %land.lhs.true58, !dbg !3081

land.lhs.true58:                                  ; preds = %lor.lhs.false
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 1, !dbg !3082
  %31 = load %union.tree_node*, %union.tree_node** %30, align 8, !dbg !3082
  %cmp61 = icmp eq %union.tree_node* %31, null, !dbg !3082
  br i1 %cmp61, label %if.then62, label %if.else, !dbg !3083

if.then62:                                        ; preds = %land.lhs.true58, %if.then50.loopexit
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 1, !dbg !3084
  store %union.tree_node* null, %union.tree_node** %32, align 8, !dbg !3084
  br label %return, !dbg !3084

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true58
  %cmp67 = icmp eq %union.tree_node* %29, %call, !dbg !3085
  br i1 %cmp67, label %lor.lhs.false68, label %if.then74, !dbg !3086

lor.lhs.false68:                                  ; preds = %if.else
  br i1 %tobool57, label %if.else84, label %land.lhs.true70, !dbg !3087

land.lhs.true70:                                  ; preds = %lor.lhs.false68
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 1, !dbg !3088
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !3088
  %cmp73 = icmp eq %union.tree_node* %34, %27, !dbg !3089
  br i1 %cmp73, label %if.else84, label %if.then74, !dbg !3090

if.then74:                                        ; preds = %land.lhs.true70, %if.else
  br i1 %tobool57, label %cond.end, label %cond.true, !dbg !3091

cond.true:                                        ; preds = %if.then74
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 1, !dbg !3092
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8, !dbg !3092
  br label %cond.end, !dbg !3091

cond.end:                                         ; preds = %if.then74, %cond.true
  %cond = phi %union.tree_node* [ %36, %cond.true ], [ null, %if.then74 ], !dbg !3091
  %call80 = tail call %union.tree_node* @build_array_type(%union.tree_node* nonnull %29, %union.tree_node* %cond) #6, !dbg !3093
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !3029, metadata !DIExpression()), !dbg !3094
  %call81 = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call80, i32 %type_quals) #7, !dbg !3095
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 1, !dbg !3096
  store %union.tree_node* %call81, %union.tree_node** %37, align 8, !dbg !3097
  ret %union.tree_node* %call52, !dbg !3098

if.else84:                                        ; preds = %land.lhs.true70, %lor.lhs.false68
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 1, !dbg !3099
  store %union.tree_node* %call52, %union.tree_node** %38, align 8, !dbg !3100
  br label %return

if.end90:                                         ; preds = %if.end
  %and91 = and i32 %type_quals, 4, !dbg !3101
  %tobool92 = icmp eq i32 %and91, 0, !dbg !3101
  br i1 %tobool92, label %if.end115, label %land.lhs.true93, !dbg !3103

land.lhs.true93:                                  ; preds = %if.end90
  %cmp98 = icmp eq i64 %bf.cast2, 10, !dbg !3104
  br i1 %cmp98, label %lor.lhs.false105, label %lor.lhs.false99, !dbg !3104

lor.lhs.false99:                                  ; preds = %land.lhs.true93
  %cmp104 = icmp eq i64 %bf.cast2, 12, !dbg !3104
  br i1 %cmp104, label %lor.lhs.false105, label %if.then113, !dbg !3105

lor.lhs.false105:                                 ; preds = %lor.lhs.false99, %land.lhs.true93
  %type107 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3106
  %39 = bitcast %union.tree_node** %type107 to i64**, !dbg !3106
  %40 = load i64*, i64** %39, align 8, !dbg !3106
  %bf.load109 = load i64, i64* %40, align 8, !dbg !3106
  %bf.cast1115 = and i64 %bf.load109, 65535, !dbg !3106
  %cmp112 = icmp eq i64 %bf.cast1115, 20, !dbg !3106
  br i1 %cmp112, label %if.then113, label %if.end115, !dbg !3107

if.then113:                                       ; preds = %lor.lhs.false105, %lor.lhs.false99
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.163, i64 0, i64 0)) #6, !dbg !3108
  %and114 = and i32 %type_quals, -5, !dbg !3110
  call void @llvm.dbg.value(metadata i32 %and114, metadata !3021, metadata !DIExpression()), !dbg !3033
  br label %if.end115, !dbg !3111

if.end115:                                        ; preds = %if.end90, %if.then113, %lor.lhs.false105
  %type_quals.addr.0 = phi i32 [ %and114, %if.then113 ], [ %type_quals, %lor.lhs.false105 ], [ %type_quals, %if.end90 ]
  call void @llvm.dbg.value(metadata i32 %type_quals.addr.0, metadata !3021, metadata !DIExpression()), !dbg !3033
  %call116 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %type, i32 %type_quals.addr.0) #6, !dbg !3112
  br label %return, !dbg !3113

return:                                           ; preds = %for.end, %if.else84, %if.then62, %entry, %if.end115
  %retval.0 = phi %union.tree_node* [ %call116, %if.end115 ], [ %type, %entry ], [ %t.0.lcssa11, %for.end ], [ %call52, %if.else84 ], [ %call52, %if.then62 ], !dbg !3033
  ret %union.tree_node* %retval.0, !dbg !3098
}

declare dso_local %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @attribute_list_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @list_length(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @comptypes(%union.tree_node* %type1, %union.tree_node* %type2) local_unnamed_addr #5 !dbg !3114 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type1, metadata !3118, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %type2, metadata !3119, metadata !DIExpression()), !dbg !3122
  %0 = load %struct.tagged_tu_seen_cache*, %struct.tagged_tu_seen_cache** @tagged_tu_seen_base, align 8, !dbg !3123
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %0, metadata !3120, metadata !DIExpression()), !dbg !3122
  %call = tail call fastcc i32 @comptypes_internal(%union.tree_node* %type1, %union.tree_node* %type2, i8* null) #7, !dbg !3124
  call void @llvm.dbg.value(metadata i32 %call, metadata !3121, metadata !DIExpression()), !dbg !3122
  tail call fastcc void @free_all_tagged_tu_seen_up_to(%struct.tagged_tu_seen_cache* %0) #7, !dbg !3125
  ret i32 %call, !dbg !3126
}

declare dso_local zeroext i8 @pedwarn(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @common_type(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !3127 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !3129, metadata !DIExpression()), !dbg !3131
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !3130, metadata !DIExpression()), !dbg !3131
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3132
  %bf.load = load i64, i64* %0, align 8, !dbg !3132
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3134
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !3134
  br i1 %cmp, label %if.then, label %if.end, !dbg !3135

if.then:                                          ; preds = %entry
  %type = bitcast %union.tree_node* %t1 to %struct.tree_type*, !dbg !3136
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !3136
  %bf.load1 = load i32, i32* %precision, align 4, !dbg !3136
  %bf.clear2 = and i32 %bf.load1, 1023, !dbg !3136
  %call = tail call %union.tree_node* @c_common_type_for_size(i32 %bf.clear2, i32 1) #6, !dbg !3137
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3129, metadata !DIExpression()), !dbg !3131
  br label %if.end, !dbg !3138

if.end:                                           ; preds = %if.then, %entry
  %t1.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %t1, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0, metadata !3129, metadata !DIExpression()), !dbg !3131
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3139
  %bf.load4 = load i64, i64* %1, align 8, !dbg !3139
  %bf.cast62 = and i64 %bf.load4, 65535, !dbg !3141
  %cmp7 = icmp eq i64 %bf.cast62, 6, !dbg !3141
  br i1 %cmp7, label %if.then8, label %if.end14, !dbg !3142

if.then8:                                         ; preds = %if.end
  %type9 = bitcast %union.tree_node* %t2 to %struct.tree_type*, !dbg !3143
  %precision10 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type9, i64 0, i32 6, !dbg !3143
  %bf.load11 = load i32, i32* %precision10, align 4, !dbg !3143
  %bf.clear12 = and i32 %bf.load11, 1023, !dbg !3143
  %call13 = tail call %union.tree_node* @c_common_type_for_size(i32 %bf.clear12, i32 1) #6, !dbg !3144
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3130, metadata !DIExpression()), !dbg !3131
  br label %if.end14, !dbg !3145

if.end14:                                         ; preds = %if.then8, %if.end
  %t2.addr.0 = phi %union.tree_node* [ %call13, %if.then8 ], [ %t2, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0, metadata !3130, metadata !DIExpression()), !dbg !3131
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3146
  %bf.load16 = load i64, i64* %2, align 8, !dbg !3146
  %bf.cast183 = and i64 %bf.load16, 65535, !dbg !3148
  %cmp19 = icmp eq i64 %bf.cast183, 7, !dbg !3148
  br i1 %cmp19, label %land.lhs.true, label %if.end26, !dbg !3149

land.lhs.true:                                    ; preds = %if.end14
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3150
  %bf.load21 = load i64, i64* %3, align 8, !dbg !3150
  %bf.cast236 = and i64 %bf.load21, 65535, !dbg !3151
  %cmp24 = icmp eq i64 %bf.cast236, 7, !dbg !3151
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !3152

if.then25:                                        ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3153
  br label %return, !dbg !3154

if.end26:                                         ; preds = %land.lhs.true, %if.end14
  br i1 %cmp19, label %return, label %if.end33, !dbg !3155

if.end33:                                         ; preds = %if.end26
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3156
  %bf.load35 = load i64, i64* %5, align 8, !dbg !3156
  %bf.cast375 = and i64 %bf.load35, 65535, !dbg !3158
  %cmp38 = icmp eq i64 %bf.cast375, 7, !dbg !3158
  br i1 %cmp38, label %return, label %if.end40, !dbg !3159

if.end40:                                         ; preds = %if.end33
  %call41 = tail call fastcc %union.tree_node* @c_common_type(%union.tree_node* %t1.addr.0, %union.tree_node* %t2.addr.0) #7, !dbg !3160
  br label %return, !dbg !3161

return:                                           ; preds = %if.end33, %if.end26, %if.end40, %if.then25
  %retval.0 = phi %union.tree_node* [ %4, %if.then25 ], [ %call41, %if.end40 ], [ %t2.addr.0, %if.end26 ], [ %t1.addr.0, %if.end33 ], !dbg !3131
  ret %union.tree_node* %retval.0, !dbg !3162
}

declare dso_local %union.tree_node* @c_common_type_for_size(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_common_type(%union.tree_node* %t1, %union.tree_node* %t2) unnamed_addr #5 !dbg !3163 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !3165, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !3166, metadata !DIExpression()), !dbg !3194
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3195
  %cmp = icmp eq %union.tree_node* %0, %t1, !dbg !3197
  br i1 %cmp, label %cleanup688, label %if.end, !dbg !3198

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %union.tree_node* %0, %t2, !dbg !3199
  br i1 %cmp1, label %cleanup688, label %if.end3, !dbg !3201

if.end3:                                          ; preds = %if.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3202
  %bf.load = load i64, i64* %1, align 8, !dbg !3202
  %bf.lshr = lshr i64 %bf.load, 20, !dbg !3202
  %2 = trunc i64 %bf.lshr to i32, !dbg !3202
  %bf.cast = and i32 %2, 1, !dbg !3202
  %3 = lshr i64 %bf.load, 18, !dbg !3202
  %4 = trunc i64 %3 to i32, !dbg !3202
  %mul9 = and i32 %4, 2, !dbg !3202
  %or = or i32 %bf.cast, %mul9, !dbg !3202
  %type = bitcast %union.tree_node* %t1 to %struct.tree_type*, !dbg !3202
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !3202
  %bf.load10 = load i32, i32* %restrict_flag, align 4, !dbg !3202
  %5 = lshr i32 %bf.load10, 11, !dbg !3202
  %mul13 = and i32 %5, 4, !dbg !3202
  %or14 = or i32 %or, %mul13, !dbg !3202
  %6 = lshr i64 %bf.load, 48, !dbg !3202
  %7 = trunc i64 %6 to i32, !dbg !3202
  %shl = and i32 %7, 65280, !dbg !3202
  %or19 = or i32 %or14, %shl, !dbg !3202
  %cmp20 = icmp eq i32 %or19, 0, !dbg !3204
  br i1 %cmp20, label %if.end23, label %if.then21, !dbg !3205

if.then21:                                        ; preds = %if.end3
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3206
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !3206
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3165, metadata !DIExpression()), !dbg !3194
  br label %if.end23, !dbg !3207

if.end23:                                         ; preds = %if.end3, %if.then21
  %t1.addr.0 = phi %union.tree_node* [ %9, %if.then21 ], [ %t1, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0, metadata !3165, metadata !DIExpression()), !dbg !3194
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3208
  %bf.load25 = load i64, i64* %10, align 8, !dbg !3208
  %bf.lshr26 = lshr i64 %bf.load25, 20, !dbg !3208
  %11 = trunc i64 %bf.lshr26 to i32, !dbg !3208
  %bf.cast28 = and i32 %11, 1, !dbg !3208
  %12 = lshr i64 %bf.load25, 18, !dbg !3208
  %13 = trunc i64 %12 to i32, !dbg !3208
  %mul35 = and i32 %13, 2, !dbg !3208
  %or36 = or i32 %bf.cast28, %mul35, !dbg !3208
  %type37 = bitcast %union.tree_node* %t2 to %struct.tree_type*, !dbg !3208
  %restrict_flag38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type37, i64 0, i32 6, !dbg !3208
  %bf.load39 = load i32, i32* %restrict_flag38, align 4, !dbg !3208
  %14 = lshr i32 %bf.load39, 11, !dbg !3208
  %mul42 = and i32 %14, 4, !dbg !3208
  %or43 = or i32 %or36, %mul42, !dbg !3208
  %15 = lshr i64 %bf.load25, 48, !dbg !3208
  %16 = trunc i64 %15 to i32, !dbg !3208
  %shl49 = and i32 %16, 65280, !dbg !3208
  %or50 = or i32 %or43, %shl49, !dbg !3208
  %cmp51 = icmp eq i32 %or50, 0, !dbg !3210
  br i1 %cmp51, label %if.end55, label %if.then52, !dbg !3211

if.then52:                                        ; preds = %if.end23
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3212
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !3166, metadata !DIExpression()), !dbg !3194
  br label %if.end55, !dbg !3213

if.end55:                                         ; preds = %if.end23, %if.then52
  %t2.addr.0 = phi %union.tree_node* [ %18, %if.then52 ], [ %t2, %if.end23 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0, metadata !3166, metadata !DIExpression()), !dbg !3194
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3214
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !3214
  %cmp57 = icmp eq %union.tree_node* %20, null, !dbg !3216
  br i1 %cmp57, label %if.end59, label %if.then58, !dbg !3217

if.then58:                                        ; preds = %if.end55
  %call = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t1.addr.0, %union.tree_node* null) #6, !dbg !3218
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3165, metadata !DIExpression()), !dbg !3194
  br label %if.end59, !dbg !3219

if.end59:                                         ; preds = %if.end55, %if.then58
  %t1.addr.1 = phi %union.tree_node* [ %call, %if.then58 ], [ %t1.addr.0, %if.end55 ], !dbg !3194
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.1, metadata !3165, metadata !DIExpression()), !dbg !3194
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3220
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !3220
  %cmp62 = icmp eq %union.tree_node* %22, null, !dbg !3222
  br i1 %cmp62, label %if.end65, label %if.then63, !dbg !3223

if.then63:                                        ; preds = %if.end59
  %call64 = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %t2.addr.0, %union.tree_node* null) #6, !dbg !3224
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !3166, metadata !DIExpression()), !dbg !3194
  br label %if.end65, !dbg !3225

if.end65:                                         ; preds = %if.end59, %if.then63
  %t2.addr.1 = phi %union.tree_node* [ %call64, %if.then63 ], [ %t2.addr.0, %if.end59 ], !dbg !3194
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.1, metadata !3166, metadata !DIExpression()), !dbg !3194
  %cmp66 = icmp eq %union.tree_node* %t1.addr.1, %t2.addr.1, !dbg !3226
  br i1 %cmp66, label %cleanup688, label %if.end68, !dbg !3228

if.end68:                                         ; preds = %if.end65
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3229
  %bf.load70 = load i64, i64* %23, align 8, !dbg !3229
  %24 = trunc i64 %bf.load70 to i32, !dbg !3229
  %bf.cast72 = and i32 %24, 65535, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %bf.cast72, metadata !3167, metadata !DIExpression()), !dbg !3194
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3230
  %bf.load74 = load i64, i64* %25, align 8, !dbg !3230
  %26 = trunc i64 %bf.load74 to i32, !dbg !3230
  %bf.cast76 = and i32 %26, 65535, !dbg !3230
  call void @llvm.dbg.value(metadata i32 %bf.cast76, metadata !3168, metadata !DIExpression()), !dbg !3194
  %trunc = trunc i64 %bf.load70 to i16, !dbg !3231
  switch i16 %trunc, label %cond.true [
    i16 14, label %cond.end
    i16 13, label %cond.end
    i16 11, label %cond.end
    i16 9, label %cond.end
    i16 8, label %cond.end
  ], !dbg !3231

cond.true:                                        ; preds = %if.end68
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 726, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3231
  br label %cond.end, !dbg !3231

cond.end:                                         ; preds = %if.end68, %if.end68, %if.end68, %if.end68, %if.end68, %cond.true
  %trunc18 = trunc i64 %bf.load74 to i16, !dbg !3232
  switch i16 %trunc18, label %cond.true94 [
    i16 14, label %cond.end96
    i16 13, label %cond.end96
    i16 11, label %cond.end96
    i16 9, label %cond.end96
    i16 8, label %cond.end96
  ], !dbg !3232

cond.true94:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3232
  br label %cond.end96, !dbg !3232

cond.end96:                                       ; preds = %cond.end, %cond.end, %cond.end, %cond.end, %cond.end, %cond.true94
  %bf.load99 = load i64, i64* %23, align 8, !dbg !3233
  %bf.cast10119 = and i64 %bf.load99, 65535, !dbg !3233
  %cmp102 = icmp eq i64 %bf.cast10119, 9, !dbg !3233
  br i1 %cmp102, label %land.lhs.true, label %lor.lhs.false119, !dbg !3233

land.lhs.true:                                    ; preds = %cond.end96
  br i1 false, label %cond.true108, label %cond.false110, !dbg !3233

cond.true108:                                     ; preds = %land.lhs.true
  br label %cond.end115, !dbg !3233

cond.false110:                                    ; preds = %land.lhs.true
  %type111 = bitcast %union.tree_node* %t1.addr.1 to %struct.tree_type*, !dbg !3233
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type111, i64 0, i32 6, !dbg !3233
  %bf.load112 = load i32, i32* %mode, align 4, !dbg !3233
  %bf.lshr113 = lshr i32 %bf.load112, 16, !dbg !3233
  %bf.clear114 = and i32 %bf.lshr113, 255, !dbg !3233
  br label %cond.end115, !dbg !3233

cond.end115:                                      ; preds = %cond.false110, %cond.true108
  %cond116 = phi i32 [ undef, %cond.true108 ], [ %bf.clear114, %cond.false110 ], !dbg !3233
  %idxprom = zext i32 %cond116 to i64, !dbg !3233
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3233
  %27 = load i8, i8* %arrayidx, align 1, !dbg !3233
  %cmp117 = icmp eq i8 %27, 9, !dbg !3233
  br i1 %cmp117, label %land.lhs.true148, label %lor.lhs.false119, !dbg !3235

lor.lhs.false119:                                 ; preds = %cond.end115, %cond.end96
  %bf.load121 = load i64, i64* %25, align 8, !dbg !3236
  %bf.cast12320 = and i64 %bf.load121, 65535, !dbg !3236
  %cmp124 = icmp eq i64 %bf.cast12320, 9, !dbg !3236
  br i1 %cmp124, label %land.lhs.true126, label %if.end228, !dbg !3236

land.lhs.true126:                                 ; preds = %lor.lhs.false119
  br i1 false, label %cond.true133, label %cond.false135, !dbg !3236

cond.true133:                                     ; preds = %land.lhs.true126
  br label %cond.end141, !dbg !3236

cond.false135:                                    ; preds = %land.lhs.true126
  %type136 = bitcast %union.tree_node* %t2.addr.1 to %struct.tree_type*, !dbg !3236
  %mode137 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type136, i64 0, i32 6, !dbg !3236
  %bf.load138 = load i32, i32* %mode137, align 4, !dbg !3236
  %bf.lshr139 = lshr i32 %bf.load138, 16, !dbg !3236
  %bf.clear140 = and i32 %bf.lshr139, 255, !dbg !3236
  br label %cond.end141, !dbg !3236

cond.end141:                                      ; preds = %cond.false135, %cond.true133
  %cond142 = phi i32 [ undef, %cond.true133 ], [ %bf.clear140, %cond.false135 ], !dbg !3236
  %idxprom143 = zext i32 %cond142 to i64, !dbg !3236
  %arrayidx144 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom143, !dbg !3236
  %28 = load i8, i8* %arrayidx144, align 1, !dbg !3236
  %cmp146 = icmp eq i8 %28, 9, !dbg !3236
  br i1 %cmp146, label %land.lhs.true148, label %if.end228, !dbg !3237

land.lhs.true148:                                 ; preds = %cond.end141, %cond.end115
  br i1 %cmp102, label %land.lhs.true155, label %if.then206, !dbg !3238

land.lhs.true155:                                 ; preds = %land.lhs.true148
  br i1 false, label %cond.true162, label %cond.false164, !dbg !3238

cond.true162:                                     ; preds = %land.lhs.true155
  br label %cond.end170, !dbg !3238

cond.false164:                                    ; preds = %land.lhs.true155
  %type165 = bitcast %union.tree_node* %t1.addr.1 to %struct.tree_type*, !dbg !3238
  %mode166 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type165, i64 0, i32 6, !dbg !3238
  %bf.load167 = load i32, i32* %mode166, align 4, !dbg !3238
  %bf.lshr168 = lshr i32 %bf.load167, 16, !dbg !3238
  %bf.clear169 = and i32 %bf.lshr168, 255, !dbg !3238
  br label %cond.end170, !dbg !3238

cond.end170:                                      ; preds = %cond.false164, %cond.true162
  %cond171 = phi i32 [ undef, %cond.true162 ], [ %bf.clear169, %cond.false164 ], !dbg !3238
  %idxprom172 = zext i32 %cond171 to i64, !dbg !3238
  %arrayidx173 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom172, !dbg !3238
  %29 = load i8, i8* %arrayidx173, align 1, !dbg !3238
  %cmp175 = icmp eq i8 %29, 9, !dbg !3238
  br i1 %cmp175, label %land.lhs.true177, label %if.then206, !dbg !3239

land.lhs.true177:                                 ; preds = %cond.end170
  %bf.load179 = load i64, i64* %25, align 8, !dbg !3240
  %bf.cast18141 = and i64 %bf.load179, 65535, !dbg !3240
  %cmp182 = icmp eq i64 %bf.cast18141, 9, !dbg !3240
  br i1 %cmp182, label %land.lhs.true184, label %if.then206, !dbg !3240

land.lhs.true184:                                 ; preds = %land.lhs.true177
  br i1 false, label %cond.true191, label %cond.false193, !dbg !3240

cond.true191:                                     ; preds = %land.lhs.true184
  br label %cond.end199, !dbg !3240

cond.false193:                                    ; preds = %land.lhs.true184
  %type194 = bitcast %union.tree_node* %t2.addr.1 to %struct.tree_type*, !dbg !3240
  %mode195 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type194, i64 0, i32 6, !dbg !3240
  %bf.load196 = load i32, i32* %mode195, align 4, !dbg !3240
  %bf.lshr197 = lshr i32 %bf.load196, 16, !dbg !3240
  %bf.clear198 = and i32 %bf.lshr197, 255, !dbg !3240
  br label %cond.end199, !dbg !3240

cond.end199:                                      ; preds = %cond.false193, %cond.true191
  %cond200 = phi i32 [ undef, %cond.true191 ], [ %bf.clear198, %cond.false193 ], !dbg !3240
  %idxprom201 = zext i32 %cond200 to i64, !dbg !3240
  %arrayidx202 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom201, !dbg !3240
  %30 = load i8, i8* %arrayidx202, align 1, !dbg !3240
  %cmp204 = icmp eq i8 %30, 9, !dbg !3240
  br i1 %cmp204, label %if.end228, label %if.then206, !dbg !3241

if.then206:                                       ; preds = %cond.end199, %land.lhs.true177, %cond.end170, %land.lhs.true148
  %cmp207 = icmp eq i32 %bf.cast72, 14, !dbg !3242
  %cmp210 = icmp eq i32 %bf.cast76, 14, !dbg !3245
  %or.cond = or i1 %cmp207, %cmp210, !dbg !3246
  br i1 %or.cond, label %if.then212, label %if.end213, !dbg !3246

if.then212:                                       ; preds = %if.then206
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.166, i64 0, i64 0)) #6, !dbg !3247
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3249
  br label %cleanup688, !dbg !3250

if.end213:                                        ; preds = %if.then206
  %cmp214 = icmp eq i32 %bf.cast72, 13, !dbg !3251
  %cmp217 = icmp eq i32 %bf.cast76, 13, !dbg !3253
  %or.cond1 = or i1 %cmp214, %cmp217, !dbg !3254
  br i1 %or.cond1, label %if.then219, label %if.end220, !dbg !3254

if.then219:                                       ; preds = %if.end213
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.167, i64 0, i64 0)) #6, !dbg !3255
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3257
  br label %cleanup688, !dbg !3258

if.end220:                                        ; preds = %if.end213
  %cmp221 = icmp eq i32 %bf.cast72, 9, !dbg !3259
  %cmp224 = icmp eq i32 %bf.cast76, 9, !dbg !3261
  %or.cond2 = and i1 %cmp221, %cmp224, !dbg !3262
  br i1 %or.cond2, label %if.then226, label %if.end228, !dbg !3262

if.then226:                                       ; preds = %if.end220
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.168, i64 0, i64 0)) #6, !dbg !3263
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3265
  br label %cleanup688, !dbg !3266

if.end228:                                        ; preds = %if.end220, %cond.end199, %cond.end141, %lor.lhs.false119
  %cmp229 = icmp eq i32 %bf.cast72, 14, !dbg !3267
  br i1 %cmp229, label %cleanup688, label %if.end232, !dbg !3269

if.end232:                                        ; preds = %if.end228
  %cmp233 = icmp eq i32 %bf.cast76, 14, !dbg !3270
  br i1 %cmp233, label %cleanup688, label %if.end236, !dbg !3272

if.end236:                                        ; preds = %if.end232
  %cmp237 = icmp eq i32 %bf.cast72, 13, !dbg !3273
  %cmp240 = icmp eq i32 %bf.cast76, 13, !dbg !3274
  %or.cond3 = or i1 %cmp237, %cmp240, !dbg !3275
  br i1 %or.cond3, label %if.then242, label %if.end279, !dbg !3275

if.then242:                                       ; preds = %if.end236
  br i1 %cmp237, label %cond.true245, label %cond.end248, !dbg !3276

cond.true245:                                     ; preds = %if.then242
  %type246 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3277
  %34 = load %union.tree_node*, %union.tree_node** %type246, align 8, !dbg !3277
  br label %cond.end248, !dbg !3276

cond.end248:                                      ; preds = %if.then242, %cond.true245
  %cond249 = phi %union.tree_node* [ %34, %cond.true245 ], [ %t1.addr.1, %if.then242 ], !dbg !3276
  call void @llvm.dbg.value(metadata %union.tree_node* %cond249, metadata !3169, metadata !DIExpression()), !dbg !3278
  br i1 %cmp240, label %cond.true252, label %cond.end256, !dbg !3279

cond.true252:                                     ; preds = %cond.end248
  %type254 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3280
  %35 = load %union.tree_node*, %union.tree_node** %type254, align 8, !dbg !3280
  br label %cond.end256, !dbg !3279

cond.end256:                                      ; preds = %cond.end248, %cond.true252
  %cond257 = phi %union.tree_node* [ %35, %cond.true252 ], [ %t2.addr.1, %cond.end248 ], !dbg !3279
  call void @llvm.dbg.value(metadata %union.tree_node* %cond257, metadata !3172, metadata !DIExpression()), !dbg !3278
  %call258 = tail call fastcc %union.tree_node* @c_common_type(%union.tree_node* %cond249, %union.tree_node* %cond257) #7, !dbg !3281
  call void @llvm.dbg.value(metadata %union.tree_node* %call258, metadata !3173, metadata !DIExpression()), !dbg !3278
  br i1 %cmp237, label %land.lhs.true261, label %if.else, !dbg !3282

land.lhs.true261:                                 ; preds = %cond.end256
  %type263 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3284
  %36 = load %union.tree_node*, %union.tree_node** %type263, align 8, !dbg !3284
  %cmp264 = icmp eq %union.tree_node* %36, %call258, !dbg !3285
  br i1 %cmp264, label %cleanup688, label %if.else, !dbg !3286

if.else:                                          ; preds = %land.lhs.true261, %cond.end256
  br i1 %cmp240, label %land.lhs.true269, label %if.else275, !dbg !3287

land.lhs.true269:                                 ; preds = %if.else
  %type271 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3289
  %37 = load %union.tree_node*, %union.tree_node** %type271, align 8, !dbg !3289
  %cmp272 = icmp eq %union.tree_node* %37, %call258, !dbg !3290
  br i1 %cmp272, label %cleanup688, label %if.else275, !dbg !3291

if.else275:                                       ; preds = %land.lhs.true269, %if.else
  %call276 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %call258) #6, !dbg !3292
  br label %cleanup688, !dbg !3293

if.end279:                                        ; preds = %if.end236
  %cmp280 = icmp eq i32 %bf.cast72, 9, !dbg !3294
  %cmp283 = icmp ne i32 %bf.cast76, 9, !dbg !3296
  %or.cond4 = and i1 %cmp280, %cmp283, !dbg !3297
  br i1 %or.cond4, label %cleanup688, label %if.end286, !dbg !3297

if.end286:                                        ; preds = %if.end279
  %cmp287 = icmp eq i32 %bf.cast76, 9, !dbg !3298
  %cmp290 = icmp ne i32 %bf.cast72, 9, !dbg !3300
  %or.cond5 = and i1 %cmp287, %cmp290, !dbg !3301
  br i1 %or.cond5, label %cleanup688, label %if.end293, !dbg !3301

if.end293:                                        ; preds = %if.end286
  %or.cond6 = and i1 %cmp280, %cmp287, !dbg !3302
  br i1 %or.cond6, label %if.then299, label %if.end335, !dbg !3302

if.then299:                                       ; preds = %if.end293
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3304
  %39 = load %union.tree_node*, %union.tree_node** %38, align 8, !dbg !3304
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51), align 8, !dbg !3307
  %cmp302 = icmp eq %union.tree_node* %39, %40, !dbg !3308
  br i1 %cmp302, label %if.then309, label %lor.lhs.false304, !dbg !3309

lor.lhs.false304:                                 ; preds = %if.then299
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3310
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !3310
  %cmp307 = icmp eq %union.tree_node* %42, %40, !dbg !3311
  br i1 %cmp307, label %if.then309, label %if.else310, !dbg !3312

if.then309:                                       ; preds = %lor.lhs.false304, %if.then299
  br label %cleanup688, !dbg !3313

if.else310:                                       ; preds = %lor.lhs.false304
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 16, !dbg !3314
  %cmp313 = icmp eq %union.tree_node* %39, %43, !dbg !3316
  br i1 %cmp313, label %if.then320, label %lor.lhs.false315, !dbg !3317

lor.lhs.false315:                                 ; preds = %if.else310
  %cmp318 = icmp eq %union.tree_node* %42, %43, !dbg !3318
  br i1 %cmp318, label %if.then320, label %if.else321, !dbg !3319

if.then320:                                       ; preds = %lor.lhs.false315, %if.else310
  br label %cleanup688, !dbg !3320

if.else321:                                       ; preds = %lor.lhs.false315
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49), align 8, !dbg !3321
  %cmp324 = icmp eq %union.tree_node* %39, %44, !dbg !3323
  br i1 %cmp324, label %if.then331, label %lor.lhs.false326, !dbg !3324

lor.lhs.false326:                                 ; preds = %if.else321
  %cmp329 = icmp eq %union.tree_node* %42, %44, !dbg !3325
  br i1 %cmp329, label %if.then331, label %if.end335, !dbg !3326

if.then331:                                       ; preds = %lor.lhs.false326, %if.else321
  br label %cleanup688, !dbg !3327

if.end335:                                        ; preds = %lor.lhs.false326, %if.end293
  %cmp336 = icmp eq i32 %bf.cast72, 11, !dbg !3328
  %cmp339 = icmp eq i32 %bf.cast76, 11, !dbg !3329
  %or.cond7 = or i1 %cmp336, %cmp339, !dbg !3330
  br i1 %or.cond7, label %if.then341, label %if.end569, !dbg !3330

if.then341:                                       ; preds = %if.end335
  call void @llvm.dbg.value(metadata i32 0, metadata !3174, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i32 0, metadata !3177, metadata !DIExpression()), !dbg !3331
  %cmp346 = icmp eq i64 %bf.cast10119, 14, !dbg !3332
  br i1 %cmp346, label %cond.true348, label %cond.false350, !dbg !3332

cond.true348:                                     ; preds = %if.then341
  %call349 = tail call i32 @vector_type_mode(%union.tree_node* %t1.addr.1) #6, !dbg !3332
  br label %cond.end356, !dbg !3332

cond.false350:                                    ; preds = %if.then341
  %type351 = bitcast %union.tree_node* %t1.addr.1 to %struct.tree_type*, !dbg !3332
  %mode352 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type351, i64 0, i32 6, !dbg !3332
  %bf.load353 = load i32, i32* %mode352, align 4, !dbg !3332
  %bf.lshr354 = lshr i32 %bf.load353, 16, !dbg !3332
  %bf.clear355 = and i32 %bf.lshr354, 255, !dbg !3332
  br label %cond.end356, !dbg !3332

cond.end356:                                      ; preds = %cond.false350, %cond.true348
  %cond357 = phi i32 [ %call349, %cond.true348 ], [ %bf.clear355, %cond.false350 ], !dbg !3332
  call void @llvm.dbg.value(metadata i32 %cond357, metadata !3178, metadata !DIExpression()), !dbg !3331
  %bf.load359 = load i64, i64* %25, align 8, !dbg !3333
  %bf.cast36127 = and i64 %bf.load359, 65535, !dbg !3333
  %cmp362 = icmp eq i64 %bf.cast36127, 14, !dbg !3333
  br i1 %cmp362, label %cond.true364, label %cond.false366, !dbg !3333

cond.true364:                                     ; preds = %cond.end356
  %call365 = tail call i32 @vector_type_mode(%union.tree_node* %t2.addr.1) #6, !dbg !3333
  br label %cond.end372, !dbg !3333

cond.false366:                                    ; preds = %cond.end356
  %type367 = bitcast %union.tree_node* %t2.addr.1 to %struct.tree_type*, !dbg !3333
  %mode368 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type367, i64 0, i32 6, !dbg !3333
  %bf.load369 = load i32, i32* %mode368, align 4, !dbg !3333
  %bf.lshr370 = lshr i32 %bf.load369, 16, !dbg !3333
  %bf.clear371 = and i32 %bf.lshr370, 255, !dbg !3333
  br label %cond.end372, !dbg !3333

cond.end372:                                      ; preds = %cond.false366, %cond.true364
  %cond373 = phi i32 [ %call365, %cond.true364 ], [ %bf.clear371, %cond.false366 ], !dbg !3333
  call void @llvm.dbg.value(metadata i32 %cond373, metadata !3179, metadata !DIExpression()), !dbg !3331
  %bf.load375 = load i64, i64* %23, align 8, !dbg !3334
  %45 = trunc i64 %bf.load375 to i32, !dbg !3334
  %tobool = icmp slt i32 %45, 0, !dbg !3334
  br i1 %tobool, label %if.then386, label %lor.lhs.false379, !dbg !3336

lor.lhs.false379:                                 ; preds = %cond.end372
  %bf.load381 = load i64, i64* %25, align 8, !dbg !3337
  %46 = trunc i64 %bf.load381 to i32, !dbg !3337
  %tobool385 = icmp slt i32 %46, 0, !dbg !3337
  br i1 %tobool385, label %if.then386, label %if.end387, !dbg !3338

if.then386:                                       ; preds = %lor.lhs.false379, %cond.end372
  call void @llvm.dbg.value(metadata i32 1, metadata !3177, metadata !DIExpression()), !dbg !3331
  br label %if.end387, !dbg !3339

if.end387:                                        ; preds = %if.then386, %lor.lhs.false379
  %satp.0 = phi i32 [ 1, %if.then386 ], [ 0, %lor.lhs.false379 ], !dbg !3331
  call void @llvm.dbg.value(metadata i32 %satp.0, metadata !3177, metadata !DIExpression()), !dbg !3331
  %bf.cast39230 = and i64 %bf.load375, 2097152, !dbg !3340
  %tobool393 = icmp eq i64 %bf.cast39230, 0, !dbg !3340
  br i1 %tobool393, label %lor.lhs.false407, label %land.lhs.true394, !dbg !3342

land.lhs.true394:                                 ; preds = %if.end387
  %bf.load396 = load i64, i64* %25, align 8, !dbg !3343
  %bf.cast39937 = and i64 %bf.load396, 2097152, !dbg !3343
  %tobool400 = icmp ne i64 %bf.cast39937, 0, !dbg !3343
  %or.cond8 = and i1 %tobool400, %cmp336, !dbg !3344
  %or.cond9 = and i1 %or.cond8, %cmp339, !dbg !3344
  br i1 %or.cond9, label %if.then433, label %lor.lhs.false407, !dbg !3344

lor.lhs.false407:                                 ; preds = %if.end387, %land.lhs.true394
  %cmp411 = icmp ne i32 %bf.cast76, 11, !dbg !3345
  %or.cond10 = and i1 %cmp336, %cmp411, !dbg !3346
  br i1 %or.cond10, label %land.lhs.true413, label %lor.lhs.false420, !dbg !3346

land.lhs.true413:                                 ; preds = %lor.lhs.false407
  br i1 %tobool393, label %lor.lhs.false420, label %if.then433, !dbg !3347

lor.lhs.false420:                                 ; preds = %land.lhs.true413, %lor.lhs.false407
  %cmp421 = icmp ne i32 %bf.cast72, 11, !dbg !3348
  %or.cond11 = and i1 %cmp421, %cmp339, !dbg !3349
  br i1 %or.cond11, label %land.lhs.true426, label %if.end434, !dbg !3349

land.lhs.true426:                                 ; preds = %lor.lhs.false420
  %bf.load428 = load i64, i64* %25, align 8, !dbg !3350
  %bf.cast43135 = and i64 %bf.load428, 2097152, !dbg !3350
  %tobool432 = icmp eq i64 %bf.cast43135, 0, !dbg !3350
  br i1 %tobool432, label %if.end434, label %if.then433, !dbg !3351

if.then433:                                       ; preds = %land.lhs.true413, %land.lhs.true426, %land.lhs.true394
  call void @llvm.dbg.value(metadata i32 1, metadata !3174, metadata !DIExpression()), !dbg !3331
  br label %if.end434, !dbg !3352

if.end434:                                        ; preds = %land.lhs.true426, %if.then433, %lor.lhs.false420
  %unsignedp.0 = phi i32 [ 1, %if.then433 ], [ 0, %land.lhs.true426 ], [ 0, %lor.lhs.false420 ], !dbg !3331
  call void @llvm.dbg.value(metadata i32 %unsignedp.0, metadata !3174, metadata !DIExpression()), !dbg !3331
  %cmp435 = icmp eq i32 %unsignedp.0, 0, !dbg !3353
  br i1 %cmp435, label %if.then437, label %if.end501, !dbg !3354

if.then437:                                       ; preds = %if.end434
  br i1 %cmp336, label %land.lhs.true440, label %if.end468, !dbg !3355

land.lhs.true440:                                 ; preds = %if.then437
  br i1 %tobool393, label %if.end468, label %if.then447, !dbg !3356

if.then447:                                       ; preds = %land.lhs.true440
  call void @llvm.dbg.value(metadata i32 0, metadata !3186, metadata !DIExpression()), !dbg !3357
  %idxprom448 = zext i32 %cond357 to i64, !dbg !3358
  %arrayidx449 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom448, !dbg !3358
  %47 = load i8, i8* %arrayidx449, align 1, !dbg !3358
  %cmp451 = icmp eq i8 %47, 5, !dbg !3360
  br i1 %cmp451, label %if.end463, label %if.else454, !dbg !3361

if.else454:                                       ; preds = %if.then447
  %cmp458 = icmp eq i8 %47, 7, !dbg !3362
  br i1 %cmp458, label %if.end463, label %if.else461, !dbg !3364

if.else461:                                       ; preds = %if.else454
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 843, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3365
  br label %if.end463

if.end463:                                        ; preds = %if.else461, %if.else454, %if.then447
  %mclass.1 = phi i32 [ 4, %if.then447 ], [ 0, %if.else461 ], [ 6, %if.else454 ], !dbg !3366
  call void @llvm.dbg.value(metadata i32 %mclass.1, metadata !3186, metadata !DIExpression()), !dbg !3357
  %arrayidx465 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom448, !dbg !3367
  %48 = load i16, i16* %arrayidx465, align 2, !dbg !3367
  %conv466 = zext i16 %48 to i32, !dbg !3367
  %call467 = tail call i32 @mode_for_size(i32 %conv466, i32 %mclass.1, i32 0) #6, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %call467, metadata !3178, metadata !DIExpression()), !dbg !3331
  br label %if.end468, !dbg !3369

if.end468:                                        ; preds = %land.lhs.true440, %if.end463, %if.then437
  %m1.0 = phi i32 [ %call467, %if.end463 ], [ %cond357, %land.lhs.true440 ], [ %cond357, %if.then437 ], !dbg !3331
  call void @llvm.dbg.value(metadata i32 %m1.0, metadata !3178, metadata !DIExpression()), !dbg !3331
  br i1 %cmp339, label %land.lhs.true471, label %if.end501, !dbg !3370

land.lhs.true471:                                 ; preds = %if.end468
  %bf.load473 = load i64, i64* %25, align 8, !dbg !3371
  %bf.cast47633 = and i64 %bf.load473, 2097152, !dbg !3371
  %tobool477 = icmp eq i64 %bf.cast47633, 0, !dbg !3371
  br i1 %tobool477, label %if.end501, label %if.then478, !dbg !3372

if.then478:                                       ; preds = %land.lhs.true471
  call void @llvm.dbg.value(metadata i32 0, metadata !3191, metadata !DIExpression()), !dbg !3373
  %idxprom480 = zext i32 %cond373 to i64, !dbg !3374
  %arrayidx481 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom480, !dbg !3374
  %49 = load i8, i8* %arrayidx481, align 1, !dbg !3374
  %cmp483 = icmp eq i8 %49, 5, !dbg !3376
  br i1 %cmp483, label %if.end495, label %if.else486, !dbg !3377

if.else486:                                       ; preds = %if.then478
  %cmp490 = icmp eq i8 %49, 7, !dbg !3378
  br i1 %cmp490, label %if.end495, label %if.else493, !dbg !3380

if.else493:                                       ; preds = %if.else486
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 854, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3381
  br label %if.end495

if.end495:                                        ; preds = %if.else493, %if.else486, %if.then478
  %mclass479.1 = phi i32 [ 4, %if.then478 ], [ 0, %if.else493 ], [ 6, %if.else486 ], !dbg !3382
  call void @llvm.dbg.value(metadata i32 %mclass479.1, metadata !3191, metadata !DIExpression()), !dbg !3373
  %arrayidx497 = getelementptr inbounds [87 x i16], [87 x i16]* @mode_precision, i64 0, i64 %idxprom480, !dbg !3383
  %50 = load i16, i16* %arrayidx497, align 2, !dbg !3383
  %conv498 = zext i16 %50 to i32, !dbg !3383
  %call499 = tail call i32 @mode_for_size(i32 %conv498, i32 %mclass479.1, i32 0) #6, !dbg !3384
  call void @llvm.dbg.value(metadata i32 %call499, metadata !3179, metadata !DIExpression()), !dbg !3331
  br label %if.end501, !dbg !3385

if.end501:                                        ; preds = %land.lhs.true471, %if.end468, %if.end495, %if.end434
  %m2.1 = phi i32 [ %cond373, %if.end434 ], [ %call499, %if.end495 ], [ %cond373, %land.lhs.true471 ], [ %cond373, %if.end468 ], !dbg !3331
  %m1.1 = phi i32 [ %cond357, %if.end434 ], [ %m1.0, %if.end495 ], [ %m1.0, %land.lhs.true471 ], [ %m1.0, %if.end468 ], !dbg !3331
  call void @llvm.dbg.value(metadata i32 %m1.1, metadata !3178, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i32 %m2.1, metadata !3179, metadata !DIExpression()), !dbg !3331
  br i1 %cmp336, label %if.then504, label %if.else511, !dbg !3386

if.then504:                                       ; preds = %if.end501
  %idxprom505 = zext i32 %m1.1 to i64, !dbg !3387
  %arrayidx506 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_fbit, i64 0, i64 %idxprom505, !dbg !3387
  %51 = load i8, i8* %arrayidx506, align 1, !dbg !3387
  %conv507 = zext i8 %51 to i32, !dbg !3387
  call void @llvm.dbg.value(metadata i32 %conv507, metadata !3180, metadata !DIExpression()), !dbg !3331
  %arrayidx509 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_ibit, i64 0, i64 %idxprom505, !dbg !3390
  %52 = load i8, i8* %arrayidx509, align 1, !dbg !3390
  %conv510 = zext i8 %52 to i32, !dbg !3390
  call void @llvm.dbg.value(metadata i32 %conv510, metadata !3181, metadata !DIExpression()), !dbg !3331
  br label %if.end521, !dbg !3391

if.else511:                                       ; preds = %if.end501
  call void @llvm.dbg.value(metadata i32 0, metadata !3180, metadata !DIExpression()), !dbg !3331
  %type512 = bitcast %union.tree_node* %t1.addr.1 to %struct.tree_type*, !dbg !3392
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type512, i64 0, i32 6, !dbg !3392
  %bf.load513 = load i32, i32* %precision, align 4, !dbg !3392
  %bf.clear514 = and i32 %bf.load513, 1023, !dbg !3392
  %bf.load516 = load i64, i64* %23, align 8, !dbg !3394
  %bf.cast51931 = lshr i64 %bf.load516, 21, !dbg !3395
  %53 = trunc i64 %bf.cast51931 to i32, !dbg !3395
  %54 = and i32 %53, 1, !dbg !3395
  %55 = xor i32 %54, 1, !dbg !3395
  %sub = sub nsw i32 %bf.clear514, %55, !dbg !3396
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3181, metadata !DIExpression()), !dbg !3331
  br label %if.end521

if.end521:                                        ; preds = %if.else511, %if.then504
  %fbit1.0 = phi i32 [ %conv507, %if.then504 ], [ 0, %if.else511 ], !dbg !3397
  %ibit1.0 = phi i32 [ %conv510, %if.then504 ], [ %sub, %if.else511 ], !dbg !3397
  call void @llvm.dbg.value(metadata i32 %ibit1.0, metadata !3181, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i32 %fbit1.0, metadata !3180, metadata !DIExpression()), !dbg !3331
  br i1 %cmp339, label %if.then524, label %if.else531, !dbg !3398

if.then524:                                       ; preds = %if.end521
  %idxprom525 = zext i32 %m2.1 to i64, !dbg !3399
  %arrayidx526 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_fbit, i64 0, i64 %idxprom525, !dbg !3399
  %56 = load i8, i8* %arrayidx526, align 1, !dbg !3399
  %conv527 = zext i8 %56 to i32, !dbg !3399
  call void @llvm.dbg.value(metadata i32 %conv527, metadata !3182, metadata !DIExpression()), !dbg !3331
  %arrayidx529 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_ibit, i64 0, i64 %idxprom525, !dbg !3402
  %57 = load i8, i8* %arrayidx529, align 1, !dbg !3402
  %conv530 = zext i8 %57 to i32, !dbg !3402
  call void @llvm.dbg.value(metadata i32 %conv530, metadata !3183, metadata !DIExpression()), !dbg !3331
  br label %if.end545, !dbg !3403

if.else531:                                       ; preds = %if.end521
  call void @llvm.dbg.value(metadata i32 0, metadata !3182, metadata !DIExpression()), !dbg !3331
  %type532 = bitcast %union.tree_node* %t2.addr.1 to %struct.tree_type*, !dbg !3404
  %precision533 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type532, i64 0, i32 6, !dbg !3404
  %bf.load534 = load i32, i32* %precision533, align 4, !dbg !3404
  %bf.clear535 = and i32 %bf.load534, 1023, !dbg !3404
  %bf.load537 = load i64, i64* %25, align 8, !dbg !3406
  %bf.cast54032 = lshr i64 %bf.load537, 21, !dbg !3407
  %58 = trunc i64 %bf.cast54032 to i32, !dbg !3407
  %59 = and i32 %58, 1, !dbg !3407
  %60 = xor i32 %59, 1, !dbg !3407
  %sub544 = sub nsw i32 %bf.clear535, %60, !dbg !3408
  call void @llvm.dbg.value(metadata i32 %sub544, metadata !3183, metadata !DIExpression()), !dbg !3331
  br label %if.end545

if.end545:                                        ; preds = %if.else531, %if.then524
  %fbit2.0 = phi i32 [ %conv527, %if.then524 ], [ 0, %if.else531 ], !dbg !3409
  %ibit2.0 = phi i32 [ %conv530, %if.then524 ], [ %sub544, %if.else531 ], !dbg !3409
  call void @llvm.dbg.value(metadata i32 %ibit2.0, metadata !3183, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i32 %fbit2.0, metadata !3182, metadata !DIExpression()), !dbg !3331
  %cmp546 = icmp ult i32 %ibit1.0, %ibit2.0, !dbg !3410
  %ibit1.0.ibit2.0 = select i1 %cmp546, i32 %ibit2.0, i32 %ibit1.0, !dbg !3411
  call void @llvm.dbg.value(metadata i32 %ibit1.0.ibit2.0, metadata !3185, metadata !DIExpression()), !dbg !3331
  %cmp552 = icmp ult i32 %fbit1.0, %fbit2.0, !dbg !3412
  %cond557 = select i1 %cmp552, i32 %fbit2.0, i32 %fbit1.0, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %cond557, metadata !3184, metadata !DIExpression()), !dbg !3331
  %call558 = tail call %union.tree_node* @c_common_fixed_point_type_for_size(i32 %ibit1.0.ibit2.0, i32 %cond557, i32 %unsignedp.0, i32 %satp.0) #6, !dbg !3414
  br label %cleanup688

if.end569:                                        ; preds = %if.end335
  %type570 = bitcast %union.tree_node* %t1.addr.1 to %struct.tree_type*, !dbg !3415
  %precision571 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type570, i64 0, i32 6, !dbg !3415
  %bf.load572 = load i32, i32* %precision571, align 4, !dbg !3415
  %bf.clear573 = and i32 %bf.load572, 1023, !dbg !3415
  %type574 = bitcast %union.tree_node* %t2.addr.1 to %struct.tree_type*, !dbg !3417
  %precision575 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type574, i64 0, i32 6, !dbg !3417
  %bf.load576 = load i32, i32* %precision575, align 4, !dbg !3417
  %bf.clear577 = and i32 %bf.load576, 1023, !dbg !3417
  %cmp578 = icmp ugt i32 %bf.clear573, %bf.clear577, !dbg !3418
  br i1 %cmp578, label %cleanup688, label %if.else581, !dbg !3419

if.else581:                                       ; preds = %if.end569
  %cmp590 = icmp ugt i32 %bf.clear577, %bf.clear573, !dbg !3420
  br i1 %cmp590, label %cleanup688, label %if.end594, !dbg !3422

if.end594:                                        ; preds = %if.else581
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3423
  %62 = load %union.tree_node*, %union.tree_node** %61, align 8, !dbg !3423
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 16, !dbg !3425
  %cmp597 = icmp eq %union.tree_node* %62, %63, !dbg !3426
  br i1 %cmp597, label %if.then604, label %lor.lhs.false599, !dbg !3427

lor.lhs.false599:                                 ; preds = %if.end594
  %64 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3428
  %65 = load %union.tree_node*, %union.tree_node** %64, align 8, !dbg !3428
  %cmp602 = icmp eq %union.tree_node* %65, %63, !dbg !3429
  br i1 %cmp602, label %if.then604, label %if.end605, !dbg !3430

if.then604:                                       ; preds = %lor.lhs.false599, %if.end594
  br label %cleanup688, !dbg !3431

if.end605:                                        ; preds = %lor.lhs.false599
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !dbg !3432
  %cmp608 = icmp eq %union.tree_node* %62, %66, !dbg !3434
  br i1 %cmp608, label %if.then615, label %lor.lhs.false610, !dbg !3435

lor.lhs.false610:                                 ; preds = %if.end605
  %cmp613 = icmp eq %union.tree_node* %65, %66, !dbg !3436
  br i1 %cmp613, label %if.then615, label %if.end631, !dbg !3437

if.then615:                                       ; preds = %lor.lhs.false610, %if.end605
  %bf.cast62024 = and i64 %bf.load99, 2097152, !dbg !3438
  %tobool621 = icmp eq i64 %bf.cast62024, 0, !dbg !3438
  br i1 %tobool621, label %lor.lhs.false622, label %if.then629, !dbg !3441

lor.lhs.false622:                                 ; preds = %if.then615
  %bf.load624 = load i64, i64* %25, align 8, !dbg !3442
  %bf.cast62725 = and i64 %bf.load624, 2097152, !dbg !3442
  %tobool628 = icmp eq i64 %bf.cast62725, 0, !dbg !3442
  br i1 %tobool628, label %if.else630, label %if.then629, !dbg !3443

if.then629:                                       ; preds = %lor.lhs.false622, %if.then615
  br label %cleanup688, !dbg !3444

if.else630:                                       ; preds = %lor.lhs.false622
  br label %cleanup688, !dbg !3445

if.end631:                                        ; preds = %lor.lhs.false610
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !3446
  %cmp634 = icmp eq %union.tree_node* %62, %67, !dbg !3448
  br i1 %cmp634, label %if.then641, label %lor.lhs.false636, !dbg !3449

lor.lhs.false636:                                 ; preds = %if.end631
  %cmp639 = icmp eq %union.tree_node* %65, %67, !dbg !3450
  br i1 %cmp639, label %if.then641, label %if.end642, !dbg !3451

if.then641:                                       ; preds = %lor.lhs.false636, %if.end631
  br label %cleanup688, !dbg !3452

if.end642:                                        ; preds = %lor.lhs.false636
  %68 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !3453
  %cmp645 = icmp eq %union.tree_node* %62, %68, !dbg !3455
  br i1 %cmp645, label %if.then652, label %lor.lhs.false647, !dbg !3456

lor.lhs.false647:                                 ; preds = %if.end642
  %cmp650 = icmp eq %union.tree_node* %65, %68, !dbg !3457
  br i1 %cmp650, label %if.then652, label %if.end668, !dbg !3458

if.then652:                                       ; preds = %lor.lhs.false647, %if.end642
  %bf.cast65722 = and i64 %bf.load99, 2097152, !dbg !3459
  %tobool658 = icmp eq i64 %bf.cast65722, 0, !dbg !3459
  br i1 %tobool658, label %lor.lhs.false659, label %if.then666, !dbg !3462

lor.lhs.false659:                                 ; preds = %if.then652
  %bf.load661 = load i64, i64* %25, align 8, !dbg !3463
  %bf.cast66423 = and i64 %bf.load661, 2097152, !dbg !3463
  %tobool665 = icmp eq i64 %bf.cast66423, 0, !dbg !3463
  br i1 %tobool665, label %if.else667, label %if.then666, !dbg !3464

if.then666:                                       ; preds = %lor.lhs.false659, %if.then652
  br label %cleanup688, !dbg !3465

if.else667:                                       ; preds = %lor.lhs.false659
  br label %cleanup688, !dbg !3466

if.end668:                                        ; preds = %lor.lhs.false647
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !3467
  %cmp671 = icmp eq %union.tree_node* %62, %69, !dbg !3469
  br i1 %cmp671, label %if.then678, label %lor.lhs.false673, !dbg !3470

lor.lhs.false673:                                 ; preds = %if.end668
  %cmp676 = icmp eq %union.tree_node* %65, %69, !dbg !3471
  br i1 %cmp676, label %if.then678, label %if.end679, !dbg !3472

if.then678:                                       ; preds = %lor.lhs.false673, %if.end668
  br label %cleanup688, !dbg !3473

if.end679:                                        ; preds = %lor.lhs.false673
  %bf.cast68421 = and i64 %bf.load99, 2097152, !dbg !3474
  %tobool685 = icmp eq i64 %bf.cast68421, 0, !dbg !3474
  %t1.addr.1.t2.addr.1 = select i1 %tobool685, %union.tree_node* %t2.addr.1, %union.tree_node* %t1.addr.1, !dbg !3476
  br label %cleanup688, !dbg !3476

cleanup688:                                       ; preds = %if.end679, %if.else581, %if.end569, %if.end286, %if.end279, %if.else275, %land.lhs.true261, %land.lhs.true269, %if.end232, %if.end228, %if.end65, %if.end, %entry, %if.then678, %if.else667, %if.then666, %if.then641, %if.else630, %if.then629, %if.then604, %if.end545, %if.then331, %if.then320, %if.then309, %if.then226, %if.then219, %if.then212
  %retval.1 = phi %union.tree_node* [ %40, %if.then309 ], [ %43, %if.then320 ], [ %44, %if.then331 ], [ %call558, %if.end545 ], [ %63, %if.then604 ], [ %63, %if.then629 ], [ %66, %if.else630 ], [ %67, %if.then641 ], [ %67, %if.then666 ], [ %68, %if.else667 ], [ %69, %if.then678 ], [ %31, %if.then212 ], [ %32, %if.then219 ], [ %33, %if.then226 ], [ %t2, %entry ], [ %t1, %if.end ], [ %t1.addr.1, %if.end65 ], [ %t1.addr.1, %if.end228 ], [ %t2.addr.1, %if.end232 ], [ %call276, %if.else275 ], [ %t1.addr.1, %land.lhs.true261 ], [ %t2.addr.1, %land.lhs.true269 ], [ %t1.addr.1, %if.end279 ], [ %t2.addr.1, %if.end286 ], [ %t1.addr.1, %if.end569 ], [ %t2.addr.1, %if.else581 ], [ %t1.addr.1.t2.addr.1, %if.end679 ], !dbg !3194
  ret %union.tree_node* %retval.1, !dbg !3477
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @comptypes_internal(%union.tree_node* %type1, %union.tree_node* %type2, i8* %enum_and_int_p) unnamed_addr #5 !dbg !3478 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type1, metadata !3482, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %type2, metadata !3483, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !3484, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %type1, metadata !3485, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %type2, metadata !3486, metadata !DIExpression()), !dbg !3501
  %cmp = icmp ne %union.tree_node* %type1, %type2, !dbg !3502
  %tobool = icmp ne %union.tree_node* %type1, null, !dbg !3504
  %or.cond = and i1 %cmp, %tobool, !dbg !3505
  %tobool2 = icmp ne %union.tree_node* %type2, null, !dbg !3506
  %or.cond2 = and i1 %or.cond, %tobool2, !dbg !3505
  br i1 %or.cond2, label %lor.lhs.false3, label %cleanup481, !dbg !3505

lor.lhs.false3:                                   ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3507
  %bf.load = load i64, i64* %0, align 8, !dbg !3507
  %bf.cast10 = and i64 %bf.load, 65535, !dbg !3508
  %cmp4 = icmp eq i64 %bf.cast10, 0, !dbg !3508
  br i1 %cmp4, label %cleanup481, label %lor.lhs.false5, !dbg !3509

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3510
  %bf.load7 = load i64, i64* %1, align 8, !dbg !3510
  %bf.cast911 = and i64 %bf.load7, 65535, !dbg !3511
  %cmp10 = icmp eq i64 %bf.cast911, 0, !dbg !3511
  br i1 %cmp10, label %cleanup481, label %if.end, !dbg !3512

if.end:                                           ; preds = %lor.lhs.false5
  %cmp15 = icmp eq i64 %bf.cast10, 8, !dbg !3513
  br i1 %cmp15, label %land.lhs.true, label %if.end36, !dbg !3515

land.lhs.true:                                    ; preds = %if.end
  %type = bitcast %union.tree_node* %type1 to %struct.tree_type*, !dbg !3516
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !3516
  %bf.load16 = load i32, i32* %no_force_blk_flag, align 4, !dbg !3516
  %bf.clear17 = and i32 %bf.load16, 1024, !dbg !3516
  %tobool18 = icmp eq i32 %bf.clear17, 0, !dbg !3516
  br i1 %tobool18, label %if.end36, label %land.lhs.true19, !dbg !3517

land.lhs.true19:                                  ; preds = %land.lhs.true
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3518
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !3518
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !3518
  %tobool21 = icmp eq %union.tree_node* %3, null, !dbg !3518
  br i1 %tobool21, label %if.end36, label %cond.true, !dbg !3519

cond.true:                                        ; preds = %land.lhs.true19
  %type24 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3518
  %4 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !3518
  %tobool25 = icmp eq %union.tree_node* %4, null, !dbg !3518
  br i1 %tobool25, label %if.end36, label %if.then26, !dbg !3518

if.then26:                                        ; preds = %cond.true
  br i1 false, label %if.then26.if.end36_crit_edge, label %cond.true30, !dbg !3520

if.then26.if.end36_crit_edge:                     ; preds = %if.then26
  br label %if.end36, !dbg !3520

cond.true30:                                      ; preds = %if.then26
  br label %if.end36, !dbg !3520

if.end36:                                         ; preds = %if.then26.if.end36_crit_edge, %cond.true, %land.lhs.true19, %land.lhs.true, %cond.true30, %if.end
  %t1.0 = phi %union.tree_node* [ %type1, %cond.true ], [ %type1, %land.lhs.true ], [ %type1, %if.end ], [ %type1, %land.lhs.true19 ], [ %4, %cond.true30 ], [ undef, %if.then26.if.end36_crit_edge ], !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.0, metadata !3485, metadata !DIExpression()), !dbg !3501
  %cmp41 = icmp eq i64 %bf.cast911, 8, !dbg !3521
  br i1 %cmp41, label %land.lhs.true42, label %if.end72, !dbg !3523

land.lhs.true42:                                  ; preds = %if.end36
  %type43 = bitcast %union.tree_node* %type2 to %struct.tree_type*, !dbg !3524
  %no_force_blk_flag44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i64 0, i32 6, !dbg !3524
  %bf.load45 = load i32, i32* %no_force_blk_flag44, align 4, !dbg !3524
  %bf.clear47 = and i32 %bf.load45, 1024, !dbg !3524
  %tobool48 = icmp eq i32 %bf.clear47, 0, !dbg !3524
  br i1 %tobool48, label %if.end72, label %land.lhs.true49, !dbg !3525

land.lhs.true49:                                  ; preds = %land.lhs.true42
  %values51 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3526
  %5 = bitcast i32* %values51 to %union.tree_node**, !dbg !3526
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3526
  %tobool52 = icmp eq %union.tree_node* %6, null, !dbg !3526
  br i1 %tobool52, label %if.end72, label %cond.true53, !dbg !3527

cond.true53:                                      ; preds = %land.lhs.true49
  %type57 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3526
  %7 = load %union.tree_node*, %union.tree_node** %type57, align 8, !dbg !3526
  %tobool58 = icmp eq %union.tree_node* %7, null, !dbg !3526
  br i1 %tobool58, label %if.end72, label %if.then60, !dbg !3526

if.then60:                                        ; preds = %cond.true53
  br i1 false, label %if.then60.if.end72_crit_edge, label %cond.true64, !dbg !3528

if.then60.if.end72_crit_edge:                     ; preds = %if.then60
  br label %if.end72, !dbg !3528

cond.true64:                                      ; preds = %if.then60
  br label %if.end72, !dbg !3528

if.end72:                                         ; preds = %if.then60.if.end72_crit_edge, %cond.true53, %land.lhs.true49, %land.lhs.true42, %cond.true64, %if.end36
  %t2.0 = phi %union.tree_node* [ %type2, %cond.true53 ], [ %type2, %land.lhs.true42 ], [ %type2, %if.end36 ], [ %type2, %land.lhs.true49 ], [ %7, %cond.true64 ], [ undef, %if.then60.if.end72_crit_edge ], !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.0, metadata !3486, metadata !DIExpression()), !dbg !3501
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3529
  %bf.load74 = load i64, i64* %8, align 8, !dbg !3529
  %bf.cast7614 = and i64 %bf.load74, 65535, !dbg !3531
  %cmp77 = icmp eq i64 %bf.cast7614, 6, !dbg !3531
  br i1 %cmp77, label %land.lhs.true78, label %if.end72.if.else_crit_edge, !dbg !3532

if.end72.if.else_crit_edge:                       ; preds = %if.end72
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3533
  %bf.load103.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3535
  br label %if.else, !dbg !3532

land.lhs.true78:                                  ; preds = %if.end72
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3536
  %bf.load80 = load i64, i64* %9, align 8, !dbg !3536
  %bf.cast8240 = and i64 %bf.load80, 65535, !dbg !3537
  %cmp83 = icmp eq i64 %bf.cast8240, 6, !dbg !3537
  br i1 %cmp83, label %if.else, label %if.then84, !dbg !3538

if.then84:                                        ; preds = %land.lhs.true78
  %type85 = bitcast %union.tree_node* %t1.0 to %struct.tree_type*, !dbg !3539
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type85, i64 0, i32 6, !dbg !3539
  %bf.load86 = load i32, i32* %precision, align 4, !dbg !3539
  %bf.clear87 = and i32 %bf.load86, 1023, !dbg !3539
  %bf.lshr90 = lshr i64 %bf.load74, 21, !dbg !3541
  %10 = trunc i64 %bf.lshr90 to i32, !dbg !3541
  %bf.cast92 = and i32 %10, 1, !dbg !3541
  %call = tail call %union.tree_node* @c_common_type_for_size(i32 %bf.clear87, i32 %bf.cast92) #6, !dbg !3542
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3485, metadata !DIExpression()), !dbg !3501
  %cmp93 = icmp eq i8* %enum_and_int_p, null, !dbg !3543
  br i1 %cmp93, label %if.end134, label %land.lhs.true94, !dbg !3545

land.lhs.true94:                                  ; preds = %if.then84
  %bf.load96 = load i64, i64* %9, align 8, !dbg !3546
  %bf.cast9841 = and i64 %bf.load96, 65535, !dbg !3547
  %cmp99 = icmp eq i64 %bf.cast9841, 19, !dbg !3547
  br i1 %cmp99, label %if.end134, label %if.then100, !dbg !3548

if.then100:                                       ; preds = %land.lhs.true94
  store i8 1, i8* %enum_and_int_p, align 1, !dbg !3549
  br label %if.end134, !dbg !3550

if.else:                                          ; preds = %if.end72.if.else_crit_edge, %land.lhs.true78
  %bf.load119 = phi i64 [ %bf.load103.pre, %if.end72.if.else_crit_edge ], [ %bf.load80, %land.lhs.true78 ], !dbg !3535
  %bf.cast10515 = and i64 %bf.load119, 65535, !dbg !3551
  %cmp106 = icmp eq i64 %bf.cast10515, 6, !dbg !3551
  br i1 %cmp106, label %land.lhs.true107, label %if.end134, !dbg !3552

land.lhs.true107:                                 ; preds = %if.else
  br i1 %cmp77, label %if.end134, label %if.then113, !dbg !3553

if.then113:                                       ; preds = %land.lhs.true107
  %type114 = bitcast %union.tree_node* %t2.0 to %struct.tree_type*, !dbg !3554
  %precision115 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type114, i64 0, i32 6, !dbg !3554
  %bf.load116 = load i32, i32* %precision115, align 4, !dbg !3554
  %bf.clear117 = and i32 %bf.load116, 1023, !dbg !3554
  %bf.lshr120 = lshr i64 %bf.load119, 21, !dbg !3556
  %11 = trunc i64 %bf.lshr120 to i32, !dbg !3556
  %bf.cast122 = and i32 %11, 1, !dbg !3556
  %call123 = tail call %union.tree_node* @c_common_type_for_size(i32 %bf.clear117, i32 %bf.cast122) #6, !dbg !3557
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !3486, metadata !DIExpression()), !dbg !3501
  %cmp124 = icmp eq i8* %enum_and_int_p, null, !dbg !3558
  br i1 %cmp124, label %if.end134, label %land.lhs.true125, !dbg !3560

land.lhs.true125:                                 ; preds = %if.then113
  %bf.load127 = load i64, i64* %8, align 8, !dbg !3561
  %bf.cast12939 = and i64 %bf.load127, 65535, !dbg !3562
  %cmp130 = icmp eq i64 %bf.cast12939, 19, !dbg !3562
  br i1 %cmp130, label %if.end134, label %if.then131, !dbg !3563

if.then131:                                       ; preds = %land.lhs.true125
  store i8 1, i8* %enum_and_int_p, align 1, !dbg !3564
  br label %if.end134, !dbg !3565

if.end134:                                        ; preds = %land.lhs.true94, %if.then84, %land.lhs.true125, %if.then113, %land.lhs.true107, %if.else, %if.then131, %if.then100
  %t2.2 = phi %union.tree_node* [ %t2.0, %if.then100 ], [ %t2.0, %land.lhs.true94 ], [ %t2.0, %if.then84 ], [ %t2.0, %land.lhs.true107 ], [ %t2.0, %if.else ], [ %call123, %if.then131 ], [ %call123, %land.lhs.true125 ], [ %call123, %if.then113 ], !dbg !3501
  %t1.1 = phi %union.tree_node* [ %call, %if.then100 ], [ %call, %land.lhs.true94 ], [ %call, %if.then84 ], [ %t1.0, %land.lhs.true107 ], [ %t1.0, %if.else ], [ %t1.0, %if.then131 ], [ %t1.0, %land.lhs.true125 ], [ %t1.0, %if.then113 ], !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.1, metadata !3485, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.2, metadata !3486, metadata !DIExpression()), !dbg !3501
  %cmp135 = icmp eq %union.tree_node* %t1.1, %t2.2, !dbg !3566
  br i1 %cmp135, label %cleanup481, label %if.end137, !dbg !3568

if.end137:                                        ; preds = %if.end134
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3569
  %bf.load139 = load i64, i64* %12, align 8, !dbg !3569
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3571
  %bf.load143 = load i64, i64* %13, align 8, !dbg !3571
  %14 = xor i64 %bf.load139, %bf.load143, !dbg !3572
  %15 = and i64 %14, 65535, !dbg !3572
  %cmp146 = icmp eq i64 %15, 0, !dbg !3572
  br i1 %cmp146, label %if.end148, label %cleanup481, !dbg !3573

if.end148:                                        ; preds = %if.end137
  %bf.lshr151 = lshr i64 %bf.load139, 20, !dbg !3574
  %16 = trunc i64 %bf.lshr151 to i32, !dbg !3574
  %bf.cast153 = and i32 %16, 1, !dbg !3574
  %17 = lshr i64 %bf.load139, 18, !dbg !3574
  %18 = trunc i64 %17 to i32, !dbg !3574
  %mul159 = and i32 %18, 2, !dbg !3574
  %or = or i32 %bf.cast153, %mul159, !dbg !3574
  %type160 = bitcast %union.tree_node* %t1.1 to %struct.tree_type*, !dbg !3574
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type160, i64 0, i32 6, !dbg !3574
  %bf.load161 = load i32, i32* %restrict_flag, align 4, !dbg !3574
  %19 = lshr i32 %bf.load161, 11, !dbg !3574
  %mul164 = and i32 %19, 4, !dbg !3574
  %or165 = or i32 %or, %mul164, !dbg !3574
  %20 = lshr i64 %bf.load139, 48, !dbg !3574
  %21 = trunc i64 %20 to i32, !dbg !3574
  %shl = and i32 %21, 65280, !dbg !3574
  %or170 = or i32 %or165, %shl, !dbg !3574
  %bf.lshr173 = lshr i64 %bf.load143, 20, !dbg !3576
  %22 = trunc i64 %bf.lshr173 to i32, !dbg !3576
  %bf.cast175 = and i32 %22, 1, !dbg !3576
  %23 = lshr i64 %bf.load143, 18, !dbg !3576
  %24 = trunc i64 %23 to i32, !dbg !3576
  %mul182 = and i32 %24, 2, !dbg !3576
  %or183 = or i32 %bf.cast175, %mul182, !dbg !3576
  %type184 = bitcast %union.tree_node* %t2.2 to %struct.tree_type*, !dbg !3576
  %restrict_flag185 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type184, i64 0, i32 6, !dbg !3576
  %bf.load186 = load i32, i32* %restrict_flag185, align 4, !dbg !3576
  %25 = lshr i32 %bf.load186, 11, !dbg !3576
  %mul189 = and i32 %25, 4, !dbg !3576
  %or190 = or i32 %or183, %mul189, !dbg !3576
  %26 = lshr i64 %bf.load143, 48, !dbg !3576
  %27 = trunc i64 %26 to i32, !dbg !3576
  %shl196 = and i32 %27, 65280, !dbg !3576
  %or197 = or i32 %or190, %shl196, !dbg !3576
  %cmp198 = icmp eq i32 %or170, %or197, !dbg !3577
  br i1 %cmp198, label %if.end200, label %cleanup481, !dbg !3578

if.end200:                                        ; preds = %if.end148
  %bf.cast20422 = and i64 %bf.load139, 65535, !dbg !3579
  %cmp205 = icmp eq i64 %bf.cast20422, 15, !dbg !3579
  br i1 %cmp205, label %if.end212, label %land.lhs.true206, !dbg !3581

land.lhs.true206:                                 ; preds = %if.end200
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3582
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !3582
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.2, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3583
  %31 = load %union.tree_node*, %union.tree_node** %30, align 8, !dbg !3583
  %cmp210 = icmp eq %union.tree_node* %29, %31, !dbg !3584
  br i1 %cmp210, label %cleanup481, label %if.end212, !dbg !3585

if.end212:                                        ; preds = %if.end200, %land.lhs.true206
  %32 = load i32 (%union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 14), align 8, !dbg !3586
  %call213 = tail call i32 %32(%union.tree_node* %t1.1, %union.tree_node* %t2.2) #6, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %call213, metadata !3487, metadata !DIExpression()), !dbg !3501
  %tobool214 = icmp eq i32 %call213, 0, !dbg !3589
  br i1 %tobool214, label %cleanup481, label %if.end216, !dbg !3590

if.end216:                                        ; preds = %if.end212
  call void @llvm.dbg.value(metadata i32 0, metadata !3488, metadata !DIExpression()), !dbg !3501
  %bf.load218 = load i64, i64* %12, align 8, !dbg !3591
  %33 = trunc i64 %bf.load218 to i16, !dbg !3591
  switch i16 %33, label %sw.epilog [
    i16 10, label %sw.bb
    i16 20, label %sw.bb279
    i16 15, label %sw.bb281
    i16 6, label %sw.bb422
    i16 16, label %sw.bb422
    i16 17, label %sw.bb422
    i16 14, label %sw.bb449
  ], !dbg !3592

sw.bb:                                            ; preds = %if.end216
  %bf.cast22436 = and i64 %bf.load218, 65535, !dbg !3593
  %cmp225 = icmp eq i64 %bf.cast22436, 14, !dbg !3593
  br i1 %cmp225, label %cond.true226, label %cond.false228, !dbg !3593

cond.true226:                                     ; preds = %sw.bb
  %call227 = tail call i32 @vector_type_mode(%union.tree_node* %t1.1) #6, !dbg !3593
  br label %cond.end233, !dbg !3593

cond.false228:                                    ; preds = %sw.bb
  %bf.load230 = load i32, i32* %restrict_flag, align 4, !dbg !3593
  %bf.lshr231 = lshr i32 %bf.load230, 16, !dbg !3593
  %bf.clear232 = and i32 %bf.lshr231, 255, !dbg !3593
  br label %cond.end233, !dbg !3593

cond.end233:                                      ; preds = %cond.false228, %cond.true226
  %cond234 = phi i32 [ %call227, %cond.true226 ], [ %bf.clear232, %cond.false228 ], !dbg !3593
  %bf.load236 = load i64, i64* %13, align 8, !dbg !3595
  %bf.cast23837 = and i64 %bf.load236, 65535, !dbg !3595
  %cmp239 = icmp eq i64 %bf.cast23837, 14, !dbg !3595
  br i1 %cmp239, label %cond.true240, label %cond.false242, !dbg !3595

cond.true240:                                     ; preds = %cond.end233
  %call241 = tail call i32 @vector_type_mode(%union.tree_node* %t2.2) #6, !dbg !3595
  br label %cond.end248, !dbg !3595

cond.false242:                                    ; preds = %cond.end233
  %bf.load245 = load i32, i32* %restrict_flag185, align 4, !dbg !3595
  %bf.lshr246 = lshr i32 %bf.load245, 16, !dbg !3595
  %bf.clear247 = and i32 %bf.lshr246, 255, !dbg !3595
  br label %cond.end248, !dbg !3595

cond.end248:                                      ; preds = %cond.false242, %cond.true240
  %cond249 = phi i32 [ %call241, %cond.true240 ], [ %bf.clear247, %cond.false242 ], !dbg !3595
  %cmp250 = icmp eq i32 %cond234, %cond249, !dbg !3596
  br i1 %cmp250, label %lor.lhs.false251, label %sw.epilog, !dbg !3597

lor.lhs.false251:                                 ; preds = %cond.end248
  %bf.load253 = load i64, i64* %12, align 8, !dbg !3598
  %bf.load258 = load i64, i64* %13, align 8, !dbg !3599
  %bf.lshr25442 = xor i64 %bf.load253, %bf.load258, !dbg !3600
  %34 = and i64 %bf.lshr25442, 67108864, !dbg !3600
  %cmp262 = icmp eq i64 %34, 0, !dbg !3600
  br i1 %cmp262, label %if.end264, label %sw.epilog, !dbg !3601

if.end264:                                        ; preds = %lor.lhs.false251
  %type266 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3602
  %35 = load %union.tree_node*, %union.tree_node** %type266, align 8, !dbg !3602
  %type268 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3603
  %36 = load %union.tree_node*, %union.tree_node** %type268, align 8, !dbg !3603
  %cmp269 = icmp eq %union.tree_node* %35, %36, !dbg !3604
  br i1 %cmp269, label %sw.epilog, label %cond.false271, !dbg !3602

cond.false271:                                    ; preds = %if.end264
  %call276 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %35, %union.tree_node* %36, i8* %enum_and_int_p) #7, !dbg !3605
  br label %sw.epilog, !dbg !3602

sw.bb279:                                         ; preds = %if.end216
  %call280 = tail call fastcc i32 @function_types_compatible_p(%union.tree_node* %t1.1, %union.tree_node* %t2.2, i8* %enum_and_int_p) #7, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %call280, metadata !3488, metadata !DIExpression()), !dbg !3501
  br label %sw.epilog, !dbg !3607

sw.bb281:                                         ; preds = %if.end216
  %values283 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3608
  %37 = bitcast i32* %values283 to %union.tree_node**, !dbg !3608
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8, !dbg !3608
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !3489, metadata !DIExpression()), !dbg !3609
  %values285 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3610
  %39 = bitcast i32* %values285 to %union.tree_node**, !dbg !3610
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8, !dbg !3610
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !3492, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.value(metadata i32 1, metadata !3488, metadata !DIExpression()), !dbg !3501
  %type287 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3611
  %41 = load %union.tree_node*, %union.tree_node** %type287, align 8, !dbg !3611
  %type289 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3613
  %42 = load %union.tree_node*, %union.tree_node** %type289, align 8, !dbg !3613
  %cmp290 = icmp eq %union.tree_node* %41, %42, !dbg !3614
  br i1 %cmp290, label %if.end299, label %land.lhs.true291, !dbg !3615

land.lhs.true291:                                 ; preds = %sw.bb281
  %call296 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %41, %union.tree_node* %42, i8* %enum_and_int_p) #7, !dbg !3616
  call void @llvm.dbg.value(metadata i32 %call296, metadata !3488, metadata !DIExpression()), !dbg !3501
  %cmp297 = icmp eq i32 %call296, 0, !dbg !3617
  br i1 %cmp297, label %cleanup, label %if.end299, !dbg !3618

if.end299:                                        ; preds = %sw.bb281, %land.lhs.true291
  %val.0 = phi i32 [ %call296, %land.lhs.true291 ], [ 1, %sw.bb281 ], !dbg !3609
  call void @llvm.dbg.value(metadata i32 %val.0, metadata !3488, metadata !DIExpression()), !dbg !3501
  %cmp300 = icmp eq %union.tree_node* %38, null, !dbg !3619
  %cmp302 = icmp eq %union.tree_node* %40, null, !dbg !3621
  %or.cond3 = or i1 %cmp300, %cmp302, !dbg !3622
  %cmp304 = icmp eq %union.tree_node* %38, %40, !dbg !3623
  %or.cond4 = or i1 %or.cond3, %cmp304, !dbg !3622
  br i1 %or.cond4, label %cleanup, label %if.end306, !dbg !3622

if.end306:                                        ; preds = %if.end299
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3624
  %43 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !3624
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !3624
  %tobool308 = icmp eq %union.tree_node* %44, null, !dbg !3625
  call void @llvm.dbg.value(metadata i1 %tobool308, metadata !3495, metadata !DIExpression()), !dbg !3609
  %maxval310 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3626
  %45 = bitcast %struct.rtx_def** %maxval310 to %union.tree_node**, !dbg !3626
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8, !dbg !3626
  %tobool311 = icmp eq %union.tree_node* %46, null, !dbg !3627
  call void @llvm.dbg.value(metadata i1 %tobool311, metadata !3496, metadata !DIExpression()), !dbg !3609
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3628
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3628
  br i1 %tobool308, label %land.end, label %land.rhs, !dbg !3628

land.rhs:                                         ; preds = %if.end306
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3629
  %49 = bitcast %struct.lang_decl** %minval to i64**, !dbg !3629
  %50 = load i64*, i64** %49, align 8, !dbg !3629
  %bf.load318 = load i64, i64* %50, align 8, !dbg !3629
  %bf.cast32023 = and i64 %bf.load318, 65535, !dbg !3630
  %cmp321 = icmp eq i64 %bf.cast32023, 23, !dbg !3630
  br i1 %cmp321, label %lor.rhs, label %land.end, !dbg !3631

lor.rhs:                                          ; preds = %land.rhs
  %bf.load326 = load i64, i64* %47, align 8, !dbg !3632
  %bf.cast32824 = and i64 %bf.load326, 65535, !dbg !3633
  %cmp329 = icmp ne i64 %bf.cast32824, 23, !dbg !3633
  %phitmp29 = zext i1 %cmp329 to i32, !dbg !3631
  br label %land.end, !dbg !3631

land.end:                                         ; preds = %land.rhs, %lor.rhs, %if.end306
  %51 = phi i32 [ 0, %if.end306 ], [ 1, %land.rhs ], [ %phitmp29, %lor.rhs ]
  br i1 %tobool311, label %land.end352, label %land.rhs333, !dbg !3634

land.rhs333:                                      ; preds = %land.end
  %minval335 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3635
  %52 = bitcast %struct.lang_decl** %minval335 to i64**, !dbg !3635
  %53 = load i64*, i64** %52, align 8, !dbg !3635
  %bf.load337 = load i64, i64* %53, align 8, !dbg !3635
  %bf.cast33926 = and i64 %bf.load337, 65535, !dbg !3636
  %cmp340 = icmp eq i64 %bf.cast33926, 23, !dbg !3636
  br i1 %cmp340, label %lor.rhs342, label %land.end352, !dbg !3637

lor.rhs342:                                       ; preds = %land.rhs333
  %bf.load346 = load i64, i64* %48, align 8, !dbg !3638
  %bf.cast34827 = and i64 %bf.load346, 65535, !dbg !3639
  %cmp349 = icmp ne i64 %bf.cast34827, 23, !dbg !3639
  %phitmp31 = zext i1 %cmp349 to i32, !dbg !3637
  br label %land.end352, !dbg !3637

land.end352:                                      ; preds = %land.rhs333, %lor.rhs342, %land.end
  %54 = phi i32 [ 0, %land.end ], [ 1, %land.rhs333 ], [ %phitmp31, %lor.rhs342 ]
  %tobool356 = icmp eq i32 %51, 0, !dbg !3640
  br i1 %tobool356, label %lor.rhs357, label %lor.end366, !dbg !3641

lor.rhs357:                                       ; preds = %land.end352
  br i1 %tobool308, label %land.rhs360, label %lor.end366, !dbg !3642

land.rhs360:                                      ; preds = %lor.rhs357
  %call361 = tail call zeroext i8 @c_vla_type_p(%union.tree_node* %t1.1) #7, !dbg !3643
  %tobool363 = icmp ne i8 %call361, 0, !dbg !3642
  %phitmp33 = zext i1 %tobool363 to i32
  br label %lor.end366

lor.end366:                                       ; preds = %land.end352, %lor.rhs357, %land.rhs360
  %55 = phi i32 [ 1, %land.end352 ], [ 0, %lor.rhs357 ], [ %phitmp33, %land.rhs360 ]
  %tobool369 = icmp eq i32 %54, 0, !dbg !3644
  br i1 %tobool369, label %lor.rhs370, label %lor.end379, !dbg !3645

lor.rhs370:                                       ; preds = %lor.end366
  br i1 %tobool311, label %land.rhs373, label %lor.end379, !dbg !3646

land.rhs373:                                      ; preds = %lor.rhs370
  %call374 = tail call zeroext i8 @c_vla_type_p(%union.tree_node* %t2.2) #7, !dbg !3647
  %tobool376 = icmp ne i8 %call374, 0, !dbg !3646
  br label %lor.end379

lor.end379:                                       ; preds = %lor.end366, %lor.rhs370, %land.rhs373
  %56 = phi i1 [ true, %lor.end366 ], [ false, %lor.rhs370 ], [ %tobool376, %land.rhs373 ]
  %tobool383 = icmp ne i32 %55, 0, !dbg !3648
  %or.cond5 = or i1 %tobool383, %56, !dbg !3650
  br i1 %or.cond5, label %cleanup, label %if.end388, !dbg !3650

if.end388:                                        ; preds = %lor.end379
  %or.cond6 = and i1 %tobool308, %tobool311, !dbg !3651
  br i1 %or.cond6, label %cleanup, label %if.end395, !dbg !3651

if.end395:                                        ; preds = %if.end388
  %or.cond7 = or i1 %tobool308, %tobool311, !dbg !3653
  br i1 %or.cond7, label %if.then415, label %lor.lhs.false401, !dbg !3653

lor.lhs.false401:                                 ; preds = %if.end395
  %minval403 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3655
  %57 = bitcast %struct.lang_decl** %minval403 to %union.tree_node**, !dbg !3655
  %58 = load %union.tree_node*, %union.tree_node** %57, align 8, !dbg !3655
  %minval405 = getelementptr inbounds %union.tree_node, %union.tree_node* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3656
  %59 = bitcast %struct.lang_decl** %minval405 to %union.tree_node**, !dbg !3656
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8, !dbg !3656
  %call406 = tail call i32 @tree_int_cst_equal(%union.tree_node* %58, %union.tree_node* %60) #6, !dbg !3657
  %tobool407 = icmp eq i32 %call406, 0, !dbg !3657
  br i1 %tobool407, label %if.then415, label %lor.lhs.false408, !dbg !3658

lor.lhs.false408:                                 ; preds = %lor.lhs.false401
  %61 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !3659
  %62 = load %union.tree_node*, %union.tree_node** %45, align 8, !dbg !3660
  %call413 = tail call i32 @tree_int_cst_equal(%union.tree_node* %61, %union.tree_node* %62) #6, !dbg !3661
  %tobool414 = icmp eq i32 %call413, 0, !dbg !3661
  br i1 %tobool414, label %if.then415, label %cleanup, !dbg !3662

if.then415:                                       ; preds = %lor.lhs.false408, %lor.lhs.false401, %if.end395
  call void @llvm.dbg.value(metadata i32 0, metadata !3488, metadata !DIExpression()), !dbg !3501
  br label %cleanup, !dbg !3663

cleanup:                                          ; preds = %lor.lhs.false408, %if.then415, %if.end388, %lor.end379, %if.end299, %land.lhs.true291
  %val.2 = phi i32 [ 0, %land.lhs.true291 ], [ %val.0, %if.end299 ], [ %val.0, %lor.end379 ], [ %val.0, %if.end388 ], [ 0, %if.then415 ], [ %val.0, %lor.lhs.false408 ], !dbg !3609
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true291 ], [ true, %if.end299 ], [ true, %lor.end379 ], [ true, %if.end388 ], [ true, %if.then415 ], [ true, %lor.lhs.false408 ]
  call void @llvm.dbg.value(metadata i32 %val.2, metadata !3488, metadata !DIExpression()), !dbg !3501
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %cleanup481

sw.bb422:                                         ; preds = %if.end216, %if.end216, %if.end216
  %call426 = tail call i32 @same_translation_unit_p(%union.tree_node* %t1.1, %union.tree_node* %t2.2) #7, !dbg !3664
  %tobool427 = icmp eq i32 %call426, 0, !dbg !3664
  br i1 %tobool427, label %if.then428, label %sw.epilog, !dbg !3665

if.then428:                                       ; preds = %sw.bb422
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3666
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8, !dbg !3666
  call void @llvm.dbg.value(metadata %union.tree_node* %64, metadata !3497, metadata !DIExpression()), !dbg !3667
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3668
  %66 = load %union.tree_node*, %union.tree_node** %65, align 8, !dbg !3668
  call void @llvm.dbg.value(metadata %union.tree_node* %66, metadata !3500, metadata !DIExpression()), !dbg !3667
  %call432 = tail call i32 @attribute_list_contained(%union.tree_node* %64, %union.tree_node* %66) #6, !dbg !3669
  %tobool433 = icmp eq i32 %call432, 0, !dbg !3669
  br i1 %tobool433, label %land.lhs.true434, label %if.end438, !dbg !3671

land.lhs.true434:                                 ; preds = %if.then428
  %call435 = tail call i32 @attribute_list_contained(%union.tree_node* %66, %union.tree_node* %64) #6, !dbg !3672
  %tobool436 = icmp eq i32 %call435, 0, !dbg !3672
  br i1 %tobool436, label %cleanup445, label %if.end438, !dbg !3673

if.end438:                                        ; preds = %land.lhs.true434, %if.then428
  %cmp439 = icmp ne i32 %call213, 2, !dbg !3674
  %call442 = tail call fastcc i32 @tagged_types_tu_compatible_p(%union.tree_node* %t1.1, %union.tree_node* %t2.2, i8* %enum_and_int_p) #7, !dbg !3667
  %.call442 = select i1 %cmp439, i32 0, i32 %call442, !dbg !3676
  %. = zext i1 %cmp439 to i32, !dbg !3676
  br label %cleanup445, !dbg !3676

cleanup445:                                       ; preds = %land.lhs.true434, %if.end438
  %val.3 = phi i32 [ 0, %land.lhs.true434 ], [ %.call442, %if.end438 ], !dbg !3501
  %cleanup.dest.slot.1 = phi i32 [ 2, %land.lhs.true434 ], [ %., %if.end438 ]
  %retval.1 = phi i32 [ undef, %land.lhs.true434 ], [ %call442, %if.end438 ]
  call void @llvm.dbg.value(metadata i32 %val.3, metadata !3488, metadata !DIExpression()), !dbg !3501
  switch i32 %cleanup.dest.slot.1, label %cleanup481 [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
  ]

sw.bb449:                                         ; preds = %if.end216
  %bf.load452 = load i32, i32* %restrict_flag, align 4, !dbg !3677
  %bf.clear453 = and i32 %bf.load452, 1023, !dbg !3677
  %sh_prom = zext i32 %bf.clear453 to i64, !dbg !3677
  %shl454 = shl i64 1, %sh_prom, !dbg !3677
  %bf.load457 = load i32, i32* %restrict_flag185, align 4, !dbg !3678
  %bf.clear458 = and i32 %bf.load457, 1023, !dbg !3678
  %sh_prom459 = zext i32 %bf.clear458 to i64, !dbg !3678
  %shl460 = shl i64 1, %sh_prom459, !dbg !3678
  %cmp461 = icmp eq i64 %shl454, %shl460, !dbg !3679
  br i1 %cmp461, label %land.rhs463, label %land.end470, !dbg !3680

land.rhs463:                                      ; preds = %sw.bb449
  %type465 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3681
  %67 = load %union.tree_node*, %union.tree_node** %type465, align 8, !dbg !3681
  %type467 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3682
  %68 = load %union.tree_node*, %union.tree_node** %type467, align 8, !dbg !3682
  %call468 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %67, %union.tree_node* %68, i8* %enum_and_int_p) #7, !dbg !3683
  %tobool469 = icmp ne i32 %call468, 0, !dbg !3680
  %phitmp = zext i1 %tobool469 to i32
  br label %land.end470

land.end470:                                      ; preds = %land.rhs463, %sw.bb449
  %69 = phi i32 [ 0, %sw.bb449 ], [ %phitmp, %land.rhs463 ]
  call void @llvm.dbg.value(metadata i32 %69, metadata !3488, metadata !DIExpression()), !dbg !3501
  br label %sw.epilog, !dbg !3684

sw.epilog:                                        ; preds = %lor.lhs.false251, %cond.end248, %sw.bb422, %if.end216, %cleanup445, %cond.false271, %if.end264, %cleanup, %land.end470, %cleanup445, %sw.bb279
  %val.5 = phi i32 [ %69, %land.end470 ], [ %val.3, %cleanup445 ], [ %val.2, %cleanup ], [ %call280, %sw.bb279 ], [ 0, %lor.lhs.false251 ], [ 0, %cond.end248 ], [ %call276, %cond.false271 ], [ 1, %if.end264 ], [ 0, %sw.bb422 ], [ %val.3, %cleanup445 ], [ 0, %if.end216 ], !dbg !3501
  call void @llvm.dbg.value(metadata i32 %val.5, metadata !3488, metadata !DIExpression()), !dbg !3501
  %cmp472 = icmp eq i32 %call213, 2, !dbg !3685
  %cmp475 = icmp eq i32 %val.5, 1, !dbg !3686
  %or.cond8 = and i1 %cmp472, %cmp475, !dbg !3687
  %cond480 = select i1 %or.cond8, i32 2, i32 %val.5, !dbg !3687
  br label %cleanup481, !dbg !3687

cleanup481:                                       ; preds = %if.end212, %if.end148, %if.end137, %sw.epilog, %land.lhs.true206, %if.end134, %lor.lhs.false3, %lor.lhs.false5, %entry, %cleanup, %cleanup445
  %retval.2 = phi i32 [ %retval.1, %cleanup445 ], [ 0, %cleanup ], [ 1, %entry ], [ 1, %lor.lhs.false5 ], [ 1, %lor.lhs.false3 ], [ 1, %if.end134 ], [ 0, %if.end137 ], [ 0, %if.end148 ], [ 1, %land.lhs.true206 ], [ 0, %if.end212 ], [ %cond480, %sw.epilog ], !dbg !3501
  ret i32 %retval.2, !dbg !3688
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_all_tagged_tu_seen_up_to(%struct.tagged_tu_seen_cache* %tu_til) unnamed_addr #5 !dbg !3689 {
entry:
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %tu_til, metadata !3693, metadata !DIExpression()), !dbg !3698
  %0 = load %struct.tagged_tu_seen_cache*, %struct.tagged_tu_seen_cache** @tagged_tu_seen_base, align 8, !dbg !3699
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %0, metadata !3694, metadata !DIExpression()), !dbg !3698
  br label %while.cond, !dbg !3700

while.cond:                                       ; preds = %while.body, %entry
  %.in = phi %struct.tagged_tu_seen_cache* [ %0, %entry ], [ %2, %while.body ]
  %tu.0 = phi %struct.tagged_tu_seen_cache* [ %0, %entry ], [ %2, %while.body ], !dbg !3698
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %tu.0, metadata !3694, metadata !DIExpression()), !dbg !3698
  %cmp = icmp eq %struct.tagged_tu_seen_cache* %tu.0, %tu_til, !dbg !3701
  br i1 %cmp, label %while.end, label %while.body, !dbg !3700

while.body:                                       ; preds = %while.cond
  %1 = bitcast %struct.tagged_tu_seen_cache* %.in to i8*, !dbg !3698
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %tu.0, metadata !3695, metadata !DIExpression()), !dbg !3702
  %next = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %tu.0, i64 0, i32 0, !dbg !3703
  %2 = load %struct.tagged_tu_seen_cache*, %struct.tagged_tu_seen_cache** %next, align 8, !dbg !3703
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %2, metadata !3694, metadata !DIExpression()), !dbg !3698
  tail call void @free(i8* %1) #6, !dbg !3704
  br label %while.cond, !dbg !3700, !llvm.loop !3705

while.end:                                        ; preds = %while.cond
  store %struct.tagged_tu_seen_cache* %tu_til, %struct.tagged_tu_seen_cache** @tagged_tu_seen_base, align 8, !dbg !3707
  ret void, !dbg !3708
}

; Function Attrs: nounwind uwtable
define dso_local i32 @same_translation_unit_p(%union.tree_node* %t1, %union.tree_node* %t2) local_unnamed_addr #5 !dbg !3709 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !3714, metadata !DIExpression()), !dbg !3715
  br label %while.cond, !dbg !3716

while.cond:                                       ; preds = %sw.epilog, %entry
  %t1.addr.0 = phi %union.tree_node* [ %t1, %entry ], [ %t1.addr.1, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0, metadata !3713, metadata !DIExpression()), !dbg !3715
  %tobool = icmp eq %union.tree_node* %t1.addr.0, null, !dbg !3717
  br i1 %tobool, label %while.end, label %land.rhs, !dbg !3718

land.rhs:                                         ; preds = %while.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3719
  %bf.load = load i64, i64* %0, align 8, !dbg !3719
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3720
  %cmp = icmp eq i64 %bf.cast2, 40, !dbg !3720
  br i1 %cmp, label %while.end, label %while.body, !dbg !3716

while.body:                                       ; preds = %land.rhs
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast2, !dbg !3721
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3721
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb5
    i32 0, label %sw.bb7
  ], !dbg !3722

sw.bb:                                            ; preds = %while.body
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3723
  %2 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !3723
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3713, metadata !DIExpression()), !dbg !3715
  br label %sw.epilog, !dbg !3725

sw.bb5:                                           ; preds = %while.body
  %context6 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3726
  %3 = bitcast i24* %context6 to %union.tree_node**, !dbg !3726
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3726
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3713, metadata !DIExpression()), !dbg !3715
  br label %sw.epilog, !dbg !3727

sw.bb7:                                           ; preds = %while.body
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3728
  %5 = bitcast i40* %supercontext to %union.tree_node**, !dbg !3728
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !3728
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3713, metadata !DIExpression()), !dbg !3715
  br label %sw.epilog, !dbg !3729

sw.default:                                       ; preds = %while.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 1221, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3730
  br label %sw.epilog, !dbg !3731

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb5, %sw.bb
  %t1.addr.1 = phi %union.tree_node* [ %t1.addr.0, %sw.default ], [ %6, %sw.bb7 ], [ %4, %sw.bb5 ], [ %2, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.1, metadata !3713, metadata !DIExpression()), !dbg !3715
  br label %while.cond, !dbg !3716, !llvm.loop !3732

while.end:                                        ; preds = %land.rhs, %while.cond
  %t1.addr.0.lcssa = phi %union.tree_node* [ %t1.addr.0, %land.rhs ], [ %t1.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !3713, metadata !DIExpression()), !dbg !3715
  br label %while.cond8, !dbg !3734

while.cond8:                                      ; preds = %sw.epilog34, %while.end
  %t2.addr.0 = phi %union.tree_node* [ %t2, %while.end ], [ %t2.addr.1, %sw.epilog34 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0, metadata !3714, metadata !DIExpression()), !dbg !3715
  %tobool9 = icmp eq %union.tree_node* %t2.addr.0, null, !dbg !3735
  br i1 %tobool9, label %while.end35, label %land.rhs10, !dbg !3736

land.rhs10:                                       ; preds = %while.cond8
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3737
  %bf.load12 = load i64, i64* %7, align 8, !dbg !3737
  %bf.cast141 = and i64 %bf.load12, 65535, !dbg !3738
  %cmp15 = icmp eq i64 %bf.cast141, 40, !dbg !3738
  br i1 %cmp15, label %while.end35, label %while.body17, !dbg !3734

while.body17:                                     ; preds = %land.rhs10
  %arrayidx23 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast141, !dbg !3739
  %8 = load i32, i32* %arrayidx23, align 4, !dbg !3739
  switch i32 %8, label %sw.default33 [
    i32 3, label %sw.bb24
    i32 2, label %sw.bb27
    i32 0, label %sw.bb30
  ], !dbg !3740

sw.bb24:                                          ; preds = %while.body17
  %context26 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3741
  %9 = load %union.tree_node*, %union.tree_node** %context26, align 8, !dbg !3741
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3714, metadata !DIExpression()), !dbg !3715
  br label %sw.epilog34, !dbg !3743

sw.bb27:                                          ; preds = %while.body17
  %context29 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3744
  %10 = bitcast i24* %context29 to %union.tree_node**, !dbg !3744
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !3744
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3714, metadata !DIExpression()), !dbg !3715
  br label %sw.epilog34, !dbg !3745

sw.bb30:                                          ; preds = %while.body17
  %supercontext32 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3746
  %12 = bitcast i40* %supercontext32 to %union.tree_node**, !dbg !3746
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !3746
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3714, metadata !DIExpression()), !dbg !3715
  br label %sw.epilog34, !dbg !3747

sw.default33:                                     ; preds = %while.body17
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 1233, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3748
  br label %sw.epilog34, !dbg !3749

sw.epilog34:                                      ; preds = %sw.default33, %sw.bb30, %sw.bb27, %sw.bb24
  %t2.addr.1 = phi %union.tree_node* [ %t2.addr.0, %sw.default33 ], [ %13, %sw.bb30 ], [ %11, %sw.bb27 ], [ %9, %sw.bb24 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.1, metadata !3714, metadata !DIExpression()), !dbg !3715
  br label %while.cond8, !dbg !3734, !llvm.loop !3750

while.end35:                                      ; preds = %land.rhs10, %while.cond8
  %t2.addr.0.lcssa = phi %union.tree_node* [ %t2.addr.0, %land.rhs10 ], [ %t2.addr.0, %while.cond8 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !3714, metadata !DIExpression()), !dbg !3715
  %cmp36 = icmp eq %union.tree_node* %t1.addr.0.lcssa, %t2.addr.0.lcssa, !dbg !3752
  %conv = zext i1 %cmp36 to i32, !dbg !3752
  ret i32 %conv, !dbg !3753
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @decl_constant_value(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !3754 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3756, metadata !DIExpression()), !dbg !3757
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3758
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !3760
  br i1 %cmp, label %return, label %land.lhs.true, !dbg !3761

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3762
  %bf.load = load i64, i64* %1, align 8, !dbg !3762
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3763
  %cmp1 = icmp eq i64 %bf.cast1, 34, !dbg !3763
  br i1 %cmp1, label %return, label %land.lhs.true2, !dbg !3764

land.lhs.true2:                                   ; preds = %land.lhs.true
  %bf.cast62 = and i64 %bf.load, 524288, !dbg !3765
  %tobool = icmp eq i64 %bf.cast62, 0, !dbg !3765
  br i1 %tobool, label %land.lhs.true7, label %return, !dbg !3766

land.lhs.true7:                                   ; preds = %land.lhs.true2
  %bf.cast123 = and i64 %bf.load, 1048576, !dbg !3767
  %tobool13 = icmp eq i64 %bf.cast123, 0, !dbg !3767
  br i1 %tobool13, label %return, label %land.lhs.true14, !dbg !3768

land.lhs.true14:                                  ; preds = %land.lhs.true7
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3769
  %2 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3769
  %cmp15 = icmp eq %union.tree_node* %2, null, !dbg !3770
  br i1 %cmp15, label %return, label %land.lhs.true16, !dbg !3771

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3771
  %bf.load20 = load i64, i64* %3, align 8, !dbg !3772
  %bf.cast224 = and i64 %bf.load20, 65535, !dbg !3773
  %cmp23 = icmp eq i64 %bf.cast224, 0, !dbg !3773
  br i1 %cmp23, label %return, label %land.lhs.true24, !dbg !3774

land.lhs.true24:                                  ; preds = %land.lhs.true16
  %bf.cast315 = and i64 %bf.load20, 131072, !dbg !3775
  %tobool32 = icmp eq i64 %bf.cast315, 0, !dbg !3775
  br i1 %tobool32, label %return, label %land.lhs.true33, !dbg !3776

land.lhs.true33:                                  ; preds = %land.lhs.true24
  %cmp40 = icmp eq i64 %bf.cast224, 51, !dbg !3777
  br i1 %cmp40, label %return, label %if.then, !dbg !3778

if.then:                                          ; preds = %land.lhs.true33
  br label %return, !dbg !3779

return:                                           ; preds = %land.lhs.true33, %land.lhs.true24, %land.lhs.true16, %land.lhs.true14, %land.lhs.true7, %land.lhs.true2, %land.lhs.true, %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ %decl, %land.lhs.true33 ], [ %decl, %land.lhs.true24 ], [ %decl, %land.lhs.true16 ], [ %decl, %land.lhs.true14 ], [ %decl, %land.lhs.true7 ], [ %decl, %land.lhs.true2 ], [ %decl, %land.lhs.true ], [ %decl, %entry ], !dbg !3757
  ret %union.tree_node* %retval.0, !dbg !3780
}

; Function Attrs: nounwind uwtable
define dso_local void @default_function_array_conversion(%struct.c_expr* noalias sret %agg.result, i32 %loc, %struct.c_expr* byval(%struct.c_expr) align 8 %exp) local_unnamed_addr #5 !dbg !3781 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !3785, metadata !DIExpression()), !dbg !3794
  call void @llvm.dbg.declare(metadata %struct.c_expr* %exp, metadata !3786, metadata !DIExpression()), !dbg !3795
  %0 = bitcast %struct.c_expr* %exp to i64**, !dbg !3796
  %1 = load i64*, i64** %0, align 8, !dbg !3796
  %type2 = getelementptr inbounds i64, i64* %1, i64 2, !dbg !3797
  %2 = bitcast i64* %type2 to %union.tree_node**, !dbg !3797
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !3797
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3788, metadata !DIExpression()), !dbg !3794
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3798
  %bf.load = load i64, i64* %4, align 8, !dbg !3798
  %5 = trunc i64 %bf.load to i16, !dbg !3798
  switch i16 %5, label %sw.epilog [
    i16 15, label %while.cond.preheader
    i16 20, label %sw.bb61
  ], !dbg !3799

while.cond.preheader:                             ; preds = %entry
  %6 = bitcast i64* %1 to %struct.tree_exp*, !dbg !3799
  %7 = bitcast %struct.c_expr* %exp to i64*, !dbg !3800
  br label %while.cond, !dbg !3802

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %8 = phi i64* [ %18, %while.body ], [ %1, %while.cond.preheader ]
  %9 = phi i64* [ %18, %while.body ], [ %1, %while.cond.preheader ]
  %10 = phi %struct.tree_exp* [ %19, %while.body ], [ %6, %while.cond.preheader ]
  %11 = phi i64* [ %18, %while.body ], [ %1, %while.cond.preheader ]
  %12 = phi i64* [ %18, %while.body ], [ %1, %while.cond.preheader ]
  %13 = phi i64* [ %18, %while.body ], [ %1, %while.cond.preheader ], !dbg !3803
  %not_lvalue.0 = phi i8 [ %spec.select, %while.body ], [ 0, %while.cond.preheader ], !dbg !3804
  call void @llvm.dbg.value(metadata i8 %not_lvalue.0, metadata !3790, metadata !DIExpression()), !dbg !3804
  %bf.load5 = load i64, i64* %13, align 8, !dbg !3803
  %bf.cast71 = and i64 %bf.load5, 65535, !dbg !3805
  %cmp = icmp eq i64 %bf.cast71, 117, !dbg !3805
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !3806

lor.lhs.false:                                    ; preds = %while.cond
  %bf.load10 = load i64, i64* %12, align 8, !dbg !3807
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !3807
  %cmp13 = icmp eq i64 %bf.cast122, 116, !dbg !3807
  br i1 %cmp13, label %land.rhs, label %lor.lhs.false14, !dbg !3807

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %bf.load17 = load i64, i64* %11, align 8, !dbg !3807
  %bf.cast193 = and i64 %bf.load17, 65535, !dbg !3807
  %cmp20 = icmp eq i64 %bf.cast193, 113, !dbg !3807
  br i1 %cmp20, label %land.rhs, label %while.end, !dbg !3808

land.rhs:                                         ; preds = %lor.lhs.false14, %lor.lhs.false, %while.cond
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 0, !dbg !3809
  %14 = bitcast %union.tree_node** %arrayidx to %struct.tree_common**, !dbg !3809
  %15 = load %struct.tree_common*, %struct.tree_common** %14, align 8, !dbg !3809
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !3809
  %16 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !3809
  %cmp25 = icmp eq %union.tree_node* %16, %3, !dbg !3810
  br i1 %cmp25, label %while.body, label %while.end, !dbg !3802

while.body:                                       ; preds = %land.rhs
  %bf.load28 = load i64, i64* %8, align 8, !dbg !3811
  %bf.cast306 = and i64 %bf.load28, 65535, !dbg !3813
  %cmp31 = icmp eq i64 %bf.cast306, 117, !dbg !3813
  %spec.select = select i1 %cmp31, i8 1, i8 %not_lvalue.0, !dbg !3814
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !3790, metadata !DIExpression()), !dbg !3804
  %arrayidx35 = getelementptr inbounds i64, i64* %8, i64 5, !dbg !3815
  %17 = load i64, i64* %arrayidx35, align 8, !dbg !3815
  store i64 %17, i64* %7, align 8, !dbg !3816
  %18 = inttoptr i64 %17 to i64*, !dbg !3802
  %19 = inttoptr i64 %17 to %struct.tree_exp*, !dbg !3802
  br label %while.cond, !dbg !3802, !llvm.loop !3817

while.end:                                        ; preds = %lor.lhs.false14, %land.rhs
  %.lcssa = phi i64* [ %9, %lor.lhs.false14 ], [ %9, %land.rhs ]
  %not_lvalue.0.lcssa = phi i8 [ %not_lvalue.0, %lor.lhs.false14 ], [ %not_lvalue.0, %land.rhs ], !dbg !3804
  call void @llvm.dbg.value(metadata i8 %not_lvalue.0.lcssa, metadata !3790, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8 %not_lvalue.0.lcssa, metadata !3790, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8 %not_lvalue.0.lcssa, metadata !3790, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8 %not_lvalue.0.lcssa, metadata !3790, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8 %not_lvalue.0.lcssa, metadata !3790, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8 %not_lvalue.0.lcssa, metadata !3790, metadata !DIExpression()), !dbg !3804
  %bf.load38 = load i64, i64* %1, align 8, !dbg !3819
  %bf.cast404 = and i64 %bf.load38, 8388608, !dbg !3819
  %tobool = icmp eq i64 %bf.cast404, 0, !dbg !3819
  br i1 %tobool, label %if.end46, label %if.then41, !dbg !3821

if.then41:                                        ; preds = %while.end
  %bf.load44 = load i64, i64* %.lcssa, align 8, !dbg !3822
  %bf.set = or i64 %bf.load44, 8388608, !dbg !3822
  store i64 %bf.set, i64* %.lcssa, align 8, !dbg !3822
  br label %if.end46, !dbg !3823

if.end46:                                         ; preds = %while.end, %if.then41
  %tobool47 = icmp eq i8 %not_lvalue.0.lcssa, 0, !dbg !3824
  br i1 %tobool47, label %land.rhs48, label %land.end51, !dbg !3825

land.rhs48:                                       ; preds = %if.end46
  %value49 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp, i64 0, i32 0, !dbg !3826
  %20 = load %union.tree_node*, %union.tree_node** %value49, align 8, !dbg !3826
  %call = tail call zeroext i8 @lvalue_p(%union.tree_node* %20) #7, !dbg !3827
  %tobool50 = icmp ne i8 %call, 0, !dbg !3825
  br label %land.end51

land.end51:                                       ; preds = %if.end46, %land.rhs48
  %21 = phi i1 [ false, %if.end46 ], [ %tobool50, %land.rhs48 ]
  %22 = load i32, i32* @flag_isoc99, align 4, !dbg !3828
  %tobool53 = icmp ne i32 %22, 0, !dbg !3828
  %or.cond = or i1 %tobool53, %21, !dbg !3830
  br i1 %or.cond, label %if.end56, label %if.then55, !dbg !3830

if.then55:                                        ; preds = %land.end51
  %23 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !3831
  %24 = bitcast %struct.c_expr* %exp to i8*, !dbg !3831
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %24, i64 24, i1 false), !dbg !3831
  br label %cleanup, !dbg !3833

if.end56:                                         ; preds = %land.end51
  %value57 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp, i64 0, i32 0, !dbg !3834
  %25 = load %union.tree_node*, %union.tree_node** %value57, align 8, !dbg !3834
  %call58 = tail call fastcc %union.tree_node* @array_to_pointer_conversion(i32 %loc, %union.tree_node* %25) #7, !dbg !3835
  store %union.tree_node* %call58, %union.tree_node** %value57, align 8, !dbg !3836
  br label %cleanup, !dbg !3837

cleanup:                                          ; preds = %if.end56, %if.then55
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end56 ], [ false, %if.then55 ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %cleanup65

sw.bb61:                                          ; preds = %entry
  %26 = bitcast i64* %1 to %union.tree_node*, !dbg !3799
  %value62 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp, i64 0, i32 0, !dbg !3838
  %call63 = tail call fastcc %union.tree_node* @function_to_pointer_conversion(i32 %loc, %union.tree_node* %26) #7, !dbg !3839
  store %union.tree_node* %call63, %union.tree_node** %value62, align 8, !dbg !3840
  br label %sw.epilog, !dbg !3841

sw.epilog:                                        ; preds = %entry, %cleanup, %sw.bb61
  %27 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !3842
  %28 = bitcast %struct.c_expr* %exp to i8*, !dbg !3842
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !3842
  br label %cleanup65, !dbg !3843

cleanup65:                                        ; preds = %cleanup, %sw.epilog
  ret void, !dbg !3844
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @lvalue_p(%union.tree_node* %ref) local_unnamed_addr #5 !dbg !3845 {
entry:
  br label %tailrecurse, !dbg !3850

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %ref.tr = phi %union.tree_node* [ %ref, %entry ], [ %ref.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr, metadata !3847, metadata !DIExpression()), !dbg !3852
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3853
  %bf.load = load i64, i64* %0, align 8, !dbg !3853
  %1 = trunc i64 %bf.load to i16, !dbg !3853
  switch i16 %1, label %sw.default [
    i16 43, label %sw.bb
    i16 44, label %sw.bb
    i16 41, label %sw.bb
    i16 189, label %sw.bb1
    i16 119, label %cleanup.loopexit
    i16 28, label %cleanup.loopexit
    i16 47, label %sw.bb7
    i16 45, label %sw.bb7
    i16 32, label %sw.bb7
    i16 34, label %sw.bb7
    i16 36, label %sw.bb7
    i16 0, label %sw.bb7
    i16 58, label %sw.bb19
  ], !dbg !3854

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3855
  br label %tailrecurse.backedge, !dbg !3850

tailrecurse.backedge:                             ; preds = %sw.bb, %sw.bb1
  %ref.tr.be.in = phi %union.tree_node** [ %operands, %sw.bb ], [ %arrayidx4, %sw.bb1 ]
  %ref.tr.be = load %union.tree_node*, %union.tree_node** %ref.tr.be.in, align 8, !dbg !3856
  br label %tailrecurse, !dbg !3852

sw.bb1:                                           ; preds = %tailrecurse
  %operands3 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3857
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands3, i64 1, !dbg !3857
  br label %tailrecurse.backedge, !dbg !3858

sw.bb7:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %ref.tr.lcssa11 = phi %union.tree_node* [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ], [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa11, metadata !3847, metadata !DIExpression()), !dbg !3852
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3859
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !3859
  %3 = load i64*, i64** %2, align 8, !dbg !3859
  %bf.load9 = load i64, i64* %3, align 8, !dbg !3859
  %bf.cast112 = and i64 %bf.load9, 65535, !dbg !3860
  %cmp = icmp eq i64 %bf.cast112, 20, !dbg !3860
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !3861

land.rhs:                                         ; preds = %sw.bb7
  %cmp18 = icmp ne i64 %bf.cast112, 21, !dbg !3862
  %phitmp = zext i1 %cmp18 to i8
  br label %land.end

land.end:                                         ; preds = %sw.bb7, %land.rhs
  %4 = phi i8 [ 0, %sw.bb7 ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !3863

sw.bb19:                                          ; preds = %tailrecurse
  %ref.tr.lcssa12 = phi %union.tree_node* [ %ref.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa12, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa12, metadata !3847, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.tr.lcssa12, metadata !3847, metadata !DIExpression()), !dbg !3852
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.tr.lcssa12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3864
  %5 = bitcast %union.tree_node** %type21 to i64**, !dbg !3864
  %6 = load i64*, i64** %5, align 8, !dbg !3864
  %bf.load23 = load i64, i64* %6, align 8, !dbg !3864
  %bf.cast251 = and i64 %bf.load23, 65535, !dbg !3865
  %cmp26 = icmp eq i64 %bf.cast251, 15, !dbg !3865
  %conv28 = zext i1 %cmp26 to i8, !dbg !3864
  br label %cleanup, !dbg !3866

sw.default:                                       ; preds = %tailrecurse
  br label %cleanup, !dbg !3867

cleanup.loopexit:                                 ; preds = %tailrecurse, %tailrecurse
  br label %cleanup, !dbg !3868

cleanup:                                          ; preds = %cleanup.loopexit, %sw.default, %sw.bb19, %land.end
  %retval.0 = phi i8 [ 0, %sw.default ], [ %conv28, %sw.bb19 ], [ %4, %land.end ], [ 1, %cleanup.loopexit ], !dbg !3856
  ret i8 %retval.0, !dbg !3868
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @array_to_pointer_conversion(i32 %loc, %union.tree_node* %exp) unnamed_addr #5 !dbg !3869 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !3873, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3875, metadata !DIExpression()), !dbg !3880
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3881
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3881
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3876, metadata !DIExpression()), !dbg !3880
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3882
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !3882
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3878, metadata !DIExpression()), !dbg !3880
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3883
  %bf.load = load i64, i64* %2, align 8, !dbg !3883
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3883
  %cmp = icmp eq i64 %bf.cast2, 15, !dbg !3883
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3883

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 1737, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3883
  br label %cond.end, !dbg !3883

cond.end:                                         ; preds = %entry, %cond.true
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3880
  br label %while.cond, !dbg !3884

while.cond:                                       ; preds = %while.body, %cond.end
  %exp.addr.0 = phi %union.tree_node* [ %exp, %cond.end ], [ %7, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !3874, metadata !DIExpression()), !dbg !3880
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3884
  %bf.load5 = load i64, i64* %4, align 8, !dbg !3884
  %bf.cast73 = and i64 %bf.load5, 65535, !dbg !3884
  %cmp8 = icmp eq i64 %bf.cast73, 116, !dbg !3884
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false, !dbg !3884

lor.lhs.false:                                    ; preds = %while.cond
  %5 = or i64 %bf.cast73, 4, !dbg !3884
  %6 = icmp eq i64 %5, 117, !dbg !3884
  br i1 %6, label %land.lhs.true, label %while.end, !dbg !3884

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3884
  %7 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3884
  %cmp21 = icmp eq %union.tree_node* %7, %3, !dbg !3884
  br i1 %cmp21, label %while.end, label %land.rhs, !dbg !3884

land.rhs:                                         ; preds = %land.lhs.true
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3884
  %8 = load %union.tree_node*, %union.tree_node** %type23, align 8, !dbg !3884
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3884
  %9 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !3884
  %cmp29 = icmp eq %union.tree_node* %8, %9, !dbg !3884
  br i1 %cmp29, label %while.body, label %while.end, !dbg !3884

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3874, metadata !DIExpression()), !dbg !3880
  br label %while.cond, !dbg !3884, !llvm.loop !3885

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true, %land.rhs
  %exp.addr.0.lcssa = phi %union.tree_node* [ %exp.addr.0, %lor.lhs.false ], [ %exp.addr.0, %land.lhs.true ], [ %exp.addr.0, %land.rhs ]
  %.lcssa = phi i64* [ %4, %lor.lhs.false ], [ %4, %land.lhs.true ], [ %4, %land.rhs ], !dbg !3884
  %bf.load5.lcssa = phi i64 [ %bf.load5, %lor.lhs.false ], [ %bf.load5, %land.lhs.true ], [ %bf.load5, %land.rhs ], !dbg !3884
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3874, metadata !DIExpression()), !dbg !3880
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3886
  %bf.load34 = load i64, i64* %10, align 8, !dbg !3886
  %bf.cast366 = and i64 %bf.load34, 8388608, !dbg !3886
  %tobool = icmp eq i64 %bf.cast366, 0, !dbg !3886
  br i1 %tobool, label %if.end, label %if.then, !dbg !3888

if.then:                                          ; preds = %while.end
  %bf.set = or i64 %bf.load5.lcssa, 8388608, !dbg !3889
  store i64 %bf.set, i64* %.lcssa, align 8, !dbg !3889
  br label %if.end, !dbg !3890

if.end:                                           ; preds = %while.end, %if.then
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %1) #6, !dbg !3891
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3879, metadata !DIExpression()), !dbg !3880
  %bf.load41 = load i64, i64* %.lcssa, align 8, !dbg !3892
  %bf.cast437 = and i64 %bf.load41, 65535, !dbg !3894
  %cmp44 = icmp eq i64 %bf.cast437, 47, !dbg !3894
  br i1 %cmp44, label %if.then45, label %if.end50, !dbg !3895

if.then45:                                        ; preds = %if.end
  %operands47 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3896
  %11 = load %union.tree_node*, %union.tree_node** %operands47, align 8, !dbg !3896
  %call49 = tail call %union.tree_node* @convert(%union.tree_node* %call, %union.tree_node* %11) #6, !dbg !3897
  br label %cleanup, !dbg !3898

if.end50:                                         ; preds = %if.end
  %call51 = tail call %union.tree_node* @build_unary_op(i32 %loc, i32 121, %union.tree_node* %exp.addr.0.lcssa, i32 1) #7, !dbg !3899
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !3877, metadata !DIExpression()), !dbg !3880
  %call52 = tail call %union.tree_node* @convert(%union.tree_node* %call, %union.tree_node* %call51) #6, !dbg !3900
  br label %cleanup, !dbg !3901

cleanup:                                          ; preds = %if.end50, %if.then45
  %retval.0 = phi %union.tree_node* [ %call49, %if.then45 ], [ %call52, %if.end50 ], !dbg !3880
  ret %union.tree_node* %retval.0, !dbg !3902
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @function_to_pointer_conversion(i32 %loc, %union.tree_node* %exp) unnamed_addr #5 !dbg !3903 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !3905, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3907, metadata !DIExpression()), !dbg !3908
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3909
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !3909
  %1 = load i64*, i64** %0, align 8, !dbg !3909
  %bf.load = load i64, i64* %1, align 8, !dbg !3909
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3909
  %cmp = icmp eq i64 %bf.cast2, 20, !dbg !3909
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3909

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 1759, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3909
  br label %cond.end, !dbg !3909

cond.end:                                         ; preds = %entry, %cond.true
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3908
  br label %while.cond, !dbg !3910

while.cond:                                       ; preds = %while.body, %cond.end
  %exp.addr.0 = phi %union.tree_node* [ %exp, %cond.end ], [ %6, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !3906, metadata !DIExpression()), !dbg !3908
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3910
  %bf.load2 = load i64, i64* %3, align 8, !dbg !3910
  %bf.cast43 = and i64 %bf.load2, 65535, !dbg !3910
  %cmp5 = icmp eq i64 %bf.cast43, 116, !dbg !3910
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false, !dbg !3910

lor.lhs.false:                                    ; preds = %while.cond
  %4 = or i64 %bf.cast43, 4, !dbg !3910
  %5 = icmp eq i64 %4, 117, !dbg !3910
  br i1 %5, label %land.lhs.true, label %while.end, !dbg !3910

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3910
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3910
  %cmp18 = icmp eq %union.tree_node* %6, %2, !dbg !3910
  br i1 %cmp18, label %while.end, label %land.rhs, !dbg !3910

land.rhs:                                         ; preds = %land.lhs.true
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3910
  %7 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !3910
  %type25 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3910
  %8 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !3910
  %cmp26 = icmp eq %union.tree_node* %7, %8, !dbg !3910
  br i1 %cmp26, label %while.body, label %while.end, !dbg !3910

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3906, metadata !DIExpression()), !dbg !3908
  br label %while.cond, !dbg !3910, !llvm.loop !3911

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true, %land.rhs
  %exp.addr.0.lcssa = phi %union.tree_node* [ %exp.addr.0, %lor.lhs.false ], [ %exp.addr.0, %land.lhs.true ], [ %exp.addr.0, %land.rhs ]
  %.lcssa = phi i64* [ %3, %lor.lhs.false ], [ %3, %land.lhs.true ], [ %3, %land.rhs ], !dbg !3910
  %bf.load2.lcssa = phi i64 [ %bf.load2, %lor.lhs.false ], [ %bf.load2, %land.lhs.true ], [ %bf.load2, %land.rhs ], !dbg !3910
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !3906, metadata !DIExpression()), !dbg !3908
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3912
  %bf.load31 = load i64, i64* %9, align 8, !dbg !3912
  %bf.cast336 = and i64 %bf.load31, 8388608, !dbg !3912
  %tobool = icmp eq i64 %bf.cast336, 0, !dbg !3912
  br i1 %tobool, label %if.end, label %if.then, !dbg !3914

if.then:                                          ; preds = %while.end
  %bf.set = or i64 %bf.load2.lcssa, 8388608, !dbg !3915
  store i64 %bf.set, i64* %.lcssa, align 8, !dbg !3915
  br label %if.end, !dbg !3916

if.end:                                           ; preds = %while.end, %if.then
  %call = tail call %union.tree_node* @build_unary_op(i32 %loc, i32 121, %union.tree_node* %exp.addr.0.lcssa, i32 0) #7, !dbg !3917
  ret %union.tree_node* %call, !dbg !3918
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @perform_integral_promotions(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !3919 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3921, metadata !DIExpression()), !dbg !3924
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3925
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3925
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3922, metadata !DIExpression()), !dbg !3924
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3926
  %bf.load = load i64, i64* %1, align 8, !dbg !3926
  %bf.cast51 = and i64 %bf.load, 65535, !dbg !3927
  %cmp = icmp eq i64 %bf.cast51, 6, !dbg !3927
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !3927

lor.lhs.false:                                    ; preds = %entry
  %cmp10 = icmp eq i64 %bf.cast51, 7, !dbg !3927
  br i1 %cmp10, label %cond.end, label %lor.lhs.false11, !dbg !3927

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp16 = icmp eq i64 %bf.cast51, 8, !dbg !3927
  br i1 %cmp16, label %cond.end, label %cond.true, !dbg !3927

cond.true:                                        ; preds = %lor.lhs.false11
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 1834, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3927
  br label %cond.end, !dbg !3927

cond.end:                                         ; preds = %entry, %lor.lhs.false, %lor.lhs.false11, %cond.true
  br i1 %cmp, label %if.then, label %if.end, !dbg !3928

if.then:                                          ; preds = %cond.end
  %type18 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !3929
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i64 0, i32 6, !dbg !3929
  %bf.load19 = load i32, i32* %precision, align 4, !dbg !3929
  %bf.clear20 = and i32 %bf.load19, 1023, !dbg !3929
  %2 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !3929
  %precision22 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !3929
  %bf.load23 = load i32, i32* %precision22, align 4, !dbg !3929
  %bf.clear24 = and i32 %bf.load23, 1023, !dbg !3929
  %cmp25 = icmp ugt i32 %bf.clear20, %bf.clear24, !dbg !3929
  br i1 %cmp25, label %cond.true26, label %cond.false31, !dbg !3929

cond.true26:                                      ; preds = %if.then
  br label %cond.end36, !dbg !3929

cond.false31:                                     ; preds = %if.then
  br label %cond.end36, !dbg !3929

cond.end36:                                       ; preds = %cond.false31, %cond.true26
  %cond37.pre-phi = phi i32 [ %bf.clear24, %cond.false31 ], [ %bf.clear20, %cond.true26 ], !dbg !3929
  %cmp46 = icmp ult i32 %bf.clear20, %bf.clear24, !dbg !3932
  br i1 %cmp46, label %land.end, label %land.rhs, !dbg !3933

land.rhs:                                         ; preds = %cond.end36
  %bf.load48 = load i64, i64* %1, align 8, !dbg !3934
  %bf.lshr = lshr i64 %bf.load48, 21, !dbg !3934
  %3 = trunc i64 %bf.lshr to i32, !dbg !3934
  %bf.cast50 = and i32 %3, 1, !dbg !3934
  br label %land.end

land.end:                                         ; preds = %cond.end36, %land.rhs
  %4 = phi i32 [ 0, %cond.end36 ], [ %bf.cast50, %land.rhs ]
  %call = tail call %union.tree_node* @c_common_type_for_size(i32 %cond37.pre-phi, i32 %4) #6, !dbg !3935
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3922, metadata !DIExpression()), !dbg !3924
  %call51 = tail call %union.tree_node* @convert(%union.tree_node* %call, %union.tree_node* %exp) #6, !dbg !3936
  br label %cleanup, !dbg !3937

if.end:                                           ; preds = %cond.end
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3938
  %bf.load53 = load i64, i64* %5, align 8, !dbg !3938
  %bf.cast555 = and i64 %bf.load53, 65535, !dbg !3940
  %cmp56 = icmp eq i64 %bf.cast555, 41, !dbg !3940
  br i1 %cmp56, label %land.lhs.true, label %if.end77, !dbg !3941

land.lhs.true:                                    ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3942
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3942
  %6 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !3942
  %7 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !3942
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %7, i64 0, i32 2, !dbg !3942
  %8 = bitcast i40* %lang_flag_4 to i64*, !dbg !3942
  %bf.load58 = load i64, i64* %8, align 8, !dbg !3942
  %bf.cast617 = and i64 %bf.load58, 524288, !dbg !3942
  %cmp62 = icmp eq i64 %bf.cast617, 0, !dbg !3942
  br i1 %cmp62, label %if.end77, label %land.lhs.true63, !dbg !3943

land.lhs.true63:                                  ; preds = %land.lhs.true
  %size = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %7, i64 0, i32 1, !dbg !3944
  %9 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !3944
  %10 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !3945
  %precision69 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %10, i64 0, i32 6, !dbg !3945
  %bf.load70 = load i32, i32* %precision69, align 4, !dbg !3945
  %bf.clear71 = and i32 %bf.load70, 1023, !dbg !3945
  %conv = zext i32 %bf.clear71 to i64, !dbg !3945
  %call72 = tail call i32 @compare_tree_int(%union.tree_node* %9, i64 %conv) #6, !dbg !3946
  %cmp73 = icmp slt i32 %call72, 0, !dbg !3947
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !3948

if.then75:                                        ; preds = %land.lhs.true63
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !3949
  %call76 = tail call %union.tree_node* @convert(%union.tree_node* %11, %union.tree_node* %exp) #6, !dbg !3950
  br label %cleanup, !dbg !3951

if.end77:                                         ; preds = %land.lhs.true, %land.lhs.true63, %if.end
  %call78 = tail call zeroext i8 @c_promoting_integer_type_p(%union.tree_node* %0) #6, !dbg !3952
  %tobool79 = icmp eq i8 %call78, 0, !dbg !3952
  br i1 %tobool79, label %cleanup, label %if.then80, !dbg !3954

if.then80:                                        ; preds = %if.end77
  %bf.load82 = load i64, i64* %1, align 8, !dbg !3955
  %bf.cast856 = and i64 %bf.load82, 2097152, !dbg !3955
  %tobool86 = icmp eq i64 %bf.cast856, 0, !dbg !3955
  br i1 %tobool86, label %if.then80.if.end100_crit_edge, label %land.lhs.true87, !dbg !3958

if.then80.if.end100_crit_edge:                    ; preds = %if.then80
  %.pre = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !3959
  br label %if.end100, !dbg !3958

land.lhs.true87:                                  ; preds = %if.then80
  %type88 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !3960
  %precision89 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type88, i64 0, i32 6, !dbg !3960
  %bf.load90 = load i32, i32* %precision89, align 4, !dbg !3960
  %12 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !3961
  %precision93 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 6, !dbg !3961
  %bf.load94 = load i32, i32* %precision93, align 4, !dbg !3961
  %13 = xor i32 %bf.load90, %bf.load94, !dbg !3962
  %14 = and i32 %13, 1023, !dbg !3962
  %cmp96 = icmp eq i32 %14, 0, !dbg !3962
  %15 = bitcast %struct.tree_type* %12 to %union.tree_node*, !dbg !3963
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !3963

if.then98:                                        ; preds = %land.lhs.true87
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !3964
  %call99 = tail call %union.tree_node* @convert(%union.tree_node* %16, %union.tree_node* %exp) #6, !dbg !3965
  br label %cleanup, !dbg !3966

if.end100:                                        ; preds = %if.then80.if.end100_crit_edge, %land.lhs.true87
  %17 = phi %union.tree_node* [ %.pre, %if.then80.if.end100_crit_edge ], [ %15, %land.lhs.true87 ], !dbg !3959
  %call101 = tail call %union.tree_node* @convert(%union.tree_node* %17, %union.tree_node* %exp) #6, !dbg !3967
  br label %cleanup, !dbg !3968

cleanup:                                          ; preds = %if.end77, %if.end100, %if.then98, %if.then75, %land.end
  %retval.0 = phi %union.tree_node* [ %call51, %land.end ], [ %call76, %if.then75 ], [ %call99, %if.then98 ], [ %call101, %if.end100 ], [ %exp, %if.end77 ], !dbg !3924
  ret %union.tree_node* %retval.0, !dbg !3969
}

declare dso_local %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @default_conversion(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !3970 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3972, metadata !DIExpression()), !dbg !3977
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3978
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3978
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3974, metadata !DIExpression()), !dbg !3977
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3979
  %bf.load = load i64, i64* %1, align 8, !dbg !3979
  %trunc = trunc i64 %bf.load to i16, !dbg !3980
  switch i16 %trunc, label %if.end [
    i16 20, label %cond.true
    i16 15, label %cleanup
  ], !dbg !3980

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 1886, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3980
  br label %if.end, !dbg !3981

if.end:                                           ; preds = %cond.true, %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3982
  %bf.load4 = load i64, i64* %2, align 8, !dbg !3982
  %bf.cast63 = and i64 %bf.load4, 65535, !dbg !3984
  %cmp7 = icmp eq i64 %bf.cast63, 33, !dbg !3984
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3985

if.then8:                                         ; preds = %if.end
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3986
  %3 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3986
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3972, metadata !DIExpression()), !dbg !3977
  br label %if.end9, !dbg !3987

if.end9:                                          ; preds = %if.then8, %if.end
  %exp.addr.0 = phi %union.tree_node* [ %3, %if.then8 ], [ %exp, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !3973, metadata !DIExpression()), !dbg !3977
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3977
  br label %while.cond, !dbg !3988

while.cond:                                       ; preds = %while.body, %if.end9
  %exp.addr.1 = phi %union.tree_node* [ %exp.addr.0, %if.end9 ], [ %8, %while.body ], !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1, metadata !3972, metadata !DIExpression()), !dbg !3977
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3988
  %bf.load11 = load i64, i64* %5, align 8, !dbg !3988
  %bf.cast134 = and i64 %bf.load11, 65535, !dbg !3988
  %cmp14 = icmp eq i64 %bf.cast134, 116, !dbg !3988
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false, !dbg !3988

lor.lhs.false:                                    ; preds = %while.cond
  %6 = or i64 %bf.cast134, 4, !dbg !3988
  %7 = icmp eq i64 %6, 117, !dbg !3988
  br i1 %7, label %land.lhs.true, label %while.end, !dbg !3988

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3988
  %8 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3988
  %cmp27 = icmp eq %union.tree_node* %8, %4, !dbg !3988
  br i1 %cmp27, label %while.end, label %land.rhs, !dbg !3988

land.rhs:                                         ; preds = %land.lhs.true
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3988
  %9 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !3988
  %type34 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3988
  %10 = load %union.tree_node*, %union.tree_node** %type34, align 8, !dbg !3988
  %cmp35 = icmp eq %union.tree_node* %9, %10, !dbg !3988
  br i1 %cmp35, label %while.body, label %while.end, !dbg !3988

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3972, metadata !DIExpression()), !dbg !3977
  br label %while.cond, !dbg !3988, !llvm.loop !3989

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true, %land.rhs
  %exp.addr.1.lcssa = phi %union.tree_node* [ %exp.addr.1, %lor.lhs.false ], [ %exp.addr.1, %land.lhs.true ], [ %exp.addr.1, %land.rhs ], !dbg !3977
  %.lcssa = phi i64* [ %5, %lor.lhs.false ], [ %5, %land.lhs.true ], [ %5, %land.rhs ], !dbg !3988
  %bf.load11.lcssa = phi i64 [ %bf.load11, %lor.lhs.false ], [ %bf.load11, %land.lhs.true ], [ %bf.load11, %land.rhs ], !dbg !3988
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1.lcssa, metadata !3972, metadata !DIExpression()), !dbg !3977
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3990
  %bf.load40 = load i64, i64* %11, align 8, !dbg !3990
  %bf.cast427 = and i64 %bf.load40, 8388608, !dbg !3990
  %tobool = icmp eq i64 %bf.cast427, 0, !dbg !3990
  br i1 %tobool, label %if.end47, label %if.then43, !dbg !3992

if.then43:                                        ; preds = %while.end
  %bf.set = or i64 %bf.load11.lcssa, 8388608, !dbg !3993
  store i64 %bf.set, i64* %.lcssa, align 8, !dbg !3993
  br label %if.end47, !dbg !3994

if.end47:                                         ; preds = %while.end, %if.then43
  %bf.cast8 = and i64 %bf.load, 65535, !dbg !3995
  %cmp48 = icmp eq i64 %bf.cast8, 19, !dbg !3995
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !3997

if.then49:                                        ; preds = %if.end47
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3998
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4000
  br label %cleanup, !dbg !4001

if.end50:                                         ; preds = %if.end47
  %call = tail call %union.tree_node* @require_complete_type(%union.tree_node* %exp.addr.1.lcssa) #7, !dbg !4002
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3972, metadata !DIExpression()), !dbg !3977
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4003
  %cmp51 = icmp eq %union.tree_node* %call, %13, !dbg !4005
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !4006

if.then52:                                        ; preds = %if.end50
  br label %cleanup, !dbg !4007

if.end53:                                         ; preds = %if.end50
  %14 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 94), align 8, !dbg !4008
  %call54 = tail call %union.tree_node* %14(%union.tree_node* %0) #6, !dbg !4009
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !3976, metadata !DIExpression()), !dbg !3977
  %tobool55 = icmp eq %union.tree_node* %call54, null, !dbg !4010
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !4012

if.then56:                                        ; preds = %if.end53
  %call57 = tail call %union.tree_node* @convert(%union.tree_node* nonnull %call54, %union.tree_node* %call) #6, !dbg !4013
  br label %cleanup, !dbg !4014

if.end58:                                         ; preds = %if.end53
  %bf.load60 = load i64, i64* %1, align 8, !dbg !4015
  %bf.cast629 = and i64 %bf.load60, 65535, !dbg !4015
  %cmp63 = icmp eq i64 %bf.cast629, 6, !dbg !4015
  br i1 %cmp63, label %if.then76, label %lor.lhs.false64, !dbg !4015

lor.lhs.false64:                                  ; preds = %if.end58
  %cmp69 = icmp eq i64 %bf.cast629, 7, !dbg !4015
  br i1 %cmp69, label %if.then76, label %lor.lhs.false70, !dbg !4015

lor.lhs.false70:                                  ; preds = %lor.lhs.false64
  %cmp75 = icmp eq i64 %bf.cast629, 8, !dbg !4015
  br i1 %cmp75, label %if.then76, label %cleanup, !dbg !4017

if.then76:                                        ; preds = %lor.lhs.false70, %lor.lhs.false64, %if.end58
  %call77 = tail call %union.tree_node* @perform_integral_promotions(%union.tree_node* %call) #7, !dbg !4018
  br label %cleanup, !dbg !4019

cleanup:                                          ; preds = %lor.lhs.false70, %entry, %if.then76, %if.then56, %if.then52, %if.then49
  %retval.0 = phi %union.tree_node* [ %12, %if.then49 ], [ %call, %if.then52 ], [ %call57, %if.then56 ], [ %call77, %if.then76 ], [ %exp, %entry ], [ %call, %lor.lhs.false70 ], !dbg !3977
  ret %union.tree_node* %retval.0, !dbg !4020
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_component_ref(i32 %loc, %union.tree_node* %datum, %union.tree_node* %component) local_unnamed_addr #5 !dbg !4021 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4025, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %datum, metadata !4026, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %component, metadata !4027, metadata !DIExpression()), !dbg !4040
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %datum, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4041
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4041
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4028, metadata !DIExpression()), !dbg !4040
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4042
  %bf.load = load i64, i64* %1, align 8, !dbg !4042
  call void @llvm.dbg.value(metadata i32 undef, metadata !4029, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4030, metadata !DIExpression()), !dbg !4040
  %call = tail call zeroext i8 @lvalue_p(%union.tree_node* %datum) #7, !dbg !4043
  call void @llvm.dbg.value(metadata i8 %call, metadata !4032, metadata !DIExpression()), !dbg !4040
  %call2 = tail call i32 @objc_is_public(%union.tree_node* %datum, %union.tree_node* %component) #6, !dbg !4044
  %tobool = icmp eq i32 %call2, 0, !dbg !4044
  br i1 %tobool, label %if.then, label %if.end, !dbg !4046

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4047
  br label %cleanup164, !dbg !4048

if.end:                                           ; preds = %entry
  %3 = trunc i64 %bf.load to i16, !dbg !4042
  switch i16 %3, label %if.then161 [
    i16 16, label %if.then4
    i16 17, label %if.then4
    i16 0, label %if.end163
  ], !dbg !4049

if.then4:                                         ; preds = %if.end, %if.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4050
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4050
  %cmp6 = icmp eq %union.tree_node* %5, null, !dbg !4050
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4052

if.then7:                                         ; preds = %if.then4
  tail call void @c_incomplete_type_error(%union.tree_node* null, %union.tree_node* %0) #7, !dbg !4053
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4055
  br label %cleanup164, !dbg !4056

if.end8:                                          ; preds = %if.then4
  %call9 = tail call fastcc %union.tree_node* @lookup_field(%union.tree_node* %datum, %union.tree_node* %component) #7, !dbg !4057
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !4030, metadata !DIExpression()), !dbg !4040
  %tobool10 = icmp eq %union.tree_node* %call9, null, !dbg !4058
  br i1 %tobool10, label %if.then11, label %do.body.preheader, !dbg !4060

do.body.preheader:                                ; preds = %if.end8
  %tobool18 = icmp eq i8 %call, 0, !dbg !4061
  br label %do.body, !dbg !4062

if.then11:                                        ; preds = %if.end8
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), %union.tree_node* %0, %union.tree_node* %component) #6, !dbg !4063
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4065
  br label %cleanup164, !dbg !4066

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %field.0 = phi %union.tree_node* [ %field.1, %do.cond ], [ %call9, %do.body.preheader ], !dbg !4067
  %ref.0 = phi %union.tree_node* [ %ref.1, %do.cond ], [ undef, %do.body.preheader ]
  %datum.addr.0 = phi %union.tree_node* [ %datum.addr.1, %do.cond ], [ %datum, %do.body.preheader ]
  %retval.0 = phi %union.tree_node* [ %retval.1, %do.cond ], [ undef, %do.body.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %datum.addr.0, metadata !4026, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.0, metadata !4031, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !4030, metadata !DIExpression()), !dbg !4040
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4068
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !4068
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4033, metadata !DIExpression()), !dbg !4061
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4069
  %10 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !4069
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4071
  %cmp15 = icmp eq %union.tree_node* %10, %11, !dbg !4072
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4073
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !4073

if.then16:                                        ; preds = %do.body
  br label %cleanup, !dbg !4074

if.end17:                                         ; preds = %do.body
  br i1 %tobool18, label %lor.rhs, label %lor.end, !dbg !4075

lor.rhs:                                          ; preds = %if.end17
  %bf.load22 = load i64, i64* %12, align 8, !dbg !4076
  %bf.cast241 = and i64 %bf.load22, 65535, !dbg !4077
  %cmp25 = icmp ne i64 %bf.cast241, 15, !dbg !4077
  br label %lor.end, !dbg !4075

lor.end:                                          ; preds = %if.end17, %lor.rhs
  %13 = phi i1 [ true, %if.end17 ], [ %cmp25, %lor.rhs ]
  call void @llvm.dbg.value(metadata i1 %13, metadata !4039, metadata !DIExpression()), !dbg !4061
  %call30 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %10) #6, !dbg !4078
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4078
  %bf.load32 = load i64, i64* %14, align 8, !dbg !4078
  %bf.lshr = lshr i64 %bf.load32, 20, !dbg !4078
  %15 = trunc i64 %bf.lshr to i32, !dbg !4078
  %bf.cast34 = and i32 %15, 1, !dbg !4078
  %16 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !4078
  %call37 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %16) #6, !dbg !4078
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4078
  %bf.load39 = load i64, i64* %17, align 8, !dbg !4078
  %18 = lshr i64 %bf.load39, 18, !dbg !4078
  %19 = trunc i64 %18 to i32, !dbg !4078
  %mul43 = and i32 %19, 2, !dbg !4078
  %or = or i32 %bf.cast34, %mul43, !dbg !4078
  %20 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !4078
  %call46 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %20) #6, !dbg !4078
  %type47 = bitcast %union.tree_node* %call46 to %struct.tree_type*, !dbg !4078
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type47, i64 0, i32 6, !dbg !4078
  %bf.load48 = load i32, i32* %restrict_flag, align 4, !dbg !4078
  %21 = lshr i32 %bf.load48, 11, !dbg !4078
  %mul51 = and i32 %21, 4, !dbg !4078
  %or52 = or i32 %or, %mul51, !dbg !4078
  %22 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !4078
  %call55 = tail call %union.tree_node* @strip_array_types(%union.tree_node* %22) #6, !dbg !4078
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4078
  %bf.load57 = load i64, i64* %23, align 8, !dbg !4078
  %24 = lshr i64 %bf.load57, 48, !dbg !4078
  %25 = trunc i64 %24 to i32, !dbg !4078
  %shl = and i32 %25, 65280, !dbg !4078
  %or60 = or i32 %or52, %shl, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %or60, metadata !4037, metadata !DIExpression()), !dbg !4061
  br i1 %13, label %if.then62, label %if.end99, !dbg !4079

if.then62:                                        ; preds = %lor.end
  %type64 = getelementptr inbounds %union.tree_node, %union.tree_node* %datum.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4080
  %26 = bitcast %union.tree_node** %type64 to i64**, !dbg !4080
  %27 = load i64*, i64** %26, align 8, !dbg !4080
  %bf.load66 = load i64, i64* %27, align 8, !dbg !4080
  %bf.lshr67 = lshr i64 %bf.load66, 20, !dbg !4080
  %28 = trunc i64 %bf.lshr67 to i32, !dbg !4080
  %bf.cast69 = and i32 %28, 1, !dbg !4080
  %29 = lshr i64 %bf.load66, 18, !dbg !4080
  %30 = trunc i64 %29 to i32, !dbg !4080
  %mul78 = and i32 %30, 2, !dbg !4080
  %or79 = or i32 %bf.cast69, %mul78, !dbg !4080
  %31 = bitcast i64* %27 to %struct.tree_type*, !dbg !4080
  %restrict_flag83 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %31, i64 0, i32 6, !dbg !4080
  %bf.load84 = load i32, i32* %restrict_flag83, align 4, !dbg !4080
  %32 = lshr i32 %bf.load84, 11, !dbg !4080
  %mul87 = and i32 %32, 4, !dbg !4080
  %or88 = or i32 %or79, %mul87, !dbg !4080
  %33 = lshr i64 %bf.load66, 48, !dbg !4080
  %34 = trunc i64 %33 to i32, !dbg !4080
  %shl96 = and i32 %34, 65280, !dbg !4080
  %or97 = or i32 %or88, %shl96, !dbg !4080
  %or98 = or i32 %or60, %or97, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %or98, metadata !4037, metadata !DIExpression()), !dbg !4061
  br label %if.end99, !dbg !4083

if.end99:                                         ; preds = %if.then62, %lor.end
  %quals.0 = phi i32 [ %or98, %if.then62 ], [ %or60, %lor.end ], !dbg !4061
  call void @llvm.dbg.value(metadata i32 %quals.0, metadata !4037, metadata !DIExpression()), !dbg !4061
  %35 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !4084
  %call102 = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %35, i32 %quals.0) #7, !dbg !4085
  call void @llvm.dbg.value(metadata %union.tree_node* %call102, metadata !4038, metadata !DIExpression()), !dbg !4061
  %call103 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %call102, %union.tree_node* %datum.addr.0, %union.tree_node* %9, %union.tree_node* null) #6, !dbg !4086
  call void @llvm.dbg.value(metadata %union.tree_node* %call103, metadata !4031, metadata !DIExpression()), !dbg !4040
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %call103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4087
  store i32 %loc, i32* %36, align 8, !dbg !4087
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4088
  %bf.load105 = load i64, i64* %37, align 8, !dbg !4088
  %bf.cast1085 = and i64 %bf.load105, 1048576, !dbg !4088
  %tobool109 = icmp eq i64 %bf.cast1085, 0, !dbg !4088
  br i1 %tobool109, label %lor.lhs.false110, label %if.then119, !dbg !4090

lor.lhs.false110:                                 ; preds = %if.end99
  br i1 %13, label %land.lhs.true, label %if.end123, !dbg !4091

land.lhs.true:                                    ; preds = %lor.lhs.false110
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %datum.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4092
  %bf.load114 = load i64, i64* %38, align 8, !dbg !4092
  %bf.cast1179 = and i64 %bf.load114, 1048576, !dbg !4092
  %tobool118 = icmp eq i64 %bf.cast1179, 0, !dbg !4092
  br i1 %tobool118, label %if.end123, label %if.then119, !dbg !4093

if.then119:                                       ; preds = %land.lhs.true, %if.end99
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4094
  %bf.load121 = load i64, i64* %39, align 8, !dbg !4095
  %bf.set = or i64 %bf.load121, 1048576, !dbg !4095
  store i64 %bf.set, i64* %39, align 8, !dbg !4095
  %bf.load125.pre = load i64, i64* %37, align 8, !dbg !4096
  br label %if.end123, !dbg !4094

if.end123:                                        ; preds = %land.lhs.true, %if.then119, %lor.lhs.false110
  %bf.load125 = phi i64 [ %bf.load105, %land.lhs.true ], [ %bf.load125.pre, %if.then119 ], [ %bf.load105, %lor.lhs.false110 ], !dbg !4096
  %bf.cast1286 = and i64 %bf.load125, 524288, !dbg !4096
  %tobool129 = icmp eq i64 %bf.cast1286, 0, !dbg !4096
  br i1 %tobool129, label %lor.lhs.false130, label %if.then140, !dbg !4098

lor.lhs.false130:                                 ; preds = %if.end123
  br i1 %13, label %land.lhs.true133, label %if.end145, !dbg !4099

land.lhs.true133:                                 ; preds = %lor.lhs.false130
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %datum.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4100
  %bf.load135 = load i64, i64* %40, align 8, !dbg !4100
  %bf.cast1388 = and i64 %bf.load135, 524288, !dbg !4100
  %tobool139 = icmp eq i64 %bf.cast1388, 0, !dbg !4100
  br i1 %tobool139, label %if.end145, label %if.then140, !dbg !4101

if.then140:                                       ; preds = %land.lhs.true133, %if.end123
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4102
  %bf.load142 = load i64, i64* %41, align 8, !dbg !4103
  %bf.set144 = or i64 %bf.load142, 524288, !dbg !4103
  store i64 %bf.set144, i64* %41, align 8, !dbg !4103
  %bf.load147.pre = load i64, i64* %37, align 8, !dbg !4104
  br label %if.end145, !dbg !4102

if.end145:                                        ; preds = %land.lhs.true133, %if.then140, %lor.lhs.false130
  %bf.load147 = phi i64 [ %bf.load125, %land.lhs.true133 ], [ %bf.load147.pre, %if.then140 ], [ %bf.load125, %lor.lhs.false130 ], !dbg !4104
  %bf.cast1507 = and i64 %bf.load147, 1073741824, !dbg !4104
  %tobool151 = icmp eq i64 %bf.cast1507, 0, !dbg !4104
  br i1 %tobool151, label %if.end153, label %if.then152, !dbg !4106

if.then152:                                       ; preds = %if.end145
  tail call void @warn_deprecated_use(%union.tree_node* %9, %union.tree_node* null) #6, !dbg !4107
  br label %if.end153, !dbg !4107

if.end153:                                        ; preds = %if.end145, %if.then152
  call void @llvm.dbg.value(metadata %union.tree_node* %call103, metadata !4026, metadata !DIExpression()), !dbg !4040
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4108
  %42 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4108
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !4030, metadata !DIExpression()), !dbg !4040
  br label %cleanup, !dbg !4109

cleanup:                                          ; preds = %if.end153, %if.then16
  %field.1 = phi %union.tree_node* [ %field.0, %if.then16 ], [ %42, %if.end153 ], !dbg !4110
  %ref.1 = phi %union.tree_node* [ %ref.0, %if.then16 ], [ %call103, %if.end153 ]
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then16 ], [ true, %if.end153 ]
  %datum.addr.1 = phi %union.tree_node* [ %datum.addr.0, %if.then16 ], [ %call103, %if.end153 ]
  %retval.1 = phi %union.tree_node* [ %10, %if.then16 ], [ %retval.0, %if.end153 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %datum.addr.1, metadata !4026, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.1, metadata !4031, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1, metadata !4030, metadata !DIExpression()), !dbg !4040
  br i1 %cleanup.dest.slot.0, label %do.cond, label %cleanup164.loopexit

do.cond:                                          ; preds = %cleanup
  %tobool158 = icmp eq %union.tree_node* %field.1, null, !dbg !4111
  br i1 %tobool158, label %cleanup164.loopexit, label %do.body, !dbg !4111, !llvm.loop !4112

if.then161:                                       ; preds = %if.end
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.14, i64 0, i64 0), %union.tree_node* %component) #6, !dbg !4114
  br label %if.end163, !dbg !4114

if.end163:                                        ; preds = %if.then161, %if.end
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4116
  br label %cleanup164, !dbg !4117

cleanup164.loopexit:                              ; preds = %cleanup, %do.cond
  %retval.2.ph = phi %union.tree_node* [ %ref.1, %do.cond ], [ %retval.1, %cleanup ]
  br label %cleanup164, !dbg !4118

cleanup164:                                       ; preds = %cleanup164.loopexit, %if.end163, %if.then11, %if.then7, %if.then
  %retval.2 = phi %union.tree_node* [ %7, %if.then11 ], [ %6, %if.then7 ], [ %43, %if.end163 ], [ %2, %if.then ], [ %retval.2.ph, %cleanup164.loopexit ], !dbg !4040
  ret %union.tree_node* %retval.2, !dbg !4118
}

declare dso_local i32 @objc_is_public(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lookup_field(%union.tree_node* %decl, %union.tree_node* %component) unnamed_addr #5 !dbg !4119 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4121, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %union.tree_node* %component, metadata !4122, metadata !DIExpression()), !dbg !4145
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4146
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4146
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4123, metadata !DIExpression()), !dbg !4145
  %lang_specific = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2, !dbg !4147
  %1 = bitcast %union.tree_node** %lang_specific to %struct.lang_type**, !dbg !4147
  %2 = load %struct.lang_type*, %struct.lang_type** %1, align 8, !dbg !4147
  %tobool = icmp eq %struct.lang_type* %2, null, !dbg !4147
  br i1 %tobool, label %if.else80, label %land.lhs.true, !dbg !4148

land.lhs.true:                                    ; preds = %entry
  %s = getelementptr inbounds %struct.lang_type, %struct.lang_type* %2, i64 0, i32 0, !dbg !4149
  %3 = load %struct.sorted_fields_type*, %struct.sorted_fields_type** %s, align 8, !dbg !4149
  %tobool5 = icmp eq %struct.sorted_fields_type* %3, null, !dbg !4150
  br i1 %tobool5, label %if.else80, label %if.then, !dbg !4151

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.sorted_fields_type* %3, metadata !4130, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !4152
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4153
  %4 = bitcast i32* %values to %union.tree_node**, !dbg !4153
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4153
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 0, metadata !4125, metadata !DIExpression()), !dbg !4152
  %len = getelementptr inbounds %struct.sorted_fields_type, %struct.sorted_fields_type* %3, i64 0, i32 0, !dbg !4154
  %6 = load i32, i32* %len, align 8, !dbg !4154
  call void @llvm.dbg.value(metadata i32 %6, metadata !4128, metadata !DIExpression()), !dbg !4152
  br label %while.cond.outer, !dbg !4155

while.cond.outer:                                 ; preds = %if.end50, %if.then
  %field.0.ph = phi %union.tree_node* [ %.lcssa71, %if.end50 ], [ %5, %if.then ]
  %bot.0.ph = phi i32 [ %add55.bot.0, %if.end50 ], [ 0, %if.then ]
  %top.0.ph = phi i32 [ %top.0.add55, %if.end50 ], [ %6, %if.then ]
  %retval.0.ph = phi %union.tree_node* [ %retval.0.lcssa58, %if.end50 ], [ undef, %if.then ]
  br label %while.cond, !dbg !4155

while.cond:                                       ; preds = %while.cond.outer, %while.end
  %field.0 = phi %union.tree_node* [ %field.1.lcssa, %while.end ], [ %field.0.ph, %while.cond.outer ], !dbg !4152
  %bot.0 = phi i32 [ %17, %while.end ], [ %bot.0.ph, %while.cond.outer ], !dbg !4152
  %retval.0 = phi %union.tree_node* [ %retval.1.lcssa, %while.end ], [ %retval.0.ph, %while.cond.outer ]
  call void @llvm.dbg.value(metadata i32 %top.0.ph, metadata !4128, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %bot.0, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !4124, metadata !DIExpression()), !dbg !4145
  %sub = sub nsw i32 %top.0.ph, %bot.0, !dbg !4156
  %cmp = icmp sgt i32 %sub, 1, !dbg !4157
  br i1 %cmp, label %while.body, label %while.end58.loopexit, !dbg !4155

while.body:                                       ; preds = %while.cond
  %add = add nsw i32 %sub, 1, !dbg !4158
  %shr = ashr i32 %add, 1, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %shr, metadata !4129, metadata !DIExpression()), !dbg !4152
  %add14 = add nsw i32 %bot.0, %shr, !dbg !4160
  %idxprom = sext i32 %add14 to i64, !dbg !4161
  %arrayidx15 = getelementptr inbounds %struct.sorted_fields_type, %struct.sorted_fields_type* %3, i64 0, i32 1, i64 %idxprom, !dbg !4161
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx15, align 8, !dbg !4161
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4124, metadata !DIExpression()), !dbg !4145
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4162
  %8 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4162
  %cmp16 = icmp eq %union.tree_node* %8, null, !dbg !4163
  br i1 %cmp16, label %while.cond18.preheader, label %if.end45, !dbg !4164

while.cond18.preheader:                           ; preds = %while.body
  %9 = sext i32 %bot.0 to i64, !dbg !4165
  br label %while.cond18, !dbg !4165

while.cond18:                                     ; preds = %while.cond18.preheader, %if.end41
  %indvars.iv = phi i64 [ %9, %while.cond18.preheader ], [ %indvars.iv.next, %if.end41 ], !dbg !4166
  %field.1 = phi %union.tree_node* [ %7, %while.cond18.preheader ], [ %13, %if.end41 ], !dbg !4166
  %retval.1 = phi %union.tree_node* [ %retval.0, %while.cond18.preheader ], [ %retval.3, %if.end41 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1, metadata !4124, metadata !DIExpression()), !dbg !4145
  %arrayidx20 = getelementptr inbounds %struct.sorted_fields_type, %struct.sorted_fields_type* %3, i64 0, i32 1, i64 %indvars.iv, !dbg !4167
  %10 = bitcast %union.tree_node** %arrayidx20 to %struct.tree_decl_minimal**, !dbg !4167
  %11 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %10, align 8, !dbg !4167
  %name22 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %11, i64 0, i32 3, !dbg !4167
  %12 = load %union.tree_node*, %union.tree_node** %name22, align 8, !dbg !4167
  %cmp23 = icmp eq %union.tree_node* %12, null, !dbg !4168
  %13 = bitcast %struct.tree_decl_minimal* %11 to %union.tree_node*, !dbg !4165
  br i1 %cmp23, label %while.body24, label %while.end, !dbg !4165

while.body24:                                     ; preds = %while.cond18
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !4169
  call void @llvm.dbg.value(metadata i32 undef, metadata !4125, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !4124, metadata !DIExpression()), !dbg !4145
  %14 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %11, i64 0, i32 0, i32 2, !dbg !4170
  %15 = bitcast %union.tree_node** %14 to i64**, !dbg !4170
  %16 = load i64*, i64** %15, align 8, !dbg !4170
  %bf.load = load i64, i64* %16, align 8, !dbg !4170
  %bf.cast6 = and i64 %bf.load, 65535, !dbg !4171
  %cmp29 = icmp eq i64 %bf.cast6, 16, !dbg !4171
  br i1 %cmp29, label %if.then37, label %lor.lhs.false, !dbg !4172

lor.lhs.false:                                    ; preds = %while.body24
  %cmp36 = icmp eq i64 %bf.cast6, 17, !dbg !4173
  br i1 %cmp36, label %if.then37, label %if.end41, !dbg !4174

if.then37:                                        ; preds = %lor.lhs.false, %while.body24
  %call = tail call fastcc %union.tree_node* @lookup_field(%union.tree_node* %13, %union.tree_node* %component) #7, !dbg !4175
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4131, metadata !DIExpression()), !dbg !4176
  %tobool38 = icmp eq %union.tree_node* %call, null, !dbg !4177
  br i1 %tobool38, label %cleanup, label %if.then39, !dbg !4179

if.then39:                                        ; preds = %if.then37
  %call40 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %13, %union.tree_node* nonnull %call) #6, !dbg !4180
  br label %cleanup, !dbg !4181

cleanup:                                          ; preds = %if.then37, %if.then39
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then39 ], [ 0, %if.then37 ]
  %retval.2 = phi %union.tree_node* [ %call40, %if.then39 ], [ %retval.1, %if.then37 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end41, label %cleanup74.loopexit

if.end41:                                         ; preds = %cleanup, %lor.lhs.false
  %retval.3 = phi %union.tree_node* [ %retval.1, %lor.lhs.false ], [ %retval.2, %cleanup ]
  br label %while.cond18, !dbg !4165, !llvm.loop !4182

while.end:                                        ; preds = %while.cond18
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %while.cond18 ], !dbg !4166
  %field.1.lcssa = phi %union.tree_node* [ %field.1, %while.cond18 ], !dbg !4166
  %retval.1.lcssa = phi %union.tree_node* [ %retval.1, %while.cond18 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  %17 = trunc i64 %indvars.iv.lcssa to i32, !dbg !4145
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %17, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %17, metadata !4125, metadata !DIExpression()), !dbg !4152
  %cmp42 = icmp slt i32 %top.0.ph, %17, !dbg !4184
  br i1 %cmp42, label %cleanup74.loopexit8, label %while.cond, !dbg !4186, !llvm.loop !4187

if.end45:                                         ; preds = %while.body
  %add14.lcssa = phi i32 [ %add14, %while.body ], !dbg !4160
  %.lcssa71 = phi %union.tree_node* [ %7, %while.body ], !dbg !4161
  %.lcssa = phi %union.tree_node* [ %8, %while.body ], !dbg !4162
  %bot.0.lcssa62 = phi i32 [ %bot.0, %while.body ], !dbg !4152
  %retval.0.lcssa58 = phi %union.tree_node* [ %retval.0, %while.body ]
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa62, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa62, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa62, metadata !4125, metadata !DIExpression()), !dbg !4152
  %cmp48 = icmp eq %union.tree_node* %.lcssa, %component, !dbg !4189
  br i1 %cmp48, label %while.end58.loopexit9, label %if.end50, !dbg !4191

if.end50:                                         ; preds = %if.end45
  %cmp53 = icmp ult %union.tree_node* %.lcssa, %component, !dbg !4192
  %add55.bot.0 = select i1 %cmp53, i32 %add14.lcssa, i32 %bot.0.lcssa62
  %top.0.add55 = select i1 %cmp53, i32 %top.0.ph, i32 %add14.lcssa
  call void @llvm.dbg.value(metadata i32 %top.0.add55, metadata !4128, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %add55.bot.0, metadata !4125, metadata !DIExpression()), !dbg !4152
  br label %while.cond.outer, !dbg !4155, !llvm.loop !4187

while.end58.loopexit:                             ; preds = %while.cond
  %field.0.lcssa = phi %union.tree_node* [ %field.0, %while.cond ], !dbg !4152
  %bot.0.lcssa = phi i32 [ %bot.0, %while.cond ], !dbg !4152
  %retval.0.lcssa = phi %union.tree_node* [ %retval.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa, metadata !4125, metadata !DIExpression()), !dbg !4152
  br label %while.end58, !dbg !4194

while.end58.loopexit9:                            ; preds = %if.end45
  %.lcssa71.lcssa = phi %union.tree_node* [ %.lcssa71, %if.end45 ], !dbg !4161
  %bot.0.lcssa62.lcssa = phi i32 [ %bot.0.lcssa62, %if.end45 ], !dbg !4152
  %retval.0.lcssa58.lcssa = phi %union.tree_node* [ %retval.0.lcssa58, %if.end45 ]
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa62.lcssa, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa62.lcssa, metadata !4125, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %bot.0.lcssa62.lcssa, metadata !4125, metadata !DIExpression()), !dbg !4152
  br label %while.end58, !dbg !4194

while.end58:                                      ; preds = %while.end58.loopexit9, %while.end58.loopexit
  %bot.065 = phi i32 [ %bot.0.lcssa, %while.end58.loopexit ], [ %bot.0.lcssa62.lcssa, %while.end58.loopexit9 ]
  %retval.061 = phi %union.tree_node* [ %retval.0.lcssa, %while.end58.loopexit ], [ %retval.0.lcssa58.lcssa, %while.end58.loopexit9 ]
  %field.2 = phi %union.tree_node* [ %field.0.lcssa, %while.end58.loopexit ], [ %.lcssa71.lcssa, %while.end58.loopexit9 ], !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.2, metadata !4124, metadata !DIExpression()), !dbg !4145
  %idxprom59 = sext i32 %bot.065 to i64, !dbg !4194
  %arrayidx60 = getelementptr inbounds %struct.sorted_fields_type, %struct.sorted_fields_type* %3, i64 0, i32 1, i64 %idxprom59, !dbg !4194
  %18 = bitcast %union.tree_node** %arrayidx60 to %struct.tree_decl_minimal**, !dbg !4194
  %19 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %18, align 8, !dbg !4194
  %name62 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %19, i64 0, i32 3, !dbg !4194
  %20 = load %union.tree_node*, %union.tree_node** %name62, align 8, !dbg !4194
  %cmp63 = icmp eq %union.tree_node* %20, %component, !dbg !4196
  br i1 %cmp63, label %if.then64, label %if.else67, !dbg !4197

if.then64:                                        ; preds = %while.end58
  %21 = bitcast %struct.tree_decl_minimal* %19 to %union.tree_node*, !dbg !4197
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !4124, metadata !DIExpression()), !dbg !4145
  br label %if.end73, !dbg !4198

if.else67:                                        ; preds = %while.end58
  %name69 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4199
  %22 = load %union.tree_node*, %union.tree_node** %name69, align 8, !dbg !4199
  %cmp70 = icmp eq %union.tree_node* %22, %component, !dbg !4201
  br i1 %cmp70, label %if.end73, label %cleanup74, !dbg !4202

if.end73:                                         ; preds = %if.else67, %if.then64
  %field.3 = phi %union.tree_node* [ %21, %if.then64 ], [ %field.2, %if.else67 ], !dbg !4152
  call void @llvm.dbg.value(metadata %union.tree_node* %field.3, metadata !4124, metadata !DIExpression()), !dbg !4145
  br label %cleanup74, !dbg !4203

cleanup74.loopexit:                               ; preds = %cleanup
  %cleanup.dest.slot.0.lcssa = phi i32 [ %cleanup.dest.slot.0, %cleanup ]
  %retval.2.lcssa = phi %union.tree_node* [ %retval.2, %cleanup ]
  %.lcssa54 = phi %union.tree_node* [ %13, %cleanup ], !dbg !4165
  br label %cleanup74

cleanup74.loopexit8:                              ; preds = %while.end
  %field.1.lcssa.lcssa = phi %union.tree_node* [ %field.1.lcssa, %while.end ], !dbg !4166
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1.lcssa.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1.lcssa.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata %union.tree_node* %field.1.lcssa.lcssa, metadata !4124, metadata !DIExpression()), !dbg !4145
  br label %cleanup74

cleanup74:                                        ; preds = %cleanup74.loopexit8, %cleanup74.loopexit, %if.else67, %if.end73
  %field.4 = phi %union.tree_node* [ %field.3, %if.end73 ], [ %field.2, %if.else67 ], [ %.lcssa54, %cleanup74.loopexit ], [ %field.1.lcssa.lcssa, %cleanup74.loopexit8 ], !dbg !4152
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end73 ], [ 1, %if.else67 ], [ %cleanup.dest.slot.0.lcssa, %cleanup74.loopexit ], [ 1, %cleanup74.loopexit8 ]
  %retval.4 = phi %union.tree_node* [ %retval.061, %if.end73 ], [ null, %if.else67 ], [ %retval.2.lcssa, %cleanup74.loopexit ], [ null, %cleanup74.loopexit8 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %field.4, metadata !4124, metadata !DIExpression()), !dbg !4145
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end123, label %cleanup125

if.else80:                                        ; preds = %land.lhs.true, %entry
  %values82 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4204
  %23 = bitcast i32* %values82 to %union.tree_node**, !dbg !4204
  br label %for.cond, !dbg !4205

for.cond:                                         ; preds = %for.inc, %if.else80
  %field.5.in = phi %union.tree_node** [ %23, %if.else80 ], [ %chain, %for.inc ]
  %retval.5 = phi %union.tree_node* [ undef, %if.else80 ], [ %retval.7, %for.inc ]
  %field.5 = load %union.tree_node*, %union.tree_node** %field.5.in, align 8, !dbg !4206
  call void @llvm.dbg.value(metadata %union.tree_node* %field.5, metadata !4124, metadata !DIExpression()), !dbg !4145
  %cond3 = icmp eq %union.tree_node* %field.5, null, !dbg !4207
  br i1 %cond3, label %cleanup125.loopexit, label %for.body, !dbg !4207

for.body:                                         ; preds = %for.cond
  %name85 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4208
  %24 = load %union.tree_node*, %union.tree_node** %name85, align 8, !dbg !4208
  %cmp86 = icmp eq %union.tree_node* %24, null, !dbg !4209
  br i1 %cmp86, label %land.lhs.true87, label %if.end113, !dbg !4210

land.lhs.true87:                                  ; preds = %for.body
  %type89 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4211
  %25 = bitcast %union.tree_node** %type89 to i64**, !dbg !4211
  %26 = load i64*, i64** %25, align 8, !dbg !4211
  %bf.load91 = load i64, i64* %26, align 8, !dbg !4211
  %bf.cast934 = and i64 %bf.load91, 65535, !dbg !4212
  %cmp94 = icmp eq i64 %bf.cast934, 16, !dbg !4212
  br i1 %cmp94, label %if.then103, label %lor.lhs.false95, !dbg !4213

lor.lhs.false95:                                  ; preds = %land.lhs.true87
  %cmp102 = icmp eq i64 %bf.cast934, 17, !dbg !4214
  br i1 %cmp102, label %if.then103, label %if.end113, !dbg !4215

if.then103:                                       ; preds = %lor.lhs.false95, %land.lhs.true87
  %call105 = tail call fastcc %union.tree_node* @lookup_field(%union.tree_node* nonnull %field.5, %union.tree_node* %component) #7, !dbg !4216
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !4138, metadata !DIExpression()), !dbg !4217
  %tobool106 = icmp eq %union.tree_node* %call105, null, !dbg !4218
  br i1 %tobool106, label %cleanup110, label %if.then107, !dbg !4220

if.then107:                                       ; preds = %if.then103
  %call108 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* nonnull %field.5, %union.tree_node* nonnull %call105) #6, !dbg !4221
  br label %cleanup110, !dbg !4222

cleanup110:                                       ; preds = %if.then103, %if.then107
  %cleanup.dest.slot.2 = phi i1 [ false, %if.then107 ], [ true, %if.then103 ]
  %retval.6 = phi %union.tree_node* [ %call108, %if.then107 ], [ %retval.5, %if.then103 ]
  br i1 %cleanup.dest.slot.2, label %cleanup110.if.end113_crit_edge, label %cleanup125.loopexit

cleanup110.if.end113_crit_edge:                   ; preds = %cleanup110
  %.pre = load %union.tree_node*, %union.tree_node** %name85, align 8, !dbg !4223
  br label %if.end113

if.end113:                                        ; preds = %cleanup110.if.end113_crit_edge, %lor.lhs.false95, %for.body
  %27 = phi %union.tree_node* [ null, %lor.lhs.false95 ], [ %24, %for.body ], [ %.pre, %cleanup110.if.end113_crit_edge ], !dbg !4223
  %retval.7 = phi %union.tree_node* [ %retval.5, %lor.lhs.false95 ], [ %retval.5, %for.body ], [ %retval.6, %cleanup110.if.end113_crit_edge ]
  %cmp116 = icmp eq %union.tree_node* %27, %component, !dbg !4225
  br i1 %cmp116, label %for.end, label %for.inc, !dbg !4226

for.inc:                                          ; preds = %if.end113
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4227
  br label %for.cond, !dbg !4228, !llvm.loop !4229

for.end:                                          ; preds = %if.end113
  %field.5.lcssa53 = phi %union.tree_node* [ %field.5, %if.end113 ], !dbg !4206
  br label %if.end123, !dbg !4231

if.end123:                                        ; preds = %for.end, %cleanup74
  %field.6 = phi %union.tree_node* [ %field.4, %cleanup74 ], [ %field.5.lcssa53, %for.end ], !dbg !4232
  call void @llvm.dbg.value(metadata %union.tree_node* %field.6, metadata !4124, metadata !DIExpression()), !dbg !4145
  %call124 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %field.6, %union.tree_node* null) #6, !dbg !4233
  br label %cleanup125, !dbg !4234

cleanup125.loopexit:                              ; preds = %cleanup110, %for.cond
  %retval.8.ph = phi %union.tree_node* [ null, %for.cond ], [ %retval.6, %cleanup110 ]
  br label %cleanup125, !dbg !4235

cleanup125:                                       ; preds = %cleanup125.loopexit, %cleanup74, %if.end123
  %retval.8 = phi %union.tree_node* [ %retval.4, %cleanup74 ], [ %call124, %if.end123 ], [ %retval.8.ph, %cleanup125.loopexit ], !dbg !4145
  ret %union.tree_node* %retval.8, !dbg !4235
}

declare dso_local void @error_at(i32, i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @warn_deprecated_use(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_indirect_ref(i32 %loc, %union.tree_node* %ptr, i32 %errstring) local_unnamed_addr #5 !dbg !4236 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4241, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata %union.tree_node* %ptr, metadata !4242, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata i32 %errstring, metadata !4243, metadata !DIExpression()), !dbg !4252
  %call = tail call %union.tree_node* @default_conversion(%union.tree_node* %ptr) #7, !dbg !4253
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4244, metadata !DIExpression()), !dbg !4252
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4254
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4245, metadata !DIExpression()), !dbg !4252
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4255
  %bf.load = load i64, i64* %1, align 8, !dbg !4255
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4256
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !4256
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4257
  %bf.load3 = load i64, i64* %2, align 8, !dbg !4257
  %3 = trunc i64 %bf.load3 to i32, !dbg !4257
  %bf.cast5 = and i32 %3, 65535, !dbg !4257
  br i1 %cmp, label %if.then, label %if.else118, !dbg !4258

if.then:                                          ; preds = %entry
  %cmp6 = icmp eq i32 %bf.cast5, 116, !dbg !4259
  br i1 %cmp6, label %if.then18, label %lor.lhs.false, !dbg !4259

lor.lhs.false:                                    ; preds = %if.then
  %bf.cast102 = and i64 %bf.load3, 65535, !dbg !4259
  %cmp11 = icmp eq i64 %bf.cast102, 113, !dbg !4259
  br i1 %cmp11, label %if.then18, label %lor.lhs.false12, !dbg !4261

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp17 = icmp eq i64 %bf.cast102, 118, !dbg !4262
  br i1 %cmp17, label %if.then18, label %if.end32, !dbg !4263

if.then18:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %if.then
  %4 = load i32, i32* @warn_strict_aliasing, align 4, !dbg !4264
  %cmp19 = icmp sgt i32 %4, 2, !dbg !4267
  br i1 %cmp19, label %if.then20, label %if.end32, !dbg !4268

if.then20:                                        ; preds = %if.then18
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4269
  %5 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !4269
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !4269
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !4269
  %7 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !4269
  %.cast = bitcast %struct.tree_common* %6 to %union.tree_node*, !dbg !4271
  %call26 = tail call zeroext i8 @strict_aliasing_warning(%union.tree_node* %7, %union.tree_node* %0, %union.tree_node* %.cast) #6, !dbg !4272
  %tobool = icmp eq i8 %call26, 0, !dbg !4272
  br i1 %tobool, label %if.then20.if.end32_crit_edge, label %if.then27, !dbg !4273

if.then20.if.end32_crit_edge:                     ; preds = %if.then20
  %bf.load34.pre = load i64, i64* %2, align 8, !dbg !4274
  br label %if.end32, !dbg !4273

if.then27:                                        ; preds = %if.then20
  %bf.load29 = load i64, i64* %2, align 8, !dbg !4275
  %bf.set = or i64 %bf.load29, 8388608, !dbg !4275
  store i64 %bf.set, i64* %2, align 8, !dbg !4275
  br label %if.end32, !dbg !4276

if.end32:                                         ; preds = %if.then20.if.end32_crit_edge, %if.then18, %if.then27, %lor.lhs.false12
  %bf.load34 = phi i64 [ %bf.load34.pre, %if.then20.if.end32_crit_edge ], [ %bf.load3, %if.then18 ], [ %bf.set, %if.then27 ], [ %bf.load3, %lor.lhs.false12 ], !dbg !4274
  %bf.cast364 = and i64 %bf.load34, 65535, !dbg !4277
  %cmp37 = icmp eq i64 %bf.cast364, 121, !dbg !4277
  br i1 %cmp37, label %land.lhs.true, label %if.end32.if.else_crit_edge, !dbg !4278

if.end32.if.else_crit_edge:                       ; preds = %if.end32
  %type51.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4279
  %.pre = load %union.tree_node*, %union.tree_node** %type51.phi.trans.insert, align 8, !dbg !4280
  br label %if.else, !dbg !4278

land.lhs.true:                                    ; preds = %if.end32
  %operands39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4281
  %8 = bitcast %union.tree_node** %operands39 to %struct.tree_common**, !dbg !4281
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !4281
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !4281
  %10 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !4281
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4282
  %11 = load %union.tree_node*, %union.tree_node** %type44, align 8, !dbg !4282
  %cmp45 = icmp eq %union.tree_node* %10, %11, !dbg !4283
  %12 = bitcast %struct.tree_common* %9 to %union.tree_node*, !dbg !4284
  br i1 %cmp45, label %if.then46, label %if.else, !dbg !4284

if.then46:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !4246, metadata !DIExpression()), !dbg !4252
  tail call void @protected_set_expr_location(%union.tree_node* %12, i32 %loc) #6, !dbg !4285
  br label %cleanup129, !dbg !4287

if.else:                                          ; preds = %if.end32.if.else_crit_edge, %land.lhs.true
  %13 = phi %union.tree_node* [ %.pre, %if.end32.if.else_crit_edge ], [ %11, %land.lhs.true ], !dbg !4280
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !4247, metadata !DIExpression()), !dbg !4279
  %call52 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %13, %union.tree_node* %call) #6, !dbg !4288
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !4246, metadata !DIExpression()), !dbg !4252
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4289
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !4289
  %cmp54 = icmp eq %union.tree_node* %15, null, !dbg !4289
  br i1 %cmp54, label %lor.lhs.false55, label %if.else.if.end68_crit_edge, !dbg !4289

if.else.if.end68_crit_edge:                       ; preds = %if.else
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4291
  %bf.load70.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4293
  br label %if.end68, !dbg !4289

lor.lhs.false55:                                  ; preds = %if.else
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4289
  %bf.load57 = load i64, i64* %16, align 8, !dbg !4289
  %bf.cast595 = and i64 %bf.load57, 65535, !dbg !4289
  %cmp60 = icmp eq i64 %bf.cast595, 19, !dbg !4289
  br i1 %cmp60, label %if.end68, label %land.lhs.true61, !dbg !4294

land.lhs.true61:                                  ; preds = %lor.lhs.false55
  %cmp66 = icmp eq i64 %bf.cast595, 15, !dbg !4295
  br i1 %cmp66, label %if.end68, label %if.then67, !dbg !4296

if.then67:                                        ; preds = %land.lhs.true61
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4297
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4299
  br label %cleanup129, !dbg !4300

if.end68:                                         ; preds = %if.else.if.end68_crit_edge, %land.lhs.true61, %lor.lhs.false55
  %bf.load70 = phi i64 [ %bf.load70.pre, %if.else.if.end68_crit_edge ], [ %bf.load57, %land.lhs.true61 ], [ %bf.load57, %lor.lhs.false55 ], !dbg !4293
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4293
  %bf.cast727 = and i64 %bf.load70, 65535, !dbg !4293
  %cmp73 = icmp eq i64 %bf.cast727, 19, !dbg !4293
  %19 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4301
  %cmp75 = icmp eq i32 %19, 0, !dbg !4302
  %or.cond = and i1 %cmp73, %cmp75, !dbg !4303
  br i1 %or.cond, label %if.then76, label %if.end78, !dbg !4303

if.then76:                                        ; preds = %if.end68
  %call77 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4304
  %bf.load80.pre = load i64, i64* %18, align 8, !dbg !4305
  br label %if.end78, !dbg !4304

if.end78:                                         ; preds = %if.then76, %if.end68
  %bf.load80 = phi i64 [ %bf.load80.pre, %if.then76 ], [ %bf.load70, %if.end68 ], !dbg !4305
  %bf.cast82 = and i64 %bf.load80, 1048576, !dbg !4305
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4306
  %bf.load84 = load i64, i64* %20, align 8, !dbg !4307
  %bf.clear85 = and i64 %bf.load84, -1048577, !dbg !4307
  %bf.set86 = or i64 %bf.clear85, %bf.cast82, !dbg !4307
  store i64 %bf.set86, i64* %20, align 8, !dbg !4307
  %bf.load88 = load i64, i64* %18, align 8, !dbg !4308
  %bf.cast918 = and i64 %bf.load88, 524288, !dbg !4308
  %tobool92 = icmp eq i64 %bf.cast918, 0, !dbg !4308
  br i1 %tobool92, label %lor.rhs, label %lor.end, !dbg !4309

lor.rhs:                                          ; preds = %if.end78
  %bf.load94 = load i64, i64* %2, align 8, !dbg !4310
  %21 = and i64 %bf.load94, 65536, !dbg !4309
  br label %lor.end, !dbg !4309

lor.end:                                          ; preds = %if.end78, %lor.rhs
  %22 = phi i64 [ 65536, %if.end78 ], [ %21, %lor.rhs ]
  %bf.clear103 = and i64 %bf.set86, -65537, !dbg !4311
  %bf.set104 = or i64 %bf.clear103, %22, !dbg !4311
  store i64 %bf.set104, i64* %20, align 8, !dbg !4311
  %bf.load107 = load i64, i64* %18, align 8, !dbg !4312
  %bf.cast110 = and i64 %bf.load107, 524288, !dbg !4312
  %bf.clear115 = and i64 %bf.set104, -524289, !dbg !4313
  %bf.set116 = or i64 %bf.clear115, %bf.cast110, !dbg !4313
  store i64 %bf.set116, i64* %20, align 8, !dbg !4313
  tail call void @protected_set_expr_location(%union.tree_node* %call52, i32 %loc) #6, !dbg !4314
  br label %cleanup129, !dbg !4315

if.else118:                                       ; preds = %entry
  %cmp123 = icmp eq i32 %bf.cast5, 0, !dbg !4316
  br i1 %cmp123, label %if.end128, label %if.then124, !dbg !4318

if.then124:                                       ; preds = %if.else118
  switch i32 %errstring, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb125
    i32 3, label %sw.bb126
  ], !dbg !4319

sw.bb:                                            ; preds = %if.then124
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.17, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !4320
  br label %if.end128, !dbg !4322

sw.bb125:                                         ; preds = %if.then124
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !4323
  br label %if.end128, !dbg !4324

sw.bb126:                                         ; preds = %if.then124
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !4325
  br label %if.end128, !dbg !4326

sw.default:                                       ; preds = %if.then124
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 2189, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4327
  br label %if.end128, !dbg !4328

if.end128:                                        ; preds = %if.else118, %sw.default, %sw.bb126, %sw.bb125, %sw.bb
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4329
  br label %cleanup129, !dbg !4330

cleanup129:                                       ; preds = %if.then67, %lor.end, %if.end128, %if.then46
  %retval.1 = phi %union.tree_node* [ %12, %if.then46 ], [ %23, %if.end128 ], [ %call52, %lor.end ], [ %17, %if.then67 ], !dbg !4252
  ret %union.tree_node* %retval.1, !dbg !4331
}

declare dso_local zeroext i8 @strict_aliasing_warning(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @protected_set_expr_location(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_array_ref(i32 %loc, %union.tree_node* %array, %union.tree_node* %index) local_unnamed_addr #5 !dbg !4332 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !4334, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %array, metadata !4335, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %index, metadata !4336, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i8 0, metadata !4338, metadata !DIExpression()), !dbg !4351
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %array, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4352
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4352
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4354
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !4355
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4356
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4356

lor.lhs.false:                                    ; preds = %entry
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4357
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !4357
  %cmp3 = icmp eq %union.tree_node* %3, %1, !dbg !4358
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4359
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4359

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %cleanup284, !dbg !4360

if.end:                                           ; preds = %lor.lhs.false
  %bf.load = load i64, i64* %2, align 8, !dbg !4361
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !4362
  %cmp6 = icmp eq i64 %bf.cast2, 15, !dbg !4362
  br i1 %cmp6, label %if.end32, label %land.lhs.true, !dbg !4363

land.lhs.true:                                    ; preds = %if.end
  %cmp13 = icmp eq i64 %bf.cast2, 10, !dbg !4364
  br i1 %cmp13, label %if.end32, label %if.then14, !dbg !4365

if.then14:                                        ; preds = %land.lhs.true
  %bf.load18 = load i64, i64* %4, align 8, !dbg !4366
  %bf.cast2038 = and i64 %bf.load18, 65535, !dbg !4368
  %cmp21 = icmp eq i64 %bf.cast2038, 15, !dbg !4368
  br i1 %cmp21, label %cleanup, label %land.lhs.true22, !dbg !4369

land.lhs.true22:                                  ; preds = %if.then14
  %cmp29 = icmp eq i64 %bf.cast2038, 10, !dbg !4370
  br i1 %cmp29, label %cleanup, label %if.then30, !dbg !4371

if.then30:                                        ; preds = %land.lhs.true22
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4372
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4374
  br label %cleanup, !dbg !4375

cleanup:                                          ; preds = %land.lhs.true22, %if.then14, %if.then30
  %swapped.0 = phi i8 [ 0, %if.then30 ], [ 1, %land.lhs.true22 ], [ 1, %if.then14 ], !dbg !4351
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then30 ], [ true, %land.lhs.true22 ], [ true, %if.then14 ]
  %index.addr.0 = phi %union.tree_node* [ %index, %if.then30 ], [ %array, %land.lhs.true22 ], [ %array, %if.then14 ]
  %array.addr.0 = phi %union.tree_node* [ %array, %if.then30 ], [ %index, %land.lhs.true22 ], [ %index, %if.then14 ]
  %retval.0 = phi %union.tree_node* [ %5, %if.then30 ], [ undef, %land.lhs.true22 ], [ undef, %if.then14 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %array.addr.0, metadata !4335, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %index.addr.0, metadata !4336, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i8 %swapped.0, metadata !4338, metadata !DIExpression()), !dbg !4351
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end32_crit_edge, label %cleanup284

cleanup.if.end32_crit_edge:                       ; preds = %cleanup
  %type34.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %index.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4376
  %.phi.trans.insert = bitcast %union.tree_node** %type34.phi.trans.insert to i64**, !dbg !4376
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !4378
  br label %if.end32

if.end32:                                         ; preds = %cleanup.if.end32_crit_edge, %land.lhs.true, %if.end
  %6 = phi i64* [ %4, %land.lhs.true ], [ %4, %if.end ], [ %.pre, %cleanup.if.end32_crit_edge ]
  %7 = phi i64* [ %4, %land.lhs.true ], [ %4, %if.end ], [ %.pre, %cleanup.if.end32_crit_edge ]
  %8 = phi i64* [ %4, %land.lhs.true ], [ %4, %if.end ], [ %.pre, %cleanup.if.end32_crit_edge ], !dbg !4378
  %swapped.1 = phi i8 [ 0, %land.lhs.true ], [ 0, %if.end ], [ %swapped.0, %cleanup.if.end32_crit_edge ], !dbg !4379
  %index.addr.1 = phi %union.tree_node* [ %index, %land.lhs.true ], [ %index, %if.end ], [ %index.addr.0, %cleanup.if.end32_crit_edge ]
  %array.addr.1 = phi %union.tree_node* [ %array, %land.lhs.true ], [ %array, %if.end ], [ %array.addr.0, %cleanup.if.end32_crit_edge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %array.addr.1, metadata !4335, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %index.addr.1, metadata !4336, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i8 %swapped.1, metadata !4338, metadata !DIExpression()), !dbg !4351
  %bf.load36 = load i64, i64* %8, align 8, !dbg !4378
  %bf.cast383 = and i64 %bf.load36, 65535, !dbg !4378
  %cmp39 = icmp eq i64 %bf.cast383, 6, !dbg !4378
  br i1 %cmp39, label %if.end57, label %lor.lhs.false40, !dbg !4378

lor.lhs.false40:                                  ; preds = %if.end32
  %bf.load44 = load i64, i64* %7, align 8, !dbg !4378
  %bf.cast464 = and i64 %bf.load44, 65535, !dbg !4378
  %cmp47 = icmp eq i64 %bf.cast464, 7, !dbg !4378
  br i1 %cmp47, label %if.end57, label %lor.lhs.false48, !dbg !4378

lor.lhs.false48:                                  ; preds = %lor.lhs.false40
  %bf.load52 = load i64, i64* %6, align 8, !dbg !4378
  %bf.cast545 = and i64 %bf.load52, 65535, !dbg !4378
  %cmp55 = icmp eq i64 %bf.cast545, 8, !dbg !4378
  br i1 %cmp55, label %if.end57, label %if.then56, !dbg !4380

if.then56:                                        ; preds = %lor.lhs.false48
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !4381
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4383
  br label %cleanup284, !dbg !4384

if.end57:                                         ; preds = %lor.lhs.false48, %lor.lhs.false40, %if.end32
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %array.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4385
  %10 = bitcast %union.tree_node** %type59 to %struct.tree_common**, !dbg !4385
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !4385
  %type61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !4385
  %12 = bitcast %union.tree_node** %type61 to i64**, !dbg !4385
  %13 = load i64*, i64** %12, align 8, !dbg !4385
  %bf.load63 = load i64, i64* %13, align 8, !dbg !4385
  %bf.cast656 = and i64 %bf.load63, 65535, !dbg !4387
  %cmp66 = icmp eq i64 %bf.cast656, 20, !dbg !4387
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !4388

if.then67:                                        ; preds = %if.end57
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4389
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4391
  br label %cleanup284, !dbg !4392

if.end68:                                         ; preds = %if.end57
  %tobool = icmp eq i8 %swapped.1, 0, !dbg !4393
  br i1 %tobool, label %if.then69, label %if.end70, !dbg !4395

if.then69:                                        ; preds = %if.end68
  tail call void @warn_array_subscript_with_type_char(%union.tree_node* %index.addr.1) #6, !dbg !4396
  br label %if.end70, !dbg !4396

if.end70:                                         ; preds = %if.end68, %if.then69
  %call = tail call %union.tree_node* @default_conversion(%union.tree_node* %index.addr.1) #7, !dbg !4397
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4336, metadata !DIExpression()), !dbg !4351
  %type72 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4398
  %15 = bitcast %union.tree_node** %type72 to i64**, !dbg !4398
  %16 = load i64*, i64** %15, align 8, !dbg !4398
  %bf.load74 = load i64, i64* %16, align 8, !dbg !4398
  %bf.cast767 = and i64 %bf.load74, 65535, !dbg !4398
  %cmp77 = icmp eq i64 %bf.cast767, 8, !dbg !4398
  br i1 %cmp77, label %cond.end, label %cond.true, !dbg !4398

cond.true:                                        ; preds = %if.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 2250, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4398
  br label %cond.end, !dbg !4398

cond.end:                                         ; preds = %if.end70, %cond.true
  %17 = bitcast %union.tree_node** %type59 to i64**, !dbg !4399
  %18 = load i64*, i64** %17, align 8, !dbg !4399
  %bf.load81 = load i64, i64* %18, align 8, !dbg !4399
  %bf.cast838 = and i64 %bf.load81, 65535, !dbg !4400
  %cmp84 = icmp eq i64 %bf.cast838, 15, !dbg !4400
  br i1 %cmp84, label %if.then85, label %if.else252, !dbg !4401

if.then85:                                        ; preds = %cond.end
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4402
  %bf.load88 = load i64, i64* %19, align 8, !dbg !4402
  %bf.cast9011 = and i64 %bf.load88, 65535, !dbg !4404
  %cmp91 = icmp eq i64 %bf.cast9011, 23, !dbg !4404
  br i1 %cmp91, label %lor.lhs.false92, label %if.then111, !dbg !4405

lor.lhs.false92:                                  ; preds = %if.then85
  %type96 = getelementptr inbounds i64, i64* %18, i64 2, !dbg !4406
  %20 = bitcast i64* %type96 to %struct.tree_type**, !dbg !4406
  %21 = load %struct.tree_type*, %struct.tree_type** %20, align 8, !dbg !4406
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %21, i64 0, i32 2, !dbg !4406
  %22 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4406
  %cmp98 = icmp eq %union.tree_node* %22, null, !dbg !4406
  br i1 %cmp98, label %if.end116, label %land.lhs.true99, !dbg !4407

land.lhs.true99:                                  ; preds = %lor.lhs.false92
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4407
  %bf.load107 = load i64, i64* %23, align 8, !dbg !4408
  %bf.cast10936 = and i64 %bf.load107, 65535, !dbg !4409
  %cmp110 = icmp eq i64 %bf.cast10936, 23, !dbg !4409
  br i1 %cmp110, label %if.end116, label %if.then111, !dbg !4410

if.then111:                                       ; preds = %land.lhs.true99, %if.then85
  %call112 = tail call zeroext i8 @c_mark_addressable(%union.tree_node* %array.addr.1) #7, !dbg !4411
  %tobool113 = icmp eq i8 %call112, 0, !dbg !4411
  br i1 %tobool113, label %if.then114, label %if.then111.if.end116_crit_edge, !dbg !4414

if.then111.if.end116_crit_edge:                   ; preds = %if.then111
  %bf.load118.pre = load i64, i64* %19, align 8, !dbg !4415
  br label %if.end116, !dbg !4414

if.then114:                                       ; preds = %if.then111
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4417
  br label %cleanup284, !dbg !4418

if.end116:                                        ; preds = %if.then111.if.end116_crit_edge, %land.lhs.true99, %lor.lhs.false92
  %bf.load118 = phi i64 [ %bf.load118.pre, %if.then111.if.end116_crit_edge ], [ %bf.load88, %land.lhs.true99 ], [ %bf.load88, %lor.lhs.false92 ], !dbg !4415
  %bf.cast12012 = and i64 %bf.load118, 65535, !dbg !4419
  %cmp121 = icmp eq i64 %bf.cast12012, 23, !dbg !4419
  br i1 %cmp121, label %land.lhs.true122, label %if.end139, !dbg !4420

land.lhs.true122:                                 ; preds = %if.end116
  %25 = bitcast %union.tree_node** %type59 to %struct.tree_type**, !dbg !4421
  %26 = load %struct.tree_type*, %struct.tree_type** %25, align 8, !dbg !4421
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 1, !dbg !4421
  %27 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !4421
  %tobool126 = icmp eq %union.tree_node* %27, null, !dbg !4421
  br i1 %tobool126, label %if.end139, label %land.lhs.true127, !dbg !4422

land.lhs.true127:                                 ; preds = %land.lhs.true122
  %call132 = tail call i32 @int_fits_type_p(%union.tree_node* %call, %union.tree_node* nonnull %27) #6, !dbg !4423
  %tobool133 = icmp eq i32 %call132, 0, !dbg !4423
  br i1 %tobool133, label %if.then134, label %if.end139, !dbg !4424

if.then134:                                       ; preds = %land.lhs.true127
  %call135 = tail call zeroext i8 @c_mark_addressable(%union.tree_node* %array.addr.1) #7, !dbg !4425
  %tobool136 = icmp eq i8 %call135, 0, !dbg !4425
  br i1 %tobool136, label %if.then137, label %if.end139, !dbg !4428

if.then137:                                       ; preds = %if.then134
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4429
  br label %cleanup284, !dbg !4430

if.end139:                                        ; preds = %if.then134, %land.lhs.true127, %land.lhs.true122, %if.end116
  %29 = load i32, i32* @pedantic, align 4, !dbg !4431
  %tobool140 = icmp eq i32 %29, 0, !dbg !4431
  br i1 %tobool140, label %if.end167, label %while.cond.preheader, !dbg !4432

while.cond.preheader:                             ; preds = %if.end139
  br label %while.cond, !dbg !4433

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %foo.0 = phi %union.tree_node* [ %31, %while.body ], [ %array.addr.1, %while.cond.preheader ], !dbg !4434
  call void @llvm.dbg.value(metadata %union.tree_node* %foo.0, metadata !4346, metadata !DIExpression()), !dbg !4434
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %foo.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4435
  %bf.load143 = load i64, i64* %30, align 8, !dbg !4435
  %bf.cast14533 = and i64 %bf.load143, 65535, !dbg !4436
  %cmp146 = icmp eq i64 %bf.cast14533, 41, !dbg !4436
  br i1 %cmp146, label %while.body, label %while.end, !dbg !4433

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %foo.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4437
  %31 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4437
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !4346, metadata !DIExpression()), !dbg !4434
  br label %while.cond, !dbg !4433, !llvm.loop !4438

while.end:                                        ; preds = %while.cond
  %foo.0.lcssa = phi %union.tree_node* [ %foo.0, %while.cond ], !dbg !4434
  %bf.cast14533.lcssa = phi i64 [ %bf.cast14533, %while.cond ], !dbg !4436
  call void @llvm.dbg.value(metadata %union.tree_node* %foo.0.lcssa, metadata !4346, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata %union.tree_node* %foo.0.lcssa, metadata !4346, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata %union.tree_node* %foo.0.lcssa, metadata !4346, metadata !DIExpression()), !dbg !4434
  %cmp151 = icmp eq i64 %bf.cast14533.lcssa, 32, !dbg !4439
  br i1 %cmp151, label %land.lhs.true152, label %if.else, !dbg !4441

land.lhs.true152:                                 ; preds = %while.end
  %lang_flag_4 = getelementptr inbounds %union.tree_node, %union.tree_node* %foo.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4442
  %32 = bitcast i40* %lang_flag_4 to i64*, !dbg !4442
  %bf.load153 = load i64, i64* %32, align 8, !dbg !4442
  %bf.cast15535 = and i64 %bf.load153, 524288, !dbg !4442
  %tobool156 = icmp eq i64 %bf.cast15535, 0, !dbg !4442
  br i1 %tobool156, label %if.else, label %if.then157, !dbg !4443

if.then157:                                       ; preds = %land.lhs.true152
  %call158 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4444
  br label %if.end167, !dbg !4444

if.else:                                          ; preds = %land.lhs.true152, %while.end
  %33 = load i32, i32* @flag_isoc99, align 4, !dbg !4445
  %tobool159 = icmp eq i32 %33, 0, !dbg !4445
  br i1 %tobool159, label %land.lhs.true160, label %if.end167, !dbg !4447

land.lhs.true160:                                 ; preds = %if.else
  %call161 = tail call zeroext i8 @lvalue_p(%union.tree_node* %foo.0.lcssa) #7, !dbg !4448
  %tobool162 = icmp eq i8 %call161, 0, !dbg !4448
  br i1 %tobool162, label %if.then163, label %if.end167, !dbg !4449

if.then163:                                       ; preds = %land.lhs.true160
  %call164 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4450
  br label %if.end167, !dbg !4450

if.end167:                                        ; preds = %land.lhs.true160, %if.else, %if.end139, %if.then157, %if.then163
  %34 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !4451
  %type171 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %34, i64 0, i32 2, !dbg !4451
  %35 = load %union.tree_node*, %union.tree_node** %type171, align 8, !dbg !4451
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !4345, metadata !DIExpression()), !dbg !4452
  %call172 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %35, %union.tree_node* %array.addr.1, %union.tree_node* %call, %union.tree_node* null, %union.tree_node* null) #6, !dbg !4453
  call void @llvm.dbg.value(metadata %union.tree_node* %call172, metadata !4342, metadata !DIExpression()), !dbg !4452
  %36 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !4454
  %type176 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %36, i64 0, i32 2, !dbg !4454
  %37 = bitcast %union.tree_node** %type176 to i64**, !dbg !4454
  %38 = load i64*, i64** %37, align 8, !dbg !4454
  %bf.load178 = load i64, i64* %38, align 8, !dbg !4454
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %array.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4455
  %bf.load183 = load i64, i64* %39, align 8, !dbg !4455
  %bf.lshr17915 = or i64 %bf.load178, %bf.load183, !dbg !4456
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4457
  %bf.load188 = load i64, i64* %40, align 8, !dbg !4458
  %41 = and i64 %bf.lshr17915, 1048576, !dbg !4458
  %bf.set = or i64 %41, %bf.load188, !dbg !4458
  store i64 %bf.set, i64* %40, align 8, !dbg !4458
  %42 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !4459
  %type198 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %42, i64 0, i32 2, !dbg !4459
  %43 = bitcast %union.tree_node** %type198 to i64**, !dbg !4459
  %44 = load i64*, i64** %43, align 8, !dbg !4459
  %bf.load200 = load i64, i64* %44, align 8, !dbg !4459
  %bf.load205 = load i64, i64* %39, align 8, !dbg !4460
  %45 = lshr i64 %bf.load200, 3, !dbg !4461
  %bf.lshr20626 = or i64 %45, %bf.load205, !dbg !4461
  %46 = and i64 %bf.lshr20626, 65536, !dbg !4461
  %bf.set220 = or i64 %46, %bf.set, !dbg !4461
  store i64 %bf.set220, i64* %40, align 8, !dbg !4461
  %47 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !4462
  %type225 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i64 0, i32 2, !dbg !4462
  %48 = bitcast %union.tree_node** %type225 to i64**, !dbg !4462
  %49 = load i64*, i64** %48, align 8, !dbg !4462
  %bf.load227 = load i64, i64* %49, align 8, !dbg !4462
  %bf.load232 = load i64, i64* %39, align 8, !dbg !4463
  %bf.lshr22829 = or i64 %bf.load227, %bf.load232, !dbg !4464
  %50 = and i64 %bf.lshr22829, 524288, !dbg !4465
  %bf.set247 = or i64 %50, %bf.set220, !dbg !4465
  store i64 %bf.set247, i64* %40, align 8, !dbg !4465
  %call249 = tail call %union.tree_node* @require_complete_type(%union.tree_node* %call172) #7, !dbg !4466
  call void @llvm.dbg.value(metadata %union.tree_node* %call249, metadata !4337, metadata !DIExpression()), !dbg !4351
  tail call void @protected_set_expr_location(%union.tree_node* %call249, i32 %loc) #6, !dbg !4467
  br label %cleanup284, !dbg !4468

if.else252:                                       ; preds = %cond.end
  %call253 = tail call %union.tree_node* @default_conversion(%union.tree_node* %array.addr.1) #7, !dbg !4469
  call void @llvm.dbg.value(metadata %union.tree_node* %call253, metadata !4349, metadata !DIExpression()), !dbg !4470
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4471
  %cmp254 = icmp eq %union.tree_node* %call253, %51, !dbg !4473
  br i1 %cmp254, label %cleanup284, label %if.end256, !dbg !4474

if.end256:                                        ; preds = %if.else252
  %type258 = getelementptr inbounds %union.tree_node, %union.tree_node* %call253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4475
  %52 = bitcast %union.tree_node** %type258 to i64**, !dbg !4475
  %53 = load i64*, i64** %52, align 8, !dbg !4475
  %bf.load260 = load i64, i64* %53, align 8, !dbg !4475
  %bf.cast2629 = and i64 %bf.load260, 65535, !dbg !4475
  %cmp263 = icmp eq i64 %bf.cast2629, 10, !dbg !4475
  br i1 %cmp263, label %if.end256.cond.end266_crit_edge, label %cond.true264, !dbg !4475

if.end256.cond.end266_crit_edge:                  ; preds = %if.end256
  %54 = bitcast i64* %53 to %struct.tree_common*, !dbg !4475
  br label %cond.end266, !dbg !4475

cond.true264:                                     ; preds = %if.end256
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 2320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4475
  %.phi.trans.insert40 = bitcast %union.tree_node** %type258 to %struct.tree_common**, !dbg !4470
  %.pre41 = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert40, align 8, !dbg !4476
  br label %cond.end266, !dbg !4475

cond.end266:                                      ; preds = %if.end256.cond.end266_crit_edge, %cond.true264
  %55 = phi %struct.tree_common* [ %54, %if.end256.cond.end266_crit_edge ], [ %.pre41, %cond.true264 ], !dbg !4476
  %type271 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %55, i64 0, i32 2, !dbg !4476
  %56 = bitcast %union.tree_node** %type271 to i64**, !dbg !4476
  %57 = load i64*, i64** %56, align 8, !dbg !4476
  %bf.load273 = load i64, i64* %57, align 8, !dbg !4476
  %bf.cast27510 = and i64 %bf.load273, 65535, !dbg !4476
  %cmp276 = icmp eq i64 %bf.cast27510, 20, !dbg !4476
  br i1 %cmp276, label %cond.true277, label %cond.end279, !dbg !4476

cond.true277:                                     ; preds = %cond.end266
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 2321, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4476
  br label %cond.end279, !dbg !4476

cond.end279:                                      ; preds = %cond.end266, %cond.true277
  %call281 = tail call %union.tree_node* @build_binary_op(i32 %loc, i32 63, %union.tree_node* %call253, %union.tree_node* %call, i32 0) #7, !dbg !4477
  %call282 = tail call %union.tree_node* @build_indirect_ref(i32 %loc, %union.tree_node* %call281, i32 1) #7, !dbg !4478
  br label %cleanup284, !dbg !4479

cleanup284:                                       ; preds = %cond.end279, %if.else252, %if.then114, %if.then137, %if.end167, %cleanup, %if.then67, %if.then56, %if.then
  %retval.3 = phi %union.tree_node* [ %1, %if.then ], [ %retval.0, %cleanup ], [ %14, %if.then67 ], [ %9, %if.then56 ], [ %call249, %if.end167 ], [ %28, %if.then137 ], [ %24, %if.then114 ], [ %call282, %cond.end279 ], [ %call253, %if.else252 ], !dbg !4351
  ret %union.tree_node* %retval.3, !dbg !4480
}

declare dso_local void @warn_array_subscript_with_type_char(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @c_mark_addressable(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !4481 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4485, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4486, metadata !DIExpression()), !dbg !4487
  br label %while.cond, !dbg !4488

while.cond:                                       ; preds = %sw.bb8, %entry
  %x.0 = phi %union.tree_node* [ %exp, %entry ], [ %5, %sw.bb8 ], !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !4486, metadata !DIExpression()), !dbg !4487
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4489
  %bf.load = load i64, i64* %0, align 8, !dbg !4489
  %1 = trunc i64 %bf.load to i16, !dbg !4489
  switch i16 %1, label %cleanup.loopexit [
    i16 41, label %sw.bb
    i16 121, label %sw.bb8
    i16 45, label %sw.bb8
    i16 43, label %sw.bb8
    i16 44, label %sw.bb8
    i16 119, label %sw.bb12
    i16 51, label %sw.bb12
    i16 32, label %sw.bb16
    i16 33, label %sw.bb16
    i16 34, label %sw.bb16
    i16 36, label %sw.bb16
    i16 29, label %sw.bb85.loopexit
  ], !dbg !4490

sw.bb:                                            ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4491
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !4491
  %2 = bitcast %union.tree_node** %arrayidx to %struct.tree_decl_common**, !dbg !4491
  %3 = load %struct.tree_decl_common*, %struct.tree_decl_common** %2, align 8, !dbg !4491
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %3, i64 0, i32 2, !dbg !4491
  %4 = bitcast i40* %lang_flag_4 to i64*, !dbg !4491
  %bf.load2 = load i64, i64* %4, align 8, !dbg !4491
  %bf.cast410 = and i64 %bf.load2, 524288, !dbg !4491
  %cmp = icmp eq i64 %bf.cast410, 0, !dbg !4491
  br i1 %cmp, label %sw.bb8, label %if.then, !dbg !4494

if.then:                                          ; preds = %sw.bb
  %.lcssa45 = phi %struct.tree_decl_common* [ %3, %sw.bb ], !dbg !4491
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0), %struct.tree_decl_common* %.lcssa45) #6, !dbg !4495
  br label %cleanup, !dbg !4497

sw.bb8:                                           ; preds = %sw.bb, %while.cond, %while.cond, %while.cond, %while.cond
  %operands10 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4498
  %5 = load %union.tree_node*, %union.tree_node** %operands10, align 8, !dbg !4498
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4486, metadata !DIExpression()), !dbg !4487
  br label %while.cond, !dbg !4488, !llvm.loop !4499

sw.bb12:                                          ; preds = %while.cond, %while.cond
  %.lcssa37 = phi i64* [ %0, %while.cond ], [ %0, %while.cond ], !dbg !4489
  %bf.load.lcssa33 = phi i64 [ %bf.load, %while.cond ], [ %bf.load, %while.cond ], !dbg !4489
  %bf.set = or i64 %bf.load.lcssa33, 262144, !dbg !4501
  store i64 %bf.set, i64* %.lcssa37, align 8, !dbg !4501
  br label %cleanup, !dbg !4502

sw.bb16:                                          ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %x.0.lcssa42 = phi %union.tree_node* [ %x.0, %while.cond ], [ %x.0, %while.cond ], [ %x.0, %while.cond ], [ %x.0, %while.cond ], !dbg !4487
  %.lcssa38 = phi i64* [ %0, %while.cond ], [ %0, %while.cond ], [ %0, %while.cond ], [ %0, %while.cond ], !dbg !4489
  %bf.load.lcssa34 = phi i64 [ %bf.load, %while.cond ], [ %bf.load, %while.cond ], [ %bf.load, %while.cond ], [ %bf.load, %while.cond ], !dbg !4489
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0.lcssa42, metadata !4486, metadata !DIExpression()), !dbg !4487
  %lang_flag_418 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0.lcssa42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4503
  %6 = bitcast i40* %lang_flag_418 to i64*, !dbg !4503
  %bf.load19 = load i64, i64* %6, align 8, !dbg !4503
  %bf.cast221 = and i64 %bf.load19, 524288, !dbg !4503
  %tobool = icmp eq i64 %bf.cast221, 0, !dbg !4503
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4505

land.lhs.true:                                    ; preds = %sw.bb16
  %bf.cast276 = and i64 %bf.load19, 256, !dbg !4506
  %tobool28 = icmp eq i64 %bf.cast276, 0, !dbg !4506
  br i1 %tobool28, label %if.else, label %if.then29, !dbg !4507

if.then29:                                        ; preds = %land.lhs.true
  %bf.cast347 = and i64 %bf.load.lcssa34, 134217728, !dbg !4508
  %tobool35 = icmp eq i64 %bf.cast347, 0, !dbg !4508
  br i1 %tobool35, label %lor.lhs.false, label %if.then49, !dbg !4511

lor.lhs.false:                                    ; preds = %if.then29
  %bf.cast408 = and i64 %bf.load.lcssa34, 67108864, !dbg !4512
  %tobool41 = icmp eq i64 %bf.cast408, 0, !dbg !4512
  br i1 %tobool41, label %lor.lhs.false42, label %if.then49, !dbg !4513

lor.lhs.false42:                                  ; preds = %lor.lhs.false
  %bf.cast479 = and i64 %bf.load19, 33554432, !dbg !4514
  %tobool48 = icmp eq i64 %bf.cast479, 0, !dbg !4514
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !4515

if.then49:                                        ; preds = %lor.lhs.false42, %lor.lhs.false, %if.then29
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.50, i64 0, i64 0), %union.tree_node* %x.0.lcssa42) #6, !dbg !4516
  br label %cleanup, !dbg !4518

if.end50:                                         ; preds = %lor.lhs.false42
  %7 = load i32, i32* @input_location, align 4, !dbg !4519
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %7, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i64 0, i64 0), %union.tree_node* %x.0.lcssa42) #6, !dbg !4520
  %bf.load87.pre = load i64, i64* %.lcssa38, align 8, !dbg !4521
  br label %sw.bb85, !dbg !4522

if.else:                                          ; preds = %land.lhs.true, %sw.bb16
  %8 = phi i64* [ %.lcssa38, %land.lhs.true ], [ %.lcssa38, %sw.bb16 ]
  br i1 %tobool, label %sw.bb85, label %if.then58, !dbg !4523

if.then58:                                        ; preds = %if.else
  %bf.cast633 = and i64 %bf.load.lcssa34, 134217728, !dbg !4524
  %tobool64 = icmp eq i64 %bf.cast633, 0, !dbg !4524
  br i1 %tobool64, label %lor.lhs.false65, label %if.then80, !dbg !4528

lor.lhs.false65:                                  ; preds = %if.then58
  %bf.cast704 = and i64 %bf.load.lcssa34, 67108864, !dbg !4529
  %tobool71 = icmp eq i64 %bf.cast704, 0, !dbg !4529
  br i1 %tobool71, label %lor.lhs.false72, label %if.then80, !dbg !4530

lor.lhs.false72:                                  ; preds = %lor.lhs.false65
  %bf.cast785 = and i64 %bf.load19, 33554432, !dbg !4531
  %tobool79 = icmp eq i64 %bf.cast785, 0, !dbg !4531
  br i1 %tobool79, label %if.else81, label %if.then80, !dbg !4532

if.then80:                                        ; preds = %lor.lhs.false72, %lor.lhs.false65, %if.then58
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.52, i64 0, i64 0), %union.tree_node* %x.0.lcssa42) #6, !dbg !4533
  br label %cleanup, !dbg !4533

if.else81:                                        ; preds = %lor.lhs.false72
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.53, i64 0, i64 0), %union.tree_node* %x.0.lcssa42) #6, !dbg !4534
  br label %cleanup

sw.bb85.loopexit:                                 ; preds = %while.cond
  %.lcssa39 = phi i64* [ %0, %while.cond ], !dbg !4489
  %bf.load.lcssa35 = phi i64 [ %bf.load, %while.cond ], !dbg !4489
  br label %sw.bb85, !dbg !4535

sw.bb85:                                          ; preds = %sw.bb85.loopexit, %if.else, %if.end50
  %9 = phi i64* [ %.lcssa39, %sw.bb85.loopexit ], [ %8, %if.else ], [ %.lcssa38, %if.end50 ]
  %bf.load87 = phi i64 [ %bf.load.lcssa35, %sw.bb85.loopexit ], [ %bf.load.lcssa34, %if.else ], [ %bf.load87.pre, %if.end50 ], !dbg !4521
  %bf.set89 = or i64 %bf.load87, 262144, !dbg !4521
  store i64 %bf.set89, i64* %9, align 8, !dbg !4521
  br label %cleanup, !dbg !4535

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup, !dbg !4536

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb85, %if.then80, %if.else81, %if.then49, %sw.bb12, %if.then
  %retval.0 = phi i8 [ 0, %if.then49 ], [ 1, %sw.bb12 ], [ 0, %if.then ], [ 0, %if.else81 ], [ 0, %if.then80 ], [ 1, %sw.bb85 ], [ 1, %cleanup.loopexit ], !dbg !4537
  ret i8 %retval.0, !dbg !4536
}

declare dso_local i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_binary_op(i32 %location, i32 %code, %union.tree_node* %orig_op0, %union.tree_node* %orig_op1, i32 %convert_p) local_unnamed_addr #5 !dbg !4538 {
entry:
  %as_common = alloca i8, align 1
  %as_common1094 = alloca i8, align 1
  %unsigned_arg = alloca i32, align 4
  %xop0 = alloca %union.tree_node*, align 8
  %xop1 = alloca %union.tree_node*, align 8
  %xresult_type = alloca %union.tree_node*, align 8
  %xresultcode = alloca i32, align 4
  %op0_maybe_const = alloca i8, align 1
  %op1_maybe_const = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %location, metadata !4542, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %code, metadata !4543, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op0, metadata !4544, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op1, metadata !4545, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %convert_p, metadata !4546, metadata !DIExpression()), !dbg !4629
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4630
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4556, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %code, metadata !4563, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4565, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4566, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4567, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4568, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4569, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4570, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4571, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4572, metadata !DIExpression()), !dbg !4629
  %cmp = icmp eq i32 %location, 0, !dbg !4631
  %1 = load i32, i32* @input_location, align 4, !dbg !4633
  %spec.select = select i1 %cmp, i32 %1, i32 %location, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4542, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op0, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op1, metadata !4555, metadata !DIExpression()), !dbg !4629
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4635
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !4635
  %3 = load i64*, i64** %2, align 8, !dbg !4635
  %bf.load = load i64, i64* %3, align 8, !dbg !4635
  %bf.cast38 = and i64 %bf.load, 65535, !dbg !4635
  %cmp2 = icmp eq i64 %bf.cast38, 6, !dbg !4635
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !4635

lor.lhs.false:                                    ; preds = %entry
  %cmp9 = icmp eq i64 %bf.cast38, 7, !dbg !4635
  br i1 %cmp9, label %land.rhs, label %lor.lhs.false10, !dbg !4635

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %cmp17 = icmp eq i64 %bf.cast38, 8, !dbg !4635
  br i1 %cmp17, label %land.rhs, label %land.end33, !dbg !4635

land.rhs:                                         ; preds = %lor.lhs.false10, %lor.lhs.false, %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4635
  %bf.load19 = load i64, i64* %4, align 8, !dbg !4635
  %bf.cast21116 = and i64 %bf.load19, 65535, !dbg !4635
  %cmp22 = icmp eq i64 %bf.cast21116, 23, !dbg !4635
  br i1 %cmp22, label %land.end33, label %lor.rhs, !dbg !4635

lor.rhs:                                          ; preds = %land.rhs
  %cmp27 = icmp eq i64 %bf.cast21116, 189, !dbg !4635
  br i1 %cmp27, label %land.rhs28, label %land.end33, !dbg !4635

land.rhs28:                                       ; preds = %lor.rhs
  %bf.cast32118 = and i64 %bf.load19, 8589934592, !dbg !4635
  %tobool = icmp ne i64 %bf.cast32118, 0, !dbg !4635
  br label %land.end33

land.end33:                                       ; preds = %land.rhs, %land.rhs28, %lor.rhs, %lor.lhs.false10
  %5 = phi i1 [ false, %lor.lhs.false10 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %tobool, %land.rhs28 ], !dbg !4629
  call void @llvm.dbg.value(metadata i1 %5, metadata !4558, metadata !DIExpression()), !dbg !4629
  br i1 %5, label %if.then35, label %if.end36, !dbg !4636

if.then35:                                        ; preds = %land.end33
  %call = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %orig_op0) #7, !dbg !4637
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %if.end36, !dbg !4639

if.end36:                                         ; preds = %if.then35, %land.end33
  %op0.0 = phi %union.tree_node* [ %call, %if.then35 ], [ %orig_op0, %land.end33 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !4554, metadata !DIExpression()), !dbg !4629
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4640
  %6 = bitcast %union.tree_node** %type38 to i64**, !dbg !4640
  %7 = load i64*, i64** %6, align 8, !dbg !4640
  %bf.load40 = load i64, i64* %7, align 8, !dbg !4640
  %bf.cast4241 = and i64 %bf.load40, 65535, !dbg !4640
  %cmp43 = icmp eq i64 %bf.cast4241, 6, !dbg !4640
  br i1 %cmp43, label %land.rhs63, label %lor.lhs.false45, !dbg !4640

lor.lhs.false45:                                  ; preds = %if.end36
  %cmp52 = icmp eq i64 %bf.cast4241, 7, !dbg !4640
  br i1 %cmp52, label %land.rhs63, label %lor.lhs.false54, !dbg !4640

lor.lhs.false54:                                  ; preds = %lor.lhs.false45
  %cmp61 = icmp eq i64 %bf.cast4241, 8, !dbg !4640
  br i1 %cmp61, label %land.rhs63, label %land.end87, !dbg !4640

land.rhs63:                                       ; preds = %lor.lhs.false54, %lor.lhs.false45, %if.end36
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4640
  %bf.load65 = load i64, i64* %8, align 8, !dbg !4640
  %bf.cast67113 = and i64 %bf.load65, 65535, !dbg !4640
  %cmp68 = icmp eq i64 %bf.cast67113, 23, !dbg !4640
  br i1 %cmp68, label %land.end87, label %lor.rhs70, !dbg !4640

lor.rhs70:                                        ; preds = %land.rhs63
  %cmp75 = icmp eq i64 %bf.cast67113, 189, !dbg !4640
  br i1 %cmp75, label %land.rhs77, label %land.end87, !dbg !4640

land.rhs77:                                       ; preds = %lor.rhs70
  %bf.cast82115 = and i64 %bf.load65, 8589934592, !dbg !4640
  %tobool83 = icmp ne i64 %bf.cast82115, 0, !dbg !4640
  br label %land.end87

land.end87:                                       ; preds = %land.rhs63, %land.rhs77, %lor.rhs70, %lor.lhs.false54
  %9 = phi i1 [ false, %lor.lhs.false54 ], [ true, %land.rhs63 ], [ false, %lor.rhs70 ], [ %tobool83, %land.rhs77 ], !dbg !4629
  call void @llvm.dbg.value(metadata i1 %9, metadata !4559, metadata !DIExpression()), !dbg !4629
  br i1 %9, label %if.then91, label %if.end93, !dbg !4641

if.then91:                                        ; preds = %land.end87
  %call92 = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %orig_op1) #7, !dbg !4642
  call void @llvm.dbg.value(metadata %union.tree_node* %call92, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %if.end93, !dbg !4644

if.end93:                                         ; preds = %if.then91, %land.end87
  %op1.0 = phi %union.tree_node* [ %call92, %if.then91 ], [ %orig_op1, %land.end87 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !4555, metadata !DIExpression()), !dbg !4629
  %10 = and i1 %5, %9, !dbg !4645
  call void @llvm.dbg.value(metadata i1 %10, metadata !4562, metadata !DIExpression()), !dbg !4629
  br i1 %10, label %if.then103, label %if.end138, !dbg !4646

if.then103:                                       ; preds = %if.end93
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4647
  %bf.load105 = load i64, i64* %11, align 8, !dbg !4647
  %bf.cast107109 = and i64 %bf.load105, 65535, !dbg !4650
  %cmp108 = icmp eq i64 %bf.cast107109, 23, !dbg !4650
  br i1 %cmp108, label %land.rhs110, label %land.end117, !dbg !4651

land.rhs110:                                      ; preds = %if.then103
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4652
  %bf.load112 = load i64, i64* %12, align 8, !dbg !4652
  %bf.cast114112 = and i64 %bf.load112, 65535, !dbg !4653
  %cmp115 = icmp eq i64 %bf.cast114112, 23, !dbg !4653
  br label %land.end117

land.end117:                                      ; preds = %land.rhs110, %if.then103
  %13 = phi i1 [ false, %if.then103 ], [ %cmp115, %land.rhs110 ], !dbg !4654
  %conv119 = zext i1 %13 to i8, !dbg !4655
  call void @llvm.dbg.value(metadata i8 %conv119, metadata !4561, metadata !DIExpression()), !dbg !4629
  br i1 %13, label %land.lhs.true, label %land.end135, !dbg !4656

land.lhs.true:                                    ; preds = %land.end117
  %bf.cast126110 = and i64 %bf.load105, 134217728, !dbg !4657
  %tobool127 = icmp eq i64 %bf.cast126110, 0, !dbg !4657
  br i1 %tobool127, label %land.rhs128, label %land.end135, !dbg !4658

land.rhs128:                                      ; preds = %land.lhs.true
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4659
  %bf.load130 = load i64, i64* %14, align 8, !dbg !4659
  %bf.cast133111 = and i64 %bf.load130, 134217728, !dbg !4660
  %tobool134 = icmp eq i64 %bf.cast133111, 0, !dbg !4660
  br label %land.end135

land.end135:                                      ; preds = %land.lhs.true, %land.rhs128, %land.end117
  %15 = phi i1 [ false, %land.lhs.true ], [ false, %land.end117 ], [ %tobool134, %land.rhs128 ], !dbg !4654
  %conv137 = zext i1 %15 to i8, !dbg !4661
  call void @llvm.dbg.value(metadata i8 %conv137, metadata !4560, metadata !DIExpression()), !dbg !4629
  br label %if.end138, !dbg !4662

if.end138:                                        ; preds = %if.end93, %land.end135
  %int_const_or_overflow.0 = phi i8 [ %conv119, %land.end135 ], [ 0, %if.end93 ], !dbg !4663
  %int_const.0 = phi i8 [ %conv137, %land.end135 ], [ 0, %if.end93 ], !dbg !4663
  call void @llvm.dbg.value(metadata i8 %int_const.0, metadata !4560, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8 %int_const_or_overflow.0, metadata !4561, metadata !DIExpression()), !dbg !4629
  %tobool139 = icmp eq i32 %convert_p, 0, !dbg !4664
  br i1 %tobool139, label %if.end143, label %if.then140, !dbg !4666

if.then140:                                       ; preds = %if.end138
  %call141 = tail call %union.tree_node* @default_conversion(%union.tree_node* %op0.0) #7, !dbg !4667
  call void @llvm.dbg.value(metadata %union.tree_node* %call141, metadata !4554, metadata !DIExpression()), !dbg !4629
  %call142 = tail call %union.tree_node* @default_conversion(%union.tree_node* %op1.0) #7, !dbg !4669
  call void @llvm.dbg.value(metadata %union.tree_node* %call142, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %if.end143, !dbg !4670

if.end143:                                        ; preds = %if.end138, %if.then140
  %op1.1 = phi %union.tree_node* [ %call142, %if.then140 ], [ %op1.0, %if.end138 ], !dbg !4629
  %op0.1 = phi %union.tree_node* [ %call141, %if.then140 ], [ %op0.0, %if.end138 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.1, metadata !4555, metadata !DIExpression()), !dbg !4629
  %type145 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4671
  %16 = load %union.tree_node*, %union.tree_node** %type145, align 8, !dbg !4671
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4547, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4549, metadata !DIExpression()), !dbg !4629
  %type147 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4672
  %17 = load %union.tree_node*, %union.tree_node** %type147, align 8, !dbg !4672
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4548, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4550, metadata !DIExpression()), !dbg !4629
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4673
  %bf.load149 = load i64, i64* %18, align 8, !dbg !4673
  %19 = trunc i64 %bf.load149 to i32, !dbg !4673
  %bf.cast151 = and i32 %19, 65535, !dbg !4673
  call void @llvm.dbg.value(metadata i32 %bf.cast151, metadata !4552, metadata !DIExpression()), !dbg !4629
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4674
  %bf.load153 = load i64, i64* %20, align 8, !dbg !4674
  %21 = trunc i64 %bf.load153 to i32, !dbg !4674
  %bf.cast155 = and i32 %21, 65535, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %bf.cast155, metadata !4553, metadata !DIExpression()), !dbg !4629
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4629
  br label %while.cond, !dbg !4675

while.cond:                                       ; preds = %while.body, %if.end143
  %op0.2 = phi %union.tree_node* [ %op0.1, %if.end143 ], [ %26, %while.body ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2, metadata !4554, metadata !DIExpression()), !dbg !4629
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4675
  %bf.load157 = load i64, i64* %23, align 8, !dbg !4675
  %bf.cast15944 = and i64 %bf.load157, 65535, !dbg !4675
  %cmp160 = icmp eq i64 %bf.cast15944, 116, !dbg !4675
  br i1 %cmp160, label %land.lhs.true176, label %lor.lhs.false162, !dbg !4675

lor.lhs.false162:                                 ; preds = %while.cond
  %24 = or i64 %bf.cast15944, 4, !dbg !4675
  %25 = icmp eq i64 %24, 117, !dbg !4675
  br i1 %25, label %land.lhs.true176, label %while.end, !dbg !4675

land.lhs.true176:                                 ; preds = %lor.lhs.false162, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4675
  %26 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4675
  %cmp177 = icmp eq %union.tree_node* %26, %22, !dbg !4675
  br i1 %cmp177, label %while.end, label %land.rhs179, !dbg !4675

land.rhs179:                                      ; preds = %land.lhs.true176
  %type181 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4675
  %27 = load %union.tree_node*, %union.tree_node** %type181, align 8, !dbg !4675
  %type186 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4675
  %28 = load %union.tree_node*, %union.tree_node** %type186, align 8, !dbg !4675
  %cmp187 = icmp eq %union.tree_node* %27, %28, !dbg !4675
  br i1 %cmp187, label %while.body, label %while.end, !dbg !4675

while.body:                                       ; preds = %land.rhs179
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %while.cond, !dbg !4675, !llvm.loop !4676

while.end:                                        ; preds = %lor.lhs.false162, %land.lhs.true176, %land.rhs179
  %op0.2.lcssa = phi %union.tree_node* [ %op0.2, %lor.lhs.false162 ], [ %op0.2, %land.lhs.true176 ], [ %op0.2, %land.rhs179 ], !dbg !4629
  %.lcssa122 = phi i64* [ %23, %lor.lhs.false162 ], [ %23, %land.lhs.true176 ], [ %23, %land.rhs179 ], !dbg !4675
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2.lcssa, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %while.cond194, !dbg !4677

while.cond194:                                    ; preds = %while.body233, %while.end
  %op1.2 = phi %union.tree_node* [ %op1.1, %while.end ], [ %32, %while.body233 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2, metadata !4555, metadata !DIExpression()), !dbg !4629
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4677
  %bf.load196 = load i64, i64* %29, align 8, !dbg !4677
  %bf.cast19847 = and i64 %bf.load196, 65535, !dbg !4677
  %cmp199 = icmp eq i64 %bf.cast19847, 116, !dbg !4677
  br i1 %cmp199, label %land.lhs.true215, label %lor.lhs.false201, !dbg !4677

lor.lhs.false201:                                 ; preds = %while.cond194
  %30 = or i64 %bf.cast19847, 4, !dbg !4677
  %31 = icmp eq i64 %30, 117, !dbg !4677
  br i1 %31, label %land.lhs.true215, label %while.end237, !dbg !4677

land.lhs.true215:                                 ; preds = %lor.lhs.false201, %while.cond194
  %operands217 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4677
  %32 = load %union.tree_node*, %union.tree_node** %operands217, align 8, !dbg !4677
  %cmp219 = icmp eq %union.tree_node* %32, %22, !dbg !4677
  br i1 %cmp219, label %while.end237, label %land.rhs221, !dbg !4677

land.rhs221:                                      ; preds = %land.lhs.true215
  %type223 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4677
  %33 = load %union.tree_node*, %union.tree_node** %type223, align 8, !dbg !4677
  %type228 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4677
  %34 = load %union.tree_node*, %union.tree_node** %type228, align 8, !dbg !4677
  %cmp229 = icmp eq %union.tree_node* %33, %34, !dbg !4677
  br i1 %cmp229, label %while.body233, label %while.end237, !dbg !4677

while.body233:                                    ; preds = %land.rhs221
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %while.cond194, !dbg !4677, !llvm.loop !4678

while.end237:                                     ; preds = %lor.lhs.false201, %land.lhs.true215, %land.rhs221
  %op1.2.lcssa = phi %union.tree_node* [ %op1.2, %lor.lhs.false201 ], [ %op1.2, %land.lhs.true215 ], [ %op1.2, %land.rhs221 ], !dbg !4629
  %.lcssa = phi i64* [ %29, %lor.lhs.false201 ], [ %29, %land.lhs.true215 ], [ %29, %land.rhs221 ], !dbg !4677
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2.lcssa, metadata !4555, metadata !DIExpression()), !dbg !4629
  %cmp238 = icmp eq i32 %bf.cast151, 0, !dbg !4679
  %cmp241 = icmp eq i32 %bf.cast155, 0, !dbg !4681
  %or.cond = or i1 %cmp238, %cmp241, !dbg !4682
  br i1 %or.cond, label %if.then243, label %if.end244, !dbg !4682

if.then243:                                       ; preds = %while.end237
  br label %cleanup1760, !dbg !4683

if.end244:                                        ; preds = %while.end237
  %35 = load i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 91), align 8, !dbg !4684
  %call245 = tail call i8* %35(i32 %code, %union.tree_node* %16, %union.tree_node* %17) #6, !dbg !4686
  call void @llvm.dbg.value(metadata i8* %call245, metadata !4557, metadata !DIExpression()), !dbg !4629
  %tobool246 = icmp eq i8* %call245, null, !dbg !4687
  br i1 %tobool246, label %if.end248, label %if.then247, !dbg !4688

if.then247:                                       ; preds = %if.end244
  tail call void (i32, i8*, ...) @error_at(i32 %spec.select, i8* nonnull %call245) #6, !dbg !4689
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4691
  br label %cleanup1760, !dbg !4692

if.end248:                                        ; preds = %if.end244
  switch i32 %code, label %sw.default [
    i32 63, label %sw.epilog
    i32 64, label %sw.epilog
    i32 65, label %sw.epilog
    i32 67, label %sw.epilog
    i32 68, label %sw.epilog
    i32 69, label %sw.epilog
    i32 70, label %sw.epilog
    i32 76, label %sw.epilog
  ], !dbg !4693

sw.default:                                       ; preds = %if.end248
  call void @llvm.dbg.value(metadata i8 0, metadata !4574, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog, !dbg !4694

sw.epilog:                                        ; preds = %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %if.end248, %sw.default
  %may_need_excess_precision.0 = phi i32 [ 0, %sw.default ], [ 1, %if.end248 ], [ 1, %if.end248 ], [ 1, %if.end248 ], [ 1, %if.end248 ], [ 1, %if.end248 ], [ 1, %if.end248 ], [ 1, %if.end248 ], [ 1, %if.end248 ]
  %bf.load250 = load i64, i64* %.lcssa122, align 8, !dbg !4696
  %bf.cast25250 = and i64 %bf.load250, 65535, !dbg !4698
  %cmp253 = icmp eq i64 %bf.cast25250, 190, !dbg !4698
  br i1 %cmp253, label %if.then255, label %if.else261, !dbg !4699

if.then255:                                       ; preds = %sw.epilog
  %operands257 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4700
  %37 = load %union.tree_node*, %union.tree_node** %operands257, align 8, !dbg !4700
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !4554, metadata !DIExpression()), !dbg !4629
  %type260 = getelementptr inbounds %union.tree_node, %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4702
  %38 = load %union.tree_node*, %union.tree_node** %type260, align 8, !dbg !4702
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !4547, metadata !DIExpression()), !dbg !4629
  br label %if.end271, !dbg !4703

if.else261:                                       ; preds = %sw.epilog
  %tobool263 = icmp eq i32 %may_need_excess_precision.0, 0, !dbg !4704
  br i1 %tobool263, label %if.end271, label %land.lhs.true264, !dbg !4706

land.lhs.true264:                                 ; preds = %if.else261
  %call265 = tail call %union.tree_node* @excess_precision_type(%union.tree_node* %16) #6, !dbg !4707
  call void @llvm.dbg.value(metadata %union.tree_node* %call265, metadata !4551, metadata !DIExpression()), !dbg !4629
  %cmp266 = icmp eq %union.tree_node* %call265, null, !dbg !4708
  br i1 %cmp266, label %if.end271, label %if.then268, !dbg !4709

if.then268:                                       ; preds = %land.lhs.true264
  call void @llvm.dbg.value(metadata %union.tree_node* %call265, metadata !4547, metadata !DIExpression()), !dbg !4629
  %call269 = tail call %union.tree_node* @convert(%union.tree_node* nonnull %call265, %union.tree_node* %op0.2.lcssa) #6, !dbg !4710
  call void @llvm.dbg.value(metadata %union.tree_node* %call269, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %if.end271, !dbg !4712

if.end271:                                        ; preds = %land.lhs.true264, %if.else261, %if.then268, %if.then255
  %op0.4 = phi %union.tree_node* [ %37, %if.then255 ], [ %call269, %if.then268 ], [ %op0.2.lcssa, %land.lhs.true264 ], [ %op0.2.lcssa, %if.else261 ], !dbg !4713
  %type0.1 = phi %union.tree_node* [ %38, %if.then255 ], [ %call265, %if.then268 ], [ %16, %land.lhs.true264 ], [ %16, %if.else261 ], !dbg !4713
  call void @llvm.dbg.value(metadata %union.tree_node* %type0.1, metadata !4547, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.4, metadata !4554, metadata !DIExpression()), !dbg !4629
  %bf.load273 = load i64, i64* %.lcssa, align 8, !dbg !4714
  %bf.cast27551 = and i64 %bf.load273, 65535, !dbg !4716
  %cmp276 = icmp eq i64 %bf.cast27551, 190, !dbg !4716
  br i1 %cmp276, label %if.then278, label %if.else284, !dbg !4717

if.then278:                                       ; preds = %if.end271
  %operands280 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4718
  %39 = load %union.tree_node*, %union.tree_node** %operands280, align 8, !dbg !4718
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !4555, metadata !DIExpression()), !dbg !4629
  %type283 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4720
  %40 = load %union.tree_node*, %union.tree_node** %type283, align 8, !dbg !4720
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !4548, metadata !DIExpression()), !dbg !4629
  br label %if.end294, !dbg !4721

if.else284:                                       ; preds = %if.end271
  %tobool286 = icmp eq i32 %may_need_excess_precision.0, 0, !dbg !4722
  br i1 %tobool286, label %if.end294, label %land.lhs.true287, !dbg !4724

land.lhs.true287:                                 ; preds = %if.else284
  %call288 = tail call %union.tree_node* @excess_precision_type(%union.tree_node* %17) #6, !dbg !4725
  call void @llvm.dbg.value(metadata %union.tree_node* %call288, metadata !4551, metadata !DIExpression()), !dbg !4629
  %cmp289 = icmp eq %union.tree_node* %call288, null, !dbg !4726
  br i1 %cmp289, label %if.end294, label %if.then291, !dbg !4727

if.then291:                                       ; preds = %land.lhs.true287
  call void @llvm.dbg.value(metadata %union.tree_node* %call288, metadata !4548, metadata !DIExpression()), !dbg !4629
  %call292 = tail call %union.tree_node* @convert(%union.tree_node* nonnull %call288, %union.tree_node* %op1.2.lcssa) #6, !dbg !4728
  call void @llvm.dbg.value(metadata %union.tree_node* %call292, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %if.end294, !dbg !4730

if.end294:                                        ; preds = %land.lhs.true287, %if.else284, %if.then291, %if.then278
  %op1.4 = phi %union.tree_node* [ %39, %if.then278 ], [ %call292, %if.then291 ], [ %op1.2.lcssa, %land.lhs.true287 ], [ %op1.2.lcssa, %if.else284 ], !dbg !4731
  %type1.1 = phi %union.tree_node* [ %40, %if.then278 ], [ %call288, %if.then291 ], [ %17, %land.lhs.true287 ], [ %17, %if.else284 ], !dbg !4731
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.1, metadata !4548, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.4, metadata !4555, metadata !DIExpression()), !dbg !4629
  %call295 = tail call zeroext i8 @objc_compare_types(%union.tree_node* %type0.1, %union.tree_node* %type1.1, i32 -3, %union.tree_node* null) #6, !dbg !4732
  call void @llvm.dbg.value(metadata i8 %call295, metadata !4573, metadata !DIExpression()), !dbg !4629
  switch i32 %code, label %sw.default1197 [
    i32 63, label %sw.bb296
    i32 64, label %sw.bb315
    i32 65, label %sw.epilog1198
    i32 67, label %sw.bb338
    i32 68, label %sw.bb338
    i32 69, label %sw.bb338
    i32 70, label %sw.bb338
    i32 76, label %sw.bb338
    i32 89, label %sw.bb436
    i32 87, label %sw.bb436
    i32 88, label %sw.bb436
    i32 71, label %sw.bb484
    i32 73, label %sw.bb484
    i32 91, label %sw.bb541
    i32 92, label %sw.bb541
    i32 93, label %sw.bb541
    i32 94, label %sw.bb541
    i32 95, label %sw.bb541
    i32 84, label %sw.bb682
    i32 83, label %sw.bb738
    i32 101, label %sw.bb792
    i32 102, label %sw.bb792
    i32 98, label %sw.bb1052
    i32 100, label %sw.bb1052
    i32 97, label %sw.bb1052
    i32 99, label %sw.bb1052
  ], !dbg !4733

sw.bb296:                                         ; preds = %if.end294
  %cmp297 = icmp eq i32 %bf.cast151, 10, !dbg !4734
  %cmp300 = icmp eq i32 %bf.cast155, 8, !dbg !4736
  %or.cond6 = and i1 %cmp297, %cmp300, !dbg !4737
  br i1 %or.cond6, label %if.then302, label %if.else304, !dbg !4737

if.then302:                                       ; preds = %sw.bb296
  %call303 = tail call %union.tree_node* @pointer_int_sum(i32 %spec.select, i32 63, %union.tree_node* %op0.4, %union.tree_node* %op1.4) #6, !dbg !4738
  call void @llvm.dbg.value(metadata %union.tree_node* %call303, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %return_build_binary_op, !dbg !4740

if.else304:                                       ; preds = %sw.bb296
  %cmp305 = icmp eq i32 %bf.cast155, 10, !dbg !4741
  %cmp308 = icmp eq i32 %bf.cast151, 8, !dbg !4743
  %or.cond7 = and i1 %cmp305, %cmp308, !dbg !4744
  br i1 %or.cond7, label %if.then310, label %sw.epilog1198, !dbg !4744

if.then310:                                       ; preds = %if.else304
  %call311 = tail call %union.tree_node* @pointer_int_sum(i32 %spec.select, i32 63, %union.tree_node* %op1.4, %union.tree_node* %op0.4) #6, !dbg !4745
  call void @llvm.dbg.value(metadata %union.tree_node* %call311, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %return_build_binary_op, !dbg !4747

sw.bb315:                                         ; preds = %if.end294
  %cmp316 = icmp eq i32 %bf.cast151, 10, !dbg !4748
  %cmp319 = icmp eq i32 %bf.cast155, 10, !dbg !4750
  %or.cond8 = and i1 %cmp316, %cmp319, !dbg !4751
  br i1 %or.cond8, label %land.lhs.true321, label %if.else326, !dbg !4751

land.lhs.true321:                                 ; preds = %sw.bb315
  %call322 = tail call fastcc i32 @comp_target_types(i32 %spec.select, %union.tree_node* %type0.1, %union.tree_node* %type1.1) #7, !dbg !4752
  %tobool323 = icmp eq i32 %call322, 0, !dbg !4752
  br i1 %tobool323, label %if.else326, label %if.then324, !dbg !4753

if.then324:                                       ; preds = %land.lhs.true321
  %call325 = tail call fastcc %union.tree_node* @pointer_diff(i32 %spec.select, %union.tree_node* %op0.4, %union.tree_node* %op1.4) #7, !dbg !4754
  call void @llvm.dbg.value(metadata %union.tree_node* %call325, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %return_build_binary_op, !dbg !4756

if.else326:                                       ; preds = %land.lhs.true321, %sw.bb315
  %cmp330 = icmp eq i32 %bf.cast155, 8, !dbg !4757
  %or.cond9 = and i1 %cmp316, %cmp330, !dbg !4759
  br i1 %or.cond9, label %if.then332, label %sw.epilog1198, !dbg !4759

if.then332:                                       ; preds = %if.else326
  %call333 = tail call %union.tree_node* @pointer_int_sum(i32 %spec.select, i32 64, %union.tree_node* %op0.4, %union.tree_node* %op1.4) #6, !dbg !4760
  call void @llvm.dbg.value(metadata %union.tree_node* %call333, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %return_build_binary_op, !dbg !4762

sw.bb338:                                         ; preds = %if.end294, %if.end294, %if.end294, %if.end294, %if.end294
  tail call void @warn_for_div_by_zero(i32 %spec.select, %union.tree_node* %op1.4) #6, !dbg !4763
  %trunc105 = trunc i64 %bf.load149 to i16, !dbg !4764
  switch i16 %trunc105, label %sw.epilog1198 [
    i16 8, label %land.lhs.true353
    i16 9, label %land.lhs.true353
    i16 11, label %land.lhs.true353
    i16 13, label %land.lhs.true353
    i16 14, label %land.lhs.true353
  ], !dbg !4764

land.lhs.true353:                                 ; preds = %sw.bb338, %sw.bb338, %sw.bb338, %sw.bb338, %sw.bb338
  %trunc106 = trunc i64 %bf.load153 to i16, !dbg !4765
  switch i16 %trunc106, label %sw.epilog1198 [
    i16 8, label %if.then368
    i16 9, label %if.then368
    i16 11, label %if.then368
    i16 13, label %if.then368
    i16 14, label %if.then368
  ], !dbg !4765

if.then368:                                       ; preds = %land.lhs.true353, %land.lhs.true353, %land.lhs.true353, %land.lhs.true353, %land.lhs.true353
  call void @llvm.dbg.value(metadata i32 %bf.cast151, metadata !4575, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i32 %bf.cast155, metadata !4579, metadata !DIExpression()), !dbg !4766
  %bf.cast151.off = add nsw i32 %bf.cast151, -13, !dbg !4767
  %switch = icmp ult i32 %bf.cast151.off, 2, !dbg !4767
  br i1 %switch, label %if.then374, label %if.end383, !dbg !4767

if.then374:                                       ; preds = %if.then368
  %type376 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4769
  %41 = bitcast %union.tree_node** %type376 to %struct.tree_common**, !dbg !4769
  %42 = load %struct.tree_common*, %struct.tree_common** %41, align 8, !dbg !4769
  %type378 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %42, i64 0, i32 2, !dbg !4769
  %43 = bitcast %union.tree_node** %type378 to i64**, !dbg !4769
  %44 = load i64*, i64** %43, align 8, !dbg !4769
  %bf.load380 = load i64, i64* %44, align 8, !dbg !4769
  %45 = trunc i64 %bf.load380 to i32, !dbg !4769
  %bf.cast382 = and i32 %45, 65535, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %bf.cast382, metadata !4575, metadata !DIExpression()), !dbg !4766
  br label %if.end383, !dbg !4770

if.end383:                                        ; preds = %if.then368, %if.then374
  %tcode0.0 = phi i32 [ %bf.cast382, %if.then374 ], [ %bf.cast151, %if.then368 ], !dbg !4766
  call void @llvm.dbg.value(metadata i32 %tcode0.0, metadata !4575, metadata !DIExpression()), !dbg !4766
  %bf.cast155.off = add nsw i32 %bf.cast155, -13, !dbg !4771
  %switch37 = icmp ult i32 %bf.cast155.off, 2, !dbg !4771
  br i1 %switch37, label %if.then389, label %if.end398, !dbg !4771

if.then389:                                       ; preds = %if.end383
  %type391 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4773
  %46 = bitcast %union.tree_node** %type391 to %struct.tree_common**, !dbg !4773
  %47 = load %struct.tree_common*, %struct.tree_common** %46, align 8, !dbg !4773
  %type393 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i64 0, i32 2, !dbg !4773
  %48 = bitcast %union.tree_node** %type393 to i64**, !dbg !4773
  %49 = load i64*, i64** %48, align 8, !dbg !4773
  %bf.load395 = load i64, i64* %49, align 8, !dbg !4773
  %50 = trunc i64 %bf.load395 to i32, !dbg !4773
  %bf.cast397 = and i32 %50, 65535, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %bf.cast397, metadata !4579, metadata !DIExpression()), !dbg !4766
  br label %if.end398, !dbg !4774

if.end398:                                        ; preds = %if.end383, %if.then389
  %tcode1.0 = phi i32 [ %bf.cast397, %if.then389 ], [ %bf.cast155, %if.end383 ], !dbg !4766
  call void @llvm.dbg.value(metadata i32 %tcode1.0, metadata !4579, metadata !DIExpression()), !dbg !4766
  %cmp399 = icmp eq i32 %tcode0.0, 8, !dbg !4775
  %cmp402 = icmp eq i32 %tcode1.0, 8, !dbg !4777
  %or.cond10 = and i1 %cmp399, %cmp402, !dbg !4778
  br i1 %or.cond10, label %if.else411, label %lor.lhs.false404, !dbg !4778

lor.lhs.false404:                                 ; preds = %if.end398
  %cmp405 = icmp eq i32 %tcode0.0, 11, !dbg !4779
  %cmp408 = icmp eq i32 %tcode1.0, 11, !dbg !4780
  %or.cond11 = and i1 %cmp405, %cmp408, !dbg !4781
  br i1 %or.cond11, label %if.else411, label %sw.epilog1198, !dbg !4781

if.else411:                                       ; preds = %lor.lhs.false404, %if.end398
  %51 = load i64*, i64** %2, align 8, !dbg !4782
  %bf.load415 = load i64, i64* %51, align 8, !dbg !4782
  %bf.cast418107 = and i64 %bf.load415, 2097152, !dbg !4782
  %tobool419 = icmp eq i64 %bf.cast418107, 0, !dbg !4782
  br i1 %tobool419, label %lor.rhs420, label %lor.end433, !dbg !4783

lor.rhs420:                                       ; preds = %if.else411
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4784
  %bf.load422 = load i64, i64* %52, align 8, !dbg !4784
  %bf.cast424108 = and i64 %bf.load422, 65535, !dbg !4785
  %cmp425 = icmp eq i64 %bf.cast424108, 23, !dbg !4785
  br i1 %cmp425, label %land.rhs427, label %lor.end433, !dbg !4786

land.rhs427:                                      ; preds = %lor.rhs420
  %call428 = tail call i32 @integer_all_onesp(%union.tree_node* %op1.4) #6, !dbg !4787
  %tobool429 = icmp eq i32 %call428, 0, !dbg !4788
  br label %lor.end433

lor.end433:                                       ; preds = %if.else411, %lor.rhs420, %land.rhs427
  %53 = phi i1 [ true, %if.else411 ], [ false, %lor.rhs420 ], [ %tobool429, %land.rhs427 ]
  %lor.ext = zext i1 %53 to i32, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %lor.ext, metadata !4569, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog1198

sw.bb436:                                         ; preds = %if.end294, %if.end294, %if.end294
  %cmp437 = icmp eq i32 %bf.cast151, 8, !dbg !4789
  %cmp440 = icmp eq i32 %bf.cast155, 8, !dbg !4791
  %or.cond12 = and i1 %cmp437, %cmp440, !dbg !4792
  br i1 %or.cond12, label %sw.epilog1198, label %if.else443, !dbg !4792

if.else443:                                       ; preds = %sw.bb436
  %cmp444 = icmp eq i32 %bf.cast151, 14, !dbg !4793
  %cmp447 = icmp eq i32 %bf.cast155, 14, !dbg !4795
  %or.cond13 = and i1 %cmp444, %cmp447, !dbg !4796
  br i1 %or.cond13, label %land.lhs.true449, label %sw.epilog1198, !dbg !4796

land.lhs.true449:                                 ; preds = %if.else443
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4797
  %bf.load451 = load i64, i64* %54, align 8, !dbg !4797
  %bf.cast453101 = and i64 %bf.load451, 65535, !dbg !4797
  %cmp454 = icmp eq i64 %bf.cast453101, 14, !dbg !4797
  br i1 %cmp454, label %land.lhs.true456, label %land.lhs.true465, !dbg !4797

land.lhs.true456:                                 ; preds = %land.lhs.true449
  %type458 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4797
  %55 = bitcast %union.tree_node** %type458 to i64**, !dbg !4797
  %56 = load i64*, i64** %55, align 8, !dbg !4797
  %bf.load460 = load i64, i64* %56, align 8, !dbg !4797
  %bf.cast462104 = and i64 %bf.load460, 65535, !dbg !4797
  %cmp463 = icmp eq i64 %bf.cast462104, 9, !dbg !4797
  br i1 %cmp463, label %sw.epilog1198, label %land.lhs.true465, !dbg !4798

land.lhs.true465:                                 ; preds = %land.lhs.true456, %land.lhs.true449
  %57 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4799
  %bf.load467 = load i64, i64* %57, align 8, !dbg !4799
  %bf.cast469102 = and i64 %bf.load467, 65535, !dbg !4799
  %cmp470 = icmp eq i64 %bf.cast469102, 14, !dbg !4799
  br i1 %cmp470, label %land.lhs.true472, label %if.then481, !dbg !4799

land.lhs.true472:                                 ; preds = %land.lhs.true465
  %type474 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4799
  %58 = bitcast %union.tree_node** %type474 to i64**, !dbg !4799
  %59 = load i64*, i64** %58, align 8, !dbg !4799
  %bf.load476 = load i64, i64* %59, align 8, !dbg !4799
  %bf.cast478103 = and i64 %bf.load476, 65535, !dbg !4799
  %cmp479 = icmp eq i64 %bf.cast478103, 9, !dbg !4799
  br i1 %cmp479, label %sw.epilog1198, label %if.then481, !dbg !4800

if.then481:                                       ; preds = %land.lhs.true472, %land.lhs.true465
  call void @llvm.dbg.value(metadata i32 1, metadata !4572, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog1198, !dbg !4801

sw.bb484:                                         ; preds = %if.end294, %if.end294
  tail call void @warn_for_div_by_zero(i32 %spec.select, %union.tree_node* %op1.4) #6, !dbg !4802
  %cmp485 = icmp eq i32 %bf.cast151, 14, !dbg !4803
  %cmp488 = icmp eq i32 %bf.cast155, 14, !dbg !4805
  %or.cond14 = and i1 %cmp485, %cmp488, !dbg !4806
  br i1 %or.cond14, label %land.lhs.true490, label %if.else509, !dbg !4806

land.lhs.true490:                                 ; preds = %sw.bb484
  %type492 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4807
  %60 = bitcast %union.tree_node** %type492 to i64**, !dbg !4807
  %61 = load i64*, i64** %60, align 8, !dbg !4807
  %bf.load494 = load i64, i64* %61, align 8, !dbg !4807
  %bf.cast49699 = and i64 %bf.load494, 65535, !dbg !4808
  %cmp497 = icmp eq i64 %bf.cast49699, 8, !dbg !4808
  br i1 %cmp497, label %land.lhs.true499, label %if.else509, !dbg !4809

land.lhs.true499:                                 ; preds = %land.lhs.true490
  %type501 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4810
  %62 = bitcast %union.tree_node** %type501 to i64**, !dbg !4810
  %63 = load i64*, i64** %62, align 8, !dbg !4810
  %bf.load503 = load i64, i64* %63, align 8, !dbg !4810
  %bf.cast505100 = and i64 %bf.load503, 65535, !dbg !4811
  %cmp506 = icmp eq i64 %bf.cast505100, 8, !dbg !4811
  br i1 %cmp506, label %sw.epilog1198, label %if.else509, !dbg !4812

if.else509:                                       ; preds = %land.lhs.true499, %land.lhs.true490, %sw.bb484
  %cmp510 = icmp eq i32 %bf.cast151, 8, !dbg !4813
  %cmp513 = icmp eq i32 %bf.cast155, 8, !dbg !4815
  %or.cond15 = and i1 %cmp510, %cmp513, !dbg !4816
  br i1 %or.cond15, label %if.then515, label %sw.epilog1198, !dbg !4816

if.then515:                                       ; preds = %if.else509
  %64 = load i64*, i64** %2, align 8, !dbg !4817
  %bf.load519 = load i64, i64* %64, align 8, !dbg !4817
  %bf.cast52297 = and i64 %bf.load519, 2097152, !dbg !4817
  %tobool523 = icmp eq i64 %bf.cast52297, 0, !dbg !4817
  br i1 %tobool523, label %lor.rhs524, label %lor.end537, !dbg !4819

lor.rhs524:                                       ; preds = %if.then515
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4820
  %bf.load526 = load i64, i64* %65, align 8, !dbg !4820
  %bf.cast52898 = and i64 %bf.load526, 65535, !dbg !4821
  %cmp529 = icmp eq i64 %bf.cast52898, 23, !dbg !4821
  br i1 %cmp529, label %land.rhs531, label %lor.end537, !dbg !4822

land.rhs531:                                      ; preds = %lor.rhs524
  %call532 = tail call i32 @integer_all_onesp(%union.tree_node* %op1.4) #6, !dbg !4823
  %tobool533 = icmp eq i32 %call532, 0, !dbg !4824
  br label %lor.end537

lor.end537:                                       ; preds = %if.then515, %lor.rhs524, %land.rhs531
  %66 = phi i1 [ true, %if.then515 ], [ false, %lor.rhs524 ], [ %tobool533, %land.rhs531 ]
  %lor.ext538 = zext i1 %66 to i32, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %lor.ext538, metadata !4569, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 1, metadata !4572, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog1198, !dbg !4825

sw.bb541:                                         ; preds = %if.end294, %if.end294, %if.end294, %if.end294, %if.end294
  %trunc87 = trunc i64 %bf.load149 to i16, !dbg !4826
  switch i16 %trunc87, label %if.end574 [
    i16 8, label %land.lhs.true556
    i16 10, label %land.lhs.true556
    i16 9, label %land.lhs.true556
    i16 13, label %land.lhs.true556
    i16 11, label %land.lhs.true556
  ], !dbg !4826

land.lhs.true556:                                 ; preds = %sw.bb541, %sw.bb541, %sw.bb541, %sw.bb541, %sw.bb541
  %trunc88 = trunc i64 %bf.load153 to i16, !dbg !4828
  switch i16 %trunc88, label %if.end574 [
    i16 8, label %if.then571
    i16 10, label %if.then571
    i16 9, label %if.then571
    i16 13, label %if.then571
    i16 11, label %if.then571
  ], !dbg !4828

if.then571:                                       ; preds = %land.lhs.true556, %land.lhs.true556, %land.lhs.true556, %land.lhs.true556, %land.lhs.true556
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4829
  call void @llvm.dbg.value(metadata %union.tree_node* %67, metadata !4564, metadata !DIExpression()), !dbg !4629
  %call572 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %spec.select, %union.tree_node* %op0.4) #6, !dbg !4831
  call void @llvm.dbg.value(metadata %union.tree_node* %call572, metadata !4554, metadata !DIExpression()), !dbg !4629
  %call573 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %spec.select, %union.tree_node* %op1.4) #6, !dbg !4832
  call void @llvm.dbg.value(metadata %union.tree_node* %call573, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 1, metadata !4566, metadata !DIExpression()), !dbg !4629
  br label %if.end574, !dbg !4833

if.end574:                                        ; preds = %land.lhs.true556, %sw.bb541, %if.then571
  %converted.0 = phi i32 [ 1, %if.then571 ], [ 0, %sw.bb541 ], [ 0, %land.lhs.true556 ], !dbg !4629
  %result_type.0 = phi %union.tree_node* [ %67, %if.then571 ], [ null, %sw.bb541 ], [ null, %land.lhs.true556 ], !dbg !4629
  %op1.5 = phi %union.tree_node* [ %call573, %if.then571 ], [ %op1.4, %sw.bb541 ], [ %op1.4, %land.lhs.true556 ], !dbg !4629
  %op0.5 = phi %union.tree_node* [ %call572, %if.then571 ], [ %op0.4, %sw.bb541 ], [ %op0.4, %land.lhs.true556 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.5, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.5, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.0, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.0, metadata !4566, metadata !DIExpression()), !dbg !4629
  switch i32 %code, label %sw.epilog1198 [
    i32 91, label %if.then577
    i32 92, label %if.then630
  ], !dbg !4834

if.then577:                                       ; preds = %if.end574
  br i1 %10, label %land.lhs.true580, label %land.end599, !dbg !4835

land.lhs.true580:                                 ; preds = %if.then577
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4838
  %bf.load582 = load i64, i64* %68, align 8, !dbg !4838
  %bf.cast58495 = and i64 %bf.load582, 65535, !dbg !4839
  %cmp585 = icmp eq i64 %bf.cast58495, 23, !dbg !4839
  br i1 %cmp585, label %land.rhs587, label %land.end599, !dbg !4840

land.rhs587:                                      ; preds = %land.lhs.true580
  %69 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !4841
  %cmp588 = icmp eq %union.tree_node* %op0.5, %69, !dbg !4842
  br i1 %cmp588, label %land.end599, label %lor.rhs590, !dbg !4843

lor.rhs590:                                       ; preds = %land.rhs587
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4844
  %bf.load592 = load i64, i64* %70, align 8, !dbg !4844
  %bf.cast59496 = and i64 %bf.load592, 65535, !dbg !4845
  %cmp595 = icmp eq i64 %bf.cast59496, 23, !dbg !4845
  br label %land.end599, !dbg !4843

land.end599:                                      ; preds = %land.rhs587, %lor.rhs590, %land.lhs.true580, %if.then577
  %71 = phi i1 [ false, %land.lhs.true580 ], [ false, %if.then577 ], [ true, %land.rhs587 ], [ %cmp595, %lor.rhs590 ], !dbg !4846
  %conv601 = zext i1 %71 to i8, !dbg !4847
  call void @llvm.dbg.value(metadata i8 %conv601, metadata !4561, metadata !DIExpression()), !dbg !4629
  br i1 %71, label %land.lhs.true604, label %land.end624, !dbg !4848

land.lhs.true604:                                 ; preds = %land.end599
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4849
  %bf.load606 = load i64, i64* %72, align 8, !dbg !4849
  %bf.cast60993 = and i64 %bf.load606, 134217728, !dbg !4849
  %tobool610 = icmp eq i64 %bf.cast60993, 0, !dbg !4849
  br i1 %tobool610, label %land.rhs611, label %land.end624, !dbg !4850

land.rhs611:                                      ; preds = %land.lhs.true604
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !4851
  %cmp612 = icmp eq %union.tree_node* %op0.5, %73, !dbg !4852
  br i1 %cmp612, label %land.end624, label %lor.rhs614, !dbg !4853

lor.rhs614:                                       ; preds = %land.rhs611
  %74 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4854
  %bf.load616 = load i64, i64* %74, align 8, !dbg !4854
  %bf.cast61994 = and i64 %bf.load616, 134217728, !dbg !4855
  %tobool620 = icmp eq i64 %bf.cast61994, 0, !dbg !4855
  br label %land.end624, !dbg !4853

land.end624:                                      ; preds = %land.lhs.true604, %land.rhs611, %lor.rhs614, %land.end599
  %75 = phi i1 [ false, %land.lhs.true604 ], [ false, %land.end599 ], [ true, %land.rhs611 ], [ %tobool620, %lor.rhs614 ], !dbg !4846
  %conv626 = zext i1 %75 to i8, !dbg !4856
  call void @llvm.dbg.value(metadata i8 %conv626, metadata !4560, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog1198, !dbg !4857

if.then630:                                       ; preds = %if.end574
  br i1 %10, label %land.lhs.true633, label %land.end652, !dbg !4858

land.lhs.true633:                                 ; preds = %if.then630
  %76 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4861
  %bf.load635 = load i64, i64* %76, align 8, !dbg !4861
  %bf.cast63791 = and i64 %bf.load635, 65535, !dbg !4862
  %cmp638 = icmp eq i64 %bf.cast63791, 23, !dbg !4862
  br i1 %cmp638, label %land.rhs640, label %land.end652, !dbg !4863

land.rhs640:                                      ; preds = %land.lhs.true633
  %77 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !4864
  %cmp641 = icmp eq %union.tree_node* %op0.5, %77, !dbg !4865
  br i1 %cmp641, label %land.end652, label %lor.rhs643, !dbg !4866

lor.rhs643:                                       ; preds = %land.rhs640
  %78 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4867
  %bf.load645 = load i64, i64* %78, align 8, !dbg !4867
  %bf.cast64792 = and i64 %bf.load645, 65535, !dbg !4868
  %cmp648 = icmp eq i64 %bf.cast64792, 23, !dbg !4868
  br label %land.end652, !dbg !4866

land.end652:                                      ; preds = %land.rhs640, %lor.rhs643, %land.lhs.true633, %if.then630
  %79 = phi i1 [ false, %land.lhs.true633 ], [ false, %if.then630 ], [ true, %land.rhs640 ], [ %cmp648, %lor.rhs643 ], !dbg !4869
  %conv654 = zext i1 %79 to i8, !dbg !4870
  call void @llvm.dbg.value(metadata i8 %conv654, metadata !4561, metadata !DIExpression()), !dbg !4629
  br i1 %79, label %land.lhs.true657, label %land.end677, !dbg !4871

land.lhs.true657:                                 ; preds = %land.end652
  %80 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4872
  %bf.load659 = load i64, i64* %80, align 8, !dbg !4872
  %bf.cast66289 = and i64 %bf.load659, 134217728, !dbg !4872
  %tobool663 = icmp eq i64 %bf.cast66289, 0, !dbg !4872
  br i1 %tobool663, label %land.rhs664, label %land.end677, !dbg !4873

land.rhs664:                                      ; preds = %land.lhs.true657
  %81 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !4874
  %cmp665 = icmp eq %union.tree_node* %op0.5, %81, !dbg !4875
  br i1 %cmp665, label %land.end677, label %lor.rhs667, !dbg !4876

lor.rhs667:                                       ; preds = %land.rhs664
  %82 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4877
  %bf.load669 = load i64, i64* %82, align 8, !dbg !4877
  %bf.cast67290 = and i64 %bf.load669, 134217728, !dbg !4878
  %tobool673 = icmp eq i64 %bf.cast67290, 0, !dbg !4878
  br label %land.end677, !dbg !4876

land.end677:                                      ; preds = %land.lhs.true657, %land.rhs664, %lor.rhs667, %land.end652
  %83 = phi i1 [ false, %land.lhs.true657 ], [ false, %land.end652 ], [ true, %land.rhs664 ], [ %tobool673, %lor.rhs667 ], !dbg !4869
  %conv679 = zext i1 %83 to i8, !dbg !4879
  call void @llvm.dbg.value(metadata i8 %conv679, metadata !4560, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog1198, !dbg !4880

sw.bb682:                                         ; preds = %if.end294
  %trunc85 = trunc i64 %bf.load149 to i16, !dbg !4881
  switch i16 %trunc85, label %sw.epilog1198 [
    i16 8, label %land.lhs.true688
    i16 11, label %land.lhs.true688
  ], !dbg !4881

land.lhs.true688:                                 ; preds = %sw.bb682, %sw.bb682
  %cmp689 = icmp eq i32 %bf.cast155, 8, !dbg !4883
  br i1 %cmp689, label %if.then691, label %sw.epilog1198, !dbg !4884

if.then691:                                       ; preds = %land.lhs.true688
  %84 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4885
  %bf.load693 = load i64, i64* %84, align 8, !dbg !4885
  %bf.cast69586 = and i64 %bf.load693, 65535, !dbg !4888
  %cmp696 = icmp eq i64 %bf.cast69586, 23, !dbg !4888
  br i1 %cmp696, label %if.then698, label %if.end728, !dbg !4889

if.then698:                                       ; preds = %if.then691
  %call699 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %op1.4) #6, !dbg !4890
  %cmp700 = icmp slt i32 %call699, 0, !dbg !4893
  br i1 %cmp700, label %if.then702, label %if.else708, !dbg !4894

if.then702:                                       ; preds = %if.then698
  call void @llvm.dbg.value(metadata i8 0, metadata !4560, metadata !DIExpression()), !dbg !4629
  %85 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4895
  %cmp703 = icmp eq i32 %85, 0, !dbg !4898
  br i1 %cmp703, label %if.then705, label %if.end728, !dbg !4899

if.then705:                                       ; preds = %if.then702
  %call706 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.126, i64 0, i64 0)) #6, !dbg !4900
  br label %if.end728, !dbg !4900

if.else708:                                       ; preds = %if.then698
  %call709 = tail call i32 @integer_zerop(%union.tree_node* %op1.4) #6, !dbg !4901
  %tobool710 = icmp eq i32 %call709, 0, !dbg !4901
  %spec.select16 = zext i1 %tobool710 to i32, !dbg !4904
  call void @llvm.dbg.value(metadata i32 %spec.select16, metadata !4571, metadata !DIExpression()), !dbg !4629
  %type713 = bitcast %union.tree_node* %type0.1 to %struct.tree_type*, !dbg !4905
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type713, i64 0, i32 6, !dbg !4905
  %bf.load714 = load i32, i32* %precision, align 4, !dbg !4905
  %bf.clear715 = and i32 %bf.load714, 1023, !dbg !4905
  %conv716 = zext i32 %bf.clear715 to i64, !dbg !4905
  %call717 = tail call i32 @compare_tree_int(%union.tree_node* %op1.4, i64 %conv716) #6, !dbg !4907
  %cmp718 = icmp sgt i32 %call717, -1, !dbg !4908
  br i1 %cmp718, label %if.then720, label %if.end728, !dbg !4909

if.then720:                                       ; preds = %if.else708
  call void @llvm.dbg.value(metadata i8 0, metadata !4560, metadata !DIExpression()), !dbg !4629
  %86 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4910
  %cmp721 = icmp eq i32 %86, 0, !dbg !4913
  br i1 %cmp721, label %if.then723, label %if.end728, !dbg !4914

if.then723:                                       ; preds = %if.then720
  %call724 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.127, i64 0, i64 0)) #6, !dbg !4915
  br label %if.end728, !dbg !4915

if.end728:                                        ; preds = %if.then705, %if.then702, %if.then720, %if.then723, %if.else708, %if.then691
  %int_const.5 = phi i8 [ %int_const.0, %if.then691 ], [ 0, %if.then705 ], [ 0, %if.then702 ], [ %int_const.0, %if.else708 ], [ 0, %if.then723 ], [ 0, %if.then720 ], !dbg !4629
  %short_shift.2 = phi i32 [ 0, %if.then691 ], [ 0, %if.then705 ], [ 0, %if.then702 ], [ %spec.select16, %if.else708 ], [ %spec.select16, %if.then723 ], [ %spec.select16, %if.then720 ], !dbg !4916
  call void @llvm.dbg.value(metadata i32 %short_shift.2, metadata !4571, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8 %int_const.5, metadata !4560, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %type0.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %type730 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4917
  %87 = bitcast %union.tree_node** %type730 to %struct.tree_type**, !dbg !4917
  %88 = load %struct.tree_type*, %struct.tree_type** %87, align 8, !dbg !4917
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %88, i64 0, i32 16, !dbg !4917
  %89 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !4917
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4919
  %cmp732 = icmp eq %union.tree_node* %89, %90, !dbg !4920
  br i1 %cmp732, label %sw.epilog1198, label %if.then734, !dbg !4921

if.then734:                                       ; preds = %if.end728
  %call735 = tail call %union.tree_node* @convert(%union.tree_node* %90, %union.tree_node* %op1.4) #6, !dbg !4922
  call void @llvm.dbg.value(metadata %union.tree_node* %call735, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog1198, !dbg !4923

sw.bb738:                                         ; preds = %if.end294
  %trunc83 = trunc i64 %bf.load149 to i16, !dbg !4924
  switch i16 %trunc83, label %sw.epilog1198 [
    i16 8, label %land.lhs.true744
    i16 11, label %land.lhs.true744
  ], !dbg !4924

land.lhs.true744:                                 ; preds = %sw.bb738, %sw.bb738
  %cmp745 = icmp eq i32 %bf.cast155, 8, !dbg !4926
  br i1 %cmp745, label %if.then747, label %sw.epilog1198, !dbg !4927

if.then747:                                       ; preds = %land.lhs.true744
  %91 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4928
  %bf.load749 = load i64, i64* %91, align 8, !dbg !4928
  %bf.cast75184 = and i64 %bf.load749, 65535, !dbg !4931
  %cmp752 = icmp eq i64 %bf.cast75184, 23, !dbg !4931
  br i1 %cmp752, label %if.then754, label %if.end781, !dbg !4932

if.then754:                                       ; preds = %if.then747
  %call755 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %op1.4) #6, !dbg !4933
  %cmp756 = icmp slt i32 %call755, 0, !dbg !4936
  br i1 %cmp756, label %if.then758, label %if.else764, !dbg !4937

if.then758:                                       ; preds = %if.then754
  call void @llvm.dbg.value(metadata i8 0, metadata !4560, metadata !DIExpression()), !dbg !4629
  %92 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4938
  %cmp759 = icmp eq i32 %92, 0, !dbg !4941
  br i1 %cmp759, label %if.then761, label %if.end781, !dbg !4942

if.then761:                                       ; preds = %if.then758
  %call762 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i64 0, i64 0)) #6, !dbg !4943
  br label %if.end781, !dbg !4943

if.else764:                                       ; preds = %if.then754
  %type765 = bitcast %union.tree_node* %type0.1 to %struct.tree_type*, !dbg !4944
  %precision766 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type765, i64 0, i32 6, !dbg !4944
  %bf.load767 = load i32, i32* %precision766, align 4, !dbg !4944
  %bf.clear768 = and i32 %bf.load767, 1023, !dbg !4944
  %conv769 = zext i32 %bf.clear768 to i64, !dbg !4944
  %call770 = tail call i32 @compare_tree_int(%union.tree_node* %op1.4, i64 %conv769) #6, !dbg !4946
  %cmp771 = icmp sgt i32 %call770, -1, !dbg !4947
  br i1 %cmp771, label %if.then773, label %if.end781, !dbg !4948

if.then773:                                       ; preds = %if.else764
  call void @llvm.dbg.value(metadata i8 0, metadata !4560, metadata !DIExpression()), !dbg !4629
  %93 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4949
  %cmp774 = icmp eq i32 %93, 0, !dbg !4952
  br i1 %cmp774, label %if.then776, label %if.end781, !dbg !4953

if.then776:                                       ; preds = %if.then773
  %call777 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.129, i64 0, i64 0)) #6, !dbg !4954
  br label %if.end781, !dbg !4954

if.end781:                                        ; preds = %if.then761, %if.then758, %if.then773, %if.then776, %if.else764, %if.then747
  %int_const.9 = phi i8 [ %int_const.0, %if.then747 ], [ 0, %if.then761 ], [ 0, %if.then758 ], [ %int_const.0, %if.else764 ], [ 0, %if.then776 ], [ 0, %if.then773 ], !dbg !4629
  call void @llvm.dbg.value(metadata i8 %int_const.9, metadata !4560, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %type0.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %type783 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4955
  %94 = bitcast %union.tree_node** %type783 to %struct.tree_type**, !dbg !4955
  %95 = load %struct.tree_type*, %struct.tree_type** %94, align 8, !dbg !4955
  %main_variant785 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %95, i64 0, i32 16, !dbg !4955
  %96 = load %union.tree_node*, %union.tree_node** %main_variant785, align 8, !dbg !4955
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4957
  %cmp786 = icmp eq %union.tree_node* %96, %97, !dbg !4958
  br i1 %cmp786, label %sw.epilog1198, label %if.then788, !dbg !4959

if.then788:                                       ; preds = %if.end781
  %call789 = tail call %union.tree_node* @convert(%union.tree_node* %97, %union.tree_node* %op1.4) #6, !dbg !4960
  call void @llvm.dbg.value(metadata %union.tree_node* %call789, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %sw.epilog1198, !dbg !4961

sw.bb792:                                         ; preds = %if.end294, %if.end294
  %98 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4962
  %bf.load794 = load i64, i64* %98, align 8, !dbg !4962
  %bf.cast79667 = and i64 %bf.load794, 65535, !dbg !4962
  %cmp797 = icmp eq i64 %bf.cast79667, 9, !dbg !4962
  br i1 %cmp797, label %if.then852, label %lor.lhs.false799, !dbg !4962

lor.lhs.false799:                                 ; preds = %sw.bb792
  %cmp804 = icmp eq i64 %bf.cast79667, 13, !dbg !4962
  br i1 %cmp804, label %land.lhs.true813, label %lor.lhs.false806, !dbg !4962

lor.lhs.false806:                                 ; preds = %lor.lhs.false799
  %cmp811 = icmp eq i64 %bf.cast79667, 14, !dbg !4962
  br i1 %cmp811, label %land.lhs.true813, label %lor.lhs.false822, !dbg !4962

land.lhs.true813:                                 ; preds = %lor.lhs.false806, %lor.lhs.false799
  %type815 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4962
  %99 = bitcast %union.tree_node** %type815 to i64**, !dbg !4962
  %100 = load i64*, i64** %99, align 8, !dbg !4962
  %bf.load817 = load i64, i64* %100, align 8, !dbg !4962
  %bf.cast81982 = and i64 %bf.load817, 65535, !dbg !4962
  %cmp820 = icmp eq i64 %bf.cast81982, 9, !dbg !4962
  br i1 %cmp820, label %if.then852, label %lor.lhs.false822, !dbg !4964

lor.lhs.false822:                                 ; preds = %land.lhs.true813, %lor.lhs.false806
  %101 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4965
  %bf.load824 = load i64, i64* %101, align 8, !dbg !4965
  %bf.cast82670 = and i64 %bf.load824, 65535, !dbg !4965
  %cmp827 = icmp eq i64 %bf.cast82670, 9, !dbg !4965
  br i1 %cmp827, label %if.then852, label %lor.lhs.false829, !dbg !4965

lor.lhs.false829:                                 ; preds = %lor.lhs.false822
  %cmp834 = icmp eq i64 %bf.cast82670, 13, !dbg !4965
  br i1 %cmp834, label %land.lhs.true843, label %lor.lhs.false836, !dbg !4965

lor.lhs.false836:                                 ; preds = %lor.lhs.false829
  %cmp841 = icmp eq i64 %bf.cast82670, 14, !dbg !4965
  br i1 %cmp841, label %land.lhs.true843, label %if.end854, !dbg !4965

land.lhs.true843:                                 ; preds = %lor.lhs.false836, %lor.lhs.false829
  %type845 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4965
  %102 = bitcast %union.tree_node** %type845 to i64**, !dbg !4965
  %103 = load i64*, i64** %102, align 8, !dbg !4965
  %bf.load847 = load i64, i64* %103, align 8, !dbg !4965
  %bf.cast84981 = and i64 %bf.load847, 65535, !dbg !4965
  %cmp850 = icmp eq i64 %bf.cast84981, 9, !dbg !4965
  br i1 %cmp850, label %if.then852, label %if.end854, !dbg !4966

if.then852:                                       ; preds = %land.lhs.true843, %lor.lhs.false822, %land.lhs.true813, %sw.bb792
  %call853 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %spec.select, i32 89, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.130, i64 0, i64 0)) #6, !dbg !4967
  br label %if.end854, !dbg !4967

if.end854:                                        ; preds = %if.then852, %land.lhs.true843, %lor.lhs.false836
  %104 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %104, metadata !4567, metadata !DIExpression()), !dbg !4629
  %trunc73 = trunc i64 %bf.load149 to i16, !dbg !4969
  switch i16 %trunc73, label %if.else1003 [
    i16 8, label %land.lhs.true866
    i16 9, label %land.lhs.true866
    i16 11, label %land.lhs.true866
    i16 13, label %land.lhs.true866
    i16 10, label %land.lhs.true882
  ], !dbg !4969

land.lhs.true866:                                 ; preds = %if.end854, %if.end854, %if.end854, %if.end854
  %trunc80 = trunc i64 %bf.load153 to i16, !dbg !4970
  switch i16 %trunc80, label %if.else879 [
    i16 8, label %sw.epilog1198
    i16 9, label %sw.epilog1198
    i16 11, label %sw.epilog1198
    i16 13, label %sw.epilog1198
  ], !dbg !4970

if.else879:                                       ; preds = %land.lhs.true866
  %cmp880 = icmp eq i32 %bf.cast151, 10, !dbg !4971
  %cmp883 = icmp eq i32 %bf.cast155, 10, !dbg !4972
  %or.cond17 = and i1 %cmp880, %cmp883, !dbg !4973
  br i1 %or.cond17, label %if.then885, label %if.else976, !dbg !4973

land.lhs.true882:                                 ; preds = %if.end854
  %cmp883.old = icmp eq i32 %bf.cast155, 10, !dbg !4972
  br i1 %cmp883.old, label %if.then885, label %if.else976, !dbg !4974

if.then885:                                       ; preds = %if.else879, %land.lhs.true882
  %type887 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4975
  %105 = load %union.tree_node*, %union.tree_node** %type887, align 8, !dbg !4975
  call void @llvm.dbg.value(metadata %union.tree_node* %105, metadata !4580, metadata !DIExpression()), !dbg !4976
  %type889 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4977
  %106 = load %union.tree_node*, %union.tree_node** %type889, align 8, !dbg !4977
  call void @llvm.dbg.value(metadata %union.tree_node* %106, metadata !4584, metadata !DIExpression()), !dbg !4976
  %107 = getelementptr inbounds %union.tree_node, %union.tree_node* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4978
  %bf.load891 = load i64, i64* %107, align 8, !dbg !4978
  %bf.lshr892 = lshr i64 %bf.load891, 56, !dbg !4978
  %conv894 = trunc i64 %bf.lshr892 to i8, !dbg !4978
  call void @llvm.dbg.value(metadata i8 %conv894, metadata !4585, metadata !DIExpression()), !dbg !4976
  %108 = getelementptr inbounds %union.tree_node, %union.tree_node* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4979
  %bf.load896 = load i64, i64* %108, align 8, !dbg !4979
  %bf.lshr897 = lshr i64 %bf.load896, 56, !dbg !4979
  %conv899 = trunc i64 %bf.lshr897 to i8, !dbg !4979
  call void @llvm.dbg.value(metadata i8 %conv899, metadata !4586, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !4587, metadata !DIExpression(DW_OP_deref)), !dbg !4976
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !4980
  call void @llvm.dbg.value(metadata i8 0, metadata !4587, metadata !DIExpression()), !dbg !4976
  store i8 0, i8* %as_common, align 1, !dbg !4981
  %call900 = tail call fastcc i32 @comp_target_types(i32 %spec.select, %union.tree_node* %type0.1, %union.tree_node* %type1.1) #7, !dbg !4982
  %tobool901 = icmp eq i32 %call900, 0, !dbg !4982
  br i1 %tobool901, label %if.else904, label %if.then902, !dbg !4984

if.then902:                                       ; preds = %if.then885
  %call903 = tail call fastcc %union.tree_node* @common_pointer_type(%union.tree_node* %type0.1, %union.tree_node* %type1.1) #7, !dbg !4985
  call void @llvm.dbg.value(metadata %union.tree_node* %call903, metadata !4564, metadata !DIExpression()), !dbg !4629
  br label %if.end964, !dbg !4986

if.else904:                                       ; preds = %if.then885
  %call905 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %orig_op0) #7, !dbg !4987
  %tobool906 = icmp eq i8 %call905, 0, !dbg !4987
  br i1 %tobool906, label %if.else908, label %if.end964, !dbg !4989

if.else908:                                       ; preds = %if.else904
  %call909 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %orig_op1) #7, !dbg !4990
  %tobool910 = icmp eq i8 %call909, 0, !dbg !4990
  br i1 %tobool910, label %if.else912, label %if.end964, !dbg !4992

if.else912:                                       ; preds = %if.else908
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !4587, metadata !DIExpression(DW_OP_deref)), !dbg !4976
  %call913 = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv894, i8 zeroext %conv899, i8* nonnull %as_common) #7, !dbg !4993
  %tobool914 = icmp eq i8 %call913, 0, !dbg !4993
  br i1 %tobool914, label %if.then915, label %if.else916, !dbg !4995

if.then915:                                       ; preds = %if.else912
  call void (i32, i8*, ...) @error_at(i32 %spec.select, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.131, i64 0, i64 0)) #6, !dbg !4996
  %109 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4998
  br label %cleanup, !dbg !4999

if.else916:                                       ; preds = %if.else912
  %bf.load918 = load i64, i64* %107, align 8, !dbg !5000
  %bf.cast92076 = and i64 %bf.load918, 65535, !dbg !5000
  %cmp921 = icmp eq i64 %bf.cast92076, 19, !dbg !5000
  br i1 %cmp921, label %if.then923, label %if.else935, !dbg !5002

if.then923:                                       ; preds = %if.else916
  %110 = load i32, i32* @pedantic, align 4, !dbg !5003
  %tobool924 = icmp eq i32 %110, 0, !dbg !5003
  br i1 %tobool924, label %if.end964, label %land.lhs.true925, !dbg !5006

land.lhs.true925:                                 ; preds = %if.then923
  %bf.load927 = load i64, i64* %108, align 8, !dbg !5007
  %bf.cast92979 = and i64 %bf.load927, 65535, !dbg !5008
  %cmp930 = icmp eq i64 %bf.cast92979, 20, !dbg !5008
  br i1 %cmp930, label %if.then932, label %if.end964, !dbg !5009

if.then932:                                       ; preds = %land.lhs.true925
  %call933 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 834, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.132, i64 0, i64 0)) #6, !dbg !5010
  br label %if.end964, !dbg !5010

if.else935:                                       ; preds = %if.else916
  %bf.load937 = load i64, i64* %108, align 8, !dbg !5011
  %bf.cast93977 = and i64 %bf.load937, 65535, !dbg !5011
  %cmp940 = icmp eq i64 %bf.cast93977, 19, !dbg !5011
  br i1 %cmp940, label %if.then942, label %if.else954, !dbg !5013

if.then942:                                       ; preds = %if.else935
  %111 = load i32, i32* @pedantic, align 4, !dbg !5014
  %tobool943 = icmp eq i32 %111, 0, !dbg !5014
  br i1 %tobool943, label %if.end964, label %land.lhs.true944, !dbg !5017

land.lhs.true944:                                 ; preds = %if.then942
  %cmp949 = icmp eq i64 %bf.cast92076, 20, !dbg !5018
  br i1 %cmp949, label %if.then951, label %if.end964, !dbg !5019

if.then951:                                       ; preds = %land.lhs.true944
  %call952 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 834, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.132, i64 0, i64 0)) #6, !dbg !5020
  br label %if.end964, !dbg !5020

if.else954:                                       ; preds = %if.else935
  %tobool955 = icmp eq i8 %call295, 0, !dbg !5021
  br i1 %tobool955, label %if.then956, label %if.end964, !dbg !5023

if.then956:                                       ; preds = %if.else954
  %call957 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.133, i64 0, i64 0)) #6, !dbg !5024
  br label %if.end964, !dbg !5024

if.end964:                                        ; preds = %if.then923, %if.then942, %if.else954, %if.else908, %if.else904, %if.then951, %land.lhs.true944, %if.then956, %land.lhs.true925, %if.then932, %if.then902
  %result_type.5 = phi %union.tree_node* [ %call903, %if.then902 ], [ %type1.1, %if.else904 ], [ %type0.1, %if.else908 ], [ null, %if.then932 ], [ null, %land.lhs.true925 ], [ null, %if.then923 ], [ null, %if.else954 ], [ null, %if.then956 ], [ null, %if.then942 ], [ null, %land.lhs.true944 ], [ null, %if.then951 ], !dbg !5025
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.5, metadata !4564, metadata !DIExpression()), !dbg !4629
  %cmp965 = icmp eq %union.tree_node* %result_type.5, null, !dbg !5026
  br i1 %cmp965, label %if.then967, label %cleanup, !dbg !5027

if.then967:                                       ; preds = %if.end964
  %112 = load i8, i8* %as_common, align 1, !dbg !5028
  call void @llvm.dbg.value(metadata i8 %112, metadata !4587, metadata !DIExpression()), !dbg !4976
  %conv968 = zext i8 %112 to i32, !dbg !5028
  %shl = shl nuw nsw i32 %conv968, 8, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %shl, metadata !4588, metadata !DIExpression()), !dbg !5029
  %113 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5030
  %call969 = call %union.tree_node* @build_qualified_type(%union.tree_node* %113, i32 %shl) #6, !dbg !5031
  %call970 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call969) #6, !dbg !5032
  call void @llvm.dbg.value(metadata %union.tree_node* %call970, metadata !4564, metadata !DIExpression()), !dbg !4629
  br label %cleanup, !dbg !5033

cleanup:                                          ; preds = %if.end964, %if.then967, %if.then915
  %result_type.7 = phi %union.tree_node* [ null, %if.then915 ], [ %call970, %if.then967 ], [ %result_type.5, %if.end964 ], !dbg !4629
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then915 ], [ true, %if.then967 ], [ true, %if.end964 ]
  %retval.0 = phi %union.tree_node* [ %109, %if.then915 ], [ undef, %if.then967 ], [ undef, %if.end964 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.7, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !4587, metadata !DIExpression(DW_OP_deref)), !dbg !4976
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !5034
  br i1 %cleanup.dest.slot.0, label %sw.epilog1198, label %cleanup1760

if.else976:                                       ; preds = %land.lhs.true882, %if.else879
  %cmp977 = icmp eq i32 %bf.cast151, 10, !dbg !5035
  br i1 %cmp977, label %land.lhs.true979, label %if.else1003, !dbg !5037

land.lhs.true979:                                 ; preds = %if.else976
  %call980 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %orig_op1) #7, !dbg !5038
  %tobool982 = icmp eq i8 %call980, 0, !dbg !5038
  br i1 %tobool982, label %if.else1003, label %if.then983, !dbg !5039

if.then983:                                       ; preds = %land.lhs.true979
  %114 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5040
  %bf.load985 = load i64, i64* %114, align 8, !dbg !5040
  %bf.cast98775 = and i64 %bf.load985, 65535, !dbg !5043
  %cmp988 = icmp eq i64 %bf.cast98775, 121, !dbg !5043
  br i1 %cmp988, label %land.lhs.true990, label %sw.epilog1198, !dbg !5044

land.lhs.true990:                                 ; preds = %if.then983
  %operands992 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5045
  %115 = load %union.tree_node*, %union.tree_node** %operands992, align 8, !dbg !5045
  %call994 = tail call zeroext i8 @decl_with_nonnull_addr_p(%union.tree_node* %115) #6, !dbg !5046
  %tobool996 = icmp eq i8 %call994, 0, !dbg !5046
  br i1 %tobool996, label %sw.epilog1198, label %if.then997, !dbg !5047

if.then997:                                       ; preds = %land.lhs.true990
  %116 = load %union.tree_node*, %union.tree_node** %operands992, align 8, !dbg !5048
  %call1001 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %spec.select, i32 33, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.134, i64 0, i64 0), %union.tree_node* %116) #6, !dbg !5049
  br label %sw.epilog1198, !dbg !5049

if.else1003:                                      ; preds = %land.lhs.true979, %if.end854, %if.else976
  %cmp1004 = icmp eq i32 %bf.cast155, 10, !dbg !5050
  br i1 %cmp1004, label %land.lhs.true1006, label %if.else1030, !dbg !5052

land.lhs.true1006:                                ; preds = %if.else1003
  %call1007 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %orig_op0) #7, !dbg !5053
  %tobool1009 = icmp eq i8 %call1007, 0, !dbg !5053
  br i1 %tobool1009, label %if.else1030, label %if.then1010, !dbg !5054

if.then1010:                                      ; preds = %land.lhs.true1006
  %117 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5055
  %bf.load1012 = load i64, i64* %117, align 8, !dbg !5055
  %bf.cast101474 = and i64 %bf.load1012, 65535, !dbg !5058
  %cmp1015 = icmp eq i64 %bf.cast101474, 121, !dbg !5058
  br i1 %cmp1015, label %land.lhs.true1017, label %sw.epilog1198, !dbg !5059

land.lhs.true1017:                                ; preds = %if.then1010
  %operands1019 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5060
  %118 = load %union.tree_node*, %union.tree_node** %operands1019, align 8, !dbg !5060
  %call1021 = tail call zeroext i8 @decl_with_nonnull_addr_p(%union.tree_node* %118) #6, !dbg !5061
  %tobool1023 = icmp eq i8 %call1021, 0, !dbg !5061
  br i1 %tobool1023, label %sw.epilog1198, label %if.then1024, !dbg !5062

if.then1024:                                      ; preds = %land.lhs.true1017
  %119 = load %union.tree_node*, %union.tree_node** %operands1019, align 8, !dbg !5063
  %call1028 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %spec.select, i32 33, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.134, i64 0, i64 0), %union.tree_node* %119) #6, !dbg !5064
  br label %sw.epilog1198, !dbg !5064

if.else1030:                                      ; preds = %land.lhs.true1006, %if.else1003
  %cmp1031 = icmp eq i32 %bf.cast151, 10, !dbg !5065
  %cmp1034 = icmp eq i32 %bf.cast155, 8, !dbg !5067
  %or.cond18 = and i1 %cmp1031, %cmp1034, !dbg !5068
  br i1 %or.cond18, label %if.then1036, label %if.else1038, !dbg !5068

if.then1036:                                      ; preds = %if.else1030
  call void @llvm.dbg.value(metadata %union.tree_node* %type0.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %call1037 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.135, i64 0, i64 0)) #6, !dbg !5069
  br label %sw.epilog1198, !dbg !5071

if.else1038:                                      ; preds = %if.else1030
  %cmp1039 = icmp eq i32 %bf.cast151, 8, !dbg !5072
  %or.cond19 = and i1 %cmp1039, %cmp1004, !dbg !5074
  br i1 %or.cond19, label %if.then1044, label %sw.epilog1198, !dbg !5074

if.then1044:                                      ; preds = %if.else1038
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %call1045 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.135, i64 0, i64 0)) #6, !dbg !5075
  br label %sw.epilog1198, !dbg !5077

sw.bb1052:                                        ; preds = %if.end294, %if.end294, %if.end294, %if.end294
  %120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !5078
  call void @llvm.dbg.value(metadata %union.tree_node* %120, metadata !4567, metadata !DIExpression()), !dbg !4629
  %trunc = trunc i64 %bf.load149 to i16, !dbg !5079
  switch i16 %trunc, label %if.else1166 [
    i16 8, label %land.lhs.true1061
    i16 9, label %land.lhs.true1061
    i16 11, label %land.lhs.true1061
    i16 10, label %land.lhs.true1074
  ], !dbg !5079

land.lhs.true1061:                                ; preds = %sw.bb1052, %sw.bb1052, %sw.bb1052
  %trunc66 = trunc i64 %bf.load153 to i16, !dbg !5080
  switch i16 %trunc66, label %if.else1071 [
    i16 8, label %sw.epilog1198
    i16 9, label %sw.epilog1198
    i16 11, label %sw.epilog1198
  ], !dbg !5080

if.else1071:                                      ; preds = %land.lhs.true1061
  %cmp1072 = icmp eq i32 %bf.cast151, 10, !dbg !5081
  %cmp1075 = icmp eq i32 %bf.cast155, 10, !dbg !5082
  %or.cond20 = and i1 %cmp1072, %cmp1075, !dbg !5083
  br i1 %or.cond20, label %if.then1077, label %if.else1149, !dbg !5083

land.lhs.true1074:                                ; preds = %sw.bb1052
  %cmp1075.old = icmp eq i32 %bf.cast155, 10, !dbg !5082
  br i1 %cmp1075.old, label %if.then1077, label %if.else1149, !dbg !5084

if.then1077:                                      ; preds = %if.else1071, %land.lhs.true1074
  %type1080 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5085
  %121 = bitcast %union.tree_node** %type1080 to i64**, !dbg !5085
  %122 = load i64*, i64** %121, align 8, !dbg !5085
  %bf.load1082 = load i64, i64* %122, align 8, !dbg !5085
  call void @llvm.dbg.value(metadata i8 undef, metadata !4591, metadata !DIExpression()), !dbg !5086
  %type1088 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5087
  %123 = bitcast %union.tree_node** %type1088 to i64**, !dbg !5087
  %124 = load i64*, i64** %123, align 8, !dbg !5087
  %bf.load1090 = load i64, i64* %124, align 8, !dbg !5087
  call void @llvm.dbg.value(metadata i8 undef, metadata !4595, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %as_common1094, metadata !4596, metadata !DIExpression(DW_OP_deref)), !dbg !5086
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common1094) #8, !dbg !5088
  %call1095 = tail call fastcc i32 @comp_target_types(i32 %spec.select, %union.tree_node* %type0.1, %union.tree_node* %type1.1) #7, !dbg !5089
  %tobool1096 = icmp eq i32 %call1095, 0, !dbg !5089
  br i1 %tobool1096, label %if.else1130, label %if.then1097, !dbg !5090

if.then1097:                                      ; preds = %if.then1077
  %call1098 = tail call fastcc %union.tree_node* @common_pointer_type(%union.tree_node* %type0.1, %union.tree_node* %type1.1) #7, !dbg !5091
  call void @llvm.dbg.value(metadata %union.tree_node* %call1098, metadata !4564, metadata !DIExpression()), !dbg !4629
  %125 = bitcast %union.tree_node** %type1080 to %struct.tree_type**, !dbg !5093
  %126 = load %struct.tree_type*, %struct.tree_type** %125, align 8, !dbg !5093
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %126, i64 0, i32 2, !dbg !5093
  %127 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !5093
  %cmp1102 = icmp eq %union.tree_node* %127, null, !dbg !5093
  %128 = bitcast %union.tree_node** %type1088 to %struct.tree_type**, !dbg !5095
  %129 = load %struct.tree_type*, %struct.tree_type** %128, align 8, !dbg !5095
  %size1108 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %129, i64 0, i32 2, !dbg !5095
  %130 = load %union.tree_node*, %union.tree_node** %size1108, align 8, !dbg !5095
  %cmp1109 = icmp eq %union.tree_node* %130, null, !dbg !5095
  %cmp1113 = xor i1 %cmp1102, %cmp1109, !dbg !5096
  br i1 %cmp1113, label %if.then1115, label %if.else1117, !dbg !5097

if.then1115:                                      ; preds = %if.then1097
  %call1116 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.136, i64 0, i64 0)) #6, !dbg !5098
  br label %cleanup1144, !dbg !5098

if.else1117:                                      ; preds = %if.then1097
  %131 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %126, i64 0, i32 0, i32 0, i32 0, !dbg !5097
  %bf.load1121 = load i64, i64* %131, align 8, !dbg !5099
  %bf.cast112365 = and i64 %bf.load1121, 65535, !dbg !5101
  %cmp1124 = icmp eq i64 %bf.cast112365, 20, !dbg !5101
  br i1 %cmp1124, label %if.then1126, label %cleanup1144, !dbg !5102

if.then1126:                                      ; preds = %if.else1117
  %call1127 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 834, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.137, i64 0, i64 0)) #6, !dbg !5103
  br label %cleanup1144, !dbg !5103

if.else1130:                                      ; preds = %if.then1077
  %bf.lshr1091 = lshr i64 %bf.load1090, 56, !dbg !5087
  %conv1093 = trunc i64 %bf.lshr1091 to i8, !dbg !5087
  call void @llvm.dbg.value(metadata i8 %conv1093, metadata !4595, metadata !DIExpression()), !dbg !5086
  %bf.lshr1083 = lshr i64 %bf.load1082, 56, !dbg !5085
  %conv1085 = trunc i64 %bf.lshr1083 to i8, !dbg !5085
  call void @llvm.dbg.value(metadata i8 %conv1085, metadata !4591, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %as_common1094, metadata !4596, metadata !DIExpression(DW_OP_deref)), !dbg !5086
  %call1131 = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv1085, i8 zeroext %conv1093, i8* nonnull %as_common1094) #7, !dbg !5104
  %tobool1132 = icmp eq i8 %call1131, 0, !dbg !5104
  br i1 %tobool1132, label %if.then1133, label %if.else1134, !dbg !5105

if.then1133:                                      ; preds = %if.else1130
  call void (i32, i8*, ...) @error_at(i32 %spec.select, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.131, i64 0, i64 0)) #6, !dbg !5106
  %132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5108
  br label %cleanup1144, !dbg !5109

if.else1134:                                      ; preds = %if.else1130
  %133 = load i8, i8* %as_common1094, align 1, !dbg !5110
  call void @llvm.dbg.value(metadata i8 %133, metadata !4596, metadata !DIExpression()), !dbg !5086
  %conv1136 = zext i8 %133 to i32, !dbg !5110
  %shl1138 = shl nuw nsw i32 %conv1136, 8, !dbg !5110
  call void @llvm.dbg.value(metadata i32 %shl1138, metadata !4597, metadata !DIExpression()), !dbg !5111
  %134 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5112
  %call1139 = call %union.tree_node* @build_qualified_type(%union.tree_node* %134, i32 %shl1138) #6, !dbg !5113
  %call1140 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call1139) #6, !dbg !5114
  call void @llvm.dbg.value(metadata %union.tree_node* %call1140, metadata !4564, metadata !DIExpression()), !dbg !4629
  %call1141 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.133, i64 0, i64 0)) #6, !dbg !5115
  br label %cleanup1144

cleanup1144:                                      ; preds = %if.else1134, %if.else1117, %if.then1126, %if.then1115, %if.then1133
  %result_type.15 = phi %union.tree_node* [ null, %if.then1133 ], [ %call1140, %if.else1134 ], [ %call1098, %if.else1117 ], [ %call1098, %if.then1126 ], [ %call1098, %if.then1115 ], !dbg !4629
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then1133 ], [ true, %if.else1134 ], [ true, %if.else1117 ], [ true, %if.then1126 ], [ true, %if.then1115 ]
  %retval.3 = phi %union.tree_node* [ %132, %if.then1133 ], [ undef, %if.else1134 ], [ undef, %if.else1117 ], [ undef, %if.then1126 ], [ undef, %if.then1115 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.15, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8* %as_common1094, metadata !4596, metadata !DIExpression(DW_OP_deref)), !dbg !5086
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common1094) #8, !dbg !5116
  br i1 %cleanup.dest.slot.1, label %sw.epilog1198, label %cleanup1760

if.else1149:                                      ; preds = %land.lhs.true1074, %if.else1071
  %cmp1150 = icmp eq i32 %bf.cast151, 10, !dbg !5117
  br i1 %cmp1150, label %land.lhs.true1152, label %if.else1166, !dbg !5119

land.lhs.true1152:                                ; preds = %if.else1149
  %call1153 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %orig_op1) #7, !dbg !5120
  %tobool1155 = icmp eq i8 %call1153, 0, !dbg !5120
  br i1 %tobool1155, label %if.else1166, label %if.then1156, !dbg !5121

if.then1156:                                      ; preds = %land.lhs.true1152
  call void @llvm.dbg.value(metadata %union.tree_node* %type0.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %135 = load i32, i32* @pedantic, align 4, !dbg !5122
  %tobool1157 = icmp eq i32 %135, 0, !dbg !5122
  br i1 %tobool1157, label %if.else1160, label %if.then1158, !dbg !5125

if.then1158:                                      ; preds = %if.then1156
  %call1159 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 834, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.138, i64 0, i64 0)) #6, !dbg !5126
  br label %sw.epilog1198, !dbg !5126

if.else1160:                                      ; preds = %if.then1156
  %136 = load i32, i32* @extra_warnings, align 4, !dbg !5127
  %tobool1161 = icmp eq i32 %136, 0, !dbg !5127
  br i1 %tobool1161, label %sw.epilog1198, label %if.then1162, !dbg !5129

if.then1162:                                      ; preds = %if.else1160
  %call1163 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %spec.select, i32 82, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.138, i64 0, i64 0)) #6, !dbg !5130
  br label %sw.epilog1198, !dbg !5130

if.else1166:                                      ; preds = %land.lhs.true1152, %sw.bb1052, %if.else1149
  %cmp1167 = icmp eq i32 %bf.cast155, 10, !dbg !5131
  br i1 %cmp1167, label %land.lhs.true1169, label %if.else1175, !dbg !5133

land.lhs.true1169:                                ; preds = %if.else1166
  %call1170 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %orig_op0) #7, !dbg !5134
  %tobool1172 = icmp eq i8 %call1170, 0, !dbg !5134
  br i1 %tobool1172, label %if.else1175, label %if.then1173, !dbg !5135

if.then1173:                                      ; preds = %land.lhs.true1169
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %call1174 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 834, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.138, i64 0, i64 0)) #6, !dbg !5136
  br label %sw.epilog1198, !dbg !5138

if.else1175:                                      ; preds = %land.lhs.true1169, %if.else1166
  %cmp1176 = icmp eq i32 %bf.cast151, 10, !dbg !5139
  %cmp1179 = icmp eq i32 %bf.cast155, 8, !dbg !5141
  %or.cond21 = and i1 %cmp1176, %cmp1179, !dbg !5142
  br i1 %or.cond21, label %if.then1181, label %if.else1183, !dbg !5142

if.then1181:                                      ; preds = %if.else1175
  call void @llvm.dbg.value(metadata %union.tree_node* %type0.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %call1182 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.135, i64 0, i64 0)) #6, !dbg !5143
  br label %sw.epilog1198, !dbg !5145

if.else1183:                                      ; preds = %if.else1175
  %cmp1184 = icmp eq i32 %bf.cast151, 8, !dbg !5146
  %or.cond22 = and i1 %cmp1184, %cmp1167, !dbg !5148
  br i1 %or.cond22, label %if.then1189, label %sw.epilog1198, !dbg !5148

if.then1189:                                      ; preds = %if.else1183
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.1, metadata !4564, metadata !DIExpression()), !dbg !4629
  %call1190 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %spec.select, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.135, i64 0, i64 0)) #6, !dbg !5149
  br label %sw.epilog1198, !dbg !5151

sw.default1197:                                   ; preds = %if.end294
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 9585, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5152
  br label %sw.epilog1198, !dbg !5153

sw.epilog1198:                                    ; preds = %if.end728, %if.end781, %land.lhs.true990, %land.lhs.true1017, %if.else1160, %land.lhs.true1061, %land.lhs.true1061, %land.lhs.true1061, %if.then1162, %if.then1158, %if.then1181, %if.then1189, %if.else1183, %if.then1173, %cleanup1144, %land.lhs.true866, %land.lhs.true866, %land.lhs.true866, %land.lhs.true866, %if.then997, %if.then983, %if.then1036, %if.then1044, %if.else1038, %if.then1010, %if.then1024, %cleanup, %land.lhs.true744, %sw.bb738, %if.then788, %land.lhs.true688, %sw.bb682, %if.then734, %land.end624, %if.end574, %land.end677, %land.lhs.true499, %lor.end537, %if.else509, %sw.bb436, %if.then481, %land.lhs.true472, %land.lhs.true456, %if.else443, %sw.bb338, %land.lhs.true353, %lor.lhs.false404, %lor.end433, %if.end294, %if.else326, %if.else304, %sw.default1197
  %build_type.0 = phi %union.tree_node* [ null, %sw.default1197 ], [ null, %if.else304 ], [ null, %if.else326 ], [ null, %if.end294 ], [ null, %lor.end433 ], [ null, %lor.lhs.false404 ], [ null, %land.lhs.true353 ], [ null, %sw.bb338 ], [ null, %if.else443 ], [ null, %land.lhs.true456 ], [ null, %land.lhs.true472 ], [ null, %if.then481 ], [ null, %sw.bb436 ], [ null, %if.else509 ], [ null, %lor.end537 ], [ null, %land.lhs.true499 ], [ null, %land.end677 ], [ null, %if.end574 ], [ null, %land.end624 ], [ null, %if.end728 ], [ null, %if.then734 ], [ null, %sw.bb682 ], [ null, %land.lhs.true688 ], [ null, %if.end781 ], [ null, %if.then788 ], [ null, %sw.bb738 ], [ null, %land.lhs.true744 ], [ %104, %cleanup ], [ %104, %if.then1024 ], [ %104, %land.lhs.true1017 ], [ %104, %if.then1010 ], [ %104, %if.else1038 ], [ %104, %if.then1044 ], [ %104, %if.then1036 ], [ %104, %if.then983 ], [ %104, %land.lhs.true990 ], [ %104, %if.then997 ], [ %104, %land.lhs.true866 ], [ %104, %land.lhs.true866 ], [ %104, %land.lhs.true866 ], [ %104, %land.lhs.true866 ], [ %120, %cleanup1144 ], [ %120, %if.then1173 ], [ %120, %if.else1183 ], [ %120, %if.then1189 ], [ %120, %if.then1181 ], [ %120, %if.then1158 ], [ %120, %if.then1162 ], [ %120, %if.else1160 ], [ %120, %land.lhs.true1061 ], [ %120, %land.lhs.true1061 ], [ %120, %land.lhs.true1061 ], !dbg !4629
  %converted.3 = phi i32 [ 0, %sw.default1197 ], [ 0, %if.else304 ], [ 0, %if.else326 ], [ 0, %if.end294 ], [ 0, %lor.end433 ], [ 0, %lor.lhs.false404 ], [ 0, %land.lhs.true353 ], [ 0, %sw.bb338 ], [ 0, %if.else443 ], [ 0, %land.lhs.true456 ], [ 0, %land.lhs.true472 ], [ 0, %if.then481 ], [ 0, %sw.bb436 ], [ 0, %if.else509 ], [ 0, %lor.end537 ], [ 0, %land.lhs.true499 ], [ %converted.0, %land.end677 ], [ %converted.0, %if.end574 ], [ %converted.0, %land.end624 ], [ 1, %if.end728 ], [ 1, %if.then734 ], [ 0, %sw.bb682 ], [ 0, %land.lhs.true688 ], [ 1, %if.end781 ], [ 1, %if.then788 ], [ 0, %sw.bb738 ], [ 0, %land.lhs.true744 ], [ 0, %cleanup ], [ 0, %if.then1024 ], [ 0, %land.lhs.true1017 ], [ 0, %if.then1010 ], [ 0, %if.else1038 ], [ 0, %if.then1044 ], [ 0, %if.then1036 ], [ 0, %if.then983 ], [ 0, %land.lhs.true990 ], [ 0, %if.then997 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %cleanup1144 ], [ 0, %if.then1173 ], [ 0, %if.else1183 ], [ 0, %if.then1189 ], [ 0, %if.then1181 ], [ 0, %if.then1158 ], [ 0, %if.then1162 ], [ 0, %if.else1160 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], !dbg !4629
  %result_type.22 = phi %union.tree_node* [ null, %sw.default1197 ], [ null, %if.else304 ], [ null, %if.else326 ], [ null, %if.end294 ], [ null, %lor.end433 ], [ null, %lor.lhs.false404 ], [ null, %land.lhs.true353 ], [ null, %sw.bb338 ], [ null, %if.else443 ], [ null, %land.lhs.true456 ], [ null, %land.lhs.true472 ], [ null, %if.then481 ], [ null, %sw.bb436 ], [ null, %if.else509 ], [ null, %lor.end537 ], [ null, %land.lhs.true499 ], [ %result_type.0, %land.end677 ], [ %result_type.0, %if.end574 ], [ %result_type.0, %land.end624 ], [ %type0.1, %if.end728 ], [ %type0.1, %if.then734 ], [ null, %sw.bb682 ], [ null, %land.lhs.true688 ], [ %type0.1, %if.end781 ], [ %type0.1, %if.then788 ], [ null, %sw.bb738 ], [ null, %land.lhs.true744 ], [ %result_type.7, %cleanup ], [ %type1.1, %if.then1024 ], [ %type1.1, %land.lhs.true1017 ], [ %type1.1, %if.then1010 ], [ null, %if.else1038 ], [ %type1.1, %if.then1044 ], [ %type0.1, %if.then1036 ], [ %type0.1, %if.then983 ], [ %type0.1, %land.lhs.true990 ], [ %type0.1, %if.then997 ], [ null, %land.lhs.true866 ], [ null, %land.lhs.true866 ], [ null, %land.lhs.true866 ], [ null, %land.lhs.true866 ], [ %result_type.15, %cleanup1144 ], [ %type1.1, %if.then1173 ], [ null, %if.else1183 ], [ %type1.1, %if.then1189 ], [ %type0.1, %if.then1181 ], [ %type0.1, %if.then1158 ], [ %type0.1, %if.then1162 ], [ %type0.1, %if.else1160 ], [ null, %land.lhs.true1061 ], [ null, %land.lhs.true1061 ], [ null, %land.lhs.true1061 ], !dbg !4629
  %resultcode.2 = phi i32 [ %code, %sw.default1197 ], [ 63, %if.else304 ], [ 64, %if.else326 ], [ 65, %if.end294 ], [ %code, %lor.end433 ], [ 75, %lor.lhs.false404 ], [ %code, %land.lhs.true353 ], [ %code, %sw.bb338 ], [ %code, %if.else443 ], [ %code, %land.lhs.true456 ], [ %code, %land.lhs.true472 ], [ %code, %if.then481 ], [ %code, %sw.bb436 ], [ %code, %if.else509 ], [ %code, %lor.end537 ], [ %code, %land.lhs.true499 ], [ 92, %land.end677 ], [ %code, %if.end574 ], [ 91, %land.end624 ], [ 84, %if.end728 ], [ 84, %if.then734 ], [ 84, %sw.bb682 ], [ 84, %land.lhs.true688 ], [ 83, %if.end781 ], [ 83, %if.then788 ], [ 83, %sw.bb738 ], [ 83, %land.lhs.true744 ], [ %code, %cleanup ], [ %code, %if.then1024 ], [ %code, %land.lhs.true1017 ], [ %code, %if.then1010 ], [ %code, %if.else1038 ], [ %code, %if.then1044 ], [ %code, %if.then1036 ], [ %code, %if.then983 ], [ %code, %land.lhs.true990 ], [ %code, %if.then997 ], [ %code, %land.lhs.true866 ], [ %code, %land.lhs.true866 ], [ %code, %land.lhs.true866 ], [ %code, %land.lhs.true866 ], [ %code, %cleanup1144 ], [ %code, %if.then1173 ], [ %code, %if.else1183 ], [ %code, %if.then1189 ], [ %code, %if.then1181 ], [ %code, %if.then1158 ], [ %code, %if.then1162 ], [ %code, %if.else1160 ], [ %code, %land.lhs.true1061 ], [ %code, %land.lhs.true1061 ], [ %code, %land.lhs.true1061 ], !dbg !5154
  %shorten.5 = phi i32 [ 0, %sw.default1197 ], [ 0, %if.else304 ], [ 0, %if.else326 ], [ 0, %if.end294 ], [ %lor.ext, %lor.end433 ], [ 0, %lor.lhs.false404 ], [ 0, %land.lhs.true353 ], [ 0, %sw.bb338 ], [ 0, %if.else443 ], [ 0, %land.lhs.true456 ], [ 0, %land.lhs.true472 ], [ 0, %if.then481 ], [ -1, %sw.bb436 ], [ 0, %if.else509 ], [ %lor.ext538, %lor.end537 ], [ 0, %land.lhs.true499 ], [ 0, %land.end677 ], [ 0, %if.end574 ], [ 0, %land.end624 ], [ 0, %if.end728 ], [ 0, %if.then734 ], [ 0, %sw.bb682 ], [ 0, %land.lhs.true688 ], [ 0, %if.end781 ], [ 0, %if.then788 ], [ 0, %sw.bb738 ], [ 0, %land.lhs.true744 ], [ 0, %cleanup ], [ 0, %if.then1024 ], [ 0, %land.lhs.true1017 ], [ 0, %if.then1010 ], [ 0, %if.else1038 ], [ 0, %if.then1044 ], [ 0, %if.then1036 ], [ 0, %if.then983 ], [ 0, %land.lhs.true990 ], [ 0, %if.then997 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %cleanup1144 ], [ 0, %if.then1173 ], [ 0, %if.else1183 ], [ 0, %if.then1189 ], [ 0, %if.then1181 ], [ 0, %if.then1158 ], [ 0, %if.then1162 ], [ 0, %if.else1160 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], !dbg !4629
  %int_const_or_overflow.3 = phi i8 [ %int_const_or_overflow.0, %sw.default1197 ], [ %int_const_or_overflow.0, %if.else304 ], [ %int_const_or_overflow.0, %if.else326 ], [ %int_const_or_overflow.0, %if.end294 ], [ %int_const_or_overflow.0, %lor.end433 ], [ %int_const_or_overflow.0, %lor.lhs.false404 ], [ %int_const_or_overflow.0, %land.lhs.true353 ], [ %int_const_or_overflow.0, %sw.bb338 ], [ %int_const_or_overflow.0, %if.else443 ], [ %int_const_or_overflow.0, %land.lhs.true456 ], [ %int_const_or_overflow.0, %land.lhs.true472 ], [ %int_const_or_overflow.0, %if.then481 ], [ %int_const_or_overflow.0, %sw.bb436 ], [ %int_const_or_overflow.0, %if.else509 ], [ %int_const_or_overflow.0, %lor.end537 ], [ %int_const_or_overflow.0, %land.lhs.true499 ], [ %conv654, %land.end677 ], [ %int_const_or_overflow.0, %if.end574 ], [ %conv601, %land.end624 ], [ %int_const_or_overflow.0, %if.end728 ], [ %int_const_or_overflow.0, %if.then734 ], [ %int_const_or_overflow.0, %sw.bb682 ], [ %int_const_or_overflow.0, %land.lhs.true688 ], [ %int_const_or_overflow.0, %if.end781 ], [ %int_const_or_overflow.0, %if.then788 ], [ %int_const_or_overflow.0, %sw.bb738 ], [ %int_const_or_overflow.0, %land.lhs.true744 ], [ %int_const_or_overflow.0, %cleanup ], [ %int_const_or_overflow.0, %if.then1024 ], [ %int_const_or_overflow.0, %land.lhs.true1017 ], [ %int_const_or_overflow.0, %if.then1010 ], [ %int_const_or_overflow.0, %if.else1038 ], [ %int_const_or_overflow.0, %if.then1044 ], [ %int_const_or_overflow.0, %if.then1036 ], [ %int_const_or_overflow.0, %if.then983 ], [ %int_const_or_overflow.0, %land.lhs.true990 ], [ %int_const_or_overflow.0, %if.then997 ], [ %int_const_or_overflow.0, %land.lhs.true866 ], [ %int_const_or_overflow.0, %land.lhs.true866 ], [ %int_const_or_overflow.0, %land.lhs.true866 ], [ %int_const_or_overflow.0, %land.lhs.true866 ], [ %int_const_or_overflow.0, %cleanup1144 ], [ %int_const_or_overflow.0, %if.then1173 ], [ %int_const_or_overflow.0, %if.else1183 ], [ %int_const_or_overflow.0, %if.then1189 ], [ %int_const_or_overflow.0, %if.then1181 ], [ %int_const_or_overflow.0, %if.then1158 ], [ %int_const_or_overflow.0, %if.then1162 ], [ %int_const_or_overflow.0, %if.else1160 ], [ %int_const_or_overflow.0, %land.lhs.true1061 ], [ %int_const_or_overflow.0, %land.lhs.true1061 ], [ %int_const_or_overflow.0, %land.lhs.true1061 ], !dbg !4629
  %int_const.11 = phi i8 [ %int_const.0, %sw.default1197 ], [ %int_const.0, %if.else304 ], [ %int_const.0, %if.else326 ], [ %int_const.0, %if.end294 ], [ %int_const.0, %lor.end433 ], [ %int_const.0, %lor.lhs.false404 ], [ %int_const.0, %land.lhs.true353 ], [ %int_const.0, %sw.bb338 ], [ %int_const.0, %if.else443 ], [ %int_const.0, %land.lhs.true456 ], [ %int_const.0, %land.lhs.true472 ], [ %int_const.0, %if.then481 ], [ %int_const.0, %sw.bb436 ], [ %int_const.0, %if.else509 ], [ %int_const.0, %lor.end537 ], [ %int_const.0, %land.lhs.true499 ], [ %conv679, %land.end677 ], [ %int_const.0, %if.end574 ], [ %conv626, %land.end624 ], [ %int_const.5, %if.end728 ], [ %int_const.5, %if.then734 ], [ %int_const.0, %sw.bb682 ], [ %int_const.0, %land.lhs.true688 ], [ %int_const.9, %if.end781 ], [ %int_const.9, %if.then788 ], [ %int_const.0, %sw.bb738 ], [ %int_const.0, %land.lhs.true744 ], [ %int_const.0, %cleanup ], [ %int_const.0, %if.then1024 ], [ %int_const.0, %land.lhs.true1017 ], [ %int_const.0, %if.then1010 ], [ %int_const.0, %if.else1038 ], [ %int_const.0, %if.then1044 ], [ %int_const.0, %if.then1036 ], [ %int_const.0, %if.then983 ], [ %int_const.0, %land.lhs.true990 ], [ %int_const.0, %if.then997 ], [ %int_const.0, %land.lhs.true866 ], [ %int_const.0, %land.lhs.true866 ], [ %int_const.0, %land.lhs.true866 ], [ %int_const.0, %land.lhs.true866 ], [ %int_const.0, %cleanup1144 ], [ %int_const.0, %if.then1173 ], [ %int_const.0, %if.else1183 ], [ %int_const.0, %if.then1189 ], [ %int_const.0, %if.then1181 ], [ %int_const.0, %if.then1158 ], [ %int_const.0, %if.then1162 ], [ %int_const.0, %if.else1160 ], [ %int_const.0, %land.lhs.true1061 ], [ %int_const.0, %land.lhs.true1061 ], [ %int_const.0, %land.lhs.true1061 ], !dbg !4629
  %short_compare.2 = phi i32 [ 0, %sw.default1197 ], [ 0, %if.else304 ], [ 0, %if.else326 ], [ 0, %if.end294 ], [ 0, %lor.end433 ], [ 0, %lor.lhs.false404 ], [ 0, %land.lhs.true353 ], [ 0, %sw.bb338 ], [ 0, %if.else443 ], [ 0, %land.lhs.true456 ], [ 0, %land.lhs.true472 ], [ 0, %if.then481 ], [ 0, %sw.bb436 ], [ 0, %if.else509 ], [ 0, %lor.end537 ], [ 0, %land.lhs.true499 ], [ 0, %land.end677 ], [ 0, %if.end574 ], [ 0, %land.end624 ], [ 0, %if.end728 ], [ 0, %if.then734 ], [ 0, %sw.bb682 ], [ 0, %land.lhs.true688 ], [ 0, %if.end781 ], [ 0, %if.then788 ], [ 0, %sw.bb738 ], [ 0, %land.lhs.true744 ], [ 0, %cleanup ], [ 0, %if.then1024 ], [ 0, %land.lhs.true1017 ], [ 0, %if.then1010 ], [ 0, %if.else1038 ], [ 0, %if.then1044 ], [ 0, %if.then1036 ], [ 0, %if.then983 ], [ 0, %land.lhs.true990 ], [ 0, %if.then997 ], [ 1, %land.lhs.true866 ], [ 1, %land.lhs.true866 ], [ 1, %land.lhs.true866 ], [ 1, %land.lhs.true866 ], [ 0, %cleanup1144 ], [ 0, %if.then1173 ], [ 0, %if.else1183 ], [ 0, %if.then1189 ], [ 0, %if.then1181 ], [ 0, %if.then1158 ], [ 0, %if.then1162 ], [ 0, %if.else1160 ], [ 1, %land.lhs.true1061 ], [ 1, %land.lhs.true1061 ], [ 1, %land.lhs.true1061 ], !dbg !4629
  %short_shift.4 = phi i32 [ 0, %sw.default1197 ], [ 0, %if.else304 ], [ 0, %if.else326 ], [ 0, %if.end294 ], [ 0, %lor.end433 ], [ 0, %lor.lhs.false404 ], [ 0, %land.lhs.true353 ], [ 0, %sw.bb338 ], [ 0, %if.else443 ], [ 0, %land.lhs.true456 ], [ 0, %land.lhs.true472 ], [ 0, %if.then481 ], [ 0, %sw.bb436 ], [ 0, %if.else509 ], [ 0, %lor.end537 ], [ 0, %land.lhs.true499 ], [ 0, %land.end677 ], [ 0, %if.end574 ], [ 0, %land.end624 ], [ %short_shift.2, %if.end728 ], [ %short_shift.2, %if.then734 ], [ 0, %sw.bb682 ], [ 0, %land.lhs.true688 ], [ 0, %if.end781 ], [ 0, %if.then788 ], [ 0, %sw.bb738 ], [ 0, %land.lhs.true744 ], [ 0, %cleanup ], [ 0, %if.then1024 ], [ 0, %land.lhs.true1017 ], [ 0, %if.then1010 ], [ 0, %if.else1038 ], [ 0, %if.then1044 ], [ 0, %if.then1036 ], [ 0, %if.then983 ], [ 0, %land.lhs.true990 ], [ 0, %if.then997 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %cleanup1144 ], [ 0, %if.then1173 ], [ 0, %if.else1183 ], [ 0, %if.then1189 ], [ 0, %if.then1181 ], [ 0, %if.then1158 ], [ 0, %if.then1162 ], [ 0, %if.else1160 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], !dbg !4916
  %common.5 = phi i32 [ 0, %sw.default1197 ], [ 1, %if.else304 ], [ 1, %if.else326 ], [ 1, %if.end294 ], [ 1, %lor.end433 ], [ 1, %lor.lhs.false404 ], [ 0, %land.lhs.true353 ], [ 0, %sw.bb338 ], [ 0, %if.else443 ], [ 0, %land.lhs.true456 ], [ 0, %land.lhs.true472 ], [ 1, %if.then481 ], [ 0, %sw.bb436 ], [ 0, %if.else509 ], [ 1, %lor.end537 ], [ 1, %land.lhs.true499 ], [ 0, %land.end677 ], [ 0, %if.end574 ], [ 0, %land.end624 ], [ 0, %if.end728 ], [ 0, %if.then734 ], [ 0, %sw.bb682 ], [ 0, %land.lhs.true688 ], [ 0, %if.end781 ], [ 0, %if.then788 ], [ 0, %sw.bb738 ], [ 0, %land.lhs.true744 ], [ 0, %cleanup ], [ 0, %if.then1024 ], [ 0, %land.lhs.true1017 ], [ 0, %if.then1010 ], [ 0, %if.else1038 ], [ 0, %if.then1044 ], [ 0, %if.then1036 ], [ 0, %if.then983 ], [ 0, %land.lhs.true990 ], [ 0, %if.then997 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %land.lhs.true866 ], [ 0, %cleanup1144 ], [ 0, %if.then1173 ], [ 0, %if.else1183 ], [ 0, %if.then1189 ], [ 0, %if.then1181 ], [ 0, %if.then1158 ], [ 0, %if.then1162 ], [ 0, %if.else1160 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], [ 0, %land.lhs.true1061 ], !dbg !4629
  %op1.10 = phi %union.tree_node* [ %op1.4, %sw.default1197 ], [ %op1.4, %if.else304 ], [ %op1.4, %if.else326 ], [ %op1.4, %if.end294 ], [ %op1.4, %lor.end433 ], [ %op1.4, %lor.lhs.false404 ], [ %op1.4, %land.lhs.true353 ], [ %op1.4, %sw.bb338 ], [ %op1.4, %if.else443 ], [ %op1.4, %land.lhs.true456 ], [ %op1.4, %land.lhs.true472 ], [ %op1.4, %if.then481 ], [ %op1.4, %sw.bb436 ], [ %op1.4, %if.else509 ], [ %op1.4, %lor.end537 ], [ %op1.4, %land.lhs.true499 ], [ %op1.5, %land.end677 ], [ %op1.5, %if.end574 ], [ %op1.5, %land.end624 ], [ %op1.4, %if.end728 ], [ %call735, %if.then734 ], [ %op1.4, %sw.bb682 ], [ %op1.4, %land.lhs.true688 ], [ %op1.4, %if.end781 ], [ %call789, %if.then788 ], [ %op1.4, %sw.bb738 ], [ %op1.4, %land.lhs.true744 ], [ %op1.4, %cleanup ], [ %op1.4, %if.then1024 ], [ %op1.4, %land.lhs.true1017 ], [ %op1.4, %if.then1010 ], [ %op1.4, %if.else1038 ], [ %op1.4, %if.then1044 ], [ %op1.4, %if.then1036 ], [ %op1.4, %if.then983 ], [ %op1.4, %land.lhs.true990 ], [ %op1.4, %if.then997 ], [ %op1.4, %land.lhs.true866 ], [ %op1.4, %land.lhs.true866 ], [ %op1.4, %land.lhs.true866 ], [ %op1.4, %land.lhs.true866 ], [ %op1.4, %cleanup1144 ], [ %op1.4, %if.then1173 ], [ %op1.4, %if.else1183 ], [ %op1.4, %if.then1189 ], [ %op1.4, %if.then1181 ], [ %op1.4, %if.then1158 ], [ %op1.4, %if.then1162 ], [ %op1.4, %if.else1160 ], [ %op1.4, %land.lhs.true1061 ], [ %op1.4, %land.lhs.true1061 ], [ %op1.4, %land.lhs.true1061 ], !dbg !4629
  %op0.6 = phi %union.tree_node* [ %op0.4, %sw.default1197 ], [ %op0.4, %if.else304 ], [ %op0.4, %if.else326 ], [ %op0.4, %if.end294 ], [ %op0.4, %lor.end433 ], [ %op0.4, %lor.lhs.false404 ], [ %op0.4, %land.lhs.true353 ], [ %op0.4, %sw.bb338 ], [ %op0.4, %if.else443 ], [ %op0.4, %land.lhs.true456 ], [ %op0.4, %land.lhs.true472 ], [ %op0.4, %if.then481 ], [ %op0.4, %sw.bb436 ], [ %op0.4, %if.else509 ], [ %op0.4, %lor.end537 ], [ %op0.4, %land.lhs.true499 ], [ %op0.5, %land.end677 ], [ %op0.5, %if.end574 ], [ %op0.5, %land.end624 ], [ %op0.4, %if.end728 ], [ %op0.4, %if.then734 ], [ %op0.4, %sw.bb682 ], [ %op0.4, %land.lhs.true688 ], [ %op0.4, %if.end781 ], [ %op0.4, %if.then788 ], [ %op0.4, %sw.bb738 ], [ %op0.4, %land.lhs.true744 ], [ %op0.4, %cleanup ], [ %op0.4, %if.then1024 ], [ %op0.4, %land.lhs.true1017 ], [ %op0.4, %if.then1010 ], [ %op0.4, %if.else1038 ], [ %op0.4, %if.then1044 ], [ %op0.4, %if.then1036 ], [ %op0.4, %if.then983 ], [ %op0.4, %land.lhs.true990 ], [ %op0.4, %if.then997 ], [ %op0.4, %land.lhs.true866 ], [ %op0.4, %land.lhs.true866 ], [ %op0.4, %land.lhs.true866 ], [ %op0.4, %land.lhs.true866 ], [ %op0.4, %cleanup1144 ], [ %op0.4, %if.then1173 ], [ %op0.4, %if.else1183 ], [ %op0.4, %if.then1189 ], [ %op0.4, %if.then1181 ], [ %op0.4, %if.then1158 ], [ %op0.4, %if.then1162 ], [ %op0.4, %if.else1160 ], [ %op0.4, %land.lhs.true1061 ], [ %op0.4, %land.lhs.true1061 ], [ %op0.4, %land.lhs.true1061 ], !dbg !4629
  %retval.6 = phi %union.tree_node* [ undef, %sw.default1197 ], [ undef, %if.else304 ], [ undef, %if.else326 ], [ undef, %if.end294 ], [ undef, %lor.end433 ], [ undef, %lor.lhs.false404 ], [ undef, %land.lhs.true353 ], [ undef, %sw.bb338 ], [ undef, %if.else443 ], [ undef, %land.lhs.true456 ], [ undef, %land.lhs.true472 ], [ undef, %if.then481 ], [ undef, %sw.bb436 ], [ undef, %if.else509 ], [ undef, %lor.end537 ], [ undef, %land.lhs.true499 ], [ undef, %land.end677 ], [ undef, %if.end574 ], [ undef, %land.end624 ], [ undef, %if.end728 ], [ undef, %if.then734 ], [ undef, %sw.bb682 ], [ undef, %land.lhs.true688 ], [ undef, %if.end781 ], [ undef, %if.then788 ], [ undef, %sw.bb738 ], [ undef, %land.lhs.true744 ], [ %retval.0, %cleanup ], [ undef, %if.then1024 ], [ undef, %land.lhs.true1017 ], [ undef, %if.then1010 ], [ undef, %if.else1038 ], [ undef, %if.then1044 ], [ undef, %if.then1036 ], [ undef, %if.then983 ], [ undef, %land.lhs.true990 ], [ undef, %if.then997 ], [ undef, %land.lhs.true866 ], [ undef, %land.lhs.true866 ], [ undef, %land.lhs.true866 ], [ undef, %land.lhs.true866 ], [ %retval.3, %cleanup1144 ], [ undef, %if.then1173 ], [ undef, %if.else1183 ], [ undef, %if.then1189 ], [ undef, %if.then1181 ], [ undef, %if.then1158 ], [ undef, %if.then1162 ], [ undef, %if.else1160 ], [ undef, %land.lhs.true1061 ], [ undef, %land.lhs.true1061 ], [ undef, %land.lhs.true1061 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.6, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.10, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %common.5, metadata !4572, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %short_shift.4, metadata !4571, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %short_compare.2, metadata !4570, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8 %int_const.11, metadata !4560, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8 %int_const_or_overflow.3, metadata !4561, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %shorten.5, metadata !4569, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %resultcode.2, metadata !4563, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.22, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.3, metadata !4566, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %build_type.0, metadata !4567, metadata !DIExpression()), !dbg !4629
  br i1 false, label %if.then1204, label %if.end1205, !dbg !5155

if.then1204:                                      ; preds = %sw.epilog1198
  br label %cleanup1760, !dbg !5157

if.end1205:                                       ; preds = %sw.epilog1198
  %cmp1206 = icmp eq i32 %bf.cast151, 14, !dbg !5158
  %cmp1209 = icmp eq i32 %bf.cast155, 14, !dbg !5160
  %or.cond24 = and i1 %cmp1206, %cmp1209, !dbg !5161
  br i1 %or.cond24, label %land.lhs.true1211, label %if.end1226, !dbg !5161

land.lhs.true1211:                                ; preds = %if.end1205
  %137 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5162
  %138 = load %union.tree_node*, %union.tree_node** %137, align 8, !dbg !5162
  %139 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5163
  %140 = load %union.tree_node*, %union.tree_node** %139, align 8, !dbg !5163
  %call1216 = call i32 @tree_int_cst_equal(%union.tree_node* %138, %union.tree_node* %140) #6, !dbg !5164
  %tobool1217 = icmp eq i32 %call1216, 0, !dbg !5164
  br i1 %tobool1217, label %if.then1225, label %lor.lhs.false1218, !dbg !5165

lor.lhs.false1218:                                ; preds = %land.lhs.true1211
  %type1220 = getelementptr inbounds %union.tree_node, %union.tree_node* %type0.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5166
  %141 = load %union.tree_node*, %union.tree_node** %type1220, align 8, !dbg !5166
  %type1222 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5167
  %142 = load %union.tree_node*, %union.tree_node** %type1222, align 8, !dbg !5167
  %call1223 = call zeroext i8 @same_scalar_type_ignoring_signedness(%union.tree_node* %141, %union.tree_node* %142) #6, !dbg !5168
  %tobool1224 = icmp eq i8 %call1223, 0, !dbg !5168
  br i1 %tobool1224, label %if.then1225, label %if.end1226, !dbg !5169

if.then1225:                                      ; preds = %lor.lhs.false1218, %land.lhs.true1211
  call void @binary_op_error(i32 %spec.select, i32 %code, %union.tree_node* %type0.1, %union.tree_node* %type1.1) #6, !dbg !5170
  %143 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5172
  br label %cleanup1760, !dbg !5173

if.end1226:                                       ; preds = %lor.lhs.false1218, %if.end1205
  %trunc52 = trunc i64 %bf.load149 to i16, !dbg !5174
  switch i16 %trunc52, label %if.end1643 [
    i16 8, label %land.lhs.true1241
    i16 9, label %land.lhs.true1241
    i16 13, label %land.lhs.true1241
    i16 11, label %land.lhs.true1241
    i16 14, label %land.lhs.true1241
  ], !dbg !5174

land.lhs.true1241:                                ; preds = %if.end1226, %if.end1226, %if.end1226, %if.end1226, %if.end1226
  %trunc53 = trunc i64 %bf.load153 to i16, !dbg !5175
  switch i16 %trunc53, label %if.end1643 [
    i16 8, label %if.then1256
    i16 9, label %if.then1256
    i16 13, label %if.then1256
    i16 11, label %if.then1256
    i16 14, label %if.then1256
  ], !dbg !5175

if.then1256:                                      ; preds = %land.lhs.true1241, %land.lhs.true1241, %land.lhs.true1241, %land.lhs.true1241, %land.lhs.true1241
  %cmp1257 = icmp eq i32 %bf.cast151, 13, !dbg !5176
  call void @llvm.dbg.value(metadata i1 %cmp1257, metadata !4601, metadata !DIExpression()), !dbg !5177
  %cmp1260 = icmp eq i32 %bf.cast155, 13, !dbg !5178
  call void @llvm.dbg.value(metadata i1 %cmp1260, metadata !4604, metadata !DIExpression()), !dbg !5177
  br i1 %cmp1257, label %land.end1268, label %land.rhs1264, !dbg !5179

land.rhs1264:                                     ; preds = %if.then1256
  %lnot1266 = xor i1 %cmp1260, true, !dbg !5180
  br label %land.end1268

land.end1268:                                     ; preds = %land.rhs1264, %if.then1256
  %144 = phi i1 [ false, %if.then1256 ], [ %lnot1266, %land.rhs1264 ], !dbg !5177
  call void @llvm.dbg.value(metadata i1 %144, metadata !4605, metadata !DIExpression()), !dbg !5177
  %145 = or i32 %shorten.5, %common.5, !dbg !5181
  %146 = or i32 %145, %short_compare.2, !dbg !5181
  %147 = icmp eq i32 %146, 0, !dbg !5181
  br i1 %147, label %if.end1281, label %if.then1275, !dbg !5181

if.then1275:                                      ; preds = %land.end1268
  %call1276 = call fastcc %union.tree_node* @c_common_type(%union.tree_node* %type0.1, %union.tree_node* %type1.1) #7, !dbg !5183
  call void @llvm.dbg.value(metadata %union.tree_node* %call1276, metadata !4564, metadata !DIExpression()), !dbg !4629
  %148 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5185
  %cmp1277 = icmp eq %union.tree_node* %call1276, %148, !dbg !5187
  br i1 %cmp1277, label %if.then1279, label %if.end1281, !dbg !5188

if.then1279:                                      ; preds = %if.then1275
  br label %cleanup1638, !dbg !5189

if.end1281:                                       ; preds = %land.end1268, %if.then1275
  %result_type.23 = phi %union.tree_node* [ %result_type.22, %land.end1268 ], [ %call1276, %if.then1275 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.23, metadata !4564, metadata !DIExpression()), !dbg !4629
  %cmp1284 = xor i1 %cmp1257, %cmp1260, !dbg !5190
  br i1 %cmp1284, label %land.lhs.true1286, label %if.end1493, !dbg !5191

land.lhs.true1286:                                ; preds = %if.end1281
  switch i32 %code, label %if.end1493 [
    i32 63, label %land.lhs.true1301
    i32 64, label %land.lhs.true1301
    i32 65, label %land.lhs.true1301
    i32 67, label %land.lhs.true1298
  ], !dbg !5192

land.lhs.true1298:                                ; preds = %land.lhs.true1286
  br i1 %cmp1257, label %land.lhs.true1301, label %if.end1493, !dbg !5193

land.lhs.true1301:                                ; preds = %land.lhs.true1286, %land.lhs.true1286, %land.lhs.true1286, %land.lhs.true1298
  %type1303 = getelementptr inbounds %union.tree_node, %union.tree_node* %result_type.23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5194
  %149 = bitcast %union.tree_node** %type1303 to i64**, !dbg !5194
  %150 = load i64*, i64** %149, align 8, !dbg !5194
  %bf.load1305 = load i64, i64* %150, align 8, !dbg !5194
  %bf.cast130762 = and i64 %bf.load1305, 65535, !dbg !5195
  %cmp1308 = icmp eq i64 %bf.cast130762, 9, !dbg !5195
  %151 = load i32, i32* @flag_signed_zeros, align 4, !dbg !5196
  %tobool1311 = icmp ne i32 %151, 0, !dbg !5196
  %or.cond27 = and i1 %cmp1308, %tobool1311, !dbg !5197
  %152 = bitcast i64* %150 to %union.tree_node*, !dbg !5197
  br i1 %or.cond27, label %if.then1312, label %if.end1493, !dbg !5197

if.then1312:                                      ; preds = %land.lhs.true1301
  call void @llvm.dbg.value(metadata %union.tree_node* %152, metadata !4606, metadata !DIExpression()), !dbg !5198
  %cmp1315 = icmp ne %union.tree_node* %type0.1, %16, !dbg !5199
  %cmp1318 = icmp ne %union.tree_node* %type1.1, %17, !dbg !5201
  %or.cond28 = or i1 %cmp1315, %cmp1318, !dbg !5202
  br i1 %or.cond28, label %if.then1320, label %if.end1326, !dbg !5202

if.then1320:                                      ; preds = %if.then1312
  %tobool1322 = icmp ne i32 %may_need_excess_precision.0, 0, !dbg !5203
  %tobool1324 = icmp ne i32 %common.5, 0, !dbg !5203
  %or.cond29 = and i1 %tobool1322, %tobool1324, !dbg !5203
  br i1 %or.cond29, label %cond.end, label %cond.true, !dbg !5203

cond.true:                                        ; preds = %if.then1320
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 9633, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5203
  br label %cond.end, !dbg !5203

cond.end:                                         ; preds = %if.then1320, %cond.true
  %call1325 = call fastcc %union.tree_node* @c_common_type(%union.tree_node* %16, %union.tree_node* %17) #7, !dbg !5205
  call void @llvm.dbg.value(metadata %union.tree_node* %call1325, metadata !4565, metadata !DIExpression()), !dbg !4629
  br label %if.end1326, !dbg !5206

if.end1326:                                       ; preds = %if.then1312, %cond.end
  %semantic_result_type.0 = phi %union.tree_node* [ %call1325, %cond.end ], [ null, %if.then1312 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_result_type.0, metadata !4565, metadata !DIExpression()), !dbg !4629
  %type1330 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5207
  %153 = load %union.tree_node*, %union.tree_node** %type1330, align 8, !dbg !5207
  br i1 %cmp1257, label %if.then1328, label %if.else1343, !dbg !5209

if.then1328:                                      ; preds = %if.end1326
  %cmp1331 = icmp eq %union.tree_node* %153, %result_type.23, !dbg !5210
  br i1 %cmp1331, label %if.end1335, label %if.then1333, !dbg !5213

if.then1333:                                      ; preds = %if.then1328
  %call1334 = call %union.tree_node* @convert_and_check(%union.tree_node* %result_type.23, %union.tree_node* %op0.6) #6, !dbg !5214
  call void @llvm.dbg.value(metadata %union.tree_node* %call1334, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %if.end1335, !dbg !5215

if.end1335:                                       ; preds = %if.then1328, %if.then1333
  %op0.7 = phi %union.tree_node* [ %call1334, %if.then1333 ], [ %op0.6, %if.then1328 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.7, metadata !4554, metadata !DIExpression()), !dbg !4629
  %type1337 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5216
  %154 = load %union.tree_node*, %union.tree_node** %type1337, align 8, !dbg !5216
  %cmp1338 = icmp eq %union.tree_node* %154, %152, !dbg !5218
  br i1 %cmp1338, label %if.end1358, label %if.then1340, !dbg !5219

if.then1340:                                      ; preds = %if.end1335
  %call1341 = call %union.tree_node* @convert_and_check(%union.tree_node* %152, %union.tree_node* %op1.10) #6, !dbg !5220
  call void @llvm.dbg.value(metadata %union.tree_node* %call1341, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %if.end1358, !dbg !5221

if.else1343:                                      ; preds = %if.end1326
  %cmp1346 = icmp eq %union.tree_node* %153, %152, !dbg !5222
  br i1 %cmp1346, label %if.end1350, label %if.then1348, !dbg !5225

if.then1348:                                      ; preds = %if.else1343
  %call1349 = call %union.tree_node* @convert_and_check(%union.tree_node* %152, %union.tree_node* %op0.6) #6, !dbg !5226
  call void @llvm.dbg.value(metadata %union.tree_node* %call1349, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %if.end1350, !dbg !5227

if.end1350:                                       ; preds = %if.else1343, %if.then1348
  %op0.8 = phi %union.tree_node* [ %call1349, %if.then1348 ], [ %op0.6, %if.else1343 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.8, metadata !4554, metadata !DIExpression()), !dbg !4629
  %type1352 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5228
  %155 = load %union.tree_node*, %union.tree_node** %type1352, align 8, !dbg !5228
  %cmp1353 = icmp eq %union.tree_node* %155, %result_type.23, !dbg !5230
  br i1 %cmp1353, label %if.end1358, label %if.then1355, !dbg !5231

if.then1355:                                      ; preds = %if.end1350
  %call1356 = call %union.tree_node* @convert_and_check(%union.tree_node* %result_type.23, %union.tree_node* %op1.10) #6, !dbg !5232
  call void @llvm.dbg.value(metadata %union.tree_node* %call1356, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %if.end1358, !dbg !5233

if.end1358:                                       ; preds = %if.end1335, %if.end1350, %if.then1355, %if.then1340
  %op1.13 = phi %union.tree_node* [ %call1341, %if.then1340 ], [ %op1.10, %if.end1335 ], [ %call1356, %if.then1355 ], [ %op1.10, %if.end1350 ], !dbg !5207
  %op0.9 = phi %union.tree_node* [ %op0.7, %if.then1340 ], [ %op0.7, %if.end1335 ], [ %op0.8, %if.then1355 ], [ %op0.8, %if.end1350 ], !dbg !5207
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.9, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.13, metadata !4555, metadata !DIExpression()), !dbg !4629
  %156 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5234
  %bf.load1360 = load i64, i64* %156, align 8, !dbg !5234
  %bf.cast136263 = and i64 %bf.load1360, 65535, !dbg !5236
  %cmp1363 = icmp eq i64 %bf.cast136263, 0, !dbg !5236
  br i1 %cmp1363, label %if.then1372, label %lor.lhs.false1365, !dbg !5237

lor.lhs.false1365:                                ; preds = %if.end1358
  %157 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5238
  %bf.load1367 = load i64, i64* %157, align 8, !dbg !5238
  %bf.cast136964 = and i64 %bf.load1367, 65535, !dbg !5239
  %cmp1370 = icmp eq i64 %bf.cast136964, 0, !dbg !5239
  br i1 %cmp1370, label %if.then1372, label %if.end1373, !dbg !5240

if.then1372:                                      ; preds = %lor.lhs.false1365, %if.end1358
  %158 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5241
  br label %cleanup1638, !dbg !5242

if.end1373:                                       ; preds = %lor.lhs.false1365
  br i1 %cmp1257, label %if.then1375, label %if.else1429, !dbg !5243

if.then1375:                                      ; preds = %if.end1373
  %call1376 = call %union.tree_node* @c_save_expr(%union.tree_node* %op0.9) #6, !dbg !5244
  call void @llvm.dbg.value(metadata %union.tree_node* %call1376, metadata !4554, metadata !DIExpression()), !dbg !4629
  %159 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5247
  %bf.load1378 = load i64, i64* %159, align 8, !dbg !5247
  %bf.cast1380 = and i64 %bf.load1378, 65535, !dbg !5247
  %arrayidx1381 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1380, !dbg !5247
  %160 = load i32, i32* %arrayidx1381, align 4, !dbg !5247
  %cmp1382 = icmp ugt i32 %160, 3, !dbg !5247
  br i1 %cmp1382, label %land.lhs.true1384, label %cond.end1396, !dbg !5247

land.lhs.true1384:                                ; preds = %if.then1375
  %cmp1391 = icmp ult i32 %160, 11, !dbg !5247
  br i1 %cmp1391, label %cond.true1393, label %cond.end1396, !dbg !5247

cond.true1393:                                    ; preds = %land.lhs.true1384
  %161 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5247
  %162 = load i32, i32* %161, align 8, !dbg !5247
  br label %cond.end1396, !dbg !5247

cond.end1396:                                     ; preds = %if.then1375, %land.lhs.true1384, %cond.true1393
  %cond1397 = phi i32 [ %162, %cond.true1393 ], [ 0, %land.lhs.true1384 ], [ 0, %if.then1375 ], !dbg !5247
  %call1398 = call %union.tree_node* @build_unary_op(i32 %cond1397, i32 43, %union.tree_node* %call1376, i32 1) #7, !dbg !5248
  call void @llvm.dbg.value(metadata %union.tree_node* %call1398, metadata !4609, metadata !DIExpression()), !dbg !5198
  %bf.load1400 = load i64, i64* %159, align 8, !dbg !5249
  %bf.cast1402 = and i64 %bf.load1400, 65535, !dbg !5249
  %arrayidx1404 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1402, !dbg !5249
  %163 = load i32, i32* %arrayidx1404, align 4, !dbg !5249
  %cmp1405 = icmp ugt i32 %163, 3, !dbg !5249
  br i1 %cmp1405, label %land.lhs.true1407, label %cond.end1420, !dbg !5249

land.lhs.true1407:                                ; preds = %cond.end1396
  %cmp1414 = icmp ult i32 %163, 11, !dbg !5249
  br i1 %cmp1414, label %cond.true1416, label %cond.end1420, !dbg !5249

cond.true1416:                                    ; preds = %land.lhs.true1407
  %164 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5249
  %165 = load i32, i32* %164, align 8, !dbg !5249
  br label %cond.end1420, !dbg !5249

cond.end1420:                                     ; preds = %cond.end1396, %land.lhs.true1407, %cond.true1416
  %cond1421 = phi i32 [ %165, %cond.true1416 ], [ 0, %land.lhs.true1407 ], [ 0, %cond.end1396 ], !dbg !5249
  %call1422 = call %union.tree_node* @build_unary_op(i32 %cond1421, i32 44, %union.tree_node* %call1376, i32 1) #7, !dbg !5250
  call void @llvm.dbg.value(metadata %union.tree_node* %call1422, metadata !4610, metadata !DIExpression()), !dbg !5198
  switch i32 %code, label %sw.default1427 [
    i32 65, label %sw.bb1423
    i32 67, label %sw.bb1423
    i32 63, label %sw.bb1425
    i32 64, label %sw.bb1425
  ], !dbg !5251

sw.bb1423:                                        ; preds = %cond.end1420, %cond.end1420
  %call1424 = call %union.tree_node* @build2_stat(i32 %resultcode.2, %union.tree_node* %152, %union.tree_node* %call1422, %union.tree_node* %op1.13) #6, !dbg !5252
  call void @llvm.dbg.value(metadata %union.tree_node* %call1424, metadata !4610, metadata !DIExpression()), !dbg !5198
  br label %sw.bb1425, !dbg !5254

sw.bb1425:                                        ; preds = %cond.end1420, %cond.end1420, %sw.bb1423
  %imag.0 = phi %union.tree_node* [ %call1422, %cond.end1420 ], [ %call1422, %cond.end1420 ], [ %call1424, %sw.bb1423 ], !dbg !5255
  call void @llvm.dbg.value(metadata %union.tree_node* %imag.0, metadata !4610, metadata !DIExpression()), !dbg !5198
  %call1426 = call %union.tree_node* @build2_stat(i32 %resultcode.2, %union.tree_node* %152, %union.tree_node* %call1398, %union.tree_node* %op1.13) #6, !dbg !5256
  call void @llvm.dbg.value(metadata %union.tree_node* %call1426, metadata !4609, metadata !DIExpression()), !dbg !5198
  br label %if.end1488, !dbg !5257

sw.default1427:                                   ; preds = %cond.end1420
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 9670, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5258
  br label %if.end1488, !dbg !5259

if.else1429:                                      ; preds = %if.end1373
  %call1430 = call %union.tree_node* @c_save_expr(%union.tree_node* %op1.13) #6, !dbg !5260
  call void @llvm.dbg.value(metadata %union.tree_node* %call1430, metadata !4555, metadata !DIExpression()), !dbg !4629
  %166 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5262
  %bf.load1432 = load i64, i64* %166, align 8, !dbg !5262
  %bf.cast1434 = and i64 %bf.load1432, 65535, !dbg !5262
  %arrayidx1436 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1434, !dbg !5262
  %167 = load i32, i32* %arrayidx1436, align 4, !dbg !5262
  %cmp1437 = icmp ugt i32 %167, 3, !dbg !5262
  br i1 %cmp1437, label %land.lhs.true1439, label %cond.end1452, !dbg !5262

land.lhs.true1439:                                ; preds = %if.else1429
  %cmp1446 = icmp ult i32 %167, 11, !dbg !5262
  br i1 %cmp1446, label %cond.true1448, label %cond.end1452, !dbg !5262

cond.true1448:                                    ; preds = %land.lhs.true1439
  %168 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5262
  %169 = load i32, i32* %168, align 8, !dbg !5262
  br label %cond.end1452, !dbg !5262

cond.end1452:                                     ; preds = %if.else1429, %land.lhs.true1439, %cond.true1448
  %cond1453 = phi i32 [ %169, %cond.true1448 ], [ 0, %land.lhs.true1439 ], [ 0, %if.else1429 ], !dbg !5262
  %call1454 = call %union.tree_node* @build_unary_op(i32 %cond1453, i32 43, %union.tree_node* %call1430, i32 1) #7, !dbg !5263
  call void @llvm.dbg.value(metadata %union.tree_node* %call1454, metadata !4609, metadata !DIExpression()), !dbg !5198
  %bf.load1456 = load i64, i64* %166, align 8, !dbg !5264
  %bf.cast1458 = and i64 %bf.load1456, 65535, !dbg !5264
  %arrayidx1460 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1458, !dbg !5264
  %170 = load i32, i32* %arrayidx1460, align 4, !dbg !5264
  %cmp1461 = icmp ugt i32 %170, 3, !dbg !5264
  br i1 %cmp1461, label %land.lhs.true1463, label %cond.end1476, !dbg !5264

land.lhs.true1463:                                ; preds = %cond.end1452
  %cmp1470 = icmp ult i32 %170, 11, !dbg !5264
  br i1 %cmp1470, label %cond.true1472, label %cond.end1476, !dbg !5264

cond.true1472:                                    ; preds = %land.lhs.true1463
  %171 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5264
  %172 = load i32, i32* %171, align 8, !dbg !5264
  br label %cond.end1476, !dbg !5264

cond.end1476:                                     ; preds = %cond.end1452, %land.lhs.true1463, %cond.true1472
  %cond1477 = phi i32 [ %172, %cond.true1472 ], [ 0, %land.lhs.true1463 ], [ 0, %cond.end1452 ], !dbg !5264
  %call1478 = call %union.tree_node* @build_unary_op(i32 %cond1477, i32 44, %union.tree_node* %call1430, i32 1) #7, !dbg !5265
  call void @llvm.dbg.value(metadata %union.tree_node* %call1478, metadata !4610, metadata !DIExpression()), !dbg !5198
  switch i32 %code, label %sw.default1486 [
    i32 65, label %sw.bb1479
    i32 63, label %sw.bb1481
    i32 64, label %sw.bb1483
  ], !dbg !5266

sw.bb1479:                                        ; preds = %cond.end1476
  %call1480 = call %union.tree_node* @build2_stat(i32 %resultcode.2, %union.tree_node* %152, %union.tree_node* %op0.9, %union.tree_node* %call1478) #6, !dbg !5267
  call void @llvm.dbg.value(metadata %union.tree_node* %call1480, metadata !4610, metadata !DIExpression()), !dbg !5198
  br label %sw.bb1481, !dbg !5269

sw.bb1481:                                        ; preds = %cond.end1476, %sw.bb1479
  %imag.2 = phi %union.tree_node* [ %call1478, %cond.end1476 ], [ %call1480, %sw.bb1479 ], !dbg !5270
  call void @llvm.dbg.value(metadata %union.tree_node* %imag.2, metadata !4610, metadata !DIExpression()), !dbg !5198
  %call1482 = call %union.tree_node* @build2_stat(i32 %resultcode.2, %union.tree_node* %152, %union.tree_node* %op0.9, %union.tree_node* %call1454) #6, !dbg !5271
  call void @llvm.dbg.value(metadata %union.tree_node* %call1482, metadata !4609, metadata !DIExpression()), !dbg !5198
  br label %if.end1488, !dbg !5272

sw.bb1483:                                        ; preds = %cond.end1476
  %call1484 = call %union.tree_node* @build2_stat(i32 %resultcode.2, %union.tree_node* %152, %union.tree_node* %op0.9, %union.tree_node* %call1454) #6, !dbg !5273
  call void @llvm.dbg.value(metadata %union.tree_node* %call1484, metadata !4609, metadata !DIExpression()), !dbg !5198
  %call1485 = call %union.tree_node* @build1_stat(i32 79, %union.tree_node* %152, %union.tree_node* %call1478) #6, !dbg !5274
  call void @llvm.dbg.value(metadata %union.tree_node* %call1485, metadata !4610, metadata !DIExpression()), !dbg !5198
  br label %if.end1488, !dbg !5275

sw.default1486:                                   ; preds = %cond.end1476
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 9693, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5276
  br label %if.end1488, !dbg !5277

if.end1488:                                       ; preds = %sw.bb1481, %sw.bb1483, %sw.default1486, %sw.bb1425, %sw.default1427
  %op1.14 = phi %union.tree_node* [ %op1.13, %sw.default1427 ], [ %op1.13, %sw.bb1425 ], [ %call1430, %sw.default1486 ], [ %call1430, %sw.bb1483 ], [ %call1430, %sw.bb1481 ], !dbg !5198
  %op0.10 = phi %union.tree_node* [ %call1376, %sw.default1427 ], [ %call1376, %sw.bb1425 ], [ %op0.9, %sw.default1486 ], [ %op0.9, %sw.bb1483 ], [ %op0.9, %sw.bb1481 ], !dbg !5198
  %real.2 = phi %union.tree_node* [ %call1398, %sw.default1427 ], [ %call1426, %sw.bb1425 ], [ %call1454, %sw.default1486 ], [ %call1484, %sw.bb1483 ], [ %call1482, %sw.bb1481 ], !dbg !5278
  %imag.4 = phi %union.tree_node* [ %call1422, %sw.default1427 ], [ %imag.0, %sw.bb1425 ], [ %call1478, %sw.default1486 ], [ %call1485, %sw.bb1483 ], [ %imag.2, %sw.bb1481 ], !dbg !5278
  call void @llvm.dbg.value(metadata %union.tree_node* %imag.4, metadata !4610, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata %union.tree_node* %real.2, metadata !4609, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.10, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.14, metadata !4555, metadata !DIExpression()), !dbg !4629
  %call1489 = call %union.tree_node* @build2_stat(i32 123, %union.tree_node* %result_type.23, %union.tree_node* %real.2, %union.tree_node* %imag.4) #6, !dbg !5279
  call void @llvm.dbg.value(metadata %union.tree_node* %call1489, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %cleanup1638, !dbg !5280

if.end1493:                                       ; preds = %land.lhs.true1286, %land.lhs.true1301, %land.lhs.true1298, %if.end1281
  %tobool1494 = icmp ne i32 %shorten.5, 0, !dbg !5281
  %or.cond30 = and i1 %tobool1494, %144, !dbg !5283
  br i1 %or.cond30, label %if.then1497, label %if.end1502, !dbg !5283

if.then1497:                                      ; preds = %if.end1493
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.23, metadata !4568, metadata !DIExpression()), !dbg !4629
  %cmp1498 = icmp eq i32 %shorten.5, -1, !dbg !5284
  %conv1500 = zext i1 %cmp1498 to i8, !dbg !5286
  %call1501 = call %union.tree_node* @shorten_binary_op(%union.tree_node* %result_type.23, %union.tree_node* %op0.6, %union.tree_node* %op1.10, i8 zeroext %conv1500) #6, !dbg !5287
  call void @llvm.dbg.value(metadata %union.tree_node* %call1501, metadata !4564, metadata !DIExpression()), !dbg !4629
  br label %if.end1502, !dbg !5288

if.end1502:                                       ; preds = %if.then1497, %if.end1493
  %final_type.0 = phi %union.tree_node* [ %result_type.23, %if.then1497 ], [ null, %if.end1493 ], !dbg !4629
  %result_type.24 = phi %union.tree_node* [ %call1501, %if.then1497 ], [ %result_type.23, %if.end1493 ], !dbg !5177
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.24, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %final_type.0, metadata !4568, metadata !DIExpression()), !dbg !4629
  %tobool1503 = icmp eq i32 %short_shift.4, 0, !dbg !5289
  br i1 %tobool1503, label %if.end1570, label %if.then1504, !dbg !5290

if.then1504:                                      ; preds = %if.end1502
  %173 = bitcast i32* %unsigned_arg to i8*, !dbg !5291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #8, !dbg !5291
  call void @llvm.dbg.value(metadata i32* %unsigned_arg, metadata !4611, metadata !DIExpression(DW_OP_deref)), !dbg !5292
  %call1505 = call %union.tree_node* @get_narrower(%union.tree_node* %op0.6, i32* nonnull %unsigned_arg) #6, !dbg !5293
  call void @llvm.dbg.value(metadata %union.tree_node* %call1505, metadata !4614, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.24, metadata !4568, metadata !DIExpression()), !dbg !4629
  %cmp1506 = icmp eq %union.tree_node* %call1505, %op0.6, !dbg !5294
  br i1 %cmp1506, label %land.lhs.true1508, label %if.end1521, !dbg !5296

land.lhs.true1508:                                ; preds = %if.then1504
  %type1510 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5297
  %174 = load %union.tree_node*, %union.tree_node** %type1510, align 8, !dbg !5297
  %cmp1511 = icmp eq %union.tree_node* %result_type.24, %174, !dbg !5298
  br i1 %cmp1511, label %if.then1513, label %if.end1521, !dbg !5299

if.then1513:                                      ; preds = %land.lhs.true1508
  %175 = getelementptr inbounds %union.tree_node, %union.tree_node* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5299
  %bf.load1517 = load i64, i64* %175, align 8, !dbg !5300
  %bf.lshr1518 = lshr i64 %bf.load1517, 21, !dbg !5300
  %176 = trunc i64 %bf.lshr1518 to i32, !dbg !5300
  %bf.cast1520 = and i32 %176, 1, !dbg !5300
  call void @llvm.dbg.value(metadata i32 %bf.cast1520, metadata !4611, metadata !DIExpression()), !dbg !5292
  store i32 %bf.cast1520, i32* %unsigned_arg, align 4, !dbg !5301
  br label %if.end1521, !dbg !5302

if.end1521:                                       ; preds = %if.then1513, %land.lhs.true1508, %if.then1504
  %type1523 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5303
  %177 = bitcast %union.tree_node** %type1523 to %struct.tree_type**, !dbg !5303
  %178 = load %struct.tree_type*, %struct.tree_type** %177, align 8, !dbg !5303
  %precision1525 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %178, i64 0, i32 6, !dbg !5303
  %bf.load1526 = load i32, i32* %precision1525, align 4, !dbg !5303
  %bf.clear1527 = and i32 %bf.load1526, 1023, !dbg !5303
  %type1528 = bitcast %union.tree_node* %result_type.24 to %struct.tree_type*, !dbg !5305
  %precision1529 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1528, i64 0, i32 6, !dbg !5305
  %bf.load1530 = load i32, i32* %precision1529, align 4, !dbg !5305
  %bf.clear1531 = and i32 %bf.load1530, 1023, !dbg !5305
  %cmp1532 = icmp ult i32 %bf.clear1527, %bf.clear1531, !dbg !5306
  br i1 %cmp1532, label %land.lhs.true1534, label %if.end1569, !dbg !5307

land.lhs.true1534:                                ; preds = %if.end1521
  %call1535 = call i32 @tree_int_cst_sgn(%union.tree_node* %op1.10) #6, !dbg !5308
  %cmp1536 = icmp sgt i32 %call1535, 0, !dbg !5309
  br i1 %cmp1536, label %land.lhs.true1538, label %if.end1569, !dbg !5310

land.lhs.true1538:                                ; preds = %land.lhs.true1534
  %179 = load %struct.tree_type*, %struct.tree_type** %177, align 8, !dbg !5311
  %precision1542 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %179, i64 0, i32 6, !dbg !5311
  %bf.load1543 = load i32, i32* %precision1542, align 4, !dbg !5311
  %bf.clear1544 = and i32 %bf.load1543, 1023, !dbg !5311
  %conv1545 = zext i32 %bf.clear1544 to i64, !dbg !5311
  %call1546 = call i32 @compare_tree_int(%union.tree_node* %op1.10, i64 %conv1545) #6, !dbg !5312
  %cmp1547 = icmp slt i32 %call1546, 0, !dbg !5313
  br i1 %cmp1547, label %land.lhs.true1549, label %if.end1569, !dbg !5314

land.lhs.true1549:                                ; preds = %land.lhs.true1538
  %180 = getelementptr inbounds %union.tree_node, %union.tree_node* %result_type.24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5315
  %bf.load1551 = load i64, i64* %180, align 8, !dbg !5315
  %bf.cast155461 = and i64 %bf.load1551, 2097152, !dbg !5315
  %tobool1555 = icmp eq i64 %bf.cast155461, 0, !dbg !5315
  %181 = load i32, i32* %unsigned_arg, align 4, !dbg !5316
  call void @llvm.dbg.value(metadata i32 %181, metadata !4611, metadata !DIExpression()), !dbg !5292
  %tobool1557 = icmp ne i32 %181, 0, !dbg !5316
  %or.cond31 = or i1 %tobool1555, %tobool1557, !dbg !5317
  br i1 %or.cond31, label %if.then1558, label %if.end1569, !dbg !5317

if.then1558:                                      ; preds = %land.lhs.true1549
  call void @llvm.dbg.value(metadata i32 %181, metadata !4611, metadata !DIExpression()), !dbg !5292
  %182 = load %union.tree_node*, %union.tree_node** %type1523, align 8, !dbg !5318
  %call1561 = call %union.tree_node* @c_common_signed_or_unsigned_type(i32 %181, %union.tree_node* %182) #6, !dbg !5320
  call void @llvm.dbg.value(metadata %union.tree_node* %call1561, metadata !4564, metadata !DIExpression()), !dbg !4629
  %type1563 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5321
  %183 = load %union.tree_node*, %union.tree_node** %type1563, align 8, !dbg !5321
  %cmp1564 = icmp eq %union.tree_node* %183, %call1561, !dbg !5323
  br i1 %cmp1564, label %if.end1569, label %if.then1566, !dbg !5324

if.then1566:                                      ; preds = %if.then1558
  %call1567 = call %union.tree_node* @convert(%union.tree_node* %call1561, %union.tree_node* %op0.6) #6, !dbg !5325
  call void @llvm.dbg.value(metadata %union.tree_node* %call1567, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %if.end1569, !dbg !5326

if.end1569:                                       ; preds = %if.then1558, %if.then1566, %land.lhs.true1549, %land.lhs.true1538, %land.lhs.true1534, %if.end1521
  %converted.4 = phi i32 [ %converted.3, %land.lhs.true1538 ], [ %converted.3, %land.lhs.true1534 ], [ %converted.3, %if.end1521 ], [ %converted.3, %land.lhs.true1549 ], [ 1, %if.then1566 ], [ 1, %if.then1558 ], !dbg !4629
  %result_type.25 = phi %union.tree_node* [ %result_type.24, %land.lhs.true1538 ], [ %result_type.24, %land.lhs.true1534 ], [ %result_type.24, %if.end1521 ], [ %result_type.24, %land.lhs.true1549 ], [ %call1561, %if.then1566 ], [ %call1561, %if.then1558 ], !dbg !5177
  %op0.13 = phi %union.tree_node* [ %op0.6, %land.lhs.true1538 ], [ %op0.6, %land.lhs.true1534 ], [ %op0.6, %if.end1521 ], [ %op0.6, %land.lhs.true1549 ], [ %call1567, %if.then1566 ], [ %op0.6, %if.then1558 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.13, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.25, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.4, metadata !4566, metadata !DIExpression()), !dbg !4629
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173) #8, !dbg !5327
  br label %if.end1570, !dbg !5328

if.end1570:                                       ; preds = %if.end1502, %if.end1569
  %final_type.1 = phi %union.tree_node* [ %result_type.24, %if.end1569 ], [ %final_type.0, %if.end1502 ], !dbg !5177
  %converted.5 = phi i32 [ %converted.4, %if.end1569 ], [ %converted.3, %if.end1502 ], !dbg !4629
  %result_type.26 = phi %union.tree_node* [ %result_type.25, %if.end1569 ], [ %result_type.24, %if.end1502 ], !dbg !5177
  %op0.14 = phi %union.tree_node* [ %op0.13, %if.end1569 ], [ %op0.6, %if.end1502 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.14, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.26, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.5, metadata !4566, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %final_type.1, metadata !4568, metadata !DIExpression()), !dbg !4629
  %tobool1571 = icmp eq i32 %short_compare.2, 0, !dbg !5329
  br i1 %tobool1571, label %if.end1637, label %if.then1572, !dbg !5330

if.then1572:                                      ; preds = %if.end1570
  %184 = bitcast %union.tree_node** %xop0 to i8*, !dbg !5331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #8, !dbg !5331
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.14, metadata !4615, metadata !DIExpression()), !dbg !5332
  store %union.tree_node* %op0.14, %union.tree_node** %xop0, align 8, !dbg !5333
  %185 = bitcast %union.tree_node** %xop1 to i8*, !dbg !5331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #8, !dbg !5331
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.10, metadata !4618, metadata !DIExpression()), !dbg !5332
  store %union.tree_node* %op1.10, %union.tree_node** %xop1, align 8, !dbg !5334
  %186 = bitcast %union.tree_node** %xresult_type to i8*, !dbg !5331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #8, !dbg !5331
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.26, metadata !4619, metadata !DIExpression()), !dbg !5332
  store %union.tree_node* %result_type.26, %union.tree_node** %xresult_type, align 8, !dbg !5335
  %187 = bitcast i32* %xresultcode to i8*, !dbg !5336
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187) #8, !dbg !5336
  call void @llvm.dbg.value(metadata i32 %resultcode.2, metadata !4620, metadata !DIExpression()), !dbg !5332
  store i32 %resultcode.2, i32* %xresultcode, align 4, !dbg !5337
  call void @llvm.dbg.value(metadata %union.tree_node** %xop0, metadata !4615, metadata !DIExpression(DW_OP_deref)), !dbg !5332
  call void @llvm.dbg.value(metadata %union.tree_node** %xop1, metadata !4618, metadata !DIExpression(DW_OP_deref)), !dbg !5332
  call void @llvm.dbg.value(metadata %union.tree_node** %xresult_type, metadata !4619, metadata !DIExpression(DW_OP_deref)), !dbg !5332
  call void @llvm.dbg.value(metadata i32* %xresultcode, metadata !4620, metadata !DIExpression(DW_OP_deref)), !dbg !5332
  %call1573 = call %union.tree_node* @shorten_compare(%union.tree_node** nonnull %xop0, %union.tree_node** nonnull %xop1, %union.tree_node** nonnull %xresult_type, i32* nonnull %xresultcode) #6, !dbg !5338
  call void @llvm.dbg.value(metadata %union.tree_node* %call1573, metadata !4621, metadata !DIExpression()), !dbg !5332
  %cmp1574 = icmp eq %union.tree_node* %call1573, null, !dbg !5339
  br i1 %cmp1574, label %if.end1577, label %cleanup1630, !dbg !5341

if.end1577:                                       ; preds = %if.then1572
  %188 = load %union.tree_node*, %union.tree_node** %xop0, align 8, !dbg !5342
  call void @llvm.dbg.value(metadata %union.tree_node* %188, metadata !4615, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata %union.tree_node* %188, metadata !4554, metadata !DIExpression()), !dbg !4629
  %189 = load %union.tree_node*, %union.tree_node** %xop1, align 8, !dbg !5343
  call void @llvm.dbg.value(metadata %union.tree_node* %189, metadata !4618, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata %union.tree_node* %189, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 1, metadata !4566, metadata !DIExpression()), !dbg !4629
  %190 = load i32, i32* %xresultcode, align 4, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %190, metadata !4620, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i32 %190, metadata !4563, metadata !DIExpression()), !dbg !4629
  %191 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5345
  %cmp1578 = icmp eq i32 %191, 0, !dbg !5346
  br i1 %cmp1578, label %if.then1580, label %cleanup1630, !dbg !5347

if.then1580:                                      ; preds = %if.end1577
  call void @llvm.dbg.value(metadata i8* %op0_maybe_const, metadata !4622, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op0_maybe_const) #8, !dbg !5349
  call void @llvm.dbg.value(metadata i8 1, metadata !4622, metadata !DIExpression()), !dbg !5348
  store i8 1, i8* %op0_maybe_const, align 1, !dbg !5350
  call void @llvm.dbg.value(metadata i8* %op1_maybe_const, metadata !4625, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op1_maybe_const) #8, !dbg !5351
  call void @llvm.dbg.value(metadata i8 1, metadata !4625, metadata !DIExpression()), !dbg !5348
  store i8 1, i8* %op1_maybe_const, align 1, !dbg !5352
  %192 = load i8, i8* @in_late_binary_op, align 1, !dbg !5353
  %tobool1581 = icmp eq i8 %192, 0, !dbg !5353
  br i1 %tobool1581, label %if.else1583, label %if.end1592, !dbg !5355

if.else1583:                                      ; preds = %if.then1580
  store i32 1, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5356
  %193 = load i32, i32* @require_constant_value, align 4, !dbg !5358
  %conv1584 = trunc i32 %193 to i8, !dbg !5358
  call void @llvm.dbg.value(metadata i8* %op0_maybe_const, metadata !4622, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  %call1585 = call %union.tree_node* @c_fully_fold(%union.tree_node* %188, i8 zeroext %conv1584, i8* nonnull %op0_maybe_const) #6, !dbg !5359
  call void @llvm.dbg.value(metadata %union.tree_node* %call1585, metadata !4554, metadata !DIExpression()), !dbg !4629
  %194 = load i32, i32* @require_constant_value, align 4, !dbg !5360
  %conv1586 = trunc i32 %194 to i8, !dbg !5360
  call void @llvm.dbg.value(metadata i8* %op1_maybe_const, metadata !4625, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  %call1587 = call %union.tree_node* @c_fully_fold(%union.tree_node* %189, i8 zeroext %conv1586, i8* nonnull %op1_maybe_const) #6, !dbg !5361
  call void @llvm.dbg.value(metadata %union.tree_node* %call1587, metadata !4555, metadata !DIExpression()), !dbg !4629
  %195 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5362
  %dec = add nsw i32 %195, -1, !dbg !5362
  store i32 %dec, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5362
  %196 = load i32, i32* @require_constant_value, align 4, !dbg !5363
  %conv1588 = trunc i32 %196 to i8, !dbg !5363
  %call1589 = call %union.tree_node* @c_fully_fold(%union.tree_node* %orig_op0, i8 zeroext %conv1588, i8* null) #6, !dbg !5364
  call void @llvm.dbg.value(metadata %union.tree_node* %call1589, metadata !4626, metadata !DIExpression()), !dbg !5348
  %197 = load i32, i32* @require_constant_value, align 4, !dbg !5365
  %conv1590 = trunc i32 %197 to i8, !dbg !5365
  %call1591 = call %union.tree_node* @c_fully_fold(%union.tree_node* %orig_op1, i8 zeroext %conv1590, i8* null) #6, !dbg !5366
  call void @llvm.dbg.value(metadata %union.tree_node* %call1591, metadata !4627, metadata !DIExpression()), !dbg !5348
  br label %if.end1592

if.end1592:                                       ; preds = %if.then1580, %if.else1583
  %op1.16 = phi %union.tree_node* [ %call1587, %if.else1583 ], [ %189, %if.then1580 ], !dbg !5332
  %op0.15 = phi %union.tree_node* [ %call1585, %if.else1583 ], [ %188, %if.then1580 ], !dbg !5332
  %orig_op0_folded.0 = phi %union.tree_node* [ %call1589, %if.else1583 ], [ %orig_op0, %if.then1580 ], !dbg !5367
  %orig_op1_folded.0 = phi %union.tree_node* [ %call1591, %if.else1583 ], [ %orig_op1, %if.then1580 ], !dbg !5367
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op1_folded.0, metadata !4627, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_op0_folded.0, metadata !4626, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.15, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.16, metadata !4555, metadata !DIExpression()), !dbg !4629
  %198 = load i32, i32* @warn_sign_compare, align 4, !dbg !5368
  %tobool1593 = icmp eq i32 %198, 0, !dbg !5368
  br i1 %tobool1593, label %if.end1595, label %if.then1594, !dbg !5370

if.then1594:                                      ; preds = %if.end1592
  call void @warn_for_sign_compare(i32 %spec.select, %union.tree_node* %orig_op0_folded.0, %union.tree_node* %orig_op1_folded.0, %union.tree_node* %op0.15, %union.tree_node* %op1.16, %union.tree_node* %result_type.26, i32 %190) #6, !dbg !5371
  br label %if.end1595, !dbg !5371

if.end1595:                                       ; preds = %if.end1592, %if.then1594
  %199 = load i8, i8* @in_late_binary_op, align 1, !dbg !5372
  %tobool1596 = icmp eq i8 %199, 0, !dbg !5372
  br i1 %tobool1596, label %if.then1597, label %if.end1628, !dbg !5374

if.then1597:                                      ; preds = %if.end1595
  %200 = load i8, i8* %op0_maybe_const, align 1, !dbg !5375
  call void @llvm.dbg.value(metadata i8 %200, metadata !4622, metadata !DIExpression()), !dbg !5348
  %tobool1598 = icmp eq i8 %200, 0, !dbg !5375
  br i1 %tobool1598, label %if.then1606, label %lor.lhs.false1599, !dbg !5378

lor.lhs.false1599:                                ; preds = %if.then1597
  %201 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5379
  %bf.load1601 = load i64, i64* %201, align 8, !dbg !5379
  %bf.cast160360 = and i64 %bf.load1601, 65535, !dbg !5380
  %cmp1604 = icmp eq i64 %bf.cast160360, 23, !dbg !5380
  br i1 %cmp1604, label %if.end1612, label %if.then1606, !dbg !5381

if.then1606:                                      ; preds = %lor.lhs.false1599, %if.then1597
  call void @llvm.dbg.value(metadata i8 %200, metadata !4622, metadata !DIExpression()), !dbg !5348
  %conv1610 = zext i1 %tobool1598 to i8, !dbg !5382
  %call1611 = call %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %op0.15, i8 zeroext %conv1610) #6, !dbg !5383
  call void @llvm.dbg.value(metadata %union.tree_node* %call1611, metadata !4554, metadata !DIExpression()), !dbg !4629
  br label %if.end1612, !dbg !5384

if.end1612:                                       ; preds = %lor.lhs.false1599, %if.then1606
  %op0.16 = phi %union.tree_node* [ %call1611, %if.then1606 ], [ %op0.15, %lor.lhs.false1599 ], !dbg !5332
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.16, metadata !4554, metadata !DIExpression()), !dbg !4629
  %202 = load i8, i8* %op1_maybe_const, align 1, !dbg !5385
  call void @llvm.dbg.value(metadata i8 %202, metadata !4625, metadata !DIExpression()), !dbg !5348
  %tobool1613 = icmp eq i8 %202, 0, !dbg !5385
  br i1 %tobool1613, label %if.then1621, label %lor.lhs.false1614, !dbg !5387

lor.lhs.false1614:                                ; preds = %if.end1612
  %203 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5388
  %bf.load1616 = load i64, i64* %203, align 8, !dbg !5388
  %bf.cast161859 = and i64 %bf.load1616, 65535, !dbg !5389
  %cmp1619 = icmp eq i64 %bf.cast161859, 23, !dbg !5389
  br i1 %cmp1619, label %if.end1628, label %if.then1621, !dbg !5390

if.then1621:                                      ; preds = %lor.lhs.false1614, %if.end1612
  call void @llvm.dbg.value(metadata i8 %202, metadata !4625, metadata !DIExpression()), !dbg !5348
  %conv1625 = zext i1 %tobool1613 to i8, !dbg !5391
  %call1626 = call %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %op1.16, i8 zeroext %conv1625) #6, !dbg !5392
  call void @llvm.dbg.value(metadata %union.tree_node* %call1626, metadata !4555, metadata !DIExpression()), !dbg !4629
  br label %if.end1628, !dbg !5393

if.end1628:                                       ; preds = %lor.lhs.false1614, %if.end1595, %if.then1621
  %op1.18 = phi %union.tree_node* [ %op1.16, %if.end1595 ], [ %call1626, %if.then1621 ], [ %op1.16, %lor.lhs.false1614 ], !dbg !5332
  %op0.17 = phi %union.tree_node* [ %op0.15, %if.end1595 ], [ %op0.16, %if.then1621 ], [ %op0.16, %lor.lhs.false1614 ], !dbg !5332
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.17, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.18, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8* %op1_maybe_const, metadata !4625, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op1_maybe_const) #8, !dbg !5394
  call void @llvm.dbg.value(metadata i8* %op0_maybe_const, metadata !4622, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op0_maybe_const) #8, !dbg !5394
  br label %cleanup1630, !dbg !5395

cleanup1630:                                      ; preds = %if.then1572, %if.end1577, %if.end1628
  %converted.6 = phi i32 [ %converted.5, %if.then1572 ], [ 1, %if.end1628 ], [ 1, %if.end1577 ], !dbg !5177
  %resultcode.3 = phi i32 [ %resultcode.2, %if.then1572 ], [ %190, %if.end1628 ], [ %190, %if.end1577 ], !dbg !4629
  %ret.1 = phi %union.tree_node* [ %call1573, %if.then1572 ], [ %0, %if.end1628 ], [ %0, %if.end1577 ], !dbg !4629
  %op1.20 = phi %union.tree_node* [ %op1.10, %if.then1572 ], [ %op1.18, %if.end1628 ], [ %189, %if.end1577 ], !dbg !4629
  %op0.19 = phi %union.tree_node* [ %op0.14, %if.then1572 ], [ %op0.17, %if.end1628 ], [ %188, %if.end1577 ], !dbg !5177
  %cleanup.dest.slot.3 = phi i32 [ 8, %if.then1572 ], [ 0, %if.end1628 ], [ 0, %if.end1577 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.19, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.20, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !4556, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %resultcode.3, metadata !4563, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.6, metadata !4566, metadata !DIExpression()), !dbg !4629
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187) #8, !dbg !5396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #8, !dbg !5396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #8, !dbg !5396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #8, !dbg !5396
  %cond1 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond1, label %if.end1637, label %cleanup1638

if.end1637:                                       ; preds = %if.end1570, %cleanup1630
  %converted.7 = phi i32 [ %converted.5, %if.end1570 ], [ %converted.6, %cleanup1630 ], !dbg !5397
  %resultcode.4 = phi i32 [ %resultcode.2, %if.end1570 ], [ %resultcode.3, %cleanup1630 ], !dbg !5154
  %ret.2 = phi %union.tree_node* [ %0, %if.end1570 ], [ %ret.1, %cleanup1630 ], !dbg !4629
  %op1.21 = phi %union.tree_node* [ %op1.10, %if.end1570 ], [ %op1.20, %cleanup1630 ], !dbg !5398
  %op0.20 = phi %union.tree_node* [ %op0.14, %if.end1570 ], [ %op0.19, %cleanup1630 ], !dbg !5399
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.20, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.21, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.2, metadata !4556, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %resultcode.4, metadata !4563, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.7, metadata !4566, metadata !DIExpression()), !dbg !4629
  br label %cleanup1638, !dbg !5400

cleanup1638:                                      ; preds = %if.then1372, %if.end1488, %cleanup1630, %if.end1637, %if.then1279
  %final_type.2 = phi %union.tree_node* [ null, %if.then1279 ], [ %final_type.1, %cleanup1630 ], [ %final_type.1, %if.end1637 ], [ null, %if.end1488 ], [ null, %if.then1372 ], !dbg !4629
  %converted.8 = phi i32 [ %converted.3, %if.then1279 ], [ %converted.6, %cleanup1630 ], [ %converted.7, %if.end1637 ], [ %converted.3, %if.end1488 ], [ %converted.3, %if.then1372 ], !dbg !4629
  %semantic_result_type.1 = phi %union.tree_node* [ null, %if.then1279 ], [ null, %cleanup1630 ], [ null, %if.end1637 ], [ %semantic_result_type.0, %if.end1488 ], [ %semantic_result_type.0, %if.then1372 ], !dbg !4629
  %result_type.27 = phi %union.tree_node* [ %call1276, %if.then1279 ], [ %result_type.26, %cleanup1630 ], [ %result_type.26, %if.end1637 ], [ %result_type.23, %if.end1488 ], [ %result_type.23, %if.then1372 ], !dbg !5177
  %resultcode.5 = phi i32 [ %resultcode.2, %if.then1279 ], [ %resultcode.3, %cleanup1630 ], [ %resultcode.4, %if.end1637 ], [ %resultcode.2, %if.end1488 ], [ %resultcode.2, %if.then1372 ], !dbg !5154
  %ret.3 = phi %union.tree_node* [ %0, %if.then1279 ], [ %ret.1, %cleanup1630 ], [ %ret.2, %if.end1637 ], [ %call1489, %if.end1488 ], [ %0, %if.then1372 ], !dbg !4629
  %op1.22 = phi %union.tree_node* [ %op1.10, %if.then1279 ], [ %op1.20, %cleanup1630 ], [ %op1.21, %if.end1637 ], [ %op1.14, %if.end1488 ], [ %op1.13, %if.then1372 ], !dbg !4629
  %op0.21 = phi %union.tree_node* [ %op0.6, %if.then1279 ], [ %op0.19, %cleanup1630 ], [ %op0.20, %if.end1637 ], [ %op0.10, %if.end1488 ], [ %op0.9, %if.then1372 ], !dbg !4629
  %cleanup.dest.slot.4 = phi i32 [ 1, %if.then1279 ], [ %cleanup.dest.slot.3, %cleanup1630 ], [ 0, %if.end1637 ], [ 8, %if.end1488 ], [ 1, %if.then1372 ]
  %retval.8 = phi %union.tree_node* [ %call1276, %if.then1279 ], [ %retval.6, %cleanup1630 ], [ %retval.6, %if.end1637 ], [ %retval.6, %if.end1488 ], [ %158, %if.then1372 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.21, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.22, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.3, metadata !4556, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %resultcode.5, metadata !4563, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.27, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_result_type.1, metadata !4565, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.8, metadata !4566, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %final_type.2, metadata !4568, metadata !DIExpression()), !dbg !4629
  switch i32 %cleanup.dest.slot.4, label %cleanup1760 [
    i32 0, label %if.end1643
    i32 8, label %return_build_binary_op
  ]

if.end1643:                                       ; preds = %cleanup1638, %land.lhs.true1241, %if.end1226
  %final_type.3 = phi %union.tree_node* [ null, %if.end1226 ], [ null, %land.lhs.true1241 ], [ %final_type.2, %cleanup1638 ], !dbg !5401
  %converted.9 = phi i32 [ %converted.3, %if.end1226 ], [ %converted.3, %land.lhs.true1241 ], [ %converted.8, %cleanup1638 ], !dbg !5402
  %semantic_result_type.2 = phi %union.tree_node* [ null, %if.end1226 ], [ null, %land.lhs.true1241 ], [ %semantic_result_type.1, %cleanup1638 ], !dbg !5403
  %result_type.28 = phi %union.tree_node* [ %result_type.22, %if.end1226 ], [ %result_type.22, %land.lhs.true1241 ], [ %result_type.27, %cleanup1638 ], !dbg !4629
  %resultcode.6 = phi i32 [ %resultcode.2, %if.end1226 ], [ %resultcode.2, %land.lhs.true1241 ], [ %resultcode.5, %cleanup1638 ], !dbg !5154
  %op1.23 = phi %union.tree_node* [ %op1.10, %if.end1226 ], [ %op1.10, %land.lhs.true1241 ], [ %op1.22, %cleanup1638 ], !dbg !5398
  %op0.22 = phi %union.tree_node* [ %op0.6, %if.end1226 ], [ %op0.6, %land.lhs.true1241 ], [ %op0.21, %cleanup1638 ], !dbg !5404
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.22, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.23, metadata !4555, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %resultcode.6, metadata !4563, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.28, metadata !4564, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_result_type.2, metadata !4565, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i32 %converted.9, metadata !4566, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %final_type.3, metadata !4568, metadata !DIExpression()), !dbg !4629
  %tobool1644 = icmp eq %union.tree_node* %result_type.28, null, !dbg !5405
  br i1 %tobool1644, label %if.then1645, label %if.end1650, !dbg !5407

if.then1645:                                      ; preds = %if.end1643
  %type1647 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5408
  %204 = load %union.tree_node*, %union.tree_node** %type1647, align 8, !dbg !5408
  %type1649 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5410
  %205 = load %union.tree_node*, %union.tree_node** %type1649, align 8, !dbg !5410
  call void @binary_op_error(i32 %spec.select, i32 %code, %union.tree_node* %204, %union.tree_node* %205) #6, !dbg !5411
  %206 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5412
  br label %cleanup1760, !dbg !5413

if.end1650:                                       ; preds = %if.end1643
  %cmp1651 = icmp eq %union.tree_node* %build_type.0, null, !dbg !5414
  br i1 %cmp1651, label %if.then1653, label %if.end1670, !dbg !5416

if.then1653:                                      ; preds = %if.end1650
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.28, metadata !4567, metadata !DIExpression()), !dbg !4629
  %cmp1654 = icmp ne %union.tree_node* %type0.1, %16, !dbg !5417
  %cmp1657 = icmp ne %union.tree_node* %type1.1, %17, !dbg !5420
  %or.cond32 = or i1 %cmp1654, %cmp1657, !dbg !5421
  br i1 %or.cond32, label %if.then1659, label %if.end1670, !dbg !5421

if.then1659:                                      ; preds = %if.then1653
  %tobool1661 = icmp ne i32 %may_need_excess_precision.0, 0, !dbg !5422
  %tobool1663 = icmp ne i32 %common.5, 0, !dbg !5422
  %or.cond33 = and i1 %tobool1661, %tobool1663, !dbg !5422
  br i1 %or.cond33, label %cond.end1666, label %cond.true1664, !dbg !5422

cond.true1664:                                    ; preds = %if.then1659
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 9836, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5422
  br label %cond.end1666, !dbg !5422

cond.end1666:                                     ; preds = %if.then1659, %cond.true1664
  %call1668 = call fastcc %union.tree_node* @c_common_type(%union.tree_node* %16, %union.tree_node* %17) #7, !dbg !5424
  call void @llvm.dbg.value(metadata %union.tree_node* %call1668, metadata !4565, metadata !DIExpression()), !dbg !4629
  br label %if.end1670, !dbg !5425

if.end1670:                                       ; preds = %cond.end1666, %if.then1653, %if.end1650
  %build_type.1 = phi %union.tree_node* [ %build_type.0, %if.end1650 ], [ %result_type.28, %if.then1653 ], [ %result_type.28, %cond.end1666 ], !dbg !4629
  %semantic_result_type.4 = phi %union.tree_node* [ %semantic_result_type.2, %if.end1650 ], [ %semantic_result_type.2, %if.then1653 ], [ %call1668, %cond.end1666 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_result_type.4, metadata !4565, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %build_type.1, metadata !4567, metadata !DIExpression()), !dbg !4629
  %tobool1671 = icmp eq i32 %converted.9, 0, !dbg !5426
  br i1 %tobool1671, label %if.then1672, label %if.end1690, !dbg !5428

if.then1672:                                      ; preds = %if.end1670
  %call1673 = call fastcc %union.tree_node* @ep_convert_and_check(%union.tree_node* nonnull %result_type.28, %union.tree_node* %op0.22, %union.tree_node* %semantic_result_type.4) #7, !dbg !5429
  call void @llvm.dbg.value(metadata %union.tree_node* %call1673, metadata !4554, metadata !DIExpression()), !dbg !4629
  %call1674 = call fastcc %union.tree_node* @ep_convert_and_check(%union.tree_node* nonnull %result_type.28, %union.tree_node* %op1.23, %union.tree_node* %semantic_result_type.4) #7, !dbg !5431
  call void @llvm.dbg.value(metadata %union.tree_node* %call1674, metadata !4555, metadata !DIExpression()), !dbg !4629
  %207 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1673, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5432
  %bf.load1676 = load i64, i64* %207, align 8, !dbg !5432
  %bf.cast167857 = and i64 %bf.load1676, 65535, !dbg !5434
  %cmp1679 = icmp eq i64 %bf.cast167857, 0, !dbg !5434
  br i1 %cmp1679, label %if.then1688, label %lor.lhs.false1681, !dbg !5435

lor.lhs.false1681:                                ; preds = %if.then1672
  %208 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1674, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5436
  %bf.load1683 = load i64, i64* %208, align 8, !dbg !5436
  %bf.cast168558 = and i64 %bf.load1683, 65535, !dbg !5437
  %cmp1686 = icmp eq i64 %bf.cast168558, 0, !dbg !5437
  br i1 %cmp1686, label %if.then1688, label %if.end1690, !dbg !5438

if.then1688:                                      ; preds = %lor.lhs.false1681, %if.then1672
  %209 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5439
  br label %cleanup1760, !dbg !5440

if.end1690:                                       ; preds = %if.end1670, %lor.lhs.false1681
  %op1.24 = phi %union.tree_node* [ %op1.23, %if.end1670 ], [ %call1674, %lor.lhs.false1681 ], !dbg !4629
  %op0.23 = phi %union.tree_node* [ %op0.22, %if.end1670 ], [ %call1673, %lor.lhs.false1681 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.23, metadata !4554, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.24, metadata !4555, metadata !DIExpression()), !dbg !4629
  %tobool1691 = icmp eq i8 %int_const_or_overflow.3, 0, !dbg !5441
  br i1 %tobool1691, label %if.else1700, label %if.then1692, !dbg !5443

if.then1692:                                      ; preds = %if.end1690
  %210 = load i32, i32* @require_constant_value, align 4, !dbg !5444
  %tobool1693 = icmp eq i32 %210, 0, !dbg !5444
  br i1 %tobool1693, label %cond.false1696, label %cond.true1694, !dbg !5444

cond.true1694:                                    ; preds = %if.then1692
  %call1695 = call %union.tree_node* @fold_build2_initializer_loc(i32 %spec.select, i32 %resultcode.6, %union.tree_node* %build_type.1, %union.tree_node* %op0.23, %union.tree_node* %op1.24) #6, !dbg !5445
  br label %if.end1702, !dbg !5444

cond.false1696:                                   ; preds = %if.then1692
  %call1697 = call %union.tree_node* @fold_build2_stat_loc(i32 %spec.select, i32 %resultcode.6, %union.tree_node* %build_type.1, %union.tree_node* %op0.23, %union.tree_node* %op1.24) #6, !dbg !5446
  br label %if.end1702, !dbg !5444

if.else1700:                                      ; preds = %if.end1690
  %call1701 = call %union.tree_node* @build2_stat(i32 %resultcode.6, %union.tree_node* %build_type.1, %union.tree_node* %op0.23, %union.tree_node* %op1.24) #6, !dbg !5447
  call void @llvm.dbg.value(metadata %union.tree_node* %call1701, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %if.end1702

if.end1702:                                       ; preds = %cond.true1694, %cond.false1696, %if.else1700
  %ret.4 = phi %union.tree_node* [ %call1701, %if.else1700 ], [ %call1695, %cond.true1694 ], [ %call1697, %cond.false1696 ], !dbg !5448
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.4, metadata !4556, metadata !DIExpression()), !dbg !4629
  %cmp1703 = icmp eq %union.tree_node* %final_type.3, null, !dbg !5449
  br i1 %cmp1703, label %return_build_binary_op, label %if.then1705, !dbg !5451

if.then1705:                                      ; preds = %if.end1702
  %call1706 = call %union.tree_node* @convert(%union.tree_node* nonnull %final_type.3, %union.tree_node* %ret.4) #6, !dbg !5452
  call void @llvm.dbg.value(metadata %union.tree_node* %call1706, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %return_build_binary_op, !dbg !5453

return_build_binary_op:                           ; preds = %if.end1702, %if.then1705, %cleanup1638, %if.then332, %if.then324, %if.then310, %if.then302
  %semantic_result_type.5 = phi %union.tree_node* [ %semantic_result_type.1, %cleanup1638 ], [ null, %if.then324 ], [ null, %if.then332 ], [ null, %if.then302 ], [ null, %if.then310 ], [ %semantic_result_type.4, %if.then1705 ], [ %semantic_result_type.4, %if.end1702 ], !dbg !4629
  %int_const.12 = phi i8 [ %int_const.11, %cleanup1638 ], [ %int_const.0, %if.then324 ], [ %int_const.0, %if.then332 ], [ %int_const.0, %if.then302 ], [ %int_const.0, %if.then310 ], [ %int_const.11, %if.then1705 ], [ %int_const.11, %if.end1702 ], !dbg !5454
  %ret.6 = phi %union.tree_node* [ %ret.3, %cleanup1638 ], [ %call325, %if.then324 ], [ %call333, %if.then332 ], [ %call303, %if.then302 ], [ %call311, %if.then310 ], [ %call1706, %if.then1705 ], [ %ret.4, %if.end1702 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.6, metadata !4556, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata i8 %int_const.12, metadata !4560, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_result_type.5, metadata !4565, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.label(metadata !4628), !dbg !5455
  %211 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5456
  %cmp1708 = icmp eq %union.tree_node* %ret.6, %211, !dbg !5456
  br i1 %cmp1708, label %cond.true1710, label %cond.end1712, !dbg !5456

cond.true1710:                                    ; preds = %return_build_binary_op
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 9864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5456
  br label %cond.end1712, !dbg !5456

cond.end1712:                                     ; preds = %return_build_binary_op, %cond.true1710
  %212 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5457
  %bf.load1715 = load i64, i64* %212, align 8, !dbg !5457
  %bf.cast171754 = and i64 %bf.load1715, 65535, !dbg !5459
  %cmp1718 = icmp eq i64 %bf.cast171754, 23, !dbg !5459
  br i1 %cmp1718, label %land.lhs.true1720, label %if.else1740, !dbg !5460

land.lhs.true1720:                                ; preds = %cond.end1712
  %bf.cast172556 = and i64 %bf.load1715, 134217728, !dbg !5461
  %tobool1726 = icmp ne i64 %bf.cast172556, 0, !dbg !5461
  %tobool1728 = icmp ne i8 %int_const.12, 0, !dbg !5462
  %or.cond34 = or i1 %tobool1726, %tobool1728, !dbg !5463
  br i1 %or.cond34, label %if.else1740, label %if.then1729, !dbg !5463

if.then1729:                                      ; preds = %land.lhs.true1720
  br i1 %10, label %cond.true1732, label %cond.false1734, !dbg !5464

cond.true1732:                                    ; preds = %if.then1729
  %call1733 = call fastcc %union.tree_node* @note_integer_operands(%union.tree_node* %ret.6) #7, !dbg !5465
  br label %if.end1755, !dbg !5464

cond.false1734:                                   ; preds = %if.then1729
  %type1736 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5466
  %213 = load %union.tree_node*, %union.tree_node** %type1736, align 8, !dbg !5466
  %call1737 = call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %213, %union.tree_node* %ret.6) #6, !dbg !5466
  br label %if.end1755, !dbg !5464

if.else1740:                                      ; preds = %land.lhs.true1720, %cond.end1712
  %cmp1745 = icmp ne i64 %bf.cast171754, 23, !dbg !5467
  %or.cond35 = and i1 %cmp1745, %10, !dbg !5469
  %or.cond35.not = xor i1 %or.cond35, true, !dbg !5469
  %214 = load i8, i8* @in_late_binary_op, align 1, !dbg !5470
  %tobool1751 = icmp ne i8 %214, 0, !dbg !5470
  %or.cond36 = or i1 %tobool1751, %or.cond35.not, !dbg !5469
  br i1 %or.cond36, label %if.end1755, label %if.then1752, !dbg !5469

if.then1752:                                      ; preds = %if.else1740
  %call1753 = call fastcc %union.tree_node* @note_integer_operands(%union.tree_node* %ret.6) #7, !dbg !5471
  call void @llvm.dbg.value(metadata %union.tree_node* %call1753, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %if.end1755, !dbg !5472

if.end1755:                                       ; preds = %if.then1752, %if.else1740, %cond.true1732, %cond.false1734
  %ret.8 = phi %union.tree_node* [ %call1733, %cond.true1732 ], [ %call1737, %cond.false1734 ], [ %call1753, %if.then1752 ], [ %ret.6, %if.else1740 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8, metadata !4556, metadata !DIExpression()), !dbg !4629
  %tobool1756 = icmp eq %union.tree_node* %semantic_result_type.5, null, !dbg !5473
  br i1 %tobool1756, label %if.end1759, label %if.then1757, !dbg !5475

if.then1757:                                      ; preds = %if.end1755
  %call1758 = call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %semantic_result_type.5, %union.tree_node* %ret.8) #6, !dbg !5476
  call void @llvm.dbg.value(metadata %union.tree_node* %call1758, metadata !4556, metadata !DIExpression()), !dbg !4629
  br label %if.end1759, !dbg !5477

if.end1759:                                       ; preds = %if.end1755, %if.then1757
  %ret.9 = phi %union.tree_node* [ %call1758, %if.then1757 ], [ %ret.8, %if.end1755 ], !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.9, metadata !4556, metadata !DIExpression()), !dbg !4629
  call void @protected_set_expr_location(%union.tree_node* %ret.9, i32 %spec.select) #6, !dbg !5478
  br label %cleanup1760, !dbg !5479

cleanup1760:                                      ; preds = %cleanup, %cleanup1144, %if.end1759, %if.then1688, %if.then1645, %cleanup1638, %if.then1225, %if.then1204, %if.then247, %if.then243
  %retval.9 = phi %union.tree_node* [ %22, %if.then243 ], [ %36, %if.then247 ], [ undef, %if.then1204 ], [ %retval.8, %cleanup1638 ], [ %ret.9, %if.end1759 ], [ %209, %if.then1688 ], [ %206, %if.then1645 ], [ %143, %if.then1225 ], [ %retval.3, %cleanup1144 ], [ %retval.0, %cleanup ]
  ret %union.tree_node* %retval.9, !dbg !5480
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_external_ref(i32 %loc, %union.tree_node* %id, i32 %fun, %union.tree_node** %type) local_unnamed_addr #5 !dbg !5481 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5485, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata %union.tree_node* %id, metadata !5486, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata i32 %fun, metadata !5487, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !5488, metadata !DIExpression()), !dbg !5495
  %call = tail call %union.tree_node* @lookup_name(%union.tree_node* %id) #6, !dbg !5496
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5490, metadata !DIExpression()), !dbg !5495
  %call1 = tail call %union.tree_node* @objc_lookup_ivar(%union.tree_node* %call, %union.tree_node* %id) #6, !dbg !5497
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5490, metadata !DIExpression()), !dbg !5495
  store %union.tree_node* null, %union.tree_node** %type, align 8, !dbg !5498
  %tobool = icmp ne %union.tree_node* %call1, null, !dbg !5499
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5501
  %cmp = icmp ne %union.tree_node* %call1, %0, !dbg !5502
  %or.cond = and i1 %tobool, %cmp, !dbg !5503
  br i1 %or.cond, label %if.then, label %if.else, !dbg !5503

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5489, metadata !DIExpression()), !dbg !5495
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5504
  %1 = bitcast %union.tree_node** %type2 to i64*, !dbg !5504
  %2 = load i64, i64* %1, align 8, !dbg !5504
  %3 = bitcast %union.tree_node** %type to i64*, !dbg !5506
  store i64 %2, i64* %3, align 8, !dbg !5506
  br label %if.end10, !dbg !5507

if.else:                                          ; preds = %entry
  %tobool3 = icmp eq i32 %fun, 0, !dbg !5508
  br i1 %tobool3, label %if.else6, label %if.then4, !dbg !5510

if.then4:                                         ; preds = %if.else
  %call5 = tail call %union.tree_node* @implicitly_declare(i32 %loc, %union.tree_node* %id) #6, !dbg !5511
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5489, metadata !DIExpression()), !dbg !5495
  br label %if.end10

if.else6:                                         ; preds = %if.else
  %cmp7 = icmp eq %union.tree_node* %call1, %0, !dbg !5512
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !5514

if.then8:                                         ; preds = %if.else6
  br label %cleanup, !dbg !5515

if.else9:                                         ; preds = %if.else6
  tail call void @undeclared_variable(i32 %loc, %union.tree_node* %id) #6, !dbg !5516
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5518
  br label %cleanup, !dbg !5519

if.end10:                                         ; preds = %if.then4, %if.then
  %ref.0 = phi %union.tree_node* [ %call1, %if.then ], [ %call5, %if.then4 ], !dbg !5520
  call void @llvm.dbg.value(metadata %union.tree_node* %ref.0, metadata !5489, metadata !DIExpression()), !dbg !5495
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5521
  %5 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !5521
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5523
  %cmp13 = icmp eq %union.tree_node* %5, %6, !dbg !5524
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5525

if.then14:                                        ; preds = %if.end10
  br label %cleanup, !dbg !5526

if.end15:                                         ; preds = %if.end10
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5527
  %bf.load = load i64, i64* %7, align 8, !dbg !5527
  %bf.cast4 = and i64 %bf.load, 1073741824, !dbg !5527
  %tobool16 = icmp eq i64 %bf.cast4, 0, !dbg !5527
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !5529

if.then17:                                        ; preds = %if.end15
  tail call void @warn_deprecated_use(%union.tree_node* %ref.0, %union.tree_node* null) #6, !dbg !5530
  br label %if.end18, !dbg !5530

if.end18:                                         ; preds = %if.end15, %if.then17
  %8 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5531
  %cmp19 = icmp eq %union.tree_node* %ref.0, %8, !dbg !5533
  br i1 %cmp19, label %if.end18.if.end24_crit_edge, label %if.then20, !dbg !5534

if.end18.if.end24_crit_edge:                      ; preds = %if.end18
  %bf.load26.pre = load i64, i64* %7, align 8, !dbg !5535
  br label %if.end24, !dbg !5534

if.then20:                                        ; preds = %if.end18
  %bf.load22 = load i64, i64* %7, align 8, !dbg !5537
  %bf.set = or i64 %bf.load22, 16777216, !dbg !5537
  store i64 %bf.set, i64* %7, align 8, !dbg !5537
  br label %if.end24, !dbg !5539

if.end24:                                         ; preds = %if.end18.if.end24_crit_edge, %if.then20
  %bf.load52 = phi i64 [ %bf.load26.pre, %if.end18.if.end24_crit_edge ], [ %bf.set, %if.then20 ], !dbg !5535
  %bf.cast285 = and i64 %bf.load52, 65535, !dbg !5540
  %cmp29 = icmp ne i64 %bf.cast285, 29, !dbg !5540
  %9 = load i32, i32* @in_alignof, align 4, !dbg !5541
  %tobool31 = icmp ne i32 %9, 0, !dbg !5541
  %or.cond1 = or i1 %cmp29, %tobool31, !dbg !5542
  br i1 %or.cond1, label %if.end60, label %if.then32, !dbg !5542

if.then32:                                        ; preds = %if.end24
  %10 = load i32, i32* @in_sizeof, align 4, !dbg !5543
  %11 = load i32, i32* @in_typeof, align 4, !dbg !5546
  %12 = or i32 %10, %11, !dbg !5547
  %13 = icmp eq i32 %12, 0, !dbg !5547
  br i1 %13, label %if.then36, label %if.else40, !dbg !5547

if.then36:                                        ; preds = %if.then32
  %lang_flag_5 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5548
  %14 = bitcast i40* %lang_flag_5 to i64*, !dbg !5548
  %bf.load37 = load i64, i64* %14, align 8, !dbg !5549
  %bf.set39 = or i64 %bf.load37, 1048576, !dbg !5549
  store i64 %bf.set39, i64* %14, align 8, !dbg !5549
  br label %if.end60, !dbg !5548

if.else40:                                        ; preds = %if.then32
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !5550
  %15 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !5550
  %cmp42 = icmp eq %union.tree_node* %15, null, !dbg !5552
  br i1 %cmp42, label %land.lhs.true43, label %if.end60, !dbg !5553

land.lhs.true43:                                  ; preds = %if.else40
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5554
  %16 = bitcast i40* %decl_flag_1 to i64*, !dbg !5554
  %bf.load45 = load i64, i64* %16, align 8, !dbg !5554
  %bf.cast4818 = and i64 %bf.load45, 33554432, !dbg !5554
  %tobool49 = icmp eq i64 %bf.cast4818, 0, !dbg !5554
  br i1 %tobool49, label %if.end60, label %land.lhs.true50, !dbg !5555

land.lhs.true50:                                  ; preds = %land.lhs.true43
  %bf.cast5519 = and i64 %bf.load52, 134217728, !dbg !5556
  %tobool56 = icmp eq i64 %bf.cast5519, 0, !dbg !5556
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !5557

if.then57:                                        ; preds = %land.lhs.true50
  tail call fastcc void @record_maybe_used_decl(%union.tree_node* %ref.0) #7, !dbg !5558
  %bf.load62.pre = load i64, i64* %7, align 8, !dbg !5559
  br label %if.end60, !dbg !5558

if.end60:                                         ; preds = %land.lhs.true50, %land.lhs.true43, %if.then36, %if.then57, %if.else40, %if.end24
  %bf.load179 = phi i64 [ %bf.load52, %land.lhs.true50 ], [ %bf.load52, %land.lhs.true43 ], [ %bf.load52, %if.then36 ], [ %bf.load62.pre, %if.then57 ], [ %bf.load52, %if.else40 ], [ %bf.load52, %if.end24 ], !dbg !5559
  %bf.cast646 = and i64 %bf.load179, 65535, !dbg !5560
  %cmp65 = icmp eq i64 %bf.cast646, 33, !dbg !5560
  br i1 %cmp65, label %if.then66, label %if.else95, !dbg !5561

if.then66:                                        ; preds = %if.end60
  %17 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !5562
  tail call void @used_types_insert(%union.tree_node* %17) #6, !dbg !5564
  %18 = load i32, i32* @warn_cxx_compat, align 4, !dbg !5565
  %tobool69 = icmp eq i32 %18, 0, !dbg !5565
  br i1 %tobool69, label %if.end88, label %land.lhs.true70, !dbg !5567

land.lhs.true70:                                  ; preds = %if.then66
  %19 = bitcast %union.tree_node** %type12 to i64**, !dbg !5568
  %20 = load i64*, i64** %19, align 8, !dbg !5568
  %bf.load74 = load i64, i64* %20, align 8, !dbg !5568
  %bf.cast7617 = and i64 %bf.load74, 65535, !dbg !5569
  %cmp77 = icmp eq i64 %bf.cast7617, 6, !dbg !5569
  br i1 %cmp77, label %land.lhs.true78, label %if.end88, !dbg !5570

land.lhs.true78:                                  ; preds = %land.lhs.true70
  %21 = bitcast i64* %20 to %struct.tree_type*, !dbg !5570
  %lang_flag_2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %21, i64 0, i32 6, !dbg !5571
  %bf.load82 = load i32, i32* %lang_flag_2, align 4, !dbg !5571
  %bf.clear84 = and i32 %bf.load82, 134217728, !dbg !5571
  %tobool85 = icmp eq i32 %bf.clear84, 0, !dbg !5571
  br i1 %tobool85, label %if.end88, label %if.then86, !dbg !5572

if.then86:                                        ; preds = %land.lhs.true78
  %call87 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !5573
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5575
  %22 = load i32, i32* %locus, align 8, !dbg !5575
  tail call void (i32, i8*, ...) @inform(i32 %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !5576
  br label %if.end88, !dbg !5577

if.end88:                                         ; preds = %land.lhs.true78, %if.then66, %if.then86, %land.lhs.true70
  %initial90 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !5578
  %23 = load %union.tree_node*, %union.tree_node** %initial90, align 8, !dbg !5578
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5489, metadata !DIExpression()), !dbg !5495
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5579
  %bf.load92 = load i64, i64* %24, align 8, !dbg !5580
  %bf.set94 = or i64 %bf.load92, 131072, !dbg !5580
  store i64 %bf.set94, i64* %24, align 8, !dbg !5580
  br label %cleanup, !dbg !5581

if.else95:                                        ; preds = %if.end60
  %25 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5582
  %cmp96 = icmp eq %union.tree_node* %25, null, !dbg !5583
  br i1 %cmp96, label %if.else137, label %land.lhs.true97, !dbg !5584

land.lhs.true97:                                  ; preds = %if.else95
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5585
  %26 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !5585
  %tobool99 = icmp eq %union.tree_node* %26, null, !dbg !5585
  br i1 %tobool99, label %if.else137, label %lor.lhs.false, !dbg !5585

lor.lhs.false:                                    ; preds = %land.lhs.true97
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5585
  %bf.load103 = load i64, i64* %27, align 8, !dbg !5585
  %bf.cast10513 = and i64 %bf.load103, 65535, !dbg !5585
  %cmp106 = icmp eq i64 %bf.cast10513, 40, !dbg !5585
  br i1 %cmp106, label %if.else137, label %land.lhs.true107, !dbg !5586

land.lhs.true107:                                 ; preds = %lor.lhs.false
  %cmp112 = icmp eq i64 %bf.cast646, 32, !dbg !5587
  br i1 %cmp112, label %if.then125, label %lor.lhs.false113, !dbg !5588

lor.lhs.false113:                                 ; preds = %land.lhs.true107
  %cmp118 = icmp eq i64 %bf.cast646, 34, !dbg !5589
  br i1 %cmp118, label %if.then125, label %lor.lhs.false119, !dbg !5590

lor.lhs.false119:                                 ; preds = %lor.lhs.false113
  %cmp124 = icmp eq i64 %bf.cast646, 29, !dbg !5591
  br i1 %cmp124, label %if.then125, label %if.else137, !dbg !5592

if.then125:                                       ; preds = %lor.lhs.false119, %lor.lhs.false113, %land.lhs.true107
  %call127 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %ref.0) #6, !dbg !5593
  call void @llvm.dbg.value(metadata %union.tree_node* %call127, metadata !5491, metadata !DIExpression()), !dbg !5594
  %cmp128 = icmp ne %union.tree_node* %call127, null, !dbg !5595
  %28 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5597
  %cmp130 = icmp ne %union.tree_node* %call127, %28, !dbg !5598
  %or.cond3 = and i1 %cmp128, %cmp130, !dbg !5599
  br i1 %or.cond3, label %if.then131, label %cleanup, !dbg !5599

if.then131:                                       ; preds = %if.then125
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5600
  %29 = bitcast i40* %nonlocal_flag to i64*, !dbg !5600
  %bf.load133 = load i64, i64* %29, align 8, !dbg !5601
  %bf.set135 = or i64 %bf.load133, 256, !dbg !5601
  store i64 %bf.set135, i64* %29, align 8, !dbg !5601
  br label %cleanup, !dbg !5600

if.else137:                                       ; preds = %land.lhs.true97, %if.else95, %lor.lhs.false119, %lor.lhs.false
  br i1 %cmp96, label %cleanup, label %land.lhs.true139, !dbg !5602

land.lhs.true139:                                 ; preds = %if.else137
  %declared_inline_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 5, !dbg !5604
  %bf.load140 = load i32, i32* %declared_inline_flag, align 8, !dbg !5604
  %bf.clear142 = and i32 %bf.load140, 2097152, !dbg !5604
  %tobool143 = icmp eq i32 %bf.clear142, 0, !dbg !5604
  br i1 %tobool143, label %cleanup, label %land.lhs.true144, !dbg !5605

land.lhs.true144:                                 ; preds = %land.lhs.true139
  %decl_flag_1146 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5606
  %30 = bitcast i40* %decl_flag_1146 to i64*, !dbg !5606
  %bf.load147 = load i64, i64* %30, align 8, !dbg !5606
  %bf.cast1507 = and i64 %bf.load147, 33554432, !dbg !5606
  %tobool151 = icmp eq i64 %bf.cast1507, 0, !dbg !5606
  br i1 %tobool151, label %cleanup, label %land.lhs.true152, !dbg !5607

land.lhs.true152:                                 ; preds = %land.lhs.true144
  %cmp157 = icmp eq i64 %bf.cast646, 32, !dbg !5608
  br i1 %cmp157, label %land.lhs.true164, label %lor.lhs.false158, !dbg !5608

lor.lhs.false158:                                 ; preds = %land.lhs.true152
  %cmp163 = icmp eq i64 %bf.cast646, 29, !dbg !5608
  br i1 %cmp163, label %land.lhs.true164, label %cleanup, !dbg !5609

land.lhs.true164:                                 ; preds = %lor.lhs.false158, %land.lhs.true152
  br i1 %cmp157, label %lor.lhs.false170, label %land.lhs.true177, !dbg !5610

lor.lhs.false170:                                 ; preds = %land.lhs.true164
  %bf.cast17511 = and i64 %bf.load179, 67108864, !dbg !5611
  %tobool176 = icmp eq i64 %bf.cast17511, 0, !dbg !5611
  br i1 %tobool176, label %cleanup, label %land.lhs.true177, !dbg !5612

land.lhs.true177:                                 ; preds = %lor.lhs.false170, %land.lhs.true164
  %bf.cast18212 = and i64 %bf.load179, 134217728, !dbg !5613
  %tobool183 = icmp eq i64 %bf.cast18212, 0, !dbg !5613
  br i1 %tobool183, label %land.lhs.true184, label %cleanup, !dbg !5614

land.lhs.true184:                                 ; preds = %land.lhs.true177
  %context186 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5615
  %31 = load %union.tree_node*, %union.tree_node** %context186, align 8, !dbg !5615
  %cmp187 = icmp eq %union.tree_node* %31, %25, !dbg !5616
  br i1 %cmp187, label %cleanup, label %if.then188, !dbg !5617

if.then188:                                       ; preds = %land.lhs.true184
  tail call void @record_inline_static(i32 %loc, %union.tree_node* nonnull %25, %union.tree_node* %ref.0, i32 0) #6, !dbg !5618
  br label %cleanup, !dbg !5618

cleanup:                                          ; preds = %land.lhs.true184, %land.lhs.true177, %lor.lhs.false170, %land.lhs.true144, %land.lhs.true139, %if.else137, %if.end88, %lor.lhs.false158, %if.then188, %if.then125, %if.then131, %if.then14, %if.else9, %if.then8
  %retval.0 = phi %union.tree_node* [ %5, %if.then14 ], [ %call1, %if.then8 ], [ %4, %if.else9 ], [ %23, %if.end88 ], [ %ref.0, %if.else137 ], [ %ref.0, %land.lhs.true139 ], [ %ref.0, %land.lhs.true144 ], [ %ref.0, %lor.lhs.false158 ], [ %ref.0, %lor.lhs.false170 ], [ %ref.0, %land.lhs.true177 ], [ %ref.0, %land.lhs.true184 ], [ %ref.0, %if.then188 ], [ %ref.0, %if.then125 ], [ %ref.0, %if.then131 ], !dbg !5495
  ret %union.tree_node* %retval.0, !dbg !5619
}

declare dso_local %union.tree_node* @lookup_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_lookup_ivar(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @implicitly_declare(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @undeclared_variable(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @record_maybe_used_decl(%union.tree_node* %decl) unnamed_addr #5 !dbg !5620 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !5624, metadata !DIExpression()), !dbg !5626
  store i64 24, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !5627
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !5627
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !5627
  %sub.ptr.sub = sub i64 %0, %1, !dbg !5627
  %cmp = icmp slt i64 %sub.ptr.sub, 24, !dbg !5627
  %2 = inttoptr i64 %1 to i8*, !dbg !5627
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5627

cond.true:                                        ; preds = %entry
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 24) #6, !dbg !5627
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !5627
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !5627
  br label %cond.end, !dbg !5627

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi i8* [ %2, %entry ], [ %.pre1, %cond.true ], !dbg !5627
  %4 = phi i64 [ 24, %entry ], [ %.pre, %cond.true ], !dbg !5627
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !5627
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !5627
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !5627
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !5627
  %6 = ptrtoint i8* %5 to i64, !dbg !5627
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !5627
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !5627

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !5627
  %bf.set = or i8 %bf.load, 2, !dbg !5627
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !5627
  br label %cond.end5, !dbg !5627

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !5627
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !5627
  %conv11 = sext i32 %8 to i64, !dbg !5627
  %add = add nsw i64 %7, %conv11, !dbg !5627
  %neg = xor i32 %8, -1, !dbg !5627
  %conv12 = sext i32 %neg to i64, !dbg !5627
  %and = and i64 %add, %conv12, !dbg !5627
  %9 = inttoptr i64 %and to i8*, !dbg !5627
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !5627
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !5627
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !5627
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !5627
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !5627
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !5627
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !5627

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !5627
  br label %cond.end23, !dbg !5627

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %12 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !5627
  store i64 %12, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !5627
  call void @llvm.dbg.value(metadata i8* %5, metadata !5625, metadata !DIExpression()), !dbg !5626
  %decl25 = bitcast i8* %5 to %union.tree_node**, !dbg !5628
  store %union.tree_node* %decl, %union.tree_node** %decl25, align 8, !dbg !5629
  %13 = load i32, i32* @in_sizeof, align 4, !dbg !5630
  %14 = load i32, i32* @in_typeof, align 4, !dbg !5631
  %add26 = add nsw i32 %13, %14, !dbg !5632
  %level = getelementptr inbounds i8, i8* %5, i64 8, !dbg !5633
  %15 = bitcast i8* %level to i32*, !dbg !5633
  store i32 %add26, i32* %15, align 8, !dbg !5634
  %16 = load i64, i64* bitcast (%struct.maybe_used_decl** @maybe_used_decls to i64*), align 8, !dbg !5635
  %next = getelementptr inbounds i8, i8* %5, i64 16, !dbg !5636
  %17 = bitcast i8* %next to i64*, !dbg !5637
  store i64 %16, i64* %17, align 8, !dbg !5637
  store i8* %5, i8** bitcast (%struct.maybe_used_decl** @maybe_used_decls to i8**), align 8, !dbg !5638
  ret void, !dbg !5639
}

declare dso_local void @used_types_insert(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @inform(i32, i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @record_inline_static(i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @pop_maybe_used(i8 zeroext %used) local_unnamed_addr #5 !dbg !5640 {
entry:
  call void @llvm.dbg.value(metadata i8 %used, metadata !5644, metadata !DIExpression()), !dbg !5647
  %0 = load i32, i32* @in_sizeof, align 4, !dbg !5648
  %1 = load i32, i32* @in_typeof, align 4, !dbg !5649
  %add = add nsw i32 %0, %1, !dbg !5650
  call void @llvm.dbg.value(metadata i32 %add, metadata !5646, metadata !DIExpression()), !dbg !5647
  %tobool1 = icmp ne i8 %used, 0, !dbg !5647
  br i1 %tobool1, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !5651

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !5651

entry.split.us:                                   ; preds = %entry
  %cmp2 = icmp eq i32 %add, 0, !dbg !5652
  br i1 %cmp2, label %entry.split.us.split.us, label %entry.split.us.entry.split.us.split_crit_edge, !dbg !5651

entry.split.us.entry.split.us.split_crit_edge:    ; preds = %entry.split.us
  br label %while.cond.us, !dbg !5651

entry.split.us.split.us:                          ; preds = %entry.split.us
  br label %while.cond.us.us, !dbg !5651

while.cond.us.us:                                 ; preds = %while.body.us.us, %entry.split.us.split.us
  %p.0.in.us.us = phi %struct.maybe_used_decl** [ @maybe_used_decls, %entry.split.us.split.us ], [ %next.us.us, %while.body.us.us ]
  %p.0.us.us = load %struct.maybe_used_decl*, %struct.maybe_used_decl** %p.0.in.us.us, align 8, !dbg !5647
  call void @llvm.dbg.value(metadata %struct.maybe_used_decl* %p.0.us.us, metadata !5645, metadata !DIExpression()), !dbg !5647
  %tobool.us.us = icmp eq %struct.maybe_used_decl* %p.0.us.us, null, !dbg !5657
  br i1 %tobool.us.us, label %land.end.us.us, label %land.rhs.us.us, !dbg !5658

land.rhs.us.us:                                   ; preds = %while.cond.us.us
  %level.us.us = getelementptr inbounds %struct.maybe_used_decl, %struct.maybe_used_decl* %p.0.us.us, i64 0, i32 1, !dbg !5659
  %2 = load i32, i32* %level.us.us, align 8, !dbg !5659
  %cmp.us.us = icmp sgt i32 %2, 0, !dbg !5660
  br label %land.end.us.us

land.end.us.us:                                   ; preds = %land.rhs.us.us, %while.cond.us.us
  %3 = phi i1 [ false, %while.cond.us.us ], [ %cmp.us.us, %land.rhs.us.us ], !dbg !5647
  br i1 %3, label %while.body.us.us, label %while.end.us-lcssa.us.us-lcssa.us, !dbg !5651

while.body.us.us:                                 ; preds = %land.end.us.us
  %4 = bitcast %struct.maybe_used_decl* %p.0.us.us to %struct.tree_decl_common**, !dbg !5661
  %5 = load %struct.tree_decl_common*, %struct.tree_decl_common** %4, align 8, !dbg !5661
  %lang_flag_5.us.us = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %5, i64 0, i32 2, !dbg !5661
  %6 = bitcast i40* %lang_flag_5.us.us to i64*, !dbg !5661
  %bf.load.us.us = load i64, i64* %6, align 8, !dbg !5662
  %bf.set.us.us = or i64 %bf.load.us.us, 1048576, !dbg !5662
  store i64 %bf.set.us.us, i64* %6, align 8, !dbg !5662
  %next.us.us = getelementptr inbounds %struct.maybe_used_decl, %struct.maybe_used_decl* %p.0.us.us, i64 0, i32 2, !dbg !5663
  br label %while.cond.us.us, !dbg !5651, !llvm.loop !5664

while.end.us-lcssa.us.us-lcssa.us:                ; preds = %land.end.us.us
  %p.0.us.us.lcssa = phi %struct.maybe_used_decl* [ %p.0.us.us, %land.end.us.us ], !dbg !5647
  br label %while.end.us-lcssa.us, !dbg !5666

while.cond.us:                                    ; preds = %while.body.us, %entry.split.us.entry.split.us.split_crit_edge
  %p.0.in.us = phi %struct.maybe_used_decl** [ @maybe_used_decls, %entry.split.us.entry.split.us.split_crit_edge ], [ %next.us, %while.body.us ]
  %p.0.us = load %struct.maybe_used_decl*, %struct.maybe_used_decl** %p.0.in.us, align 8, !dbg !5647
  call void @llvm.dbg.value(metadata %struct.maybe_used_decl* %p.0.us, metadata !5645, metadata !DIExpression()), !dbg !5647
  %tobool.us = icmp eq %struct.maybe_used_decl* %p.0.us, null, !dbg !5657
  br i1 %tobool.us, label %land.end.us, label %land.rhs.us, !dbg !5658

land.rhs.us:                                      ; preds = %while.cond.us
  %level.us = getelementptr inbounds %struct.maybe_used_decl, %struct.maybe_used_decl* %p.0.us, i64 0, i32 1, !dbg !5659
  %7 = load i32, i32* %level.us, align 8, !dbg !5659
  %cmp.us = icmp sgt i32 %7, %add, !dbg !5660
  br label %land.end.us

land.end.us:                                      ; preds = %land.rhs.us, %while.cond.us
  %8 = phi i1 [ false, %while.cond.us ], [ %cmp.us, %land.rhs.us ], !dbg !5647
  br i1 %8, label %while.body.us, label %while.end.us-lcssa.us.us-lcssa, !dbg !5651

while.body.us:                                    ; preds = %land.end.us
  %level4.us = getelementptr inbounds %struct.maybe_used_decl, %struct.maybe_used_decl* %p.0.us, i64 0, i32 1, !dbg !5668
  store i32 %add, i32* %level4.us, align 8, !dbg !5669
  %next.us = getelementptr inbounds %struct.maybe_used_decl, %struct.maybe_used_decl* %p.0.us, i64 0, i32 2, !dbg !5663
  br label %while.cond.us, !dbg !5651, !llvm.loop !5664

while.end.us-lcssa.us.us-lcssa:                   ; preds = %land.end.us
  %p.0.us.lcssa = phi %struct.maybe_used_decl* [ %p.0.us, %land.end.us ], !dbg !5647
  br label %while.end.us-lcssa.us, !dbg !5666

while.end.us-lcssa.us:                            ; preds = %while.end.us-lcssa.us.us-lcssa.us, %while.end.us-lcssa.us.us-lcssa
  %p.0.lcssa.ph.us = phi %struct.maybe_used_decl* [ %p.0.us.lcssa, %while.end.us-lcssa.us.us-lcssa ], [ %p.0.us.us.lcssa, %while.end.us-lcssa.us.us-lcssa.us ]
  br label %while.end, !dbg !5666

while.cond:                                       ; preds = %while.body, %entry.entry.split_crit_edge
  %p.0.in = phi %struct.maybe_used_decl** [ @maybe_used_decls, %entry.entry.split_crit_edge ], [ %next, %while.body ]
  %p.0 = load %struct.maybe_used_decl*, %struct.maybe_used_decl** %p.0.in, align 8, !dbg !5647
  call void @llvm.dbg.value(metadata %struct.maybe_used_decl* %p.0, metadata !5645, metadata !DIExpression()), !dbg !5647
  %tobool = icmp eq %struct.maybe_used_decl* %p.0, null, !dbg !5657
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5658

land.rhs:                                         ; preds = %while.cond
  %level = getelementptr inbounds %struct.maybe_used_decl, %struct.maybe_used_decl* %p.0, i64 0, i32 1, !dbg !5659
  %9 = load i32, i32* %level, align 8, !dbg !5659
  %cmp = icmp sgt i32 %9, %add, !dbg !5660
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %10 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !5647
  br i1 %10, label %while.body, label %while.end.us-lcssa, !dbg !5651

while.body:                                       ; preds = %land.end
  %next = getelementptr inbounds %struct.maybe_used_decl, %struct.maybe_used_decl* %p.0, i64 0, i32 2, !dbg !5663
  br label %while.cond, !dbg !5651, !llvm.loop !5664

while.end.us-lcssa:                               ; preds = %land.end
  %p.0.lcssa2 = phi %struct.maybe_used_decl* [ %p.0, %land.end ], !dbg !5647
  br label %while.end, !dbg !5666

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %p.0.lcssa = phi %struct.maybe_used_decl* [ %p.0.lcssa2, %while.end.us-lcssa ], [ %p.0.lcssa.ph.us, %while.end.us-lcssa.us ], !dbg !5647
  %tobool1.not = xor i1 %tobool1, true, !dbg !5666
  %cmp7 = icmp eq i32 %add, 0, !dbg !5670
  %or.cond = or i1 %cmp7, %tobool1.not, !dbg !5666
  br i1 %or.cond, label %if.then8, label %if.end9, !dbg !5666

if.then8:                                         ; preds = %while.end
  store %struct.maybe_used_decl* %p.0.lcssa, %struct.maybe_used_decl** @maybe_used_decls, align 8, !dbg !5671
  br label %if.end9, !dbg !5672

if.end9:                                          ; preds = %while.end, %if.then8
  ret void, !dbg !5673
}

; Function Attrs: nounwind uwtable
define dso_local void @c_expr_sizeof_expr(%struct.c_expr* noalias sret %agg.result, i32 %loc, %struct.c_expr* byval(%struct.c_expr) align 8 %expr) local_unnamed_addr #5 !dbg !5674 {
entry:
  %expr_const_operands = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5676, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata %struct.c_expr* %expr, metadata !5677, metadata !DIExpression()), !dbg !5684
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !5678, metadata !DIExpression()), !dbg !5685
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !5686
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5686
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5687
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !5688
  br i1 %cmp, label %if.then, label %if.else, !dbg !5689

if.then:                                          ; preds = %entry
  %2 = ptrtoint %union.tree_node* %1 to i64, !dbg !5689
  %3 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !5690
  store i64 %2, i64* %3, align 8, !dbg !5690
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !5692
  store i32 0, i32* %original_code, align 8, !dbg !5693
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !5694
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !5695
  tail call void @pop_maybe_used(i8 zeroext 0) #7, !dbg !5696
  br label %if.end26, !dbg !5697

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %expr_const_operands, metadata !5679, metadata !DIExpression(DW_OP_deref)), !dbg !5698
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %expr_const_operands) #8, !dbg !5699
  call void @llvm.dbg.value(metadata i8 1, metadata !5679, metadata !DIExpression()), !dbg !5698
  store i8 1, i8* %expr_const_operands, align 1, !dbg !5700
  %4 = load i32, i32* @require_constant_value, align 4, !dbg !5701
  %conv = trunc i32 %4 to i8, !dbg !5701
  call void @llvm.dbg.value(metadata i8* %expr_const_operands, metadata !5679, metadata !DIExpression(DW_OP_deref)), !dbg !5698
  %call = call %union.tree_node* @c_fully_fold(%union.tree_node* %0, i8 zeroext %conv, i8* nonnull %expr_const_operands) #6, !dbg !5702
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5682, metadata !DIExpression()), !dbg !5698
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5703
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5703
  %call3 = call %union.tree_node* @c_sizeof_or_alignof_type(i32 %loc, %union.tree_node* %5, i8 zeroext 1, i32 1) #6, !dbg !5703
  %value4 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 0, !dbg !5704
  store %union.tree_node* %call3, %union.tree_node** %value4, align 8, !dbg !5705
  %original_code5 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !5706
  store i32 0, i32* %original_code5, align 8, !dbg !5707
  %original_type6 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !5708
  store %union.tree_node* null, %union.tree_node** %original_type6, align 8, !dbg !5709
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5710
  %call9 = call zeroext i8 @c_vla_type_p(%union.tree_node* %6) #7, !dbg !5712
  %tobool = icmp eq i8 %call9, 0, !dbg !5712
  br i1 %tobool, label %if.end, label %if.then10, !dbg !5713

if.then10:                                        ; preds = %if.else
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5714
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !5714
  %call15 = call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %7, %union.tree_node* %call, %union.tree_node* %call3) #6, !dbg !5714
  store %union.tree_node* %call15, %union.tree_node** %value4, align 8, !dbg !5716
  %8 = load i8, i8* %expr_const_operands, align 1, !dbg !5717
  call void @llvm.dbg.value(metadata i8 %8, metadata !5679, metadata !DIExpression()), !dbg !5698
  %tobool17 = icmp eq i8 %8, 0, !dbg !5718
  %.cast1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5719
  %9 = zext i1 %tobool17 to i64, !dbg !5720
  %bf.load = load i64, i64* %.cast1, align 8, !dbg !5720
  %bf.shl = shl nuw nsw i64 %9, 34, !dbg !5720
  %bf.clear = and i64 %bf.load, -17179869185, !dbg !5720
  %bf.set = or i64 %bf.clear, %bf.shl, !dbg !5720
  store i64 %bf.set, i64* %.cast1, align 8, !dbg !5720
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5721
  store i32 %loc, i32* %10, align 8, !dbg !5721
  br label %if.end, !dbg !5722

if.end:                                           ; preds = %if.else, %if.then10
  %11 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5723
  %12 = load %struct.tree_type*, %struct.tree_type** %11, align 8, !dbg !5723
  %lang_flag_1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 6, !dbg !5723
  %bf.load23 = load i32, i32* %lang_flag_1, align 4, !dbg !5723
  %bf.lshr = lshr i32 %bf.load23, 26, !dbg !5723
  %13 = trunc i32 %bf.lshr to i8, !dbg !5723
  %conv25 = and i8 %13, 1, !dbg !5723
  call void @pop_maybe_used(i8 zeroext %conv25) #7, !dbg !5724
  call void @llvm.dbg.value(metadata i8* %expr_const_operands, metadata !5679, metadata !DIExpression(DW_OP_deref)), !dbg !5698
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %expr_const_operands) #8, !dbg !5725
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then
  ret void, !dbg !5726
}

declare dso_local %union.tree_node* @c_fully_fold(%union.tree_node*, i8 zeroext, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_sizeof_or_alignof_type(i32, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_expr_sizeof_type(%struct.c_expr* noalias sret %agg.result, i32 %loc, %struct.c_type_name* %t) local_unnamed_addr #5 !dbg !5727 {
entry:
  %type_expr = alloca %union.tree_node*, align 8
  %type_expr_const = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5788, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.value(metadata %struct.c_type_name* %t, metadata !5789, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !5791, metadata !DIExpression()), !dbg !5795
  %0 = bitcast %union.tree_node** %type_expr to i8*, !dbg !5796
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5796
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5792, metadata !DIExpression()), !dbg !5794
  store %union.tree_node* null, %union.tree_node** %type_expr, align 8, !dbg !5797
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !5793, metadata !DIExpression(DW_OP_deref)), !dbg !5794
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %type_expr_const) #8, !dbg !5798
  call void @llvm.dbg.value(metadata i8 1, metadata !5793, metadata !DIExpression()), !dbg !5794
  store i8 1, i8* %type_expr_const, align 1, !dbg !5799
  call void @llvm.dbg.value(metadata %union.tree_node** %type_expr, metadata !5792, metadata !DIExpression(DW_OP_deref)), !dbg !5794
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !5793, metadata !DIExpression(DW_OP_deref)), !dbg !5794
  %call = call %union.tree_node* @groktypename(%struct.c_type_name* %t, %union.tree_node** nonnull %type_expr, i8* nonnull %type_expr_const) #6, !dbg !5800
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5790, metadata !DIExpression()), !dbg !5794
  %call1 = call %union.tree_node* @c_sizeof_or_alignof_type(i32 %loc, %union.tree_node* %call, i8 zeroext 1, i32 1) #6, !dbg !5801
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 0, !dbg !5802
  store %union.tree_node* %call1, %union.tree_node** %value, align 8, !dbg !5803
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !5804
  store i32 0, i32* %original_code, align 8, !dbg !5805
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !5806
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !5807
  %1 = load %union.tree_node*, %union.tree_node** %type_expr, align 8, !dbg !5808
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5792, metadata !DIExpression()), !dbg !5794
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !5808
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !5810

lor.lhs.false:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5810
  %bf.load = load i64, i64* %2, align 8, !dbg !5811
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5812
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !5812
  br i1 %cmp, label %land.lhs.true, label %if.end17, !dbg !5813

land.lhs.true:                                    ; preds = %entry, %lor.lhs.false
  %call3 = call zeroext i8 @c_vla_type_p(%union.tree_node* %call) #7, !dbg !5814
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5814
  br i1 %tobool4, label %if.end17, label %if.then, !dbg !5815

if.then:                                          ; preds = %land.lhs.true
  %3 = load %union.tree_node*, %union.tree_node** %type_expr, align 8, !dbg !5816
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5792, metadata !DIExpression()), !dbg !5794
  %tobool5 = icmp eq %union.tree_node* %3, null, !dbg !5816
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5819

if.then6:                                         ; preds = %if.then
  %4 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !5820
  %5 = bitcast %union.tree_node** %type_expr to i64*, !dbg !5821
  store i64 %4, i64* %5, align 8, !dbg !5821
  %6 = inttoptr i64 %4 to %union.tree_node*, !dbg !5822
  br label %if.end, !dbg !5822

if.end:                                           ; preds = %if.then, %if.then6
  %7 = phi %union.tree_node* [ %3, %if.then ], [ %6, %if.then6 ], !dbg !5823
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5823
  %8 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5823
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5792, metadata !DIExpression()), !dbg !5794
  %call10 = call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %8, %union.tree_node* %7, %union.tree_node* %call1) #6, !dbg !5823
  store %union.tree_node* %call10, %union.tree_node** %value, align 8, !dbg !5824
  %9 = load i8, i8* %type_expr_const, align 1, !dbg !5825
  call void @llvm.dbg.value(metadata i8 %9, metadata !5793, metadata !DIExpression()), !dbg !5794
  %tobool12 = icmp eq i8 %9, 0, !dbg !5826
  %.cast2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5827
  %10 = zext i1 %tobool12 to i64, !dbg !5828
  %bf.load15 = load i64, i64* %.cast2, align 8, !dbg !5828
  %bf.shl = shl nuw nsw i64 %10, 34, !dbg !5828
  %bf.clear16 = and i64 %bf.load15, -17179869185, !dbg !5828
  %bf.set = or i64 %bf.clear16, %bf.shl, !dbg !5828
  store i64 %bf.set, i64* %.cast2, align 8, !dbg !5828
  br label %if.end17, !dbg !5829

if.end17:                                         ; preds = %land.lhs.true, %if.end, %lor.lhs.false
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5830
  %cmp18 = icmp eq %union.tree_node* %call, %11, !dbg !5831
  br i1 %cmp18, label %cond.end, label %cond.true, !dbg !5832

cond.true:                                        ; preds = %if.end17
  %type20 = bitcast %union.tree_node* %call to %struct.tree_type*, !dbg !5833
  %lang_flag_1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i64 0, i32 6, !dbg !5833
  %bf.load21 = load i32, i32* %lang_flag_1, align 4, !dbg !5833
  %bf.lshr = lshr i32 %bf.load21, 26, !dbg !5833
  %12 = trunc i32 %bf.lshr to i8, !dbg !5832
  %phitmp = and i8 %12, 1, !dbg !5832
  br label %cond.end, !dbg !5832

cond.end:                                         ; preds = %if.end17, %cond.true
  %cond = phi i8 [ %phitmp, %cond.true ], [ 0, %if.end17 ]
  call void @pop_maybe_used(i8 zeroext %cond) #7, !dbg !5834
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !5793, metadata !DIExpression(DW_OP_deref)), !dbg !5794
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %type_expr_const) #8, !dbg !5835
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5835
  ret void, !dbg !5835
}

declare dso_local %union.tree_node* @groktypename(%struct.c_type_name*, %union.tree_node**, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_function_call(i32 %loc, %union.tree_node* %function, %union.tree_node* %params) local_unnamed_addr #5 !dbg !5836 {
entry:
  %vec = alloca %struct.VEC_tree_gc*, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5838, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %union.tree_node* %function, metadata !5839, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %union.tree_node* %params, metadata !5840, metadata !DIExpression()), !dbg !5843
  %0 = bitcast %struct.VEC_tree_gc** %vec to i8*, !dbg !5844
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5844
  %call = tail call i32 @list_length(%union.tree_node* %params) #6, !dbg !5845
  %call1 = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %call) #7, !dbg !5845
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call1, metadata !5841, metadata !DIExpression()), !dbg !5843
  store %struct.VEC_tree_gc* %call1, %struct.VEC_tree_gc** %vec, align 8, !dbg !5846
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %call1, i64 0, i32 0, !dbg !5847
  br label %for.cond, !dbg !5850

for.cond:                                         ; preds = %for.body, %entry
  %params.addr.0 = phi %union.tree_node* [ %params, %entry ], [ %3, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %params.addr.0, metadata !5840, metadata !DIExpression()), !dbg !5843
  %tobool = icmp eq %union.tree_node* %params.addr.0, null, !dbg !5851
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call1, metadata !5841, metadata !DIExpression()), !dbg !5843
  br i1 %tobool, label %for.end, label %for.body, !dbg !5851

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call1, metadata !5841, metadata !DIExpression()), !dbg !5843
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5852
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !5852
  %call3 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %2) #7, !dbg !5852
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %params.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5853
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5853
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !5840, metadata !DIExpression()), !dbg !5843
  br label %for.cond, !dbg !5854, !llvm.loop !5855

for.end:                                          ; preds = %for.cond
  %call4 = tail call %union.tree_node* @build_function_call_vec(i32 %loc, %union.tree_node* %function, %struct.VEC_tree_gc* %call1, %struct.VEC_tree_gc* null) #7, !dbg !5857
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5842, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec, metadata !5841, metadata !DIExpression(DW_OP_deref)), !dbg !5843
  call fastcc void @VEC_tree_gc_free(%struct.VEC_tree_gc** nonnull %vec) #7, !dbg !5858
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5859
  ret %union.tree_node* %call4, !dbg !5860
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5861 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5865, metadata !DIExpression()), !dbg !5866
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5867
  %0 = bitcast i8* %call to %struct.VEC_tree_gc*, !dbg !5867
  ret %struct.VEC_tree_gc* %0, !dbg !5867
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5868 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5873, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5874, metadata !DIExpression()), !dbg !5876
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5877
  %0 = load i32, i32* %num1, align 8, !dbg !5877
  %inc = add i32 %0, 1, !dbg !5877
  store i32 %inc, i32* %num1, align 8, !dbg !5877
  %idxprom = zext i32 %0 to i64, !dbg !5877
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5877
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5875, metadata !DIExpression()), !dbg !5876
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5877
  ret %union.tree_node** %arrayidx, !dbg !5877
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_function_call_vec(i32 %loc, %union.tree_node* %function, %struct.VEC_tree_gc* %params, %struct.VEC_tree_gc* %origtypes) local_unnamed_addr #5 !dbg !5878 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5882, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %params, metadata !5884, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %origtypes, metadata !5885, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5887, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5888, metadata !DIExpression()), !dbg !5901
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5901
  br label %while.cond, !dbg !5902

while.cond:                                       ; preds = %while.body, %entry
  %function.addr.0 = phi %union.tree_node* [ %function, %entry ], [ %4, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0, metadata !5883, metadata !DIExpression()), !dbg !5901
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %function.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5902
  %bf.load = load i64, i64* %1, align 8, !dbg !5902
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !5902
  %cmp = icmp eq i64 %bf.cast3, 116, !dbg !5902
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5902

lor.lhs.false:                                    ; preds = %while.cond
  %2 = or i64 %bf.cast3, 4, !dbg !5902
  %3 = icmp eq i64 %2, 117, !dbg !5902
  br i1 %3, label %land.lhs.true, label %while.end, !dbg !5902

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %function.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5902
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5902
  %cmp12 = icmp eq %union.tree_node* %4, %0, !dbg !5902
  br i1 %cmp12, label %while.end, label %land.rhs, !dbg !5902

land.rhs:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %function.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5902
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5902
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5902
  %6 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !5902
  %cmp18 = icmp eq %union.tree_node* %5, %6, !dbg !5902
  br i1 %cmp18, label %while.body, label %while.end, !dbg !5902

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5883, metadata !DIExpression()), !dbg !5901
  br label %while.cond, !dbg !5902, !llvm.loop !5903

while.end:                                        ; preds = %lor.lhs.false, %land.lhs.true, %land.rhs
  %function.addr.0.lcssa = phi %union.tree_node* [ %function.addr.0, %lor.lhs.false ], [ %function.addr.0, %land.lhs.true ], [ %function.addr.0, %land.rhs ]
  %bf.cast3.lcssa = phi i64 [ %bf.cast3, %lor.lhs.false ], [ %bf.cast3, %land.lhs.true ], [ %bf.cast3, %land.rhs ], !dbg !5902
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5883, metadata !DIExpression()), !dbg !5901
  %cmp26 = icmp eq i64 %bf.cast3.lcssa, 29, !dbg !5904
  br i1 %cmp26, label %if.then, label %if.end29, !dbg !5906

if.then:                                          ; preds = %while.end
  %call = tail call %union.tree_node* @resolve_overloaded_builtin(i32 %loc, %union.tree_node* %function.addr.0.lcssa, %struct.VEC_tree_gc* %params) #6, !dbg !5907
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5890, metadata !DIExpression()), !dbg !5901
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !5909
  br i1 %tobool, label %if.end, label %cleanup363, !dbg !5911

if.end:                                           ; preds = %if.then
  %name28 = getelementptr inbounds %union.tree_node, %union.tree_node* %function.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5912
  %7 = load %union.tree_node*, %union.tree_node** %name28, align 8, !dbg !5912
  %8 = bitcast %union.tree_node* %7 to %struct.tree_identifier*, !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5888, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0.lcssa, metadata !5887, metadata !DIExpression()), !dbg !5901
  br label %if.end29, !dbg !5913

if.end29:                                         ; preds = %if.end, %while.end
  %9 = phi %struct.tree_identifier* [ %8, %if.end ], [ null, %while.end ], !dbg !5901
  %name.0 = phi %union.tree_node* [ %7, %if.end ], [ null, %while.end ], !dbg !5901
  %fundecl.0 = phi %union.tree_node* [ %function.addr.0.lcssa, %if.end ], [ null, %while.end ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %fundecl.0, metadata !5887, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0, metadata !5888, metadata !DIExpression()), !dbg !5901
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %function.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5914
  %10 = bitcast %union.tree_node** %type31 to i64**, !dbg !5914
  %11 = load i64*, i64** %10, align 8, !dbg !5914
  %bf.load33 = load i64, i64* %11, align 8, !dbg !5914
  %bf.cast357 = and i64 %bf.load33, 65535, !dbg !5916
  %cmp36 = icmp eq i64 %bf.cast357, 20, !dbg !5916
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !5917

if.then37:                                        ; preds = %if.end29
  %call38 = tail call fastcc %union.tree_node* @function_to_pointer_conversion(i32 %loc, %union.tree_node* %function.addr.0.lcssa) #7, !dbg !5918
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !5883, metadata !DIExpression()), !dbg !5901
  br label %if.end39, !dbg !5919

if.end39:                                         ; preds = %if.then37, %if.end29
  %function.addr.1 = phi %union.tree_node* [ %call38, %if.then37 ], [ %function.addr.0.lcssa, %if.end29 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.1, metadata !5883, metadata !DIExpression()), !dbg !5901
  %base41 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %params, i64 0, i32 0, !dbg !5920
  %call42 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base41) #7, !dbg !5920
  %cmp43 = icmp eq i32 %call42, 0, !dbg !5920
  br i1 %cmp43, label %if.end53, label %if.then44, !dbg !5922

if.then44:                                        ; preds = %if.end39
  %call51 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base41, i32 0) #7, !dbg !5923
  %call52 = tail call %union.tree_node* @objc_rewrite_function_call(%union.tree_node* %function.addr.1, %union.tree_node* %call51) #6, !dbg !5924
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !5883, metadata !DIExpression()), !dbg !5901
  br label %if.end53, !dbg !5925

if.end53:                                         ; preds = %if.then44, %if.end39
  %function.addr.2 = phi %union.tree_node* [ %function.addr.1, %if.end39 ], [ %call52, %if.then44 ], !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.2, metadata !5883, metadata !DIExpression()), !dbg !5901
  %call54 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %function.addr.2, i8 zeroext 0, i8* null) #6, !dbg !5926
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !5883, metadata !DIExpression()), !dbg !5901
  %type56 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5927
  %12 = load %union.tree_node*, %union.tree_node** %type56, align 8, !dbg !5927
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5886, metadata !DIExpression()), !dbg !5901
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5928
  %bf.load58 = load i64, i64* %13, align 8, !dbg !5928
  %bf.cast608 = and i64 %bf.load58, 65535, !dbg !5930
  %cmp61 = icmp eq i64 %bf.cast608, 0, !dbg !5930
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !5931

if.then62:                                        ; preds = %if.end53
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5932
  br label %cleanup363, !dbg !5933

if.end63:                                         ; preds = %if.end53
  %cmp68 = icmp eq i64 %bf.cast608, 10, !dbg !5934
  br i1 %cmp68, label %land.lhs.true69, label %if.then77, !dbg !5936

land.lhs.true69:                                  ; preds = %if.end63
  %type71 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5937
  %15 = bitcast %union.tree_node** %type71 to i64**, !dbg !5937
  %16 = load i64*, i64** %15, align 8, !dbg !5937
  %bf.load73 = load i64, i64* %16, align 8, !dbg !5937
  %bf.cast7510 = and i64 %bf.load73, 65535, !dbg !5938
  %cmp76 = icmp eq i64 %bf.cast7510, 20, !dbg !5938
  %17 = bitcast i64* %16 to %union.tree_node*, !dbg !5939
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !5939

if.then77:                                        ; preds = %land.lhs.true69, %if.end63
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i64 0, i64 0), %union.tree_node* %call54) #6, !dbg !5940
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5942
  br label %cleanup363, !dbg !5943

if.end78:                                         ; preds = %land.lhs.true69
  %tobool79 = icmp eq %union.tree_node* %fundecl.0, null, !dbg !5944
  br i1 %tobool79, label %if.end87, label %land.lhs.true80, !dbg !5946

land.lhs.true80:                                  ; preds = %if.end78
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5947
  %bf.load82 = load i64, i64* %19, align 8, !dbg !5947
  %bf.cast8432 = and i64 %bf.load82, 524288, !dbg !5947
  %tobool85 = icmp eq i64 %bf.cast8432, 0, !dbg !5947
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !5948

if.then86:                                        ; preds = %land.lhs.true80
  store i32 1, i32* @current_function_returns_abnormally, align 4, !dbg !5949
  br label %if.end87, !dbg !5950

if.end87:                                         ; preds = %land.lhs.true80, %if.end78, %if.then86
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5886, metadata !DIExpression()), !dbg !5901
  %values = getelementptr inbounds i64, i64* %16, i64 3, !dbg !5951
  %20 = bitcast i64* %values to %union.tree_node**, !dbg !5951
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !5951
  %call91 = tail call fastcc i32 @convert_arguments(%union.tree_node* %21, %struct.VEC_tree_gc* %params, %struct.VEC_tree_gc* %origtypes, %union.tree_node* %call54, %union.tree_node* %fundecl.0) #7, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %call91, metadata !5891, metadata !DIExpression()), !dbg !5901
  %cmp92 = icmp slt i32 %call91, 0, !dbg !5953
  br i1 %cmp92, label %if.then93, label %if.end94, !dbg !5955

if.then93:                                        ; preds = %if.end87
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5956
  br label %cleanup363, !dbg !5957

if.end94:                                         ; preds = %if.end87
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5958
  %bf.load96 = load i64, i64* %23, align 8, !dbg !5958
  %bf.cast9811 = and i64 %bf.load96, 65535, !dbg !5958
  %cmp99 = icmp eq i64 %bf.cast9811, 116, !dbg !5958
  br i1 %cmp99, label %land.lhs.true106, label %lor.lhs.false100, !dbg !5958

lor.lhs.false100:                                 ; preds = %if.end94
  %cmp105 = icmp eq i64 %bf.cast9811, 113, !dbg !5958
  br i1 %cmp105, label %land.lhs.true106, label %if.end211, !dbg !5959

land.lhs.true106:                                 ; preds = %lor.lhs.false100, %if.end94
  %operands108 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5960
  %24 = load %union.tree_node*, %union.tree_node** %operands108, align 8, !dbg !5960
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !5890, metadata !DIExpression()), !dbg !5901
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5960
  %bf.load111 = load i64, i64* %25, align 8, !dbg !5960
  %bf.cast11322 = and i64 %bf.load111, 65535, !dbg !5961
  %cmp114 = icmp eq i64 %bf.cast11322, 121, !dbg !5961
  br i1 %cmp114, label %land.lhs.true115, label %if.end211, !dbg !5962

land.lhs.true115:                                 ; preds = %land.lhs.true106
  %operands117 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5963
  %26 = load %union.tree_node*, %union.tree_node** %operands117, align 8, !dbg !5963
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !5890, metadata !DIExpression()), !dbg !5901
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5963
  %bf.load120 = load i64, i64* %27, align 8, !dbg !5963
  %bf.cast12223 = and i64 %bf.load120, 65535, !dbg !5964
  %cmp123 = icmp eq i64 %bf.cast12223, 29, !dbg !5964
  br i1 %cmp123, label %land.lhs.true124, label %if.end211, !dbg !5965

land.lhs.true124:                                 ; preds = %land.lhs.true115
  %type126 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5966
  %28 = load %union.tree_node*, %union.tree_node** %type126, align 8, !dbg !5966
  %call127 = tail call i32 @comptypes(%union.tree_node* %17, %union.tree_node* %28) #7, !dbg !5967
  %tobool128 = icmp eq i32 %call127, 0, !dbg !5967
  br i1 %tobool128, label %if.then129, label %if.end211, !dbg !5968

if.then129:                                       ; preds = %land.lhs.true124
  %type131 = getelementptr inbounds i64, i64* %16, i64 2, !dbg !5969
  %29 = bitcast i64* %type131 to %union.tree_node**, !dbg !5969
  %30 = load %union.tree_node*, %union.tree_node** %29, align 8, !dbg !5969
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !5893, metadata !DIExpression()), !dbg !5970
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 509), align 8, !dbg !5971
  %call132 = tail call %union.tree_node* @build_function_call(i32 %loc, %union.tree_node* %31, %union.tree_node* null) #7, !dbg !5972
  call void @llvm.dbg.value(metadata %union.tree_node* %call132, metadata !5896, metadata !DIExpression()), !dbg !5970
  %call133 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !5973
  %tobool134 = icmp eq i8 %call133, 0, !dbg !5973
  br i1 %tobool134, label %if.end136, label %if.then135, !dbg !5975

if.then135:                                       ; preds = %if.then129
  tail call void (i32, i8*, ...) @inform(i32 %loc, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !5976
  br label %if.end136, !dbg !5976

if.end136:                                        ; preds = %if.then129, %if.then135
  call void @llvm.dbg.value(metadata i32 0, metadata !5897, metadata !DIExpression()), !dbg !5970
  br label %for.cond, !dbg !5977

for.cond:                                         ; preds = %for.body, %if.end136
  %trap.0 = phi %union.tree_node* [ %call132, %if.end136 ], [ %call145, %for.body ], !dbg !5970
  %i.0 = phi i32 [ 0, %if.end136 ], [ %inc, %for.body ], !dbg !5979
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5897, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata %union.tree_node* %trap.0, metadata !5896, metadata !DIExpression()), !dbg !5970
  %cmp137 = icmp slt i32 %i.0, %call91, !dbg !5980
  br i1 %cmp137, label %for.body, label %for.end, !dbg !5982

for.body:                                         ; preds = %for.cond
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5983
  %call144 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base41, i32 %i.0) #7, !dbg !5983
  %call145 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %32, %union.tree_node* %call144, %union.tree_node* %trap.0) #6, !dbg !5983
  call void @llvm.dbg.value(metadata %union.tree_node* %call145, metadata !5896, metadata !DIExpression()), !dbg !5970
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5897, metadata !DIExpression()), !dbg !5970
  br label %for.cond, !dbg !5985, !llvm.loop !5986

for.end:                                          ; preds = %for.cond
  %trap.0.lcssa = phi %union.tree_node* [ %trap.0, %for.cond ], !dbg !5970
  call void @llvm.dbg.value(metadata %union.tree_node* %trap.0.lcssa, metadata !5896, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata %union.tree_node* %trap.0.lcssa, metadata !5896, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata %union.tree_node* %trap.0.lcssa, metadata !5896, metadata !DIExpression()), !dbg !5970
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5988
  %bf.load147 = load i64, i64* %33, align 8, !dbg !5988
  %bf.cast14924 = and i64 %bf.load147, 65535, !dbg !5988
  %cmp150 = icmp eq i64 %bf.cast14924, 19, !dbg !5988
  br i1 %cmp150, label %if.then151, label %if.else, !dbg !5989

if.then151:                                       ; preds = %for.end
  %bf.lshr154 = lshr i64 %bf.load147, 20, !dbg !5990
  %34 = trunc i64 %bf.lshr154 to i32, !dbg !5990
  %bf.cast156 = and i32 %34, 1, !dbg !5990
  %35 = lshr i64 %bf.load147, 18, !dbg !5990
  %36 = trunc i64 %35 to i32, !dbg !5990
  %mul162 = and i32 %36, 2, !dbg !5990
  %or = or i32 %bf.cast156, %mul162, !dbg !5990
  %type163 = bitcast %union.tree_node* %30 to %struct.tree_type*, !dbg !5990
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type163, i64 0, i32 6, !dbg !5990
  %bf.load164 = load i32, i32* %restrict_flag, align 4, !dbg !5990
  %37 = lshr i32 %bf.load164, 11, !dbg !5990
  %mul167 = and i32 %37, 4, !dbg !5990
  %or168 = or i32 %or, %mul167, !dbg !5990
  %38 = lshr i64 %bf.load147, 48, !dbg !5990
  %39 = trunc i64 %38 to i32, !dbg !5990
  %shl = and i32 %39, 65280, !dbg !5990
  %or173 = or i32 %or168, %shl, !dbg !5990
  %cmp174 = icmp eq i32 %or173, 0, !dbg !5993
  br i1 %cmp174, label %cleanup363, label %if.then175, !dbg !5994

if.then175:                                       ; preds = %if.then151
  %call176 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !5995
  br label %cleanup363, !dbg !5995

if.else:                                          ; preds = %for.end
  %cmp182 = icmp eq i64 %bf.cast14924, 15, !dbg !5996
  br i1 %cmp182, label %if.then201, label %lor.lhs.false183, !dbg !5996

lor.lhs.false183:                                 ; preds = %if.else
  %cmp188 = icmp eq i64 %bf.cast14924, 16, !dbg !5996
  br i1 %cmp188, label %if.then201, label %lor.lhs.false189, !dbg !5996

lor.lhs.false189:                                 ; preds = %lor.lhs.false183
  %cmp194 = icmp eq i64 %bf.cast14924, 17, !dbg !5996
  br i1 %cmp194, label %if.then201, label %lor.lhs.false195, !dbg !5996

lor.lhs.false195:                                 ; preds = %lor.lhs.false189
  %cmp200 = icmp eq i64 %bf.cast14924, 18, !dbg !5996
  br i1 %cmp200, label %if.then201, label %if.else204, !dbg !5998

if.then201:                                       ; preds = %lor.lhs.false195, %lor.lhs.false189, %lor.lhs.false183, %if.else
  %call202 = tail call %union.tree_node* @build_constructor(%union.tree_node* %30, %struct.VEC_constructor_elt_gc* null) #6, !dbg !5999
  %call203 = tail call %union.tree_node* @build_compound_literal(i32 %loc, %union.tree_node* %30, %union.tree_node* %call202, i8 zeroext 0) #6, !dbg !6000
  call void @llvm.dbg.value(metadata %union.tree_node* %call203, metadata !5898, metadata !DIExpression()), !dbg !6001
  br label %if.end206, !dbg !6002

if.else204:                                       ; preds = %lor.lhs.false195
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6003
  %call205 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %30, %union.tree_node* %40) #6, !dbg !6004
  call void @llvm.dbg.value(metadata %union.tree_node* %call205, metadata !5898, metadata !DIExpression()), !dbg !6001
  br label %if.end206

if.end206:                                        ; preds = %if.else204, %if.then201
  %rhs.0 = phi %union.tree_node* [ %call203, %if.then201 ], [ %call205, %if.else204 ], !dbg !6005
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !5898, metadata !DIExpression()), !dbg !6001
  %call207 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %30, %union.tree_node* %trap.0.lcssa, %union.tree_node* %rhs.0) #6, !dbg !6006
  %call208 = tail call %union.tree_node* @require_complete_type(%union.tree_node* %call207) #7, !dbg !6007
  br label %cleanup363

if.end211:                                        ; preds = %land.lhs.true124, %land.lhs.true115, %land.lhs.true106, %lor.lhs.false100
  %call218 = tail call fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %base41) #7, !dbg !6008
  call void @llvm.dbg.value(metadata %union.tree_node** %call218, metadata !5892, metadata !DIExpression()), !dbg !5901
  br i1 %tobool79, label %if.end236, label %land.lhs.true220, !dbg !6009

land.lhs.true220:                                 ; preds = %if.end211
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl.0, i64 0, i32 0, i32 5, !dbg !6011
  %bf.load221 = load i32, i32* %built_in_class, align 8, !dbg !6011
  %bf.clear223 = and i32 %bf.load221, 6144, !dbg !6011
  %cmp224 = icmp eq i32 %bf.clear223, 0, !dbg !6011
  br i1 %cmp224, label %if.end236, label %land.lhs.true225, !dbg !6012

land.lhs.true225:                                 ; preds = %land.lhs.true220
  %cmp231 = icmp eq i32 %bf.clear223, 6144, !dbg !6013
  br i1 %cmp231, label %land.lhs.true232, label %if.end236, !dbg !6014

land.lhs.true232:                                 ; preds = %land.lhs.true225
  %call233 = tail call zeroext i8 @check_builtin_function_arguments(%union.tree_node* nonnull %fundecl.0, i32 %call91, %union.tree_node** %call218) #6, !dbg !6015
  %tobool234 = icmp eq i8 %call233, 0, !dbg !6015
  br i1 %tobool234, label %if.then235, label %if.end236, !dbg !6016

if.then235:                                       ; preds = %land.lhs.true232
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6017
  br label %cleanup363, !dbg !6018

if.end236:                                        ; preds = %land.lhs.true232, %land.lhs.true220, %if.end211, %land.lhs.true225
  %42 = getelementptr inbounds i64, i64* %16, i64 6, !dbg !6019
  %43 = bitcast i64* %42 to %union.tree_node**, !dbg !6019
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !6019
  %45 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !6020
  tail call void @check_function_arguments(%union.tree_node* %44, i32 %call91, %union.tree_node** %call218, %union.tree_node* %45) #6, !dbg !6021
  %cmp240 = icmp eq %union.tree_node* %name.0, null, !dbg !6022
  br i1 %cmp240, label %if.else309, label %land.lhs.true241, !dbg !6024

land.lhs.true241:                                 ; preds = %if.end236
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %9, i64 0, i32 1, i32 0, !dbg !6025
  %46 = load i8*, i8** %str, align 8, !dbg !6025
  %call242 = tail call i32 @strncmp(i8* %46, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i64 10) #6, !dbg !6026
  %tobool243 = icmp eq i32 %call242, 0, !dbg !6026
  br i1 %tobool243, label %if.then244, label %if.else309, !dbg !6027

if.then244:                                       ; preds = %land.lhs.true241
  %47 = load i32, i32* @require_constant_value, align 4, !dbg !6028
  %tobool245 = icmp eq i32 %47, 0, !dbg !6028
  %type248 = getelementptr inbounds i64, i64* %16, i64 2, !dbg !6031
  %48 = bitcast i64* %type248 to %union.tree_node**, !dbg !6031
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8, !dbg !6031
  br i1 %tobool245, label %if.else250, label %if.then246, !dbg !6032

if.then246:                                       ; preds = %if.then244
  %call249 = tail call %union.tree_node* @fold_build_call_array_initializer_loc(i32 %loc, %union.tree_node* %49, %union.tree_node* %call54, i32 %call91, %union.tree_node** %call218) #6, !dbg !6033
  call void @llvm.dbg.value(metadata %union.tree_node* %call249, metadata !5889, metadata !DIExpression()), !dbg !5901
  br label %if.end254, !dbg !6034

if.else250:                                       ; preds = %if.then244
  %call253 = tail call %union.tree_node* @fold_build_call_array_loc(i32 %loc, %union.tree_node* %49, %union.tree_node* %call54, i32 %call91, %union.tree_node** %call218) #6, !dbg !6035
  call void @llvm.dbg.value(metadata %union.tree_node* %call253, metadata !5889, metadata !DIExpression()), !dbg !5901
  br label %if.end254

if.end254:                                        ; preds = %if.else250, %if.then246
  %result.0 = phi %union.tree_node* [ %call249, %if.then246 ], [ %call253, %if.else250 ], !dbg !6031
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !5889, metadata !DIExpression()), !dbg !5901
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6036
  %bf.load256 = load i64, i64* %50, align 8, !dbg !6036
  %bf.cast25817 = and i64 %bf.load256, 65535, !dbg !6038
  %cmp259 = icmp eq i64 %bf.cast25817, 116, !dbg !6038
  br i1 %cmp259, label %land.lhs.true260, label %if.end313, !dbg !6039

land.lhs.true260:                                 ; preds = %if.end254
  %operands262 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6040
  %51 = bitcast %union.tree_node** %operands262 to i64**, !dbg !6040
  %52 = load i64*, i64** %51, align 8, !dbg !6040
  %bf.load265 = load i64, i64* %52, align 8, !dbg !6040
  %bf.cast26718 = and i64 %bf.load265, 65535, !dbg !6041
  %cmp268 = icmp eq i64 %bf.cast26718, 23, !dbg !6041
  br i1 %cmp268, label %while.cond270.preheader, label %if.end313, !dbg !6042

while.cond270.preheader:                          ; preds = %land.lhs.true260
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6043
  br label %while.cond270, !dbg !6044

while.cond270:                                    ; preds = %while.cond270.preheader, %while.body303
  %bf.load284 = phi i64 [ %bf.load272.pre, %while.body303 ], [ %bf.load256, %while.cond270.preheader ], !dbg !6044
  %result.1 = phi %union.tree_node* [ %56, %while.body303 ], [ %result.0, %while.cond270.preheader ], !dbg !6045
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1, metadata !5889, metadata !DIExpression()), !dbg !5901
  %bf.cast27419 = and i64 %bf.load284, 65535, !dbg !6044
  %cmp275 = icmp eq i64 %bf.cast27419, 116, !dbg !6044
  br i1 %cmp275, label %land.lhs.true288, label %lor.lhs.false276, !dbg !6044

lor.lhs.false276:                                 ; preds = %while.cond270
  %54 = or i64 %bf.cast27419, 4, !dbg !6044
  %55 = icmp eq i64 %54, 117, !dbg !6044
  br i1 %55, label %land.lhs.true288, label %if.end313.loopexit, !dbg !6044

land.lhs.true288:                                 ; preds = %lor.lhs.false276, %while.cond270
  %operands290 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6044
  %56 = load %union.tree_node*, %union.tree_node** %operands290, align 8, !dbg !6044
  %cmp292 = icmp eq %union.tree_node* %56, %53, !dbg !6044
  br i1 %cmp292, label %if.end313.loopexit, label %land.rhs293, !dbg !6044

land.rhs293:                                      ; preds = %land.lhs.true288
  %type295 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6044
  %57 = load %union.tree_node*, %union.tree_node** %type295, align 8, !dbg !6044
  %type300 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6044
  %58 = load %union.tree_node*, %union.tree_node** %type300, align 8, !dbg !6044
  %cmp301 = icmp eq %union.tree_node* %57, %58, !dbg !6044
  br i1 %cmp301, label %while.body303, label %if.end313.loopexit, !dbg !6044

while.body303:                                    ; preds = %land.rhs293
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !5889, metadata !DIExpression()), !dbg !5901
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6043
  %bf.load272.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !6044
  br label %while.cond270, !dbg !6044, !llvm.loop !6046

if.else309:                                       ; preds = %land.lhs.true241, %if.end236
  %type311 = getelementptr inbounds i64, i64* %16, i64 2, !dbg !6047
  %59 = bitcast i64* %type311 to %union.tree_node**, !dbg !6047
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8, !dbg !6047
  %call312 = tail call %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %60, %union.tree_node* %call54, i32 %call91, %union.tree_node** %call218) #6, !dbg !6048
  call void @llvm.dbg.value(metadata %union.tree_node* %call312, metadata !5889, metadata !DIExpression()), !dbg !5901
  br label %if.end313

if.end313.loopexit:                               ; preds = %lor.lhs.false276, %land.rhs293, %land.lhs.true288
  %result.1.lcssa = phi %union.tree_node* [ %result.1, %lor.lhs.false276 ], [ %result.1, %land.rhs293 ], [ %result.1, %land.lhs.true288 ], !dbg !6045
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1.lcssa, metadata !5889, metadata !DIExpression()), !dbg !5901
  br label %if.end313, !dbg !6049

if.end313:                                        ; preds = %if.end313.loopexit, %if.end254, %land.lhs.true260, %if.else309
  %result.3 = phi %union.tree_node* [ %call312, %if.else309 ], [ %result.0, %land.lhs.true260 ], [ %result.0, %if.end254 ], [ %result.1.lcssa, %if.end313.loopexit ], !dbg !6051
  call void @llvm.dbg.value(metadata %union.tree_node* %result.3, metadata !5889, metadata !DIExpression()), !dbg !5901
  %type315 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6049
  %61 = bitcast %union.tree_node** %type315 to i64**, !dbg !6049
  %62 = load i64*, i64** %61, align 8, !dbg !6049
  %bf.load317 = load i64, i64* %62, align 8, !dbg !6049
  %bf.cast31913 = and i64 %bf.load317, 65535, !dbg !6049
  %cmp320 = icmp eq i64 %bf.cast31913, 19, !dbg !6049
  br i1 %cmp320, label %if.then321, label %if.end361, !dbg !6052

if.then321:                                       ; preds = %if.end313
  %63 = bitcast i64* %62 to %struct.tree_type*, !dbg !6052
  %bf.lshr326 = lshr i64 %bf.load317, 20, !dbg !6053
  %64 = trunc i64 %bf.lshr326 to i32, !dbg !6053
  %bf.cast328 = and i32 %64, 1, !dbg !6053
  %65 = lshr i64 %bf.load317, 18, !dbg !6053
  %66 = trunc i64 %65 to i32, !dbg !6053
  %mul337 = and i32 %66, 2, !dbg !6053
  %or338 = or i32 %bf.cast328, %mul337, !dbg !6053
  %restrict_flag342 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %63, i64 0, i32 6, !dbg !6053
  %bf.load343 = load i32, i32* %restrict_flag342, align 4, !dbg !6053
  %67 = lshr i32 %bf.load343, 11, !dbg !6053
  %mul346 = and i32 %67, 4, !dbg !6053
  %or347 = or i32 %or338, %mul346, !dbg !6053
  %68 = lshr i64 %bf.load317, 48, !dbg !6053
  %69 = trunc i64 %68 to i32, !dbg !6053
  %shl355 = and i32 %69, 65280, !dbg !6053
  %or356 = or i32 %or347, %shl355, !dbg !6053
  %cmp357 = icmp eq i32 %or356, 0, !dbg !6056
  br i1 %cmp357, label %cleanup363, label %if.then358, !dbg !6057

if.then358:                                       ; preds = %if.then321
  %call359 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !6058
  br label %cleanup363, !dbg !6058

if.end361:                                        ; preds = %if.end313
  %call362 = tail call %union.tree_node* @require_complete_type(%union.tree_node* %result.3) #7, !dbg !6059
  br label %cleanup363, !dbg !6060

cleanup363:                                       ; preds = %if.then, %if.then151, %if.then321, %if.then358, %if.end206, %if.then175, %if.end361, %if.then235, %if.then93, %if.then77, %if.then62
  %retval.1 = phi %union.tree_node* [ %14, %if.then62 ], [ %22, %if.then93 ], [ %call362, %if.end361 ], [ %41, %if.then235 ], [ %18, %if.then77 ], [ %call, %if.then ], [ %call208, %if.end206 ], [ %trap.0.lcssa, %if.then175 ], [ %trap.0.lcssa, %if.then151 ], [ %result.3, %if.then358 ], [ %result.3, %if.then321 ], !dbg !5901
  ret %union.tree_node* %retval.1, !dbg !6061
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_gc_free(%struct.VEC_tree_gc** %vec_) unnamed_addr #0 !dbg !6062 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !6067, metadata !DIExpression()), !dbg !6068
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !6069
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !6069
  br i1 %tobool, label %if.end, label %if.then, !dbg !6071

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_gc* %0 to i8*, !dbg !6071
  tail call void @ggc_free(i8* nonnull %1) #6, !dbg !6069
  br label %if.end, !dbg !6069

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_gc* null, %struct.VEC_tree_gc** %vec_, align 8, !dbg !6071
  ret void, !dbg !6071
}

declare dso_local %union.tree_node* @resolve_overloaded_builtin(i32, %union.tree_node*, %struct.VEC_tree_gc*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !6072 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6078, metadata !DIExpression()), !dbg !6079
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6080
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6080

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6080
  %0 = load i32, i32* %num, align 8, !dbg !6080
  br label %cond.end, !dbg !6080

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6080
  ret i32 %cond, !dbg !6080
}

declare dso_local %union.tree_node* @objc_rewrite_function_call(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6081 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6085, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6086, metadata !DIExpression()), !dbg !6087
  br label %land.end, !dbg !6088

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6088
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6088
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6088
  ret %union.tree_node* %0, !dbg !6088
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @convert_arguments(%union.tree_node* %typelist, %struct.VEC_tree_gc* %values, %struct.VEC_tree_gc* %origtypes, %union.tree_node* %function, %union.tree_node* %fundecl) unnamed_addr #5 !dbg !6089 {
entry:
  %val = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %typelist, metadata !6093, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %values, metadata !6094, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %origtypes, metadata !6095, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node* %function, metadata !6096, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node* %fundecl, metadata !6097, metadata !DIExpression()), !dbg !6134
  %0 = bitcast %union.tree_node** %val to i8*, !dbg !6135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6135
  call void @llvm.dbg.value(metadata i8 0, metadata !6101, metadata !DIExpression()), !dbg !6134
  %tobool = icmp eq %union.tree_node* %fundecl, null, !dbg !6136
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6137

land.rhs:                                         ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6138
  %1 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !6138
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !6138
  %attributes = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 4, !dbg !6138
  %3 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !6138
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.170, i64 0, i64 0), %union.tree_node* %3) #6, !dbg !6139
  %tobool2 = icmp ne %union.tree_node* %call, null, !dbg !6137
  %phitmp = zext i1 %tobool2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %4 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %4, metadata !6102, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 0, metadata !6103, metadata !DIExpression()), !dbg !6134
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %function, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6140
  %bf.load = load i64, i64* %5, align 8, !dbg !6140
  %bf.cast15 = and i64 %bf.load, 65535, !dbg !6142
  %cmp = icmp eq i64 %bf.cast15, 121, !dbg !6142
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6143

land.lhs.true:                                    ; preds = %land.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %function, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6144
  %6 = bitcast %union.tree_node** %operands to i64**, !dbg !6144
  %7 = load i64*, i64** %6, align 8, !dbg !6144
  %bf.load5 = load i64, i64* %7, align 8, !dbg !6144
  %bf.cast759 = and i64 %bf.load5, 65535, !dbg !6145
  %cmp8 = icmp eq i64 %bf.cast759, 29, !dbg !6145
  br i1 %cmp8, label %if.then, label %if.end, !dbg !6146

if.then:                                          ; preds = %land.lhs.true
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !6146
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6096, metadata !DIExpression()), !dbg !6134
  br label %if.end, !dbg !6147

if.end:                                           ; preds = %if.then, %land.lhs.true, %land.end
  %function.addr.0 = phi %union.tree_node* [ %8, %if.then ], [ %function, %land.lhs.true ], [ %function, %land.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0, metadata !6096, metadata !DIExpression()), !dbg !6134
  %call13 = tail call %union.tree_node* @objc_message_selector() #6, !dbg !6148
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !6104, metadata !DIExpression()), !dbg !6134
  %tobool15 = icmp eq i8 %4, 0, !dbg !6149
  br i1 %tobool15, label %if.end33, label %land.lhs.true16, !dbg !6151

land.lhs.true16:                                  ; preds = %if.end
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 5, !dbg !6152
  %bf.load17 = load i32, i32* %built_in_class, align 8, !dbg !6152
  %bf.clear18 = and i32 %bf.load17, 6144, !dbg !6152
  %cmp19 = icmp eq i32 %bf.clear18, 0, !dbg !6152
  br i1 %cmp19, label %if.end33, label %land.lhs.true21, !dbg !6153

land.lhs.true21:                                  ; preds = %land.lhs.true16
  %cmp27 = icmp eq i32 %bf.clear18, 6144, !dbg !6154
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !6155

if.then29:                                        ; preds = %land.lhs.true21
  %bf.clear32 = and i32 %bf.load17, 2047, !dbg !6156
  switch i32 %bf.clear32, label %sw.default [
    i32 467, label %if.end33
    i32 469, label %if.end33
    i32 468, label %if.end33
    i32 475, label %if.end33
    i32 481, label %if.end33
    i32 466, label %if.end33
  ], !dbg !6158

sw.default:                                       ; preds = %if.then29
  call void @llvm.dbg.value(metadata i8 0, metadata !6103, metadata !DIExpression()), !dbg !6134
  br label %if.end33, !dbg !6159

if.end33:                                         ; preds = %land.lhs.true16, %if.end, %sw.default, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %land.lhs.true21
  %type_generic_remove_excess_precision.1 = phi i1 [ false, %land.lhs.true21 ], [ false, %land.lhs.true16 ], [ false, %if.end ], [ false, %sw.default ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %typelist, metadata !6098, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 0, metadata !6100, metadata !DIExpression()), !dbg !6134
  %base35 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %values, i64 0, i32 0, !dbg !6161
  %9 = bitcast %union.tree_node** %val to %struct.tree_common**, !dbg !6162
  %tobool61 = icmp ne %union.tree_node* %call13, null, !dbg !6163
  %10 = bitcast %union.tree_node** %val to i64**, !dbg !6165
  %tobool76 = icmp ne i8 %4, 0, !dbg !6165
  %11 = bitcast %union.tree_node** %val to i64*, !dbg !6167
  %cmp522 = icmp eq %struct.VEC_tree_gc* %origtypes, null, !dbg !6169
  %base528 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %origtypes, i64 0, i32 0, !dbg !6169
  %type540 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6170
  %built_in_class52 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 5, !dbg !6172
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6172
  br label %for.cond, !dbg !6176

for.cond:                                         ; preds = %for.inc, %if.end33
  %error_args.0 = phi i8 [ 0, %if.end33 ], [ %error_args.2, %for.inc ], !dbg !6177
  %parmnum.0 = phi i32 [ 0, %if.end33 ], [ %add, %for.inc ], !dbg !6178
  %typetail.0 = phi %union.tree_node* [ %typelist, %if.end33 ], [ %typetail.2, %for.inc ], !dbg !6179
  %retval.0 = phi i32 [ undef, %if.end33 ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %typetail.0, metadata !6098, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %parmnum.0, metadata !6100, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 %error_args.0, metadata !6101, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node** %val, metadata !6099, metadata !DIExpression(DW_OP_deref)), !dbg !6134
  %call36 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base35, i32 %parmnum.0, %union.tree_node** nonnull %val) #7, !dbg !6180
  %tobool37 = icmp eq i32 %call36, 0, !dbg !6181
  br i1 %tobool37, label %for.end, label %for.body, !dbg !6181

for.body:                                         ; preds = %for.cond
  %tobool39 = icmp eq %union.tree_node* %typetail.0, null, !dbg !6182
  br i1 %tobool39, label %cond.end42, label %cond.true40, !dbg !6182

cond.true40:                                      ; preds = %for.body
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %typetail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6183
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !6183
  %14 = bitcast %union.tree_node* %13 to %struct.tree_type*, !dbg !6182
  br label %cond.end42, !dbg !6182

cond.end42:                                       ; preds = %for.body, %cond.true40
  %15 = phi %struct.tree_type* [ %14, %cond.true40 ], [ null, %for.body ], !dbg !6182
  %cond43 = phi %union.tree_node* [ %13, %cond.true40 ], [ null, %for.body ], !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %cond43, metadata !6105, metadata !DIExpression()), !dbg !6162
  %16 = load %struct.tree_common*, %struct.tree_common** %9, align 8, !dbg !6184
  %type45 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !6184
  %17 = load %union.tree_node*, %union.tree_node** %type45, align 8, !dbg !6184
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !6109, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0, metadata !6110, metadata !DIExpression()), !dbg !6162
  %add = add i32 %parmnum.0, 1, !dbg !6185
  call void @llvm.dbg.value(metadata i32 %add, metadata !6111, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i8 0, metadata !6113, metadata !DIExpression()), !dbg !6162
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6186
  %cmp46 = icmp eq %union.tree_node* %cond43, %18, !dbg !6187
  br i1 %cmp46, label %if.then48, label %if.end60, !dbg !6188

if.then48:                                        ; preds = %cond.end42
  %19 = load i32, i32* @input_location, align 4, !dbg !6189
  call void (i32, i8*, ...) @error_at(i32 %19, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.171, i64 0, i64 0), %union.tree_node* %function.addr.0) #6, !dbg !6190
  br i1 %tobool, label %cleanup, label %land.lhs.true50, !dbg !6191

land.lhs.true50:                                  ; preds = %if.then48
  %bf.load53 = load i32, i32* %built_in_class52, align 8, !dbg !6192
  %bf.clear55 = and i32 %bf.load53, 6144, !dbg !6192
  %cmp56 = icmp eq i32 %bf.clear55, 0, !dbg !6192
  br i1 %cmp56, label %if.then58, label %cleanup, !dbg !6193

if.then58:                                        ; preds = %land.lhs.true50
  %20 = load i32, i32* %locus, align 8, !dbg !6194
  call void (i32, i8*, ...) @inform(i32 %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0)) #6, !dbg !6195
  br label %cleanup, !dbg !6195

if.end60:                                         ; preds = %cond.end42
  %21 = bitcast %struct.tree_common* %16 to %union.tree_node*, !dbg !6188
  %cmp63 = icmp sgt i32 %add, 2, !dbg !6196
  %or.cond = and i1 %tobool61, %cmp63, !dbg !6197
  %sub = add i32 %parmnum.0, -1, !dbg !6197
  %rname.0 = select i1 %or.cond, %union.tree_node* %call13, %union.tree_node* %function.addr.0, !dbg !6197
  %argnum.0 = select i1 %or.cond, i32 %sub, i32 %add, !dbg !6197
  call void @llvm.dbg.value(metadata i32 %argnum.0, metadata !6111, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata %union.tree_node* %rname.0, metadata !6110, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call67 = call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %21) #7, !dbg !6198
  call void @llvm.dbg.value(metadata i8 %call67, metadata !6114, metadata !DIExpression()), !dbg !6162
  %22 = load i64*, i64** %10, align 8, !dbg !6199
  %bf.load69 = load i64, i64* %22, align 8, !dbg !6199
  %bf.cast7116 = and i64 %bf.load69, 65535, !dbg !6200
  %cmp72 = icmp eq i64 %bf.cast7116, 190, !dbg !6200
  %23 = bitcast i64* %22 to %union.tree_node*, !dbg !6201
  br i1 %cmp72, label %land.lhs.true74, label %if.end83, !dbg !6201

land.lhs.true74:                                  ; preds = %if.end60
  %tobool75 = icmp eq %union.tree_node* %cond43, null, !dbg !6202
  %or.cond2 = and i1 %tobool75, %tobool76, !dbg !6203
  %or.cond3 = and i1 %or.cond2, %type_generic_remove_excess_precision.1, !dbg !6203
  br i1 %or.cond3, label %if.end83, label %if.then79, !dbg !6203

if.then79:                                        ; preds = %land.lhs.true74
  %arrayidx82 = getelementptr inbounds i64, i64* %22, i64 5, !dbg !6204
  %24 = load i64, i64* %arrayidx82, align 8, !dbg !6204
  store i64 %24, i64* %11, align 8, !dbg !6205
  call void @llvm.dbg.value(metadata i8 1, metadata !6113, metadata !DIExpression()), !dbg !6162
  %25 = inttoptr i64 %24 to %union.tree_node*, !dbg !6206
  br label %if.end83, !dbg !6206

if.end83:                                         ; preds = %land.lhs.true74, %if.then79, %if.end60
  %26 = phi %union.tree_node* [ %25, %if.then79 ], [ %23, %if.end60 ], [ %23, %land.lhs.true74 ], !dbg !6207
  %excess_precision.0 = phi i8 [ 1, %if.then79 ], [ 0, %if.end60 ], [ 0, %land.lhs.true74 ], !dbg !6162
  call void @llvm.dbg.value(metadata i8 %excess_precision.0, metadata !6113, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call84 = call %union.tree_node* @c_fully_fold(%union.tree_node* %26, i8 zeroext 0, i8* null) #6, !dbg !6208
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !6099, metadata !DIExpression()), !dbg !6134
  br label %while.cond, !dbg !6209

while.cond:                                       ; preds = %while.body, %if.end83
  %27 = phi %union.tree_node* [ %call84, %if.end83 ], [ %34, %while.body ], !dbg !6162
  store %union.tree_node* %27, %union.tree_node** %val, align 8, !dbg !6162
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6209
  %bf.load86 = load i64, i64* %.cast, align 8, !dbg !6209
  %bf.cast8817 = and i64 %bf.load86, 65535, !dbg !6209
  %cmp89 = icmp eq i64 %bf.cast8817, 116, !dbg !6209
  br i1 %cmp89, label %land.lhs.true105, label %lor.lhs.false91, !dbg !6209

lor.lhs.false91:                                  ; preds = %while.cond
  %cmp96 = icmp eq i64 %bf.cast8817, 113, !dbg !6209
  br i1 %cmp96, label %land.lhs.true105, label %lor.lhs.false98, !dbg !6209

lor.lhs.false98:                                  ; preds = %lor.lhs.false91
  %cmp103 = icmp eq i64 %bf.cast8817, 117, !dbg !6209
  br i1 %cmp103, label %land.lhs.true105, label %land.end121, !dbg !6209

land.lhs.true105:                                 ; preds = %lor.lhs.false98, %lor.lhs.false91, %while.cond
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6209
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !6209
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6209
  %cmp109 = icmp eq %union.tree_node* %29, %30, !dbg !6209
  br i1 %cmp109, label %land.end121, label %land.rhs111, !dbg !6209

land.rhs111:                                      ; preds = %land.lhs.true105
  %type113 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6209
  %31 = load %union.tree_node*, %union.tree_node** %type113, align 8, !dbg !6209
  %type118 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6209
  %32 = load %union.tree_node*, %union.tree_node** %type118, align 8, !dbg !6209
  %cmp119 = icmp eq %union.tree_node* %31, %32, !dbg !6209
  br label %land.end121

land.end121:                                      ; preds = %land.lhs.true105, %land.rhs111, %lor.lhs.false98
  %33 = phi i1 [ false, %land.lhs.true105 ], [ false, %lor.lhs.false98 ], [ %cmp119, %land.rhs111 ], !dbg !6162
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !6099, metadata !DIExpression()), !dbg !6134
  br i1 %33, label %while.body, label %while.end, !dbg !6209

while.body:                                       ; preds = %land.end121
  %operands124 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6209
  %34 = load %union.tree_node*, %union.tree_node** %operands124, align 8, !dbg !6209
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !6099, metadata !DIExpression()), !dbg !6134
  br label %while.cond, !dbg !6209, !llvm.loop !6210

while.end:                                        ; preds = %land.end121
  %.lcssa = phi %union.tree_node* [ %27, %land.end121 ], !dbg !6162
  %call126 = call %union.tree_node* @require_complete_type(%union.tree_node* %.lcssa) #7, !dbg !6211
  call void @llvm.dbg.value(metadata %union.tree_node* %call126, metadata !6099, metadata !DIExpression()), !dbg !6134
  store %union.tree_node* %call126, %union.tree_node** %val, align 8, !dbg !6212
  %cmp127 = icmp eq %union.tree_node* %cond43, null, !dbg !6213
  br i1 %cmp127, label %if.else583, label %if.then129, !dbg !6214

if.then129:                                       ; preds = %while.end
  %35 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6215
  %cmp130 = icmp eq %union.tree_node* %cond43, %35, !dbg !6216
  br i1 %cmp130, label %if.then136, label %lor.lhs.false132, !dbg !6217

lor.lhs.false132:                                 ; preds = %if.then129
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 2, !dbg !6218
  %36 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !6218
  %cmp134 = icmp eq %union.tree_node* %36, null, !dbg !6218
  br i1 %cmp134, label %if.then136, label %if.else, !dbg !6219

if.then136:                                       ; preds = %lor.lhs.false132, %if.then129
  call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.173, i64 0, i64 0), i32 %add) #6, !dbg !6220
  %37 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6222
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !6099, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !6115, metadata !DIExpression()), !dbg !6162
  br label %if.end643, !dbg !6223

if.else:                                          ; preds = %lor.lhs.false132
  %38 = load i32, i32* @warn_traditional_conversion, align 4, !dbg !6224
  %39 = load i32, i32* @warn_traditional, align 4, !dbg !6225
  %40 = or i32 %38, %39, !dbg !6226
  %41 = icmp eq i32 %40, 0, !dbg !6226
  br i1 %41, label %if.end517, label %if.then141, !dbg !6226

if.then141:                                       ; preds = %if.else
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !6227
  %bf.load143 = load i32, i32* %precision, align 4, !dbg !6227
  %bf.clear144 = and i32 %bf.load143, 1023, !dbg !6227
  call void @llvm.dbg.value(metadata i32 %bf.clear144, metadata !6121, metadata !DIExpression()), !dbg !6228
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6229
  %bf.load146 = load i64, i64* %42, align 8, !dbg !6229
  %bf.cast14825 = and i64 %bf.load146, 65535, !dbg !6229
  %cmp149 = icmp eq i64 %bf.cast14825, 6, !dbg !6229
  br i1 %cmp149, label %land.lhs.true165, label %lor.lhs.false151, !dbg !6229

lor.lhs.false151:                                 ; preds = %if.then141
  %cmp156 = icmp eq i64 %bf.cast14825, 7, !dbg !6229
  br i1 %cmp156, label %land.lhs.true165, label %lor.lhs.false158, !dbg !6229

lor.lhs.false158:                                 ; preds = %lor.lhs.false151
  %cmp163 = icmp eq i64 %bf.cast14825, 8, !dbg !6229
  br i1 %cmp163, label %land.lhs.true165, label %if.end174, !dbg !6231

land.lhs.true165:                                 ; preds = %lor.lhs.false158, %lor.lhs.false151, %if.then141
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6232
  %bf.load167 = load i64, i64* %43, align 8, !dbg !6232
  %bf.cast16957 = and i64 %bf.load167, 65535, !dbg !6233
  %cmp170 = icmp eq i64 %bf.cast16957, 9, !dbg !6233
  br i1 %cmp170, label %if.then172, label %if.end174, !dbg !6234

if.then172:                                       ; preds = %land.lhs.true165
  %call173 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.174, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6235
  %bf.load176.pre = load i64, i64* %42, align 8, !dbg !6236
  br label %if.end174, !dbg !6235

if.end174:                                        ; preds = %if.then172, %land.lhs.true165, %lor.lhs.false158
  %bf.load387 = phi i64 [ %bf.load176.pre, %if.then172 ], [ %bf.load146, %land.lhs.true165 ], [ %bf.load146, %lor.lhs.false158 ], !dbg !6236
  %bf.cast17828 = and i64 %bf.load387, 65535, !dbg !6236
  %cmp179 = icmp eq i64 %bf.cast17828, 6, !dbg !6236
  br i1 %cmp179, label %land.lhs.true195, label %lor.lhs.false181, !dbg !6236

lor.lhs.false181:                                 ; preds = %if.end174
  %cmp186 = icmp eq i64 %bf.cast17828, 7, !dbg !6236
  br i1 %cmp186, label %land.lhs.true195, label %lor.lhs.false188, !dbg !6236

lor.lhs.false188:                                 ; preds = %lor.lhs.false181
  %cmp193 = icmp eq i64 %bf.cast17828, 8, !dbg !6236
  br i1 %cmp193, label %land.lhs.true195, label %if.else204, !dbg !6237

land.lhs.true195:                                 ; preds = %lor.lhs.false188, %lor.lhs.false181, %if.end174
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6238
  %bf.load197 = load i64, i64* %44, align 8, !dbg !6238
  %bf.cast19956 = and i64 %bf.load197, 65535, !dbg !6239
  %cmp200 = icmp eq i64 %bf.cast19956, 13, !dbg !6239
  br i1 %cmp200, label %if.then202, label %if.else204, !dbg !6240

if.then202:                                       ; preds = %land.lhs.true195
  %call203 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.175, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6241
  br label %if.end517, !dbg !6241

if.else204:                                       ; preds = %land.lhs.true195, %lor.lhs.false188
  %cmp209 = icmp eq i64 %bf.cast17828, 13, !dbg !6242
  br i1 %cmp209, label %land.lhs.true211, label %if.else220, !dbg !6243

land.lhs.true211:                                 ; preds = %if.else204
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6244
  %bf.load213 = load i64, i64* %45, align 8, !dbg !6244
  %bf.cast21555 = and i64 %bf.load213, 65535, !dbg !6245
  %cmp216 = icmp eq i64 %bf.cast21555, 9, !dbg !6245
  br i1 %cmp216, label %if.then218, label %if.else220, !dbg !6246

if.then218:                                       ; preds = %land.lhs.true211
  %call219 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.176, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6247
  br label %if.end517, !dbg !6247

if.else220:                                       ; preds = %land.lhs.true211, %if.else204
  %cmp225 = icmp eq i64 %bf.cast17828, 9, !dbg !6248
  br i1 %cmp225, label %land.lhs.true227, label %if.else250, !dbg !6249

land.lhs.true227:                                 ; preds = %if.else220
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6250
  %bf.load229 = load i64, i64* %46, align 8, !dbg !6250
  %bf.cast23152 = and i64 %bf.load229, 65535, !dbg !6250
  %cmp232 = icmp eq i64 %bf.cast23152, 6, !dbg !6250
  br i1 %cmp232, label %if.then248, label %lor.lhs.false234, !dbg !6250

lor.lhs.false234:                                 ; preds = %land.lhs.true227
  %cmp239 = icmp eq i64 %bf.cast23152, 7, !dbg !6250
  br i1 %cmp239, label %if.then248, label %lor.lhs.false241, !dbg !6250

lor.lhs.false241:                                 ; preds = %lor.lhs.false234
  %cmp246 = icmp eq i64 %bf.cast23152, 8, !dbg !6250
  br i1 %cmp246, label %if.then248, label %if.else250, !dbg !6251

if.then248:                                       ; preds = %lor.lhs.false241, %lor.lhs.false234, %land.lhs.true227
  %call249 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.177, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6252
  br label %if.end517, !dbg !6252

if.else250:                                       ; preds = %lor.lhs.false241, %if.else220
  br i1 %cmp209, label %land.lhs.true257, label %if.else280, !dbg !6253

land.lhs.true257:                                 ; preds = %if.else250
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6254
  %bf.load259 = load i64, i64* %47, align 8, !dbg !6254
  %bf.cast26149 = and i64 %bf.load259, 65535, !dbg !6254
  %cmp262 = icmp eq i64 %bf.cast26149, 6, !dbg !6254
  br i1 %cmp262, label %if.then278, label %lor.lhs.false264, !dbg !6254

lor.lhs.false264:                                 ; preds = %land.lhs.true257
  %cmp269 = icmp eq i64 %bf.cast26149, 7, !dbg !6254
  br i1 %cmp269, label %if.then278, label %lor.lhs.false271, !dbg !6254

lor.lhs.false271:                                 ; preds = %lor.lhs.false264
  %cmp276 = icmp eq i64 %bf.cast26149, 8, !dbg !6254
  br i1 %cmp276, label %if.then278, label %if.else280, !dbg !6255

if.then278:                                       ; preds = %lor.lhs.false271, %lor.lhs.false264, %land.lhs.true257
  %call279 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.178, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6256
  br label %if.end517, !dbg !6256

if.else280:                                       ; preds = %lor.lhs.false271, %if.else250
  br i1 %cmp225, label %land.lhs.true287, label %if.else296, !dbg !6257

land.lhs.true287:                                 ; preds = %if.else280
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6258
  %bf.load289 = load i64, i64* %48, align 8, !dbg !6258
  %bf.cast29148 = and i64 %bf.load289, 65535, !dbg !6259
  %cmp292 = icmp eq i64 %bf.cast29148, 13, !dbg !6259
  br i1 %cmp292, label %if.then294, label %if.else296, !dbg !6260

if.then294:                                       ; preds = %land.lhs.true287
  %call295 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.179, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6261
  br label %if.end517, !dbg !6261

if.else296:                                       ; preds = %land.lhs.true287, %if.else280
  br i1 %cmp225, label %land.lhs.true303, label %if.else369, !dbg !6262

land.lhs.true303:                                 ; preds = %if.else296
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6263
  %bf.load305 = load i64, i64* %49, align 8, !dbg !6263
  %bf.cast30747 = and i64 %bf.load305, 65535, !dbg !6264
  %cmp308 = icmp eq i64 %bf.cast30747, 9, !dbg !6264
  br i1 %cmp308, label %if.then310, label %if.else369, !dbg !6265

if.then310:                                       ; preds = %land.lhs.true303
  %50 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31) to %struct.tree_type**), align 8, !dbg !6266
  %precision312 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %50, i64 0, i32 6, !dbg !6266
  %bf.load313 = load i32, i32* %precision312, align 4, !dbg !6266
  %bf.clear314 = and i32 %bf.load313, 1023, !dbg !6266
  %cmp315 = icmp eq i32 %bf.clear144, %bf.clear314, !dbg !6269
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 49), align 8, !dbg !6270
  %cmp318 = icmp ne %union.tree_node* %cond43, %51, !dbg !6271
  %or.cond5 = and i1 %cmp315, %cmp318, !dbg !6272
  br i1 %or.cond5, label %if.then320, label %if.else322, !dbg !6272

if.then320:                                       ; preds = %if.then310
  %call321 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.180, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6273
  br label %if.end517, !dbg !6273

if.else322:                                       ; preds = %if.then310
  %cmp323 = icmp eq %union.tree_node* %cond43, %17, !dbg !6274
  br i1 %cmp323, label %if.end517, label %land.lhs.true325, !dbg !6276

land.lhs.true325:                                 ; preds = %if.else322
  %cmp326 = icmp eq %union.tree_node* %cond43, %51, !dbg !6277
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 16, !dbg !6278
  %cmp329 = icmp eq %union.tree_node* %cond43, %52, !dbg !6279
  %or.cond6 = or i1 %cmp326, %cmp329, !dbg !6280
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 51), align 8, !dbg !6281
  %cmp332 = icmp eq %union.tree_node* %cond43, %53, !dbg !6282
  %or.cond7 = or i1 %or.cond6, %cmp332, !dbg !6280
  %cmp335 = icmp eq %union.tree_node* %17, %51, !dbg !6283
  %or.cond8 = or i1 %or.cond7, %cmp335, !dbg !6280
  %cmp338 = icmp eq %union.tree_node* %17, %52, !dbg !6284
  %or.cond9 = or i1 %or.cond8, %cmp338, !dbg !6280
  %cmp341 = icmp eq %union.tree_node* %17, %53, !dbg !6285
  %or.cond10 = or i1 %or.cond9, %cmp341, !dbg !6280
  br i1 %or.cond10, label %land.lhs.true343, label %if.end517, !dbg !6280

land.lhs.true343:                                 ; preds = %land.lhs.true325
  %type344 = bitcast %union.tree_node* %17 to %struct.tree_type*, !dbg !6286
  %precision345 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type344, i64 0, i32 6, !dbg !6286
  %bf.load346 = load i32, i32* %precision345, align 4, !dbg !6286
  %bf.clear347 = and i32 %bf.load346, 1023, !dbg !6286
  %cmp348 = icmp ugt i32 %bf.clear144, %bf.clear347, !dbg !6287
  br i1 %cmp348, label %lor.lhs.false350, label %if.then365, !dbg !6288

lor.lhs.false350:                                 ; preds = %land.lhs.true343
  %cmp354 = icmp ne %union.tree_node* %17, %52, !dbg !6289
  %or.cond11 = and i1 %cmp332, %cmp354, !dbg !6290
  %cmp357 = icmp ne %union.tree_node* %17, %51, !dbg !6291
  %or.cond12 = and i1 %or.cond11, %cmp357, !dbg !6290
  br i1 %or.cond12, label %if.then365, label %lor.lhs.false359, !dbg !6290

lor.lhs.false359:                                 ; preds = %lor.lhs.false350
  %or.cond13 = and i1 %cmp329, %cmp357, !dbg !6292
  br i1 %or.cond13, label %if.then365, label %if.end517, !dbg !6292

if.then365:                                       ; preds = %land.lhs.true343, %lor.lhs.false359, %lor.lhs.false350
  %call366 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.181, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0, %union.tree_node* nonnull %cond43, %union.tree_node* %17) #6, !dbg !6293
  br label %if.end517, !dbg !6293

if.else369:                                       ; preds = %land.lhs.true303, %if.else296
  %54 = load i32, i32* @warn_traditional_conversion, align 4, !dbg !6294
  %tobool370 = icmp eq i32 %54, 0, !dbg !6294
  br i1 %tobool370, label %if.end517, label %land.lhs.true371, !dbg !6295

land.lhs.true371:                                 ; preds = %if.else369
  br i1 %cmp179, label %land.lhs.true392, label %lor.lhs.false378, !dbg !6296

lor.lhs.false378:                                 ; preds = %land.lhs.true371
  %cmp383 = icmp eq i64 %bf.cast17828, 7, !dbg !6296
  br i1 %cmp383, label %land.lhs.true392, label %lor.lhs.false385, !dbg !6296

lor.lhs.false385:                                 ; preds = %lor.lhs.false378
  %cmp390 = icmp eq i64 %bf.cast17828, 8, !dbg !6296
  br i1 %cmp390, label %land.lhs.true392, label %if.end517, !dbg !6297

land.lhs.true392:                                 ; preds = %lor.lhs.false385, %lor.lhs.false378, %land.lhs.true371
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6298
  %bf.load394 = load i64, i64* %55, align 8, !dbg !6298
  %bf.cast39639 = and i64 %bf.load394, 65535, !dbg !6298
  %cmp397 = icmp eq i64 %bf.cast39639, 6, !dbg !6298
  br i1 %cmp397, label %if.then413, label %lor.lhs.false399, !dbg !6298

lor.lhs.false399:                                 ; preds = %land.lhs.true392
  %cmp404 = icmp eq i64 %bf.cast39639, 7, !dbg !6298
  br i1 %cmp404, label %if.then413, label %lor.lhs.false406, !dbg !6298

lor.lhs.false406:                                 ; preds = %lor.lhs.false399
  %cmp411 = icmp eq i64 %bf.cast39639, 8, !dbg !6298
  br i1 %cmp411, label %if.then413, label %if.end517, !dbg !6299

if.then413:                                       ; preds = %lor.lhs.false406, %lor.lhs.false399, %land.lhs.true392
  %56 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6300
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call414 = call %union.tree_node* @default_conversion(%union.tree_node* %56) #7, !dbg !6301
  call void @llvm.dbg.value(metadata %union.tree_node* %call414, metadata !6124, metadata !DIExpression()), !dbg !6302
  %type417 = getelementptr inbounds %union.tree_node, %union.tree_node* %call414, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6303
  %57 = load %union.tree_node*, %union.tree_node** %type417, align 8, !dbg !6303
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !6133, metadata !DIExpression()), !dbg !6302
  %bf.load419 = load i64, i64* %42, align 8, !dbg !6304
  %bf.cast42142 = and i64 %bf.load419, 65535, !dbg !6306
  %cmp422 = icmp eq i64 %bf.cast42142, 6, !dbg !6306
  br i1 %cmp422, label %land.lhs.true424, label %if.else431, !dbg !6307

land.lhs.true424:                                 ; preds = %if.then413
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 16, !dbg !6308
  %58 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !6308
  %59 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6309
  %60 = load %union.tree_node*, %union.tree_node** %59, align 8, !dbg !6309
  %cmp428 = icmp eq %union.tree_node* %58, %60, !dbg !6310
  br i1 %cmp428, label %if.end517, label %if.else431, !dbg !6311

if.else431:                                       ; preds = %land.lhs.true424, %if.then413
  %type432 = bitcast %union.tree_node* %57 to %struct.tree_type*, !dbg !6312
  %precision433 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type432, i64 0, i32 6, !dbg !6312
  %bf.load434 = load i32, i32* %precision433, align 4, !dbg !6312
  %bf.clear435 = and i32 %bf.load434, 1023, !dbg !6312
  %cmp436 = icmp eq i32 %bf.clear144, %bf.clear435, !dbg !6314
  br i1 %cmp436, label %if.else440, label %if.then438, !dbg !6315

if.then438:                                       ; preds = %if.else431
  %call439 = call zeroext i8 (i32, i8*, ...) @warning(i32 203, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.182, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6316
  br label %if.end517, !dbg !6316

if.else440:                                       ; preds = %if.else431
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6317
  %bf.load447 = load i64, i64* %61, align 8, !dbg !6317
  %bf.lshr44360 = xor i64 %bf.load419, %bf.load447, !dbg !6319
  %62 = and i64 %bf.lshr44360, 2097152, !dbg !6319
  %cmp451 = icmp eq i64 %62, 0, !dbg !6319
  br i1 %cmp451, label %if.end517, label %if.else454, !dbg !6320

if.else454:                                       ; preds = %if.else440
  br i1 %cmp422, label %if.end517, label %if.else462, !dbg !6321

if.else462:                                       ; preds = %if.else454
  %63 = load i64*, i64** %10, align 8, !dbg !6322
  %bf.load464 = load i64, i64* %63, align 8, !dbg !6322
  %bf.cast46644 = and i64 %bf.load464, 65535, !dbg !6325
  %cmp467 = icmp eq i64 %bf.cast46644, 23, !dbg !6325
  br i1 %cmp467, label %land.lhs.true469, label %if.else473, !dbg !6326

land.lhs.true469:                                 ; preds = %if.else462
  %64 = bitcast i64* %63 to %union.tree_node*, !dbg !6326
  call void @llvm.dbg.value(metadata %union.tree_node* %64, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call470 = call i32 @int_fits_type_p(%union.tree_node* %64, %union.tree_node* nonnull %cond43) #6, !dbg !6327
  %tobool471 = icmp eq i32 %call470, 0, !dbg !6327
  br i1 %tobool471, label %if.else473, label %if.end517, !dbg !6328

if.else473:                                       ; preds = %land.lhs.true469, %if.else462
  %type474 = bitcast %union.tree_node* %17 to %struct.tree_type*, !dbg !6329
  %precision475 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type474, i64 0, i32 6, !dbg !6329
  %bf.load476 = load i32, i32* %precision475, align 4, !dbg !6329
  %bf.clear477 = and i32 %bf.load476, 1023, !dbg !6329
  %bf.load480 = load i32, i32* %precision, align 4, !dbg !6331
  %bf.clear481 = and i32 %bf.load480, 1023, !dbg !6331
  %cmp482 = icmp ult i32 %bf.clear477, %bf.clear481, !dbg !6332
  br i1 %cmp482, label %land.lhs.true484, label %if.else492, !dbg !6333

land.lhs.true484:                                 ; preds = %if.else473
  %bf.load486 = load i64, i64* %55, align 8, !dbg !6334
  %bf.cast48946 = and i64 %bf.load486, 2097152, !dbg !6334
  %tobool490 = icmp eq i64 %bf.cast48946, 0, !dbg !6334
  br i1 %tobool490, label %if.else492, label %if.end517, !dbg !6335

if.else492:                                       ; preds = %land.lhs.true484, %if.else473
  %bf.load494 = load i64, i64* %42, align 8, !dbg !6336
  %bf.cast49745 = and i64 %bf.load494, 2097152, !dbg !6336
  %tobool498 = icmp eq i64 %bf.cast49745, 0, !dbg !6336
  br i1 %tobool498, label %if.else501, label %if.then499, !dbg !6338

if.then499:                                       ; preds = %if.else492
  %call500 = call zeroext i8 (i32, i8*, ...) @warning(i32 203, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.183, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6339
  br label %if.end517, !dbg !6339

if.else501:                                       ; preds = %if.else492
  %call502 = call zeroext i8 (i32, i8*, ...) @warning(i32 203, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.184, i64 0, i64 0), i32 %argnum.0, %union.tree_node* %rname.0) #6, !dbg !6340
  br label %if.end517

if.end517:                                        ; preds = %if.else322, %land.lhs.true469, %land.lhs.true484, %if.else369, %if.else, %if.then202, %if.then248, %if.then294, %lor.lhs.false385, %lor.lhs.false406, %if.then438, %if.else454, %if.else501, %if.then499, %if.else440, %land.lhs.true424, %if.then320, %land.lhs.true325, %if.then365, %lor.lhs.false359, %if.then278, %if.then218
  %tobool518 = icmp eq i8 %excess_precision.0, 0, !dbg !6341
  br i1 %tobool518, label %if.end521, label %if.then519, !dbg !6343

if.then519:                                       ; preds = %if.end517
  %65 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6344
  call void @llvm.dbg.value(metadata %union.tree_node* %65, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call520 = call %union.tree_node* @build1_stat(i32 190, %union.tree_node* %17, %union.tree_node* %65) #6, !dbg !6344
  call void @llvm.dbg.value(metadata %union.tree_node* %call520, metadata !6099, metadata !DIExpression()), !dbg !6134
  store %union.tree_node* %call520, %union.tree_node** %val, align 8, !dbg !6345
  br label %if.end521, !dbg !6346

if.end521:                                        ; preds = %if.end517, %if.then519
  br i1 %cmp522, label %cond.end533, label %cond.true527, !dbg !6347

cond.true527:                                     ; preds = %if.end521
  %call532 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* nonnull %base528, i32 %parmnum.0) #7, !dbg !6348
  br label %cond.end533, !dbg !6347

cond.end533:                                      ; preds = %if.end521, %cond.true527
  %cond534 = phi %union.tree_node* [ %call532, %cond.true527 ], [ null, %if.end521 ], !dbg !6347
  call void @llvm.dbg.value(metadata %union.tree_node* %cond534, metadata !6116, metadata !DIExpression()), !dbg !6169
  %66 = load i32, i32* @input_location, align 4, !dbg !6349
  %67 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6350
  call void @llvm.dbg.value(metadata %union.tree_node* %67, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call536 = call fastcc %union.tree_node* @convert_for_assignment(i32 %66, %union.tree_node* nonnull %cond43, %union.tree_node* %67, %union.tree_node* %cond534, i32 0, i8 zeroext %call67, %union.tree_node* %fundecl, %union.tree_node* %function.addr.0, i32 %add) #7, !dbg !6351
  call void @llvm.dbg.value(metadata %union.tree_node* %call536, metadata !6115, metadata !DIExpression()), !dbg !6162
  %68 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 1), align 8, !dbg !6352
  br i1 %tobool, label %cond.end542, label %cond.true538, !dbg !6353

cond.true538:                                     ; preds = %cond.end533
  %69 = load %union.tree_node*, %union.tree_node** %type540, align 8, !dbg !6354
  br label %cond.end542, !dbg !6353

cond.end542:                                      ; preds = %cond.end533, %cond.true538
  %cond543 = phi %union.tree_node* [ %69, %cond.true538 ], [ null, %cond.end533 ], !dbg !6353
  %call544 = call zeroext i8 %68(%union.tree_node* %cond543) #6, !dbg !6355
  %tobool546 = icmp eq i8 %call544, 0, !dbg !6355
  br i1 %tobool546, label %if.end643, label %land.lhs.true547, !dbg !6356

land.lhs.true547:                                 ; preds = %cond.end542
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6357
  %bf.load549 = load i64, i64* %70, align 8, !dbg !6357
  %bf.cast55122 = and i64 %bf.load549, 65535, !dbg !6357
  %cmp552 = icmp eq i64 %bf.cast55122, 6, !dbg !6357
  br i1 %cmp552, label %land.lhs.true568, label %lor.lhs.false554, !dbg !6357

lor.lhs.false554:                                 ; preds = %land.lhs.true547
  %cmp559 = icmp eq i64 %bf.cast55122, 7, !dbg !6357
  br i1 %cmp559, label %land.lhs.true568, label %lor.lhs.false561, !dbg !6357

lor.lhs.false561:                                 ; preds = %lor.lhs.false554
  %cmp566 = icmp eq i64 %bf.cast55122, 8, !dbg !6357
  br i1 %cmp566, label %land.lhs.true568, label %if.end643, !dbg !6358

land.lhs.true568:                                 ; preds = %lor.lhs.false561, %lor.lhs.false554, %land.lhs.true547
  %precision570 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !6359
  %bf.load571 = load i32, i32* %precision570, align 4, !dbg !6359
  %bf.clear572 = and i32 %bf.load571, 1023, !dbg !6359
  %71 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5) to %struct.tree_type**), align 8, !dbg !6360
  %precision574 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %71, i64 0, i32 6, !dbg !6360
  %bf.load575 = load i32, i32* %precision574, align 4, !dbg !6360
  %bf.clear576 = and i32 %bf.load575, 1023, !dbg !6360
  %cmp577 = icmp ult i32 %bf.clear572, %bf.clear576, !dbg !6361
  br i1 %cmp577, label %if.then579, label %if.end643, !dbg !6362

if.then579:                                       ; preds = %land.lhs.true568
  %call580 = call %union.tree_node* @default_conversion(%union.tree_node* %call536) #7, !dbg !6363
  call void @llvm.dbg.value(metadata %union.tree_node* %call580, metadata !6115, metadata !DIExpression()), !dbg !6162
  br label %if.end643, !dbg !6364

if.else583:                                       ; preds = %while.end
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6365
  %bf.load585 = load i64, i64* %72, align 8, !dbg !6365
  %bf.cast58720 = and i64 %bf.load585, 65535, !dbg !6367
  %cmp588 = icmp eq i64 %bf.cast58720, 9, !dbg !6367
  br i1 %cmp588, label %land.lhs.true590, label %if.else627, !dbg !6368

land.lhs.true590:                                 ; preds = %if.else583
  %type591 = bitcast %union.tree_node* %17 to %struct.tree_type*, !dbg !6369
  %precision592 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type591, i64 0, i32 6, !dbg !6369
  %bf.load593 = load i32, i32* %precision592, align 4, !dbg !6369
  %bf.clear594 = and i32 %bf.load593, 1023, !dbg !6369
  %73 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32) to %struct.tree_type**), align 16, !dbg !6370
  %precision596 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %73, i64 0, i32 6, !dbg !6370
  %bf.load597 = load i32, i32* %precision596, align 4, !dbg !6370
  %bf.clear598 = and i32 %bf.load597, 1023, !dbg !6370
  %cmp599 = icmp ult i32 %bf.clear594, %bf.clear598, !dbg !6371
  %74 = bitcast %struct.tree_type* %73 to %union.tree_node*, !dbg !6372
  br i1 %cmp599, label %land.lhs.true601, label %if.else627, !dbg !6372

land.lhs.true601:                                 ; preds = %land.lhs.true590
  br i1 false, label %cond.true608, label %cond.false610, !dbg !6373

cond.true608:                                     ; preds = %land.lhs.true601
  br label %cond.end615, !dbg !6373

cond.false610:                                    ; preds = %land.lhs.true601
  %bf.lshr613 = lshr i32 %bf.load593, 16, !dbg !6373
  %bf.clear614 = and i32 %bf.lshr613, 255, !dbg !6373
  br label %cond.end615, !dbg !6373

cond.end615:                                      ; preds = %cond.false610, %cond.true608
  %cond616 = phi i32 [ undef, %cond.true608 ], [ %bf.clear614, %cond.false610 ], !dbg !6373
  %idxprom = zext i32 %cond616 to i64, !dbg !6373
  %arrayidx617 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6373
  %75 = load i8, i8* %arrayidx617, align 1, !dbg !6373
  %cmp619 = icmp eq i8 %75, 9, !dbg !6373
  br i1 %cmp619, label %if.else627, label %if.then621, !dbg !6374

if.then621:                                       ; preds = %cond.end615
  br i1 %tobool15, label %if.else624, label %if.then623, !dbg !6375

if.then623:                                       ; preds = %if.then621
  call void @llvm.dbg.value(metadata %union.tree_node* %call126, metadata !6099, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node* %call126, metadata !6115, metadata !DIExpression()), !dbg !6162
  br label %if.end643, !dbg !6377

if.else624:                                       ; preds = %if.then621
  call void @llvm.dbg.value(metadata %union.tree_node* %call126, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call625 = call %union.tree_node* @convert(%union.tree_node* %74, %union.tree_node* %call126) #6, !dbg !6379
  call void @llvm.dbg.value(metadata %union.tree_node* %call625, metadata !6115, metadata !DIExpression()), !dbg !6162
  br label %if.end643

if.else627:                                       ; preds = %cond.end615, %land.lhs.true590, %if.else583
  %tobool629 = icmp eq i8 %excess_precision.0, 0, !dbg !6380
  %or.cond14 = or i1 %tobool629, %tobool76, !dbg !6382
  br i1 %or.cond14, label %if.else634, label %if.then632, !dbg !6382

if.then632:                                       ; preds = %if.else627
  call void @llvm.dbg.value(metadata %union.tree_node* %call126, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call633 = call %union.tree_node* @convert(%union.tree_node* %17, %union.tree_node* %call126) #6, !dbg !6383
  call void @llvm.dbg.value(metadata %union.tree_node* %call633, metadata !6115, metadata !DIExpression()), !dbg !6162
  br label %if.end643, !dbg !6384

if.else634:                                       ; preds = %if.else627
  %76 = load i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 14), align 8, !dbg !6385
  call void @llvm.dbg.value(metadata %union.tree_node* %call126, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call635 = call i8* %76(%union.tree_node* %typelist, %union.tree_node* %fundecl, %union.tree_node* %call126) #6, !dbg !6387
  call void @llvm.dbg.value(metadata i8* %call635, metadata !6112, metadata !DIExpression()), !dbg !6162
  %tobool636 = icmp eq i8* %call635, null, !dbg !6388
  br i1 %tobool636, label %if.else638, label %if.then637, !dbg !6389

if.then637:                                       ; preds = %if.else634
  call void (i8*, ...) @error(i8* nonnull %call635) #6, !dbg !6390
  br label %cleanup, !dbg !6392

if.else638:                                       ; preds = %if.else634
  %77 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6393
  call void @llvm.dbg.value(metadata %union.tree_node* %77, metadata !6099, metadata !DIExpression()), !dbg !6134
  %call639 = call %union.tree_node* @default_conversion(%union.tree_node* %77) #7, !dbg !6394
  call void @llvm.dbg.value(metadata %union.tree_node* %call639, metadata !6115, metadata !DIExpression()), !dbg !6162
  br label %if.end643

if.end643:                                        ; preds = %cond.end542, %if.else624, %if.then623, %if.else638, %if.then632, %if.then136, %if.then579, %land.lhs.true568, %lor.lhs.false561
  %parmval.5 = phi %union.tree_node* [ %37, %if.then136 ], [ %call580, %if.then579 ], [ %call536, %land.lhs.true568 ], [ %call536, %lor.lhs.false561 ], [ %call536, %cond.end542 ], [ %call126, %if.then623 ], [ %call625, %if.else624 ], [ %call639, %if.else638 ], [ %call633, %if.then632 ], !dbg !6395
  call void @llvm.dbg.value(metadata %union.tree_node* %parmval.5, metadata !6115, metadata !DIExpression()), !dbg !6162
  %call650 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base35, i32 %parmnum.0, %union.tree_node* %parmval.5) #7, !dbg !6396
  %78 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6397
  %cmp651 = icmp eq %union.tree_node* %parmval.5, %78, !dbg !6399
  %spec.select = select i1 %cmp651, i8 1, i8 %error_args.0, !dbg !6400
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !6101, metadata !DIExpression()), !dbg !6134
  br i1 %tobool39, label %cleanup, label %if.then656, !dbg !6401

if.then656:                                       ; preds = %if.end643
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %typetail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6402
  %79 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6402
  call void @llvm.dbg.value(metadata %union.tree_node* %79, metadata !6098, metadata !DIExpression()), !dbg !6134
  br label %cleanup, !dbg !6404

cleanup:                                          ; preds = %land.lhs.true50, %if.then48, %if.end643, %if.then656, %if.then58, %if.then637
  %error_args.2 = phi i8 [ %error_args.0, %if.then637 ], [ %error_args.0, %if.then58 ], [ %error_args.0, %land.lhs.true50 ], [ %error_args.0, %if.then48 ], [ %spec.select, %if.then656 ], [ %spec.select, %if.end643 ], !dbg !6134
  %typetail.2 = phi %union.tree_node* [ %typetail.0, %if.then637 ], [ %typetail.0, %if.then58 ], [ %typetail.0, %land.lhs.true50 ], [ %typetail.0, %if.then48 ], [ %79, %if.then656 ], [ null, %if.end643 ], !dbg !6178
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then637 ], [ false, %if.then58 ], [ false, %land.lhs.true50 ], [ false, %if.then48 ], [ true, %if.then656 ], [ true, %if.end643 ]
  %retval.1 = phi i32 [ -1, %if.then637 ], [ %parmnum.0, %if.then58 ], [ %parmnum.0, %land.lhs.true50 ], [ %parmnum.0, %if.then48 ], [ %retval.0, %if.then656 ], [ %retval.0, %if.end643 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %typetail.2, metadata !6098, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 %error_args.2, metadata !6101, metadata !DIExpression()), !dbg !6134
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup707.loopexit

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata i32 %add, metadata !6100, metadata !DIExpression()), !dbg !6134
  br label %for.cond, !dbg !6405, !llvm.loop !6406

for.end:                                          ; preds = %for.cond
  %error_args.0.lcssa = phi i8 [ %error_args.0, %for.cond ], !dbg !6177
  %parmnum.0.lcssa = phi i32 [ %parmnum.0, %for.cond ], !dbg !6178
  %typetail.0.lcssa = phi %union.tree_node* [ %typetail.0, %for.cond ], !dbg !6179
  call void @llvm.dbg.value(metadata i8 %error_args.0.lcssa, metadata !6101, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %parmnum.0.lcssa, metadata !6100, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node* %typetail.0.lcssa, metadata !6098, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 %error_args.0.lcssa, metadata !6101, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %parmnum.0.lcssa, metadata !6100, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node* %typetail.0.lcssa, metadata !6098, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 %error_args.0.lcssa, metadata !6101, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %parmnum.0.lcssa, metadata !6100, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %union.tree_node* %typetail.0.lcssa, metadata !6098, metadata !DIExpression()), !dbg !6134
  %call672 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base35) #7, !dbg !6408
  %cmp673 = icmp eq i32 %parmnum.0.lcssa, %call672, !dbg !6408
  br i1 %cmp673, label %cond.end677, label %cond.true675, !dbg !6408

cond.true675:                                     ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3043, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6408
  br label %cond.end677, !dbg !6408

cond.end677:                                      ; preds = %for.end, %cond.true675
  %cmp679 = icmp eq %union.tree_node* %typetail.0.lcssa, null, !dbg !6409
  br i1 %cmp679, label %if.end700, label %land.lhs.true681, !dbg !6411

land.lhs.true681:                                 ; preds = %cond.end677
  %80 = getelementptr inbounds %union.tree_node, %union.tree_node* %typetail.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6412
  %81 = load %union.tree_node*, %union.tree_node** %80, align 8, !dbg !6412
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6413
  %cmp684 = icmp eq %union.tree_node* %81, %82, !dbg !6414
  br i1 %cmp684, label %if.end700, label %if.then686, !dbg !6415

if.then686:                                       ; preds = %land.lhs.true681
  %83 = load i32, i32* @input_location, align 4, !dbg !6416
  call void (i32, i8*, ...) @error_at(i32 %83, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.185, i64 0, i64 0), %union.tree_node* %function.addr.0) #6, !dbg !6418
  br i1 %tobool, label %cleanup707, label %land.lhs.true688, !dbg !6419

land.lhs.true688:                                 ; preds = %if.then686
  %bf.load691 = load i32, i32* %built_in_class52, align 8, !dbg !6421
  %bf.clear693 = and i32 %bf.load691, 6144, !dbg !6421
  %cmp694 = icmp eq i32 %bf.clear693, 0, !dbg !6421
  br i1 %cmp694, label %if.then696, label %cleanup707, !dbg !6422

if.then696:                                       ; preds = %land.lhs.true688
  %84 = load i32, i32* %locus, align 8, !dbg !6423
  call void (i32, i8*, ...) @inform(i32 %84, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i64 0, i64 0)) #6, !dbg !6424
  br label %cleanup707, !dbg !6424

if.end700:                                        ; preds = %land.lhs.true681, %cond.end677
  %tobool702 = icmp eq i8 %error_args.0.lcssa, 0, !dbg !6425
  %.parmnum.0 = select i1 %tobool702, i32 %parmnum.0.lcssa, i32 -1, !dbg !6425
  br label %cleanup707, !dbg !6426

cleanup707.loopexit:                              ; preds = %cleanup
  %retval.1.lcssa = phi i32 [ %retval.1, %cleanup ]
  br label %cleanup707, !dbg !6427

cleanup707:                                       ; preds = %cleanup707.loopexit, %land.lhs.true688, %if.then686, %if.then696, %if.end700
  %retval.2 = phi i32 [ %.parmnum.0, %if.end700 ], [ -1, %if.then696 ], [ -1, %land.lhs.true688 ], [ -1, %if.then686 ], [ %retval.1.lcssa, %cleanup707.loopexit ], !dbg !6134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6427
  ret i32 %retval.2, !dbg !6427
}

declare dso_local %union.tree_node* @build_compound_literal(i32, %union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_constructor(%union.tree_node*, %struct.VEC_constructor_elt_gc*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_address(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !6428 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6432, metadata !DIExpression()), !dbg !6433
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6434
  %arraydecay = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 0, !dbg !6434
  %cond = select i1 %tobool, %union.tree_node** null, %union.tree_node** %arraydecay, !dbg !6434
  ret %union.tree_node** %cond, !dbg !6434
}

declare dso_local zeroext i8 @check_builtin_function_arguments(%union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

declare dso_local void @check_function_arguments(%union.tree_node*, i32, %union.tree_node**, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @strncmp(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build_call_array_initializer_loc(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build_call_array_loc(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_call_array_loc(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @parser_build_unary_op(%struct.c_expr* noalias sret %agg.result, i32 %loc, i32 %code, %struct.c_expr* byval(%struct.c_expr) align 8 %arg) local_unnamed_addr #5 !dbg !6435 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6439, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i32 %code, metadata !6440, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.declare(metadata %struct.c_expr* %arg, metadata !6441, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !6442, metadata !DIExpression()), !dbg !6445
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %arg, i64 0, i32 0, !dbg !6446
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !6446
  %call = tail call %union.tree_node* @build_unary_op(i32 %loc, i32 %code, %union.tree_node* %0, i32 0) #7, !dbg !6447
  %value1 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 0, !dbg !6448
  store %union.tree_node* %call, %union.tree_node** %value1, align 8, !dbg !6449
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !6450
  store i32 %code, i32* %original_code, align 8, !dbg !6451
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !6452
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !6453
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6454
  %bf.load = load i64, i64* %.cast, align 8, !dbg !6454
  %bf.cast = and i64 %bf.load, 65535, !dbg !6454
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6454
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6454
  %cmp = icmp eq i32 %1, 1, !dbg !6454
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6454
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6454

land.lhs.true:                                    ; preds = %entry
  %bf.cast71 = and i64 %bf.load, 134217728, !dbg !6454
  %tobool = icmp eq i64 %bf.cast71, 0, !dbg !6454
  br i1 %tobool, label %if.end, label %land.lhs.true8, !dbg !6456

land.lhs.true8:                                   ; preds = %land.lhs.true
  %bf.load11 = load i64, i64* %2, align 8, !dbg !6457
  %bf.cast13 = and i64 %bf.load11, 65535, !dbg !6457
  %arrayidx15 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast13, !dbg !6457
  %3 = load i32, i32* %arrayidx15, align 4, !dbg !6457
  %cmp16 = icmp eq i32 %3, 1, !dbg !6457
  br i1 %cmp16, label %land.lhs.true17, label %if.then, !dbg !6457

land.lhs.true17:                                  ; preds = %land.lhs.true8
  %bf.cast232 = and i64 %bf.load11, 134217728, !dbg !6457
  %tobool24 = icmp eq i64 %bf.cast232, 0, !dbg !6457
  br i1 %tobool24, label %if.then, label %if.end, !dbg !6458

if.then:                                          ; preds = %land.lhs.true17, %land.lhs.true8
  tail call void @overflow_warning(i32 %loc, %union.tree_node* %call) #6, !dbg !6459
  br label %if.end, !dbg !6459

if.end:                                           ; preds = %land.lhs.true17, %land.lhs.true, %if.then, %entry
  ret void, !dbg !6460
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_unary_op(i32 %location, i32 %code, %union.tree_node* %xarg, i32 %flag) local_unnamed_addr #5 !dbg !6461 {
entry:
  call void @llvm.dbg.value(metadata i32 %location, metadata !6465, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i32 %code, metadata !6466, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %xarg, metadata !6467, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i32 %flag, metadata !6468, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %xarg, metadata !6469, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6470, metadata !DIExpression()), !dbg !6499
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6500
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6473, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6474, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i32 %flag, metadata !6475, metadata !DIExpression()), !dbg !6499
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %xarg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6501
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !6501
  %2 = load i64*, i64** %1, align 8, !dbg !6501
  %bf.load = load i64, i64* %2, align 8, !dbg !6501
  %bf.cast9 = and i64 %bf.load, 65535, !dbg !6501
  %cmp = icmp eq i64 %bf.cast9, 6, !dbg !6501
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !6501

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast9, 7, !dbg !6501
  br i1 %cmp7, label %land.rhs, label %lor.lhs.false8, !dbg !6501

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp15 = icmp eq i64 %bf.cast9, 8, !dbg !6501
  br i1 %cmp15, label %land.rhs, label %land.end31, !dbg !6501

land.rhs:                                         ; preds = %lor.lhs.false8, %lor.lhs.false, %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %xarg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6501
  %bf.load17 = load i64, i64* %3, align 8, !dbg !6501
  %bf.cast1963 = and i64 %bf.load17, 65535, !dbg !6501
  %cmp20 = icmp eq i64 %bf.cast1963, 23, !dbg !6501
  br i1 %cmp20, label %land.end31, label %lor.rhs, !dbg !6501

lor.rhs:                                          ; preds = %land.rhs
  %cmp25 = icmp eq i64 %bf.cast1963, 189, !dbg !6501
  br i1 %cmp25, label %land.rhs26, label %land.end31, !dbg !6501

land.rhs26:                                       ; preds = %lor.rhs
  %bf.cast3065 = and i64 %bf.load17, 8589934592, !dbg !6501
  %tobool = icmp ne i64 %bf.cast3065, 0, !dbg !6501
  br label %land.end31

land.end31:                                       ; preds = %land.rhs, %land.rhs26, %lor.rhs, %lor.lhs.false8
  %4 = phi i1 [ false, %lor.lhs.false8 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %tobool, %land.rhs26 ], !dbg !6499
  call void @llvm.dbg.value(metadata i1 %4, metadata !6477, metadata !DIExpression()), !dbg !6499
  br i1 %4, label %if.then, label %if.end, !dbg !6502

if.then:                                          ; preds = %land.end31
  %call = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %xarg) #7, !dbg !6503
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %if.end, !dbg !6505

if.end:                                           ; preds = %if.then, %land.end31
  %arg.0 = phi %union.tree_node* [ %call, %if.then ], [ %xarg, %land.end31 ], !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !6469, metadata !DIExpression()), !dbg !6499
  %cmp33 = icmp eq i32 %code, 121, !dbg !6506
  br i1 %cmp33, label %if.end37, label %if.then35, !dbg !6508

if.then35:                                        ; preds = %if.end
  %call36 = tail call %union.tree_node* @require_complete_type(%union.tree_node* %arg.0) #7, !dbg !6509
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %if.end37, !dbg !6510

if.end37:                                         ; preds = %if.end, %if.then35
  %arg.1 = phi %union.tree_node* [ %call36, %if.then35 ], [ %arg.0, %if.end ], !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.1, metadata !6469, metadata !DIExpression()), !dbg !6499
  %type39 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6511
  %5 = bitcast %union.tree_node** %type39 to i64**, !dbg !6511
  %6 = load i64*, i64** %5, align 8, !dbg !6511
  %bf.load41 = load i64, i64* %6, align 8, !dbg !6511
  %7 = trunc i64 %bf.load41 to i32, !dbg !6511
  %bf.cast43 = and i32 %7, 65535, !dbg !6511
  call void @llvm.dbg.value(metadata i32 %bf.cast43, metadata !6471, metadata !DIExpression()), !dbg !6499
  %trunc = trunc i64 %bf.load41 to i16, !dbg !6512
  switch i16 %trunc, label %if.end54 [
    i16 0, label %if.then46
    i16 6, label %if.then53
    i16 7, label %if.then53
  ], !dbg !6512

if.then46:                                        ; preds = %if.end37
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6513
  br label %cleanup1071, !dbg !6515

if.then53:                                        ; preds = %if.end37, %if.end37
  call void @llvm.dbg.value(metadata i32 8, metadata !6471, metadata !DIExpression()), !dbg !6499
  br label %if.end54, !dbg !6516

if.end54:                                         ; preds = %if.end37, %if.then53
  %typecode.0 = phi i32 [ 8, %if.then53 ], [ %bf.cast43, %if.end37 ], !dbg !6499
  call void @llvm.dbg.value(metadata i32 %typecode.0, metadata !6471, metadata !DIExpression()), !dbg !6499
  %9 = load i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 90), align 8, !dbg !6518
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6520
  %call57 = tail call i8* %9(i32 %code, %union.tree_node* %10) #6, !dbg !6521
  call void @llvm.dbg.value(metadata i8* %call57, metadata !6476, metadata !DIExpression()), !dbg !6499
  %tobool58 = icmp eq i8* %call57, null, !dbg !6522
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !6523

if.then59:                                        ; preds = %if.end54
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* nonnull %call57) #6, !dbg !6524
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6526
  br label %cleanup1071, !dbg !6527

if.end60:                                         ; preds = %if.end54
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6528
  %bf.load62 = load i64, i64* %12, align 8, !dbg !6528
  %bf.cast6412 = and i64 %bf.load62, 65535, !dbg !6530
  %cmp65 = icmp eq i64 %bf.cast6412, 190, !dbg !6530
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !6531

if.then67:                                        ; preds = %if.end60
  %13 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !6532
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !6474, metadata !DIExpression()), !dbg !6499
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6534
  %14 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6534
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %if.end70, !dbg !6535

if.end70:                                         ; preds = %if.then67, %if.end60
  %eptype.0 = phi %union.tree_node* [ %13, %if.then67 ], [ null, %if.end60 ], !dbg !6499
  %arg.2 = phi %union.tree_node* [ %14, %if.then67 ], [ %arg.1, %if.end60 ], !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.2, metadata !6469, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %eptype.0, metadata !6474, metadata !DIExpression()), !dbg !6499
  switch i32 %code, label %sw.default [
    i32 113, label %sw.bb
    i32 79, label %sw.bb92
    i32 90, label %sw.bb114
    i32 82, label %sw.bb156
    i32 124, label %sw.bb169
    i32 96, label %sw.bb185
    i32 43, label %sw.bb266
    i32 44, label %sw.bb304
    i32 126, label %sw.bb346
    i32 128, label %sw.bb346
    i32 125, label %sw.bb346
    i32 127, label %sw.bb346
    i32 121, label %sw.bb723
  ], !dbg !6536

sw.bb:                                            ; preds = %if.end70
  %trunc62 = trunc i32 %typecode.0 to i16, !dbg !6537
  switch i16 %trunc62, label %if.then85 [
    i16 8, label %if.else
    i16 9, label %if.else
    i16 11, label %if.else
    i16 13, label %if.else
    i16 14, label %if.else
  ], !dbg !6537

if.then85:                                        ; preds = %sw.bb
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !6539
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6541
  br label %cleanup1071, !dbg !6542

if.else:                                          ; preds = %sw.bb, %sw.bb, %sw.bb, %sw.bb, %sw.bb
  %tobool86 = icmp eq i32 %flag, 0, !dbg !6543
  br i1 %tobool86, label %if.then87, label %if.end90, !dbg !6545

if.then87:                                        ; preds = %if.else
  %call88 = tail call %union.tree_node* @default_conversion(%union.tree_node* %arg.2) #7, !dbg !6546
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %if.end90, !dbg !6547

if.end90:                                         ; preds = %if.else, %if.then87
  %arg.3 = phi %union.tree_node* [ %arg.2, %if.else ], [ %call88, %if.then87 ], !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.3, metadata !6469, metadata !DIExpression()), !dbg !6499
  %call91 = tail call %union.tree_node* @non_lvalue_loc(i32 %location, %union.tree_node* %arg.3) #6, !dbg !6548
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %sw.epilog, !dbg !6549

sw.bb92:                                          ; preds = %if.end70
  %trunc61 = trunc i32 %typecode.0 to i16, !dbg !6550
  switch i16 %trunc61, label %if.then107 [
    i16 8, label %if.else108
    i16 9, label %if.else108
    i16 11, label %if.else108
    i16 13, label %if.else108
    i16 14, label %if.else108
  ], !dbg !6550

if.then107:                                       ; preds = %sw.bb92
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6552
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6554
  br label %cleanup1071, !dbg !6555

if.else108:                                       ; preds = %sw.bb92, %sw.bb92, %sw.bb92, %sw.bb92, %sw.bb92
  %tobool109 = icmp eq i32 %flag, 0, !dbg !6556
  br i1 %tobool109, label %if.then110, label %sw.epilog, !dbg !6558

if.then110:                                       ; preds = %if.else108
  %call111 = tail call %union.tree_node* @default_conversion(%union.tree_node* %arg.2) #7, !dbg !6559
  call void @llvm.dbg.value(metadata %union.tree_node* %call111, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %sw.epilog, !dbg !6560

sw.bb114:                                         ; preds = %if.end70
  %trunc58 = trunc i32 %typecode.0 to i16, !dbg !6561
  switch i16 %trunc58, label %if.else153 [
    i16 8, label %if.then139
    i16 14, label %land.lhs.true
    i16 13, label %if.then147
  ], !dbg !6561

land.lhs.true:                                    ; preds = %sw.bb114
  %type121 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6563
  %17 = bitcast %union.tree_node** %type121 to i64**, !dbg !6563
  %18 = load i64*, i64** %17, align 8, !dbg !6563
  %bf.load123 = load i64, i64* %18, align 8, !dbg !6563
  %bf.cast12559 = and i64 %bf.load123, 65535, !dbg !6563
  %cmp126 = icmp eq i64 %bf.cast12559, 14, !dbg !6563
  br i1 %cmp126, label %land.lhs.true128, label %if.then139, !dbg !6563

land.lhs.true128:                                 ; preds = %land.lhs.true
  %type132 = getelementptr inbounds i64, i64* %18, i64 2, !dbg !6563
  %19 = bitcast i64* %type132 to i64**, !dbg !6563
  %20 = load i64*, i64** %19, align 8, !dbg !6563
  %bf.load134 = load i64, i64* %20, align 8, !dbg !6563
  %bf.cast13660 = and i64 %bf.load134, 65535, !dbg !6563
  %cmp137 = icmp eq i64 %bf.cast13660, 9, !dbg !6563
  br i1 %cmp137, label %if.else144, label %if.then139, !dbg !6564

if.then139:                                       ; preds = %sw.bb114, %land.lhs.true128, %land.lhs.true
  %tobool140 = icmp eq i32 %flag, 0, !dbg !6565
  br i1 %tobool140, label %if.then141, label %sw.epilog, !dbg !6568

if.then141:                                       ; preds = %if.then139
  %call142 = tail call %union.tree_node* @default_conversion(%union.tree_node* %arg.2) #7, !dbg !6569
  call void @llvm.dbg.value(metadata %union.tree_node* %call142, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %sw.epilog, !dbg !6570

if.else144:                                       ; preds = %land.lhs.true128
  %cmp145 = icmp eq i32 %typecode.0, 13, !dbg !6571
  br i1 %cmp145, label %if.then147, label %if.else153, !dbg !6573

if.then147:                                       ; preds = %sw.bb114, %if.else144
  call void @llvm.dbg.value(metadata i32 124, metadata !6466, metadata !DIExpression()), !dbg !6499
  %call148 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !6574
  %tobool149 = icmp eq i32 %flag, 0, !dbg !6576
  br i1 %tobool149, label %if.then150, label %sw.epilog, !dbg !6578

if.then150:                                       ; preds = %if.then147
  %call151 = tail call %union.tree_node* @default_conversion(%union.tree_node* %arg.2) #7, !dbg !6579
  call void @llvm.dbg.value(metadata %union.tree_node* %call151, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %sw.epilog, !dbg !6580

if.else153:                                       ; preds = %sw.bb114, %if.else144
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !6581
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6583
  br label %cleanup1071, !dbg !6584

sw.bb156:                                         ; preds = %if.end70
  %22 = and i32 %typecode.0, 65534, !dbg !6585
  %switch = icmp eq i32 %22, 8, !dbg !6585
  br i1 %switch, label %if.else163, label %if.then162, !dbg !6585

if.then162:                                       ; preds = %sw.bb156
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !6587
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6589
  br label %cleanup1071, !dbg !6590

if.else163:                                       ; preds = %sw.bb156
  %tobool164 = icmp eq i32 %flag, 0, !dbg !6591
  br i1 %tobool164, label %if.then165, label %sw.epilog, !dbg !6593

if.then165:                                       ; preds = %if.else163
  %call166 = tail call %union.tree_node* @default_conversion(%union.tree_node* %arg.2) #7, !dbg !6594
  call void @llvm.dbg.value(metadata %union.tree_node* %call166, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %sw.epilog, !dbg !6595

sw.bb169:                                         ; preds = %if.end70
  %trunc56 = trunc i32 %typecode.0 to i16, !dbg !6596
  switch i16 %trunc56, label %if.then178 [
    i16 8, label %if.else179
    i16 9, label %if.else179
    i16 13, label %if.else179
  ], !dbg !6596

if.then178:                                       ; preds = %sw.bb169
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !6598
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6600
  br label %cleanup1071, !dbg !6601

if.else179:                                       ; preds = %sw.bb169, %sw.bb169, %sw.bb169
  %tobool180 = icmp eq i32 %flag, 0, !dbg !6602
  br i1 %tobool180, label %if.then181, label %sw.epilog, !dbg !6604

if.then181:                                       ; preds = %if.else179
  %call182 = tail call %union.tree_node* @default_conversion(%union.tree_node* %arg.2) #7, !dbg !6605
  call void @llvm.dbg.value(metadata %union.tree_node* %call182, metadata !6469, metadata !DIExpression()), !dbg !6499
  br label %sw.epilog, !dbg !6606

sw.bb185:                                         ; preds = %if.end70
  %trunc55 = trunc i32 %typecode.0 to i16, !dbg !6607
  switch i16 %trunc55, label %if.then200 [
    i16 8, label %if.end201
    i16 11, label %if.end201
    i16 9, label %if.end201
    i16 10, label %if.end201
    i16 13, label %if.end201
  ], !dbg !6607

if.then200:                                       ; preds = %sw.bb185
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !6609
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6611
  br label %cleanup1071, !dbg !6612

if.end201:                                        ; preds = %sw.bb185, %sw.bb185, %sw.bb185, %sw.bb185, %sw.bb185
  %call202 = tail call %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %location, %union.tree_node* %arg.2) #7, !dbg !6613
  call void @llvm.dbg.value(metadata %union.tree_node* %call202, metadata !6469, metadata !DIExpression()), !dbg !6499
  %call203 = tail call %union.tree_node* @invert_truthvalue_loc(i32 %location, %union.tree_node* %call202) #6, !dbg !6614
  call void @llvm.dbg.value(metadata %union.tree_node* %call203, metadata !6473, metadata !DIExpression()), !dbg !6499
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6615
  %bf.load205 = load i64, i64* %26, align 8, !dbg !6615
  %bf.cast207 = and i64 %bf.load205, 65535, !dbg !6615
  %arrayidx208 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast207, !dbg !6615
  %27 = load i32, i32* %arrayidx208, align 4, !dbg !6615
  %cmp209 = icmp ugt i32 %27, 3, !dbg !6615
  br i1 %cmp209, label %land.lhs.true211, label %return_build_unary_op, !dbg !6615

land.lhs.true211:                                 ; preds = %if.end201
  %cmp218 = icmp ult i32 %27, 11, !dbg !6615
  br i1 %cmp218, label %land.lhs.true220, label %return_build_unary_op, !dbg !6617

land.lhs.true220:                                 ; preds = %land.lhs.true211
  br i1 true, label %land.lhs.true229, label %land.lhs.true220.cond.end_crit_edge, !dbg !6618

land.lhs.true220.cond.end_crit_edge:              ; preds = %land.lhs.true220
  br label %cond.end, !dbg !6618

land.lhs.true229:                                 ; preds = %land.lhs.true220
  br i1 true, label %cond.true, label %land.lhs.true229.cond.end_crit_edge, !dbg !6618

land.lhs.true229.cond.end_crit_edge:              ; preds = %land.lhs.true229
  br label %cond.end, !dbg !6618

cond.true:                                        ; preds = %land.lhs.true229
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6618
  %29 = load i32, i32* %28, align 8, !dbg !6618
  %phitmp = icmp ne i32 %29, 0, !dbg !6618
  br label %cond.end, !dbg !6618

cond.end:                                         ; preds = %land.lhs.true229.cond.end_crit_edge, %land.lhs.true220.cond.end_crit_edge, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ undef, %land.lhs.true229.cond.end_crit_edge ], [ undef, %land.lhs.true220.cond.end_crit_edge ]
  br i1 %cond, label %if.then241, label %return_build_unary_op, !dbg !6619

if.then241:                                       ; preds = %cond.end
  br i1 true, label %land.lhs.true250, label %if.then241.return_build_unary_op_crit_edge, !dbg !6620

if.then241.return_build_unary_op_crit_edge:       ; preds = %if.then241
  br label %return_build_unary_op, !dbg !6620

land.lhs.true250:                                 ; preds = %if.then241
  br i1 true, label %cond.true259, label %land.lhs.true250.return_build_unary_op_crit_edge, !dbg !6620

land.lhs.true250.return_build_unary_op_crit_edge: ; preds = %land.lhs.true250
  br label %return_build_unary_op, !dbg !6620

cond.true259:                                     ; preds = %land.lhs.true250
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %call203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6620
  %31 = load i32, i32* %30, align 8, !dbg !6620
  br label %return_build_unary_op, !dbg !6620

sw.bb266:                                         ; preds = %if.end70
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6621
  %bf.load268 = load i64, i64* %32, align 8, !dbg !6621
  %bf.cast27052 = and i64 %bf.load268, 65535, !dbg !6623
  %cmp271 = icmp eq i64 %bf.cast27052, 26, !dbg !6623
  br i1 %cmp271, label %if.then273, label %if.else274, !dbg !6624

if.then273:                                       ; preds = %sw.bb266
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6625
  %33 = bitcast i32* %real to %union.tree_node**, !dbg !6625
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !6625
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end291, !dbg !6626

if.else274:                                       ; preds = %sw.bb266
  %type276 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6627
  %35 = bitcast %union.tree_node** %type276 to i64**, !dbg !6627
  %36 = load i64*, i64** %35, align 8, !dbg !6627
  %bf.load278 = load i64, i64* %36, align 8, !dbg !6627
  %bf.cast28053 = and i64 %bf.load278, 65535, !dbg !6629
  %cmp281 = icmp eq i64 %bf.cast28053, 13, !dbg !6629
  br i1 %cmp281, label %if.then283, label %if.end291, !dbg !6630

if.then283:                                       ; preds = %if.else274
  %type287 = getelementptr inbounds i64, i64* %36, i64 2, !dbg !6631
  %37 = bitcast i64* %type287 to %union.tree_node**, !dbg !6631
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8, !dbg !6631
  %call288 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %location, i32 43, %union.tree_node* %38, %union.tree_node* %arg.2) #6, !dbg !6631
  call void @llvm.dbg.value(metadata %union.tree_node* %call288, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end291, !dbg !6632

if.end291:                                        ; preds = %if.then283, %if.else274, %if.then273
  %ret.1 = phi %union.tree_node* [ %34, %if.then273 ], [ %call288, %if.then283 ], [ %arg.2, %if.else274 ], !dbg !6633
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !6473, metadata !DIExpression()), !dbg !6499
  %tobool292 = icmp eq %union.tree_node* %eptype.0, null, !dbg !6634
  br i1 %tobool292, label %return_build_unary_op, label %land.lhs.true293, !dbg !6636

land.lhs.true293:                                 ; preds = %if.end291
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %eptype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6637
  %bf.load295 = load i64, i64* %39, align 8, !dbg !6637
  %bf.cast29754 = and i64 %bf.load295, 65535, !dbg !6638
  %cmp298 = icmp eq i64 %bf.cast29754, 13, !dbg !6638
  br i1 %cmp298, label %if.then300, label %return_build_unary_op, !dbg !6639

if.then300:                                       ; preds = %land.lhs.true293
  %type302 = getelementptr inbounds %union.tree_node, %union.tree_node* %eptype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6640
  %40 = load %union.tree_node*, %union.tree_node** %type302, align 8, !dbg !6640
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !6474, metadata !DIExpression()), !dbg !6499
  br label %return_build_unary_op, !dbg !6641

sw.bb304:                                         ; preds = %if.end70
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6642
  %bf.load306 = load i64, i64* %41, align 8, !dbg !6642
  %bf.cast30849 = and i64 %bf.load306, 65535, !dbg !6644
  %cmp309 = icmp eq i64 %bf.cast30849, 26, !dbg !6644
  br i1 %cmp309, label %if.then311, label %if.else313, !dbg !6645

if.then311:                                       ; preds = %sw.bb304
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6646
  %43 = load %union.tree_node*, %union.tree_node** %42, align 8, !dbg !6646
  call void @llvm.dbg.value(metadata %union.tree_node* %43, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end333, !dbg !6647

if.else313:                                       ; preds = %sw.bb304
  %type315 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6648
  %44 = bitcast %union.tree_node** %type315 to i64**, !dbg !6648
  %45 = load i64*, i64** %44, align 8, !dbg !6648
  %bf.load317 = load i64, i64* %45, align 8, !dbg !6648
  %bf.cast31950 = and i64 %bf.load317, 65535, !dbg !6650
  %cmp320 = icmp eq i64 %bf.cast31950, 13, !dbg !6650
  br i1 %cmp320, label %if.then322, label %if.else328, !dbg !6651

if.then322:                                       ; preds = %if.else313
  %type326 = getelementptr inbounds i64, i64* %45, i64 2, !dbg !6652
  %46 = bitcast i64* %type326 to %union.tree_node**, !dbg !6652
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8, !dbg !6652
  %call327 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %location, i32 44, %union.tree_node* %47, %union.tree_node* %arg.2) #6, !dbg !6652
  call void @llvm.dbg.value(metadata %union.tree_node* %call327, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end333, !dbg !6653

if.else328:                                       ; preds = %if.else313
  %.cast = bitcast i64* %45 to %union.tree_node*, !dbg !6654
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6655
  %call331 = tail call %union.tree_node* @omit_one_operand_loc(i32 %location, %union.tree_node* %.cast, %union.tree_node* %48, %union.tree_node* %arg.2) #6, !dbg !6656
  call void @llvm.dbg.value(metadata %union.tree_node* %call331, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end333

if.end333:                                        ; preds = %if.then322, %if.else328, %if.then311
  %ret.3 = phi %union.tree_node* [ %43, %if.then311 ], [ %call327, %if.then322 ], [ %call331, %if.else328 ], !dbg !6657
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.3, metadata !6473, metadata !DIExpression()), !dbg !6499
  %tobool334 = icmp eq %union.tree_node* %eptype.0, null, !dbg !6658
  br i1 %tobool334, label %return_build_unary_op, label %land.lhs.true335, !dbg !6660

land.lhs.true335:                                 ; preds = %if.end333
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %eptype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6661
  %bf.load337 = load i64, i64* %49, align 8, !dbg !6661
  %bf.cast33951 = and i64 %bf.load337, 65535, !dbg !6662
  %cmp340 = icmp eq i64 %bf.cast33951, 13, !dbg !6662
  br i1 %cmp340, label %if.then342, label %return_build_unary_op, !dbg !6663

if.then342:                                       ; preds = %land.lhs.true335
  %type344 = getelementptr inbounds %union.tree_node, %union.tree_node* %eptype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6664
  %50 = load %union.tree_node*, %union.tree_node** %type344, align 8, !dbg !6664
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !6474, metadata !DIExpression()), !dbg !6499
  br label %return_build_unary_op, !dbg !6665

sw.bb346:                                         ; preds = %if.end70, %if.end70, %if.end70, %if.end70
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6666
  %bf.load348 = load i64, i64* %51, align 8, !dbg !6666
  %bf.cast35037 = and i64 %bf.load348, 65535, !dbg !6667
  %cmp351 = icmp eq i64 %bf.cast35037, 189, !dbg !6667
  br i1 %cmp351, label %if.then353, label %if.end381, !dbg !6668

if.then353:                                       ; preds = %sw.bb346
  %operands355 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6669
  %arrayidx356 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands355, i64 1, !dbg !6669
  %52 = load %union.tree_node*, %union.tree_node** %arrayidx356, align 8, !dbg !6669
  %call357 = tail call %union.tree_node* @build_unary_op(i32 %location, i32 %code, %union.tree_node* %52, i32 %flag) #7, !dbg !6670
  call void @llvm.dbg.value(metadata %union.tree_node* %call357, metadata !6478, metadata !DIExpression()), !dbg !6671
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6672
  %cmp358 = icmp eq %union.tree_node* %call357, %53, !dbg !6674
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !6675

if.then360:                                       ; preds = %if.then353
  br label %cleanup, !dbg !6676

if.end361:                                        ; preds = %if.then353
  %type363 = getelementptr inbounds %union.tree_node, %union.tree_node* %call357, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6677
  %54 = load %union.tree_node*, %union.tree_node** %type363, align 8, !dbg !6677
  %55 = load %union.tree_node*, %union.tree_node** %operands355, align 8, !dbg !6677
  %call367 = tail call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %54, %union.tree_node* %55, %union.tree_node* %call357) #6, !dbg !6677
  call void @llvm.dbg.value(metadata %union.tree_node* %call367, metadata !6473, metadata !DIExpression()), !dbg !6499
  %bf.load369 = load i64, i64* %51, align 8, !dbg !6678
  %bf.cast37248 = and i64 %bf.load369, 8589934592, !dbg !6678
  %tobool373 = icmp eq i64 %bf.cast37248, 0, !dbg !6678
  br i1 %tobool373, label %cond.end376, label %cond.true374, !dbg !6678

cond.true374:                                     ; preds = %if.end361
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3455, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6678
  br label %cond.end376, !dbg !6678

cond.end376:                                      ; preds = %if.end361, %cond.true374
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %call367, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6679
  %bf.load379 = load i64, i64* %56, align 8, !dbg !6680
  %bf.set = or i64 %bf.load379, 17179869184, !dbg !6680
  store i64 %bf.set, i64* %56, align 8, !dbg !6680
  br label %cleanup, !dbg !6681

cleanup:                                          ; preds = %cond.end376, %if.then360
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then360 ], [ true, %cond.end376 ]
  %ret.4 = phi %union.tree_node* [ %0, %if.then360 ], [ %call367, %cond.end376 ], !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.4, metadata !6473, metadata !DIExpression()), !dbg !6499
  br i1 %cleanup.dest.slot.0, label %return_build_unary_op, label %cleanup1071

if.end381:                                        ; preds = %sw.bb346
  %cmp382 = icmp eq i32 %code, 126, !dbg !6682
  %cmp385 = icmp eq i32 %code, 128, !dbg !6684
  %spec.select = or i1 %cmp382, %cmp385, !dbg !6685
  %cond388 = select i1 %spec.select, i32 1, i32 2, !dbg !6686
  %call389 = tail call fastcc i32 @lvalue_or_else(%union.tree_node* %arg.2, i32 %cond388) #7, !dbg !6687
  %tobool390 = icmp eq i32 %call389, 0, !dbg !6687
  br i1 %tobool390, label %if.then391, label %if.end392, !dbg !6688

if.then391:                                       ; preds = %if.end381
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6689
  br label %cleanup1071, !dbg !6690

if.end392:                                        ; preds = %if.end381
  %58 = load i32, i32* @warn_cxx_compat, align 4, !dbg !6691
  %tobool393 = icmp eq i32 %58, 0, !dbg !6691
  br i1 %tobool393, label %if.end414, label %land.lhs.true394, !dbg !6693

land.lhs.true394:                                 ; preds = %if.end392
  %type396 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6694
  %59 = bitcast %union.tree_node** %type396 to i64**, !dbg !6694
  %60 = load i64*, i64** %59, align 8, !dbg !6694
  %bf.load398 = load i64, i64* %60, align 8, !dbg !6694
  %bf.cast40047 = and i64 %bf.load398, 65535, !dbg !6695
  %cmp401 = icmp eq i64 %bf.cast40047, 6, !dbg !6695
  br i1 %cmp401, label %if.then403, label %if.end414, !dbg !6696

if.then403:                                       ; preds = %land.lhs.true394
  switch i32 %code, label %if.else411 [
    i32 126, label %if.then409
    i32 128, label %if.then409
  ], !dbg !6697

if.then409:                                       ; preds = %if.then403, %if.then403
  %call410 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 49, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !6700
  br label %if.end414, !dbg !6700

if.else411:                                       ; preds = %if.then403
  %call412 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 49, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !6701
  br label %if.end414

if.end414:                                        ; preds = %if.end392, %if.then409, %if.else411, %land.lhs.true394
  %call415 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %arg.2, i8 zeroext 0, i8* null) #6, !dbg !6702
  call void @llvm.dbg.value(metadata %union.tree_node* %call415, metadata !6469, metadata !DIExpression()), !dbg !6499
  %trunc38 = trunc i32 %typecode.0 to i16, !dbg !6703
  switch i16 %trunc38, label %if.then519 [
    i16 13, label %if.then418
    i16 10, label %if.end528
    i16 11, label %if.end528
    i16 8, label %if.end528
    i16 9, label %if.end528
  ], !dbg !6703

if.then418:                                       ; preds = %if.end414
  %call421 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !6704
  %call422 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %call415) #6, !dbg !6705
  call void @llvm.dbg.value(metadata %union.tree_node* %call422, metadata !6469, metadata !DIExpression()), !dbg !6499
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %call422, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6706
  %bf.load424 = load i64, i64* %61, align 8, !dbg !6706
  %bf.cast426 = and i64 %bf.load424, 65535, !dbg !6706
  %arrayidx428 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast426, !dbg !6706
  %62 = load i32, i32* %arrayidx428, align 4, !dbg !6706
  %cmp429 = icmp ugt i32 %62, 3, !dbg !6706
  br i1 %cmp429, label %land.lhs.true431, label %cond.end444, !dbg !6706

land.lhs.true431:                                 ; preds = %if.then418
  %cmp438 = icmp ult i32 %62, 11, !dbg !6706
  br i1 %cmp438, label %cond.true440, label %cond.end444, !dbg !6706

cond.true440:                                     ; preds = %land.lhs.true431
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call422, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6706
  %64 = load i32, i32* %63, align 8, !dbg !6706
  br label %cond.end444, !dbg !6706

cond.end444:                                      ; preds = %if.then418, %land.lhs.true431, %cond.true440
  %cond445 = phi i32 [ %64, %cond.true440 ], [ 0, %land.lhs.true431 ], [ 0, %if.then418 ], !dbg !6706
  %call446 = tail call %union.tree_node* @build_unary_op(i32 %cond445, i32 43, %union.tree_node* %call422, i32 1) #7, !dbg !6707
  call void @llvm.dbg.value(metadata %union.tree_node* %call446, metadata !6482, metadata !DIExpression()), !dbg !6708
  %bf.load448 = load i64, i64* %61, align 8, !dbg !6709
  %bf.cast450 = and i64 %bf.load448, 65535, !dbg !6709
  %arrayidx452 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast450, !dbg !6709
  %65 = load i32, i32* %arrayidx452, align 4, !dbg !6709
  %cmp453 = icmp ugt i32 %65, 3, !dbg !6709
  br i1 %cmp453, label %land.lhs.true455, label %cond.end468, !dbg !6709

land.lhs.true455:                                 ; preds = %cond.end444
  %cmp462 = icmp ult i32 %65, 11, !dbg !6709
  br i1 %cmp462, label %cond.true464, label %cond.end468, !dbg !6709

cond.true464:                                     ; preds = %land.lhs.true455
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %call422, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6709
  %67 = load i32, i32* %66, align 8, !dbg !6709
  br label %cond.end468, !dbg !6709

cond.end468:                                      ; preds = %cond.end444, %land.lhs.true455, %cond.true464
  %cond469 = phi i32 [ %67, %cond.true464 ], [ 0, %land.lhs.true455 ], [ 0, %cond.end444 ], !dbg !6709
  %call470 = tail call %union.tree_node* @build_unary_op(i32 %cond469, i32 44, %union.tree_node* %call422, i32 1) #7, !dbg !6710
  call void @llvm.dbg.value(metadata %union.tree_node* %call470, metadata !6485, metadata !DIExpression()), !dbg !6708
  %bf.load472 = load i64, i64* %61, align 8, !dbg !6711
  %bf.cast474 = and i64 %bf.load472, 65535, !dbg !6711
  %arrayidx476 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast474, !dbg !6711
  %68 = load i32, i32* %arrayidx476, align 4, !dbg !6711
  %cmp477 = icmp ugt i32 %68, 3, !dbg !6711
  br i1 %cmp477, label %land.lhs.true479, label %cond.end492, !dbg !6711

land.lhs.true479:                                 ; preds = %cond.end468
  %cmp486 = icmp ult i32 %68, 11, !dbg !6711
  br i1 %cmp486, label %cond.true488, label %cond.end492, !dbg !6711

cond.true488:                                     ; preds = %land.lhs.true479
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call422, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6711
  %70 = load i32, i32* %69, align 8, !dbg !6711
  br label %cond.end492, !dbg !6711

cond.end492:                                      ; preds = %cond.end468, %land.lhs.true479, %cond.true488
  %cond493 = phi i32 [ %70, %cond.true488 ], [ 0, %land.lhs.true479 ], [ 0, %cond.end468 ], !dbg !6711
  %call494 = tail call %union.tree_node* @build_unary_op(i32 %cond493, i32 %code, %union.tree_node* %call446, i32 1) #7, !dbg !6712
  call void @llvm.dbg.value(metadata %union.tree_node* %call494, metadata !6482, metadata !DIExpression()), !dbg !6708
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6713
  %cmp495 = icmp eq %union.tree_node* %call494, %71, !dbg !6715
  %cmp498 = icmp eq %union.tree_node* %call470, %71, !dbg !6716
  %or.cond = or i1 %cmp495, %cmp498, !dbg !6717
  br i1 %or.cond, label %if.then500, label %if.end501, !dbg !6717

if.then500:                                       ; preds = %cond.end492
  br label %cleanup505, !dbg !6718

if.end501:                                        ; preds = %cond.end492
  %type503 = getelementptr inbounds %union.tree_node, %union.tree_node* %call422, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6719
  %72 = load %union.tree_node*, %union.tree_node** %type503, align 8, !dbg !6719
  %call504 = tail call %union.tree_node* @build2_stat(i32 123, %union.tree_node* %72, %union.tree_node* %call494, %union.tree_node* %call470) #6, !dbg !6719
  call void @llvm.dbg.value(metadata %union.tree_node* %call504, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %cleanup505, !dbg !6720

cleanup505:                                       ; preds = %if.end501, %if.then500
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then500 ], [ true, %if.end501 ]
  %ret.5 = phi %union.tree_node* [ %0, %if.then500 ], [ %call504, %if.end501 ], !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.5, metadata !6473, metadata !DIExpression()), !dbg !6499
  br i1 %cleanup.dest.slot.1, label %return_build_unary_op, label %cleanup1071

if.then519:                                       ; preds = %if.end414
  switch i32 %code, label %if.else526 [
    i32 126, label %if.then525
    i32 128, label %if.then525
  ], !dbg !6721

if.then525:                                       ; preds = %if.then519, %if.then519
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !6725
  br label %if.end527, !dbg !6725

if.else526:                                       ; preds = %if.then519
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !6726
  br label %if.end527

if.end527:                                        ; preds = %if.else526, %if.then525
  %73 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6727
  br label %cleanup1071, !dbg !6728

if.end528:                                        ; preds = %if.end414, %if.end414, %if.end414, %if.end414
  %type530 = getelementptr inbounds %union.tree_node, %union.tree_node* %call415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6729
  %74 = load %union.tree_node*, %union.tree_node** %type530, align 8, !dbg !6729
  call void @llvm.dbg.value(metadata %union.tree_node* %74, metadata !6470, metadata !DIExpression()), !dbg !6499
  %cmp531 = icmp eq i32 %typecode.0, 10, !dbg !6730
  br i1 %cmp531, label %if.then533, label %if.else596, !dbg !6732

if.then533:                                       ; preds = %if.end528
  %type535 = getelementptr inbounds %union.tree_node, %union.tree_node* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6733
  %75 = bitcast %union.tree_node** %type535 to %struct.tree_type**, !dbg !6733
  %76 = load %struct.tree_type*, %struct.tree_type** %75, align 8, !dbg !6733
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %76, i64 0, i32 2, !dbg !6733
  %77 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !6733
  %cmp537 = icmp eq %union.tree_node* %77, null, !dbg !6733
  %78 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %76, i64 0, i32 0, i32 0, i32 0, !dbg !6733
  br i1 %cmp537, label %lor.lhs.false539, label %if.then533.if.else557_crit_edge, !dbg !6733

if.then533.if.else557_crit_edge:                  ; preds = %if.then533
  %bf.load561.pre = load i64, i64* %78, align 8, !dbg !6736
  %.pre69 = and i64 %bf.load561.pre, 65535, !dbg !6738
  br label %if.else557, !dbg !6733

lor.lhs.false539:                                 ; preds = %if.then533
  %bf.load543 = load i64, i64* %78, align 8, !dbg !6733
  %bf.cast54544 = and i64 %bf.load543, 65535, !dbg !6733
  %cmp546 = icmp eq i64 %bf.cast54544, 19, !dbg !6733
  br i1 %cmp546, label %if.else557, label %if.then548, !dbg !6739

if.then548:                                       ; preds = %lor.lhs.false539
  switch i32 %code, label %if.else555 [
    i32 126, label %if.then554
    i32 128, label %if.then554
  ], !dbg !6740

if.then554:                                       ; preds = %if.then548, %if.then548
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !6743
  br label %if.end591, !dbg !6743

if.else555:                                       ; preds = %if.then548
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.47, i64 0, i64 0)) #6, !dbg !6744
  br label %if.end591

if.else557:                                       ; preds = %if.then533.if.else557_crit_edge, %lor.lhs.false539
  %bf.cast56345.pre-phi = phi i64 [ %.pre69, %if.then533.if.else557_crit_edge ], [ %bf.cast54544, %lor.lhs.false539 ], !dbg !6738
  %cmp564 = icmp eq i64 %bf.cast56345.pre-phi, 20, !dbg !6738
  br i1 %cmp564, label %if.then575, label %lor.lhs.false566, !dbg !6745

lor.lhs.false566:                                 ; preds = %if.else557
  %cmp573 = icmp eq i64 %bf.cast56345.pre-phi, 19, !dbg !6746
  br i1 %cmp573, label %if.then575, label %if.end591, !dbg !6747

if.then575:                                       ; preds = %lor.lhs.false566, %if.else557
  switch i32 %code, label %if.else585 [
    i32 126, label %if.then581
    i32 128, label %if.then581
  ], !dbg !6748

if.then581:                                       ; preds = %if.then575, %if.then575
  %79 = load i32, i32* @pedantic, align 4, !dbg !6751
  %tobool582 = icmp eq i32 %79, 0, !dbg !6751
  %cond583 = select i1 %tobool582, i32 162, i32 834, !dbg !6751
  %call584 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 %cond583, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !6752
  br label %if.end591, !dbg !6752

if.else585:                                       ; preds = %if.then575
  %80 = load i32, i32* @pedantic, align 4, !dbg !6753
  %tobool586 = icmp eq i32 %80, 0, !dbg !6753
  %cond587 = select i1 %tobool586, i32 162, i32 834, !dbg !6753
  %call588 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 %cond587, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !6754
  br label %if.end591

if.end591:                                        ; preds = %lor.lhs.false566, %if.else585, %if.then581, %if.then554, %if.else555
  %81 = load %union.tree_node*, %union.tree_node** %type535, align 8, !dbg !6755
  %call594 = tail call fastcc %union.tree_node* @c_size_in_bytes(%union.tree_node* %81) #7, !dbg !6756
  call void @llvm.dbg.value(metadata %union.tree_node* %call594, metadata !6486, metadata !DIExpression()), !dbg !6757
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6758
  %call595 = tail call %union.tree_node* @fold_convert_loc(i32 %location, %union.tree_node* %82, %union.tree_node* %call594) #6, !dbg !6759
  call void @llvm.dbg.value(metadata %union.tree_node* %call595, metadata !6486, metadata !DIExpression()), !dbg !6757
  br label %if.end659, !dbg !6760

if.else596:                                       ; preds = %if.end528
  %83 = getelementptr inbounds %union.tree_node, %union.tree_node* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6761
  %bf.load598 = load i64, i64* %83, align 8, !dbg !6761
  %bf.cast60039 = and i64 %bf.load598, 65535, !dbg !6761
  %cmp601 = icmp eq i64 %bf.cast60039, 14, !dbg !6761
  br i1 %cmp601, label %cond.true603, label %cond.false605, !dbg !6761

cond.true603:                                     ; preds = %if.else596
  %call604 = tail call i32 @vector_type_mode(%union.tree_node* %74) #6, !dbg !6761
  br label %cond.end610, !dbg !6761

cond.false605:                                    ; preds = %if.else596
  %type606 = bitcast %union.tree_node* %74 to %struct.tree_type*, !dbg !6761
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type606, i64 0, i32 6, !dbg !6761
  %bf.load607 = load i32, i32* %mode, align 4, !dbg !6761
  %bf.lshr608 = lshr i32 %bf.load607, 16, !dbg !6761
  %bf.clear609 = and i32 %bf.lshr608, 255, !dbg !6761
  br label %cond.end610, !dbg !6761

cond.end610:                                      ; preds = %cond.false605, %cond.true603
  %cond611 = phi i32 [ %call604, %cond.true603 ], [ %bf.clear609, %cond.false605 ], !dbg !6761
  %idxprom612 = zext i32 %cond611 to i64, !dbg !6761
  %arrayidx613 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom612, !dbg !6761
  %84 = load i8, i8* %arrayidx613, align 1, !dbg !6761
  %cmp615 = icmp eq i8 %84, 4, !dbg !6761
  br i1 %cmp615, label %if.then639, label %lor.lhs.false617, !dbg !6761

lor.lhs.false617:                                 ; preds = %cond.end610
  %bf.load619 = load i64, i64* %83, align 8, !dbg !6761
  %bf.cast62140 = and i64 %bf.load619, 65535, !dbg !6761
  %cmp622 = icmp eq i64 %bf.cast62140, 14, !dbg !6761
  br i1 %cmp622, label %cond.true624, label %cond.false626, !dbg !6761

cond.true624:                                     ; preds = %lor.lhs.false617
  %call625 = tail call i32 @vector_type_mode(%union.tree_node* %74) #6, !dbg !6761
  br label %cond.end632, !dbg !6761

cond.false626:                                    ; preds = %lor.lhs.false617
  %type627 = bitcast %union.tree_node* %74 to %struct.tree_type*, !dbg !6761
  %mode628 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type627, i64 0, i32 6, !dbg !6761
  %bf.load629 = load i32, i32* %mode628, align 4, !dbg !6761
  %bf.lshr630 = lshr i32 %bf.load629, 16, !dbg !6761
  %bf.clear631 = and i32 %bf.lshr630, 255, !dbg !6761
  br label %cond.end632, !dbg !6761

cond.end632:                                      ; preds = %cond.false626, %cond.true624
  %cond633 = phi i32 [ %call625, %cond.true624 ], [ %bf.clear631, %cond.false626 ], !dbg !6761
  %idxprom634 = zext i32 %cond633 to i64, !dbg !6761
  %arrayidx635 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom634, !dbg !6761
  %85 = load i8, i8* %arrayidx635, align 1, !dbg !6761
  %cmp637 = icmp eq i8 %85, 13, !dbg !6761
  br i1 %cmp637, label %if.then639, label %if.else656, !dbg !6763

if.then639:                                       ; preds = %cond.end632, %cond.end610
  switch i32 %code, label %if.else651 [
    i32 126, label %if.end654
    i32 125, label %if.end653
    i32 128, label %if.end652
  ], !dbg !6764

if.else651:                                       ; preds = %if.then639
  call void @llvm.dbg.value(metadata i32 128, metadata !6466, metadata !DIExpression()), !dbg !6499
  br label %if.end652

if.end652:                                        ; preds = %if.then639, %if.else651
  %code.addr.1 = phi i32 [ 128, %if.else651 ], [ 127, %if.then639 ], !dbg !6766
  call void @llvm.dbg.value(metadata i32 %code.addr.1, metadata !6466, metadata !DIExpression()), !dbg !6499
  br label %if.end653

if.end653:                                        ; preds = %if.then639, %if.end652
  %code.addr.2 = phi i32 [ %code.addr.1, %if.end652 ], [ 126, %if.then639 ], !dbg !6770
  call void @llvm.dbg.value(metadata i32 %code.addr.2, metadata !6466, metadata !DIExpression()), !dbg !6499
  br label %if.end654

if.end654:                                        ; preds = %if.then639, %if.end653
  %code.addr.3 = phi i32 [ %code.addr.2, %if.end653 ], [ 125, %if.then639 ], !dbg !6771
  call void @llvm.dbg.value(metadata i32 %code.addr.3, metadata !6466, metadata !DIExpression()), !dbg !6499
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !6772
  call void @llvm.dbg.value(metadata %union.tree_node* %86, metadata !6486, metadata !DIExpression()), !dbg !6757
  %call655 = tail call %union.tree_node* @convert(%union.tree_node* %74, %union.tree_node* %86) #6, !dbg !6773
  call void @llvm.dbg.value(metadata %union.tree_node* %call655, metadata !6486, metadata !DIExpression()), !dbg !6757
  br label %if.end659, !dbg !6774

if.else656:                                       ; preds = %cond.end632
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !6775
  call void @llvm.dbg.value(metadata %union.tree_node* %87, metadata !6486, metadata !DIExpression()), !dbg !6757
  %call657 = tail call %union.tree_node* @convert(%union.tree_node* %74, %union.tree_node* %87) #6, !dbg !6777
  call void @llvm.dbg.value(metadata %union.tree_node* %call657, metadata !6486, metadata !DIExpression()), !dbg !6757
  br label %if.end659

if.end659:                                        ; preds = %if.end654, %if.else656, %if.end591
  %inc.1 = phi %union.tree_node* [ %call595, %if.end591 ], [ %call655, %if.end654 ], [ %call657, %if.else656 ], !dbg !6778
  %code.addr.5 = phi i32 [ %code, %if.end591 ], [ %code.addr.3, %if.end654 ], [ %code, %if.else656 ]
  call void @llvm.dbg.value(metadata i32 %code.addr.5, metadata !6466, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %inc.1, metadata !6486, metadata !DIExpression()), !dbg !6757
  %88 = getelementptr inbounds %union.tree_node, %union.tree_node* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6779
  %bf.load661 = load i64, i64* %88, align 8, !dbg !6779
  %bf.cast66441 = and i64 %bf.load661, 1048576, !dbg !6779
  %tobool665 = icmp eq i64 %bf.cast66441, 0, !dbg !6779
  br i1 %tobool665, label %if.else674, label %if.then666, !dbg !6781

if.then666:                                       ; preds = %if.end659
  %cmp667 = icmp eq i32 %code.addr.5, 126, !dbg !6782
  %cmp670 = icmp eq i32 %code.addr.5, 128, !dbg !6784
  %spec.select4 = or i1 %cmp667, %cmp670, !dbg !6785
  %cond673 = select i1 %spec.select4, i32 1, i32 2, !dbg !6786
  tail call fastcc void @readonly_error(%union.tree_node* %call415, i32 %cond673) #7, !dbg !6787
  %89 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6788
  br label %cleanup722, !dbg !6789

if.else674:                                       ; preds = %if.end659
  %90 = getelementptr inbounds %union.tree_node, %union.tree_node* %call415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6790
  %bf.load676 = load i64, i64* %90, align 8, !dbg !6790
  %bf.cast67942 = and i64 %bf.load676, 1048576, !dbg !6790
  %tobool680 = icmp eq i64 %bf.cast67942, 0, !dbg !6790
  br i1 %tobool680, label %if.end690, label %if.then681, !dbg !6792

if.then681:                                       ; preds = %if.else674
  %cmp682 = icmp eq i32 %code.addr.5, 126, !dbg !6793
  %cmp685 = icmp eq i32 %code.addr.5, 128, !dbg !6794
  %spec.select5 = or i1 %cmp682, %cmp685, !dbg !6795
  %cond688 = select i1 %spec.select5, i32 1, i32 2, !dbg !6796
  tail call fastcc void @readonly_warning(%union.tree_node* %call415, i32 %cond688) #7, !dbg !6797
  br label %if.end690, !dbg !6797

if.end690:                                        ; preds = %if.else674, %if.then681
  %91 = bitcast %union.tree_node** %type530 to i64**, !dbg !6798
  %92 = load i64*, i64** %91, align 8, !dbg !6798
  %bf.load694 = load i64, i64* %92, align 8, !dbg !6798
  %bf.cast69643 = and i64 %bf.load694, 65535, !dbg !6800
  %cmp697 = icmp eq i64 %bf.cast69643, 7, !dbg !6800
  br i1 %cmp697, label %if.then699, label %if.else701, !dbg !6801

if.then699:                                       ; preds = %if.end690
  %call700 = tail call %union.tree_node* @boolean_increment(i32 %code.addr.5, %union.tree_node* %call415) #6, !dbg !6802
  call void @llvm.dbg.value(metadata %union.tree_node* %call700, metadata !6472, metadata !DIExpression()), !dbg !6499
  br label %if.end705, !dbg !6803

if.else701:                                       ; preds = %if.end690
  %93 = bitcast i64* %92 to %union.tree_node*, !dbg !6801
  %call704 = tail call %union.tree_node* @build2_stat(i32 %code.addr.5, %union.tree_node* %93, %union.tree_node* %call415, %union.tree_node* %inc.1) #6, !dbg !6804
  call void @llvm.dbg.value(metadata %union.tree_node* %call704, metadata !6472, metadata !DIExpression()), !dbg !6499
  br label %if.end705

if.end705:                                        ; preds = %if.else701, %if.then699
  %val.0 = phi %union.tree_node* [ %call700, %if.then699 ], [ %call704, %if.else701 ], !dbg !6805
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !6472, metadata !DIExpression()), !dbg !6499
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %val.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6806
  %bf.load707 = load i64, i64* %94, align 8, !dbg !6807
  %bf.set709 = or i64 %bf.load707, 65536, !dbg !6807
  store i64 %bf.set709, i64* %94, align 8, !dbg !6807
  %95 = trunc i64 %bf.load707 to i32, !dbg !6808
  %bf.cast713 = and i32 %95, 65535, !dbg !6808
  %cmp714 = icmp eq i32 %bf.cast713, %code.addr.5, !dbg !6810
  br i1 %cmp714, label %cleanup722, label %if.then716, !dbg !6811

if.then716:                                       ; preds = %if.end705
  %bf.set720 = or i64 %bf.load707, 8454144, !dbg !6812
  store i64 %bf.set720, i64* %94, align 8, !dbg !6812
  br label %cleanup722, !dbg !6813

cleanup722:                                       ; preds = %if.end705, %if.then716, %if.then666
  %cleanup.dest.slot.2 = phi i1 [ false, %if.then666 ], [ true, %if.then716 ], [ true, %if.end705 ]
  %ret.6 = phi %union.tree_node* [ %0, %if.then666 ], [ %val.0, %if.then716 ], [ %val.0, %if.end705 ], !dbg !6499
  %retval.2 = phi %union.tree_node* [ %89, %if.then666 ], [ undef, %if.then716 ], [ undef, %if.end705 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.6, metadata !6473, metadata !DIExpression()), !dbg !6499
  br i1 %cleanup.dest.slot.2, label %return_build_unary_op, label %cleanup1071

sw.bb723:                                         ; preds = %if.end70
  %type725 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6814
  %96 = bitcast %union.tree_node** %type725 to i64**, !dbg !6814
  %97 = load i64*, i64** %96, align 8, !dbg !6814
  %bf.load727 = load i64, i64* %97, align 8, !dbg !6814
  %bf.cast72913 = and i64 %bf.load727, 65535, !dbg !6814
  %cmp730 = icmp eq i64 %bf.cast72913, 19, !dbg !6814
  br i1 %cmp730, label %land.lhs.true732, label %if.end776, !dbg !6816

land.lhs.true732:                                 ; preds = %sw.bb723
  %98 = bitcast i64* %97 to %struct.tree_type*, !dbg !6816
  %bf.lshr737 = lshr i64 %bf.load727, 20, !dbg !6817
  %99 = trunc i64 %bf.lshr737 to i32, !dbg !6817
  %bf.cast739 = and i32 %99, 1, !dbg !6817
  %100 = lshr i64 %bf.load727, 18, !dbg !6817
  %101 = trunc i64 %100 to i32, !dbg !6817
  %mul747 = and i32 %101, 2, !dbg !6817
  %or = or i32 %bf.cast739, %mul747, !dbg !6817
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %98, i64 0, i32 6, !dbg !6817
  %bf.load751 = load i32, i32* %restrict_flag, align 4, !dbg !6817
  %102 = lshr i32 %bf.load751, 11, !dbg !6817
  %mul754 = and i32 %102, 4, !dbg !6817
  %or755 = or i32 %or, %mul754, !dbg !6817
  %103 = lshr i64 %bf.load727, 48, !dbg !6817
  %104 = trunc i64 %103 to i32, !dbg !6817
  %shl = and i32 %104, 65280, !dbg !6817
  %or762 = or i32 %or755, %shl, !dbg !6817
  %cmp763 = icmp eq i32 %or762, 0, !dbg !6818
  br i1 %cmp763, label %land.lhs.true765, label %if.end776, !dbg !6819

land.lhs.true765:                                 ; preds = %land.lhs.true732
  %105 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6820
  %bf.load767 = load i64, i64* %105, align 8, !dbg !6820
  %bf.cast76936 = and i64 %bf.load767, 65535, !dbg !6821
  %cmp770 = icmp eq i64 %bf.cast76936, 47, !dbg !6821
  %106 = load i32, i32* @flag_isoc99, align 4, !dbg !6822
  %tobool773 = icmp ne i32 %106, 0, !dbg !6822
  %or.cond6 = and i1 %cmp770, %tobool773, !dbg !6823
  br i1 %or.cond6, label %if.end776, label %if.then774, !dbg !6823

if.then774:                                       ; preds = %land.lhs.true765
  %call775 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !6824
  br label %if.end776, !dbg !6824

if.end776:                                        ; preds = %land.lhs.true765, %if.then774, %land.lhs.true732, %sw.bb723
  %107 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6825
  %bf.load778 = load i64, i64* %107, align 8, !dbg !6825
  %bf.cast78014 = and i64 %bf.load778, 65535, !dbg !6827
  %cmp781 = icmp eq i64 %bf.cast78014, 47, !dbg !6827
  br i1 %cmp781, label %if.then783, label %if.end798, !dbg !6828

if.then783:                                       ; preds = %if.end776
  %operands785 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6829
  %108 = load %union.tree_node*, %union.tree_node** %operands785, align 8, !dbg !6829
  %call787 = tail call zeroext i8 @lvalue_p(%union.tree_node* %108) #7, !dbg !6832
  %tobool788 = icmp eq i8 %call787, 0, !dbg !6832
  %109 = load %union.tree_node*, %union.tree_node** %operands785, align 8, !dbg !6833
  br i1 %tobool788, label %return_build_unary_op, label %if.then789, !dbg !6834

if.then789:                                       ; preds = %if.then783
  %call793 = tail call %union.tree_node* @non_lvalue_loc(i32 %location, %union.tree_node* %109) #6, !dbg !6835
  br label %cleanup1071, !dbg !6836

if.end798:                                        ; preds = %if.end776
  %cmp803 = icmp eq i64 %bf.cast78014, 45, !dbg !6837
  br i1 %cmp803, label %if.then805, label %if.else831, !dbg !6838

if.then805:                                       ; preds = %if.end798
  %operands807 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6839
  %110 = load %union.tree_node*, %union.tree_node** %operands807, align 8, !dbg !6839
  call void @llvm.dbg.value(metadata %union.tree_node* %110, metadata !6488, metadata !DIExpression()), !dbg !6840
  %call809 = tail call zeroext i8 @c_mark_addressable(%union.tree_node* %110) #7, !dbg !6841
  %tobool810 = icmp eq i8 %call809, 0, !dbg !6841
  br i1 %tobool810, label %if.then811, label %if.end812, !dbg !6843

if.then811:                                       ; preds = %if.then805
  %111 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6844
  br label %cleanup1071, !dbg !6845

if.end812:                                        ; preds = %if.then805
  %type814 = getelementptr inbounds %union.tree_node, %union.tree_node* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6846
  %112 = bitcast %union.tree_node** %type814 to i64**, !dbg !6846
  %113 = load i64*, i64** %112, align 8, !dbg !6846
  %bf.load816 = load i64, i64* %113, align 8, !dbg !6846
  %bf.cast81832 = and i64 %bf.load816, 65535, !dbg !6847
  %cmp819 = icmp eq i64 %bf.cast81832, 15, !dbg !6847
  br i1 %cmp819, label %cond.true821, label %cond.end824, !dbg !6846

cond.true821:                                     ; preds = %if.end812
  %call822 = tail call fastcc %union.tree_node* @array_to_pointer_conversion(i32 %location, %union.tree_node* %110) #7, !dbg !6848
  br label %cond.end824, !dbg !6846

cond.end824:                                      ; preds = %if.end812, %cond.true821
  %cond825 = phi %union.tree_node* [ %call822, %cond.true821 ], [ %110, %if.end812 ], !dbg !6846
  %arrayidx828 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands807, i64 1, !dbg !6849
  %114 = load %union.tree_node*, %union.tree_node** %arrayidx828, align 8, !dbg !6849
  %call829 = tail call %union.tree_node* @build_binary_op(i32 %location, i32 63, %union.tree_node* %cond825, %union.tree_node* %114, i32 1) #7, !dbg !6850
  br label %cleanup1071, !dbg !6851

if.else831:                                       ; preds = %if.end798
  %cmp832 = icmp eq i32 %typecode.0, 20, !dbg !6852
  %tobool835 = icmp ne i32 %flag, 0, !dbg !6854
  %or.cond7 = or i1 %cmp832, %tobool835, !dbg !6855
  br i1 %or.cond7, label %if.end841, label %land.lhs.true836, !dbg !6855

land.lhs.true836:                                 ; preds = %if.else831
  %call837 = tail call fastcc i32 @lvalue_or_else(%union.tree_node* %arg.2, i32 3) #7, !dbg !6856
  %tobool838 = icmp eq i32 %call837, 0, !dbg !6856
  br i1 %tobool838, label %if.then839, label %land.lhs.true836.if.end841_crit_edge, !dbg !6857

land.lhs.true836.if.end841_crit_edge:             ; preds = %land.lhs.true836
  %bf.load843.pre = load i64, i64* %107, align 8, !dbg !6858
  br label %if.end841, !dbg !6857

if.then839:                                       ; preds = %land.lhs.true836
  %115 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6859
  br label %cleanup1071, !dbg !6860

if.end841:                                        ; preds = %land.lhs.true836.if.end841_crit_edge, %if.else831
  %bf.load916 = phi i64 [ %bf.load843.pre, %land.lhs.true836.if.end841_crit_edge ], [ %bf.load778, %if.else831 ], !dbg !6858
  %bf.cast84516 = and i64 %bf.load916, 65535, !dbg !6861
  %cmp846 = icmp eq i64 %bf.cast84516, 189, !dbg !6861
  br i1 %cmp846, label %if.then848, label %if.end880, !dbg !6862

if.then848:                                       ; preds = %if.end841
  %operands851 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6863
  %arrayidx852 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands851, i64 1, !dbg !6863
  %116 = load %union.tree_node*, %union.tree_node** %arrayidx852, align 8, !dbg !6863
  %call853 = tail call %union.tree_node* @build_unary_op(i32 %location, i32 121, %union.tree_node* %116, i32 %flag) #7, !dbg !6864
  call void @llvm.dbg.value(metadata %union.tree_node* %call853, metadata !6491, metadata !DIExpression()), !dbg !6865
  %type855 = getelementptr inbounds %union.tree_node, %union.tree_node* %call853, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6866
  %117 = load %union.tree_node*, %union.tree_node** %type855, align 8, !dbg !6866
  %118 = load %union.tree_node*, %union.tree_node** %operands851, align 8, !dbg !6866
  %call859 = tail call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %117, %union.tree_node* %118, %union.tree_node* %call853) #6, !dbg !6866
  call void @llvm.dbg.value(metadata %union.tree_node* %call859, metadata !6473, metadata !DIExpression()), !dbg !6499
  %bf.load861 = load i64, i64* %107, align 8, !dbg !6867
  %bf.cast86431 = and i64 %bf.load861, 8589934592, !dbg !6867
  %tobool865 = icmp eq i64 %bf.cast86431, 0, !dbg !6867
  br i1 %tobool865, label %cond.end868, label %cond.true866, !dbg !6867

cond.true866:                                     ; preds = %if.then848
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3648, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6867
  %bf.load871.pre = load i64, i64* %107, align 8, !dbg !6868
  br label %cond.end868, !dbg !6867

cond.end868:                                      ; preds = %if.then848, %cond.true866
  %bf.load871 = phi i64 [ %bf.load861, %if.then848 ], [ %bf.load871.pre, %cond.true866 ], !dbg !6868
  %bf.cast874 = and i64 %bf.load871, 17179869184, !dbg !6868
  %119 = getelementptr inbounds %union.tree_node, %union.tree_node* %call859, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6869
  %bf.load876 = load i64, i64* %119, align 8, !dbg !6870
  %bf.clear877 = and i64 %bf.load876, -17179869185, !dbg !6870
  %bf.set878 = or i64 %bf.clear877, %bf.cast874, !dbg !6870
  store i64 %bf.set878, i64* %119, align 8, !dbg !6870
  br label %return_build_unary_op

if.end880:                                        ; preds = %if.end841
  %120 = load %union.tree_node*, %union.tree_node** %type725, align 8, !dbg !6871
  call void @llvm.dbg.value(metadata %union.tree_node* %120, metadata !6470, metadata !DIExpression()), !dbg !6499
  %arrayidx888 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast84516, !dbg !6872
  %121 = load i32, i32* %arrayidx888, align 4, !dbg !6872
  %cmp889 = icmp eq i32 %121, 3, !dbg !6872
  br i1 %cmp889, label %land.lhs.true900, label %lor.lhs.false891, !dbg !6874

lor.lhs.false891:                                 ; preds = %if.end880
  %cmp898 = icmp eq i32 %121, 4, !dbg !6875
  br i1 %cmp898, label %land.lhs.true900, label %if.end931, !dbg !6876

land.lhs.true900:                                 ; preds = %lor.lhs.false891, %if.end880
  %bf.cast90526 = and i64 %bf.load916, 1048576, !dbg !6877
  %tobool906 = icmp eq i64 %bf.cast90526, 0, !dbg !6877
  br i1 %tobool906, label %lor.lhs.false907, label %if.then914, !dbg !6878

lor.lhs.false907:                                 ; preds = %land.lhs.true900
  %bf.cast91227 = and i64 %bf.load916, 524288, !dbg !6879
  %tobool913 = icmp eq i64 %bf.cast91227, 0, !dbg !6879
  br i1 %tobool913, label %if.end931, label %if.then914, !dbg !6880

if.then914:                                       ; preds = %lor.lhs.false907, %land.lhs.true900
  %bf.cast91928 = lshr i64 %bf.load916, 20, !dbg !6881
  %bf.cast91928.lobit = and i64 %bf.cast91928, 1, !dbg !6881
  %bf.cast92629 = lshr i64 %bf.load916, 18, !dbg !6881
  %122 = and i64 %bf.cast92629, 2, !dbg !6881
  %or92930 = or i64 %bf.cast91928.lobit, %122, !dbg !6881
  %or929 = trunc i64 %or92930 to i32, !dbg !6881
  %call930 = tail call %union.tree_node* @c_build_qualified_type(%union.tree_node* %120, i32 %or929) #7, !dbg !6881
  call void @llvm.dbg.value(metadata %union.tree_node* %call930, metadata !6470, metadata !DIExpression()), !dbg !6499
  br label %if.end931, !dbg !6882

if.end931:                                        ; preds = %lor.lhs.false907, %if.then914, %lor.lhs.false891
  %argtype.0 = phi %union.tree_node* [ %call930, %if.then914 ], [ %120, %lor.lhs.false907 ], [ %120, %lor.lhs.false891 ], !dbg !6883
  call void @llvm.dbg.value(metadata %union.tree_node* %argtype.0, metadata !6470, metadata !DIExpression()), !dbg !6499
  %call932 = tail call zeroext i8 @c_mark_addressable(%union.tree_node* %arg.2) #7, !dbg !6884
  %tobool933 = icmp eq i8 %call932, 0, !dbg !6884
  br i1 %tobool933, label %if.then934, label %if.end935, !dbg !6886

if.then934:                                       ; preds = %if.end931
  %123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6887
  br label %cleanup1071, !dbg !6888

if.end935:                                        ; preds = %if.end931
  %bf.load937 = load i64, i64* %107, align 8, !dbg !6889
  %bf.cast93917 = and i64 %bf.load937, 65535, !dbg !6889
  %cmp940 = icmp eq i64 %bf.cast93917, 41, !dbg !6889
  br i1 %cmp940, label %lor.lhs.false942, label %cond.end954, !dbg !6889

lor.lhs.false942:                                 ; preds = %if.end935
  %operands944 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6889
  %arrayidx945 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands944, i64 1, !dbg !6889
  %124 = bitcast %union.tree_node** %arrayidx945 to %struct.tree_decl_common**, !dbg !6889
  %125 = load %struct.tree_decl_common*, %struct.tree_decl_common** %124, align 8, !dbg !6889
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %125, i64 0, i32 2, !dbg !6889
  %126 = bitcast i40* %lang_flag_4 to i64*, !dbg !6889
  %bf.load946 = load i64, i64* %126, align 8, !dbg !6889
  %bf.cast94918 = and i64 %bf.load946, 524288, !dbg !6889
  %cmp950 = icmp eq i64 %bf.cast94918, 0, !dbg !6889
  br i1 %cmp950, label %cond.end954, label %cond.true952, !dbg !6889

cond.true952:                                     ; preds = %lor.lhs.false942
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3671, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6889
  br label %cond.end954, !dbg !6889

cond.end954:                                      ; preds = %lor.lhs.false942, %if.end935, %cond.true952
  %call956 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %argtype.0) #6, !dbg !6890
  call void @llvm.dbg.value(metadata %union.tree_node* %call956, metadata !6470, metadata !DIExpression()), !dbg !6499
  %call957 = tail call %union.tree_node* @get_base_address(%union.tree_node* %arg.2) #6, !dbg !6891
  call void @llvm.dbg.value(metadata %union.tree_node* %call957, metadata !6472, metadata !DIExpression()), !dbg !6499
  %tobool958 = icmp eq %union.tree_node* %call957, null, !dbg !6892
  br i1 %tobool958, label %if.end987, label %land.lhs.true959, !dbg !6893

land.lhs.true959:                                 ; preds = %cond.end954
  %127 = getelementptr inbounds %union.tree_node, %union.tree_node* %call957, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6894
  %bf.load961 = load i64, i64* %127, align 8, !dbg !6894
  %bf.cast96324 = and i64 %bf.load961, 65535, !dbg !6895
  %cmp964 = icmp eq i64 %bf.cast96324, 47, !dbg !6895
  br i1 %cmp964, label %land.lhs.true966, label %if.end987, !dbg !6896

land.lhs.true966:                                 ; preds = %land.lhs.true959
  %operands968 = getelementptr inbounds %union.tree_node, %union.tree_node* %call957, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6897
  %128 = bitcast %union.tree_node** %operands968 to i64**, !dbg !6897
  %129 = load i64*, i64** %128, align 8, !dbg !6897
  %bf.load971 = load i64, i64* %129, align 8, !dbg !6897
  %bf.cast97425 = and i64 %bf.load971, 131072, !dbg !6897
  %tobool975 = icmp eq i64 %bf.cast97425, 0, !dbg !6897
  br i1 %tobool975, label %if.end987, label %if.then976, !dbg !6898

if.then976:                                       ; preds = %land.lhs.true966
  %130 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !6899
  %call978 = tail call %union.tree_node* @fold_offsetof(%union.tree_node* %arg.2, %union.tree_node* nonnull %call957) #6, !dbg !6900
  %call979 = tail call %union.tree_node* @fold_convert_loc(i32 %location, %union.tree_node* %130, %union.tree_node* %call978) #6, !dbg !6901
  call void @llvm.dbg.value(metadata %union.tree_node* %call979, metadata !6494, metadata !DIExpression()), !dbg !6902
  %131 = load %union.tree_node*, %union.tree_node** %operands968, align 8, !dbg !6903
  %call983 = tail call %union.tree_node* @fold_convert_loc(i32 %location, %union.tree_node* %call956, %union.tree_node* %131) #6, !dbg !6904
  call void @llvm.dbg.value(metadata %union.tree_node* %call983, metadata !6497, metadata !DIExpression()), !dbg !6902
  %call984 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %location, i32 66, %union.tree_node* %call956, %union.tree_node* %call983, %union.tree_node* %call979) #6, !dbg !6905
  call void @llvm.dbg.value(metadata %union.tree_node* %call984, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %return_build_unary_op

if.end987:                                        ; preds = %land.lhs.true966, %cond.end954, %land.lhs.true959
  %call988 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call956, %union.tree_node* %arg.2) #6, !dbg !6906
  call void @llvm.dbg.value(metadata %union.tree_node* %call988, metadata !6472, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %call988, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %return_build_unary_op, !dbg !6907

sw.default:                                       ; preds = %if.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3695, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6908
  br label %sw.epilog, !dbg !6909

sw.epilog:                                        ; preds = %if.else108, %if.then139, %if.then147, %if.else163, %if.else179, %if.then181, %if.then165, %if.then141, %if.then150, %if.then110, %sw.default, %if.end90
  %arg.10 = phi %union.tree_node* [ %arg.2, %sw.default ], [ %call91, %if.end90 ], [ %arg.2, %if.else108 ], [ %call111, %if.then110 ], [ %arg.2, %if.then139 ], [ %call142, %if.then141 ], [ %arg.2, %if.then147 ], [ %call151, %if.then150 ], [ %arg.2, %if.else163 ], [ %call166, %if.then165 ], [ %arg.2, %if.else179 ], [ %call182, %if.then181 ], !dbg !6499
  %code.addr.6 = phi i32 [ %code, %sw.default ], [ 113, %if.end90 ], [ 79, %if.else108 ], [ 79, %if.then110 ], [ 90, %if.then139 ], [ 90, %if.then141 ], [ 124, %if.then147 ], [ 124, %if.then150 ], [ 82, %if.else163 ], [ 82, %if.then165 ], [ 124, %if.else179 ], [ 124, %if.then181 ]
  call void @llvm.dbg.value(metadata i32 %code.addr.6, metadata !6466, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.10, metadata !6469, metadata !DIExpression()), !dbg !6499
  %type993 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6910
  %132 = load %union.tree_node*, %union.tree_node** %type993, align 8, !dbg !6910
  call void @llvm.dbg.value(metadata %union.tree_node* %132, metadata !6470, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %132, metadata !6470, metadata !DIExpression()), !dbg !6499
  %133 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6912
  %bf.load996 = load i64, i64* %133, align 8, !dbg !6912
  %bf.cast99857 = and i64 %bf.load996, 65535, !dbg !6914
  %cmp999 = icmp eq i64 %bf.cast99857, 23, !dbg !6914
  br i1 %cmp999, label %if.then1001, label %if.else1009, !dbg !6915

if.then1001:                                      ; preds = %sw.epilog
  %134 = load i32, i32* @require_constant_value, align 4, !dbg !6916
  %tobool1002 = icmp eq i32 %134, 0, !dbg !6916
  br i1 %tobool1002, label %cond.false1005, label %cond.true1003, !dbg !6916

cond.true1003:                                    ; preds = %if.then1001
  %call1004 = tail call %union.tree_node* @fold_build1_initializer_loc(i32 %location, i32 %code.addr.6, %union.tree_node* %132, %union.tree_node* %arg.10) #6, !dbg !6917
  br label %return_build_unary_op, !dbg !6916

cond.false1005:                                   ; preds = %if.then1001
  %call1006 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %location, i32 %code.addr.6, %union.tree_node* %132, %union.tree_node* %arg.10) #6, !dbg !6918
  br label %return_build_unary_op, !dbg !6916

if.else1009:                                      ; preds = %sw.epilog
  %call1010 = tail call %union.tree_node* @build1_stat(i32 %code.addr.6, %union.tree_node* %132, %union.tree_node* %arg.10) #6, !dbg !6919
  call void @llvm.dbg.value(metadata %union.tree_node* %call1010, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %return_build_unary_op

return_build_unary_op:                            ; preds = %land.lhs.true250.return_build_unary_op_crit_edge, %if.then241.return_build_unary_op_crit_edge, %if.end291, %if.end333, %if.then783, %if.else1009, %cond.false1005, %cond.true1003, %land.lhs.true335, %if.then342, %land.lhs.true293, %if.then300, %if.end201, %land.lhs.true211, %cond.end, %cond.true259, %cleanup, %cleanup505, %cleanup722, %cond.end868, %if.then976, %if.end987
  %eptype.3 = phi %union.tree_node* [ %eptype.0, %cond.end868 ], [ %eptype.0, %if.then976 ], [ %eptype.0, %if.end987 ], [ %eptype.0, %cleanup ], [ %eptype.0, %cleanup505 ], [ %eptype.0, %cleanup722 ], [ %eptype.0, %cond.true259 ], [ undef, %land.lhs.true250.return_build_unary_op_crit_edge ], [ undef, %if.then241.return_build_unary_op_crit_edge ], [ %eptype.0, %cond.end ], [ %eptype.0, %land.lhs.true211 ], [ %eptype.0, %if.end201 ], [ %40, %if.then300 ], [ %eptype.0, %land.lhs.true293 ], [ null, %if.end291 ], [ %50, %if.then342 ], [ %eptype.0, %land.lhs.true335 ], [ null, %if.end333 ], [ %eptype.0, %if.then783 ], [ %eptype.0, %cond.true1003 ], [ %eptype.0, %cond.false1005 ], [ %eptype.0, %if.else1009 ], !dbg !6499
  %ret.8 = phi %union.tree_node* [ %call859, %cond.end868 ], [ %call984, %if.then976 ], [ %call988, %if.end987 ], [ %ret.4, %cleanup ], [ %ret.5, %cleanup505 ], [ %ret.6, %cleanup722 ], [ %call203, %cond.true259 ], [ undef, %land.lhs.true250.return_build_unary_op_crit_edge ], [ undef, %if.then241.return_build_unary_op_crit_edge ], [ %call203, %cond.end ], [ %call203, %land.lhs.true211 ], [ %call203, %if.end201 ], [ %ret.1, %if.then300 ], [ %ret.1, %land.lhs.true293 ], [ %ret.1, %if.end291 ], [ %ret.3, %if.then342 ], [ %ret.3, %land.lhs.true335 ], [ %ret.3, %if.end333 ], [ %109, %if.then783 ], [ %call1004, %cond.true1003 ], [ %call1006, %cond.false1005 ], [ %call1010, %if.else1009 ], !dbg !6499
  %location.addr.1 = phi i32 [ %location, %cond.end868 ], [ %location, %if.then976 ], [ %location, %if.end987 ], [ %location, %cleanup ], [ %location, %cleanup505 ], [ %location, %cleanup722 ], [ %31, %cond.true259 ], [ undef, %land.lhs.true250.return_build_unary_op_crit_edge ], [ undef, %if.then241.return_build_unary_op_crit_edge ], [ %location, %cond.end ], [ %location, %land.lhs.true211 ], [ %location, %if.end201 ], [ %location, %if.then300 ], [ %location, %land.lhs.true293 ], [ %location, %if.end291 ], [ %location, %if.then342 ], [ %location, %land.lhs.true335 ], [ %location, %if.end333 ], [ %location, %if.then783 ], [ %location, %cond.true1003 ], [ %location, %cond.false1005 ], [ %location, %if.else1009 ]
  call void @llvm.dbg.value(metadata i32 %location.addr.1, metadata !6465, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.8, metadata !6473, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %eptype.3, metadata !6474, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.label(metadata !6498), !dbg !6920
  %135 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6921
  %cmp1016 = icmp eq %union.tree_node* %ret.8, %135, !dbg !6921
  br i1 %cmp1016, label %cond.true1018, label %cond.end1020, !dbg !6921

cond.true1018:                                    ; preds = %return_build_unary_op
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3707, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6921
  br label %cond.end1020, !dbg !6921

cond.end1020:                                     ; preds = %return_build_unary_op, %cond.true1018
  %136 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6922
  %bf.load1023 = load i64, i64* %136, align 8, !dbg !6922
  %bf.cast102519 = and i64 %bf.load1023, 65535, !dbg !6924
  %cmp1026 = icmp eq i64 %bf.cast102519, 23, !dbg !6924
  br i1 %cmp1026, label %land.lhs.true1028, label %if.else1053, !dbg !6925

land.lhs.true1028:                                ; preds = %cond.end1020
  %bf.cast103321 = and i64 %bf.load1023, 134217728, !dbg !6926
  %tobool1034 = icmp eq i64 %bf.cast103321, 0, !dbg !6926
  br i1 %tobool1034, label %land.lhs.true1035, label %if.else1053, !dbg !6927

land.lhs.true1035:                                ; preds = %land.lhs.true1028
  %137 = getelementptr inbounds %union.tree_node, %union.tree_node* %xarg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6928
  %bf.load1037 = load i64, i64* %137, align 8, !dbg !6928
  %bf.cast103922 = and i64 %bf.load1037, 65535, !dbg !6929
  %cmp1040 = icmp eq i64 %bf.cast103922, 23, !dbg !6929
  br i1 %cmp1040, label %land.lhs.true1042, label %if.then1049, !dbg !6930

land.lhs.true1042:                                ; preds = %land.lhs.true1035
  %bf.cast104723 = and i64 %bf.load1037, 134217728, !dbg !6931
  %tobool1048 = icmp eq i64 %bf.cast104723, 0, !dbg !6931
  br i1 %tobool1048, label %if.else1053, label %if.then1049, !dbg !6932

if.then1049:                                      ; preds = %land.lhs.true1042, %land.lhs.true1035
  %type1051 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6933
  %138 = load %union.tree_node*, %union.tree_node** %type1051, align 8, !dbg !6933
  %call1052 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %138, %union.tree_node* %ret.8) #6, !dbg !6933
  call void @llvm.dbg.value(metadata %union.tree_node* %call1052, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end1066, !dbg !6934

if.else1053:                                      ; preds = %land.lhs.true1042, %land.lhs.true1028, %cond.end1020
  %cmp1058 = icmp ne i64 %bf.cast102519, 23, !dbg !6935
  %or.cond8 = and i1 %cmp1058, %4, !dbg !6937
  br i1 %or.cond8, label %if.then1063, label %if.end1066, !dbg !6937

if.then1063:                                      ; preds = %if.else1053
  %call1064 = tail call fastcc %union.tree_node* @note_integer_operands(%union.tree_node* %ret.8) #7, !dbg !6938
  call void @llvm.dbg.value(metadata %union.tree_node* %call1064, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end1066, !dbg !6939

if.end1066:                                       ; preds = %if.else1053, %if.then1063, %if.then1049
  %ret.10 = phi %union.tree_node* [ %call1052, %if.then1049 ], [ %call1064, %if.then1063 ], [ %ret.8, %if.else1053 ], !dbg !6940
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.10, metadata !6473, metadata !DIExpression()), !dbg !6499
  %tobool1067 = icmp eq %union.tree_node* %eptype.3, null, !dbg !6941
  br i1 %tobool1067, label %if.end1070, label %if.then1068, !dbg !6943

if.then1068:                                      ; preds = %if.end1066
  %call1069 = tail call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %eptype.3, %union.tree_node* %ret.10) #6, !dbg !6944
  call void @llvm.dbg.value(metadata %union.tree_node* %call1069, metadata !6473, metadata !DIExpression()), !dbg !6499
  br label %if.end1070, !dbg !6945

if.end1070:                                       ; preds = %if.end1066, %if.then1068
  %ret.11 = phi %union.tree_node* [ %call1069, %if.then1068 ], [ %ret.10, %if.end1066 ], !dbg !6499
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.11, metadata !6473, metadata !DIExpression()), !dbg !6499
  tail call void @protected_set_expr_location(%union.tree_node* %ret.11, i32 %location.addr.1) #6, !dbg !6946
  br label %cleanup1071, !dbg !6947

cleanup1071:                                      ; preds = %if.then811, %cond.end824, %cleanup, %cleanup505, %cleanup722, %if.end1070, %if.then934, %if.then839, %if.then789, %if.end527, %if.then391, %if.then200, %if.then178, %if.then162, %if.else153, %if.then107, %if.then85, %if.then59, %if.then46
  %retval.4 = phi %union.tree_node* [ %8, %if.then46 ], [ %11, %if.then59 ], [ %ret.11, %if.end1070 ], [ %call793, %if.then789 ], [ %123, %if.then934 ], [ %115, %if.then839 ], [ %53, %cleanup ], [ %71, %cleanup505 ], [ %73, %if.end527 ], [ %retval.2, %cleanup722 ], [ %57, %if.then391 ], [ %25, %if.then200 ], [ %24, %if.then178 ], [ %23, %if.then162 ], [ %21, %if.else153 ], [ %16, %if.then107 ], [ %15, %if.then85 ], [ %call829, %cond.end824 ], [ %111, %if.then811 ]
  ret %union.tree_node* %retval.4, !dbg !6948
}

declare dso_local void @overflow_warning(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @parser_build_binary_op(%struct.c_expr* noalias sret %agg.result, i32 %location, i32 %code, %struct.c_expr* byval(%struct.c_expr) align 8 %arg1, %struct.c_expr* byval(%struct.c_expr) align 8 %arg2) local_unnamed_addr #5 !dbg !6949 {
entry:
  call void @llvm.dbg.value(metadata i32 %location, metadata !6953, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.value(metadata i32 %code, metadata !6954, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata %struct.c_expr* %arg1, metadata !6955, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata %struct.c_expr* %arg2, metadata !6956, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !6957, metadata !DIExpression()), !dbg !6965
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %arg1, i64 0, i32 1, !dbg !6966
  %0 = load i32, i32* %original_code, align 8, !dbg !6966
  call void @llvm.dbg.value(metadata i32 %0, metadata !6958, metadata !DIExpression()), !dbg !6962
  %original_code1 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %arg2, i64 0, i32 1, !dbg !6967
  %1 = load i32, i32* %original_code1, align 8, !dbg !6967
  call void @llvm.dbg.value(metadata i32 %1, metadata !6959, metadata !DIExpression()), !dbg !6962
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %arg1, i64 0, i32 2, !dbg !6968
  %2 = load %union.tree_node*, %union.tree_node** %original_type, align 8, !dbg !6968
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !6969
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6969

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6969

cond.false:                                       ; preds = %entry
  %3 = bitcast %struct.c_expr* %arg1 to %struct.tree_common**, !dbg !6970
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !6970
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !6970
  br label %cond.end, !dbg !6969

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %union.tree_node** [ %original_type, %cond.true ], [ %type, %cond.false ]
  %cond = load %union.tree_node*, %union.tree_node** %cond.in, align 8, !dbg !6969
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !6960, metadata !DIExpression()), !dbg !6962
  %original_type3 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %arg2, i64 0, i32 2, !dbg !6971
  %5 = load %union.tree_node*, %union.tree_node** %original_type3, align 8, !dbg !6971
  %tobool4 = icmp eq %union.tree_node* %5, null, !dbg !6972
  br i1 %tobool4, label %cond.false7, label %cond.true5, !dbg !6972

cond.true5:                                       ; preds = %cond.end
  %value14.phi.trans.insert = getelementptr inbounds %struct.c_expr, %struct.c_expr* %arg2, i64 0, i32 0, !dbg !6962
  %.pre = load %union.tree_node*, %union.tree_node** %value14.phi.trans.insert, align 8, !dbg !6973
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6972
  br label %cond.end11, !dbg !6972

cond.false7:                                      ; preds = %cond.end
  %7 = bitcast %struct.c_expr* %arg2 to %struct.tree_common**, !dbg !6974
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !6974
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !6974
  %9 = bitcast %struct.tree_common* %8 to %union.tree_node*, !dbg !6972
  %10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 0, i32 0, !dbg !6972
  br label %cond.end11, !dbg !6972

cond.end11:                                       ; preds = %cond.false7, %cond.true5
  %11 = phi i64* [ %6, %cond.true5 ], [ %10, %cond.false7 ]
  %12 = phi i64* [ %6, %cond.true5 ], [ %10, %cond.false7 ]
  %13 = phi %union.tree_node* [ %.pre, %cond.true5 ], [ %9, %cond.false7 ]
  %14 = phi %union.tree_node* [ %.pre, %cond.true5 ], [ %9, %cond.false7 ]
  %15 = phi %union.tree_node* [ %.pre, %cond.true5 ], [ %9, %cond.false7 ]
  %16 = phi %union.tree_node* [ %.pre, %cond.true5 ], [ %9, %cond.false7 ], !dbg !6973
  %cond12.in = phi %union.tree_node** [ %original_type3, %cond.true5 ], [ %type10, %cond.false7 ]
  %cond12 = load %union.tree_node*, %union.tree_node** %cond12.in, align 8, !dbg !6972
  call void @llvm.dbg.value(metadata %union.tree_node* %cond12, metadata !6961, metadata !DIExpression()), !dbg !6962
  %value13 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %arg1, i64 0, i32 0, !dbg !6975
  %17 = load %union.tree_node*, %union.tree_node** %value13, align 8, !dbg !6975
  %call = tail call %union.tree_node* @build_binary_op(i32 %location, i32 %code, %union.tree_node* %17, %union.tree_node* %16, i32 1) #7, !dbg !6976
  %value15 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 0, !dbg !6977
  store %union.tree_node* %call, %union.tree_node** %value15, align 8, !dbg !6978
  %original_code16 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !6979
  store i32 %code, i32* %original_code16, align 8, !dbg !6980
  %original_type17 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !6981
  store %union.tree_node* null, %union.tree_node** %original_type17, align 8, !dbg !6982
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6983
  %bf.load = load i64, i64* %.cast, align 8, !dbg !6983
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6985
  %cmp = icmp eq i64 %bf.cast1, 0, !dbg !6985
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6986
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6986
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6986

if.end:                                           ; preds = %cond.end11
  %cmp19 = icmp eq i32 %location, 0, !dbg !6987
  br i1 %cmp19, label %if.end22, label %if.then20, !dbg !6989

if.then20:                                        ; preds = %if.end
  tail call void @protected_set_expr_location(%union.tree_node* %call, i32 %location) #6, !dbg !6990
  br label %if.end22, !dbg !6990

if.end22:                                         ; preds = %if.end, %if.then20
  %20 = load i32, i32* @warn_parentheses, align 4, !dbg !6991
  %tobool23 = icmp eq i32 %20, 0, !dbg !6991
  br i1 %tobool23, label %if.end27, label %if.then24, !dbg !6993

if.then24:                                        ; preds = %if.end22
  tail call void @warn_about_parentheses(i32 %code, i32 %0, %union.tree_node* %17, i32 %1, %union.tree_node* %15) #6, !dbg !6994
  br label %if.end27, !dbg !6994

if.end27:                                         ; preds = %if.end22, %if.then24
  %21 = load i32, i32* @warn_logical_op, align 4, !dbg !6995
  %tobool28 = icmp eq i32 %21, 0, !dbg !6995
  br i1 %tobool28, label %if.end35, label %if.then29, !dbg !6997

if.then29:                                        ; preds = %if.end27
  %22 = load i32, i32* @input_location, align 4, !dbg !6998
  %type32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6999
  %23 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !6999
  tail call void @warn_logical_operator(i32 %22, i32 %code, %union.tree_node* %23, i32 %0, %union.tree_node* %17, i32 %1, %union.tree_node* %14) #6, !dbg !7000
  br label %if.end35, !dbg !7000

if.end35:                                         ; preds = %if.end27, %if.then29
  %code.off = add i32 %code, -101, !dbg !7001
  %switch = icmp ult i32 %code.off, 2, !dbg !7001
  br i1 %switch, label %if.then38, label %if.else, !dbg !7001

if.then38:                                        ; preds = %if.end35
  %cmp39 = icmp eq i32 %0, 28, !dbg !7003
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false43, !dbg !7006

land.lhs.true:                                    ; preds = %if.then38
  %call41 = tail call i32 @integer_zerop(%union.tree_node* %13) #6, !dbg !7007
  %tobool42 = icmp eq i32 %call41, 0, !dbg !7007
  br i1 %tobool42, label %if.then49, label %lor.lhs.false43, !dbg !7008

lor.lhs.false43:                                  ; preds = %land.lhs.true, %if.then38
  %cmp44 = icmp eq i32 %1, 28, !dbg !7009
  br i1 %cmp44, label %land.lhs.true45, label %if.end60, !dbg !7010

land.lhs.true45:                                  ; preds = %lor.lhs.false43
  %call47 = tail call i32 @integer_zerop(%union.tree_node* %17) #6, !dbg !7011
  %tobool48 = icmp eq i32 %call47, 0, !dbg !7011
  br i1 %tobool48, label %if.then49, label %if.end60, !dbg !7012

if.then49:                                        ; preds = %land.lhs.true, %land.lhs.true45
  %call50 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 33, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7013
  br label %if.end60, !dbg !7013

if.else:                                          ; preds = %if.end35
  %idxprom = sext i32 %code to i64, !dbg !7014
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !7014
  %24 = load i32, i32* %arrayidx, align 4, !dbg !7014
  %cmp52 = icmp eq i32 %24, 5, !dbg !7016
  br i1 %cmp52, label %land.lhs.true53, label %if.end60, !dbg !7017

land.lhs.true53:                                  ; preds = %if.else
  %cmp54 = icmp eq i32 %0, 28, !dbg !7018
  %cmp56 = icmp eq i32 %1, 28, !dbg !7019
  %or.cond = or i1 %cmp54, %cmp56, !dbg !7020
  br i1 %or.cond, label %if.then57, label %if.end60, !dbg !7020

if.then57:                                        ; preds = %land.lhs.true53
  %call58 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 33, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !7021
  br label %if.end60, !dbg !7021

if.end60:                                         ; preds = %land.lhs.true45, %if.else, %if.then57, %land.lhs.true53, %lor.lhs.false43, %if.then49
  %bf.load63 = load i64, i64* %18, align 8, !dbg !7022
  %bf.cast65 = and i64 %bf.load63, 65535, !dbg !7022
  %arrayidx67 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast65, !dbg !7022
  %25 = load i32, i32* %arrayidx67, align 4, !dbg !7022
  %cmp68 = icmp eq i32 %25, 1, !dbg !7022
  br i1 %cmp68, label %land.lhs.true69, label %if.end112, !dbg !7022

land.lhs.true69:                                  ; preds = %if.end60
  %bf.cast744 = and i64 %bf.load63, 134217728, !dbg !7022
  %tobool75 = icmp eq i64 %bf.cast744, 0, !dbg !7022
  br i1 %tobool75, label %if.end112, label %land.lhs.true76, !dbg !7024

land.lhs.true76:                                  ; preds = %land.lhs.true69
  %bf.load79 = load i64, i64* %19, align 8, !dbg !7025
  %bf.cast81 = and i64 %bf.load79, 65535, !dbg !7025
  %arrayidx83 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast81, !dbg !7025
  %26 = load i32, i32* %arrayidx83, align 4, !dbg !7025
  %cmp84 = icmp eq i32 %26, 1, !dbg !7025
  br i1 %cmp84, label %land.lhs.true85, label %land.lhs.true93, !dbg !7025

land.lhs.true85:                                  ; preds = %land.lhs.true76
  %bf.cast916 = and i64 %bf.load79, 134217728, !dbg !7025
  %tobool92 = icmp eq i64 %bf.cast916, 0, !dbg !7025
  br i1 %tobool92, label %land.lhs.true93, label %if.end112, !dbg !7026

land.lhs.true93:                                  ; preds = %land.lhs.true85, %land.lhs.true76
  %bf.load96 = load i64, i64* %12, align 8, !dbg !7027
  %bf.cast98 = and i64 %bf.load96, 65535, !dbg !7027
  %arrayidx100 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast98, !dbg !7027
  %27 = load i32, i32* %arrayidx100, align 4, !dbg !7027
  %cmp101 = icmp eq i32 %27, 1, !dbg !7027
  br i1 %cmp101, label %land.lhs.true102, label %if.then110, !dbg !7027

land.lhs.true102:                                 ; preds = %land.lhs.true93
  %bf.load105 = load i64, i64* %11, align 8, !dbg !7027
  %bf.cast1085 = and i64 %bf.load105, 134217728, !dbg !7027
  %tobool109 = icmp eq i64 %bf.cast1085, 0, !dbg !7027
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !7028

if.then110:                                       ; preds = %land.lhs.true102, %land.lhs.true93
  tail call void @overflow_warning(i32 %location, %union.tree_node* %call) #6, !dbg !7029
  br label %if.end112, !dbg !7029

if.end112:                                        ; preds = %land.lhs.true85, %land.lhs.true102, %land.lhs.true69, %if.then110, %if.end60
  %28 = load i32, i32* @warn_enum_compare, align 4, !dbg !7030
  %tobool113 = icmp eq i32 %28, 0, !dbg !7030
  br i1 %tobool113, label %cleanup, label %land.lhs.true114, !dbg !7032

land.lhs.true114:                                 ; preds = %if.end112
  %idxprom115 = sext i32 %code to i64, !dbg !7033
  %arrayidx116 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom115, !dbg !7033
  %29 = load i32, i32* %arrayidx116, align 4, !dbg !7033
  %cmp117 = icmp eq i32 %29, 5, !dbg !7034
  br i1 %cmp117, label %land.lhs.true118, label %cleanup, !dbg !7035

land.lhs.true118:                                 ; preds = %land.lhs.true114
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7036
  %bf.load120 = load i64, i64* %30, align 8, !dbg !7036
  %bf.cast1222 = and i64 %bf.load120, 65535, !dbg !7037
  %cmp123 = icmp eq i64 %bf.cast1222, 6, !dbg !7037
  br i1 %cmp123, label %land.lhs.true124, label %cleanup, !dbg !7038

land.lhs.true124:                                 ; preds = %land.lhs.true118
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7039
  %bf.load126 = load i64, i64* %31, align 8, !dbg !7039
  %bf.cast1283 = and i64 %bf.load126, 65535, !dbg !7040
  %cmp129 = icmp eq i64 %bf.cast1283, 6, !dbg !7040
  br i1 %cmp129, label %land.lhs.true130, label %cleanup, !dbg !7041

land.lhs.true130:                                 ; preds = %land.lhs.true124
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7042
  %33 = load %union.tree_node*, %union.tree_node** %32, align 8, !dbg !7042
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond12, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7043
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !7043
  %cmp134 = icmp eq %union.tree_node* %33, %35, !dbg !7044
  br i1 %cmp134, label %cleanup, label %if.then135, !dbg !7045

if.then135:                                       ; preds = %land.lhs.true130
  %call136 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 76, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i64 0, i64 0), %union.tree_node* %cond, %union.tree_node* %cond12) #6, !dbg !7046
  br label %cleanup, !dbg !7046

cleanup:                                          ; preds = %land.lhs.true130, %if.end112, %land.lhs.true114, %land.lhs.true118, %land.lhs.true124, %if.then135, %cond.end11
  ret void, !dbg !7047
}

declare dso_local void @warn_about_parentheses(i32, i32, %union.tree_node*, i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @warn_logical_operator(i32, i32, %union.tree_node*, i32, %union.tree_node*, i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %expr) unnamed_addr #0 !dbg !7048 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7050, metadata !DIExpression()), !dbg !7051
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7052
  %bf.load = load i64, i64* %0, align 8, !dbg !7052
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7054
  %cmp = icmp eq i64 %bf.cast1, 189, !dbg !7054
  br i1 %cmp, label %if.then, label %return, !dbg !7055

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7056
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !7056
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7056
  br label %return, !dbg !7057

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ %expr, %entry ], !dbg !7058
  ret %union.tree_node* %retval.0, !dbg !7059
}

declare dso_local %union.tree_node* @non_lvalue_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %location, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !7060 {
entry:
  call void @llvm.dbg.value(metadata i32 %location, metadata !7062, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7063, metadata !DIExpression()), !dbg !7066
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7067
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !7067
  %1 = load i64*, i64** %0, align 8, !dbg !7067
  %bf.load = load i64, i64* %1, align 8, !dbg !7067
  %2 = trunc i64 %bf.load to i16, !dbg !7067
  switch i16 %2, label %sw.epilog [
    i16 15, label %sw.bb
    i16 16, label %sw.bb1
    i16 17, label %sw.bb2
    i16 20, label %sw.bb3
  ], !dbg !7068

sw.bb:                                            ; preds = %entry
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.139, i64 0, i64 0)) #6, !dbg !7069
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7071
  br label %cleanup, !dbg !7072

sw.bb1:                                           ; preds = %entry
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.140, i64 0, i64 0)) #6, !dbg !7073
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7074
  br label %cleanup, !dbg !7075

sw.bb2:                                           ; preds = %entry
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.141, i64 0, i64 0)) #6, !dbg !7076
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7077
  br label %cleanup, !dbg !7078

sw.bb3:                                           ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 9902, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7079
  br label %sw.epilog, !dbg !7079

sw.epilog:                                        ; preds = %sw.bb3, %entry
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7080
  %bf.load5 = load i64, i64* %6, align 8, !dbg !7080
  %bf.cast73 = and i64 %bf.load5, 65535, !dbg !7081
  %cmp = icmp eq i64 %bf.cast73, 23, !dbg !7081
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7082

land.rhs:                                         ; preds = %sw.epilog
  %bf.cast1113 = lshr i64 %bf.load5, 27
  %7 = trunc i64 %bf.cast1113 to i8
  %8 = and i8 %7, 1
  %9 = xor i8 %8, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.epilog
  %10 = phi i8 [ 0, %sw.epilog ], [ %9, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %10, metadata !7064, metadata !DIExpression()), !dbg !7066
  %11 = load i64*, i64** %0, align 8, !dbg !7083
  %bf.load15 = load i64, i64* %11, align 8, !dbg !7083
  %bf.cast174 = and i64 %bf.load15, 65535, !dbg !7083
  %cmp18 = icmp eq i64 %bf.cast174, 6, !dbg !7083
  br i1 %cmp18, label %land.rhs37, label %lor.lhs.false, !dbg !7083

lor.lhs.false:                                    ; preds = %land.end
  %cmp26 = icmp eq i64 %bf.cast174, 7, !dbg !7083
  br i1 %cmp26, label %land.rhs37, label %lor.lhs.false28, !dbg !7083

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %cmp35 = icmp eq i64 %bf.cast174, 8, !dbg !7083
  br i1 %cmp35, label %land.rhs37, label %land.end59, !dbg !7083

land.rhs37:                                       ; preds = %lor.lhs.false28, %lor.lhs.false, %land.end
  br i1 %cmp, label %land.end59, label %lor.rhs, !dbg !7083

lor.rhs:                                          ; preds = %land.rhs37
  %cmp48 = icmp eq i64 %bf.cast73, 189, !dbg !7083
  br i1 %cmp48, label %land.rhs50, label %land.end59, !dbg !7083

land.rhs50:                                       ; preds = %lor.rhs
  %bf.clear54 = and i64 %bf.load5, 8589934592, !dbg !7083
  %phitmp = icmp eq i64 %bf.clear54, 0
  br label %land.end59

land.end59:                                       ; preds = %land.rhs37, %land.rhs50, %lor.rhs, %lor.lhs.false28
  %12 = phi i1 [ true, %lor.lhs.false28 ], [ false, %land.rhs37 ], [ true, %lor.rhs ], [ %phitmp, %land.rhs50 ]
  br i1 %12, label %if.end, label %if.then, !dbg !7084

if.then:                                          ; preds = %land.end59
  %call = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %expr) #7, !dbg !7085
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7063, metadata !DIExpression()), !dbg !7066
  br label %if.end, !dbg !7087

if.end:                                           ; preds = %land.end59, %if.then
  %expr.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %expr, %land.end59 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !7063, metadata !DIExpression()), !dbg !7066
  %call63 = tail call %union.tree_node* @c_common_truthvalue_conversion(i32 %location, %union.tree_node* %expr.addr.0) #6, !dbg !7088
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !7063, metadata !DIExpression()), !dbg !7066
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7089
  %bf.load65 = load i64, i64* %13, align 8, !dbg !7089
  %bf.cast678 = and i64 %bf.load65, 65535, !dbg !7091
  %cmp68 = icmp ne i64 %bf.cast678, 23, !dbg !7091
  %or.cond.not = or i1 %12, %cmp68, !dbg !7092
  %tobool73 = icmp ne i8 %10, 0, !dbg !7093
  %or.cond1 = or i1 %or.cond.not, %tobool73, !dbg !7092
  br i1 %or.cond1, label %if.end83, label %if.then74, !dbg !7092

if.then74:                                        ; preds = %if.end
  %bf.cast799 = and i64 %bf.load65, 134217728, !dbg !7094
  %tobool80 = icmp eq i64 %bf.cast799, 0, !dbg !7094
  br i1 %tobool80, label %if.else, label %cleanup, !dbg !7097

if.else:                                          ; preds = %if.then74
  %call82 = tail call fastcc %union.tree_node* @note_integer_operands(%union.tree_node* %call63) #7, !dbg !7098
  br label %cleanup, !dbg !7099

if.end83:                                         ; preds = %if.end
  %or.cond2 = or i1 %cmp68, %tobool73, !dbg !7100
  br i1 %or.cond2, label %cleanup, label %if.then92, !dbg !7100

if.then92:                                        ; preds = %if.end83
  %type94 = getelementptr inbounds %union.tree_node, %union.tree_node* %call63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7102
  %14 = load %union.tree_node*, %union.tree_node** %type94, align 8, !dbg !7102
  %call95 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %14, %union.tree_node* %call63) #6, !dbg !7102
  br label %cleanup, !dbg !7103

cleanup:                                          ; preds = %if.then74, %if.end83, %if.then92, %if.else, %sw.bb2, %sw.bb1, %sw.bb
  %retval.0 = phi %union.tree_node* [ %call95, %if.then92 ], [ %call82, %if.else ], [ %5, %sw.bb2 ], [ %4, %sw.bb1 ], [ %3, %sw.bb ], [ %call63, %if.then74 ], [ %call63, %if.end83 ], !dbg !7066
  ret %union.tree_node* %retval.0, !dbg !7104
}

declare dso_local %union.tree_node* @invert_truthvalue_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @omit_one_operand_loc(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @lvalue_or_else(%union.tree_node* %ref, i32 %use) unnamed_addr #5 !dbg !7105 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %use, metadata !7110, metadata !DIExpression()), !dbg !7112
  %call = tail call zeroext i8 @lvalue_p(%union.tree_node* %ref) #7, !dbg !7113
  %conv = zext i8 %call to i32, !dbg !7113
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7111, metadata !DIExpression()), !dbg !7112
  %tobool = icmp eq i8 %call, 0, !dbg !7114
  br i1 %tobool, label %if.then, label %if.end, !dbg !7116

if.then:                                          ; preds = %entry
  tail call void @lvalue_error(i32 %use) #6, !dbg !7117
  br label %if.end, !dbg !7117

if.end:                                           ; preds = %entry, %if.then
  ret i32 %conv, !dbg !7118
}

declare dso_local %union.tree_node* @stabilize_reference(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_size_in_bytes(%union.tree_node* %type) unnamed_addr #5 !dbg !7119 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7123, metadata !DIExpression()), !dbg !7125
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7126
  %bf.load = load i64, i64* %0, align 8, !dbg !7126
  %1 = trunc i64 %bf.load to i16, !dbg !7126
  switch i16 %1, label %if.end [
    i16 20, label %if.then
    i16 19, label %if.then
    i16 0, label %if.then
  ], !dbg !7127

if.then:                                          ; preds = %entry, %entry, %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !7129
  br label %cleanup, !dbg !7130

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7131
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !7131
  %cmp5 = icmp eq %union.tree_node* %4, null, !dbg !7131
  br i1 %cmp5, label %lor.lhs.false6, label %if.end13, !dbg !7131

lor.lhs.false6:                                   ; preds = %if.end
  %bf.cast101 = and i64 %bf.load, 65535, !dbg !7131
  %cmp11 = icmp eq i64 %bf.cast101, 19, !dbg !7131
  br i1 %cmp11, label %if.end13, label %if.then12, !dbg !7133

if.then12:                                        ; preds = %lor.lhs.false6
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.186, i64 0, i64 0)) #6, !dbg !7134
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !7136
  br label %cleanup, !dbg !7137

if.end13:                                         ; preds = %if.end, %lor.lhs.false6
  %6 = load i32, i32* @input_location, align 4, !dbg !7138
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7139
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !7139
  %9 = load %struct.tree_type*, %struct.tree_type** bitcast ([11 x %union.tree_node*]* @integer_types to %struct.tree_type**), align 16, !dbg !7140
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 6, !dbg !7140
  %bf.load16 = load i32, i32* %precision, align 4, !dbg !7140
  %bf.clear17 = lshr i32 %bf.load16, 3, !dbg !7140
  %div = and i32 %bf.clear17, 127, !dbg !7140
  %conv = zext i32 %div to i64, !dbg !7140
  %call = tail call %union.tree_node* @size_int_kind(i64 %conv, i32 0) #6, !dbg !7140
  %call18 = tail call %union.tree_node* @size_binop_loc(i32 %6, i32 68, %union.tree_node* %8, %union.tree_node* %call) #6, !dbg !7141
  br label %cleanup, !dbg !7142

cleanup:                                          ; preds = %if.end13, %if.then12, %if.then
  %retval.0 = phi %union.tree_node* [ %2, %if.then ], [ %call18, %if.end13 ], [ %5, %if.then12 ], !dbg !7125
  ret %union.tree_node* %retval.0, !dbg !7143
}

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @readonly_error(%union.tree_node* %arg, i32 %use) unnamed_addr #5 !dbg !7144 {
entry:
  %0 = icmp eq i32 %use, 0
  br i1 %0, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !7150

entry.entry.split_crit_edge:                      ; preds = %entry
  %1 = icmp eq i32 %use, 1
  br i1 %1, label %entry.split.split.us, label %entry.split.entry.split.split_crit_edge, !dbg !7150

entry.split.us:                                   ; preds = %entry
  br label %tailrecurse.us, !dbg !7150

tailrecurse.us:                                   ; preds = %if.then11.us, %entry.split.us
  %arg.tr.us = phi %union.tree_node* [ %arg, %entry.split.us ], [ %7, %if.then11.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i32 %use, metadata !7149, metadata !DIExpression()), !dbg !7154
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7155
  %bf.load.us = load i64, i64* %2, align 8, !dbg !7155
  %bf.cast1.us = and i64 %bf.load.us, 65535, !dbg !7156
  %cmp6.us = icmp eq i64 %bf.cast1.us, 41, !dbg !7156
  br i1 %cmp6.us, label %if.then.us, label %if.else30.us-lcssa.us, !dbg !7157

if.then.us:                                       ; preds = %tailrecurse.us
  %operands.us = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7158
  %3 = bitcast %union.tree_node** %operands.us to %struct.tree_common**, !dbg !7158
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !7158
  %type.us = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !7158
  %5 = bitcast %union.tree_node** %type.us to i64**, !dbg !7158
  %6 = load i64*, i64** %5, align 8, !dbg !7158
  %bf.load8.us = load i64, i64* %6, align 8, !dbg !7158
  %bf.cast103.us = and i64 %bf.load8.us, 1048576, !dbg !7158
  %tobool.us = icmp eq i64 %bf.cast103.us, 0, !dbg !7158
  br i1 %tobool.us, label %if.else.us-lcssa.us, label %if.then11.us, !dbg !7159

if.then11.us:                                     ; preds = %if.then.us
  %7 = bitcast %struct.tree_common* %4 to %union.tree_node*, !dbg !7159
  br label %tailrecurse.us, !dbg !7150

if.else30.us-lcssa.us:                            ; preds = %tailrecurse.us
  %arg.tr.us.lcssa = phi %union.tree_node* [ %arg.tr.us, %tailrecurse.us ]
  %bf.load.us.lcssa = phi i64 [ %bf.load.us, %tailrecurse.us ], !dbg !7155
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us.lcssa, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us.lcssa, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else30, !dbg !7160

if.else.us-lcssa.us:                              ; preds = %if.then.us
  %arg.tr.us.lcssa48 = phi %union.tree_node* [ %arg.tr.us, %if.then.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us.lcssa48, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us.lcssa48, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else, !dbg !7162

entry.split.entry.split.split_crit_edge:          ; preds = %entry.entry.split_crit_edge
  %8 = icmp eq i32 %use, 2
  br i1 %8, label %entry.split.split.split.us, label %entry.split.split.entry.split.split.split_crit_edge, !dbg !7150

entry.split.split.us:                             ; preds = %entry.entry.split_crit_edge
  br label %tailrecurse.us5, !dbg !7150

tailrecurse.us5:                                  ; preds = %if.then11.us18, %entry.split.split.us
  %arg.tr.us6 = phi %union.tree_node* [ %arg, %entry.split.split.us ], [ %14, %if.then11.us18 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us6, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i32 %use, metadata !7149, metadata !DIExpression()), !dbg !7154
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.us6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7155
  %bf.load.us9 = load i64, i64* %9, align 8, !dbg !7155
  %bf.cast1.us10 = and i64 %bf.load.us9, 65535, !dbg !7156
  %cmp6.us11 = icmp eq i64 %bf.cast1.us10, 41, !dbg !7156
  br i1 %cmp6.us11, label %if.then.us12, label %if.else30.us-lcssa.us-lcssa.us, !dbg !7157

if.then.us12:                                     ; preds = %tailrecurse.us5
  %operands.us13 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.us6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7158
  %10 = bitcast %union.tree_node** %operands.us13 to %struct.tree_common**, !dbg !7158
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !7158
  %type.us14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !7158
  %12 = bitcast %union.tree_node** %type.us14 to i64**, !dbg !7158
  %13 = load i64*, i64** %12, align 8, !dbg !7158
  %bf.load8.us15 = load i64, i64* %13, align 8, !dbg !7158
  %bf.cast103.us16 = and i64 %bf.load8.us15, 1048576, !dbg !7158
  %tobool.us17 = icmp eq i64 %bf.cast103.us16, 0, !dbg !7158
  br i1 %tobool.us17, label %if.else.us-lcssa.us-lcssa.us, label %if.then11.us18, !dbg !7159

if.then11.us18:                                   ; preds = %if.then.us12
  %14 = bitcast %struct.tree_common* %11 to %union.tree_node*, !dbg !7159
  br label %tailrecurse.us5, !dbg !7150

if.else30.us-lcssa.us-lcssa.us:                   ; preds = %tailrecurse.us5
  %arg.tr.us6.lcssa = phi %union.tree_node* [ %arg.tr.us6, %tailrecurse.us5 ]
  %bf.load.us9.lcssa = phi i64 [ %bf.load.us9, %tailrecurse.us5 ], !dbg !7155
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us6.lcssa, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us6.lcssa, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else30.us-lcssa, !dbg !7160

if.else.us-lcssa.us-lcssa.us:                     ; preds = %if.then.us12
  %arg.tr.us6.lcssa50 = phi %union.tree_node* [ %arg.tr.us6, %if.then.us12 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us6.lcssa50, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us6.lcssa50, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else.us-lcssa, !dbg !7162

entry.split.split.entry.split.split.split_crit_edge: ; preds = %entry.split.entry.split.split_crit_edge
  br label %tailrecurse, !dbg !7150

entry.split.split.split.us:                       ; preds = %entry.split.entry.split.split_crit_edge
  br label %tailrecurse.us20, !dbg !7150

tailrecurse.us20:                                 ; preds = %if.then11.us33, %entry.split.split.split.us
  %arg.tr.us21 = phi %union.tree_node* [ %arg, %entry.split.split.split.us ], [ %20, %if.then11.us33 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us21, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i32 %use, metadata !7149, metadata !DIExpression()), !dbg !7154
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.us21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7155
  %bf.load.us24 = load i64, i64* %15, align 8, !dbg !7155
  %bf.cast1.us25 = and i64 %bf.load.us24, 65535, !dbg !7156
  %cmp6.us26 = icmp eq i64 %bf.cast1.us25, 41, !dbg !7156
  br i1 %cmp6.us26, label %if.then.us27, label %if.else30.us-lcssa.us-lcssa.us-lcssa.us, !dbg !7157

if.then.us27:                                     ; preds = %tailrecurse.us20
  %operands.us28 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.us21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7158
  %16 = bitcast %union.tree_node** %operands.us28 to %struct.tree_common**, !dbg !7158
  %17 = load %struct.tree_common*, %struct.tree_common** %16, align 8, !dbg !7158
  %type.us29 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 2, !dbg !7158
  %18 = bitcast %union.tree_node** %type.us29 to i64**, !dbg !7158
  %19 = load i64*, i64** %18, align 8, !dbg !7158
  %bf.load8.us30 = load i64, i64* %19, align 8, !dbg !7158
  %bf.cast103.us31 = and i64 %bf.load8.us30, 1048576, !dbg !7158
  %tobool.us32 = icmp eq i64 %bf.cast103.us31, 0, !dbg !7158
  br i1 %tobool.us32, label %if.else.us-lcssa.us-lcssa.us-lcssa.us, label %if.then11.us33, !dbg !7159

if.then11.us33:                                   ; preds = %if.then.us27
  %20 = bitcast %struct.tree_common* %17 to %union.tree_node*, !dbg !7159
  br label %tailrecurse.us20, !dbg !7150

if.else30.us-lcssa.us-lcssa.us-lcssa.us:          ; preds = %tailrecurse.us20
  %arg.tr.us21.lcssa = phi %union.tree_node* [ %arg.tr.us21, %tailrecurse.us20 ]
  %bf.load.us24.lcssa = phi i64 [ %bf.load.us24, %tailrecurse.us20 ], !dbg !7155
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us21.lcssa, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us21.lcssa, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else30.us-lcssa.us-lcssa, !dbg !7160

if.else.us-lcssa.us-lcssa.us-lcssa.us:            ; preds = %if.then.us27
  %arg.tr.us21.lcssa52 = phi %union.tree_node* [ %arg.tr.us21, %if.then.us27 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us21.lcssa52, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.us21.lcssa52, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else.us-lcssa.us-lcssa, !dbg !7162

tailrecurse:                                      ; preds = %if.then11, %entry.split.split.entry.split.split.split_crit_edge
  %arg.tr = phi %union.tree_node* [ %arg, %entry.split.split.entry.split.split.split_crit_edge ], [ %26, %if.then11 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i32 %use, metadata !7149, metadata !DIExpression()), !dbg !7154
  switch i32 %use, label %cond.true [
    i32 0, label %cond.end
    i32 1, label %cond.end
    i32 2, label %cond.end
    i32 4, label %cond.end
  ], !dbg !7163

cond.true:                                        ; preds = %tailrecurse
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3765, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7163
  br label %cond.end, !dbg !7163

cond.end:                                         ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %cond.true
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7155
  %bf.load = load i64, i64* %21, align 8, !dbg !7155
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7156
  %cmp6 = icmp eq i64 %bf.cast1, 41, !dbg !7156
  br i1 %cmp6, label %if.then, label %if.else30.us-lcssa.us-lcssa.us-lcssa, !dbg !7157

if.then:                                          ; preds = %cond.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7158
  %22 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !7158
  %23 = load %struct.tree_common*, %struct.tree_common** %22, align 8, !dbg !7158
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %23, i64 0, i32 2, !dbg !7158
  %24 = bitcast %union.tree_node** %type to i64**, !dbg !7158
  %25 = load i64*, i64** %24, align 8, !dbg !7158
  %bf.load8 = load i64, i64* %25, align 8, !dbg !7158
  %bf.cast103 = and i64 %bf.load8, 1048576, !dbg !7158
  %tobool = icmp eq i64 %bf.cast103, 0, !dbg !7158
  br i1 %tobool, label %if.else.us-lcssa.us-lcssa.us-lcssa, label %if.then11, !dbg !7159

if.then11:                                        ; preds = %if.then
  %26 = bitcast %struct.tree_common* %23 to %union.tree_node*, !dbg !7159
  br label %tailrecurse, !dbg !7150

if.else.us-lcssa.us-lcssa.us-lcssa:               ; preds = %if.then
  %arg.tr.lcssa54 = phi %union.tree_node* [ %arg.tr, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa54, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa54, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else.us-lcssa.us-lcssa, !dbg !7162

if.else.us-lcssa.us-lcssa:                        ; preds = %if.else.us-lcssa.us-lcssa.us-lcssa.us, %if.else.us-lcssa.us-lcssa.us-lcssa
  %arg.tr.lcssa4.ph.ph = phi %union.tree_node* [ %arg.tr.lcssa54, %if.else.us-lcssa.us-lcssa.us-lcssa ], [ %arg.tr.us21.lcssa52, %if.else.us-lcssa.us-lcssa.us-lcssa.us ]
  br label %if.else.us-lcssa, !dbg !7162

if.else.us-lcssa:                                 ; preds = %if.else.us-lcssa.us-lcssa.us, %if.else.us-lcssa.us-lcssa
  %arg.tr.lcssa4.ph = phi %union.tree_node* [ %arg.tr.lcssa4.ph.ph, %if.else.us-lcssa.us-lcssa ], [ %arg.tr.us6.lcssa50, %if.else.us-lcssa.us-lcssa.us ]
  br label %if.else, !dbg !7162

if.else:                                          ; preds = %if.else.us-lcssa.us, %if.else.us-lcssa
  %arg.tr.lcssa4 = phi %union.tree_node* [ %arg.tr.lcssa4.ph, %if.else.us-lcssa ], [ %arg.tr.us.lcssa48, %if.else.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa4, metadata !7148, metadata !DIExpression()), !dbg !7154
  switch i32 %use, label %cond.false20 [
    i32 0, label %cond.end25
    i32 1, label %cond.end23
  ], !dbg !7162

cond.false20:                                     ; preds = %if.else
  %cmp21 = icmp eq i32 %use, 2, !dbg !7162
  %cond22 = select i1 %cmp21, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.190, i64 0, i64 0), !dbg !7162
  br label %cond.end23, !dbg !7162

cond.end23:                                       ; preds = %if.else, %cond.false20
  %cond24 = phi i8* [ %cond22, %cond.false20 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.188, i64 0, i64 0), %if.else ], !dbg !7162
  br label %cond.end25, !dbg !7162

cond.end25:                                       ; preds = %if.else, %cond.end23
  %cond26 = phi i8* [ %cond24, %cond.end23 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.187, i64 0, i64 0), %if.else ], !dbg !7162
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.tr.lcssa4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7164
  %arrayidx29 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands28, i64 1, !dbg !7164
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8, !dbg !7164
  tail call void (i8*, ...) @error(i8* %cond26, %union.tree_node* %27) #6, !dbg !7165
  br label %if.end63

if.else30.us-lcssa.us-lcssa.us-lcssa:             ; preds = %cond.end
  %bf.load.lcssa = phi i64 [ %bf.load, %cond.end ], !dbg !7155
  %arg.tr.lcssa53 = phi %union.tree_node* [ %arg.tr, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa53, metadata !7148, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa53, metadata !7148, metadata !DIExpression()), !dbg !7154
  br label %if.else30.us-lcssa.us-lcssa, !dbg !7160

if.else30.us-lcssa.us-lcssa:                      ; preds = %if.else30.us-lcssa.us-lcssa.us-lcssa.us, %if.else30.us-lcssa.us-lcssa.us-lcssa
  %bf.load32.pre.pre = phi i64 [ %bf.load.lcssa, %if.else30.us-lcssa.us-lcssa.us-lcssa ], [ %bf.load.us24.lcssa, %if.else30.us-lcssa.us-lcssa.us-lcssa.us ], !dbg !7160
  %arg.tr.lcssa.ph.ph = phi %union.tree_node* [ %arg.tr.lcssa53, %if.else30.us-lcssa.us-lcssa.us-lcssa ], [ %arg.tr.us21.lcssa, %if.else30.us-lcssa.us-lcssa.us-lcssa.us ]
  br label %if.else30.us-lcssa, !dbg !7160

if.else30.us-lcssa:                               ; preds = %if.else30.us-lcssa.us-lcssa.us, %if.else30.us-lcssa.us-lcssa
  %bf.load32.pre = phi i64 [ %bf.load32.pre.pre, %if.else30.us-lcssa.us-lcssa ], [ %bf.load.us9.lcssa, %if.else30.us-lcssa.us-lcssa.us ], !dbg !7160
  %arg.tr.lcssa.ph = phi %union.tree_node* [ %arg.tr.lcssa.ph.ph, %if.else30.us-lcssa.us-lcssa ], [ %arg.tr.us6.lcssa, %if.else30.us-lcssa.us-lcssa.us ]
  br label %if.else30, !dbg !7160

if.else30:                                        ; preds = %if.else30.us-lcssa.us, %if.else30.us-lcssa
  %bf.load32 = phi i64 [ %bf.load32.pre, %if.else30.us-lcssa ], [ %bf.load.us.lcssa, %if.else30.us-lcssa.us ], !dbg !7160
  %arg.tr.lcssa = phi %union.tree_node* [ %arg.tr.lcssa.ph, %if.else30.us-lcssa ], [ %arg.tr.us.lcssa, %if.else30.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.tr.lcssa, metadata !7148, metadata !DIExpression()), !dbg !7154
  %bf.cast342 = and i64 %bf.load32, 65535, !dbg !7166
  %cmp35 = icmp eq i64 %bf.cast342, 32, !dbg !7166
  br i1 %cmp35, label %if.then36, label %if.else49, !dbg !7167

if.then36:                                        ; preds = %if.else30
  br i1 %0, label %cond.end47, label %cond.false39, !dbg !7168

cond.false39:                                     ; preds = %if.then36
  %cmp40 = icmp eq i32 %use, 1, !dbg !7168
  br i1 %cmp40, label %cond.end47, label %cond.false42, !dbg !7168

cond.false42:                                     ; preds = %cond.false39
  %cmp43 = icmp eq i32 %use, 2, !dbg !7168
  %cond44 = select i1 %cmp43, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.194, i64 0, i64 0), !dbg !7168
  br label %cond.end47, !dbg !7168

cond.end47:                                       ; preds = %cond.false42, %cond.false39, %if.then36
  %cond48 = phi i8* [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.191, i64 0, i64 0), %if.then36 ], [ %cond44, %cond.false42 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.192, i64 0, i64 0), %cond.false39 ], !dbg !7168
  tail call void (i8*, ...) @error(i8* %cond48, %union.tree_node* %arg.tr.lcssa) #6, !dbg !7169
  br label %if.end63, !dbg !7169

if.else49:                                        ; preds = %if.else30
  br i1 %0, label %cond.end60, label %cond.false52, !dbg !7170

cond.false52:                                     ; preds = %if.else49
  %cmp53 = icmp eq i32 %use, 1, !dbg !7170
  br i1 %cmp53, label %cond.end60, label %cond.false55, !dbg !7170

cond.false55:                                     ; preds = %cond.false52
  %cmp56 = icmp eq i32 %use, 2, !dbg !7170
  %cond57 = select i1 %cmp56, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.197, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.198, i64 0, i64 0), !dbg !7170
  br label %cond.end60, !dbg !7170

cond.end60:                                       ; preds = %cond.false55, %cond.false52, %if.else49
  %cond61 = phi i8* [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.195, i64 0, i64 0), %if.else49 ], [ %cond57, %cond.false55 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.196, i64 0, i64 0), %cond.false52 ], !dbg !7170
  tail call void (i8*, ...) @error(i8* %cond61, %union.tree_node* %arg.tr.lcssa) #6, !dbg !7171
  br label %if.end63

if.end63:                                         ; preds = %cond.end47, %cond.end60, %cond.end25
  ret void, !dbg !7172
}

; Function Attrs: nounwind uwtable
define internal fastcc void @readonly_warning(%union.tree_node* %arg, i32 %use) unnamed_addr #5 !dbg !7173 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !7175, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.value(metadata i32 %use, metadata !7176, metadata !DIExpression()), !dbg !7177
  switch i32 %use, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !7178

sw.bb:                                            ; preds = %entry
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.195, i64 0, i64 0), %union.tree_node* %arg) #6, !dbg !7179
  br label %sw.epilog, !dbg !7181

sw.bb1:                                           ; preds = %entry
  %call2 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.196, i64 0, i64 0), %union.tree_node* %arg) #6, !dbg !7182
  br label %sw.epilog, !dbg !7183

sw.bb3:                                           ; preds = %entry
  %call4 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.197, i64 0, i64 0), %union.tree_node* %arg) #6, !dbg !7184
  br label %sw.epilog, !dbg !7185

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3815, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7186
  br label %sw.epilog, !dbg !7187

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !7188
}

declare dso_local %union.tree_node* @boolean_increment(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_offsetof(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_initializer_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @note_integer_operands(%union.tree_node* %expr) unnamed_addr #5 !dbg !7189 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7191, metadata !DIExpression()), !dbg !7193
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7194
  %bf.load = load i64, i64* %0, align 8, !dbg !7194
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7196
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !7196
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7197

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @in_late_binary_op, align 1, !dbg !7198
  %tobool = icmp eq i8 %1, 0, !dbg !7198
  br i1 %tobool, label %if.else, label %if.then, !dbg !7199

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %expr) #6, !dbg !7200
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7192, metadata !DIExpression()), !dbg !7193
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7202
  %bf.load2 = load i64, i64* %2, align 8, !dbg !7203
  %bf.set = or i64 %bf.load2, 134217728, !dbg !7203
  store i64 %bf.set, i64* %2, align 8, !dbg !7203
  br label %if.end, !dbg !7204

if.else:                                          ; preds = %land.lhs.true, %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7205
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7205
  %call4 = tail call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %3, %union.tree_node* null, %union.tree_node* %expr) #6, !dbg !7205
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7192, metadata !DIExpression()), !dbg !7193
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7207
  %bf.load6 = load i64, i64* %4, align 8, !dbg !7208
  %bf.set8 = or i64 %bf.load6, 8589934592, !dbg !7208
  store i64 %bf.set8, i64* %4, align 8, !dbg !7208
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ret.0 = phi %union.tree_node* [ %call, %if.then ], [ %call4, %if.else ], !dbg !7209
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !7192, metadata !DIExpression()), !dbg !7193
  ret %union.tree_node* %ret.0, !dbg !7210
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_conditional_expr(i32 %colon_loc, %union.tree_node* %ifexp, i8 zeroext %ifexp_bcp, %union.tree_node* %op1, %union.tree_node* %op1_original_type, %union.tree_node* %op2, %union.tree_node* %op2_original_type) local_unnamed_addr #5 !dbg !7211 {
entry:
  %ovf = alloca i8, align 1
  %op1_maybe_const = alloca i8, align 1
  %op2_maybe_const = alloca i8, align 1
  %as_common = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %colon_loc, metadata !7215, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %ifexp, metadata !7216, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8 %ifexp_bcp, metadata !7217, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !7218, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1_original_type, metadata !7219, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2, metadata !7220, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2_original_type, metadata !7221, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7226, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7227, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !7228, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2, metadata !7229, metadata !DIExpression()), !dbg !7269
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7270
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !7270
  %1 = load i64*, i64** %0, align 8, !dbg !7270
  %bf.load = load i64, i64* %1, align 8, !dbg !7270
  %bf.cast10 = and i64 %bf.load, 65535, !dbg !7270
  %cmp = icmp eq i64 %bf.cast10, 6, !dbg !7270
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7270

lor.lhs.false:                                    ; preds = %entry
  %cmp8 = icmp eq i64 %bf.cast10, 7, !dbg !7270
  br i1 %cmp8, label %land.rhs, label %lor.lhs.false9, !dbg !7270

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp16 = icmp eq i64 %bf.cast10, 8, !dbg !7270
  br i1 %cmp16, label %land.rhs, label %land.end32, !dbg !7270

land.rhs:                                         ; preds = %lor.lhs.false9, %lor.lhs.false, %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7270
  %bf.load18 = load i64, i64* %2, align 8, !dbg !7270
  %bf.cast2053 = and i64 %bf.load18, 65535, !dbg !7270
  %cmp21 = icmp eq i64 %bf.cast2053, 23, !dbg !7270
  br i1 %cmp21, label %land.end32, label %lor.rhs, !dbg !7270

lor.rhs:                                          ; preds = %land.rhs
  %cmp26 = icmp eq i64 %bf.cast2053, 189, !dbg !7270
  br i1 %cmp26, label %land.rhs27, label %land.end32, !dbg !7270

land.rhs27:                                       ; preds = %lor.rhs
  %bf.cast3155 = and i64 %bf.load18, 8589934592, !dbg !7270
  %tobool = icmp ne i64 %bf.cast3155, 0, !dbg !7270
  br label %land.end32

land.end32:                                       ; preds = %land.rhs, %land.rhs27, %lor.rhs, %lor.lhs.false9
  %3 = phi i1 [ false, %lor.lhs.false9 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %tobool, %land.rhs27 ], !dbg !7269
  %conv = zext i1 %3 to i32, !dbg !7270
  call void @llvm.dbg.value(metadata i1 %3, metadata !7231, metadata !DIExpression()), !dbg !7269
  br i1 %3, label %if.then, label %if.end, !dbg !7271

if.then:                                          ; preds = %land.end32
  %call = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %op1) #7, !dbg !7272
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7218, metadata !DIExpression()), !dbg !7269
  br label %if.end, !dbg !7274

if.end:                                           ; preds = %if.then, %land.end32
  %op1.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %op1, %land.end32 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.0, metadata !7218, metadata !DIExpression()), !dbg !7269
  %type35 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7275
  %4 = bitcast %union.tree_node** %type35 to i64**, !dbg !7275
  %5 = load i64*, i64** %4, align 8, !dbg !7275
  %bf.load37 = load i64, i64* %5, align 8, !dbg !7275
  %bf.cast3913 = and i64 %bf.load37, 65535, !dbg !7275
  %cmp40 = icmp eq i64 %bf.cast3913, 6, !dbg !7275
  br i1 %cmp40, label %land.rhs60, label %lor.lhs.false42, !dbg !7275

lor.lhs.false42:                                  ; preds = %if.end
  %cmp49 = icmp eq i64 %bf.cast3913, 7, !dbg !7275
  br i1 %cmp49, label %land.rhs60, label %lor.lhs.false51, !dbg !7275

lor.lhs.false51:                                  ; preds = %lor.lhs.false42
  %cmp58 = icmp eq i64 %bf.cast3913, 8, !dbg !7275
  br i1 %cmp58, label %land.rhs60, label %land.end84, !dbg !7275

land.rhs60:                                       ; preds = %lor.lhs.false51, %lor.lhs.false42, %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7275
  %bf.load62 = load i64, i64* %6, align 8, !dbg !7275
  %bf.cast6450 = and i64 %bf.load62, 65535, !dbg !7275
  %cmp65 = icmp eq i64 %bf.cast6450, 23, !dbg !7275
  br i1 %cmp65, label %land.end84, label %lor.rhs67, !dbg !7275

lor.rhs67:                                        ; preds = %land.rhs60
  %cmp72 = icmp eq i64 %bf.cast6450, 189, !dbg !7275
  br i1 %cmp72, label %land.rhs74, label %land.end84, !dbg !7275

land.rhs74:                                       ; preds = %lor.rhs67
  %bf.cast7952 = and i64 %bf.load62, 8589934592, !dbg !7275
  %tobool80 = icmp ne i64 %bf.cast7952, 0, !dbg !7275
  br label %land.end84

land.end84:                                       ; preds = %land.rhs60, %land.rhs74, %lor.rhs67, %lor.lhs.false51
  %7 = phi i1 [ false, %lor.lhs.false51 ], [ true, %land.rhs60 ], [ false, %lor.rhs67 ], [ %tobool80, %land.rhs74 ], !dbg !7269
  %conv86 = zext i1 %7 to i8, !dbg !7275
  call void @llvm.dbg.value(metadata i8 %conv86, metadata !7232, metadata !DIExpression()), !dbg !7269
  br i1 %7, label %if.then88, label %if.end90, !dbg !7276

if.then88:                                        ; preds = %land.end84
  %call89 = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %op2) #7, !dbg !7277
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !7220, metadata !DIExpression()), !dbg !7269
  br label %if.end90, !dbg !7279

if.end90:                                         ; preds = %if.then88, %land.end84
  %op2.addr.0 = phi %union.tree_node* [ %call89, %if.then88 ], [ %op2, %land.end84 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.addr.0, metadata !7220, metadata !DIExpression()), !dbg !7269
  %type92 = getelementptr inbounds %union.tree_node, %union.tree_node* %ifexp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7280
  %8 = bitcast %union.tree_node** %type92 to i64**, !dbg !7280
  %9 = load i64*, i64** %8, align 8, !dbg !7280
  %bf.load94 = load i64, i64* %9, align 8, !dbg !7280
  %bf.cast9616 = and i64 %bf.load94, 65535, !dbg !7280
  %cmp97 = icmp eq i64 %bf.cast9616, 6, !dbg !7280
  br i1 %cmp97, label %land.rhs117, label %lor.lhs.false99, !dbg !7280

lor.lhs.false99:                                  ; preds = %if.end90
  %cmp106 = icmp eq i64 %bf.cast9616, 7, !dbg !7280
  br i1 %cmp106, label %land.rhs117, label %lor.lhs.false108, !dbg !7280

lor.lhs.false108:                                 ; preds = %lor.lhs.false99
  %cmp115 = icmp eq i64 %bf.cast9616, 8, !dbg !7280
  br i1 %cmp115, label %land.rhs117, label %land.end141, !dbg !7280

land.rhs117:                                      ; preds = %lor.lhs.false108, %lor.lhs.false99, %if.end90
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %ifexp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7280
  %bf.load119 = load i64, i64* %10, align 8, !dbg !7280
  %bf.cast12147 = and i64 %bf.load119, 65535, !dbg !7280
  %cmp122 = icmp eq i64 %bf.cast12147, 23, !dbg !7280
  br i1 %cmp122, label %land.end141, label %lor.rhs124, !dbg !7280

lor.rhs124:                                       ; preds = %land.rhs117
  %cmp129 = icmp eq i64 %bf.cast12147, 189, !dbg !7280
  br i1 %cmp129, label %land.rhs131, label %land.end141, !dbg !7280

land.rhs131:                                      ; preds = %lor.rhs124
  %bf.cast13649 = and i64 %bf.load119, 8589934592, !dbg !7280
  %tobool137 = icmp ne i64 %bf.cast13649, 0, !dbg !7280
  br label %land.end141

land.end141:                                      ; preds = %land.rhs117, %land.rhs131, %lor.rhs124, %lor.lhs.false108
  %11 = phi i1 [ false, %lor.lhs.false108 ], [ true, %land.rhs117 ], [ false, %lor.rhs124 ], [ %tobool137, %land.rhs131 ], !dbg !7269
  call void @llvm.dbg.value(metadata i1 %11, metadata !7234, metadata !DIExpression()), !dbg !7269
  br i1 %11, label %if.then145, label %if.end147, !dbg !7281

if.then145:                                       ; preds = %land.end141
  %call146 = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %ifexp) #7, !dbg !7282
  call void @llvm.dbg.value(metadata %union.tree_node* %call146, metadata !7216, metadata !DIExpression()), !dbg !7269
  br label %if.end147, !dbg !7284

if.end147:                                        ; preds = %if.then145, %land.end141
  %ifexp.addr.0 = phi %union.tree_node* [ %call146, %if.then145 ], [ %ifexp, %land.end141 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %ifexp.addr.0, metadata !7216, metadata !DIExpression()), !dbg !7269
  %type149 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7285
  %12 = bitcast %union.tree_node** %type149 to i64**, !dbg !7285
  %13 = load i64*, i64** %12, align 8, !dbg !7285
  %bf.load151 = load i64, i64* %13, align 8, !dbg !7285
  %bf.cast15319 = and i64 %bf.load151, 65535, !dbg !7287
  %cmp154 = icmp eq i64 %bf.cast15319, 19, !dbg !7287
  br i1 %cmp154, label %if.end158, label %if.then156, !dbg !7288

if.then156:                                       ; preds = %if.end147
  %call157 = tail call %union.tree_node* @default_conversion(%union.tree_node* %op1.addr.0) #7, !dbg !7289
  call void @llvm.dbg.value(metadata %union.tree_node* %call157, metadata !7218, metadata !DIExpression()), !dbg !7269
  br label %if.end158, !dbg !7290

if.end158:                                        ; preds = %if.end147, %if.then156
  %op1.addr.1 = phi %union.tree_node* [ %call157, %if.then156 ], [ %op1.addr.0, %if.end147 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.1, metadata !7218, metadata !DIExpression()), !dbg !7269
  %type160 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7291
  %14 = bitcast %union.tree_node** %type160 to i64**, !dbg !7291
  %15 = load i64*, i64** %14, align 8, !dbg !7291
  %bf.load162 = load i64, i64* %15, align 8, !dbg !7291
  %bf.cast16420 = and i64 %bf.load162, 65535, !dbg !7293
  %cmp165 = icmp eq i64 %bf.cast16420, 19, !dbg !7293
  br i1 %cmp165, label %if.end169, label %if.then167, !dbg !7294

if.then167:                                       ; preds = %if.end158
  %call168 = tail call %union.tree_node* @default_conversion(%union.tree_node* %op2.addr.0) #7, !dbg !7295
  call void @llvm.dbg.value(metadata %union.tree_node* %call168, metadata !7220, metadata !DIExpression()), !dbg !7269
  br label %if.end169, !dbg !7296

if.end169:                                        ; preds = %if.end158, %if.then167
  %op2.addr.1 = phi %union.tree_node* [ %call168, %if.then167 ], [ %op2.addr.0, %if.end158 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.addr.1, metadata !7220, metadata !DIExpression()), !dbg !7269
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %ifexp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7297
  %bf.load171 = load i64, i64* %16, align 8, !dbg !7297
  %bf.cast17321 = and i64 %bf.load171, 65535, !dbg !7299
  %cmp174 = icmp eq i64 %bf.cast17321, 0, !dbg !7299
  br i1 %cmp174, label %if.then194, label %lor.lhs.false176, !dbg !7300

lor.lhs.false176:                                 ; preds = %if.end169
  %type178 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7301
  %17 = bitcast %union.tree_node** %type178 to i64**, !dbg !7301
  %18 = load i64*, i64** %17, align 8, !dbg !7301
  %bf.load180 = load i64, i64* %18, align 8, !dbg !7301
  %bf.cast18222 = and i64 %bf.load180, 65535, !dbg !7302
  %cmp183 = icmp eq i64 %bf.cast18222, 0, !dbg !7302
  %19 = bitcast i64* %18 to %union.tree_node*, !dbg !7303
  br i1 %cmp183, label %if.then194, label %lor.lhs.false185, !dbg !7303

lor.lhs.false185:                                 ; preds = %lor.lhs.false176
  %type187 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7304
  %20 = bitcast %union.tree_node** %type187 to i64**, !dbg !7304
  %21 = load i64*, i64** %20, align 8, !dbg !7304
  %bf.load189 = load i64, i64* %21, align 8, !dbg !7304
  %bf.cast19123 = and i64 %bf.load189, 65535, !dbg !7305
  %cmp192 = icmp eq i64 %bf.cast19123, 0, !dbg !7305
  %22 = bitcast i64* %21 to %union.tree_node*, !dbg !7306
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !7306

if.then194:                                       ; preds = %lor.lhs.false185, %lor.lhs.false176, %if.end169
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7307
  br label %cleanup740, !dbg !7308

if.end195:                                        ; preds = %lor.lhs.false185
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !7222, metadata !DIExpression()), !dbg !7269
  %24 = trunc i64 %bf.load180 to i32, !dbg !7309
  %bf.cast201 = and i32 %24, 65535, !dbg !7309
  call void @llvm.dbg.value(metadata i32 %bf.cast201, metadata !7224, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !7223, metadata !DIExpression()), !dbg !7269
  %25 = trunc i64 %bf.load189 to i32, !dbg !7310
  %bf.cast207 = and i32 %25, 65535, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %bf.cast207, metadata !7225, metadata !DIExpression()), !dbg !7269
  %cmp208 = icmp eq i32 %bf.cast201, 15, !dbg !7311
  %cmp211 = icmp eq i32 %bf.cast207, 15, !dbg !7313
  %or.cond = or i1 %cmp208, %cmp211, !dbg !7314
  br i1 %or.cond, label %if.then213, label %if.end214, !dbg !7314

if.then213:                                       ; preds = %if.end195
  tail call void (i32, i8*, ...) @error_at(i32 %colon_loc, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !7315
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7317
  br label %cleanup740, !dbg !7318

if.end214:                                        ; preds = %if.end195
  %call215 = tail call zeroext i8 @objc_compare_types(%union.tree_node* %19, %union.tree_node* %22, i32 -3, %union.tree_node* null) #6, !dbg !7319
  call void @llvm.dbg.value(metadata i8 %call215, metadata !7236, metadata !DIExpression()), !dbg !7269
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7320
  %bf.load217 = load i64, i64* %27, align 8, !dbg !7320
  %bf.cast21924 = and i64 %bf.load217, 65535, !dbg !7322
  %cmp220 = icmp eq i64 %bf.cast21924, 190, !dbg !7322
  br i1 %cmp220, label %land.lhs.true, label %lor.lhs.false222, !dbg !7323

lor.lhs.false222:                                 ; preds = %if.end214
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7324
  %bf.load224 = load i64, i64* %28, align 8, !dbg !7324
  %bf.cast22625 = and i64 %bf.load224, 65535, !dbg !7325
  %cmp227 = icmp eq i64 %bf.cast22625, 190, !dbg !7325
  br i1 %cmp227, label %land.lhs.true, label %if.end287, !dbg !7326

land.lhs.true:                                    ; preds = %lor.lhs.false222, %if.end214
  %trunc43 = trunc i64 %bf.load180 to i16, !dbg !7327
  switch i16 %trunc43, label %if.end287 [
    i16 8, label %land.lhs.true237
    i16 9, label %land.lhs.true237
    i16 13, label %land.lhs.true237
  ], !dbg !7327

land.lhs.true237:                                 ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true
  %trunc44 = trunc i64 %bf.load189 to i16, !dbg !7328
  switch i16 %trunc44, label %if.end287 [
    i16 8, label %if.then246
    i16 9, label %if.then246
    i16 13, label %if.then246
  ], !dbg !7328

if.then246:                                       ; preds = %land.lhs.true237, %land.lhs.true237, %land.lhs.true237
  %call247 = tail call fastcc %union.tree_node* @c_common_type(%union.tree_node* %19, %union.tree_node* %22) #7, !dbg !7329
  call void @llvm.dbg.value(metadata %union.tree_node* %call247, metadata !7227, metadata !DIExpression()), !dbg !7269
  %bf.load249 = load i64, i64* %27, align 8, !dbg !7331
  %bf.cast25145 = and i64 %bf.load249, 65535, !dbg !7333
  %cmp252 = icmp eq i64 %bf.cast25145, 190, !dbg !7333
  br i1 %cmp252, label %if.then254, label %if.end263, !dbg !7334

if.then254:                                       ; preds = %if.then246
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7335
  %29 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7335
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !7218, metadata !DIExpression()), !dbg !7269
  %type256 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7337
  %30 = load %union.tree_node*, %union.tree_node** %type256, align 8, !dbg !7337
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !7222, metadata !DIExpression()), !dbg !7269
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7338
  %bf.load258 = load i64, i64* %31, align 8, !dbg !7338
  %32 = trunc i64 %bf.load258 to i32, !dbg !7338
  %bf.cast260 = and i32 %32, 65535, !dbg !7338
  %cmp261 = icmp eq i32 %bf.cast260, %bf.cast201, !dbg !7338
  br i1 %cmp261, label %if.end263, label %cond.true, !dbg !7338

cond.true:                                        ; preds = %if.then254
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 4003, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7338
  br label %if.end263, !dbg !7338

if.end263:                                        ; preds = %cond.true, %if.then254, %if.then246
  %type1.0 = phi %union.tree_node* [ %19, %if.then246 ], [ %30, %if.then254 ], [ %30, %cond.true ], !dbg !7269
  %op1.addr.2 = phi %union.tree_node* [ %op1.addr.1, %if.then246 ], [ %29, %if.then254 ], [ %29, %cond.true ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.2, metadata !7218, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.0, metadata !7222, metadata !DIExpression()), !dbg !7269
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7339
  %bf.load265 = load i64, i64* %33, align 8, !dbg !7339
  %bf.cast26746 = and i64 %bf.load265, 65535, !dbg !7341
  %cmp268 = icmp eq i64 %bf.cast26746, 190, !dbg !7341
  br i1 %cmp268, label %if.then270, label %if.end287, !dbg !7342

if.then270:                                       ; preds = %if.end263
  %operands272 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7343
  %34 = load %union.tree_node*, %union.tree_node** %operands272, align 8, !dbg !7343
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !7220, metadata !DIExpression()), !dbg !7269
  %type275 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7345
  %35 = load %union.tree_node*, %union.tree_node** %type275, align 8, !dbg !7345
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !7223, metadata !DIExpression()), !dbg !7269
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7346
  %bf.load277 = load i64, i64* %36, align 8, !dbg !7346
  %37 = trunc i64 %bf.load277 to i32, !dbg !7346
  %bf.cast279 = and i32 %37, 65535, !dbg !7346
  %cmp280 = icmp eq i32 %bf.cast279, %bf.cast207, !dbg !7346
  br i1 %cmp280, label %if.end287, label %cond.true282, !dbg !7346

cond.true282:                                     ; preds = %if.then270
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 4009, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7346
  br label %if.end287, !dbg !7346

if.end287:                                        ; preds = %if.end263, %if.then270, %cond.true282, %land.lhs.true237, %land.lhs.true, %lor.lhs.false222
  %semantic_result_type.0 = phi %union.tree_node* [ null, %lor.lhs.false222 ], [ null, %land.lhs.true ], [ null, %land.lhs.true237 ], [ %call247, %cond.true282 ], [ %call247, %if.then270 ], [ %call247, %if.end263 ], !dbg !7269
  %type2.1 = phi %union.tree_node* [ %22, %lor.lhs.false222 ], [ %22, %land.lhs.true ], [ %22, %land.lhs.true237 ], [ %35, %cond.true282 ], [ %35, %if.then270 ], [ %22, %if.end263 ], !dbg !7269
  %type1.1 = phi %union.tree_node* [ %19, %lor.lhs.false222 ], [ %19, %land.lhs.true ], [ %19, %land.lhs.true237 ], [ %type1.0, %cond.true282 ], [ %type1.0, %if.then270 ], [ %type1.0, %if.end263 ], !dbg !7269
  %op2.addr.3 = phi %union.tree_node* [ %op2.addr.1, %lor.lhs.false222 ], [ %op2.addr.1, %land.lhs.true ], [ %op2.addr.1, %land.lhs.true237 ], [ %34, %cond.true282 ], [ %34, %if.then270 ], [ %op2.addr.1, %if.end263 ], !dbg !7269
  %op1.addr.3 = phi %union.tree_node* [ %op1.addr.1, %lor.lhs.false222 ], [ %op1.addr.1, %land.lhs.true ], [ %op1.addr.1, %land.lhs.true237 ], [ %op1.addr.2, %cond.true282 ], [ %op1.addr.2, %if.then270 ], [ %op1.addr.2, %if.end263 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.3, metadata !7218, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.addr.3, metadata !7220, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.1, metadata !7222, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.1, metadata !7223, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_result_type.0, metadata !7227, metadata !DIExpression()), !dbg !7269
  %38 = load i32, i32* @warn_cxx_compat, align 4, !dbg !7347
  %tobool288 = icmp eq i32 %38, 0, !dbg !7347
  br i1 %tobool288, label %if.end326, label %if.then289, !dbg !7348

if.then289:                                       ; preds = %if.end287
  %tobool290 = icmp eq %union.tree_node* %op1_original_type, null, !dbg !7349
  br i1 %tobool290, label %cond.false292, label %cond.end295, !dbg !7349

cond.false292:                                    ; preds = %if.then289
  %39 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7350
  br label %cond.end295, !dbg !7349

cond.end295:                                      ; preds = %if.then289, %cond.false292
  %cond296 = phi %union.tree_node* [ %39, %cond.false292 ], [ %op1_original_type, %if.then289 ], !dbg !7349
  call void @llvm.dbg.value(metadata %union.tree_node* %cond296, metadata !7237, metadata !DIExpression()), !dbg !7351
  %tobool297 = icmp eq %union.tree_node* %op2_original_type, null, !dbg !7352
  br i1 %tobool297, label %cond.false299, label %cond.end302, !dbg !7352

cond.false299:                                    ; preds = %cond.end295
  %40 = load %union.tree_node*, %union.tree_node** %type35, align 8, !dbg !7353
  br label %cond.end302, !dbg !7352

cond.end302:                                      ; preds = %cond.end295, %cond.false299
  %cond303 = phi %union.tree_node* [ %40, %cond.false299 ], [ %op2_original_type, %cond.end295 ], !dbg !7352
  call void @llvm.dbg.value(metadata %union.tree_node* %cond303, metadata !7240, metadata !DIExpression()), !dbg !7351
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond296, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7354
  %bf.load305 = load i64, i64* %41, align 8, !dbg !7354
  %bf.cast30741 = and i64 %bf.load305, 65535, !dbg !7356
  %cmp308 = icmp eq i64 %bf.cast30741, 6, !dbg !7356
  br i1 %cmp308, label %land.lhs.true310, label %if.end326, !dbg !7357

land.lhs.true310:                                 ; preds = %cond.end302
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond303, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7358
  %bf.load312 = load i64, i64* %42, align 8, !dbg !7358
  %bf.cast31442 = and i64 %bf.load312, 65535, !dbg !7359
  %cmp315 = icmp eq i64 %bf.cast31442, 6, !dbg !7359
  br i1 %cmp315, label %land.lhs.true317, label %if.end326, !dbg !7360

land.lhs.true317:                                 ; preds = %land.lhs.true310
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond296, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7361
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !7361
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond303, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7362
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8, !dbg !7362
  %cmp321 = icmp eq %union.tree_node* %44, %46, !dbg !7363
  br i1 %cmp321, label %if.end326, label %if.then323, !dbg !7364

if.then323:                                       ; preds = %land.lhs.true317
  %call324 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %colon_loc, i32 49, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.55, i64 0, i64 0), %union.tree_node* %cond296, %union.tree_node* %cond303) #6, !dbg !7365
  br label %if.end326, !dbg !7365

if.end326:                                        ; preds = %land.lhs.true317, %if.end287, %cond.end302, %land.lhs.true310, %if.then323
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7366
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !7366
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7367
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !7367
  %cmp331 = icmp eq %union.tree_node* %48, %50, !dbg !7368
  br i1 %cmp331, label %if.then333, label %if.else340, !dbg !7369

if.then333:                                       ; preds = %if.end326
  %cmp334 = icmp eq %union.tree_node* %type1.1, %type2.1, !dbg !7370
  br i1 %cmp334, label %if.end603, label %if.else, !dbg !7373

if.else:                                          ; preds = %if.then333
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !7226, metadata !DIExpression()), !dbg !7269
  br label %if.end603

if.else340:                                       ; preds = %if.end326
  %trunc = trunc i64 %bf.load180 to i16, !dbg !7374
  switch i16 %trunc, label %lor.lhs.false453 [
    i16 8, label %land.lhs.true349
    i16 9, label %land.lhs.true349
    i16 13, label %land.lhs.true349
    i16 19, label %lor.lhs.false459
  ], !dbg !7374

land.lhs.true349:                                 ; preds = %if.else340, %if.else340, %if.else340
  %trunc35 = trunc i64 %bf.load189 to i16, !dbg !7375
  switch i16 %trunc35, label %if.else450 [
    i16 8, label %if.then358
    i16 9, label %if.then358
    i16 13, label %if.then358
  ], !dbg !7375

if.then358:                                       ; preds = %land.lhs.true349, %land.lhs.true349, %land.lhs.true349
  %call359 = tail call fastcc %union.tree_node* @c_common_type(%union.tree_node* %type1.1, %union.tree_node* %type2.1) #7, !dbg !7376
  call void @llvm.dbg.value(metadata %union.tree_node* %call359, metadata !7226, metadata !DIExpression()), !dbg !7269
  %51 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !7377
  %cmp360 = icmp eq i32 %51, 0, !dbg !7378
  br i1 %cmp360, label %if.then362, label %if.end603, !dbg !7379

if.then362:                                       ; preds = %if.then358
  %52 = load i64*, i64** %0, align 8, !dbg !7380
  %bf.load366 = load i64, i64* %52, align 8, !dbg !7380
  %bf.lshr367 = lshr i64 %bf.load366, 21, !dbg !7380
  %53 = trunc i64 %bf.lshr367 to i32, !dbg !7380
  %bf.cast369 = and i32 %53, 1, !dbg !7380
  call void @llvm.dbg.value(metadata i32 %bf.cast369, metadata !7241, metadata !DIExpression()), !dbg !7381
  %54 = load i64*, i64** %4, align 8, !dbg !7382
  %bf.load373 = load i64, i64* %54, align 8, !dbg !7382
  %bf.lshr374 = lshr i64 %bf.load373, 21, !dbg !7382
  %55 = trunc i64 %bf.lshr374 to i32, !dbg !7382
  %bf.cast376 = and i32 %55, 1, !dbg !7382
  call void @llvm.dbg.value(metadata i32 %bf.cast376, metadata !7247, metadata !DIExpression()), !dbg !7381
  %tobool377 = icmp eq i32 %bf.cast369, %bf.cast376, !dbg !7383
  br i1 %tobool377, label %if.end603, label %if.then378, !dbg !7384

if.then378:                                       ; preds = %if.then362
  call void @llvm.dbg.value(metadata i8* %ovf, metadata !7248, metadata !DIExpression(DW_OP_deref)), !dbg !7385
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %ovf) #8, !dbg !7386
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %call359, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7387
  %bf.load380 = load i64, i64* %56, align 8, !dbg !7387
  %bf.cast38336 = and i64 %bf.load380, 2097152, !dbg !7387
  %tobool384 = icmp eq i64 %bf.cast38336, 0, !dbg !7387
  br i1 %tobool384, label %if.end447, label %if.else386, !dbg !7388

if.else386:                                       ; preds = %if.then378
  call void @llvm.dbg.value(metadata i8* %op1_maybe_const, metadata !7251, metadata !DIExpression(DW_OP_deref)), !dbg !7389
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op1_maybe_const) #8, !dbg !7390
  call void @llvm.dbg.value(metadata i8 1, metadata !7251, metadata !DIExpression()), !dbg !7389
  store i8 1, i8* %op1_maybe_const, align 1, !dbg !7391
  call void @llvm.dbg.value(metadata i8* %op2_maybe_const, metadata !7254, metadata !DIExpression(DW_OP_deref)), !dbg !7389
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %op2_maybe_const) #8, !dbg !7392
  call void @llvm.dbg.value(metadata i8 1, metadata !7254, metadata !DIExpression()), !dbg !7389
  store i8 1, i8* %op2_maybe_const, align 1, !dbg !7393
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !7394
  %cmp387 = icmp eq %union.tree_node* %ifexp.addr.0, %57, !dbg !7395
  %conv388 = zext i1 %cmp387 to i32, !dbg !7395
  store i32 %conv388, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !7396
  %58 = load i32, i32* @require_constant_value, align 4, !dbg !7397
  %conv389 = trunc i32 %58 to i8, !dbg !7397
  call void @llvm.dbg.value(metadata i8* %op1_maybe_const, metadata !7251, metadata !DIExpression(DW_OP_deref)), !dbg !7389
  %call390 = call %union.tree_node* @c_fully_fold(%union.tree_node* %op1.addr.3, i8 zeroext %conv389, i8* nonnull %op1_maybe_const) #6, !dbg !7398
  call void @llvm.dbg.value(metadata %union.tree_node* %call390, metadata !7218, metadata !DIExpression()), !dbg !7269
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !7399
  %cmp391 = icmp eq %union.tree_node* %ifexp.addr.0, %59, !dbg !7400
  %conv392 = zext i1 %cmp391 to i32, !dbg !7400
  %60 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !7401
  %sub = sub nsw i32 %60, %conv392, !dbg !7401
  %61 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !7402
  %cmp393 = icmp eq %union.tree_node* %ifexp.addr.0, %61, !dbg !7403
  %conv394 = zext i1 %cmp393 to i32, !dbg !7403
  %add395 = add nsw i32 %sub, %conv394, !dbg !7404
  store i32 %add395, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !7404
  %62 = load i32, i32* @require_constant_value, align 4, !dbg !7405
  %conv396 = trunc i32 %62 to i8, !dbg !7405
  call void @llvm.dbg.value(metadata i8* %op2_maybe_const, metadata !7254, metadata !DIExpression(DW_OP_deref)), !dbg !7389
  %call397 = call %union.tree_node* @c_fully_fold(%union.tree_node* %op2.addr.3, i8 zeroext %conv396, i8* nonnull %op2_maybe_const) #6, !dbg !7406
  call void @llvm.dbg.value(metadata %union.tree_node* %call397, metadata !7220, metadata !DIExpression()), !dbg !7269
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !7407
  %cmp398 = icmp eq %union.tree_node* %ifexp.addr.0, %63, !dbg !7408
  %conv399 = zext i1 %cmp398 to i32, !dbg !7408
  %64 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !7409
  %sub400 = sub nsw i32 %64, %conv399, !dbg !7409
  store i32 %sub400, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !7409
  %65 = load i32, i32* @warn_sign_compare, align 4, !dbg !7410
  %tobool401 = icmp eq i32 %65, 0, !dbg !7410
  br i1 %tobool401, label %if.end418, label %if.then402, !dbg !7412

if.then402:                                       ; preds = %if.else386
  %tobool403 = icmp eq i32 %bf.cast376, 0, !dbg !7413
  br i1 %tobool403, label %lor.lhs.false408, label %land.lhs.true404, !dbg !7416

land.lhs.true404:                                 ; preds = %if.then402
  call void @llvm.dbg.value(metadata i8* %ovf, metadata !7248, metadata !DIExpression(DW_OP_deref)), !dbg !7385
  %call405 = call zeroext i8 @tree_expr_nonnegative_warnv_p(%union.tree_node* %call390, i8* nonnull %ovf) #6, !dbg !7417
  %tobool407 = icmp eq i8 %call405, 0, !dbg !7417
  br i1 %tobool407, label %lor.lhs.false408, label %if.end418, !dbg !7418

lor.lhs.false408:                                 ; preds = %land.lhs.true404, %if.then402
  %tobool409 = icmp eq i32 %bf.cast369, 0, !dbg !7419
  br i1 %tobool409, label %if.else415, label %land.lhs.true410, !dbg !7420

land.lhs.true410:                                 ; preds = %lor.lhs.false408
  call void @llvm.dbg.value(metadata i8* %ovf, metadata !7248, metadata !DIExpression(DW_OP_deref)), !dbg !7385
  %call411 = call zeroext i8 @tree_expr_nonnegative_warnv_p(%union.tree_node* %call397, i8* nonnull %ovf) #6, !dbg !7421
  %tobool413 = icmp eq i8 %call411, 0, !dbg !7421
  br i1 %tobool413, label %if.else415, label %if.end418, !dbg !7422

if.else415:                                       ; preds = %land.lhs.true410, %lor.lhs.false408
  %call416 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %colon_loc, i32 177, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.56, i64 0, i64 0)) #6, !dbg !7423
  br label %if.end418

if.end418:                                        ; preds = %land.lhs.true404, %land.lhs.true410, %if.else386, %if.else415
  %66 = load i8, i8* %op1_maybe_const, align 1, !dbg !7424
  call void @llvm.dbg.value(metadata i8 %66, metadata !7251, metadata !DIExpression()), !dbg !7389
  %tobool419 = icmp eq i8 %66, 0, !dbg !7424
  br i1 %tobool419, label %if.then427, label %lor.lhs.false420, !dbg !7426

lor.lhs.false420:                                 ; preds = %if.end418
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %call390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7427
  %bf.load422 = load i64, i64* %67, align 8, !dbg !7427
  %bf.cast42438 = and i64 %bf.load422, 65535, !dbg !7428
  %cmp425 = icmp eq i64 %bf.cast42438, 23, !dbg !7428
  br i1 %cmp425, label %if.end431, label %if.then427, !dbg !7429

if.then427:                                       ; preds = %lor.lhs.false420, %if.end418
  call void @llvm.dbg.value(metadata i8 %66, metadata !7251, metadata !DIExpression()), !dbg !7389
  %conv429 = zext i1 %tobool419 to i8, !dbg !7430
  %call430 = call %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %call390, i8 zeroext %conv429) #6, !dbg !7431
  call void @llvm.dbg.value(metadata %union.tree_node* %call430, metadata !7218, metadata !DIExpression()), !dbg !7269
  br label %if.end431, !dbg !7432

if.end431:                                        ; preds = %lor.lhs.false420, %if.then427
  %op1.addr.4 = phi %union.tree_node* [ %call430, %if.then427 ], [ %call390, %lor.lhs.false420 ], !dbg !7389
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.4, metadata !7218, metadata !DIExpression()), !dbg !7269
  %68 = load i8, i8* %op2_maybe_const, align 1, !dbg !7433
  call void @llvm.dbg.value(metadata i8 %68, metadata !7254, metadata !DIExpression()), !dbg !7389
  %tobool432 = icmp eq i8 %68, 0, !dbg !7433
  br i1 %tobool432, label %if.then440, label %lor.lhs.false433, !dbg !7435

lor.lhs.false433:                                 ; preds = %if.end431
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7436
  %bf.load435 = load i64, i64* %69, align 8, !dbg !7436
  %bf.cast43737 = and i64 %bf.load435, 65535, !dbg !7437
  %cmp438 = icmp eq i64 %bf.cast43737, 23, !dbg !7437
  br i1 %cmp438, label %if.end446, label %if.then440, !dbg !7438

if.then440:                                       ; preds = %lor.lhs.false433, %if.end431
  call void @llvm.dbg.value(metadata i8 %68, metadata !7254, metadata !DIExpression()), !dbg !7389
  %conv444 = zext i1 %tobool432 to i8, !dbg !7439
  %call445 = call %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %call397, i8 zeroext %conv444) #6, !dbg !7440
  call void @llvm.dbg.value(metadata %union.tree_node* %call445, metadata !7220, metadata !DIExpression()), !dbg !7269
  br label %if.end446, !dbg !7441

if.end446:                                        ; preds = %lor.lhs.false433, %if.then440
  %op2.addr.4 = phi %union.tree_node* [ %call445, %if.then440 ], [ %call397, %lor.lhs.false433 ], !dbg !7389
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.addr.4, metadata !7220, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8* %op2_maybe_const, metadata !7254, metadata !DIExpression(DW_OP_deref)), !dbg !7389
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op2_maybe_const) #8, !dbg !7442
  call void @llvm.dbg.value(metadata i8* %op1_maybe_const, metadata !7251, metadata !DIExpression(DW_OP_deref)), !dbg !7389
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %op1_maybe_const) #8, !dbg !7442
  br label %if.end447

if.end447:                                        ; preds = %if.then378, %if.end446
  %op2.addr.5 = phi %union.tree_node* [ %op2.addr.4, %if.end446 ], [ %op2.addr.3, %if.then378 ], !dbg !7269
  %op1.addr.5 = phi %union.tree_node* [ %op1.addr.4, %if.end446 ], [ %op1.addr.3, %if.then378 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.5, metadata !7218, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.addr.5, metadata !7220, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8* %ovf, metadata !7248, metadata !DIExpression(DW_OP_deref)), !dbg !7385
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %ovf) #8, !dbg !7443
  br label %if.end603, !dbg !7444

if.else450:                                       ; preds = %land.lhs.true349
  %cmp451 = icmp eq i32 %bf.cast201, 19, !dbg !7445
  %cmp454 = icmp eq i32 %bf.cast207, 19, !dbg !7446
  %or.cond2 = or i1 %cmp451, %cmp454, !dbg !7447
  br i1 %or.cond2, label %if.then456, label %if.else465, !dbg !7447

lor.lhs.false453:                                 ; preds = %if.else340
  %cmp454.old = icmp eq i32 %bf.cast207, 19, !dbg !7446
  br i1 %cmp454.old, label %if.then456, label %if.else465, !dbg !7448

if.then456:                                       ; preds = %lor.lhs.false453, %if.else450
  %cmp457 = icmp ne i32 %bf.cast201, 19, !dbg !7449
  %cmp460 = icmp ne i32 %bf.cast207, 19, !dbg !7452
  %or.cond3 = or i1 %cmp457, %cmp460, !dbg !7453
  br i1 %or.cond3, label %if.then462, label %if.end464, !dbg !7453

lor.lhs.false459:                                 ; preds = %if.else340
  %cmp460.old = icmp eq i32 %bf.cast207, 19, !dbg !7452
  br i1 %cmp460.old, label %if.end464, label %if.then462, !dbg !7454

if.then462:                                       ; preds = %lor.lhs.false459, %if.then456
  %call463 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %colon_loc, i32 834, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !7455
  br label %if.end464, !dbg !7455

if.end464:                                        ; preds = %lor.lhs.false459, %if.then456, %if.then462
  %70 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7456
  call void @llvm.dbg.value(metadata %union.tree_node* %70, metadata !7226, metadata !DIExpression()), !dbg !7269
  br label %if.end603, !dbg !7457

if.else465:                                       ; preds = %if.else450, %lor.lhs.false453
  %cmp466 = icmp eq i32 %bf.cast201, 10, !dbg !7458
  %cmp469 = icmp eq i32 %bf.cast207, 10, !dbg !7459
  %or.cond4 = and i1 %cmp466, %cmp469, !dbg !7460
  br i1 %or.cond4, label %if.then471, label %if.else572, !dbg !7460

if.then471:                                       ; preds = %if.else465
  %type473 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7461
  %71 = bitcast %union.tree_node** %type473 to i64**, !dbg !7461
  %72 = load i64*, i64** %71, align 8, !dbg !7461
  %bf.load475 = load i64, i64* %72, align 8, !dbg !7461
  %bf.lshr476 = lshr i64 %bf.load475, 56, !dbg !7461
  %conv478 = trunc i64 %bf.lshr476 to i8, !dbg !7461
  call void @llvm.dbg.value(metadata i8 %conv478, metadata !7255, metadata !DIExpression()), !dbg !7462
  %type480 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7463
  %73 = bitcast %union.tree_node** %type480 to i64**, !dbg !7463
  %74 = load i64*, i64** %73, align 8, !dbg !7463
  %bf.load482 = load i64, i64* %74, align 8, !dbg !7463
  %bf.lshr483 = lshr i64 %bf.load482, 56, !dbg !7463
  %conv485 = trunc i64 %bf.lshr483 to i8, !dbg !7463
  call void @llvm.dbg.value(metadata i8 %conv485, metadata !7259, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7260, metadata !DIExpression(DW_OP_deref)), !dbg !7462
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !7464
  %call486 = tail call fastcc i32 @comp_target_types(i32 %colon_loc, %union.tree_node* %type1.1, %union.tree_node* %type2.1) #7, !dbg !7465
  %tobool487 = icmp eq i32 %call486, 0, !dbg !7465
  br i1 %tobool487, label %if.else490, label %if.then488, !dbg !7466

if.then488:                                       ; preds = %if.then471
  %call489 = tail call fastcc %union.tree_node* @common_pointer_type(%union.tree_node* %type1.1, %union.tree_node* %type2.1) #7, !dbg !7467
  call void @llvm.dbg.value(metadata %union.tree_node* %call489, metadata !7226, metadata !DIExpression()), !dbg !7269
  br label %cleanup, !dbg !7468

if.else490:                                       ; preds = %if.then471
  %call491 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %op1) #7, !dbg !7469
  %tobool492 = icmp eq i8 %call491, 0, !dbg !7469
  br i1 %tobool492, label %if.else494, label %cleanup, !dbg !7470

if.else494:                                       ; preds = %if.else490
  %call495 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %op2) #7, !dbg !7471
  %tobool496 = icmp eq i8 %call495, 0, !dbg !7471
  br i1 %tobool496, label %if.else498, label %cleanup, !dbg !7472

if.else498:                                       ; preds = %if.else494
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7260, metadata !DIExpression(DW_OP_deref)), !dbg !7462
  %call499 = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv478, i8 zeroext %conv485, i8* nonnull %as_common) #7, !dbg !7473
  %tobool500 = icmp eq i8 %call499, 0, !dbg !7473
  br i1 %tobool500, label %if.then501, label %if.else502, !dbg !7474

if.then501:                                       ; preds = %if.else498
  call void (i32, i8*, ...) @error_at(i32 %colon_loc, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !7475
  %75 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7477
  br label %cleanup, !dbg !7478

if.else502:                                       ; preds = %if.else498
  %76 = load i64*, i64** %71, align 8, !dbg !7479
  %bf.load506 = load i64, i64* %76, align 8, !dbg !7479
  %bf.cast50839 = and i64 %bf.load506, 65535, !dbg !7479
  %cmp509 = icmp eq i64 %bf.cast50839, 19, !dbg !7479
  %77 = load i64*, i64** %73, align 8, !dbg !7480
  %bf.load515 = load i64, i64* %77, align 8, !dbg !7480
  %78 = trunc i64 %bf.load515 to i32, !dbg !7480
  %bf.cast517 = and i32 %78, 65535, !dbg !7480
  %79 = bitcast i64* %77 to %union.tree_node*, !dbg !7481
  %80 = bitcast i64* %76 to %union.tree_node*, !dbg !7481
  br i1 %cmp509, label %if.then511, label %if.else529, !dbg !7481

if.then511:                                       ; preds = %if.else502
  %cmp518 = icmp eq i32 %bf.cast517, 20, !dbg !7482
  br i1 %cmp518, label %if.then520, label %if.end522, !dbg !7485

if.then520:                                       ; preds = %if.then511
  %call521 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %colon_loc, i32 834, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !7486
  %.pre57 = load %union.tree_node*, %union.tree_node** %type473, align 8, !dbg !7487
  %.pre58 = load %union.tree_node*, %union.tree_node** %type480, align 8, !dbg !7488
  br label %if.end522, !dbg !7486

if.end522:                                        ; preds = %if.then520, %if.then511
  %81 = phi %union.tree_node* [ %.pre58, %if.then520 ], [ %79, %if.then511 ], !dbg !7488
  %82 = phi %union.tree_node* [ %.pre57, %if.then520 ], [ %80, %if.then511 ], !dbg !7487
  %call527 = call fastcc %union.tree_node* @qualify_type(%union.tree_node* %82, %union.tree_node* %81) #7, !dbg !7489
  %call528 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call527) #6, !dbg !7490
  call void @llvm.dbg.value(metadata %union.tree_node* %call528, metadata !7226, metadata !DIExpression()), !dbg !7269
  br label %cleanup, !dbg !7491

if.else529:                                       ; preds = %if.else502
  %cmp536 = icmp eq i32 %bf.cast517, 19, !dbg !7492
  br i1 %cmp536, label %if.then538, label %if.else556, !dbg !7493

if.then538:                                       ; preds = %if.else529
  %cmp545 = icmp eq i64 %bf.cast50839, 20, !dbg !7494
  br i1 %cmp545, label %if.then547, label %if.end549, !dbg !7497

if.then547:                                       ; preds = %if.then538
  %call548 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %colon_loc, i32 834, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !7498
  %.pre = load %union.tree_node*, %union.tree_node** %type480, align 8, !dbg !7499
  %.pre56 = load %union.tree_node*, %union.tree_node** %type473, align 8, !dbg !7500
  br label %if.end549, !dbg !7498

if.end549:                                        ; preds = %if.then547, %if.then538
  %83 = phi %union.tree_node* [ %.pre56, %if.then547 ], [ %80, %if.then538 ], !dbg !7500
  %84 = phi %union.tree_node* [ %.pre, %if.then547 ], [ %79, %if.then538 ], !dbg !7499
  %call554 = call fastcc %union.tree_node* @qualify_type(%union.tree_node* %84, %union.tree_node* %83) #7, !dbg !7501
  %call555 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call554) #6, !dbg !7502
  call void @llvm.dbg.value(metadata %union.tree_node* %call555, metadata !7226, metadata !DIExpression()), !dbg !7269
  br label %cleanup, !dbg !7503

if.else556:                                       ; preds = %if.else529
  %85 = load i8, i8* %as_common, align 1, !dbg !7504
  call void @llvm.dbg.value(metadata i8 %85, metadata !7260, metadata !DIExpression()), !dbg !7462
  %conv557 = zext i8 %85 to i32, !dbg !7504
  %shl = shl nuw nsw i32 %conv557, 8, !dbg !7504
  call void @llvm.dbg.value(metadata i32 %shl, metadata !7261, metadata !DIExpression()), !dbg !7505
  %tobool558 = icmp eq i8 %call215, 0, !dbg !7506
  br i1 %tobool558, label %if.then559, label %if.end561, !dbg !7508

if.then559:                                       ; preds = %if.else556
  %call560 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %colon_loc, i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !7509
  br label %if.end561, !dbg !7509

if.end561:                                        ; preds = %if.else556, %if.then559
  %86 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7510
  %call562 = call %union.tree_node* @build_qualified_type(%union.tree_node* %86, i32 %shl) #6, !dbg !7511
  %call563 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call562) #6, !dbg !7512
  call void @llvm.dbg.value(metadata %union.tree_node* %call563, metadata !7226, metadata !DIExpression()), !dbg !7269
  br label %cleanup

cleanup:                                          ; preds = %if.else494, %if.else490, %if.then488, %if.end522, %if.end561, %if.end549, %if.then501
  %result_type.6 = phi %union.tree_node* [ null, %if.then501 ], [ %call489, %if.then488 ], [ %type2.1, %if.else490 ], [ %type1.1, %if.else494 ], [ %call528, %if.end522 ], [ %call555, %if.end549 ], [ %call563, %if.end561 ], !dbg !7269
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then501 ], [ true, %if.then488 ], [ true, %if.else490 ], [ true, %if.else494 ], [ true, %if.end522 ], [ true, %if.end549 ], [ true, %if.end561 ]
  %retval.0 = phi %union.tree_node* [ %75, %if.then501 ], [ undef, %if.then488 ], [ undef, %if.else490 ], [ undef, %if.else494 ], [ undef, %if.end522 ], [ undef, %if.end549 ], [ undef, %if.end561 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.6, metadata !7226, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7260, metadata !DIExpression(DW_OP_deref)), !dbg !7462
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !7513
  br i1 %cleanup.dest.slot.0, label %if.end603, label %cleanup740

if.else572:                                       ; preds = %if.else465
  %cmp576 = icmp eq i32 %bf.cast207, 8, !dbg !7514
  %or.cond5 = and i1 %cmp466, %cmp576, !dbg !7516
  br i1 %or.cond5, label %if.then578, label %if.else585, !dbg !7516

if.then578:                                       ; preds = %if.else572
  %call579 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %op2) #7, !dbg !7517
  %tobool580 = icmp eq i8 %call579, 0, !dbg !7517
  br i1 %tobool580, label %if.then581, label %if.else583, !dbg !7520

if.then581:                                       ; preds = %if.then578
  %call582 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %colon_loc, i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !7521
  br label %if.end603, !dbg !7521

if.else583:                                       ; preds = %if.then578
  %87 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !7522
  call void @llvm.dbg.value(metadata %union.tree_node* %87, metadata !7220, metadata !DIExpression()), !dbg !7269
  br label %if.end603

if.else585:                                       ; preds = %if.else572
  %cmp589 = icmp eq i32 %bf.cast201, 8, !dbg !7524
  %or.cond6 = and i1 %cmp469, %cmp589, !dbg !7526
  br i1 %or.cond6, label %if.then591, label %if.end603, !dbg !7526

if.then591:                                       ; preds = %if.else585
  %call592 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %op1) #7, !dbg !7527
  %tobool593 = icmp eq i8 %call592, 0, !dbg !7527
  br i1 %tobool593, label %if.then594, label %if.else596, !dbg !7530

if.then594:                                       ; preds = %if.then591
  %call595 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %colon_loc, i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !7531
  br label %if.end603, !dbg !7531

if.else596:                                       ; preds = %if.then591
  %88 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !7532
  call void @llvm.dbg.value(metadata %union.tree_node* %88, metadata !7218, metadata !DIExpression()), !dbg !7269
  br label %if.end603

if.end603:                                        ; preds = %if.then362, %if.end447, %if.then358, %cleanup, %if.else585, %if.else596, %if.then594, %if.then581, %if.else583, %if.end464, %if.else, %if.then333
  %result_type.12 = phi %union.tree_node* [ %48, %if.else ], [ %type2.1, %if.then333 ], [ %call359, %if.then362 ], [ %call359, %if.end447 ], [ %call359, %if.then358 ], [ %70, %if.end464 ], [ %result_type.6, %cleanup ], [ %type1.1, %if.else583 ], [ %type1.1, %if.then581 ], [ null, %if.else585 ], [ %type2.1, %if.else596 ], [ %type2.1, %if.then594 ], !dbg !7534
  %op2.addr.13 = phi %union.tree_node* [ %op2.addr.3, %if.else ], [ %op2.addr.3, %if.then333 ], [ %op2.addr.3, %if.then362 ], [ %op2.addr.5, %if.end447 ], [ %op2.addr.3, %if.then358 ], [ %op2.addr.3, %if.end464 ], [ %op2.addr.3, %cleanup ], [ %87, %if.else583 ], [ %op2.addr.3, %if.then581 ], [ %op2.addr.3, %if.else585 ], [ %op2.addr.3, %if.else596 ], [ %op2.addr.3, %if.then594 ], !dbg !7269
  %op1.addr.14 = phi %union.tree_node* [ %op1.addr.3, %if.else ], [ %op1.addr.3, %if.then333 ], [ %op1.addr.3, %if.then362 ], [ %op1.addr.5, %if.end447 ], [ %op1.addr.3, %if.then358 ], [ %op1.addr.3, %if.end464 ], [ %op1.addr.3, %cleanup ], [ %op1.addr.3, %if.else583 ], [ %op1.addr.3, %if.then581 ], [ %op1.addr.3, %if.else585 ], [ %88, %if.else596 ], [ %op1.addr.3, %if.then594 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.14, metadata !7218, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.addr.13, metadata !7220, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.12, metadata !7226, metadata !DIExpression()), !dbg !7269
  %tobool604 = icmp eq %union.tree_node* %result_type.12, null, !dbg !7535
  br i1 %tobool604, label %if.then605, label %if.end610, !dbg !7537

if.then605:                                       ; preds = %if.end603
  %89 = load i32, i32* @flag_cond_mismatch, align 4, !dbg !7538
  %tobool606 = icmp eq i32 %89, 0, !dbg !7538
  br i1 %tobool606, label %if.else608, label %if.then607, !dbg !7541

if.then607:                                       ; preds = %if.then605
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7542
  call void @llvm.dbg.value(metadata %union.tree_node* %90, metadata !7226, metadata !DIExpression()), !dbg !7269
  br label %if.end610, !dbg !7543

if.else608:                                       ; preds = %if.then605
  call void (i32, i8*, ...) @error_at(i32 %colon_loc, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.62, i64 0, i64 0)) #6, !dbg !7544
  %91 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7546
  br label %cleanup740, !dbg !7547

if.end610:                                        ; preds = %if.end603, %if.then607
  %result_type.13 = phi %union.tree_node* [ %result_type.12, %if.end603 ], [ %90, %if.then607 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %result_type.13, metadata !7226, metadata !DIExpression()), !dbg !7269
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7548
  %bf.load612 = load i64, i64* %92, align 8, !dbg !7548
  %bf.cast61526 = and i64 %bf.load612, 1048576, !dbg !7548
  %tobool616 = icmp eq i64 %bf.cast61526, 0, !dbg !7548
  br i1 %tobool616, label %lor.rhs617, label %lor.end624, !dbg !7548

lor.rhs617:                                       ; preds = %if.end610
  %93 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7548
  %bf.load619 = load i64, i64* %93, align 8, !dbg !7548
  %bf.cast62227 = lshr i64 %bf.load619, 20, !dbg !7548
  %94 = trunc i64 %bf.cast62227 to i32, !dbg !7548
  %95 = and i32 %94, 1, !dbg !7548
  br label %lor.end624, !dbg !7548

lor.end624:                                       ; preds = %if.end610, %lor.rhs617
  %96 = phi i32 [ 1, %if.end610 ], [ %95, %lor.rhs617 ]
  %bf.cast63028 = and i64 %bf.load612, 524288, !dbg !7548
  %tobool631 = icmp eq i64 %bf.cast63028, 0, !dbg !7548
  br i1 %tobool631, label %lor.rhs632, label %lor.end639, !dbg !7548

lor.rhs632:                                       ; preds = %lor.end624
  %97 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7548
  %bf.load634 = load i64, i64* %97, align 8, !dbg !7548
  %bf.cast63729 = lshr i64 %bf.load634, 18, !dbg !7548
  %98 = trunc i64 %bf.cast63729 to i32, !dbg !7548
  %99 = and i32 %98, 2, !dbg !7548
  br label %lor.end639, !dbg !7548

lor.end639:                                       ; preds = %lor.end624, %lor.rhs632
  %100 = phi i32 [ 2, %lor.end624 ], [ %99, %lor.rhs632 ]
  %or = or i32 %96, %100, !dbg !7548
  %call641 = call %union.tree_node* @build_qualified_type(%union.tree_node* %result_type.13, i32 %or) #6, !dbg !7548
  call void @llvm.dbg.value(metadata %union.tree_node* %call641, metadata !7226, metadata !DIExpression()), !dbg !7269
  %call642 = call fastcc %union.tree_node* @ep_convert_and_check(%union.tree_node* %call641, %union.tree_node* %op1.addr.14, %union.tree_node* %semantic_result_type.0) #7, !dbg !7549
  call void @llvm.dbg.value(metadata %union.tree_node* %call642, metadata !7218, metadata !DIExpression()), !dbg !7269
  %call643 = call fastcc %union.tree_node* @ep_convert_and_check(%union.tree_node* %call641, %union.tree_node* %op2.addr.13, %union.tree_node* %semantic_result_type.0) #7, !dbg !7550
  call void @llvm.dbg.value(metadata %union.tree_node* %call643, metadata !7220, metadata !DIExpression()), !dbg !7269
  %tobool645 = icmp ne i8 %ifexp_bcp, 0, !dbg !7551
  %101 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !7553
  %cmp647 = icmp eq %union.tree_node* %ifexp.addr.0, %101, !dbg !7554
  %or.cond7 = and i1 %tobool645, %cmp647, !dbg !7555
  br i1 %or.cond7, label %if.then649, label %if.end652, !dbg !7555

if.then649:                                       ; preds = %lor.end639
  call void @llvm.dbg.value(metadata i8 1, metadata !7232, metadata !DIExpression()), !dbg !7269
  %102 = load i32, i32* @require_constant_value, align 4, !dbg !7556
  %conv650 = trunc i32 %102 to i8, !dbg !7556
  %call651 = call %union.tree_node* @c_fully_fold(%union.tree_node* %call642, i8 zeroext %conv650, i8* null) #6, !dbg !7558
  call void @llvm.dbg.value(metadata %union.tree_node* %call651, metadata !7218, metadata !DIExpression()), !dbg !7269
  br label %if.end652, !dbg !7559

if.end652:                                        ; preds = %if.then649, %lor.end639
  %op2_int_operands.0 = phi i8 [ 1, %if.then649 ], [ %conv86, %lor.end639 ], !dbg !7269
  %op1.addr.15 = phi %union.tree_node* [ %call651, %if.then649 ], [ %call642, %lor.end639 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.15, metadata !7218, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8 %op2_int_operands.0, metadata !7232, metadata !DIExpression()), !dbg !7269
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !7560
  %cmp656 = icmp eq %union.tree_node* %ifexp.addr.0, %103, !dbg !7562
  %or.cond8 = and i1 %tobool645, %cmp656, !dbg !7563
  br i1 %or.cond8, label %if.then658, label %if.end661, !dbg !7563

if.then658:                                       ; preds = %if.end652
  call void @llvm.dbg.value(metadata i8 1, metadata !7231, metadata !DIExpression()), !dbg !7269
  %104 = load i32, i32* @require_constant_value, align 4, !dbg !7564
  %conv659 = trunc i32 %104 to i8, !dbg !7564
  %call660 = call %union.tree_node* @c_fully_fold(%union.tree_node* %call643, i8 zeroext %conv659, i8* null) #6, !dbg !7566
  call void @llvm.dbg.value(metadata %union.tree_node* %call660, metadata !7220, metadata !DIExpression()), !dbg !7269
  br label %if.end661, !dbg !7567

if.end661:                                        ; preds = %if.then658, %if.end652
  %op1_int_operands.0 = phi i32 [ 1, %if.then658 ], [ %conv, %if.end652 ], !dbg !7269
  %op2.addr.14 = phi %union.tree_node* [ %call660, %if.then658 ], [ %call643, %if.end652 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %op2.addr.14, metadata !7220, metadata !DIExpression()), !dbg !7269
  %tobool666 = icmp ne i32 %op1_int_operands.0, 0, !dbg !7568
  %or.cond9 = and i1 %11, %tobool666, !dbg !7569
  br i1 %or.cond9, label %land.rhs667, label %land.end670, !dbg !7569

land.rhs667:                                      ; preds = %if.end661
  br label %land.end670

land.end670:                                      ; preds = %land.rhs667, %if.end661
  %105 = phi i8 [ 0, %if.end661 ], [ %op2_int_operands.0, %land.rhs667 ]
  call void @llvm.dbg.value(metadata i8 %105, metadata !7233, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8 %105, metadata !7230, metadata !DIExpression()), !dbg !7269
  %tobool673 = icmp eq i8 %105, 0, !dbg !7570
  br i1 %tobool673, label %if.end714, label %if.then674, !dbg !7572

if.then674:                                       ; preds = %land.end670
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !7573
  %cmp675 = icmp eq %union.tree_node* %ifexp.addr.0, %106, !dbg !7575
  br i1 %cmp675, label %land.lhs.true677, label %lor.rhs691, !dbg !7576

land.lhs.true677:                                 ; preds = %if.then674
  %107 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7577
  %bf.load679 = load i64, i64* %107, align 8, !dbg !7577
  %bf.cast68133 = and i64 %bf.load679, 65535, !dbg !7578
  %cmp682 = icmp eq i64 %bf.cast68133, 23, !dbg !7578
  br i1 %cmp682, label %land.lhs.true684, label %lor.rhs691, !dbg !7579

land.lhs.true684:                                 ; preds = %land.lhs.true677
  %bf.cast68934 = and i64 %bf.load679, 134217728, !dbg !7580
  %tobool690 = icmp eq i64 %bf.cast68934, 0, !dbg !7580
  br i1 %tobool690, label %lor.end712, label %lor.rhs691, !dbg !7581

lor.rhs691:                                       ; preds = %land.lhs.true684, %land.lhs.true677, %if.then674
  %108 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !7582
  %cmp692 = icmp eq %union.tree_node* %ifexp.addr.0, %108, !dbg !7583
  br i1 %cmp692, label %land.lhs.true694, label %lor.end712, !dbg !7584

land.lhs.true694:                                 ; preds = %lor.rhs691
  %109 = getelementptr inbounds %union.tree_node, %union.tree_node* %op2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7585
  %bf.load696 = load i64, i64* %109, align 8, !dbg !7585
  %bf.cast69831 = and i64 %bf.load696, 65535, !dbg !7586
  %cmp699 = icmp eq i64 %bf.cast69831, 23, !dbg !7586
  br i1 %cmp699, label %land.rhs701, label %lor.end712, !dbg !7587

land.rhs701:                                      ; preds = %land.lhs.true694
  %bf.cast70632 = lshr i64 %bf.load696, 27
  %110 = trunc i64 %bf.cast70632 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  br label %lor.end712

lor.end712:                                       ; preds = %land.lhs.true684, %lor.rhs691, %land.lhs.true694, %land.rhs701
  %113 = phi i8 [ 1, %land.lhs.true684 ], [ 0, %land.lhs.true694 ], [ 0, %lor.rhs691 ], [ %112, %land.rhs701 ]
  call void @llvm.dbg.value(metadata i8 %113, metadata !7230, metadata !DIExpression()), !dbg !7269
  br label %if.end714, !dbg !7588

if.end714:                                        ; preds = %land.end670, %lor.end712
  %int_const.0 = phi i8 [ %113, %lor.end712 ], [ 0, %land.end670 ], !dbg !7269
  call void @llvm.dbg.value(metadata i8 %int_const.0, metadata !7230, metadata !DIExpression()), !dbg !7269
  %tobool716 = icmp eq i8 %int_const.0, 0, !dbg !7589
  br i1 %tobool716, label %lor.lhs.false717, label %if.then727, !dbg !7591

lor.lhs.false717:                                 ; preds = %if.end714
  %tobool719 = icmp eq i8 %ifexp_bcp, 0, !dbg !7592
  br i1 %tobool719, label %if.else729, label %land.lhs.true720, !dbg !7593

land.lhs.true720:                                 ; preds = %lor.lhs.false717
  %bf.load722 = load i64, i64* %16, align 8, !dbg !7594
  %bf.cast72430 = and i64 %bf.load722, 65535, !dbg !7595
  %cmp725 = icmp eq i64 %bf.cast72430, 23, !dbg !7595
  br i1 %cmp725, label %if.then727, label %if.else729, !dbg !7596

if.then727:                                       ; preds = %if.end714, %land.lhs.true720
  %call728 = call %union.tree_node* @fold_build3_stat_loc(i32 %colon_loc, i32 56, %union.tree_node* %call641, %union.tree_node* %ifexp.addr.0, %union.tree_node* %op1.addr.15, %union.tree_node* %op2.addr.14) #6, !dbg !7597
  call void @llvm.dbg.value(metadata %union.tree_node* %call728, metadata !7235, metadata !DIExpression()), !dbg !7269
  br label %if.end735, !dbg !7598

if.else729:                                       ; preds = %lor.lhs.false717, %land.lhs.true720
  %call730 = call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %call641, %union.tree_node* %ifexp.addr.0, %union.tree_node* %op1.addr.15, %union.tree_node* %op2.addr.14) #6, !dbg !7599
  call void @llvm.dbg.value(metadata %union.tree_node* %call730, metadata !7235, metadata !DIExpression()), !dbg !7269
  br i1 %tobool673, label %if.end735, label %if.then732, !dbg !7601

if.then732:                                       ; preds = %if.else729
  %call733 = call fastcc %union.tree_node* @note_integer_operands(%union.tree_node* %call730) #7, !dbg !7602
  call void @llvm.dbg.value(metadata %union.tree_node* %call733, metadata !7235, metadata !DIExpression()), !dbg !7269
  br label %if.end735, !dbg !7604

if.end735:                                        ; preds = %if.else729, %if.then732, %if.then727
  %ret.1 = phi %union.tree_node* [ %call728, %if.then727 ], [ %call733, %if.then732 ], [ %call730, %if.else729 ], !dbg !7605
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !7235, metadata !DIExpression()), !dbg !7269
  %tobool736 = icmp eq %union.tree_node* %semantic_result_type.0, null, !dbg !7606
  br i1 %tobool736, label %if.end739, label %if.then737, !dbg !7608

if.then737:                                       ; preds = %if.end735
  %call738 = call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %semantic_result_type.0, %union.tree_node* %ret.1) #6, !dbg !7609
  call void @llvm.dbg.value(metadata %union.tree_node* %call738, metadata !7235, metadata !DIExpression()), !dbg !7269
  br label %if.end739, !dbg !7610

if.end739:                                        ; preds = %if.end735, %if.then737
  %ret.2 = phi %union.tree_node* [ %call738, %if.then737 ], [ %ret.1, %if.end735 ], !dbg !7269
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.2, metadata !7235, metadata !DIExpression()), !dbg !7269
  call void @protected_set_expr_location(%union.tree_node* %ret.2, i32 %colon_loc) #6, !dbg !7611
  br label %cleanup740, !dbg !7612

cleanup740:                                       ; preds = %cleanup, %if.end739, %if.else608, %if.then213, %if.then194
  %retval.1 = phi %union.tree_node* [ %23, %if.then194 ], [ %26, %if.then213 ], [ %ret.2, %if.end739 ], [ %91, %if.else608 ], [ %retval.0, %cleanup ]
  ret %union.tree_node* %retval.1, !dbg !7613
}

declare dso_local zeroext i8 @objc_compare_types(%union.tree_node*, %union.tree_node*, i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @tree_expr_nonnegative_warnv_p(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_wrap_maybe_const(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @comp_target_types(i32 %location, %union.tree_node* %ttl, %union.tree_node* %ttr) unnamed_addr #5 !dbg !7614 {
entry:
  %as_common = alloca i8, align 1
  %enum_and_int_p = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %location, metadata !7618, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata %union.tree_node* %ttl, metadata !7619, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata %union.tree_node* %ttr, metadata !7620, metadata !DIExpression()), !dbg !7628
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ttl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7629
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7629
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7622, metadata !DIExpression()), !dbg !7628
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %ttr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7630
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !7630
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7623, metadata !DIExpression()), !dbg !7628
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7631
  %bf.load = load i64, i64* %2, align 8, !dbg !7631
  %bf.lshr = lshr i64 %bf.load, 56, !dbg !7631
  %conv = trunc i64 %bf.lshr to i8, !dbg !7631
  call void @llvm.dbg.value(metadata i8 %conv, metadata !7624, metadata !DIExpression()), !dbg !7628
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7632
  %bf.load4 = load i64, i64* %3, align 8, !dbg !7632
  %bf.lshr5 = lshr i64 %bf.load4, 56, !dbg !7632
  %conv7 = trunc i64 %bf.lshr5 to i8, !dbg !7632
  call void @llvm.dbg.value(metadata i8 %conv7, metadata !7625, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7626, metadata !DIExpression(DW_OP_deref)), !dbg !7628
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !7633
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !7627, metadata !DIExpression(DW_OP_deref)), !dbg !7628
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %enum_and_int_p) #8, !dbg !7634
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7626, metadata !DIExpression(DW_OP_deref)), !dbg !7628
  %call = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv, i8 zeroext %conv7, i8* nonnull %as_common) #7, !dbg !7635
  %tobool = icmp eq i8 %call, 0, !dbg !7635
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7637

if.end:                                           ; preds = %entry
  %bf.load9 = load i64, i64* %2, align 8, !dbg !7638
  %bf.cast101 = and i64 %bf.load9, 65535, !dbg !7640
  %cmp = icmp eq i64 %bf.cast101, 15, !dbg !7640
  br i1 %cmp, label %if.end14, label %if.then12, !dbg !7641

if.then12:                                        ; preds = %if.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7642
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !7642
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7622, metadata !DIExpression()), !dbg !7628
  br label %if.end14, !dbg !7643

if.end14:                                         ; preds = %if.end, %if.then12
  %mvl.0 = phi %union.tree_node* [ %5, %if.then12 ], [ %0, %if.end ], !dbg !7628
  call void @llvm.dbg.value(metadata %union.tree_node* %mvl.0, metadata !7622, metadata !DIExpression()), !dbg !7628
  %bf.load16 = load i64, i64* %3, align 8, !dbg !7644
  %bf.cast182 = and i64 %bf.load16, 65535, !dbg !7646
  %cmp19 = icmp eq i64 %bf.cast182, 15, !dbg !7646
  br i1 %cmp19, label %if.end24, label %if.then21, !dbg !7647

if.then21:                                        ; preds = %if.end14
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7648
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !7648
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7623, metadata !DIExpression()), !dbg !7628
  br label %if.end24, !dbg !7649

if.end24:                                         ; preds = %if.end14, %if.then21
  %mvr.0 = phi %union.tree_node* [ %7, %if.then21 ], [ %1, %if.end14 ], !dbg !7628
  call void @llvm.dbg.value(metadata %union.tree_node* %mvr.0, metadata !7623, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8 0, metadata !7627, metadata !DIExpression()), !dbg !7628
  store i8 0, i8* %enum_and_int_p, align 1, !dbg !7650
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !7627, metadata !DIExpression(DW_OP_deref)), !dbg !7628
  %call25 = call fastcc i32 @comptypes_check_enum_int(%union.tree_node* %mvl.0, %union.tree_node* %mvr.0, i8* nonnull %enum_and_int_p) #7, !dbg !7651
  call void @llvm.dbg.value(metadata i32 %call25, metadata !7621, metadata !DIExpression()), !dbg !7628
  switch i32 %call25, label %cleanup [
    i32 2, label %if.then28
    i32 1, label %land.lhs.true
  ], !dbg !7652

if.then28:                                        ; preds = %if.end24
  %call29 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.199, i64 0, i64 0)) #6, !dbg !7653
  br label %cleanup, !dbg !7655

land.lhs.true:                                    ; preds = %if.end24
  %8 = load i8, i8* %enum_and_int_p, align 1, !dbg !7657
  call void @llvm.dbg.value(metadata i8 %8, metadata !7627, metadata !DIExpression()), !dbg !7628
  %tobool34 = icmp ne i8 %8, 0, !dbg !7657
  %9 = load i32, i32* @warn_cxx_compat, align 4, !dbg !7658
  %tobool36 = icmp ne i32 %9, 0, !dbg !7658
  %or.cond = and i1 %tobool34, %tobool36, !dbg !7659
  br i1 %or.cond, label %if.then37, label %cleanup, !dbg !7659

if.then37:                                        ; preds = %land.lhs.true
  %call38 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 49, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.200, i64 0, i64 0)) #6, !dbg !7660
  br label %cleanup, !dbg !7660

cleanup:                                          ; preds = %entry, %if.then28, %land.lhs.true, %if.then37, %if.end24
  %retval.0 = phi i32 [ 0, %entry ], [ %call25, %if.end24 ], [ 1, %if.then37 ], [ 1, %land.lhs.true ], [ 2, %if.then28 ], !dbg !7628
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !7627, metadata !DIExpression(DW_OP_deref)), !dbg !7628
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %enum_and_int_p) #8, !dbg !7661
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7626, metadata !DIExpression(DW_OP_deref)), !dbg !7628
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !7661
  ret i32 %retval.0, !dbg !7661
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @common_pointer_type(%union.tree_node* %t1, %union.tree_node* %t2) unnamed_addr #5 !dbg !7662 {
entry:
  %as_common = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !7664, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !7665, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7675, metadata !DIExpression(DW_OP_deref)), !dbg !7678
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !7679
  %cmp = icmp eq %union.tree_node* %t1, %t2, !dbg !7680
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7682

if.end:                                           ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7683
  %cmp1 = icmp eq %union.tree_node* %0, %t1, !dbg !7685
  br i1 %cmp1, label %cleanup, label %if.end3, !dbg !7686

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq %union.tree_node* %0, %t2, !dbg !7687
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !7689

if.end6:                                          ; preds = %if.end3
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7690
  %bf.load = load i64, i64* %1, align 8, !dbg !7690
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7690
  %cmp7 = icmp eq i64 %bf.cast1, 10, !dbg !7690
  br i1 %cmp7, label %land.lhs.true, label %cond.true, !dbg !7690

land.lhs.true:                                    ; preds = %if.end6
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7690
  %bf.load9 = load i64, i64* %2, align 8, !dbg !7690
  %bf.cast117 = and i64 %bf.load9, 65535, !dbg !7690
  %cmp12 = icmp eq i64 %bf.cast117, 10, !dbg !7690
  br i1 %cmp12, label %cond.end, label %cond.true, !dbg !7690

cond.true:                                        ; preds = %land.lhs.true, %if.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7690
  br label %cond.end, !dbg !7690

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %3 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 12), align 8, !dbg !7691
  %call = tail call %union.tree_node* %3(%union.tree_node* %t1, %union.tree_node* %t2) #6, !dbg !7692
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7666, metadata !DIExpression()), !dbg !7678
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7693
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7693
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7667, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7668, metadata !DIExpression()), !dbg !7678
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7694
  %5 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !7694
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7669, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7670, metadata !DIExpression()), !dbg !7678
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7695
  %bf.load16 = load i64, i64* %6, align 8, !dbg !7695
  %bf.cast182 = and i64 %bf.load16, 65535, !dbg !7697
  %cmp19 = icmp eq i64 %bf.cast182, 15, !dbg !7697
  br i1 %cmp19, label %if.end22, label %if.then20, !dbg !7698

if.then20:                                        ; preds = %cond.end
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7699
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !7699
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7668, metadata !DIExpression()), !dbg !7678
  br label %if.end22, !dbg !7700

if.end22:                                         ; preds = %cond.end, %if.then20
  %mv1.0 = phi %union.tree_node* [ %8, %if.then20 ], [ %4, %cond.end ], !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %mv1.0, metadata !7668, metadata !DIExpression()), !dbg !7678
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7701
  %bf.load24 = load i64, i64* %9, align 8, !dbg !7701
  %bf.cast263 = and i64 %bf.load24, 65535, !dbg !7703
  %cmp27 = icmp eq i64 %bf.cast263, 15, !dbg !7703
  br i1 %cmp27, label %if.end31, label %if.then28, !dbg !7704

if.then28:                                        ; preds = %if.end22
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7705
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !7705
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !7670, metadata !DIExpression()), !dbg !7678
  br label %if.end31, !dbg !7706

if.end31:                                         ; preds = %if.end22, %if.then28
  %mv2.0 = phi %union.tree_node* [ %11, %if.then28 ], [ %5, %if.end22 ], !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %mv2.0, metadata !7670, metadata !DIExpression()), !dbg !7678
  %call32 = tail call %union.tree_node* @composite_type(%union.tree_node* %mv1.0, %union.tree_node* %mv2.0) #7, !dbg !7707
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !7671, metadata !DIExpression()), !dbg !7678
  %bf.load34 = load i64, i64* %6, align 8, !dbg !7708
  %bf.lshr = lshr i64 %bf.load34, 20, !dbg !7708
  %12 = trunc i64 %bf.lshr to i32, !dbg !7708
  %bf.cast36 = and i32 %12, 1, !dbg !7708
  %13 = lshr i64 %bf.load34, 18, !dbg !7708
  %14 = trunc i64 %13 to i32, !dbg !7708
  %mul42 = and i32 %14, 2, !dbg !7708
  %or = or i32 %bf.cast36, %mul42, !dbg !7708
  %type43 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !7708
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i64 0, i32 6, !dbg !7708
  %bf.load44 = load i32, i32* %restrict_flag, align 4, !dbg !7708
  %15 = lshr i32 %bf.load44, 11, !dbg !7708
  %mul47 = and i32 %15, 4, !dbg !7708
  %or48 = or i32 %or, %mul47, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %or48, metadata !7676, metadata !DIExpression()), !dbg !7678
  %bf.load50 = load i64, i64* %9, align 8, !dbg !7709
  %bf.lshr51 = lshr i64 %bf.load50, 20, !dbg !7709
  %16 = trunc i64 %bf.lshr51 to i32, !dbg !7709
  %bf.cast53 = and i32 %16, 1, !dbg !7709
  %17 = lshr i64 %bf.load50, 18, !dbg !7709
  %18 = trunc i64 %17 to i32, !dbg !7709
  %mul60 = and i32 %18, 2, !dbg !7709
  %or61 = or i32 %bf.cast53, %mul60, !dbg !7709
  %type62 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !7709
  %restrict_flag63 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type62, i64 0, i32 6, !dbg !7709
  %bf.load64 = load i32, i32* %restrict_flag63, align 4, !dbg !7709
  %19 = lshr i32 %bf.load64, 11, !dbg !7709
  %mul67 = and i32 %19, 4, !dbg !7709
  %or68 = or i32 %or61, %mul67, !dbg !7709
  call void @llvm.dbg.value(metadata i32 %or68, metadata !7677, metadata !DIExpression()), !dbg !7678
  %bf.cast726 = and i64 %bf.load34, 65535, !dbg !7710
  %cmp73 = icmp eq i64 %bf.cast726, 20, !dbg !7710
  %and = and i32 %or48, %or68, !dbg !7712
  %or75 = or i32 %or48, %or68, !dbg !7712
  %target_quals.0 = select i1 %cmp73, i32 %and, i32 %or75, !dbg !7712
  call void @llvm.dbg.value(metadata i32 %target_quals.0, metadata !7672, metadata !DIExpression()), !dbg !7678
  %bf.lshr79 = lshr i64 %bf.load34, 56, !dbg !7713
  %conv = trunc i64 %bf.lshr79 to i8, !dbg !7713
  call void @llvm.dbg.value(metadata i8 %conv, metadata !7673, metadata !DIExpression()), !dbg !7678
  %bf.lshr83 = lshr i64 %bf.load50, 56, !dbg !7714
  %conv85 = trunc i64 %bf.lshr83 to i8, !dbg !7714
  call void @llvm.dbg.value(metadata i8 %conv85, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7675, metadata !DIExpression(DW_OP_deref)), !dbg !7678
  %call86 = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv, i8 zeroext %conv85, i8* nonnull %as_common) #7, !dbg !7715
  %tobool = icmp eq i8 %call86, 0, !dbg !7715
  br i1 %tobool, label %if.then87, label %if.end88, !dbg !7717

if.then87:                                        ; preds = %if.end31
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 677, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7718
  br label %if.end88, !dbg !7718

if.end88:                                         ; preds = %if.end31, %if.then87
  %20 = load i8, i8* %as_common, align 1, !dbg !7719
  call void @llvm.dbg.value(metadata i8 %20, metadata !7675, metadata !DIExpression()), !dbg !7678
  %conv89 = zext i8 %20 to i32, !dbg !7719
  %shl = shl nuw nsw i32 %conv89, 8, !dbg !7719
  %or91 = or i32 %target_quals.0, %shl, !dbg !7720
  call void @llvm.dbg.value(metadata i32 %or91, metadata !7672, metadata !DIExpression()), !dbg !7678
  %call92 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call32, i32 %or91) #7, !dbg !7721
  %call93 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call92) #6, !dbg !7722
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !7664, metadata !DIExpression()), !dbg !7678
  %call94 = call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call93, %union.tree_node* %call) #6, !dbg !7723
  br label %cleanup, !dbg !7724

cleanup:                                          ; preds = %if.end3, %if.end, %entry, %if.end88
  %retval.0 = phi %union.tree_node* [ %call94, %if.end88 ], [ %t1, %entry ], [ %t2, %if.end ], [ %t1, %if.end3 ], !dbg !7678
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7675, metadata !DIExpression(DW_OP_deref)), !dbg !7678
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !7725
  ret %union.tree_node* %retval.0, !dbg !7725
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %expr) unnamed_addr #5 !dbg !7726 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7728, metadata !DIExpression()), !dbg !7730
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7731
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !7731
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7729, metadata !DIExpression()), !dbg !7730
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7732
  %bf.load = load i64, i64* %1, align 8, !dbg !7732
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7733
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !7733
  br i1 %cmp, label %land.lhs.true, label %land.end69, !dbg !7734

land.lhs.true:                                    ; preds = %entry
  %bf.cast52 = and i64 %bf.load, 134217728, !dbg !7735
  %tobool = icmp eq i64 %bf.cast52, 0, !dbg !7735
  br i1 %tobool, label %land.lhs.true6, label %land.end69, !dbg !7736

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call = tail call i32 @integer_zerop(%union.tree_node* %expr) #6, !dbg !7737
  %tobool7 = icmp eq i32 %call, 0, !dbg !7737
  br i1 %tobool7, label %land.end69, label %land.rhs, !dbg !7738

land.rhs:                                         ; preds = %land.lhs.true6
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7739
  %bf.load9 = load i64, i64* %2, align 8, !dbg !7739
  %bf.cast113 = and i64 %bf.load9, 65535, !dbg !7739
  %cmp12 = icmp eq i64 %bf.cast113, 6, !dbg !7739
  br i1 %cmp12, label %land.end69, label %lor.lhs.false, !dbg !7739

lor.lhs.false:                                    ; preds = %land.rhs
  %cmp17 = icmp eq i64 %bf.cast113, 7, !dbg !7739
  br i1 %cmp17, label %land.end69, label %lor.lhs.false18, !dbg !7739

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp23 = icmp eq i64 %bf.cast113, 8, !dbg !7739
  br i1 %cmp23, label %land.end69, label %lor.rhs, !dbg !7740

lor.rhs:                                          ; preds = %lor.lhs.false18
  %cmp28 = icmp eq i64 %bf.cast113, 10, !dbg !7741
  br i1 %cmp28, label %land.lhs.true29, label %land.end69, !dbg !7742

land.lhs.true29:                                  ; preds = %lor.rhs
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7743
  %3 = bitcast %union.tree_node** %type31 to i64**, !dbg !7743
  %4 = load i64*, i64** %3, align 8, !dbg !7743
  %bf.load33 = load i64, i64* %4, align 8, !dbg !7743
  %bf.cast357 = and i64 %bf.load33, 65535, !dbg !7743
  %cmp36 = icmp eq i64 %bf.cast357, 19, !dbg !7743
  br i1 %cmp36, label %land.rhs37, label %land.end69, !dbg !7744

land.rhs37:                                       ; preds = %land.lhs.true29
  %5 = bitcast i64* %4 to %struct.tree_type*, !dbg !7744
  %bf.lshr42 = lshr i64 %bf.load33, 20, !dbg !7745
  %6 = trunc i64 %bf.lshr42 to i32, !dbg !7745
  %bf.cast44 = and i32 %6, 1, !dbg !7745
  %7 = lshr i64 %bf.load33, 18, !dbg !7745
  %8 = trunc i64 %7 to i32, !dbg !7745
  %mul52 = and i32 %8, 2, !dbg !7745
  %or = or i32 %bf.cast44, %mul52, !dbg !7745
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 6, !dbg !7745
  %bf.load56 = load i32, i32* %restrict_flag, align 4, !dbg !7745
  %9 = lshr i32 %bf.load56, 11, !dbg !7745
  %mul59 = and i32 %9, 4, !dbg !7745
  %or60 = or i32 %or, %mul59, !dbg !7745
  %10 = lshr i64 %bf.load33, 48, !dbg !7745
  %11 = trunc i64 %10 to i32, !dbg !7745
  %shl = and i32 %11, 65280, !dbg !7745
  %or67 = or i32 %or60, %shl, !dbg !7745
  %cmp68 = icmp eq i32 %or67, 0, !dbg !7746
  %phitmp = zext i1 %cmp68 to i8
  br label %land.end69

land.end69:                                       ; preds = %land.lhs.true6, %land.lhs.true, %land.rhs, %lor.lhs.false, %lor.lhs.false18, %land.rhs37, %land.lhs.true29, %lor.rhs, %entry
  %12 = phi i8 [ 0, %land.lhs.true6 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ 1, %lor.lhs.false18 ], [ 1, %lor.lhs.false ], [ 1, %land.rhs ], [ 0, %land.lhs.true29 ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs37 ]
  ret i8 %12, !dbg !7747
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @addr_space_superset(i8 zeroext %as1, i8 zeroext %as2, i8* %common) unnamed_addr #5 !dbg !7748 {
entry:
  call void @llvm.dbg.value(metadata i8 %as1, metadata !7753, metadata !DIExpression()), !dbg !7756
  call void @llvm.dbg.value(metadata i8 %as2, metadata !7754, metadata !DIExpression()), !dbg !7756
  call void @llvm.dbg.value(metadata i8* %common, metadata !7755, metadata !DIExpression()), !dbg !7756
  %cmp = icmp eq i8 %as1, %as2, !dbg !7757
  br i1 %cmp, label %if.then, label %if.else, !dbg !7759

if.then:                                          ; preds = %entry
  store i8 %as1, i8* %common, align 1, !dbg !7760
  br label %return, !dbg !7762

if.else:                                          ; preds = %entry
  %0 = load i8 (i8, i8)*, i8 (i8, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 5), align 8, !dbg !7763
  %call = tail call zeroext i8 %0(i8 zeroext %as1, i8 zeroext %as2) #6, !dbg !7765
  %tobool = icmp eq i8 %call, 0, !dbg !7765
  br i1 %tobool, label %if.else4, label %if.then3, !dbg !7766

if.then3:                                         ; preds = %if.else
  store i8 %as2, i8* %common, align 1, !dbg !7767
  br label %return, !dbg !7769

if.else4:                                         ; preds = %if.else
  %1 = load i8 (i8, i8)*, i8 (i8, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 5), align 8, !dbg !7770
  %call5 = tail call zeroext i8 %1(i8 zeroext %as2, i8 zeroext %as1) #6, !dbg !7772
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7772
  br i1 %tobool6, label %return, label %if.then7, !dbg !7773

if.then7:                                         ; preds = %if.else4
  store i8 %as1, i8* %common, align 1, !dbg !7774
  br label %return, !dbg !7776

return:                                           ; preds = %if.else4, %if.then7, %if.then3, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 1, %if.then3 ], [ 1, %if.then7 ], [ 0, %if.else4 ], !dbg !7777
  ret i8 %retval.0, !dbg !7778
}

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @ep_convert_and_check(%union.tree_node* %type, %union.tree_node* %expr, %union.tree_node* %semantic_type) unnamed_addr #5 !dbg !7779 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7783, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7784, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_type, metadata !7785, metadata !DIExpression()), !dbg !7786
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7787
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !7787
  %cmp = icmp eq %union.tree_node* %0, %type, !dbg !7789
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7790
  br i1 %cmp, label %return, label %if.end, !dbg !7790

if.end:                                           ; preds = %entry
  %tobool = icmp eq %union.tree_node* %semantic_type, null, !dbg !7791
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !7793

if.then2:                                         ; preds = %if.end
  %call = tail call %union.tree_node* @convert_and_check(%union.tree_node* %type, %union.tree_node* %expr) #6, !dbg !7794
  br label %return, !dbg !7795

if.end3:                                          ; preds = %if.end
  %bf.load = load i64, i64* %1, align 8, !dbg !7796
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7798
  %cmp6 = icmp eq i64 %bf.cast1, 8, !dbg !7798
  br i1 %cmp6, label %land.lhs.true, label %if.end12, !dbg !7799

land.lhs.true:                                    ; preds = %if.end3
  %cmp9 = icmp eq %union.tree_node* %0, %semantic_type, !dbg !7800
  br i1 %cmp9, label %if.end12, label %if.then10, !dbg !7801

if.then10:                                        ; preds = %land.lhs.true
  %call11 = tail call %union.tree_node* @convert_and_check(%union.tree_node* nonnull %semantic_type, %union.tree_node* %expr) #6, !dbg !7802
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !7784, metadata !DIExpression()), !dbg !7786
  br label %if.end12, !dbg !7804

if.end12:                                         ; preds = %land.lhs.true, %if.then10, %if.end3
  %expr.addr.0 = phi %union.tree_node* [ %call11, %if.then10 ], [ %expr, %land.lhs.true ], [ %expr, %if.end3 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !7784, metadata !DIExpression()), !dbg !7786
  %call13 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %expr.addr.0) #6, !dbg !7805
  br label %return, !dbg !7806

return:                                           ; preds = %entry, %if.end12, %if.then2
  %retval.0 = phi %union.tree_node* [ %call13, %if.end12 ], [ %call, %if.then2 ], [ %expr, %entry ], !dbg !7786
  ret %union.tree_node* %retval.0, !dbg !7807
}

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_compound_expr(i32 %loc, %union.tree_node* %expr1, %union.tree_node* %expr2) local_unnamed_addr #5 !dbg !7808 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7810, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %expr1, metadata !7811, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %expr2, metadata !7812, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7815, metadata !DIExpression()), !dbg !7817
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7818
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !7818
  %1 = load i64*, i64** %0, align 8, !dbg !7818
  %bf.load = load i64, i64* %1, align 8, !dbg !7818
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7818
  %cmp = icmp eq i64 %bf.cast2, 6, !dbg !7818
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7818

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast2, 7, !dbg !7818
  br i1 %cmp7, label %land.rhs, label %lor.lhs.false8, !dbg !7818

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp15 = icmp eq i64 %bf.cast2, 8, !dbg !7818
  br i1 %cmp15, label %land.rhs, label %land.end31, !dbg !7818

land.rhs:                                         ; preds = %lor.lhs.false8, %lor.lhs.false, %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7818
  %bf.load17 = load i64, i64* %2, align 8, !dbg !7818
  %bf.cast1921 = and i64 %bf.load17, 65535, !dbg !7818
  %cmp20 = icmp eq i64 %bf.cast1921, 23, !dbg !7818
  br i1 %cmp20, label %land.end31, label %lor.rhs, !dbg !7818

lor.rhs:                                          ; preds = %land.rhs
  %cmp25 = icmp eq i64 %bf.cast1921, 189, !dbg !7818
  br i1 %cmp25, label %land.rhs26, label %land.end31, !dbg !7818

land.rhs26:                                       ; preds = %lor.rhs
  %bf.cast3023 = and i64 %bf.load17, 8589934592, !dbg !7818
  %tobool = icmp ne i64 %bf.cast3023, 0, !dbg !7818
  br label %land.end31

land.end31:                                       ; preds = %land.rhs, %land.rhs26, %lor.rhs, %lor.lhs.false8
  %3 = phi i1 [ false, %lor.lhs.false8 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %tobool, %land.rhs26 ], !dbg !7817
  call void @llvm.dbg.value(metadata i1 %3, metadata !7813, metadata !DIExpression()), !dbg !7817
  br i1 %3, label %if.then, label %if.end, !dbg !7819

if.then:                                          ; preds = %land.end31
  %call = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %expr1) #7, !dbg !7820
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7811, metadata !DIExpression()), !dbg !7817
  br label %if.end, !dbg !7822

if.end:                                           ; preds = %if.then, %land.end31
  %expr1.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %expr1, %land.end31 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr1.addr.0, metadata !7811, metadata !DIExpression()), !dbg !7817
  %type34 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7823
  %4 = bitcast %union.tree_node** %type34 to i64**, !dbg !7823
  %5 = load i64*, i64** %4, align 8, !dbg !7823
  %bf.load36 = load i64, i64* %5, align 8, !dbg !7823
  %bf.cast386 = and i64 %bf.load36, 65535, !dbg !7823
  %cmp39 = icmp eq i64 %bf.cast386, 6, !dbg !7823
  br i1 %cmp39, label %land.rhs59, label %lor.lhs.false41, !dbg !7823

lor.lhs.false41:                                  ; preds = %if.end
  %cmp48 = icmp eq i64 %bf.cast386, 7, !dbg !7823
  br i1 %cmp48, label %land.rhs59, label %lor.lhs.false50, !dbg !7823

lor.lhs.false50:                                  ; preds = %lor.lhs.false41
  %cmp57 = icmp eq i64 %bf.cast386, 8, !dbg !7823
  br i1 %cmp57, label %land.rhs59, label %land.end83, !dbg !7823

land.rhs59:                                       ; preds = %lor.lhs.false50, %lor.lhs.false41, %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7823
  %bf.load61 = load i64, i64* %6, align 8, !dbg !7823
  %bf.cast6319 = and i64 %bf.load61, 65535, !dbg !7823
  %cmp64 = icmp eq i64 %bf.cast6319, 23, !dbg !7823
  br i1 %cmp64, label %land.end83, label %lor.rhs66, !dbg !7823

lor.rhs66:                                        ; preds = %land.rhs59
  %cmp71 = icmp eq i64 %bf.cast6319, 189, !dbg !7823
  br i1 %cmp71, label %land.rhs73, label %land.end83, !dbg !7823

land.rhs73:                                       ; preds = %lor.rhs66
  %bf.lshr76 = lshr i64 %bf.load61, 33, !dbg !7823
  %7 = trunc i64 %bf.lshr76 to i8
  %8 = and i8 %7, 1
  br label %land.end83

land.end83:                                       ; preds = %land.rhs59, %land.rhs73, %lor.rhs66, %lor.lhs.false50
  %9 = phi i8 [ 0, %lor.lhs.false50 ], [ 1, %land.rhs59 ], [ 0, %lor.rhs66 ], [ %8, %land.rhs73 ]
  call void @llvm.dbg.value(metadata i8 %9, metadata !7814, metadata !DIExpression()), !dbg !7817
  %tobool86 = icmp eq i8 %9, 0, !dbg !7824
  br i1 %tobool86, label %if.end89, label %if.then87, !dbg !7826

if.then87:                                        ; preds = %land.end83
  %call88 = tail call fastcc %union.tree_node* @remove_c_maybe_const_expr(%union.tree_node* %expr2) #7, !dbg !7827
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !7812, metadata !DIExpression()), !dbg !7817
  br label %if.end89, !dbg !7828

if.end89:                                         ; preds = %land.end83, %if.then87
  %expr2.addr.0 = phi %union.tree_node* [ %call88, %if.then87 ], [ %expr2, %land.end83 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr2.addr.0, metadata !7812, metadata !DIExpression()), !dbg !7817
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7829
  %bf.load91 = load i64, i64* %10, align 8, !dbg !7829
  %bf.cast939 = and i64 %bf.load91, 65535, !dbg !7831
  %cmp94 = icmp eq i64 %bf.cast939, 190, !dbg !7831
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !7832

if.then96:                                        ; preds = %if.end89
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7833
  %11 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7833
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !7811, metadata !DIExpression()), !dbg !7817
  br label %if.end97, !dbg !7834

if.end97:                                         ; preds = %if.then96, %if.end89
  %expr1.addr.1 = phi %union.tree_node* [ %11, %if.then96 ], [ %expr1.addr.0, %if.end89 ], !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %expr1.addr.1, metadata !7811, metadata !DIExpression()), !dbg !7817
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7835
  %bf.load99 = load i64, i64* %12, align 8, !dbg !7835
  %bf.cast10110 = and i64 %bf.load99, 65535, !dbg !7837
  %cmp102 = icmp eq i64 %bf.cast10110, 190, !dbg !7837
  br i1 %cmp102, label %if.then104, label %if.end110, !dbg !7838

if.then104:                                       ; preds = %if.end97
  %type106 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7839
  %13 = load %union.tree_node*, %union.tree_node** %type106, align 8, !dbg !7839
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !7815, metadata !DIExpression()), !dbg !7817
  %operands108 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7841
  %14 = load %union.tree_node*, %union.tree_node** %operands108, align 8, !dbg !7841
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !7812, metadata !DIExpression()), !dbg !7817
  br label %if.end110, !dbg !7842

if.end110:                                        ; preds = %if.then104, %if.end97
  %eptype.0 = phi %union.tree_node* [ %13, %if.then104 ], [ null, %if.end97 ], !dbg !7817
  %expr2.addr.1 = phi %union.tree_node* [ %14, %if.then104 ], [ %expr2.addr.0, %if.end97 ], !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %expr2.addr.1, metadata !7812, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %eptype.0, metadata !7815, metadata !DIExpression()), !dbg !7817
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7843
  %bf.load112 = load i64, i64* %15, align 8, !dbg !7843
  %bf.cast11511 = and i64 %bf.load112, 65536, !dbg !7843
  %tobool116 = icmp eq i64 %bf.cast11511, 0, !dbg !7843
  %16 = load i32, i32* @warn_unused_value, align 4, !dbg !7845
  %tobool184 = icmp ne i32 %16, 0, !dbg !7845
  br i1 %tobool116, label %if.then117, label %if.else183, !dbg !7846

if.then117:                                       ; preds = %if.end110
  br i1 %tobool184, label %if.then119, label %if.end188, !dbg !7847

if.then119:                                       ; preds = %if.then117
  %type121 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7849
  %17 = bitcast %union.tree_node** %type121 to i64**, !dbg !7849
  %18 = load i64*, i64** %17, align 8, !dbg !7849
  %bf.load123 = load i64, i64* %18, align 8, !dbg !7849
  %bf.cast12512 = and i64 %bf.load123, 65535, !dbg !7849
  %cmp126 = icmp eq i64 %bf.cast12512, 19, !dbg !7849
  br i1 %cmp126, label %land.lhs.true, label %if.else, !dbg !7853

land.lhs.true:                                    ; preds = %if.then119
  %bf.cast13117 = and i64 %bf.load112, 65535, !dbg !7854
  %cmp132 = icmp eq i64 %bf.cast13117, 116, !dbg !7854
  br i1 %cmp132, label %if.end188, label %lor.lhs.false134, !dbg !7854

lor.lhs.false134:                                 ; preds = %land.lhs.true
  %cmp139 = icmp eq i64 %bf.cast13117, 113, !dbg !7854
  br i1 %cmp139, label %if.end188, label %if.else, !dbg !7855

if.else:                                          ; preds = %lor.lhs.false134, %if.then119
  br i1 %cmp126, label %land.lhs.true150, label %if.else178, !dbg !7856

land.lhs.true150:                                 ; preds = %if.else
  %bf.cast15414 = and i64 %bf.load112, 65535, !dbg !7858
  %cmp155 = icmp eq i64 %bf.cast15414, 52, !dbg !7858
  br i1 %cmp155, label %land.lhs.true157, label %if.else178, !dbg !7859

land.lhs.true157:                                 ; preds = %land.lhs.true150
  %operands159 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr1.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7860
  %arrayidx160 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands159, i64 1, !dbg !7860
  %19 = bitcast %union.tree_node** %arrayidx160 to i64**, !dbg !7860
  %20 = load i64*, i64** %19, align 8, !dbg !7860
  %bf.load162 = load i64, i64* %20, align 8, !dbg !7860
  %bf.cast16415 = and i64 %bf.load162, 65535, !dbg !7860
  %cmp165 = icmp eq i64 %bf.cast16415, 116, !dbg !7860
  br i1 %cmp165, label %if.end188, label %lor.lhs.false167, !dbg !7860

lor.lhs.false167:                                 ; preds = %land.lhs.true157
  %cmp175 = icmp eq i64 %bf.cast16415, 113, !dbg !7860
  br i1 %cmp175, label %if.end188, label %if.else178, !dbg !7861

if.else178:                                       ; preds = %lor.lhs.false167, %land.lhs.true150, %if.else
  %call179 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 229, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !7862
  br label %if.end188

if.else183:                                       ; preds = %if.end110
  br i1 %tobool184, label %if.then185, label %if.end188, !dbg !7863

if.then185:                                       ; preds = %if.else183
  %call186 = tail call i32 @warn_if_unused_value(%union.tree_node* %expr1.addr.1, i32 %loc) #6, !dbg !7864
  br label %if.end188, !dbg !7864

if.end188:                                        ; preds = %if.else183, %if.then185, %if.then117, %if.else178, %lor.lhs.false167, %land.lhs.true157, %land.lhs.true, %lor.lhs.false134
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7866
  %cmp189 = icmp eq %union.tree_node* %expr2.addr.1, %21, !dbg !7868
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !7869

if.then191:                                       ; preds = %if.end188
  br label %cleanup, !dbg !7870

if.end192:                                        ; preds = %if.end188
  %type194 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr2.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7871
  %22 = load %union.tree_node*, %union.tree_node** %type194, align 8, !dbg !7871
  %call195 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %22, %union.tree_node* %expr1.addr.1, %union.tree_node* %expr2.addr.1) #6, !dbg !7871
  call void @llvm.dbg.value(metadata %union.tree_node* %call195, metadata !7816, metadata !DIExpression()), !dbg !7817
  %23 = load i32, i32* @flag_isoc99, align 4, !dbg !7872
  %tobool196 = icmp ne i32 %23, 0, !dbg !7872
  %or.cond = and i1 %tobool196, %3, !dbg !7874
  %tobool202 = icmp ne i8 %9, 0, !dbg !7875
  %or.cond1 = and i1 %or.cond, %tobool202, !dbg !7874
  br i1 %or.cond1, label %if.then203, label %if.end205, !dbg !7874

if.then203:                                       ; preds = %if.end192
  %call204 = tail call fastcc %union.tree_node* @note_integer_operands(%union.tree_node* %call195) #7, !dbg !7876
  call void @llvm.dbg.value(metadata %union.tree_node* %call204, metadata !7816, metadata !DIExpression()), !dbg !7817
  br label %if.end205, !dbg !7877

if.end205:                                        ; preds = %if.then203, %if.end192
  %ret.0 = phi %union.tree_node* [ %call204, %if.then203 ], [ %call195, %if.end192 ], !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !7816, metadata !DIExpression()), !dbg !7817
  %tobool206 = icmp eq %union.tree_node* %eptype.0, null, !dbg !7878
  br i1 %tobool206, label %if.end209, label %if.then207, !dbg !7880

if.then207:                                       ; preds = %if.end205
  %call208 = tail call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %eptype.0, %union.tree_node* %ret.0) #6, !dbg !7881
  call void @llvm.dbg.value(metadata %union.tree_node* %call208, metadata !7816, metadata !DIExpression()), !dbg !7817
  br label %if.end209, !dbg !7882

if.end209:                                        ; preds = %if.end205, %if.then207
  %ret.1 = phi %union.tree_node* [ %call208, %if.then207 ], [ %ret.0, %if.end205 ], !dbg !7817
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !7816, metadata !DIExpression()), !dbg !7817
  tail call void @protected_set_expr_location(%union.tree_node* %ret.1, i32 %loc) #6, !dbg !7883
  br label %cleanup, !dbg !7884

cleanup:                                          ; preds = %if.end209, %if.then191
  %retval.0 = phi %union.tree_node* [ %expr2.addr.1, %if.then191 ], [ %ret.1, %if.end209 ], !dbg !7817
  ret %union.tree_node* %retval.0, !dbg !7885
}

declare dso_local i32 @warn_if_unused_value(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_c_cast(i32 %loc, %union.tree_node* %type, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !7886 {
entry:
  %maybe_const = alloca i8, align 1
  %as_common = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7888, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7889, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7890, metadata !DIExpression()), !dbg !7911
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7912
  %bf.load = load i64, i64* %0, align 8, !dbg !7912
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7914
  %cmp = icmp eq i64 %bf.cast2, 190, !dbg !7914
  br i1 %cmp, label %if.then, label %if.end, !dbg !7915

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7916
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7916
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7890, metadata !DIExpression()), !dbg !7911
  br label %if.end, !dbg !7917

if.end:                                           ; preds = %if.then, %entry
  %expr.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %expr, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !7890, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !7891, metadata !DIExpression()), !dbg !7911
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7918
  %cmp1 = icmp eq %union.tree_node* %2, %type, !dbg !7920
  %cmp2 = icmp eq %union.tree_node* %expr.addr.0, %2, !dbg !7921
  %or.cond = or i1 %cmp1, %cmp2, !dbg !7922
  br i1 %or.cond, label %if.then3, label %if.end4, !dbg !7922

if.then3:                                         ; preds = %if.end
  br label %cleanup531, !dbg !7923

if.end4:                                          ; preds = %if.end
  %call = tail call %union.tree_node* @objc_is_object_ptr(%union.tree_node* %type) #6, !dbg !7924
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7924
  br i1 %tobool, label %if.end10, label %land.lhs.true, !dbg !7926

land.lhs.true:                                    ; preds = %if.end4
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7927
  %3 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !7927
  %call6 = tail call %union.tree_node* @objc_is_object_ptr(%union.tree_node* %3) #6, !dbg !7928
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !7928
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !7929

if.then8:                                         ; preds = %land.lhs.true
  %call9 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %type, %union.tree_node* %expr.addr.0) #6, !dbg !7930
  br label %cleanup531, !dbg !7931

if.end10:                                         ; preds = %land.lhs.true, %if.end4
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7932
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !7932
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7889, metadata !DIExpression()), !dbg !7911
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7933
  %bf.load13 = load i64, i64* %6, align 8, !dbg !7933
  %bf.cast153 = and i64 %bf.load13, 65535, !dbg !7935
  %cmp16 = icmp eq i64 %bf.cast153, 15, !dbg !7935
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7936

if.then17:                                        ; preds = %if.end10
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i64 0, i64 0)) #6, !dbg !7937
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7939
  br label %cleanup531, !dbg !7940

if.end18:                                         ; preds = %if.end10
  %cmp23 = icmp eq i64 %bf.cast153, 20, !dbg !7941
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !7943

if.then24:                                        ; preds = %if.end18
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i64 0, i64 0)) #6, !dbg !7944
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7946
  br label %cleanup531, !dbg !7947

if.end25:                                         ; preds = %if.end18
  %cmp30 = icmp eq i64 %bf.cast153, 19, !dbg !7948
  br i1 %cmp30, label %if.end36, label %if.then31, !dbg !7950

if.then31:                                        ; preds = %if.end25
  %call32 = tail call %union.tree_node* @require_complete_type(%union.tree_node* %expr.addr.0) #7, !dbg !7951
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !7891, metadata !DIExpression()), !dbg !7911
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7953
  %cmp33 = icmp eq %union.tree_node* %call32, %9, !dbg !7955
  br i1 %cmp33, label %if.then34, label %if.then31.if.end36_crit_edge, !dbg !7956

if.then31.if.end36_crit_edge:                     ; preds = %if.then31
  %bf.load44.pre = load i64, i64* %6, align 8, !dbg !7957
  br label %if.end36, !dbg !7956

if.then34:                                        ; preds = %if.then31
  br label %cleanup531, !dbg !7958

if.end36:                                         ; preds = %if.then31.if.end36_crit_edge, %if.end25
  %bf.load50 = phi i64 [ %bf.load13, %if.end25 ], [ %bf.load44.pre, %if.then31.if.end36_crit_edge ], !dbg !7957
  %value.0 = phi %union.tree_node* [ %expr.addr.0, %if.end25 ], [ %call32, %if.then31.if.end36_crit_edge ], !dbg !7911
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !7891, metadata !DIExpression()), !dbg !7911
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7959
  %10 = bitcast %union.tree_node** %type38 to %struct.tree_type**, !dbg !7959
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !7959
  %main_variant40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 16, !dbg !7959
  %12 = load %union.tree_node*, %union.tree_node** %main_variant40, align 8, !dbg !7959
  %cmp41 = icmp eq %union.tree_node* %5, %12, !dbg !7960
  %13 = trunc i64 %bf.load50 to i32, !dbg !7957
  %bf.cast46 = and i32 %13, 65535, !dbg !7957
  %14 = bitcast %struct.tree_type* %11 to %union.tree_node*, !dbg !7961
  br i1 %cmp41, label %if.then42, label %if.else, !dbg !7961

if.then42:                                        ; preds = %if.end36
  %cmp47 = icmp eq i32 %bf.cast46, 16, !dbg !7962
  br i1 %cmp47, label %if.then54, label %lor.lhs.false48, !dbg !7965

lor.lhs.false48:                                  ; preds = %if.then42
  %bf.cast5241 = and i64 %bf.load50, 65535, !dbg !7966
  %cmp53 = icmp eq i64 %bf.cast5241, 17, !dbg !7966
  br i1 %cmp53, label %if.then54, label %if.end431, !dbg !7967

if.then54:                                        ; preds = %lor.lhs.false48, %if.then42
  %call55 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.66, i64 0, i64 0)) #6, !dbg !7968
  br label %if.end431, !dbg !7968

if.else:                                          ; preds = %if.end36
  %cmp61 = icmp eq i32 %bf.cast46, 17, !dbg !7969
  br i1 %cmp61, label %if.then62, label %if.else100, !dbg !7970

if.then62:                                        ; preds = %if.else
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7971
  %15 = bitcast i32* %values to %union.tree_node**, !dbg !7971
  br label %for.cond, !dbg !7973

for.cond:                                         ; preds = %for.inc, %if.then62
  %field.0.in = phi %union.tree_node** [ %15, %if.then62 ], [ %chain, %for.inc ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !7974
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !7892, metadata !DIExpression()), !dbg !7975
  %cond1 = icmp eq %union.tree_node* %field.0, null, !dbg !7976
  br i1 %cond1, label %if.end99.loopexit, label %for.body, !dbg !7976

for.body:                                         ; preds = %for.cond
  %type66 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7977
  %16 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !7977
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7980
  %cmp67 = icmp eq %union.tree_node* %16, %17, !dbg !7981
  br i1 %cmp67, label %for.inc, label %land.lhs.true68, !dbg !7982

land.lhs.true68:                                  ; preds = %for.body
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7983
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !7983
  %20 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !7984
  %main_variant76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i64 0, i32 16, !dbg !7984
  %21 = load %union.tree_node*, %union.tree_node** %main_variant76, align 8, !dbg !7984
  %call77 = tail call i32 @comptypes(%union.tree_node* %19, %union.tree_node* %21) #7, !dbg !7985
  %tobool78 = icmp eq i32 %call77, 0, !dbg !7985
  br i1 %tobool78, label %for.inc, label %for.end, !dbg !7986

for.inc:                                          ; preds = %land.lhs.true68, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7987
  br label %for.cond, !dbg !7988, !llvm.loop !7989

for.end:                                          ; preds = %land.lhs.true68
  %field.0.lcssa46 = phi %union.tree_node* [ %field.0, %land.lhs.true68 ], !dbg !7974
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !7899, metadata !DIExpression(DW_OP_deref)), !dbg !7991
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %maybe_const) #8, !dbg !7992
  call void @llvm.dbg.value(metadata i8 1, metadata !7899, metadata !DIExpression()), !dbg !7991
  store i8 1, i8* %maybe_const, align 1, !dbg !7993
  %call84 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.67, i64 0, i64 0)) #6, !dbg !7994
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !7899, metadata !DIExpression(DW_OP_deref)), !dbg !7991
  %call85 = call %union.tree_node* @c_fully_fold(%union.tree_node* %value.0, i8 zeroext 0, i8* nonnull %maybe_const) #6, !dbg !7995
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !7896, metadata !DIExpression()), !dbg !7991
  %call86 = call %union.tree_node* @build_constructor_single(%union.tree_node* %5, %union.tree_node* nonnull %field.0.lcssa46, %union.tree_node* %call85) #6, !dbg !7996
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !7896, metadata !DIExpression()), !dbg !7991
  %22 = load i8, i8* %maybe_const, align 1, !dbg !7997
  call void @llvm.dbg.value(metadata i8 %22, metadata !7899, metadata !DIExpression()), !dbg !7991
  %tobool87 = icmp eq i8 %22, 0, !dbg !7997
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !7999

if.then88:                                        ; preds = %for.end
  %call89 = call %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %call86, i8 zeroext 1) #6, !dbg !8000
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !7896, metadata !DIExpression()), !dbg !7991
  br label %if.end90, !dbg !8001

if.end90:                                         ; preds = %for.end, %if.then88
  %t.0 = phi %union.tree_node* [ %call86, %for.end ], [ %call89, %if.then88 ], !dbg !7991
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !7896, metadata !DIExpression()), !dbg !7991
  %call91 = call fastcc %union.tree_node* @digest_init(i32 %loc, %union.tree_node* %5, %union.tree_node* %t.0, %union.tree_node* null, i8 zeroext 0, i8 zeroext 1, i32 0) #7, !dbg !8002
  call void @llvm.dbg.value(metadata %union.tree_node* %call91, metadata !7896, metadata !DIExpression()), !dbg !7991
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8003
  %bf.load93 = load i64, i64* %23, align 8, !dbg !8003
  %bf.cast95 = and i64 %bf.load93, 131072, !dbg !8003
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8004
  %bf.load97 = load i64, i64* %24, align 8, !dbg !8005
  %bf.clear98 = and i64 %bf.load97, -131073, !dbg !8005
  %bf.set = or i64 %bf.clear98, %bf.cast95, !dbg !8005
  store i64 %bf.set, i64* %24, align 8, !dbg !8005
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !7899, metadata !DIExpression(DW_OP_deref)), !dbg !7991
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %maybe_const) #8, !dbg !8006
  br label %cleanup531

if.end99.loopexit:                                ; preds = %for.cond
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.68, i64 0, i64 0)) #6, !dbg !8007
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8008
  br label %cleanup531, !dbg !8009

if.else100:                                       ; preds = %if.else
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !8010
  %cmp101 = icmp eq %union.tree_node* %5, %26, !dbg !8011
  br i1 %cmp101, label %if.then102, label %if.end107, !dbg !8012

if.then102:                                       ; preds = %if.else100
  %call104 = tail call %union.tree_node* @build1_stat(i32 113, %union.tree_node* %5, %union.tree_node* %value.0) #6, !dbg !8013
  call void @llvm.dbg.value(metadata %union.tree_node* %call104, metadata !7903, metadata !DIExpression()), !dbg !8014
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8015
  store i32 %loc, i32* %27, align 8, !dbg !8015
  br label %cleanup428

if.end107:                                        ; preds = %if.else100
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !7900, metadata !DIExpression()), !dbg !8016
  %28 = load i32, i32* @warn_cast_qual, align 4, !dbg !8017
  %tobool110 = icmp eq i32 %28, 0, !dbg !8017
  br i1 %tobool110, label %if.end124, label %land.lhs.true111, !dbg !8019

land.lhs.true111:                                 ; preds = %if.end107
  %bf.cast11539 = and i64 %bf.load50, 65535, !dbg !8020
  %cmp116 = icmp eq i64 %bf.cast11539, 10, !dbg !8020
  br i1 %cmp116, label %land.lhs.true117, label %if.end124, !dbg !8021

land.lhs.true117:                                 ; preds = %land.lhs.true111
  %29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8022
  %bf.load119 = load i64, i64* %29, align 8, !dbg !8022
  %bf.cast12140 = and i64 %bf.load119, 65535, !dbg !8023
  %cmp122 = icmp eq i64 %bf.cast12140, 10, !dbg !8023
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !8024

if.then123:                                       ; preds = %land.lhs.true117
  tail call fastcc void @handle_warn_cast_qual(%union.tree_node* %5, %union.tree_node* %14) #7, !dbg !8025
  %bf.load126.pre = load i64, i64* %6, align 8, !dbg !8026
  br label %if.end124, !dbg !8025

if.end124:                                        ; preds = %if.end107, %if.then123, %land.lhs.true117, %land.lhs.true111
  %bf.load126 = phi i64 [ %bf.load50, %if.end107 ], [ %bf.load126.pre, %if.then123 ], [ %bf.load50, %land.lhs.true117 ], [ %bf.load50, %land.lhs.true111 ], !dbg !8026
  %bf.cast1286 = and i64 %bf.load126, 65535, !dbg !8027
  %cmp129 = icmp eq i64 %bf.cast1286, 10, !dbg !8027
  br i1 %cmp129, label %land.lhs.true130, label %if.end176, !dbg !8028

land.lhs.true130:                                 ; preds = %if.end124
  %30 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8029
  %bf.load132 = load i64, i64* %30, align 8, !dbg !8029
  %bf.cast13438 = and i64 %bf.load132, 65535, !dbg !8030
  %cmp135 = icmp eq i64 %bf.cast13438, 10, !dbg !8030
  br i1 %cmp135, label %land.lhs.true136, label %if.end176, !dbg !8031

land.lhs.true136:                                 ; preds = %land.lhs.true130
  %call137 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %value.0) #7, !dbg !8032
  %tobool138 = icmp eq i8 %call137, 0, !dbg !8032
  br i1 %tobool138, label %if.then139, label %if.end176, !dbg !8033

if.then139:                                       ; preds = %land.lhs.true136
  %type141 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8034
  %31 = bitcast %union.tree_node** %type141 to i64**, !dbg !8034
  %32 = load i64*, i64** %31, align 8, !dbg !8034
  %bf.load143 = load i64, i64* %32, align 8, !dbg !8034
  %bf.lshr144 = lshr i64 %bf.load143, 56, !dbg !8034
  %conv = trunc i64 %bf.lshr144 to i8, !dbg !8034
  call void @llvm.dbg.value(metadata i8 %conv, metadata !7906, metadata !DIExpression()), !dbg !8035
  %33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 2, !dbg !8036
  %34 = bitcast %union.tree_node** %33 to i64**, !dbg !8036
  %35 = load i64*, i64** %34, align 8, !dbg !8036
  %bf.load149 = load i64, i64* %35, align 8, !dbg !8036
  %bf.lshr150 = lshr i64 %bf.load149, 56, !dbg !8036
  %conv152 = trunc i64 %bf.lshr150 to i8, !dbg !8036
  call void @llvm.dbg.value(metadata i8 %conv152, metadata !7909, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7910, metadata !DIExpression(DW_OP_deref)), !dbg !8035
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !8037
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7910, metadata !DIExpression(DW_OP_deref)), !dbg !8035
  %call153 = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv, i8 zeroext %conv152, i8* nonnull %as_common) #7, !dbg !8038
  %tobool154 = icmp eq i8 %call153, 0, !dbg !8038
  br i1 %tobool154, label %if.then155, label %if.end175, !dbg !8040

if.then155:                                       ; preds = %if.then139
  %cmp157 = icmp eq i64 %bf.lshr150, 0, !dbg !8041
  br i1 %cmp157, label %if.then159, label %if.else162, !dbg !8044

if.then159:                                       ; preds = %if.then155
  %call160 = call i8* @c_addr_space_name(i8 zeroext %conv) #6, !dbg !8045
  %call161 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.69, i64 0, i64 0), i8* %call160) #6, !dbg !8046
  br label %if.end175, !dbg !8046

if.else162:                                       ; preds = %if.then155
  %cmp164 = icmp eq i64 %bf.lshr144, 0, !dbg !8047
  br i1 %cmp164, label %if.then166, label %if.else169, !dbg !8049

if.then166:                                       ; preds = %if.else162
  %call167 = call i8* @c_addr_space_name(i8 zeroext %conv152) #6, !dbg !8050
  %call168 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.70, i64 0, i64 0), i8* %call167) #6, !dbg !8051
  br label %if.end175, !dbg !8051

if.else169:                                       ; preds = %if.else162
  %call170 = call i8* @c_addr_space_name(i8 zeroext %conv) #6, !dbg !8052
  %call171 = call i8* @c_addr_space_name(i8 zeroext %conv152) #6, !dbg !8053
  %call172 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.71, i64 0, i64 0), i8* %call170, i8* %call171) #6, !dbg !8054
  br label %if.end175

if.end175:                                        ; preds = %if.then139, %if.then159, %if.else169, %if.then166
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !7910, metadata !DIExpression(DW_OP_deref)), !dbg !8035
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !8055
  br label %if.end176, !dbg !8056

if.end176:                                        ; preds = %land.lhs.true136, %if.end175, %land.lhs.true130, %if.end124
  %bf.load178 = load i64, i64* %6, align 8, !dbg !8057
  %bf.cast1807 = and i64 %bf.load178, 65535, !dbg !8059
  %cmp181 = icmp eq i64 %bf.cast1807, 8, !dbg !8059
  br i1 %cmp181, label %land.lhs.true183, label %if.end202, !dbg !8060

land.lhs.true183:                                 ; preds = %if.end176
  %36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8061
  %bf.load185 = load i64, i64* %36, align 8, !dbg !8061
  %bf.cast18737 = and i64 %bf.load185, 65535, !dbg !8062
  %cmp188 = icmp eq i64 %bf.cast18737, 10, !dbg !8062
  br i1 %cmp188, label %land.lhs.true190, label %if.end202, !dbg !8063

land.lhs.true190:                                 ; preds = %land.lhs.true183
  %type191 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !8064
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type191, i64 0, i32 6, !dbg !8064
  %bf.load192 = load i32, i32* %precision, align 4, !dbg !8064
  %precision195 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !8065
  %bf.load196 = load i32, i32* %precision195, align 4, !dbg !8065
  %37 = xor i32 %bf.load192, %bf.load196, !dbg !8066
  %38 = and i32 %37, 1023, !dbg !8066
  %cmp198 = icmp eq i32 %38, 0, !dbg !8066
  br i1 %cmp198, label %if.end202, label %if.then200, !dbg !8067

if.then200:                                       ; preds = %land.lhs.true190
  %call201 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 164, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.72, i64 0, i64 0)) #6, !dbg !8068
  br label %if.end202, !dbg !8068

if.end202:                                        ; preds = %land.lhs.true190, %if.then200, %land.lhs.true183, %if.end176
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8069
  %bf.load204 = load i64, i64* %39, align 8, !dbg !8069
  %bf.cast2068 = and i64 %bf.load204, 65535, !dbg !8071
  %cmp207 = icmp eq i64 %bf.cast2068, 59, !dbg !8071
  br i1 %cmp207, label %land.lhs.true209, label %if.end222, !dbg !8072

land.lhs.true209:                                 ; preds = %if.end202
  %bf.load211 = load i64, i64* %6, align 8, !dbg !8073
  %40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8074
  %bf.load215 = load i64, i64* %40, align 8, !dbg !8074
  %41 = xor i64 %bf.load211, %bf.load215, !dbg !8075
  %42 = and i64 %41, 65535, !dbg !8075
  %cmp218 = icmp eq i64 %42, 0, !dbg !8075
  br i1 %cmp218, label %if.end222, label %if.then220, !dbg !8076

if.then220:                                       ; preds = %land.lhs.true209
  %call221 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 46, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.73, i64 0, i64 0), %struct.tree_type* %11, %union.tree_node* %5) #6, !dbg !8077
  br label %if.end222, !dbg !8077

if.end222:                                        ; preds = %land.lhs.true209, %if.then220, %if.end202
  %bf.load224 = load i64, i64* %6, align 8, !dbg !8078
  %bf.cast2269 = and i64 %bf.load224, 65535, !dbg !8080
  %cmp227 = icmp eq i64 %bf.cast2269, 10, !dbg !8080
  br i1 %cmp227, label %land.lhs.true229, label %if.end256, !dbg !8081

land.lhs.true229:                                 ; preds = %if.end222
  %43 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8082
  %bf.load231 = load i64, i64* %43, align 8, !dbg !8082
  %bf.cast23335 = and i64 %bf.load231, 65535, !dbg !8083
  %cmp234 = icmp eq i64 %bf.cast23335, 8, !dbg !8083
  br i1 %cmp234, label %land.lhs.true236, label %if.end256, !dbg !8084

land.lhs.true236:                                 ; preds = %land.lhs.true229
  %type237 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !8085
  %precision238 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type237, i64 0, i32 6, !dbg !8085
  %bf.load239 = load i32, i32* %precision238, align 4, !dbg !8085
  %precision242 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 6, !dbg !8086
  %bf.load243 = load i32, i32* %precision242, align 4, !dbg !8086
  %44 = xor i32 %bf.load239, %bf.load243, !dbg !8087
  %45 = and i32 %44, 1023, !dbg !8087
  %cmp245 = icmp eq i32 %45, 0, !dbg !8087
  br i1 %cmp245, label %if.end256, label %land.lhs.true247, !dbg !8088

land.lhs.true247:                                 ; preds = %land.lhs.true236
  %bf.load249 = load i64, i64* %39, align 8, !dbg !8089
  %bf.cast25236 = and i64 %bf.load249, 131072, !dbg !8089
  %tobool253 = icmp eq i64 %bf.cast25236, 0, !dbg !8089
  br i1 %tobool253, label %if.then254, label %if.end256, !dbg !8090

if.then254:                                       ; preds = %land.lhs.true247
  %call255 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 111, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !8091
  br label %if.end256, !dbg !8091

if.end256:                                        ; preds = %land.lhs.true247, %land.lhs.true236, %if.then254, %land.lhs.true229, %if.end222
  %46 = load i32, i32* @warn_strict_aliasing, align 4, !dbg !8092
  %cmp257 = icmp slt i32 %46, 3, !dbg !8094
  br i1 %cmp257, label %if.then259, label %if.end261, !dbg !8095

if.then259:                                       ; preds = %if.end256
  %call260 = call zeroext i8 @strict_aliasing_warning(%union.tree_node* %14, %union.tree_node* %5, %union.tree_node* %expr.addr.0) #6, !dbg !8096
  br label %if.end261, !dbg !8096

if.end261:                                        ; preds = %if.then259, %if.end256
  %47 = load i32, i32* @pedantic, align 4, !dbg !8097
  %tobool262 = icmp eq i32 %47, 0, !dbg !8097
  br i1 %tobool262, label %if.end297, label %land.lhs.true263, !dbg !8099

land.lhs.true263:                                 ; preds = %if.end261
  %bf.load265 = load i64, i64* %6, align 8, !dbg !8100
  %bf.cast26731 = and i64 %bf.load265, 65535, !dbg !8101
  %cmp268 = icmp eq i64 %bf.cast26731, 10, !dbg !8101
  br i1 %cmp268, label %land.lhs.true270, label %if.end297, !dbg !8102

land.lhs.true270:                                 ; preds = %land.lhs.true263
  %48 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8103
  %bf.load272 = load i64, i64* %48, align 8, !dbg !8103
  %bf.cast27432 = and i64 %bf.load272, 65535, !dbg !8104
  %cmp275 = icmp eq i64 %bf.cast27432, 10, !dbg !8104
  br i1 %cmp275, label %land.lhs.true277, label %if.end297, !dbg !8105

land.lhs.true277:                                 ; preds = %land.lhs.true270
  %49 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 2, !dbg !8106
  %50 = bitcast %union.tree_node** %49 to i64**, !dbg !8106
  %51 = load i64*, i64** %50, align 8, !dbg !8106
  %bf.load281 = load i64, i64* %51, align 8, !dbg !8106
  %bf.cast28333 = and i64 %bf.load281, 65535, !dbg !8107
  %cmp284 = icmp eq i64 %bf.cast28333, 20, !dbg !8107
  br i1 %cmp284, label %land.lhs.true286, label %if.end297, !dbg !8108

land.lhs.true286:                                 ; preds = %land.lhs.true277
  %type288 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8109
  %52 = bitcast %union.tree_node** %type288 to i64**, !dbg !8109
  %53 = load i64*, i64** %52, align 8, !dbg !8109
  %bf.load290 = load i64, i64* %53, align 8, !dbg !8109
  %bf.cast29234 = and i64 %bf.load290, 65535, !dbg !8110
  %cmp293 = icmp eq i64 %bf.cast29234, 20, !dbg !8110
  br i1 %cmp293, label %if.end297, label %if.then295, !dbg !8111

if.then295:                                       ; preds = %land.lhs.true286
  %call296 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.75, i64 0, i64 0)) #6, !dbg !8112
  %.pre = load i32, i32* @pedantic, align 4, !dbg !8113
  br label %if.end297, !dbg !8112

if.end297:                                        ; preds = %land.lhs.true286, %if.end261, %if.then295, %land.lhs.true277, %land.lhs.true270, %land.lhs.true263
  %54 = phi i32 [ %47, %land.lhs.true286 ], [ 0, %if.end261 ], [ %.pre, %if.then295 ], [ %47, %land.lhs.true277 ], [ %47, %land.lhs.true270 ], [ %47, %land.lhs.true263 ], !dbg !8113
  %tobool298 = icmp eq i32 %54, 0, !dbg !8113
  br i1 %tobool298, label %if.end336, label %land.lhs.true299, !dbg !8115

land.lhs.true299:                                 ; preds = %if.end297
  %bf.load301 = load i64, i64* %6, align 8, !dbg !8116
  %bf.cast30327 = and i64 %bf.load301, 65535, !dbg !8117
  %cmp304 = icmp eq i64 %bf.cast30327, 10, !dbg !8117
  br i1 %cmp304, label %land.lhs.true306, label %if.end336, !dbg !8118

land.lhs.true306:                                 ; preds = %land.lhs.true299
  %55 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8119
  %bf.load308 = load i64, i64* %55, align 8, !dbg !8119
  %bf.cast31028 = and i64 %bf.load308, 65535, !dbg !8120
  %cmp311 = icmp eq i64 %bf.cast31028, 10, !dbg !8120
  br i1 %cmp311, label %land.lhs.true313, label %if.end336, !dbg !8121

land.lhs.true313:                                 ; preds = %land.lhs.true306
  %type315 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8122
  %56 = bitcast %union.tree_node** %type315 to i64**, !dbg !8122
  %57 = load i64*, i64** %56, align 8, !dbg !8122
  %bf.load317 = load i64, i64* %57, align 8, !dbg !8122
  %bf.cast31929 = and i64 %bf.load317, 65535, !dbg !8123
  %cmp320 = icmp eq i64 %bf.cast31929, 20, !dbg !8123
  br i1 %cmp320, label %land.lhs.true322, label %if.end336, !dbg !8124

land.lhs.true322:                                 ; preds = %land.lhs.true313
  %58 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 2, !dbg !8125
  %59 = bitcast %union.tree_node** %58 to i64**, !dbg !8125
  %60 = load i64*, i64** %59, align 8, !dbg !8125
  %bf.load326 = load i64, i64* %60, align 8, !dbg !8125
  %bf.cast32830 = and i64 %bf.load326, 65535, !dbg !8126
  %cmp329 = icmp eq i64 %bf.cast32830, 20, !dbg !8126
  br i1 %cmp329, label %if.end336, label %land.lhs.true331, !dbg !8127

land.lhs.true331:                                 ; preds = %land.lhs.true322
  %call332 = call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %value.0) #7, !dbg !8128
  %tobool333 = icmp eq i8 %call332, 0, !dbg !8128
  br i1 %tobool333, label %if.then334, label %if.end336, !dbg !8129

if.then334:                                       ; preds = %land.lhs.true331
  %call335 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !8130
  br label %if.end336, !dbg !8130

if.end336:                                        ; preds = %land.lhs.true331, %land.lhs.true322, %if.end297, %if.then334, %land.lhs.true313, %land.lhs.true306, %land.lhs.true299
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !7902, metadata !DIExpression()), !dbg !8016
  %call337 = call %union.tree_node* @convert(%union.tree_node* %5, %union.tree_node* %value.0) #6, !dbg !8131
  call void @llvm.dbg.value(metadata %union.tree_node* %call337, metadata !7891, metadata !DIExpression()), !dbg !7911
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %call337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8132
  %bf.load339 = load i64, i64* %61, align 8, !dbg !8132
  %bf.cast34110 = and i64 %bf.load339, 65535, !dbg !8134
  %cmp342 = icmp eq i64 %bf.cast34110, 23, !dbg !8134
  br i1 %cmp342, label %land.lhs.true344, label %cleanup428, !dbg !8135

land.lhs.true344:                                 ; preds = %if.end336
  %62 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 0, i32 0, !dbg !8136
  %bf.load346 = load i64, i64* %62, align 8, !dbg !8136
  %bf.cast34820 = and i64 %bf.load346, 65535, !dbg !8136
  %cmp349 = icmp eq i64 %bf.cast34820, 9, !dbg !8136
  br i1 %cmp349, label %cleanup428, label %lor.lhs.false351, !dbg !8136

lor.lhs.false351:                                 ; preds = %land.lhs.true344
  %cmp356 = icmp eq i64 %bf.cast34820, 13, !dbg !8136
  br i1 %cmp356, label %land.lhs.true365, label %lor.lhs.false358, !dbg !8136

lor.lhs.false358:                                 ; preds = %lor.lhs.false351
  %cmp363 = icmp eq i64 %bf.cast34820, 14, !dbg !8136
  br i1 %cmp363, label %land.lhs.true365, label %if.then374, !dbg !8136

land.lhs.true365:                                 ; preds = %lor.lhs.false358, %lor.lhs.false351
  %63 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 0, i32 2, !dbg !8136
  %64 = bitcast %union.tree_node** %63 to i64**, !dbg !8136
  %65 = load i64*, i64** %64, align 8, !dbg !8136
  %bf.load369 = load i64, i64* %65, align 8, !dbg !8136
  %bf.cast37126 = and i64 %bf.load369, 65535, !dbg !8136
  %cmp372 = icmp eq i64 %bf.cast37126, 9, !dbg !8136
  br i1 %cmp372, label %cleanup428, label %if.then374, !dbg !8137

if.then374:                                       ; preds = %land.lhs.true365, %lor.lhs.false358
  %bf.load376 = load i64, i64* %39, align 8, !dbg !8138
  %bf.cast378 = and i64 %bf.load376, 65535, !dbg !8138
  %arrayidx379 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast378, !dbg !8138
  %66 = load i32, i32* %arrayidx379, align 4, !dbg !8138
  %cmp380 = icmp eq i32 %66, 1, !dbg !8138
  br i1 %cmp380, label %land.lhs.true382, label %if.else411, !dbg !8141

land.lhs.true382:                                 ; preds = %if.then374
  %bf.cast38724 = and i64 %bf.load376, 134217728, !dbg !8142
  %tobool388 = icmp eq i64 %bf.cast38724, 0, !dbg !8142
  br i1 %tobool388, label %if.else411, label %if.then389, !dbg !8143

if.then389:                                       ; preds = %land.lhs.true382
  %bf.cast39425 = and i64 %bf.load339, 134217728, !dbg !8144
  %tobool395 = icmp eq i64 %bf.cast39425, 0, !dbg !8144
  br i1 %tobool395, label %if.then396, label %cleanup428, !dbg !8147

if.then396:                                       ; preds = %if.then389
  %call397 = call %union.tree_node* @copy_node_stat(%union.tree_node* %call337) #6, !dbg !8148
  call void @llvm.dbg.value(metadata %union.tree_node* %call397, metadata !7891, metadata !DIExpression()), !dbg !7911
  %bf.load399 = load i64, i64* %39, align 8, !dbg !8150
  %bf.cast402 = and i64 %bf.load399, 134217728, !dbg !8150
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %call397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8151
  %bf.load404 = load i64, i64* %67, align 8, !dbg !8152
  %bf.clear407 = and i64 %bf.load404, -134217729, !dbg !8152
  %bf.set408 = or i64 %bf.clear407, %bf.cast402, !dbg !8152
  store i64 %bf.set408, i64* %67, align 8, !dbg !8152
  br label %cleanup428, !dbg !8153

if.else411:                                       ; preds = %land.lhs.true382, %if.then374
  %bf.cast41623 = and i64 %bf.load339, 134217728, !dbg !8154
  %tobool417 = icmp eq i64 %bf.cast41623, 0, !dbg !8154
  br i1 %tobool417, label %cleanup428, label %if.then418, !dbg !8156

if.then418:                                       ; preds = %if.else411
  %type420 = getelementptr inbounds %union.tree_node, %union.tree_node* %call337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8157
  %68 = load %union.tree_node*, %union.tree_node** %type420, align 8, !dbg !8157
  %int_cst421 = getelementptr inbounds %union.tree_node, %union.tree_node* %call337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8158
  %low = bitcast i32* %int_cst421 to i64*, !dbg !8158
  %69 = load i64, i64* %low, align 8, !dbg !8158
  %high = getelementptr inbounds i32, i32* %int_cst421, i64 2, !dbg !8159
  %70 = bitcast i32* %high to i64*, !dbg !8159
  %71 = load i64, i64* %70, align 8, !dbg !8159
  %call424 = call %union.tree_node* @build_int_cst_wide(%union.tree_node* %68, i64 %69, i64 %71) #6, !dbg !8160
  call void @llvm.dbg.value(metadata %union.tree_node* %call424, metadata !7891, metadata !DIExpression()), !dbg !7911
  br label %cleanup428, !dbg !8161

cleanup428:                                       ; preds = %if.then389, %if.else411, %if.end336, %land.lhs.true344, %land.lhs.true365, %if.then418, %if.then396, %if.then102
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then102 ], [ true, %if.then396 ], [ true, %if.then389 ], [ true, %if.then418 ], [ true, %if.else411 ], [ true, %land.lhs.true365 ], [ true, %land.lhs.true344 ], [ true, %if.end336 ]
  %value.5 = phi %union.tree_node* [ %value.0, %if.then102 ], [ %call397, %if.then396 ], [ %call337, %if.then389 ], [ %call424, %if.then418 ], [ %call337, %if.else411 ], [ %call337, %land.lhs.true365 ], [ %call337, %land.lhs.true344 ], [ %call337, %if.end336 ], !dbg !7911
  %retval.1 = phi %union.tree_node* [ %call104, %if.then102 ], [ undef, %if.then396 ], [ undef, %if.then389 ], [ undef, %if.then418 ], [ undef, %if.else411 ], [ undef, %land.lhs.true365 ], [ undef, %land.lhs.true344 ], [ undef, %if.end336 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.5, metadata !7891, metadata !DIExpression()), !dbg !7911
  br i1 %cleanup.dest.slot.0, label %if.end431, label %cleanup531

if.end431:                                        ; preds = %cleanup428, %lor.lhs.false48, %if.then54
  %value.6 = phi %union.tree_node* [ %value.0, %if.then54 ], [ %value.0, %lor.lhs.false48 ], [ %value.5, %cleanup428 ], !dbg !8162
  call void @llvm.dbg.value(metadata %union.tree_node* %value.6, metadata !7891, metadata !DIExpression()), !dbg !7911
  %cmp432 = icmp eq %union.tree_node* %value.6, %expr.addr.0, !dbg !8163
  br i1 %cmp432, label %if.then434, label %if.end436, !dbg !8165

if.then434:                                       ; preds = %if.end431
  %call435 = call %union.tree_node* @non_lvalue_loc(i32 %loc, %union.tree_node* %expr.addr.0) #6, !dbg !8166
  call void @llvm.dbg.value(metadata %union.tree_node* %call435, metadata !7891, metadata !DIExpression()), !dbg !7911
  br label %if.end436, !dbg !8167

if.end436:                                        ; preds = %if.then434, %if.end431
  %value.7 = phi %union.tree_node* [ %call435, %if.then434 ], [ %value.6, %if.end431 ], !dbg !7911
  call void @llvm.dbg.value(metadata %union.tree_node* %value.7, metadata !7891, metadata !DIExpression()), !dbg !7911
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8168
  %bf.load438 = load i64, i64* %72, align 8, !dbg !8168
  %bf.cast44011 = and i64 %bf.load438, 65535, !dbg !8170
  %cmp441 = icmp eq i64 %bf.cast44011, 24, !dbg !8170
  br i1 %cmp441, label %if.then505, label %lor.lhs.false443, !dbg !8171

lor.lhs.false443:                                 ; preds = %if.end436
  %cmp448 = icmp eq i64 %bf.cast44011, 26, !dbg !8172
  br i1 %cmp448, label %if.then505, label %lor.lhs.false450, !dbg !8173

lor.lhs.false450:                                 ; preds = %lor.lhs.false443
  %cmp455 = icmp eq i64 %bf.cast44011, 23, !dbg !8174
  br i1 %cmp455, label %land.lhs.true457, label %if.end507, !dbg !8175

land.lhs.true457:                                 ; preds = %lor.lhs.false450
  %73 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8176
  %bf.load459 = load i64, i64* %73, align 8, !dbg !8176
  %bf.cast46114 = and i64 %bf.load459, 65535, !dbg !8177
  %cmp462 = icmp eq i64 %bf.cast46114, 23, !dbg !8177
  br i1 %cmp462, label %land.lhs.true464, label %lor.lhs.false491, !dbg !8178

land.lhs.true464:                                 ; preds = %land.lhs.true457
  %type466 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8179
  %74 = bitcast %union.tree_node** %type466 to i64**, !dbg !8179
  %75 = load i64*, i64** %74, align 8, !dbg !8179
  %bf.load468 = load i64, i64* %75, align 8, !dbg !8179
  %bf.cast47017 = and i64 %bf.load468, 65535, !dbg !8179
  %cmp471 = icmp eq i64 %bf.cast47017, 6, !dbg !8179
  br i1 %cmp471, label %if.end507, label %lor.lhs.false473, !dbg !8179

lor.lhs.false473:                                 ; preds = %land.lhs.true464
  %cmp480 = icmp eq i64 %bf.cast47017, 7, !dbg !8179
  br i1 %cmp480, label %if.end507, label %lor.lhs.false482, !dbg !8179

lor.lhs.false482:                                 ; preds = %lor.lhs.false473
  %cmp489 = icmp eq i64 %bf.cast47017, 8, !dbg !8179
  br i1 %cmp489, label %if.end507, label %lor.lhs.false491, !dbg !8180

lor.lhs.false491:                                 ; preds = %lor.lhs.false482, %land.lhs.true457
  %cmp496 = icmp eq i64 %bf.cast46114, 24, !dbg !8181
  br i1 %cmp496, label %if.end507, label %lor.lhs.false498, !dbg !8182

lor.lhs.false498:                                 ; preds = %lor.lhs.false491
  %cmp503 = icmp eq i64 %bf.cast46114, 26, !dbg !8183
  br i1 %cmp503, label %if.end507, label %if.then505, !dbg !8184

if.then505:                                       ; preds = %lor.lhs.false498, %lor.lhs.false443, %if.end436
  %call506 = call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %5, %union.tree_node* %value.7) #6, !dbg !8185
  call void @llvm.dbg.value(metadata %union.tree_node* %call506, metadata !7891, metadata !DIExpression()), !dbg !7911
  br label %if.end507, !dbg !8186

if.end507:                                        ; preds = %if.then505, %lor.lhs.false498, %lor.lhs.false491, %lor.lhs.false482, %lor.lhs.false473, %land.lhs.true464, %lor.lhs.false450
  %value.8 = phi %union.tree_node* [ %call506, %if.then505 ], [ %value.7, %land.lhs.true464 ], [ %value.7, %lor.lhs.false473 ], [ %value.7, %lor.lhs.false482 ], [ %value.7, %lor.lhs.false491 ], [ %value.7, %lor.lhs.false498 ], [ %value.7, %lor.lhs.false450 ], !dbg !7911
  call void @llvm.dbg.value(metadata %union.tree_node* %value.8, metadata !7891, metadata !DIExpression()), !dbg !7911
  %tobool508 = icmp eq %union.tree_node* %value.8, null, !dbg !8187
  br i1 %tobool508, label %cleanup531, label %land.lhs.true509, !dbg !8187

land.lhs.true509:                                 ; preds = %if.end507
  %76 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8187
  %bf.load511 = load i64, i64* %76, align 8, !dbg !8187
  %bf.cast513 = and i64 %bf.load511, 65535, !dbg !8187
  %arrayidx515 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast513, !dbg !8187
  %77 = load i32, i32* %arrayidx515, align 4, !dbg !8187
  %cmp516 = icmp ugt i32 %77, 3, !dbg !8187
  br i1 %cmp516, label %land.lhs.true518, label %cleanup531, !dbg !8187

land.lhs.true518:                                 ; preds = %land.lhs.true509
  %cmp525 = icmp ult i32 %77, 11, !dbg !8187
  br i1 %cmp525, label %if.then527, label %cleanup531, !dbg !8189

if.then527:                                       ; preds = %land.lhs.true518
  %78 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8190
  store i32 %loc, i32* %78, align 8, !dbg !8190
  br label %cleanup531, !dbg !8190

cleanup531:                                       ; preds = %if.end507, %land.lhs.true509, %land.lhs.true518, %if.then527, %if.end90, %if.end99.loopexit, %cleanup428, %if.then34, %if.then24, %if.then17, %if.then8, %if.then3
  %retval.2 = phi %union.tree_node* [ %2, %if.then3 ], [ %call9, %if.then8 ], [ %7, %if.then17 ], [ %8, %if.then24 ], [ %retval.1, %cleanup428 ], [ %call32, %if.then34 ], [ %call91, %if.end90 ], [ %25, %if.end99.loopexit ], [ %value.8, %if.then527 ], [ %value.8, %land.lhs.true518 ], [ %value.8, %land.lhs.true509 ], [ null, %if.end507 ], !dbg !7911
  ret %union.tree_node* %retval.2, !dbg !8191
}

declare dso_local %union.tree_node* @objc_is_object_ptr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_constructor_single(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @digest_init(i32 %init_loc, %union.tree_node* %type, %union.tree_node* %init, %union.tree_node* %origtype, i8 zeroext %null_pointer_constant, i8 zeroext %strict_string, i32 %require_constant) unnamed_addr #5 !dbg !8192 {
entry:
  %maybe_const = alloca i8, align 1
  %expr = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata i32 %init_loc, metadata !8196, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8197, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %init, metadata !8198, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype, metadata !8199, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata i8 %null_pointer_constant, metadata !8200, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata i8 %strict_string, metadata !8201, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata i32 %require_constant, metadata !8202, metadata !DIExpression()), !dbg !8233
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8234
  %bf.load = load i64, i64* %0, align 8, !dbg !8234
  %1 = trunc i64 %bf.load to i32, !dbg !8234
  %bf.cast = and i32 %1, 65535, !dbg !8234
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !8203, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %init, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8205, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !8206, metadata !DIExpression(DW_OP_deref)), !dbg !8233
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %maybe_const) #8, !dbg !8235
  call void @llvm.dbg.value(metadata i8 1, metadata !8206, metadata !DIExpression()), !dbg !8233
  store i8 1, i8* %maybe_const, align 1, !dbg !8236
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8237
  %cmp = icmp eq %union.tree_node* %2, %type, !dbg !8239
  %tobool = icmp eq %union.tree_node* %init, null, !dbg !8240
  %or.cond.not = or i1 %tobool, %cmp, !dbg !8241
  %cmp2 = icmp eq %union.tree_node* %2, %init, !dbg !8242
  %or.cond3 = or i1 %or.cond.not, %cmp2, !dbg !8241
  br i1 %or.cond3, label %if.then, label %lor.lhs.false3, !dbg !8241

lor.lhs.false3:                                   ; preds = %entry
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %init, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8243
  %3 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !8243
  %cmp5 = icmp eq %union.tree_node* %3, %2, !dbg !8244
  br i1 %cmp5, label %if.then, label %while.cond.preheader, !dbg !8245

while.cond.preheader:                             ; preds = %lor.lhs.false3
  br label %while.cond, !dbg !8246

if.then:                                          ; preds = %entry, %lor.lhs.false3
  br label %cleanup597, !dbg !8247

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %inside_init.0 = phi %union.tree_node* [ %7, %while.body ], [ %init, %while.cond.preheader ], !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0, metadata !8204, metadata !DIExpression()), !dbg !8233
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8246
  %bf.load7 = load i64, i64* %4, align 8, !dbg !8246
  %bf.cast918 = and i64 %bf.load7, 65535, !dbg !8246
  %cmp10 = icmp eq i64 %bf.cast918, 116, !dbg !8246
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false11, !dbg !8246

lor.lhs.false11:                                  ; preds = %while.cond
  %5 = or i64 %bf.cast918, 4, !dbg !8246
  %6 = icmp eq i64 %5, 117, !dbg !8246
  br i1 %6, label %land.lhs.true, label %while.end, !dbg !8246

land.lhs.true:                                    ; preds = %lor.lhs.false11, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8246
  %7 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8246
  %cmp23 = icmp eq %union.tree_node* %7, %2, !dbg !8246
  br i1 %cmp23, label %while.end, label %land.rhs, !dbg !8246

land.rhs:                                         ; preds = %land.lhs.true
  %type25 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8246
  %8 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !8246
  %type30 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8246
  %9 = load %union.tree_node*, %union.tree_node** %type30, align 8, !dbg !8246
  %cmp31 = icmp eq %union.tree_node* %8, %9, !dbg !8246
  br i1 %cmp31, label %while.body, label %while.end, !dbg !8246

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %while.cond, !dbg !8246, !llvm.loop !8248

while.end:                                        ; preds = %lor.lhs.false11, %land.lhs.true, %land.rhs
  %inside_init.0.lcssa = phi %union.tree_node* [ %inside_init.0, %lor.lhs.false11 ], [ %inside_init.0, %land.lhs.true ], [ %inside_init.0, %land.rhs ], !dbg !8233
  %bf.cast918.lcssa = phi i64 [ %bf.cast918, %lor.lhs.false11 ], [ %bf.cast918, %land.lhs.true ], [ %bf.cast918, %land.rhs ], !dbg !8246
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !8204, metadata !DIExpression()), !dbg !8233
  %cmp39 = icmp eq i64 %bf.cast918.lcssa, 190, !dbg !8249
  br i1 %cmp39, label %if.then40, label %if.end46, !dbg !8251

if.then40:                                        ; preds = %while.end
  %type42 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8252
  %10 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !8252
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !8205, metadata !DIExpression()), !dbg !8233
  %operands44 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8254
  %11 = load %union.tree_node*, %union.tree_node** %operands44, align 8, !dbg !8254
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end46, !dbg !8255

if.end46:                                         ; preds = %if.then40, %while.end
  %inside_init.1 = phi %union.tree_node* [ %11, %if.then40 ], [ %inside_init.0.lcssa, %while.end ], !dbg !8233
  %semantic_type.0 = phi %union.tree_node* [ %10, %if.then40 ], [ null, %while.end ], !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_type.0, metadata !8205, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.1, metadata !8204, metadata !DIExpression()), !dbg !8233
  %conv = trunc i32 %require_constant to i8, !dbg !8256
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !8206, metadata !DIExpression(DW_OP_deref)), !dbg !8233
  %call = call %union.tree_node* @c_fully_fold(%union.tree_node* %inside_init.1, i8 zeroext %conv, i8* nonnull %maybe_const) #6, !dbg !8257
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8204, metadata !DIExpression()), !dbg !8233
  %call47 = call %union.tree_node* @decl_constant_value_for_optimization(%union.tree_node* %call) #6, !dbg !8258
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !8204, metadata !DIExpression()), !dbg !8233
  %cmp48 = icmp eq i32 %bf.cast, 15, !dbg !8259
  %tobool51 = icmp ne %union.tree_node* %call47, null, !dbg !8260
  %or.cond5 = and i1 %cmp48, %tobool51, !dbg !8261
  br i1 %or.cond5, label %land.lhs.true52, label %if.end217, !dbg !8261

land.lhs.true52:                                  ; preds = %if.end46
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8262
  %bf.load54 = load i64, i64* %12, align 8, !dbg !8262
  %bf.cast5643 = and i64 %bf.load54, 65535, !dbg !8263
  %cmp57 = icmp eq i64 %bf.cast5643, 28, !dbg !8263
  br i1 %cmp57, label %if.then59, label %if.end217, !dbg !8264

if.then59:                                        ; preds = %land.lhs.true52
  %type61 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8265
  %13 = bitcast %union.tree_node** %type61 to %struct.tree_type**, !dbg !8265
  %14 = load %struct.tree_type*, %struct.tree_type** %13, align 8, !dbg !8265
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %14, i64 0, i32 16, !dbg !8265
  %15 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !8265
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !8207, metadata !DIExpression()), !dbg !8266
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !8267
  %cmp63 = icmp eq %union.tree_node* %15, %16, !dbg !8268
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !dbg !8269
  %cmp66 = icmp eq %union.tree_node* %15, %17, !dbg !8270
  %or.cond6 = or i1 %cmp63, %cmp66, !dbg !8271
  br i1 %or.cond6, label %lor.end, label %lor.rhs, !dbg !8271

lor.rhs:                                          ; preds = %if.then59
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !8272
  %cmp68 = icmp eq %union.tree_node* %15, %18, !dbg !8273
  br label %lor.end, !dbg !8274

lor.end:                                          ; preds = %lor.rhs, %if.then59
  %19 = phi i1 [ true, %if.then59 ], [ %cmp68, %lor.rhs ]
  call void @llvm.dbg.value(metadata i1 %19, metadata !8210, metadata !DIExpression()), !dbg !8266
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 2), align 16, !dbg !8275
  %call71 = call i32 @comptypes(%union.tree_node* %15, %union.tree_node* %20) #7, !dbg !8276
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 0), align 16, !dbg !8277
  %call75 = call i32 @comptypes(%union.tree_node* %15, %union.tree_node* %21) #7, !dbg !8278
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 1), align 8, !dbg !8279
  %call82 = call i32 @comptypes(%union.tree_node* %15, %union.tree_node* %22) #7, !dbg !8280
  %23 = or i32 %call71, %call75, !dbg !8281
  %24 = or i32 %23, %call82, !dbg !8281
  %25 = icmp ne i32 %24, 0, !dbg !8281
  %26 = or i1 %25, %19, !dbg !8281
  br i1 %26, label %if.then100, label %if.else188, !dbg !8281

if.then100:                                       ; preds = %lor.end
  %27 = bitcast %struct.c_expr* %expr to i8*, !dbg !8282
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8, !dbg !8282
  %type102 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8283
  %28 = bitcast %union.tree_node** %type102 to %struct.tree_common**, !dbg !8283
  %29 = load %struct.tree_common*, %struct.tree_common** %28, align 8, !dbg !8283
  %type104 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %29, i64 0, i32 2, !dbg !8283
  %30 = bitcast %union.tree_node** %type104 to %struct.tree_type**, !dbg !8283
  %31 = load %struct.tree_type*, %struct.tree_type** %30, align 8, !dbg !8283
  %main_variant106 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %31, i64 0, i32 16, !dbg !8283
  %32 = load %union.tree_node*, %union.tree_node** %main_variant106, align 8, !dbg !8283
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !8217, metadata !DIExpression()), !dbg !8284
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !8285
  store %union.tree_node* %call47, %union.tree_node** %value, align 8, !dbg !8286
  %tobool108 = icmp eq i8 %strict_string, 0, !dbg !8287
  %cond = select i1 %tobool108, i32 0, i32 28, !dbg !8287
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 1, !dbg !8288
  store i32 %cond, i32* %original_code, align 8, !dbg !8289
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 2, !dbg !8290
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !8291
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !8214, metadata !DIExpression(DW_OP_deref)), !dbg !8284
  call void @maybe_warn_string_init(%union.tree_node* %type, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #7, !dbg !8292
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8293
  %33 = bitcast i32* %values to %union.tree_node**, !dbg !8293
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !8293
  %tobool110 = icmp eq %union.tree_node* %34, null, !dbg !8293
  br i1 %tobool110, label %if.end117, label %land.lhs.true111, !dbg !8295

land.lhs.true111:                                 ; preds = %if.then100
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8296
  %35 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !8296
  %36 = load %union.tree_node*, %union.tree_node** %35, align 8, !dbg !8296
  %tobool115 = icmp eq %union.tree_node* %36, null, !dbg !8296
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !8297

if.then116:                                       ; preds = %land.lhs.true111
  call void @pedwarn_init(i32 %init_loc, i32 834, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.89, i64 0, i64 0)) #7, !dbg !8298
  br label %if.end117, !dbg !8298

if.end117:                                        ; preds = %land.lhs.true111, %if.then100, %if.then116
  %37 = bitcast %union.tree_node** %type102 to %struct.tree_type**, !dbg !8299
  %38 = load %struct.tree_type*, %struct.tree_type** %37, align 8, !dbg !8299
  %main_variant121 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %38, i64 0, i32 16, !dbg !8299
  %39 = load %union.tree_node*, %union.tree_node** %main_variant121, align 8, !dbg !8299
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8301
  %41 = load %union.tree_node*, %union.tree_node** %40, align 8, !dbg !8301
  %call124 = call i32 @comptypes(%union.tree_node* %39, %union.tree_node* %41) #7, !dbg !8302
  %tobool125 = icmp eq i32 %call124, 0, !dbg !8302
  br i1 %tobool125, label %if.end127, label %cleanup, !dbg !8303

if.end127:                                        ; preds = %if.end117
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !8304
  br i1 %19, label %if.then129, label %if.else, !dbg !8306

if.then129:                                       ; preds = %if.end127
  %cmp130 = icmp eq %union.tree_node* %32, %42, !dbg !8307
  br i1 %cmp130, label %if.end143, label %if.then132, !dbg !8310

if.then132:                                       ; preds = %if.then129
  call void @error_init(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.253, i64 0, i64 0)) #7, !dbg !8311
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8313
  br label %cleanup, !dbg !8314

if.else:                                          ; preds = %if.end127
  %cmp134 = icmp eq %union.tree_node* %32, %42, !dbg !8315
  br i1 %cmp134, label %if.then136, label %if.else137, !dbg !8318

if.then136:                                       ; preds = %if.else
  call void @error_init(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.254, i64 0, i64 0)) #7, !dbg !8319
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8321
  br label %cleanup, !dbg !8322

if.else137:                                       ; preds = %if.else
  %call138 = call i32 @comptypes(%union.tree_node* %15, %union.tree_node* %32) #7, !dbg !8323
  %tobool139 = icmp eq i32 %call138, 0, !dbg !8323
  br i1 %tobool139, label %if.then140, label %if.end143, !dbg !8325

if.then140:                                       ; preds = %if.else137
  call void @error_init(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.255, i64 0, i64 0)) #7, !dbg !8326
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8328
  br label %cleanup, !dbg !8329

if.end143:                                        ; preds = %if.then129, %if.else137
  store %union.tree_node* %type, %union.tree_node** %type102, align 8, !dbg !8330
  %46 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !8331
  %cmp148 = icmp eq %union.tree_node* %46, null, !dbg !8332
  br i1 %cmp148, label %cleanup, label %land.lhs.true150, !dbg !8333

land.lhs.true150:                                 ; preds = %if.end143
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8334
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !8334
  %cmp152 = icmp eq %union.tree_node* %48, null, !dbg !8335
  br i1 %cmp152, label %cleanup, label %land.lhs.true154, !dbg !8336

land.lhs.true154:                                 ; preds = %land.lhs.true150
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8336
  %bf.load158 = load i64, i64* %49, align 8, !dbg !8337
  %bf.cast16047 = and i64 %bf.load158, 65535, !dbg !8338
  %cmp161 = icmp eq i64 %bf.cast16047, 23, !dbg !8338
  br i1 %cmp161, label %if.then163, label %cleanup, !dbg !8339

if.then163:                                       ; preds = %land.lhs.true154
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8340
  %51 = load i32, i32* %50, align 8, !dbg !8340
  %conv164 = sext i32 %51 to i64, !dbg !8340
  call void @llvm.dbg.value(metadata i64 %conv164, metadata !8218, metadata !DIExpression()), !dbg !8341
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8342
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8, !dbg !8342
  %type166 = bitcast %union.tree_node* %15 to %struct.tree_type*, !dbg !8344
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type166, i64 0, i32 6, !dbg !8344
  %bf.load167 = load i32, i32* %precision, align 4, !dbg !8344
  %bf.clear168 = lshr i32 %bf.load167, 3, !dbg !8345
  %div = and i32 %bf.clear168, 127, !dbg !8345
  %conv169 = zext i32 %div to i64, !dbg !8346
  %sub = sub nsw i64 %conv164, %conv169, !dbg !8347
  %call170 = call i32 @compare_tree_int(%union.tree_node* %53, i64 %sub) #6, !dbg !8348
  %cmp171 = icmp slt i32 %call170, 0, !dbg !8349
  br i1 %cmp171, label %if.then173, label %if.else174, !dbg !8350

if.then173:                                       ; preds = %if.then163
  call void @pedwarn_init(i32 %init_loc, i32 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.256, i64 0, i64 0)) #7, !dbg !8351
  br label %cleanup, !dbg !8351

if.else174:                                       ; preds = %if.then163
  %54 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8352
  %tobool175 = icmp eq i32 %54, 0, !dbg !8352
  br i1 %tobool175, label %cleanup, label %land.lhs.true176, !dbg !8354

land.lhs.true176:                                 ; preds = %if.else174
  %55 = load %union.tree_node*, %union.tree_node** %52, align 8, !dbg !8355
  %call179 = call i32 @compare_tree_int(%union.tree_node* %55, i64 %conv164) #6, !dbg !8356
  %cmp180 = icmp slt i32 %call179, 0, !dbg !8357
  br i1 %cmp180, label %if.then182, label %cleanup, !dbg !8358

if.then182:                                       ; preds = %land.lhs.true176
  %call183 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %init_loc, i32 49, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.257, i64 0, i64 0)) #6, !dbg !8359
  br label %cleanup, !dbg !8359

cleanup:                                          ; preds = %if.else174, %land.lhs.true150, %if.end143, %if.end117, %land.lhs.true154, %land.lhs.true176, %if.then182, %if.then173, %if.then140, %if.then136, %if.then132
  %retval.0 = phi %union.tree_node* [ %43, %if.then132 ], [ %44, %if.then136 ], [ %45, %if.then140 ], [ %call47, %if.end117 ], [ %call47, %if.then173 ], [ %call47, %if.then182 ], [ %call47, %land.lhs.true176 ], [ %call47, %if.else174 ], [ %call47, %land.lhs.true154 ], [ %call47, %land.lhs.true150 ], [ %call47, %if.end143 ], !dbg !8284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8, !dbg !8360
  br label %cleanup212

if.else188:                                       ; preds = %lor.end
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8361
  %bf.load190 = load i64, i64* %56, align 8, !dbg !8361
  %bf.cast19244 = and i64 %bf.load190, 65535, !dbg !8361
  %cmp193 = icmp eq i64 %bf.cast19244, 6, !dbg !8361
  br i1 %cmp193, label %if.then209, label %lor.lhs.false195, !dbg !8361

lor.lhs.false195:                                 ; preds = %if.else188
  %cmp200 = icmp eq i64 %bf.cast19244, 7, !dbg !8361
  br i1 %cmp200, label %if.then209, label %lor.lhs.false202, !dbg !8361

lor.lhs.false202:                                 ; preds = %lor.lhs.false195
  %cmp207 = icmp eq i64 %bf.cast19244, 8, !dbg !8361
  br i1 %cmp207, label %if.then209, label %cleanup212, !dbg !8363

if.then209:                                       ; preds = %lor.lhs.false202, %lor.lhs.false195, %if.else188
  call void @error_init(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.258, i64 0, i64 0)) #7, !dbg !8364
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8366
  br label %cleanup212, !dbg !8367

cleanup212:                                       ; preds = %lor.lhs.false202, %if.then209, %cleanup
  %cleanup.dest.slot.1 = phi i1 [ false, %cleanup ], [ false, %if.then209 ], [ true, %lor.lhs.false202 ]
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %57, %if.then209 ], [ undef, %lor.lhs.false202 ]
  br i1 %cleanup.dest.slot.1, label %if.end217, label %cleanup597

if.end217:                                        ; preds = %cleanup212, %land.lhs.true52, %if.end46
  %retval.2 = phi %union.tree_node* [ undef, %land.lhs.true52 ], [ undef, %if.end46 ], [ %retval.1, %cleanup212 ]
  %cmp218 = icmp eq i32 %bf.cast, 14, !dbg !8368
  br i1 %cmp218, label %land.lhs.true220, label %if.end315, !dbg !8369

land.lhs.true220:                                 ; preds = %if.end217
  %type222 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8370
  %58 = bitcast %union.tree_node** %type222 to i64**, !dbg !8370
  %59 = load i64*, i64** %58, align 8, !dbg !8370
  %bf.load224 = load i64, i64* %59, align 8, !dbg !8370
  %bf.cast22639 = and i64 %bf.load224, 65535, !dbg !8371
  %cmp227 = icmp eq i64 %bf.cast22639, 14, !dbg !8371
  br i1 %cmp227, label %land.lhs.true229, label %if.end315, !dbg !8372

land.lhs.true229:                                 ; preds = %land.lhs.true220
  %60 = bitcast i64* %59 to %union.tree_node*, !dbg !8372
  %call232 = call zeroext i8 @vector_types_convertible_p(%union.tree_node* %60, %union.tree_node* %type, i8 zeroext 1) #6, !dbg !8373
  %tobool234 = icmp eq i8 %call232, 0, !dbg !8373
  br i1 %tobool234, label %if.end315, label %land.lhs.true235, !dbg !8374

land.lhs.true235:                                 ; preds = %land.lhs.true229
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8375
  %bf.load237 = load i64, i64* %61, align 8, !dbg !8375
  %bf.cast23940 = and i64 %bf.load237, 131072, !dbg !8375
  %tobool240 = icmp eq i64 %bf.cast23940, 0, !dbg !8375
  br i1 %tobool240, label %if.end315, label %if.then241, !dbg !8376

if.then241:                                       ; preds = %land.lhs.true235
  %bf.cast24541 = and i64 %bf.load237, 65535, !dbg !8377
  %cmp246 = icmp eq i64 %bf.cast24541, 27, !dbg !8377
  br i1 %cmp246, label %land.lhs.true248, label %if.end258, !dbg !8379

land.lhs.true248:                                 ; preds = %if.then241
  %62 = bitcast %union.tree_node** %type222 to %struct.tree_type**, !dbg !8380
  %63 = load %struct.tree_type*, %struct.tree_type** %62, align 8, !dbg !8380
  %main_variant252 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %63, i64 0, i32 16, !dbg !8380
  %64 = load %union.tree_node*, %union.tree_node** %main_variant252, align 8, !dbg !8380
  %65 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8381
  %66 = load %union.tree_node*, %union.tree_node** %65, align 8, !dbg !8381
  %call255 = call i32 @comptypes(%union.tree_node* %64, %union.tree_node* %66) #7, !dbg !8382
  %tobool256 = icmp eq i32 %call255, 0, !dbg !8382
  br i1 %tobool256, label %land.lhs.true248.if.end258_crit_edge, label %cleanup597, !dbg !8383

land.lhs.true248.if.end258_crit_edge:             ; preds = %land.lhs.true248
  %bf.load260.pre = load i64, i64* %61, align 8, !dbg !8384
  br label %if.end258, !dbg !8383

if.end258:                                        ; preds = %land.lhs.true248.if.end258_crit_edge, %if.then241
  %bf.load260 = phi i64 [ %bf.load260.pre, %land.lhs.true248.if.end258_crit_edge ], [ %bf.load237, %if.then241 ], !dbg !8384
  %bf.cast26242 = and i64 %bf.load260, 65535, !dbg !8385
  %cmp263 = icmp eq i64 %bf.cast26242, 51, !dbg !8385
  br i1 %cmp263, label %for.cond.preheader, label %if.end315, !dbg !8386

for.cond.preheader:                               ; preds = %if.end258
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8387
  %67 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !8387
  br label %for.cond, !dbg !8390

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %ix.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8391
  %value266.0 = phi %union.tree_node* [ %value266.1, %for.inc ], [ undef, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value266.0, metadata !8226, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i64 %ix.0, metadata !8221, metadata !DIExpression()), !dbg !8392
  %68 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %67, align 8, !dbg !8393
  %tobool267 = icmp eq %struct.VEC_constructor_elt_gc* %68, null, !dbg !8393
  br i1 %tobool267, label %cond.end, label %cond.true, !dbg !8393

cond.true:                                        ; preds = %for.cond
  %base270 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %68, i64 0, i32 0, !dbg !8393
  br label %cond.end, !dbg !8393

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond271 = phi %struct.VEC_constructor_elt_base* [ %base270, %cond.true ], [ null, %for.cond ], !dbg !8393
  %call272 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond271) #7, !dbg !8393
  %conv273 = zext i32 %call272 to i64, !dbg !8393
  %cmp274 = icmp ult i64 %ix.0, %conv273, !dbg !8393
  br i1 %cmp274, label %cond.false277, label %cond.end291, !dbg !8393

cond.false277:                                    ; preds = %cond.end
  %69 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %67, align 8, !dbg !8393
  %tobool280 = icmp eq %struct.VEC_constructor_elt_gc* %69, null, !dbg !8393
  br i1 %tobool280, label %cond.end286, label %cond.true281, !dbg !8393

cond.true281:                                     ; preds = %cond.false277
  %base284 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %69, i64 0, i32 0, !dbg !8393
  br label %cond.end286, !dbg !8393

cond.end286:                                      ; preds = %cond.false277, %cond.true281
  %cond287 = phi %struct.VEC_constructor_elt_base* [ %base284, %cond.true281 ], [ null, %cond.false277 ], !dbg !8393
  %conv288 = trunc i64 %ix.0 to i32, !dbg !8393
  %call289 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond287, i32 %conv288) #7, !dbg !8393
  %value290 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call289, i64 0, i32 1, !dbg !8393
  %70 = load %union.tree_node*, %union.tree_node** %value290, align 8, !dbg !8393
  call void @llvm.dbg.value(metadata %union.tree_node* %70, metadata !8226, metadata !DIExpression()), !dbg !8392
  br label %cond.end291, !dbg !8393

cond.end291:                                      ; preds = %cond.end, %cond.end286
  %value266.1 = phi %union.tree_node* [ %70, %cond.end286 ], [ %value266.0, %cond.end ]
  %cond292 = phi i1 [ true, %cond.end286 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value266.1, metadata !8226, metadata !DIExpression()), !dbg !8392
  br i1 %cond292, label %for.body, label %for.end, !dbg !8390

for.body:                                         ; preds = %cond.end291
  %71 = getelementptr inbounds %union.tree_node, %union.tree_node* %value266.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8394
  %bf.load295 = load i64, i64* %71, align 8, !dbg !8394
  %bf.cast297 = and i64 %bf.load295, 65535, !dbg !8394
  %arrayidx298 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast297, !dbg !8394
  %72 = load i32, i32* %arrayidx298, align 4, !dbg !8394
  %cmp299 = icmp eq i32 %72, 1, !dbg !8394
  br i1 %cmp299, label %for.inc, label %for.end, !dbg !8396

for.inc:                                          ; preds = %for.body
  %inc = add i64 %ix.0, 1, !dbg !8393
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8221, metadata !DIExpression()), !dbg !8392
  br label %for.cond, !dbg !8393, !llvm.loop !8397

for.end:                                          ; preds = %for.body, %cond.end291
  %constant_p.0 = phi i1 [ true, %cond.end291 ], [ false, %for.body ]
  br i1 %constant_p.0, label %if.then304, label %cleanup309, !dbg !8399

if.then304:                                       ; preds = %for.end
  %73 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %67, align 8, !dbg !8400
  %call307 = call %union.tree_node* @build_vector_from_ctor(%union.tree_node* %type, %struct.VEC_constructor_elt_gc* %73) #6, !dbg !8402
  br label %cleanup309, !dbg !8403

cleanup309:                                       ; preds = %for.end, %if.then304
  %cleanup.dest.slot.2 = phi i1 [ false, %if.then304 ], [ true, %for.end ]
  %retval.3 = phi %union.tree_node* [ %call307, %if.then304 ], [ %retval.2, %for.end ], !dbg !8233
  br i1 %cleanup.dest.slot.2, label %if.end315, label %cleanup597

if.end315:                                        ; preds = %land.lhs.true235, %land.lhs.true229, %if.end258, %cleanup309, %land.lhs.true220, %if.end217
  %74 = load i32, i32* @warn_sequence_point, align 4, !dbg !8404
  %tobool316 = icmp eq i32 %74, 0, !dbg !8404
  br i1 %tobool316, label %if.end318, label %if.then317, !dbg !8406

if.then317:                                       ; preds = %if.end315
  call void @verify_sequence_points(%union.tree_node* %call47) #6, !dbg !8407
  br label %if.end318, !dbg !8407

if.end318:                                        ; preds = %if.end315, %if.then317
  %tobool319 = icmp eq %union.tree_node* %call47, null, !dbg !8408
  br i1 %tobool319, label %if.end496, label %land.lhs.true320, !dbg !8409

land.lhs.true320:                                 ; preds = %if.end318
  %type322 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8410
  %75 = load %union.tree_node*, %union.tree_node** %type322, align 8, !dbg !8410
  %cmp323 = icmp eq %union.tree_node* %75, null, !dbg !8411
  br i1 %cmp323, label %if.end496, label %land.lhs.true325, !dbg !8412

land.lhs.true325:                                 ; preds = %land.lhs.true320
  %76 = getelementptr inbounds %union.tree_node, %union.tree_node* %75, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8413
  %77 = load %union.tree_node*, %union.tree_node** %76, align 8, !dbg !8413
  %78 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8414
  %79 = load %union.tree_node*, %union.tree_node** %78, align 8, !dbg !8414
  %call332 = call i32 @comptypes(%union.tree_node* %77, %union.tree_node* %79) #7, !dbg !8415
  %tobool333 = icmp eq i32 %call332, 0, !dbg !8415
  br i1 %tobool333, label %lor.lhs.false334, label %if.then371, !dbg !8416

lor.lhs.false334:                                 ; preds = %land.lhs.true325
  %trunc27 = trunc i64 %bf.load to i16, !dbg !8417
  switch i16 %trunc27, label %if.end581 [
    i16 15, label %land.lhs.true337
    i16 14, label %land.lhs.true345
    i16 10, label %land.lhs.true353
    i16 8, label %if.then520
    i16 9, label %if.then520
    i16 11, label %if.then520
    i16 6, label %if.then520
    i16 7, label %if.then520
    i16 13, label %if.then520
  ], !dbg !8417

land.lhs.true337:                                 ; preds = %lor.lhs.false334
  %80 = load %union.tree_node*, %union.tree_node** %type322, align 8, !dbg !8418
  %call340 = call i32 @comptypes(%union.tree_node* %80, %union.tree_node* %type) #7, !dbg !8419
  %tobool341 = icmp eq i32 %call340, 0, !dbg !8419
  br i1 %tobool341, label %lor.lhs.false342, label %if.then371, !dbg !8420

lor.lhs.false342:                                 ; preds = %land.lhs.true337
  switch i16 15, label %if.end581 [
    i16 14, label %land.lhs.true345
    i16 10, label %land.lhs.true353
    i16 8, label %if.then520
    i16 9, label %if.then520
    i16 11, label %if.then520
    i16 6, label %if.then520
    i16 7, label %if.then520
    i16 13, label %if.then520
  ], !dbg !8421

land.lhs.true345:                                 ; preds = %lor.lhs.false334, %lor.lhs.false342
  %81 = load %union.tree_node*, %union.tree_node** %type322, align 8, !dbg !8422
  %call348 = call i32 @comptypes(%union.tree_node* %81, %union.tree_node* %type) #7, !dbg !8423
  %tobool349 = icmp eq i32 %call348, 0, !dbg !8423
  br i1 %tobool349, label %lor.lhs.false350, label %if.then371, !dbg !8424

lor.lhs.false350:                                 ; preds = %land.lhs.true345
  switch i16 %trunc27, label %if.end581 [
    i16 10, label %land.lhs.true353
    i16 8, label %if.then520
    i16 9, label %if.then520
    i16 11, label %if.then520
    i16 6, label %if.then520
    i16 7, label %if.then520
    i16 13, label %if.then520
    i16 14, label %if.then520
  ], !dbg !8425

land.lhs.true353:                                 ; preds = %lor.lhs.false334, %lor.lhs.false342, %lor.lhs.false350
  %82 = bitcast %union.tree_node** %type322 to i64**, !dbg !8426
  %83 = load i64*, i64** %82, align 8, !dbg !8426
  %bf.load357 = load i64, i64* %83, align 8, !dbg !8426
  %bf.cast35928 = and i64 %bf.load357, 65535, !dbg !8427
  %cmp360 = icmp eq i64 %bf.cast35928, 15, !dbg !8427
  br i1 %cmp360, label %land.lhs.true362, label %if.end496, !dbg !8428

land.lhs.true362:                                 ; preds = %land.lhs.true353
  %type366 = getelementptr inbounds i64, i64* %83, i64 2, !dbg !8429
  %84 = bitcast i64* %type366 to %union.tree_node**, !dbg !8429
  %85 = load %union.tree_node*, %union.tree_node** %84, align 8, !dbg !8429
  %type368 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8430
  %86 = load %union.tree_node*, %union.tree_node** %type368, align 8, !dbg !8430
  %call369 = call i32 @comptypes(%union.tree_node* %85, %union.tree_node* %86) #7, !dbg !8431
  %tobool370 = icmp eq i32 %call369, 0, !dbg !8431
  br i1 %tobool370, label %if.end496, label %if.then371, !dbg !8432

if.then371:                                       ; preds = %land.lhs.true337, %land.lhs.true345, %land.lhs.true362, %land.lhs.true325
  %cmp372 = icmp eq i32 %bf.cast, 10, !dbg !8433
  br i1 %cmp372, label %if.then374, label %if.end402, !dbg !8435

if.then374:                                       ; preds = %if.then371
  %87 = bitcast %union.tree_node** %type322 to i64**, !dbg !8436
  %88 = load i64*, i64** %87, align 8, !dbg !8436
  %bf.load378 = load i64, i64* %88, align 8, !dbg !8436
  %bf.cast38034 = and i64 %bf.load378, 65535, !dbg !8439
  %cmp381 = icmp eq i64 %bf.cast38034, 15, !dbg !8439
  br i1 %cmp381, label %if.then383, label %if.end402, !dbg !8440

if.then383:                                       ; preds = %if.then374
  %89 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8441
  %bf.load385 = load i64, i64* %89, align 8, !dbg !8441
  %bf.cast38735 = and i64 %bf.load385, 65535, !dbg !8444
  %cmp388 = icmp eq i64 %bf.cast38735, 28, !dbg !8444
  br i1 %cmp388, label %if.then397, label %lor.lhs.false390, !dbg !8445

lor.lhs.false390:                                 ; preds = %if.then383
  %cmp395 = icmp eq i64 %bf.cast38735, 119, !dbg !8446
  br i1 %cmp395, label %if.then397, label %if.else399, !dbg !8447

if.then397:                                       ; preds = %lor.lhs.false390, %if.then383
  %call398 = call fastcc %union.tree_node* @array_to_pointer_conversion(i32 %init_loc, %union.tree_node* %call47) #7, !dbg !8448
  call void @llvm.dbg.value(metadata %union.tree_node* %call398, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end402, !dbg !8449

if.else399:                                       ; preds = %lor.lhs.false390
  call void @error_init(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.239, i64 0, i64 0)) #7, !dbg !8450
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8452
  br label %cleanup597, !dbg !8453

if.end402:                                        ; preds = %if.then374, %if.then397, %if.then371
  %inside_init.3 = phi %union.tree_node* [ %call47, %if.then371 ], [ %call398, %if.then397 ], [ %call47, %if.then374 ], !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.3, metadata !8204, metadata !DIExpression()), !dbg !8233
  br i1 %cmp218, label %if.then405, label %if.end407, !dbg !8454

if.then405:                                       ; preds = %if.end402
  %call406 = call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %inside_init.3) #6, !dbg !8455
  call void @llvm.dbg.value(metadata %union.tree_node* %call406, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end407, !dbg !8457

if.end407:                                        ; preds = %if.then405, %if.end402
  %inside_init.4 = phi %union.tree_node* [ %call406, %if.then405 ], [ %inside_init.3, %if.end402 ], !dbg !8458
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.4, metadata !8204, metadata !DIExpression()), !dbg !8233
  %tobool408 = icmp eq i32 %require_constant, 0, !dbg !8459
  br i1 %tobool408, label %if.end428, label %land.lhs.true409, !dbg !8460

land.lhs.true409:                                 ; preds = %if.end407
  %cmp410 = icmp ne i32 %bf.cast, 14, !dbg !8461
  %91 = load i32, i32* @flag_isoc99, align 4, !dbg !8462
  %tobool413 = icmp ne i32 %91, 0, !dbg !8462
  %or.cond10 = and i1 %cmp410, %tobool413, !dbg !8463
  br i1 %or.cond10, label %if.end428, label %land.lhs.true414, !dbg !8463

land.lhs.true414:                                 ; preds = %land.lhs.true409
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8464
  %bf.load416 = load i64, i64* %92, align 8, !dbg !8464
  %bf.cast41833 = and i64 %bf.load416, 65535, !dbg !8465
  %cmp419 = icmp eq i64 %bf.cast41833, 119, !dbg !8465
  br i1 %cmp419, label %if.then421, label %if.end428, !dbg !8466

if.then421:                                       ; preds = %land.lhs.true414
  %operands423 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8467
  %93 = bitcast %union.tree_node** %operands423 to %struct.tree_exp**, !dbg !8467
  %94 = load %struct.tree_exp*, %struct.tree_exp** %93, align 8, !dbg !8467
  %arrayidx427 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %94, i64 0, i32 3, i64 0, !dbg !8467
  %95 = bitcast %union.tree_node** %arrayidx427 to %struct.tree_decl_common**, !dbg !8467
  %96 = load %struct.tree_decl_common*, %struct.tree_decl_common** %95, align 8, !dbg !8467
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %96, i64 0, i32 5, !dbg !8468
  %97 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !8468
  call void @llvm.dbg.value(metadata %union.tree_node* %97, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end428, !dbg !8469

if.end428:                                        ; preds = %if.end407, %land.lhs.true409, %if.then421, %land.lhs.true414
  %inside_init.5 = phi %union.tree_node* [ %97, %if.then421 ], [ %inside_init.4, %land.lhs.true414 ], [ %inside_init.4, %if.end407 ], [ %inside_init.4, %land.lhs.true409 ], !dbg !8458
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.5, metadata !8204, metadata !DIExpression()), !dbg !8233
  br i1 %cmp48, label %land.lhs.true431, label %if.end446, !dbg !8470

land.lhs.true431:                                 ; preds = %if.end428
  %98 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8472
  %bf.load433 = load i64, i64* %98, align 8, !dbg !8472
  %bf.cast43531 = and i64 %bf.load433, 65535, !dbg !8473
  %cmp436 = icmp eq i64 %bf.cast43531, 28, !dbg !8473
  br i1 %cmp436, label %if.end446, label %land.lhs.true438, !dbg !8474

land.lhs.true438:                                 ; preds = %land.lhs.true431
  %cmp443 = icmp eq i64 %bf.cast43531, 51, !dbg !8475
  br i1 %cmp443, label %if.end446, label %if.then445, !dbg !8476

if.then445:                                       ; preds = %land.lhs.true438
  call void @error_init(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.259, i64 0, i64 0)) #7, !dbg !8477
  %99 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8479
  br label %cleanup597, !dbg !8480

if.end446:                                        ; preds = %land.lhs.true438, %land.lhs.true431, %if.end428
  %tobool447 = icmp ne i32 %require_constant, 0, !dbg !8481
  %100 = load i32, i32* @pedantic, align 4, !dbg !8483
  %tobool449 = icmp ne i32 %100, 0, !dbg !8483
  %or.cond11 = and i1 %tobool447, %tobool449, !dbg !8484
  br i1 %or.cond11, label %land.lhs.true450, label %if.else469, !dbg !8484

land.lhs.true450:                                 ; preds = %if.end446
  %101 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8485
  %bf.load452 = load i64, i64* %101, align 8, !dbg !8485
  %bf.cast45430 = and i64 %bf.load452, 65535, !dbg !8486
  %cmp455 = icmp eq i64 %bf.cast45430, 52, !dbg !8486
  br i1 %cmp455, label %if.then457, label %if.else469, !dbg !8487

if.then457:                                       ; preds = %land.lhs.true450
  %type459 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8488
  %102 = load %union.tree_node*, %union.tree_node** %type459, align 8, !dbg !8488
  %call460 = call fastcc %union.tree_node* @valid_compound_expr_initializer(%union.tree_node* %inside_init.5, %union.tree_node* %102) #7, !dbg !8490
  call void @llvm.dbg.value(metadata %union.tree_node* %call460, metadata !8204, metadata !DIExpression()), !dbg !8233
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8491
  %cmp461 = icmp eq %union.tree_node* %call460, %103, !dbg !8493
  br i1 %cmp461, label %if.then463, label %if.else464, !dbg !8494

if.then463:                                       ; preds = %if.then457
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.260, i64 0, i64 0)) #7, !dbg !8495
  br label %if.end465, !dbg !8495

if.else464:                                       ; preds = %if.then457
  call void @pedwarn_init(i32 %init_loc, i32 834, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.260, i64 0, i64 0)) #7, !dbg !8496
  br label %if.end465

if.end465:                                        ; preds = %if.else464, %if.then463
  %104 = load i32, i32* @flag_pedantic_errors, align 4, !dbg !8497
  %tobool466 = icmp eq i32 %104, 0, !dbg !8497
  %105 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8499
  %spec.select = select i1 %tobool466, %union.tree_node* %call460, %union.tree_node* %105, !dbg !8500
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end484, !dbg !8501

if.else469:                                       ; preds = %land.lhs.true450, %if.end446
  br i1 %tobool408, label %if.end484, label %land.lhs.true471, !dbg !8502

land.lhs.true471:                                 ; preds = %if.else469
  %type473 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8504
  %106 = load %union.tree_node*, %union.tree_node** %type473, align 8, !dbg !8504
  %call474 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %inside_init.5, %union.tree_node* %106) #6, !dbg !8505
  %tobool475 = icmp eq %union.tree_node* %call474, null, !dbg !8505
  br i1 %tobool475, label %if.then476, label %if.else477, !dbg !8506

if.then476:                                       ; preds = %land.lhs.true471
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.260, i64 0, i64 0)) #7, !dbg !8507
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8509
  call void @llvm.dbg.value(metadata %union.tree_node* %107, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end484, !dbg !8510

if.else477:                                       ; preds = %land.lhs.true471
  %108 = load i8, i8* %maybe_const, align 1, !dbg !8511
  call void @llvm.dbg.value(metadata i8 %108, metadata !8206, metadata !DIExpression()), !dbg !8233
  %tobool480 = icmp eq i8 %108, 0, !dbg !8511
  br i1 %tobool480, label %if.then481, label %if.end484, !dbg !8513

if.then481:                                       ; preds = %if.else477
  call void @pedwarn_init(i32 %init_loc, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.261, i64 0, i64 0)) #7, !dbg !8514
  br label %if.end484, !dbg !8514

if.end484:                                        ; preds = %if.else477, %if.else469, %if.then476, %if.then481, %if.end465
  %inside_init.8 = phi %union.tree_node* [ %spec.select, %if.end465 ], [ %107, %if.then476 ], [ %inside_init.5, %if.else477 ], [ %inside_init.5, %if.else469 ], [ %inside_init.5, %if.then481 ], !dbg !8458
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.8, metadata !8204, metadata !DIExpression()), !dbg !8233
  %type486 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8515
  %109 = bitcast %union.tree_node** %type486 to i64**, !dbg !8515
  %110 = load i64*, i64** %109, align 8, !dbg !8515
  %bf.load488 = load i64, i64* %110, align 8, !dbg !8515
  %bf.cast49029 = and i64 %bf.load488, 65535, !dbg !8517
  %cmp491 = icmp eq i64 %bf.cast49029, 10, !dbg !8517
  br i1 %cmp491, label %if.then493, label %cleanup597, !dbg !8518

if.then493:                                       ; preds = %if.end484
  %call494 = call fastcc %union.tree_node* @convert_for_assignment(i32 %init_loc, %union.tree_node* %type, %union.tree_node* %inside_init.8, %union.tree_node* %origtype, i32 2, i8 zeroext %null_pointer_constant, %union.tree_node* null, %union.tree_node* null, i32 0) #7, !dbg !8519
  call void @llvm.dbg.value(metadata %union.tree_node* %call494, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %cleanup597, !dbg !8520

if.end496:                                        ; preds = %land.lhs.true362, %land.lhs.true320, %if.end318, %land.lhs.true353
  %trunc = trunc i64 %bf.load to i16, !dbg !8521
  switch i16 %trunc, label %if.end581 [
    i16 8, label %if.then520
    i16 9, label %if.then520
    i16 11, label %if.then520
    i16 10, label %if.then520
    i16 6, label %if.then520
    i16 7, label %if.then520
    i16 13, label %if.then520
    i16 14, label %if.then520
  ], !dbg !8521

if.then520:                                       ; preds = %lor.lhs.false334, %lor.lhs.false334, %lor.lhs.false334, %lor.lhs.false334, %lor.lhs.false334, %lor.lhs.false334, %lor.lhs.false342, %lor.lhs.false342, %lor.lhs.false342, %lor.lhs.false342, %lor.lhs.false342, %lor.lhs.false342, %lor.lhs.false350, %lor.lhs.false350, %lor.lhs.false350, %lor.lhs.false350, %lor.lhs.false350, %lor.lhs.false350, %lor.lhs.false350, %if.end496, %if.end496, %if.end496, %if.end496, %if.end496, %if.end496, %if.end496, %if.end496
  %111 = bitcast %union.tree_node** %type4 to i64**, !dbg !8523
  %112 = load i64*, i64** %111, align 8, !dbg !8523
  %bf.load524 = load i64, i64* %112, align 8, !dbg !8523
  %bf.cast52622 = and i64 %bf.load524, 65535, !dbg !8526
  %cmp527 = icmp eq i64 %bf.cast52622, 15, !dbg !8526
  br i1 %cmp527, label %land.lhs.true529, label %if.end545, !dbg !8527

land.lhs.true529:                                 ; preds = %if.then520
  %113 = getelementptr inbounds %union.tree_node, %union.tree_node* %init, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8528
  %bf.load531 = load i64, i64* %113, align 8, !dbg !8528
  %bf.cast53324 = and i64 %bf.load531, 65535, !dbg !8529
  %cmp534 = icmp eq i64 %bf.cast53324, 28, !dbg !8529
  br i1 %cmp534, label %if.then543, label %lor.lhs.false536, !dbg !8530

lor.lhs.false536:                                 ; preds = %land.lhs.true529
  %cmp541 = icmp eq i64 %bf.cast53324, 119, !dbg !8531
  br i1 %cmp541, label %if.then543, label %if.end545, !dbg !8532

if.then543:                                       ; preds = %lor.lhs.false536, %land.lhs.true529
  %call544 = call fastcc %union.tree_node* @array_to_pointer_conversion(i32 %init_loc, %union.tree_node* %init) #7, !dbg !8533
  call void @llvm.dbg.value(metadata %union.tree_node* %call544, metadata !8198, metadata !DIExpression()), !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %call544, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end545, !dbg !8534

if.end545:                                        ; preds = %if.then543, %lor.lhs.false536, %if.then520
  %inside_init.10 = phi %union.tree_node* [ %call544, %if.then543 ], [ %call47, %lor.lhs.false536 ], [ %call47, %if.then520 ], !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.10, metadata !8204, metadata !DIExpression()), !dbg !8233
  %tobool546 = icmp eq %union.tree_node* %semantic_type.0, null, !dbg !8535
  br i1 %tobool546, label %if.end549, label %if.then547, !dbg !8537

if.then547:                                       ; preds = %if.end545
  %call548 = call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %semantic_type.0, %union.tree_node* %inside_init.10) #6, !dbg !8538
  call void @llvm.dbg.value(metadata %union.tree_node* %call548, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %if.end549, !dbg !8539

if.end549:                                        ; preds = %if.end545, %if.then547
  %inside_init.11 = phi %union.tree_node* [ %call548, %if.then547 ], [ %inside_init.10, %if.end545 ], !dbg !8540
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.11, metadata !8204, metadata !DIExpression()), !dbg !8233
  %call550 = call fastcc %union.tree_node* @convert_for_assignment(i32 %init_loc, %union.tree_node* %type, %union.tree_node* %inside_init.11, %union.tree_node* %origtype, i32 2, i8 zeroext %null_pointer_constant, %union.tree_node* null, %union.tree_node* null, i32 0) #7, !dbg !8541
  call void @llvm.dbg.value(metadata %union.tree_node* %call550, metadata !8204, metadata !DIExpression()), !dbg !8233
  %114 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8542
  %cmp551 = icmp eq %union.tree_node* %call550, %114, !dbg !8544
  %cond15 = icmp eq i32 %require_constant, 0, !dbg !8545
  %or.cond16 = or i1 %cmp551, %cond15, !dbg !8547
  br i1 %or.cond16, label %cleanup597, label %land.lhs.true556, !dbg !8547

land.lhs.true556:                                 ; preds = %if.end549
  %115 = getelementptr inbounds %union.tree_node, %union.tree_node* %call550, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8548
  %bf.load558 = load i64, i64* %115, align 8, !dbg !8548
  %bf.cast56123 = and i64 %bf.load558, 131072, !dbg !8548
  %tobool562 = icmp eq i64 %bf.cast56123, 0, !dbg !8548
  br i1 %tobool562, label %if.then563, label %if.else564, !dbg !8549

if.then563:                                       ; preds = %land.lhs.true556
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.260, i64 0, i64 0)) #7, !dbg !8550
  %116 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8552
  call void @llvm.dbg.value(metadata %union.tree_node* %116, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %cleanup597, !dbg !8553

if.else564:                                       ; preds = %land.lhs.true556
  br i1 false, label %if.else564.cleanup597_crit_edge, label %land.lhs.true566, !dbg !8554

if.else564.cleanup597_crit_edge:                  ; preds = %if.else564
  br label %cleanup597, !dbg !8554

land.lhs.true566:                                 ; preds = %if.else564
  %type568 = getelementptr inbounds %union.tree_node, %union.tree_node* %call550, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8556
  %117 = load %union.tree_node*, %union.tree_node** %type568, align 8, !dbg !8556
  %call569 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %call550, %union.tree_node* %117) #6, !dbg !8557
  %tobool570 = icmp eq %union.tree_node* %call569, null, !dbg !8557
  br i1 %tobool570, label %if.then571, label %if.else572, !dbg !8558

if.then571:                                       ; preds = %land.lhs.true566
  call void @error_init(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.262, i64 0, i64 0)) #7, !dbg !8559
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8561
  call void @llvm.dbg.value(metadata %union.tree_node* %118, metadata !8204, metadata !DIExpression()), !dbg !8233
  br label %cleanup597, !dbg !8562

if.else572:                                       ; preds = %land.lhs.true566
  %119 = load i8, i8* %maybe_const, align 1, !dbg !8563
  call void @llvm.dbg.value(metadata i8 %119, metadata !8206, metadata !DIExpression()), !dbg !8233
  %tobool575 = icmp eq i8 %119, 0, !dbg !8563
  br i1 %tobool575, label %if.then576, label %cleanup597, !dbg !8565

if.then576:                                       ; preds = %if.else572
  call void @pedwarn_init(i32 %init_loc, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.261, i64 0, i64 0)) #7, !dbg !8566
  br label %cleanup597, !dbg !8566

if.end581:                                        ; preds = %lor.lhs.false334, %lor.lhs.false342, %lor.lhs.false350, %if.end496
  %120 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8567
  %121 = load %union.tree_node*, %union.tree_node** %120, align 8, !dbg !8567
  %cmp584 = icmp eq %union.tree_node* %121, null, !dbg !8567
  br i1 %cmp584, label %if.end596, label %land.lhs.true586, !dbg !8569

land.lhs.true586:                                 ; preds = %if.end581
  %122 = getelementptr inbounds %union.tree_node, %union.tree_node* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8569
  %bf.load590 = load i64, i64* %122, align 8, !dbg !8570
  %bf.cast59226 = and i64 %bf.load590, 65535, !dbg !8571
  %cmp593 = icmp eq i64 %bf.cast59226, 23, !dbg !8571
  br i1 %cmp593, label %if.end596, label %if.then595, !dbg !8572

if.then595:                                       ; preds = %land.lhs.true586
  call void @error_init(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.263, i64 0, i64 0)) #7, !dbg !8573
  %123 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8575
  br label %cleanup597, !dbg !8576

if.end596:                                        ; preds = %land.lhs.true586, %if.end581
  call void @error_init(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.264, i64 0, i64 0)) #7, !dbg !8577
  %124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8578
  br label %cleanup597, !dbg !8579

cleanup597:                                       ; preds = %if.else572, %if.else564.cleanup597_crit_edge, %land.lhs.true248, %if.end549, %if.then571, %if.then576, %if.then563, %if.end484, %if.then493, %cleanup212, %cleanup309, %if.end596, %if.then595, %if.then445, %if.else399, %if.then
  %retval.4 = phi %union.tree_node* [ %2, %if.then ], [ %retval.1, %cleanup212 ], [ %retval.3, %cleanup309 ], [ %99, %if.then445 ], [ %90, %if.else399 ], [ %123, %if.then595 ], [ %124, %if.end596 ], [ %call47, %land.lhs.true248 ], [ %call494, %if.then493 ], [ %inside_init.8, %if.end484 ], [ %call550, %if.end549 ], [ %116, %if.then563 ], [ %118, %if.then571 ], [ %call550, %if.else572 ], [ undef, %if.else564.cleanup597_crit_edge ], [ %call550, %if.then576 ], !dbg !8233
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !8206, metadata !DIExpression(DW_OP_deref)), !dbg !8233
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %maybe_const) #8, !dbg !8580
  ret %union.tree_node* %retval.4, !dbg !8580
}

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_warn_cast_qual(%union.tree_node* %type, %union.tree_node* %otype) unnamed_addr #5 !dbg !8581 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8585, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %otype, metadata !8586, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8587, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %otype, metadata !8588, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 0, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 0, metadata !8590, metadata !DIExpression()), !dbg !8592
  br label %do.body, !dbg !8593

do.body:                                          ; preds = %do.cond, %entry
  %discarded.0 = phi i32 [ 0, %entry ], [ %discarded.1, %do.cond ], !dbg !8594
  %added.0 = phi i32 [ 0, %entry ], [ %added.1, %do.cond ], !dbg !8592
  %in_otype.0 = phi %union.tree_node* [ %otype, %entry ], [ %0, %do.cond ], !dbg !8592
  %in_type.0 = phi %union.tree_node* [ %type, %entry ], [ %1, %do.cond ], !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %in_type.0, metadata !8587, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %in_otype.0, metadata !8588, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %added.0, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %discarded.0, metadata !8590, metadata !DIExpression()), !dbg !8592
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %in_otype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8595
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !8595
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8588, metadata !DIExpression()), !dbg !8592
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %in_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8597
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !8597
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8587, metadata !DIExpression()), !dbg !8592
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8598
  %bf.load = load i64, i64* %2, align 8, !dbg !8598
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8600
  %cmp = icmp eq i64 %bf.cast2, 20, !dbg !8600
  br i1 %cmp, label %land.lhs.true, label %do.body.if.else_crit_edge, !dbg !8601

do.body.if.else_crit_edge:                        ; preds = %do.body
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8602
  %bf.load67.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !8603
  br label %if.else, !dbg !8601

land.lhs.true:                                    ; preds = %do.body
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8604
  %bf.load5 = load i64, i64* %3, align 8, !dbg !8604
  %bf.cast715 = and i64 %bf.load5, 65535, !dbg !8605
  %cmp8 = icmp eq i64 %bf.cast715, 20, !dbg !8605
  br i1 %cmp8, label %if.then, label %if.else, !dbg !8606

if.then:                                          ; preds = %land.lhs.true
  %bf.lshr = lshr i64 %bf.load5, 20, !dbg !8607
  %4 = trunc i64 %bf.lshr to i32, !dbg !8607
  %bf.cast12 = and i32 %4, 1, !dbg !8607
  %5 = lshr i64 %bf.load5, 18, !dbg !8607
  %6 = trunc i64 %5 to i32, !dbg !8607
  %mul18 = and i32 %6, 2, !dbg !8607
  %or = or i32 %bf.cast12, %mul18, !dbg !8607
  %type19 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !8607
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i64 0, i32 6, !dbg !8607
  %bf.load20 = load i32, i32* %restrict_flag, align 4, !dbg !8607
  %7 = lshr i32 %bf.load20, 11, !dbg !8607
  %mul23 = and i32 %7, 4, !dbg !8607
  %or24 = or i32 %or, %mul23, !dbg !8607
  %bf.lshr27 = lshr i64 %bf.load, 20, !dbg !8608
  %8 = trunc i64 %bf.lshr27 to i32, !dbg !8608
  %bf.cast29 = and i32 %8, 1, !dbg !8608
  %9 = lshr i64 %bf.load, 18, !dbg !8608
  %10 = trunc i64 %9 to i32, !dbg !8608
  %mul36 = and i32 %10, 2, !dbg !8608
  %or37 = or i32 %bf.cast29, %mul36, !dbg !8608
  %type38 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !8608
  %restrict_flag39 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type38, i64 0, i32 6, !dbg !8608
  %bf.load40 = load i32, i32* %restrict_flag39, align 4, !dbg !8608
  %11 = lshr i32 %bf.load40, 11, !dbg !8608
  %mul43 = and i32 %11, 4, !dbg !8608
  %or44 = or i32 %or37, %mul43, !dbg !8608
  %neg = xor i32 %or44, -1, !dbg !8609
  %and = and i32 %or24, %neg, !dbg !8610
  %or45 = or i32 %added.0, %and, !dbg !8611
  call void @llvm.dbg.value(metadata i32 %or45, metadata !8589, metadata !DIExpression()), !dbg !8592
  br label %do.cond, !dbg !8612

if.else:                                          ; preds = %do.body.if.else_crit_edge, %land.lhs.true
  %bf.load67 = phi i64 [ %bf.load67.pre, %do.body.if.else_crit_edge ], [ %bf.load5, %land.lhs.true ], !dbg !8603
  %bf.lshr48 = lshr i64 %bf.load, 20, !dbg !8613
  %12 = trunc i64 %bf.lshr48 to i32, !dbg !8613
  %bf.cast50 = and i32 %12, 1, !dbg !8613
  %13 = lshr i64 %bf.load, 18, !dbg !8613
  %14 = trunc i64 %13 to i32, !dbg !8613
  %mul57 = and i32 %14, 2, !dbg !8613
  %or58 = or i32 %bf.cast50, %mul57, !dbg !8613
  %type59 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !8613
  %restrict_flag60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i64 0, i32 6, !dbg !8613
  %bf.load61 = load i32, i32* %restrict_flag60, align 4, !dbg !8613
  %15 = lshr i32 %bf.load61, 11, !dbg !8613
  %mul64 = and i32 %15, 4, !dbg !8613
  %or65 = or i32 %or58, %mul64, !dbg !8613
  %bf.lshr68 = lshr i64 %bf.load67, 20, !dbg !8603
  %16 = trunc i64 %bf.lshr68 to i32, !dbg !8603
  %bf.cast70 = and i32 %16, 1, !dbg !8603
  %17 = lshr i64 %bf.load67, 18, !dbg !8603
  %18 = trunc i64 %17 to i32, !dbg !8603
  %mul77 = and i32 %18, 2, !dbg !8603
  %or78 = or i32 %bf.cast70, %mul77, !dbg !8603
  %type79 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !8603
  %restrict_flag80 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type79, i64 0, i32 6, !dbg !8603
  %bf.load81 = load i32, i32* %restrict_flag80, align 4, !dbg !8603
  %19 = lshr i32 %bf.load81, 11, !dbg !8603
  %mul84 = and i32 %19, 4, !dbg !8603
  %or85 = or i32 %or78, %mul84, !dbg !8603
  %neg86 = xor i32 %or85, -1, !dbg !8614
  %and87 = and i32 %or65, %neg86, !dbg !8615
  %or88 = or i32 %discarded.0, %and87, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %or88, metadata !8590, metadata !DIExpression()), !dbg !8592
  br label %do.cond

do.cond:                                          ; preds = %if.then, %if.else
  %bf.load90 = phi i64 [ %bf.load5, %if.then ], [ %bf.load67, %if.else ], !dbg !8617
  %discarded.1 = phi i32 [ %discarded.0, %if.then ], [ %or88, %if.else ], !dbg !8592
  %added.1 = phi i32 [ %or45, %if.then ], [ %added.0, %if.else ], !dbg !8592
  call void @llvm.dbg.value(metadata i32 %added.1, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %discarded.1, metadata !8590, metadata !DIExpression()), !dbg !8592
  %bf.cast925 = and i64 %bf.load90, 65535, !dbg !8618
  %cmp93 = icmp eq i64 %bf.cast925, 10, !dbg !8618
  %cmp98 = icmp eq i64 %bf.cast2, 10, !dbg !8619
  %or.cond = and i1 %cmp93, %cmp98, !dbg !8620
  br i1 %or.cond, label %do.body, label %do.end, !dbg !8620, !llvm.loop !8621

do.end:                                           ; preds = %do.cond
  %discarded.1.lcssa = phi i32 [ %discarded.1, %do.cond ], !dbg !8592
  %added.1.lcssa = phi i32 [ %added.1, %do.cond ], !dbg !8592
  %.lcssa22 = phi %union.tree_node* [ %0, %do.cond ], !dbg !8595
  %.lcssa = phi %union.tree_node* [ %1, %do.cond ], !dbg !8597
  call void @llvm.dbg.value(metadata i32 %discarded.1.lcssa, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %added.1.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %discarded.1.lcssa, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %added.1.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %discarded.1.lcssa, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %discarded.1.lcssa, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %added.1.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %added.1.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8592
  %tobool = icmp eq i32 %added.1.lcssa, 0, !dbg !8623
  br i1 %tobool, label %if.end100, label %if.then99, !dbg !8625

if.then99:                                        ; preds = %do.end
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 52, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.201, i64 0, i64 0)) #6, !dbg !8626
  br label %if.end100, !dbg !8626

if.end100:                                        ; preds = %do.end, %if.then99
  %tobool101 = icmp eq i32 %discarded.1.lcssa, 0, !dbg !8627
  br i1 %tobool101, label %if.end104, label %if.then102, !dbg !8629

if.then102:                                       ; preds = %if.end100
  %call103 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 52, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.202, i64 0, i64 0)) #6, !dbg !8630
  br label %if.end104, !dbg !8630

if.end104:                                        ; preds = %if.end100, %if.then102
  %20 = or i32 %added.1.lcssa, %discarded.1.lcssa, !dbg !8631
  %21 = icmp eq i32 %20, 0, !dbg !8631
  br i1 %21, label %if.end108, label %cleanup.cont, !dbg !8631

if.end108:                                        ; preds = %if.end104
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8633
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !8633
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa22, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8635
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !8635
  %cmp112 = icmp eq %union.tree_node* %23, %25, !dbg !8636
  br i1 %cmp112, label %if.end114, label %cleanup.cont, !dbg !8637

if.end114:                                        ; preds = %if.end108
  %type116 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8638
  %26 = bitcast %union.tree_node** %type116 to i64**, !dbg !8638
  %27 = load i64*, i64** %26, align 8, !dbg !8638
  %bf.load118 = load i64, i64* %27, align 8, !dbg !8638
  %bf.cast1206 = and i64 %bf.load118, 65535, !dbg !8640
  %cmp121 = icmp eq i64 %bf.cast1206, 10, !dbg !8640
  br i1 %cmp121, label %if.end123, label %cleanup.cont, !dbg !8641

if.end123:                                        ; preds = %if.end114
  %28 = bitcast i64* %27 to %union.tree_node*, !dbg !8641
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8587, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %otype, metadata !8588, metadata !DIExpression()), !dbg !8592
  %bf.lshr128 = lshr i64 %bf.load118, 20, !dbg !8642
  %29 = trunc i64 %bf.lshr128 to i8, !dbg !8642
  %bf.cast130 = and i8 %29, 1, !dbg !8642
  call void @llvm.dbg.value(metadata i8 %bf.cast130, metadata !8591, metadata !DIExpression()), !dbg !8592
  br label %do.body131, !dbg !8643

do.body131:                                       ; preds = %do.cond207.do.body131_crit_edge, %if.end123
  %30 = phi %union.tree_node* [ %28, %if.end123 ], [ %.pre, %do.cond207.do.body131_crit_edge ], !dbg !8644
  %in_otype.1 = phi %union.tree_node* [ %otype, %if.end123 ], [ %31, %do.cond207.do.body131_crit_edge ], !dbg !8592
  %is_const.0 = phi i8 [ %bf.cast130, %if.end123 ], [ %is_const.1, %do.cond207.do.body131_crit_edge ], !dbg !8592
  call void @llvm.dbg.value(metadata i8 %is_const.0, metadata !8591, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %in_otype.1, metadata !8588, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !8587, metadata !DIExpression()), !dbg !8592
  %type135 = getelementptr inbounds %union.tree_node, %union.tree_node* %in_otype.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8646
  %31 = load %union.tree_node*, %union.tree_node** %type135, align 8, !dbg !8646
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !8588, metadata !DIExpression()), !dbg !8592
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8647
  %bf.load137 = load i64, i64* %32, align 8, !dbg !8647
  %bf.lshr138 = lshr i64 %bf.load137, 20, !dbg !8647
  %33 = trunc i64 %bf.lshr138 to i32, !dbg !8647
  %bf.cast140 = and i32 %33, 1, !dbg !8647
  %34 = lshr i64 %bf.load137, 18, !dbg !8647
  %35 = trunc i64 %34 to i32, !dbg !8647
  %mul147 = and i32 %35, 2, !dbg !8647
  %or148 = or i32 %bf.cast140, %mul147, !dbg !8647
  %type149 = bitcast %union.tree_node* %30 to %struct.tree_type*, !dbg !8647
  %restrict_flag150 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type149, i64 0, i32 6, !dbg !8647
  %bf.load151 = load i32, i32* %restrict_flag150, align 4, !dbg !8647
  %36 = lshr i32 %bf.load151, 11, !dbg !8647
  %mul154 = and i32 %36, 4, !dbg !8647
  %or155 = or i32 %or148, %mul154, !dbg !8647
  %37 = lshr i64 %bf.load137, 48, !dbg !8647
  %38 = trunc i64 %37 to i32, !dbg !8647
  %shl = and i32 %38, 65280, !dbg !8647
  %or161 = or i32 %or155, %shl, !dbg !8647
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8649
  %bf.load163 = load i64, i64* %39, align 8, !dbg !8649
  %bf.lshr164 = lshr i64 %bf.load163, 20, !dbg !8649
  %40 = trunc i64 %bf.lshr164 to i32, !dbg !8649
  %bf.cast166 = and i32 %40, 1, !dbg !8649
  %41 = lshr i64 %bf.load163, 18, !dbg !8649
  %42 = trunc i64 %41 to i32, !dbg !8649
  %mul173 = and i32 %42, 2, !dbg !8649
  %or174 = or i32 %bf.cast166, %mul173, !dbg !8649
  %type175 = bitcast %union.tree_node* %31 to %struct.tree_type*, !dbg !8649
  %restrict_flag176 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type175, i64 0, i32 6, !dbg !8649
  %bf.load177 = load i32, i32* %restrict_flag176, align 4, !dbg !8649
  %43 = lshr i32 %bf.load177, 11, !dbg !8649
  %mul180 = and i32 %43, 4, !dbg !8649
  %or181 = or i32 %or174, %mul180, !dbg !8649
  %44 = lshr i64 %bf.load163, 48, !dbg !8649
  %45 = trunc i64 %44 to i32, !dbg !8649
  %shl187 = and i32 %45, 65280, !dbg !8649
  %or188 = or i32 %or181, %shl187, !dbg !8649
  %neg189 = xor i32 %or188, -1, !dbg !8650
  %and190 = and i32 %or161, %neg189, !dbg !8651
  %cmp191 = icmp eq i32 %and190, 0, !dbg !8652
  %tobool194 = icmp ne i8 %is_const.0, 0, !dbg !8653
  %or.cond1 = or i1 %cmp191, %tobool194, !dbg !8654
  br i1 %or.cond1, label %if.end197, label %if.then195, !dbg !8654

if.then195:                                       ; preds = %do.body131
  %call196 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 52, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.203, i64 0, i64 0)) #6, !dbg !8655
  br label %cleanup.cont, !dbg !8657

if.end197:                                        ; preds = %do.body131
  %tobool198 = icmp eq i8 %is_const.0, 0, !dbg !8658
  br i1 %tobool198, label %do.cond207, label %if.then199, !dbg !8660

if.then199:                                       ; preds = %if.end197
  %46 = trunc i64 %bf.lshr138 to i8, !dbg !8661
  %bf.cast204 = and i8 %46, 1, !dbg !8661
  call void @llvm.dbg.value(metadata i8 %bf.cast204, metadata !8591, metadata !DIExpression()), !dbg !8592
  br label %do.cond207, !dbg !8662

do.cond207:                                       ; preds = %if.end197, %if.then199
  %is_const.1 = phi i8 [ %bf.cast204, %if.then199 ], [ 0, %if.end197 ], !dbg !8592
  call void @llvm.dbg.value(metadata i8 %is_const.1, metadata !8591, metadata !DIExpression()), !dbg !8592
  %bf.cast21113 = and i64 %bf.load137, 65535, !dbg !8663
  %cmp212 = icmp eq i64 %bf.cast21113, 10, !dbg !8663
  br i1 %cmp212, label %do.cond207.do.body131_crit_edge, label %cleanup.cont.loopexit, !dbg !8664, !llvm.loop !8665

do.cond207.do.body131_crit_edge:                  ; preds = %do.cond207
  %type133.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8667
  %.pre = load %union.tree_node*, %union.tree_node** %type133.phi.trans.insert, align 8, !dbg !8644
  br label %do.body131, !dbg !8664

cleanup.cont.loopexit:                            ; preds = %do.cond207
  br label %cleanup.cont, !dbg !8668

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end114, %if.end108, %if.end104, %if.then195
  ret void, !dbg !8668
}

declare dso_local i8* @c_addr_space_name(i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_wide(%union.tree_node*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_cast_expr(i32 %loc, %struct.c_type_name* %type_name, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !8669 {
entry:
  %type_expr = alloca %union.tree_node*, align 8
  %type_expr_const = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8673, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata %struct.c_type_name* %type_name, metadata !8674, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !8675, metadata !DIExpression()), !dbg !8681
  %0 = bitcast %union.tree_node** %type_expr to i8*, !dbg !8682
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8682
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8677, metadata !DIExpression()), !dbg !8681
  store %union.tree_node* null, %union.tree_node** %type_expr, align 8, !dbg !8683
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !8678, metadata !DIExpression(DW_OP_deref)), !dbg !8681
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %type_expr_const) #8, !dbg !8684
  call void @llvm.dbg.value(metadata i8 1, metadata !8678, metadata !DIExpression()), !dbg !8681
  store i8 1, i8* %type_expr_const, align 1, !dbg !8685
  %1 = load i32, i32* @warn_strict_prototypes, align 4, !dbg !8686
  call void @llvm.dbg.value(metadata i32 %1, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8687
  %bf.load = load i64, i64* %2, align 8, !dbg !8687
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8689
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !8689
  br i1 %cmp, label %if.then, label %if.end, !dbg !8690

if.then:                                          ; preds = %entry
  store i32 0, i32* @warn_strict_prototypes, align 4, !dbg !8691
  br label %if.end, !dbg !8692

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.value(metadata %union.tree_node** %type_expr, metadata !8677, metadata !DIExpression(DW_OP_deref)), !dbg !8681
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !8678, metadata !DIExpression(DW_OP_deref)), !dbg !8681
  %call = call %union.tree_node* @groktypename(%struct.c_type_name* %type_name, %union.tree_node** nonnull %type_expr, i8* nonnull %type_expr_const) #6, !dbg !8693
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8676, metadata !DIExpression()), !dbg !8681
  store i32 %1, i32* @warn_strict_prototypes, align 4, !dbg !8694
  %call1 = call %union.tree_node* @build_c_cast(i32 %loc, %union.tree_node* %call, %union.tree_node* %expr) #7, !dbg !8695
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8679, metadata !DIExpression()), !dbg !8681
  %3 = load %union.tree_node*, %union.tree_node** %type_expr, align 8, !dbg !8696
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8677, metadata !DIExpression()), !dbg !8681
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !8696
  br i1 %tobool, label %if.end9, label %if.then2, !dbg !8698

if.then2:                                         ; preds = %if.end
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8699
  %4 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !8699
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8677, metadata !DIExpression()), !dbg !8681
  %call4 = call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %4, %union.tree_node* nonnull %3, %union.tree_node* %call1) #6, !dbg !8699
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !8679, metadata !DIExpression()), !dbg !8681
  %5 = load i8, i8* %type_expr_const, align 1, !dbg !8701
  call void @llvm.dbg.value(metadata i8 %5, metadata !8678, metadata !DIExpression()), !dbg !8681
  %tobool5 = icmp eq i8 %5, 0, !dbg !8702
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8703
  %7 = zext i1 %tobool5 to i64, !dbg !8704
  %bf.load7 = load i64, i64* %6, align 8, !dbg !8704
  %bf.shl = shl nuw nsw i64 %7, 34, !dbg !8704
  %bf.clear8 = and i64 %bf.load7, -17179869185, !dbg !8704
  %bf.set = or i64 %bf.clear8, %bf.shl, !dbg !8704
  store i64 %bf.set, i64* %6, align 8, !dbg !8704
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8705
  store i32 %loc, i32* %8, align 8, !dbg !8705
  br label %if.end9, !dbg !8706

if.end9:                                          ; preds = %if.end, %if.then2
  %ret.0 = phi %union.tree_node* [ %call4, %if.then2 ], [ %call1, %if.end ], !dbg !8681
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !8679, metadata !DIExpression()), !dbg !8681
  %tobool10 = icmp eq %union.tree_node* %ret.0, null, !dbg !8707
  br i1 %tobool10, label %if.end46, label %land.lhs.true, !dbg !8707

land.lhs.true:                                    ; preds = %if.end9
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8707
  %bf.load12 = load i64, i64* %9, align 8, !dbg !8707
  %bf.cast14 = and i64 %bf.load12, 65535, !dbg !8707
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast14, !dbg !8707
  %10 = load i32, i32* %arrayidx, align 4, !dbg !8707
  %cmp15 = icmp ugt i32 %10, 3, !dbg !8707
  br i1 %cmp15, label %land.lhs.true16, label %if.end46, !dbg !8707

land.lhs.true16:                                  ; preds = %land.lhs.true
  %cmp23 = icmp ult i32 %10, 11, !dbg !8707
  br i1 %cmp23, label %land.lhs.true24, label %if.end46, !dbg !8709

land.lhs.true24:                                  ; preds = %land.lhs.true16
  br i1 true, label %land.lhs.true32, label %land.lhs.true24.cond.end_crit_edge, !dbg !8710

land.lhs.true24.cond.end_crit_edge:               ; preds = %land.lhs.true24
  br label %cond.end, !dbg !8710

land.lhs.true32:                                  ; preds = %land.lhs.true24
  br i1 true, label %cond.true, label %land.lhs.true32.cond.end_crit_edge, !dbg !8710

land.lhs.true32.cond.end_crit_edge:               ; preds = %land.lhs.true32
  br label %cond.end, !dbg !8710

cond.true:                                        ; preds = %land.lhs.true32
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8710
  %12 = load i32, i32* %11, align 8, !dbg !8710
  %phitmp = icmp ne i32 %12, 0, !dbg !8710
  br label %cond.end, !dbg !8710

cond.end:                                         ; preds = %land.lhs.true32.cond.end_crit_edge, %land.lhs.true24.cond.end_crit_edge, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ undef, %land.lhs.true32.cond.end_crit_edge ], [ undef, %land.lhs.true24.cond.end_crit_edge ]
  br i1 %cond, label %if.end46, label %if.then43, !dbg !8711

if.then43:                                        ; preds = %cond.end
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8712
  store i32 %loc, i32* %13, align 8, !dbg !8712
  br label %if.end46, !dbg !8712

if.end46:                                         ; preds = %if.end9, %if.then43, %cond.end, %land.lhs.true16, %land.lhs.true
  %14 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8713
  %tobool47 = icmp eq i32 %14, 0, !dbg !8713
  br i1 %tobool47, label %if.end55, label %land.lhs.true48, !dbg !8715

land.lhs.true48:                                  ; preds = %if.end46
  %specs = getelementptr inbounds %struct.c_type_name, %struct.c_type_name* %type_name, i64 0, i32 0, !dbg !8716
  %15 = load %struct.c_declspecs*, %struct.c_declspecs** %specs, align 8, !dbg !8716
  %tag_defined_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %15, i64 0, i32 6, !dbg !8717
  %bf.load49 = load i8, i8* %tag_defined_p, align 8, !dbg !8717
  %bf.clear50 = and i8 %bf.load49, 32, !dbg !8717
  %tobool52 = icmp eq i8 %bf.clear50, 0, !dbg !8718
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !8719

if.then53:                                        ; preds = %land.lhs.true48
  %call54 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !8720
  br label %if.end55, !dbg !8720

if.end55:                                         ; preds = %land.lhs.true48, %if.end46, %if.then53
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !8678, metadata !DIExpression(DW_OP_deref)), !dbg !8681
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %type_expr_const) #8, !dbg !8721
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8721
  ret %union.tree_node* %ret.0, !dbg !8722
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_modify_expr(i32 %location, %union.tree_node* %lhs, %union.tree_node* %lhs_origtype, i32 %modifycode, i32 %rhs_loc, %union.tree_node* %rhs, %union.tree_node* %rhs_origtype) local_unnamed_addr #5 !dbg !8723 {
entry:
  call void @llvm.dbg.value(metadata i32 %location, metadata !8727, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !8728, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs_origtype, metadata !8729, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i32 %modifycode, metadata !8730, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i32 %rhs_loc, metadata !8731, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !8732, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs_origtype, metadata !8733, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8736, metadata !DIExpression()), !dbg !8746
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8747
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8747
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8737, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8738, metadata !DIExpression()), !dbg !8746
  %call = tail call %union.tree_node* @require_complete_type(%union.tree_node* %lhs) #7, !dbg !8748
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8728, metadata !DIExpression()), !dbg !8746
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8749
  %bf.load = load i64, i64* %1, align 8, !dbg !8749
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !8751
  %cmp = icmp eq i64 %bf.cast3, 0, !dbg !8751
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8752

lor.lhs.false:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8753
  %bf.load2 = load i64, i64* %2, align 8, !dbg !8753
  %bf.cast44 = and i64 %bf.load2, 65535, !dbg !8754
  %cmp5 = icmp eq i64 %bf.cast44, 0, !dbg !8754
  br i1 %cmp5, label %if.then, label %if.end, !dbg !8755

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8756
  br label %cleanup191, !dbg !8757

if.end:                                           ; preds = %lor.lhs.false
  %call6 = tail call fastcc i32 @lvalue_or_else(%union.tree_node* %call, i32 0) #7, !dbg !8758
  %tobool = icmp eq i32 %call6, 0, !dbg !8758
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !8760

if.then7:                                         ; preds = %if.end
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8761
  br label %cleanup191, !dbg !8762

if.end8:                                          ; preds = %if.end
  %bf.load10 = load i64, i64* %2, align 8, !dbg !8763
  %bf.cast125 = and i64 %bf.load10, 65535, !dbg !8765
  %cmp13 = icmp eq i64 %bf.cast125, 190, !dbg !8765
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !8766

if.then14:                                        ; preds = %if.end8
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8767
  %5 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !8767
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8736, metadata !DIExpression()), !dbg !8746
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8769
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !8769
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !8732, metadata !DIExpression()), !dbg !8746
  br label %if.end17, !dbg !8770

if.end17:                                         ; preds = %if.then14, %if.end8
  %rhs.addr.0 = phi %union.tree_node* [ %6, %if.then14 ], [ %rhs, %if.end8 ]
  %rhs_semantic_type.0 = phi %union.tree_node* [ %5, %if.then14 ], [ null, %if.end8 ], !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs_semantic_type.0, metadata !8736, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0, metadata !8732, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0, metadata !8735, metadata !DIExpression()), !dbg !8746
  %bf.load19 = load i64, i64* %1, align 8, !dbg !8771
  %bf.cast216 = and i64 %bf.load19, 65535, !dbg !8772
  %cmp22 = icmp eq i64 %bf.cast216, 189, !dbg !8772
  br i1 %cmp22, label %if.then23, label %if.end45, !dbg !8773

if.then23:                                        ; preds = %if.end17
  %operands25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8774
  %arrayidx26 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands25, i64 1, !dbg !8774
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8, !dbg !8774
  %call27 = tail call %union.tree_node* @build_modify_expr(i32 %location, %union.tree_node* %7, %union.tree_node* %lhs_origtype, i32 %modifycode, i32 %rhs_loc, %union.tree_node* %rhs.addr.0, %union.tree_node* %rhs_origtype) #7, !dbg !8775
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !8740, metadata !DIExpression()), !dbg !8776
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8777
  %cmp28 = icmp eq %union.tree_node* %call27, %8, !dbg !8779
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !8780

if.then29:                                        ; preds = %if.then23
  br label %cleanup191, !dbg !8781

if.end30:                                         ; preds = %if.then23
  %type32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8782
  %9 = load %union.tree_node*, %union.tree_node** %type32, align 8, !dbg !8782
  %10 = load %union.tree_node*, %union.tree_node** %operands25, align 8, !dbg !8782
  %call36 = tail call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %9, %union.tree_node* %10, %union.tree_node* %call27) #6, !dbg !8782
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !8734, metadata !DIExpression()), !dbg !8746
  %bf.load38 = load i64, i64* %1, align 8, !dbg !8783
  %bf.cast4019 = and i64 %bf.load38, 8589934592, !dbg !8783
  %tobool41 = icmp eq i64 %bf.cast4019, 0, !dbg !8783
  br i1 %tobool41, label %cond.end, label %cond.true, !dbg !8783

cond.true:                                        ; preds = %if.end30
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 4730, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8783
  br label %cond.end, !dbg !8783

cond.end:                                         ; preds = %if.end30, %cond.true
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8784
  %bf.load43 = load i64, i64* %11, align 8, !dbg !8785
  %bf.set = or i64 %bf.load43, 17179869184, !dbg !8785
  store i64 %bf.set, i64* %11, align 8, !dbg !8785
  tail call void @protected_set_expr_location(%union.tree_node* %call36, i32 %location) #6, !dbg !8786
  br label %cleanup191, !dbg !8787

if.end45:                                         ; preds = %if.end17
  %cmp46 = icmp eq i32 %modifycode, 116, !dbg !8788
  br i1 %cmp46, label %if.end51, label %if.then47, !dbg !8790

if.then47:                                        ; preds = %if.end45
  %call48 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %call, i8 zeroext 0, i8* null) #6, !dbg !8791
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !8728, metadata !DIExpression()), !dbg !8746
  %call49 = tail call %union.tree_node* @stabilize_reference(%union.tree_node* %call48) #6, !dbg !8793
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !8728, metadata !DIExpression()), !dbg !8746
  %call50 = tail call %union.tree_node* @build_binary_op(i32 %location, i32 %modifycode, %union.tree_node* %call49, %union.tree_node* %rhs.addr.0, i32 1) #7, !dbg !8794
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !8735, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8733, metadata !DIExpression()), !dbg !8746
  br label %if.end51, !dbg !8795

if.end51:                                         ; preds = %if.end45, %if.then47
  %rhs_origtype.addr.0 = phi %union.tree_node* [ null, %if.then47 ], [ %rhs_origtype, %if.end45 ]
  %newrhs.0 = phi %union.tree_node* [ %call50, %if.then47 ], [ %rhs.addr.0, %if.end45 ], !dbg !8746
  %lhs.addr.0 = phi %union.tree_node* [ %call49, %if.then47 ], [ %call, %if.end45 ], !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.addr.0, metadata !8728, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %newrhs.0, metadata !8735, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs_origtype.addr.0, metadata !8733, metadata !DIExpression()), !dbg !8746
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8796
  %bf.load53 = load i64, i64* %12, align 8, !dbg !8796
  %bf.cast567 = and i64 %bf.load53, 1048576, !dbg !8796
  %tobool57 = icmp eq i64 %bf.cast567, 0, !dbg !8796
  br i1 %tobool57, label %lor.lhs.false58, label %if.then76, !dbg !8798

lor.lhs.false58:                                  ; preds = %if.end51
  %bf.cast628 = and i64 %bf.load53, 65535, !dbg !8799
  %cmp63 = icmp eq i64 %bf.cast628, 16, !dbg !8799
  br i1 %cmp63, label %land.lhs.true, label %lor.lhs.false64, !dbg !8800

lor.lhs.false64:                                  ; preds = %lor.lhs.false58
  %cmp69 = icmp eq i64 %bf.cast628, 17, !dbg !8801
  br i1 %cmp69, label %land.lhs.true, label %if.else, !dbg !8802

land.lhs.true:                                    ; preds = %lor.lhs.false64, %lor.lhs.false58
  %bf.cast7418 = and i64 %bf.load53, 17179869184, !dbg !8803
  %tobool75 = icmp eq i64 %bf.cast7418, 0, !dbg !8803
  br i1 %tobool75, label %if.else, label %if.then76, !dbg !8804

if.then76:                                        ; preds = %land.lhs.true, %if.end51
  tail call fastcc void @readonly_error(%union.tree_node* %lhs.addr.0, i32 0) #7, !dbg !8805
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8807
  br label %cleanup191, !dbg !8808

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false64
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8809
  %bf.load78 = load i64, i64* %14, align 8, !dbg !8809
  %bf.cast8110 = and i64 %bf.load78, 1048576, !dbg !8809
  %tobool82 = icmp eq i64 %bf.cast8110, 0, !dbg !8809
  br i1 %tobool82, label %if.end85, label %if.then83, !dbg !8811

if.then83:                                        ; preds = %if.else
  tail call fastcc void @readonly_warning(%union.tree_node* %lhs.addr.0, i32 0) #7, !dbg !8812
  %bf.load87.pre = load i64, i64* %14, align 8, !dbg !8813
  br label %if.end85, !dbg !8812

if.end85:                                         ; preds = %if.else, %if.then83
  %bf.load87 = phi i64 [ %bf.load78, %if.else ], [ %bf.load87.pre, %if.then83 ], !dbg !8813
  %bf.cast8911 = and i64 %bf.load87, 65535, !dbg !8815
  %cmp90 = icmp eq i64 %bf.cast8911, 41, !dbg !8815
  br i1 %cmp90, label %land.lhs.true91, label %if.end119, !dbg !8816

land.lhs.true91:                                  ; preds = %if.end85
  %bf.load93 = load i64, i64* %12, align 8, !dbg !8817
  %bf.cast9514 = and i64 %bf.load93, 65535, !dbg !8818
  %cmp96 = icmp eq i64 %bf.cast9514, 8, !dbg !8818
  br i1 %cmp96, label %if.then115, label %lor.lhs.false97, !dbg !8819

lor.lhs.false97:                                  ; preds = %land.lhs.true91
  %cmp102 = icmp eq i64 %bf.cast9514, 7, !dbg !8820
  br i1 %cmp102, label %if.then115, label %lor.lhs.false103, !dbg !8821

lor.lhs.false103:                                 ; preds = %lor.lhs.false97
  %cmp108 = icmp eq i64 %bf.cast9514, 9, !dbg !8822
  br i1 %cmp108, label %if.then115, label %lor.lhs.false109, !dbg !8823

lor.lhs.false109:                                 ; preds = %lor.lhs.false103
  %cmp114 = icmp eq i64 %bf.cast9514, 6, !dbg !8824
  br i1 %cmp114, label %if.then115, label %if.end119, !dbg !8825

if.then115:                                       ; preds = %lor.lhs.false109, %lor.lhs.false103, %lor.lhs.false97, %land.lhs.true91
  %call116 = tail call %union.tree_node* @get_unwidened(%union.tree_node* %lhs.addr.0, %union.tree_node* null) #6, !dbg !8826
  %type118 = getelementptr inbounds %union.tree_node, %union.tree_node* %call116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8826
  %15 = load %union.tree_node*, %union.tree_node** %type118, align 8, !dbg !8826
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !8737, metadata !DIExpression()), !dbg !8746
  br label %if.end119, !dbg !8827

if.end119:                                        ; preds = %if.then115, %lor.lhs.false109, %if.end85
  %lhstype.0 = phi %union.tree_node* [ %15, %if.then115 ], [ %0, %lor.lhs.false109 ], [ %0, %if.end85 ], !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %lhstype.0, metadata !8737, metadata !DIExpression()), !dbg !8746
  %type121 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8828
  %16 = load %union.tree_node*, %union.tree_node** %type121, align 8, !dbg !8828
  %cmp122 = icmp eq %union.tree_node* %lhstype.0, %16, !dbg !8830
  br i1 %cmp122, label %if.end127, label %if.then123, !dbg !8831

if.then123:                                       ; preds = %if.end119
  %call124 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %lhs.addr.0) #6, !dbg !8832
  call void @llvm.dbg.value(metadata %union.tree_node* %call124, metadata !8728, metadata !DIExpression()), !dbg !8746
  %type126 = getelementptr inbounds %union.tree_node, %union.tree_node* %call124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8834
  store %union.tree_node* %lhstype.0, %union.tree_node** %type126, align 8, !dbg !8835
  br label %if.end127, !dbg !8836

if.end127:                                        ; preds = %if.end119, %if.then123
  %lhs.addr.1 = phi %union.tree_node* [ %call124, %if.then123 ], [ %lhs.addr.0, %if.end119 ], !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.addr.1, metadata !8728, metadata !DIExpression()), !dbg !8746
  %17 = load i32, i32* @warn_cxx_compat, align 4, !dbg !8837
  %tobool128 = icmp ne i32 %17, 0, !dbg !8837
  %cmp130 = icmp ne %union.tree_node* %lhs_origtype, null, !dbg !8838
  %or.cond = and i1 %tobool128, %cmp130, !dbg !8839
  %cmp132 = icmp ne %union.tree_node* %lhstype.0, %lhs_origtype, !dbg !8840
  %or.cond1 = and i1 %or.cond, %cmp132, !dbg !8839
  br i1 %or.cond1, label %land.lhs.true133, label %if.end156, !dbg !8839

land.lhs.true133:                                 ; preds = %if.end127
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs_origtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8841
  %bf.load135 = load i64, i64* %18, align 8, !dbg !8841
  %bf.cast13713 = and i64 %bf.load135, 65535, !dbg !8842
  %cmp138 = icmp eq i64 %bf.cast13713, 6, !dbg !8842
  br i1 %cmp138, label %if.then139, label %if.end156, !dbg !8843

if.then139:                                       ; preds = %land.lhs.true133
  %cmp140 = icmp eq %union.tree_node* %rhs_origtype.addr.0, null, !dbg !8844
  br i1 %cmp140, label %cond.false142, label %cond.end145, !dbg !8845

cond.false142:                                    ; preds = %if.then139
  %type144 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8846
  %19 = load %union.tree_node*, %union.tree_node** %type144, align 8, !dbg !8846
  br label %cond.end145, !dbg !8845

cond.end145:                                      ; preds = %if.then139, %cond.false142
  %cond146 = phi %union.tree_node* [ %19, %cond.false142 ], [ %rhs_origtype.addr.0, %if.then139 ], !dbg !8845
  call void @llvm.dbg.value(metadata %union.tree_node* %cond146, metadata !8743, metadata !DIExpression()), !dbg !8847
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8848
  %cmp147 = icmp eq %union.tree_node* %cond146, %20, !dbg !8850
  br i1 %cmp147, label %if.end156, label %land.lhs.true148, !dbg !8851

land.lhs.true148:                                 ; preds = %cond.end145
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond146, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8852
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !8852
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs_origtype, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8853
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !8853
  %cmp152 = icmp eq %union.tree_node* %22, %24, !dbg !8854
  br i1 %cmp152, label %if.end156, label %if.then153, !dbg !8855

if.then153:                                       ; preds = %land.lhs.true148
  %call154 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 49, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !8856
  br label %if.end156, !dbg !8856

if.end156:                                        ; preds = %land.lhs.true148, %cond.end145, %if.then153, %land.lhs.true133, %if.end127
  %call157 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %newrhs.0) #7, !dbg !8857
  call void @llvm.dbg.value(metadata i8 %call157, metadata !8739, metadata !DIExpression()), !dbg !8746
  %call158 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %newrhs.0, i8 zeroext 0, i8* null) #6, !dbg !8858
  call void @llvm.dbg.value(metadata %union.tree_node* %call158, metadata !8735, metadata !DIExpression()), !dbg !8746
  %tobool159 = icmp eq %union.tree_node* %rhs_semantic_type.0, null, !dbg !8859
  br i1 %tobool159, label %if.end162, label %if.then160, !dbg !8861

if.then160:                                       ; preds = %if.end156
  %call161 = tail call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %rhs_semantic_type.0, %union.tree_node* %call158) #6, !dbg !8862
  call void @llvm.dbg.value(metadata %union.tree_node* %call161, metadata !8735, metadata !DIExpression()), !dbg !8746
  br label %if.end162, !dbg !8863

if.end162:                                        ; preds = %if.end156, %if.then160
  %newrhs.1 = phi %union.tree_node* [ %call161, %if.then160 ], [ %call158, %if.end156 ], !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %newrhs.1, metadata !8735, metadata !DIExpression()), !dbg !8746
  %call163 = tail call fastcc %union.tree_node* @convert_for_assignment(i32 %location, %union.tree_node* %lhstype.0, %union.tree_node* %newrhs.1, %union.tree_node* %rhs_origtype.addr.0, i32 1, i8 zeroext %call157, %union.tree_node* null, %union.tree_node* null, i32 0) #7, !dbg !8864
  call void @llvm.dbg.value(metadata %union.tree_node* %call163, metadata !8735, metadata !DIExpression()), !dbg !8746
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8865
  %bf.load165 = load i64, i64* %25, align 8, !dbg !8865
  %bf.cast16712 = and i64 %bf.load165, 65535, !dbg !8867
  %cmp168 = icmp eq i64 %bf.cast16712, 0, !dbg !8867
  br i1 %cmp168, label %if.then169, label %if.end170, !dbg !8868

if.then169:                                       ; preds = %if.end162
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8869
  br label %cleanup191, !dbg !8870

if.end170:                                        ; preds = %if.end162
  %27 = load i32, i32* @c_language, align 4, !dbg !8871
  %and = and i32 %27, 1, !dbg !8871
  %cmp171 = icmp ne i32 %and, 0, !dbg !8871
  %28 = load i32, i32* @flag_objc_gc, align 4, !dbg !8873
  %tobool173 = icmp ne i32 %28, 0, !dbg !8873
  %or.cond2 = and i1 %cmp171, %tobool173, !dbg !8874
  br i1 %or.cond2, label %if.then174, label %if.end179, !dbg !8874

if.then174:                                       ; preds = %if.end170
  %call175 = tail call %union.tree_node* @objc_generate_write_barrier(%union.tree_node* %lhs.addr.1, i32 %modifycode, %union.tree_node* %call163) #6, !dbg !8875
  call void @llvm.dbg.value(metadata %union.tree_node* %call175, metadata !8734, metadata !DIExpression()), !dbg !8746
  %tobool176 = icmp eq %union.tree_node* %call175, null, !dbg !8877
  br i1 %tobool176, label %if.end179, label %if.then177, !dbg !8879

if.then177:                                       ; preds = %if.then174
  tail call void @protected_set_expr_location(%union.tree_node* nonnull %call175, i32 %location) #6, !dbg !8880
  br label %cleanup191, !dbg !8882

if.end179:                                        ; preds = %if.then174, %if.end170
  %call180 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %lhstype.0, %union.tree_node* %lhs.addr.1, %union.tree_node* %call163) #6, !dbg !8883
  call void @llvm.dbg.value(metadata %union.tree_node* %call180, metadata !8734, metadata !DIExpression()), !dbg !8746
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8884
  %bf.load182 = load i64, i64* %29, align 8, !dbg !8885
  %bf.set184 = or i64 %bf.load182, 65536, !dbg !8885
  store i64 %bf.set184, i64* %29, align 8, !dbg !8885
  tail call void @protected_set_expr_location(%union.tree_node* %call180, i32 %location) #6, !dbg !8886
  %type186 = getelementptr inbounds %union.tree_node, %union.tree_node* %call180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8887
  %30 = load %union.tree_node*, %union.tree_node** %type186, align 8, !dbg !8887
  %cmp187 = icmp eq %union.tree_node* %0, %30, !dbg !8889
  br i1 %cmp187, label %cleanup191, label %if.end189, !dbg !8890

if.end189:                                        ; preds = %if.end179
  %call190 = tail call fastcc %union.tree_node* @convert_for_assignment(i32 %location, %union.tree_node* %0, %union.tree_node* %call180, %union.tree_node* %rhs_origtype.addr.0, i32 1, i8 zeroext 0, %union.tree_node* null, %union.tree_node* null, i32 0) #7, !dbg !8891
  call void @llvm.dbg.value(metadata %union.tree_node* %call190, metadata !8734, metadata !DIExpression()), !dbg !8746
  tail call void @protected_set_expr_location(%union.tree_node* %call190, i32 %location) #6, !dbg !8892
  br label %cleanup191, !dbg !8893

cleanup191:                                       ; preds = %if.end179, %if.then29, %cond.end, %if.end189, %if.then177, %if.then169, %if.then76, %if.then7, %if.then
  %retval.1 = phi %union.tree_node* [ %3, %if.then ], [ %13, %if.then76 ], [ %26, %if.then169 ], [ %call175, %if.then177 ], [ %call190, %if.end189 ], [ %4, %if.then7 ], [ %call27, %if.then29 ], [ %call36, %cond.end ], [ %call180, %if.end179 ], !dbg !8746
  ret %union.tree_node* %retval.1, !dbg !8894
}

declare dso_local %union.tree_node* @get_unwidened(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @convert_for_assignment(i32 %location, %union.tree_node* %type, %union.tree_node* %rhs, %union.tree_node* %origtype, i32 %errtype, i8 zeroext %null_pointer_constant, %union.tree_node* %fundecl, %union.tree_node* %function, i32 %parmnum) unnamed_addr #5 !dbg !8895 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata i32 %location, metadata !8899, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8900, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !8901, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype, metadata !8902, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32 %errtype, metadata !8903, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i8 %null_pointer_constant, metadata !8904, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %fundecl, metadata !8905, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %function, metadata !8906, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32 %parmnum, metadata !8907, metadata !DIExpression()), !dbg !8964
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8965
  %bf.load = load i64, i64* %0, align 8, !dbg !8965
  %1 = trunc i64 %bf.load to i32, !dbg !8965
  %bf.cast = and i32 %1, 65535, !dbg !8965
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !8908, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !8909, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8912, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i8 0, metadata !8913, metadata !DIExpression()), !dbg !8964
  %cmp = icmp eq i32 %errtype, 0, !dbg !8966
  br i1 %cmp, label %if.then, label %if.end19, !dbg !8967

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %function, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8968
  %bf.load2 = load i64, i64* %2, align 8, !dbg !8968
  %bf.cast479 = and i64 %bf.load2, 65535, !dbg !8970
  %cmp5 = icmp eq i64 %bf.cast479, 121, !dbg !8970
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !8971

land.lhs.true:                                    ; preds = %if.then
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %function, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8972
  %3 = bitcast %union.tree_node** %operands to i64**, !dbg !8972
  %4 = load i64*, i64** %3, align 8, !dbg !8972
  %bf.load7 = load i64, i64* %4, align 8, !dbg !8972
  %bf.cast980 = and i64 %bf.load7, 65535, !dbg !8973
  %cmp10 = icmp eq i64 %bf.cast980, 29, !dbg !8973
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !8974

if.then11:                                        ; preds = %land.lhs.true
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !8974
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8906, metadata !DIExpression()), !dbg !8964
  br label %if.end, !dbg !8975

if.end:                                           ; preds = %if.then11, %land.lhs.true, %if.then
  %function.addr.0 = phi %union.tree_node* [ %5, %if.then11 ], [ %function, %land.lhs.true ], [ %function, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0, metadata !8906, metadata !DIExpression()), !dbg !8964
  %call = tail call %union.tree_node* @objc_message_selector() #6, !dbg !8976
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8914, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %union.tree_node* %function.addr.0, metadata !8912, metadata !DIExpression()), !dbg !8964
  %tobool = icmp ne %union.tree_node* %call, null, !dbg !8978
  %cmp16 = icmp sgt i32 %parmnum, 2, !dbg !8980
  %or.cond = and i1 %tobool, %cmp16, !dbg !8981
  %sub = add nsw i32 %parmnum, -2, !dbg !8981
  %rname.0 = select i1 %or.cond, %union.tree_node* %call, %union.tree_node* %function.addr.0, !dbg !8981
  %parmnum.addr.0 = select i1 %or.cond, i32 %sub, i32 %parmnum, !dbg !8981
  br label %if.end19, !dbg !8981

if.end19:                                         ; preds = %if.end, %entry
  %rname.1 = phi %union.tree_node* [ null, %entry ], [ %rname.0, %if.end ], !dbg !8964
  %parmnum.addr.1 = phi i32 [ %parmnum, %entry ], [ %parmnum.addr.0, %if.end ]
  call void @llvm.dbg.value(metadata i32 %parmnum.addr.1, metadata !8907, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %rname.1, metadata !8912, metadata !DIExpression()), !dbg !8964
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8982
  %bf.load21 = load i64, i64* %6, align 8, !dbg !8982
  %bf.cast2317 = and i64 %bf.load21, 65535, !dbg !8984
  %cmp24 = icmp eq i64 %bf.cast2317, 190, !dbg !8984
  br i1 %cmp24, label %if.then25, label %if.end29, !dbg !8985

if.then25:                                        ; preds = %if.end19
  %operands27 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8986
  %7 = load %union.tree_node*, %union.tree_node** %operands27, align 8, !dbg !8986
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8901, metadata !DIExpression()), !dbg !8964
  br label %if.end29, !dbg !8987

if.end29:                                         ; preds = %if.then25, %if.end19
  %rhs.addr.0 = phi %union.tree_node* [ %7, %if.then25 ], [ %rhs, %if.end19 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.0, metadata !8901, metadata !DIExpression()), !dbg !8964
  %type30 = getelementptr inbounds %union.tree_node, %union.tree_node* %rhs.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8988
  %8 = load %union.tree_node*, %union.tree_node** %type30, align 8, !dbg !8988
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !8910, metadata !DIExpression()), !dbg !8964
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8989
  %bf.load32 = load i64, i64* %9, align 8, !dbg !8989
  %10 = trunc i64 %bf.load32 to i32, !dbg !8989
  %bf.cast34 = and i32 %10, 65535, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %bf.cast34, metadata !8911, metadata !DIExpression()), !dbg !8964
  %cmp35 = icmp eq i32 %bf.cast34, 0, !dbg !8990
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !8992

if.then36:                                        ; preds = %if.end29
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8993
  br label %cleanup1294, !dbg !8994

if.end37:                                         ; preds = %if.end29
  %12 = load i32, i32* @c_language, align 4, !dbg !8995
  %and = and i32 %12, 1, !dbg !8995
  %cmp38 = icmp eq i32 %and, 0, !dbg !8995
  br i1 %cmp38, label %if.end43, label %if.then39, !dbg !8996

if.then39:                                        ; preds = %if.end37
  switch i32 %errtype, label %sw.default [
    i32 3, label %sw.epilog
    i32 1, label %sw.bb40
    i32 2, label %sw.bb41
  ], !dbg !8997

sw.bb40:                                          ; preds = %if.then39
  call void @llvm.dbg.value(metadata i32 -1, metadata !8917, metadata !DIExpression()), !dbg !8998
  br label %sw.epilog, !dbg !8999

sw.bb41:                                          ; preds = %if.then39
  call void @llvm.dbg.value(metadata i32 -2, metadata !8917, metadata !DIExpression()), !dbg !8998
  br label %sw.epilog, !dbg !9001

sw.default:                                       ; preds = %if.then39
  call void @llvm.dbg.value(metadata i32 %parmnum.addr.1, metadata !8917, metadata !DIExpression()), !dbg !8998
  br label %sw.epilog, !dbg !9002

sw.epilog:                                        ; preds = %if.then39, %sw.default, %sw.bb41, %sw.bb40
  %parmno.0 = phi i32 [ %parmnum.addr.1, %sw.default ], [ -2, %sw.bb41 ], [ -1, %sw.bb40 ], [ 0, %if.then39 ], !dbg !9003
  call void @llvm.dbg.value(metadata i32 %parmno.0, metadata !8917, metadata !DIExpression()), !dbg !8998
  %call42 = tail call zeroext i8 @objc_compare_types(%union.tree_node* %type, %union.tree_node* %8, i32 %parmno.0, %union.tree_node* %rname.1) #6, !dbg !9004
  call void @llvm.dbg.value(metadata i8 %call42, metadata !8913, metadata !DIExpression()), !dbg !8964
  br label %if.end43, !dbg !9005

if.end43:                                         ; preds = %if.end37, %sw.epilog
  %objc_ok.0 = phi i8 [ %call42, %sw.epilog ], [ 0, %if.end37 ], !dbg !8964
  call void @llvm.dbg.value(metadata i8 %objc_ok.0, metadata !8913, metadata !DIExpression()), !dbg !8964
  %13 = load i32, i32* @warn_cxx_compat, align 4, !dbg !9006
  %tobool44 = icmp eq i32 %13, 0, !dbg !9006
  br i1 %tobool44, label %if.end83, label %if.then45, !dbg !9007

if.then45:                                        ; preds = %if.end43
  %cmp46 = icmp eq %union.tree_node* %origtype, null, !dbg !9008
  %origtype. = select i1 %cmp46, %union.tree_node* %8, %union.tree_node* %origtype, !dbg !9009
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype., metadata !8920, metadata !DIExpression()), !dbg !9010
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9011
  %cmp47 = icmp eq %union.tree_node* %origtype., %14, !dbg !9013
  br i1 %cmp47, label %if.end83, label %land.lhs.true48, !dbg !9014

land.lhs.true48:                                  ; preds = %if.then45
  %bf.load50 = load i64, i64* %0, align 8, !dbg !9015
  %bf.cast5278 = and i64 %bf.load50, 65535, !dbg !9016
  %cmp53 = icmp eq i64 %bf.cast5278, 6, !dbg !9016
  br i1 %cmp53, label %land.lhs.true54, label %if.end83, !dbg !9017

land.lhs.true54:                                  ; preds = %land.lhs.true48
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %origtype., i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9018
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !9018
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9019
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !9019
  %cmp58 = icmp eq %union.tree_node* %16, %18, !dbg !9020
  br i1 %cmp58, label %if.end83, label %do.body, !dbg !9021

do.body:                                          ; preds = %land.lhs.true54
  switch i32 %errtype, label %sw.default80 [
    i32 0, label %sw.bb60
    i32 1, label %sw.bb74
    i32 2, label %sw.bb76
    i32 3, label %sw.bb78
  ], !dbg !9022

sw.bb60:                                          ; preds = %do.body
  %19 = load i32, i32* @input_location, align 4, !dbg !9025
  %call61 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %19, i32 49, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.204, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9025
  %tobool62 = icmp eq i8 %call61, 0, !dbg !9025
  br i1 %tobool62, label %if.end83, label %if.then63, !dbg !9028

if.then63:                                        ; preds = %sw.bb60
  %tobool64 = icmp eq %union.tree_node* %fundecl, null, !dbg !9025
  br i1 %tobool64, label %cond.false70, label %land.lhs.true65, !dbg !9025

land.lhs.true65:                                  ; preds = %if.then63
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9025
  %20 = load i32, i32* %locus, align 8, !dbg !9025
  %cmp66 = icmp ult i32 %20, 2, !dbg !9025
  br i1 %cmp66, label %cond.false70, label %cond.true67, !dbg !9025

cond.true67:                                      ; preds = %land.lhs.true65
  br label %cond.end71, !dbg !9025

cond.false70:                                     ; preds = %if.then63, %land.lhs.true65
  br label %cond.end71, !dbg !9025

cond.end71:                                       ; preds = %cond.false70, %cond.true67
  %cond72.in = phi i32* [ %locus, %cond.true67 ], [ @input_location, %cond.false70 ]
  %cond72 = load i32, i32* %cond72.in, align 4, !dbg !9025
  tail call void (i32, i8*, ...) @inform(i32 %cond72, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9025
  br label %if.end83, !dbg !9025

sw.bb74:                                          ; preds = %do.body
  %21 = load i32, i32* @input_location, align 4, !dbg !9028
  %call75 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %21, i32 49, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !9028
  br label %if.end83, !dbg !9028

sw.bb76:                                          ; preds = %do.body
  %22 = load i32, i32* @input_location, align 4, !dbg !9028
  %call77 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %22, i32 49, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.206, i64 0, i64 0)) #6, !dbg !9028
  br label %if.end83, !dbg !9028

sw.bb78:                                          ; preds = %do.body
  %23 = load i32, i32* @input_location, align 4, !dbg !9028
  %call79 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %23, i32 49, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.207, i64 0, i64 0)) #6, !dbg !9028
  br label %if.end83, !dbg !9028

sw.default80:                                     ; preds = %do.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 4971, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9028
  br label %if.end83, !dbg !9028

if.end83:                                         ; preds = %sw.bb60, %land.lhs.true54, %if.then45, %if.end43, %land.lhs.true48, %cond.end71, %sw.default80, %sw.bb78, %sw.bb76, %sw.bb74
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9029
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !9029
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9031
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !9031
  %cmp88 = icmp eq %union.tree_node* %25, %27, !dbg !9032
  br i1 %cmp88, label %cleanup1294, label %if.end90, !dbg !9033

if.end90:                                         ; preds = %if.end83
  %cmp91 = icmp eq i32 %bf.cast34, 19, !dbg !9034
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !9036

if.then92:                                        ; preds = %if.end90
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !9037
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9039
  br label %cleanup1294, !dbg !9040

if.end93:                                         ; preds = %if.end90
  %call94 = tail call %union.tree_node* @require_complete_type(%union.tree_node* %rhs.addr.0) #7, !dbg !9041
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !8901, metadata !DIExpression()), !dbg !8964
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9042
  %cmp95 = icmp eq %union.tree_node* %call94, %29, !dbg !9044
  br i1 %cmp95, label %if.then96, label %if.end97, !dbg !9045

if.then96:                                        ; preds = %if.end93
  br label %cleanup1294, !dbg !9046

if.end97:                                         ; preds = %if.end93
  %trunc = trunc i64 %bf.load to i16, !dbg !9047
  switch i16 %trunc, label %if.end1275 [
    i16 12, label %land.lhs.true99
    i16 14, label %land.lhs.true140
    i16 8, label %land.lhs.true166
    i16 9, label %land.lhs.true166
    i16 11, label %land.lhs.true166
    i16 6, label %land.lhs.true166
    i16 13, label %land.lhs.true166
    i16 7, label %land.lhs.true166
    i16 16, label %land.lhs.true202
    i16 17, label %land.lhs.true202
    i16 10, label %land.lhs.true721
  ], !dbg !9047

land.lhs.true99:                                  ; preds = %if.end97
  %type101 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9048
  %30 = load %union.tree_node*, %union.tree_node** %type101, align 8, !dbg !9048
  %type103 = getelementptr inbounds %union.tree_node, %union.tree_node* %call94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9049
  %31 = load %union.tree_node*, %union.tree_node** %type103, align 8, !dbg !9049
  %call104 = tail call i32 @comptypes(%union.tree_node* %30, %union.tree_node* %31) #7, !dbg !9050
  %cmp105 = icmp eq i32 %call104, 1, !dbg !9051
  br i1 %cmp105, label %if.then106, label %if.else, !dbg !9052

if.then106:                                       ; preds = %land.lhs.true99
  %call107 = tail call zeroext i8 @lvalue_p(%union.tree_node* %call94) #7, !dbg !9053
  %tobool108 = icmp eq i8 %call107, 0, !dbg !9053
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !9056

if.then109:                                       ; preds = %if.then106
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.208, i64 0, i64 0)) #6, !dbg !9057
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9059
  br label %cleanup1294, !dbg !9060

if.end110:                                        ; preds = %if.then106
  %call111 = tail call zeroext i8 @c_mark_addressable(%union.tree_node* %call94) #7, !dbg !9061
  %tobool112 = icmp eq i8 %call111, 0, !dbg !9061
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !9063

if.then113:                                       ; preds = %if.end110
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9064
  br label %cleanup1294, !dbg !9065

if.end114:                                        ; preds = %if.end110
  %34 = load %union.tree_node*, %union.tree_node** %type103, align 8, !dbg !9066
  %call117 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %34) #6, !dbg !9066
  %call118 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call117, %union.tree_node* %call94) #6, !dbg !9066
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !8901, metadata !DIExpression()), !dbg !8964
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9067
  store i32 %location, i32* %35, align 8, !dbg !9067
  %type122 = getelementptr inbounds %union.tree_node, %union.tree_node* %call118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9068
  %36 = bitcast %union.tree_node** %type122 to %struct.tree_common**, !dbg !9068
  %37 = load %struct.tree_common*, %struct.tree_common** %36, align 8, !dbg !9068
  %type124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %37, i64 0, i32 2, !dbg !9068
  %38 = load %union.tree_node*, %union.tree_node** %type124, align 8, !dbg !9068
  %39 = load %union.tree_node*, %union.tree_node** %type101, align 8, !dbg !9070
  %cmp127 = icmp eq %union.tree_node* %38, %39, !dbg !9071
  br i1 %cmp127, label %if.end135, label %if.then128, !dbg !9072

if.then128:                                       ; preds = %if.end114
  %call131 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %39) #6, !dbg !9073
  %call132 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %call131, %union.tree_node* %call118) #6, !dbg !9073
  call void @llvm.dbg.value(metadata %union.tree_node* %call132, metadata !8901, metadata !DIExpression()), !dbg !8964
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9075
  store i32 %location, i32* %40, align 8, !dbg !9075
  br label %if.end135, !dbg !9076

if.end135:                                        ; preds = %if.end114, %if.then128
  %rhs.addr.1 = phi %union.tree_node* [ %call132, %if.then128 ], [ %call118, %if.end114 ], !dbg !9077
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.1, metadata !8901, metadata !DIExpression()), !dbg !8964
  %call136 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %type, %union.tree_node* %rhs.addr.1) #6, !dbg !9078
  call void @llvm.dbg.value(metadata %union.tree_node* %call136, metadata !8901, metadata !DIExpression()), !dbg !8964
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9079
  store i32 %location, i32* %41, align 8, !dbg !9079
  br label %cleanup1294, !dbg !9080

if.else:                                          ; preds = %land.lhs.true99
  %cmp139 = icmp eq i32 %bf.cast, 14, !dbg !9081
  %cmp141 = icmp eq i32 %bf.cast34, 14, !dbg !9082
  %or.cond3 = and i1 %cmp139, %cmp141, !dbg !9083
  br i1 %or.cond3, label %land.lhs.true142, label %if.else149, !dbg !9083

land.lhs.true140:                                 ; preds = %if.end97
  %cmp141.old = icmp eq i32 %bf.cast34, 14, !dbg !9082
  br i1 %cmp141.old, label %land.lhs.true142, label %if.else149, !dbg !9084

land.lhs.true142:                                 ; preds = %if.else, %land.lhs.true140
  %type144 = getelementptr inbounds %union.tree_node, %union.tree_node* %call94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9085
  %42 = load %union.tree_node*, %union.tree_node** %type144, align 8, !dbg !9085
  %call145 = tail call zeroext i8 @vector_types_convertible_p(%union.tree_node* %type, %union.tree_node* %42, i8 zeroext 1) #6, !dbg !9086
  %tobool146 = icmp eq i8 %call145, 0, !dbg !9086
  br i1 %tobool146, label %if.else149, label %if.then147, !dbg !9087

if.then147:                                       ; preds = %land.lhs.true142
  %call148 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call94) #6, !dbg !9088
  br label %cleanup1294, !dbg !9089

if.else149:                                       ; preds = %land.lhs.true142, %land.lhs.true140, %if.else
  switch i16 %trunc, label %if.end1275 [
    i16 8, label %land.lhs.true166
    i16 9, label %land.lhs.true166
    i16 11, label %land.lhs.true166
    i16 6, label %land.lhs.true166
    i16 13, label %land.lhs.true166
    i16 7, label %land.lhs.true166
    i16 16, label %land.lhs.true202
    i16 17, label %land.lhs.true202
    i16 10, label %land.lhs.true721
    i16 12, label %land.lhs.true721
  ], !dbg !9090

land.lhs.true166:                                 ; preds = %if.end97, %if.end97, %if.end97, %if.end97, %if.end97, %if.end97, %if.else149, %if.else149, %if.else149, %if.else149, %if.else149, %if.else149
  %trunc75 = trunc i64 %bf.load32 to i16, !dbg !9091
  switch i16 %trunc75, label %if.end196 [
    i16 8, label %if.then184
    i16 9, label %if.then184
    i16 11, label %if.then184
    i16 6, label %if.then184
    i16 13, label %if.then184
    i16 7, label %if.then184
  ], !dbg !9091

if.then184:                                       ; preds = %land.lhs.true166, %land.lhs.true166, %land.lhs.true166, %land.lhs.true166, %land.lhs.true166, %land.lhs.true166
  %43 = load i8, i8* @in_late_binary_op, align 1, !dbg !9092
  call void @llvm.dbg.value(metadata i8 %43, metadata !8928, metadata !DIExpression()), !dbg !9093
  %cmp185 = icmp eq i32 %bf.cast, 7, !dbg !9094
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !9096

if.then187:                                       ; preds = %if.then184
  store i8 1, i8* @in_late_binary_op, align 1, !dbg !9097
  br label %if.end188, !dbg !9098

if.end188:                                        ; preds = %if.then187, %if.then184
  %call189 = tail call %union.tree_node* @convert_and_check(%union.tree_node* %type, %union.tree_node* %rhs) #6, !dbg !9099
  call void @llvm.dbg.value(metadata %union.tree_node* %call189, metadata !8923, metadata !DIExpression()), !dbg !9093
  br i1 %cmp185, label %if.then192, label %cleanup1294, !dbg !9100

if.then192:                                       ; preds = %if.end188
  store i8 %43, i8* @in_late_binary_op, align 1, !dbg !9101
  br label %cleanup1294, !dbg !9103

if.end196:                                        ; preds = %land.lhs.true166
  switch i16 %trunc, label %if.end1275 [
    i16 16, label %land.lhs.true202
    i16 17, label %land.lhs.true202
    i16 10, label %land.lhs.true721
    i16 12, label %land.lhs.true721
    i16 8, label %land.lhs.true1225
    i16 7, label %land.lhs.true1261
  ], !dbg !9104

land.lhs.true202:                                 ; preds = %if.end97, %if.end97, %if.else149, %if.else149, %if.end196, %if.end196
  %cmp203 = icmp eq i32 %bf.cast, %bf.cast34, !dbg !9106
  br i1 %cmp203, label %land.lhs.true205, label %if.end210, !dbg !9107

land.lhs.true205:                                 ; preds = %land.lhs.true202
  %call206 = tail call i32 @comptypes(%union.tree_node* %type, %union.tree_node* %8) #7, !dbg !9108
  %tobool207 = icmp eq i32 %call206, 0, !dbg !9108
  br i1 %tobool207, label %if.end210, label %if.then208, !dbg !9109

if.then208:                                       ; preds = %land.lhs.true205
  %call209 = tail call %union.tree_node* @convert_and_check(%union.tree_node* %type, %union.tree_node* %call94) #6, !dbg !9110
  br label %cleanup1294, !dbg !9111

if.end210:                                        ; preds = %land.lhs.true205, %land.lhs.true202
  switch i16 %trunc, label %if.end1275 [
    i16 17, label %land.lhs.true216
    i16 16, label %land.lhs.true216
    i16 10, label %land.lhs.true721
    i16 12, label %land.lhs.true721
    i16 8, label %land.lhs.true1225
    i16 7, label %land.lhs.true1261
  ], !dbg !9112

land.lhs.true216:                                 ; preds = %if.end210, %if.end210
  %type217 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9113
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type217, i64 0, i32 6, !dbg !9113
  %bf.load218 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !9113
  %bf.clear219 = and i32 %bf.load218, 4096, !dbg !9113
  %tobool220 = icmp ne i32 %bf.clear219, 0, !dbg !9113
  %or.cond4 = and i1 %tobool220, %cmp, !dbg !9114
  br i1 %or.cond4, label %if.then224, label %if.else715, !dbg !9114

if.then224:                                       ; preds = %land.lhs.true216
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8932, metadata !DIExpression()), !dbg !9115
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9116
  %44 = bitcast i32* %values to %union.tree_node**, !dbg !9116
  %cmp245 = icmp eq i32 %bf.cast34, 10, !dbg !9117
  %type251 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9118
  %tobool513 = icmp ne i8 %null_pointer_constant, 0, !dbg !9119
  %spec.select14 = select i1 %tobool513, i32 6, i32 0, !dbg !9121
  br label %for.cond, !dbg !9122

for.cond:                                         ; preds = %for.inc, %if.then224
  %memb.0.in = phi %union.tree_node** [ %44, %if.then224 ], [ %chain, %for.inc ]
  %marginal_memb.0 = phi %union.tree_node* [ null, %if.then224 ], [ %marginal_memb.5, %for.inc ], !dbg !9123
  %rhs.addr.2 = phi %union.tree_node* [ %call94, %if.then224 ], [ %rhs.addr.3, %for.inc ], !dbg !9124
  %memb.0 = load %union.tree_node*, %union.tree_node** %memb.0.in, align 8, !dbg !9125
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.2, metadata !8901, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %marginal_memb.0, metadata !8932, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata %union.tree_node* %memb.0, metadata !8929, metadata !DIExpression()), !dbg !9115
  %tobool226 = icmp eq %union.tree_node* %memb.0, null, !dbg !9126
  br i1 %tobool226, label %for.end, label %for.body, !dbg !9126

for.body:                                         ; preds = %for.cond
  %type228 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9127
  %45 = load %union.tree_node*, %union.tree_node** %type228, align 8, !dbg !9127
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !8933, metadata !DIExpression()), !dbg !9121
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9128
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8, !dbg !9128
  %48 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !9130
  %call233 = tail call i32 @comptypes(%union.tree_node* %47, %union.tree_node* %48) #7, !dbg !9131
  %tobool234 = icmp eq i32 %call233, 0, !dbg !9131
  br i1 %tobool234, label %if.end236, label %cleanup516, !dbg !9132

if.end236:                                        ; preds = %for.body
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9133
  %bf.load238 = load i64, i64* %49, align 8, !dbg !9133
  %bf.cast24046 = and i64 %bf.load238, 65535, !dbg !9135
  %cmp241 = icmp eq i64 %bf.cast24046, 10, !dbg !9135
  br i1 %cmp241, label %if.end244, label %cleanup516, !dbg !9136

if.end244:                                        ; preds = %if.end236
  br i1 %cmp245, label %if.then247, label %if.end512, !dbg !9137

if.then247:                                       ; preds = %if.end244
  %type249 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9138
  %50 = load %union.tree_node*, %union.tree_node** %type249, align 8, !dbg !9138
  call void @llvm.dbg.value(metadata %union.tree_node* %50, metadata !8937, metadata !DIExpression()), !dbg !9118
  %51 = load %union.tree_node*, %union.tree_node** %type251, align 8, !dbg !9139
  call void @llvm.dbg.value(metadata %union.tree_node* %51, metadata !8940, metadata !DIExpression()), !dbg !9118
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9140
  %bf.load253 = load i64, i64* %52, align 8, !dbg !9140
  %bf.cast25547 = and i64 %bf.load253, 65535, !dbg !9140
  %cmp256 = icmp eq i64 %bf.cast25547, 19, !dbg !9140
  br i1 %cmp256, label %if.then268, label %lor.lhs.false258, !dbg !9142

lor.lhs.false258:                                 ; preds = %if.then247
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9143
  %bf.load260 = load i64, i64* %53, align 8, !dbg !9143
  %bf.cast26248 = and i64 %bf.load260, 65535, !dbg !9143
  %cmp263 = icmp eq i64 %bf.cast26248, 19, !dbg !9143
  br i1 %cmp263, label %if.then268, label %lor.lhs.false265, !dbg !9144

lor.lhs.false265:                                 ; preds = %lor.lhs.false258
  %call266 = tail call fastcc i32 @comp_target_types(i32 %location, %union.tree_node* %45, %union.tree_node* %8) #7, !dbg !9145
  %tobool267 = icmp eq i32 %call266, 0, !dbg !9145
  br i1 %tobool267, label %cleanup, label %lor.lhs.false265.if.then268_crit_edge, !dbg !9146

lor.lhs.false265.if.then268_crit_edge:            ; preds = %lor.lhs.false265
  %bf.load270.pre = load i64, i64* %52, align 8, !dbg !9147
  br label %if.then268, !dbg !9146

if.then268:                                       ; preds = %lor.lhs.false265.if.then268_crit_edge, %lor.lhs.false258, %if.then247
  %bf.load357 = phi i64 [ %bf.load270.pre, %lor.lhs.false265.if.then268_crit_edge ], [ %bf.load253, %lor.lhs.false258 ], [ %bf.load253, %if.then247 ], !dbg !9147
  %bf.lshr271 = lshr i64 %bf.load357, 20, !dbg !9147
  %54 = trunc i64 %bf.lshr271 to i32, !dbg !9147
  %bf.cast273 = and i32 %54, 1, !dbg !9147
  %55 = lshr i64 %bf.load357, 18, !dbg !9147
  %56 = trunc i64 %55 to i32, !dbg !9147
  %mul279 = and i32 %56, 2, !dbg !9147
  %or = or i32 %bf.cast273, %mul279, !dbg !9147
  %type280 = bitcast %union.tree_node* %50 to %struct.tree_type*, !dbg !9147
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type280, i64 0, i32 6, !dbg !9147
  %bf.load281 = load i32, i32* %restrict_flag, align 4, !dbg !9147
  %57 = lshr i32 %bf.load281, 11, !dbg !9147
  %mul284 = and i32 %57, 4, !dbg !9147
  %or285 = or i32 %or, %mul284, !dbg !9147
  %58 = lshr i64 %bf.load357, 48, !dbg !9147
  %59 = trunc i64 %58 to i32, !dbg !9147
  %shl = and i32 %59, 65280, !dbg !9147
  %or291 = or i32 %or285, %shl, !dbg !9147
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9150
  %bf.load293 = load i64, i64* %60, align 8, !dbg !9150
  %bf.lshr294 = lshr i64 %bf.load293, 20, !dbg !9150
  %61 = trunc i64 %bf.lshr294 to i32, !dbg !9150
  %bf.cast296 = and i32 %61, 1, !dbg !9150
  %62 = lshr i64 %bf.load293, 18, !dbg !9150
  %63 = trunc i64 %62 to i32, !dbg !9150
  %mul303 = and i32 %63, 2, !dbg !9150
  %or304 = or i32 %bf.cast296, %mul303, !dbg !9150
  %type305 = bitcast %union.tree_node* %51 to %struct.tree_type*, !dbg !9150
  %restrict_flag306 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type305, i64 0, i32 6, !dbg !9150
  %bf.load307 = load i32, i32* %restrict_flag306, align 4, !dbg !9150
  %64 = lshr i32 %bf.load307, 11, !dbg !9150
  %mul310 = and i32 %64, 4, !dbg !9150
  %or311 = or i32 %or304, %mul310, !dbg !9150
  %65 = lshr i64 %bf.load293, 48, !dbg !9150
  %66 = trunc i64 %65 to i32, !dbg !9150
  %shl317 = and i32 %66, 65280, !dbg !9150
  %or318 = or i32 %or311, %shl317, !dbg !9150
  %cmp319 = icmp eq i32 %or291, %or318, !dbg !9151
  br i1 %cmp319, label %cleanup, label %lor.lhs.false321, !dbg !9152

lor.lhs.false321:                                 ; preds = %if.then268
  %bf.cast32555 = and i64 %bf.load293, 65535, !dbg !9153
  %cmp326 = icmp eq i64 %bf.cast32555, 20, !dbg !9153
  br i1 %cmp326, label %land.lhs.true328, label %cond.false420, !dbg !9154

land.lhs.true328:                                 ; preds = %lor.lhs.false321
  %bf.cast33265 = and i64 %bf.load357, 65535, !dbg !9155
  %cmp333 = icmp eq i64 %bf.cast33265, 20, !dbg !9155
  br i1 %cmp333, label %cond.true335, label %cond.false420, !dbg !9156

cond.true335:                                     ; preds = %land.lhs.true328
  %or390 = or i32 %or291, %or318, !dbg !9157
  %cmp418 = icmp eq i32 %or390, %or318, !dbg !9158
  br i1 %cmp418, label %cleanup, label %if.end506, !dbg !9159

cond.false420:                                    ; preds = %land.lhs.true328, %lor.lhs.false321
  %or475 = or i32 %or291, %or318, !dbg !9160
  %cmp503 = icmp eq i32 %or475, %or291, !dbg !9161
  br i1 %cmp503, label %cleanup, label %if.end506, !dbg !9156

if.end506:                                        ; preds = %cond.false420, %cond.true335
  %tobool507 = icmp eq %union.tree_node* %marginal_memb.0, null, !dbg !9162
  %spec.select = select i1 %tobool507, %union.tree_node* %memb.0, %union.tree_node* %marginal_memb.0, !dbg !9164
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !8932, metadata !DIExpression()), !dbg !9115
  br label %cleanup, !dbg !9165

cleanup:                                          ; preds = %lor.lhs.false265, %if.end506, %if.then268, %cond.true335, %cond.false420
  %cleanup.dest.slot.0 = phi i32 [ 6, %cond.false420 ], [ 6, %cond.true335 ], [ 6, %if.then268 ], [ 0, %if.end506 ], [ 0, %lor.lhs.false265 ]
  %marginal_memb.3 = phi %union.tree_node* [ %marginal_memb.0, %cond.false420 ], [ %marginal_memb.0, %cond.true335 ], [ %marginal_memb.0, %if.then268 ], [ %spec.select, %if.end506 ], [ %marginal_memb.0, %lor.lhs.false265 ], !dbg !9123
  call void @llvm.dbg.value(metadata %union.tree_node* %marginal_memb.3, metadata !8932, metadata !DIExpression()), !dbg !9115
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end512, label %cleanup516

if.end512:                                        ; preds = %cleanup, %if.end244
  %marginal_memb.4 = phi %union.tree_node* [ %marginal_memb.0, %if.end244 ], [ %marginal_memb.3, %cleanup ], !dbg !9123
  call void @llvm.dbg.value(metadata %union.tree_node* %marginal_memb.4, metadata !8932, metadata !DIExpression()), !dbg !9115
  %67 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !9166
  %spec.select15 = select i1 %tobool513, %union.tree_node* %67, %union.tree_node* %rhs.addr.2, !dbg !9168
  br label %cleanup516, !dbg !9168

cleanup516:                                       ; preds = %if.end236, %for.body, %if.end512, %cleanup
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 6, %for.body ], [ 8, %if.end236 ], [ %spec.select14, %if.end512 ]
  %marginal_memb.5 = phi %union.tree_node* [ %marginal_memb.3, %cleanup ], [ %marginal_memb.0, %for.body ], [ %marginal_memb.0, %if.end236 ], [ %marginal_memb.4, %if.end512 ], !dbg !9123
  %rhs.addr.3 = phi %union.tree_node* [ %rhs.addr.2, %cleanup ], [ %rhs.addr.2, %for.body ], [ %rhs.addr.2, %if.end236 ], [ %spec.select15, %if.end512 ], !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.3, metadata !8901, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %marginal_memb.5, metadata !8932, metadata !DIExpression()), !dbg !9115
  %switch = icmp eq i32 %cleanup.dest.slot.1, 6
  br i1 %switch, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup516
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %memb.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9169
  br label %for.cond, !dbg !9170, !llvm.loop !9171

for.end:                                          ; preds = %for.cond, %cleanup516
  %memb.0.lcssa = phi %union.tree_node* [ %memb.0, %for.cond ], [ %memb.0, %cleanup516 ], !dbg !9125
  %tobool226.lcssa = phi i1 [ %tobool226, %for.cond ], [ %tobool226, %cleanup516 ], !dbg !9126
  %marginal_memb.6 = phi %union.tree_node* [ %marginal_memb.5, %cleanup516 ], [ %marginal_memb.0, %for.cond ], !dbg !9123
  %rhs.addr.4 = phi %union.tree_node* [ %rhs.addr.3, %cleanup516 ], [ %rhs.addr.2, %for.cond ], !dbg !9124
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.addr.4, metadata !8901, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %union.tree_node* %marginal_memb.6, metadata !8932, metadata !DIExpression()), !dbg !9115
  %tobool520 = icmp ne %union.tree_node* %memb.0.lcssa, null, !dbg !9173
  %tobool522 = icmp ne %union.tree_node* %marginal_memb.6, null, !dbg !9174
  %or.cond5 = or i1 %tobool520, %tobool522, !dbg !9175
  br i1 %or.cond5, label %if.then523, label %cleanup711, !dbg !9175

if.then523:                                       ; preds = %for.end
  br i1 %tobool226.lcssa, label %if.then525, label %if.end695, !dbg !9176

if.then525:                                       ; preds = %if.then523
  %type528 = getelementptr inbounds %union.tree_node, %union.tree_node* %marginal_memb.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9177
  %68 = bitcast %union.tree_node** %type528 to %struct.tree_common**, !dbg !9177
  %69 = load %struct.tree_common*, %struct.tree_common** %68, align 8, !dbg !9177
  %type530 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %69, i64 0, i32 2, !dbg !9177
  %70 = load %union.tree_node*, %union.tree_node** %type530, align 8, !dbg !9177
  call void @llvm.dbg.value(metadata %union.tree_node* %70, metadata !8941, metadata !DIExpression()), !dbg !9178
  %71 = load %union.tree_node*, %union.tree_node** %type251, align 8, !dbg !9179
  call void @llvm.dbg.value(metadata %union.tree_node* %71, metadata !8946, metadata !DIExpression()), !dbg !9178
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9180
  %bf.load535 = load i64, i64* %72, align 8, !dbg !9180
  %bf.cast53740 = and i64 %bf.load535, 65535, !dbg !9182
  %cmp538 = icmp eq i64 %bf.cast53740, 20, !dbg !9182
  br i1 %cmp538, label %land.lhs.true540, label %if.then525.if.else620_crit_edge, !dbg !9183

if.then525.if.else620_crit_edge:                  ; preds = %if.then525
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9184
  %bf.load642.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !9186
  br label %if.else620, !dbg !9183

land.lhs.true540:                                 ; preds = %if.then525
  %73 = getelementptr inbounds %union.tree_node, %union.tree_node* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9187
  %bf.load542 = load i64, i64* %73, align 8, !dbg !9187
  %bf.cast54443 = and i64 %bf.load542, 65535, !dbg !9188
  %cmp545 = icmp eq i64 %bf.cast54443, 20, !dbg !9188
  br i1 %cmp545, label %if.then547, label %if.else620, !dbg !9189

if.then547:                                       ; preds = %land.lhs.true540
  %bf.lshr550 = lshr i64 %bf.load542, 20, !dbg !9190
  %74 = trunc i64 %bf.lshr550 to i32, !dbg !9190
  %bf.cast552 = and i32 %74, 1, !dbg !9190
  %75 = lshr i64 %bf.load542, 18, !dbg !9190
  %76 = trunc i64 %75 to i32, !dbg !9190
  %mul559 = and i32 %76, 2, !dbg !9190
  %or560 = or i32 %bf.cast552, %mul559, !dbg !9190
  %type561 = bitcast %union.tree_node* %70 to %struct.tree_type*, !dbg !9190
  %restrict_flag562 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type561, i64 0, i32 6, !dbg !9190
  %bf.load563 = load i32, i32* %restrict_flag562, align 4, !dbg !9190
  %77 = lshr i32 %bf.load563, 11, !dbg !9190
  %mul566 = and i32 %77, 4, !dbg !9190
  %or567 = or i32 %or560, %mul566, !dbg !9190
  %bf.lshr570 = lshr i64 %bf.load535, 20, !dbg !9193
  %78 = trunc i64 %bf.lshr570 to i32, !dbg !9193
  %bf.cast572 = and i32 %78, 1, !dbg !9193
  %79 = lshr i64 %bf.load535, 18, !dbg !9193
  %80 = trunc i64 %79 to i32, !dbg !9193
  %mul579 = and i32 %80, 2, !dbg !9193
  %or580 = or i32 %bf.cast572, %mul579, !dbg !9193
  %type581 = bitcast %union.tree_node* %71 to %struct.tree_type*, !dbg !9193
  %restrict_flag582 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type581, i64 0, i32 6, !dbg !9193
  %bf.load583 = load i32, i32* %restrict_flag582, align 4, !dbg !9193
  %81 = lshr i32 %bf.load583, 11, !dbg !9193
  %mul586 = and i32 %81, 4, !dbg !9193
  %or587 = or i32 %or580, %mul586, !dbg !9193
  %neg = xor i32 %or587, -1, !dbg !9194
  %and588 = and i32 %or567, %neg, !dbg !9195
  %tobool589 = icmp eq i32 %and588, 0, !dbg !9195
  br i1 %tobool589, label %if.end695, label %do.body591, !dbg !9196

do.body591:                                       ; preds = %if.then547
  %call593 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.209, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9197
  %tobool594 = icmp eq i8 %call593, 0, !dbg !9197
  br i1 %tobool594, label %if.end695, label %if.then595, !dbg !9201

if.then595:                                       ; preds = %do.body591
  %tobool596 = icmp eq %union.tree_node* %fundecl, null, !dbg !9197
  br i1 %tobool596, label %cond.end606, label %land.lhs.true597, !dbg !9197

land.lhs.true597:                                 ; preds = %if.then595
  %locus599 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9197
  %82 = load i32, i32* %locus599, align 8, !dbg !9197
  %cmp600 = icmp ult i32 %82, 2, !dbg !9197
  br i1 %cmp600, label %cond.end606, label %cond.true602, !dbg !9197

cond.true602:                                     ; preds = %land.lhs.true597
  br label %cond.end606, !dbg !9197

cond.end606:                                      ; preds = %if.then595, %land.lhs.true597, %cond.true602
  %cond607 = phi i32 [ %82, %cond.true602 ], [ %location, %land.lhs.true597 ], [ %location, %if.then595 ], !dbg !9197
  tail call void (i32, i8*, ...) @inform(i32 %cond607, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9197
  br label %if.end695, !dbg !9197

if.else620:                                       ; preds = %if.then525.if.else620_crit_edge, %land.lhs.true540
  %bf.load642 = phi i64 [ %bf.load642.pre, %if.then525.if.else620_crit_edge ], [ %bf.load542, %land.lhs.true540 ], !dbg !9186
  %bf.lshr623 = lshr i64 %bf.load535, 20, !dbg !9202
  %83 = trunc i64 %bf.lshr623 to i32, !dbg !9202
  %bf.cast625 = and i32 %83, 1, !dbg !9202
  %84 = lshr i64 %bf.load535, 18, !dbg !9202
  %85 = trunc i64 %84 to i32, !dbg !9202
  %mul632 = and i32 %85, 2, !dbg !9202
  %or633 = or i32 %bf.cast625, %mul632, !dbg !9202
  %type634 = bitcast %union.tree_node* %71 to %struct.tree_type*, !dbg !9202
  %restrict_flag635 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type634, i64 0, i32 6, !dbg !9202
  %bf.load636 = load i32, i32* %restrict_flag635, align 4, !dbg !9202
  %86 = lshr i32 %bf.load636, 11, !dbg !9202
  %mul639 = and i32 %86, 4, !dbg !9202
  %or640 = or i32 %or633, %mul639, !dbg !9202
  %bf.lshr643 = lshr i64 %bf.load642, 20, !dbg !9186
  %87 = trunc i64 %bf.lshr643 to i32, !dbg !9186
  %bf.cast645 = and i32 %87, 1, !dbg !9186
  %88 = lshr i64 %bf.load642, 18, !dbg !9186
  %89 = trunc i64 %88 to i32, !dbg !9186
  %mul652 = and i32 %89, 2, !dbg !9186
  %or653 = or i32 %bf.cast645, %mul652, !dbg !9186
  %type654 = bitcast %union.tree_node* %70 to %struct.tree_type*, !dbg !9186
  %restrict_flag655 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type654, i64 0, i32 6, !dbg !9186
  %bf.load656 = load i32, i32* %restrict_flag655, align 4, !dbg !9186
  %90 = lshr i32 %bf.load656, 11, !dbg !9186
  %mul659 = and i32 %90, 4, !dbg !9186
  %or660 = or i32 %or653, %mul659, !dbg !9186
  %neg661 = xor i32 %or660, -1, !dbg !9203
  %and662 = and i32 %or640, %neg661, !dbg !9204
  %tobool663 = icmp eq i32 %and662, 0, !dbg !9204
  br i1 %tobool663, label %if.end695, label %do.body665, !dbg !9205

do.body665:                                       ; preds = %if.else620
  %call667 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.213, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9206
  %tobool668 = icmp eq i8 %call667, 0, !dbg !9206
  br i1 %tobool668, label %if.end695, label %if.then669, !dbg !9210

if.then669:                                       ; preds = %do.body665
  %tobool670 = icmp eq %union.tree_node* %fundecl, null, !dbg !9206
  br i1 %tobool670, label %cond.end680, label %land.lhs.true671, !dbg !9206

land.lhs.true671:                                 ; preds = %if.then669
  %locus673 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9206
  %91 = load i32, i32* %locus673, align 8, !dbg !9206
  %cmp674 = icmp ult i32 %91, 2, !dbg !9206
  br i1 %cmp674, label %cond.end680, label %cond.true676, !dbg !9206

cond.true676:                                     ; preds = %land.lhs.true671
  br label %cond.end680, !dbg !9206

cond.end680:                                      ; preds = %if.then669, %land.lhs.true671, %cond.true676
  %cond681 = phi i32 [ %91, %cond.true676 ], [ %location, %land.lhs.true671 ], [ %location, %if.then669 ], !dbg !9206
  tail call void (i32, i8*, ...) @inform(i32 %cond681, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9206
  br label %if.end695, !dbg !9206

if.end695:                                        ; preds = %do.body591, %if.then547, %do.body665, %if.else620, %if.then523, %cond.end606, %cond.end680
  %memb.1 = phi %union.tree_node* [ %memb.0.lcssa, %if.then523 ], [ %marginal_memb.6, %if.else620 ], [ %marginal_memb.6, %do.body665 ], [ %marginal_memb.6, %cond.end680 ], [ %marginal_memb.6, %if.then547 ], [ %marginal_memb.6, %do.body591 ], [ %marginal_memb.6, %cond.end606 ], !dbg !9115
  call void @llvm.dbg.value(metadata %union.tree_node* %memb.1, metadata !8929, metadata !DIExpression()), !dbg !9115
  %tobool696 = icmp eq %union.tree_node* %fundecl, null, !dbg !9211
  br i1 %tobool696, label %if.then703, label %lor.lhs.false697, !dbg !9213

lor.lhs.false697:                                 ; preds = %if.end695
  %locus699 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9214
  %92 = load i32, i32* %locus699, align 8, !dbg !9214
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %92) #6, !dbg !9214
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !9214
  %93 = load i8, i8* %sysp, align 8, !dbg !9214
  %cmp701 = icmp eq i8 %93, 0, !dbg !9214
  br i1 %cmp701, label %if.then703, label %if.end705, !dbg !9215

if.then703:                                       ; preds = %lor.lhs.false697, %if.end695
  %call704 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.217, i64 0, i64 0)) #6, !dbg !9216
  br label %if.end705, !dbg !9216

if.end705:                                        ; preds = %lor.lhs.false697, %if.then703
  %type707 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9217
  %94 = load %union.tree_node*, %union.tree_node** %type707, align 8, !dbg !9217
  %call708 = call %union.tree_node* @fold_convert_loc(i32 %location, %union.tree_node* %94, %union.tree_node* %rhs.addr.4) #6, !dbg !9218
  call void @llvm.dbg.value(metadata %union.tree_node* %call708, metadata !8901, metadata !DIExpression()), !dbg !8964
  %call709 = call %union.tree_node* @build_constructor_single(%union.tree_node* %type, %union.tree_node* %memb.1, %union.tree_node* %call708) #6, !dbg !9219
  br label %cleanup711, !dbg !9220

cleanup711:                                       ; preds = %for.end, %if.end705
  %cleanup.dest.slot.2 = phi i1 [ false, %if.end705 ], [ true, %for.end ]
  %retval.0 = phi %union.tree_node* [ %call709, %if.end705 ], [ undef, %for.end ]
  br i1 %cleanup.dest.slot.2, label %if.end1275, label %cleanup1294

if.else715:                                       ; preds = %land.lhs.true216
  switch i16 %trunc, label %if.end1275 [
    i16 10, label %land.lhs.true721
    i16 12, label %land.lhs.true721
    i16 8, label %land.lhs.true1225
    i16 7, label %land.lhs.true1261
  ], !dbg !9221

land.lhs.true721:                                 ; preds = %if.end97, %if.else149, %if.else149, %if.end196, %if.end196, %if.end210, %if.end210, %if.else715, %if.else715
  %cmp722 = icmp eq i32 %bf.cast34, %bf.cast, !dbg !9222
  br i1 %cmp722, label %if.then724, label %if.else1176, !dbg !9223

if.then724:                                       ; preds = %land.lhs.true721
  %type727 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9224
  %95 = load %union.tree_node*, %union.tree_node** %type727, align 8, !dbg !9224
  call void @llvm.dbg.value(metadata %union.tree_node* %95, metadata !8947, metadata !DIExpression()), !dbg !9225
  %type730 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9226
  %96 = load %union.tree_node*, %union.tree_node** %type730, align 8, !dbg !9226
  call void @llvm.dbg.value(metadata %union.tree_node* %96, metadata !8950, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata %union.tree_node* %95, metadata !8951, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata %union.tree_node* %96, metadata !8952, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i32 0, metadata !8954, metadata !DIExpression()), !dbg !9225
  %97 = getelementptr inbounds %union.tree_node, %union.tree_node* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9227
  %bf.load732 = load i64, i64* %97, align 8, !dbg !9227
  %bf.cast73418 = and i64 %bf.load732, 65535, !dbg !9229
  %cmp735 = icmp eq i64 %bf.cast73418, 15, !dbg !9229
  br i1 %cmp735, label %if.end740, label %if.then737, !dbg !9230

if.then737:                                       ; preds = %if.then724
  %98 = getelementptr inbounds %union.tree_node, %union.tree_node* %95, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9231
  %99 = load %union.tree_node*, %union.tree_node** %98, align 8, !dbg !9231
  call void @llvm.dbg.value(metadata %union.tree_node* %99, metadata !8951, metadata !DIExpression()), !dbg !9225
  br label %if.end740, !dbg !9232

if.end740:                                        ; preds = %if.then724, %if.then737
  %mvl.0 = phi %union.tree_node* [ %99, %if.then737 ], [ %95, %if.then724 ], !dbg !9225
  call void @llvm.dbg.value(metadata %union.tree_node* %mvl.0, metadata !8951, metadata !DIExpression()), !dbg !9225
  %100 = getelementptr inbounds %union.tree_node, %union.tree_node* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9233
  %bf.load742 = load i64, i64* %100, align 8, !dbg !9233
  %bf.cast74419 = and i64 %bf.load742, 65535, !dbg !9235
  %cmp745 = icmp eq i64 %bf.cast74419, 15, !dbg !9235
  br i1 %cmp745, label %if.end750, label %if.then747, !dbg !9236

if.then747:                                       ; preds = %if.end740
  %101 = getelementptr inbounds %union.tree_node, %union.tree_node* %96, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9237
  %102 = load %union.tree_node*, %union.tree_node** %101, align 8, !dbg !9237
  call void @llvm.dbg.value(metadata %union.tree_node* %102, metadata !8952, metadata !DIExpression()), !dbg !9225
  br label %if.end750, !dbg !9238

if.end750:                                        ; preds = %if.end740, %if.then747
  %mvr.0 = phi %union.tree_node* [ %102, %if.then747 ], [ %96, %if.end740 ], !dbg !9225
  call void @llvm.dbg.value(metadata %union.tree_node* %mvr.0, metadata !8952, metadata !DIExpression()), !dbg !9225
  %call751 = tail call zeroext i8 @vector_targets_convertible_p(%union.tree_node* %95, %union.tree_node* %96) #6, !dbg !9239
  call void @llvm.dbg.value(metadata i8 %call751, metadata !8953, metadata !DIExpression()), !dbg !9225
  %bf.load753 = load i64, i64* %100, align 8, !dbg !9240
  %bf.cast75520 = and i64 %bf.load753, 65535, !dbg !9240
  %cmp756 = icmp eq i64 %bf.cast75520, 19, !dbg !9240
  %103 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !9242
  %cmp759 = icmp ne %union.tree_node* %call94, %103, !dbg !9243
  %or.cond6 = and i1 %cmp756, %cmp759, !dbg !9244
  br i1 %or.cond6, label %land.lhs.true761, label %if.end770, !dbg !9244

land.lhs.true761:                                 ; preds = %if.end750
  %bf.load763 = load i64, i64* %97, align 8, !dbg !9245
  %bf.cast76537 = and i64 %bf.load763, 65535, !dbg !9245
  %cmp766 = icmp eq i64 %bf.cast76537, 19, !dbg !9245
  br i1 %cmp766, label %if.end770, label %if.then768, !dbg !9246

if.then768:                                       ; preds = %land.lhs.true761
  %call769 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 49, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.218, i64 0, i64 0), %union.tree_node* %8, %union.tree_node* %type) #6, !dbg !9247
  %bf.load777.pre = load i64, i64* %100, align 8, !dbg !9248
  br label %if.end770, !dbg !9247

if.end770:                                        ; preds = %if.then768, %land.lhs.true761, %if.end750
  %bf.load777 = phi i64 [ %bf.load777.pre, %if.then768 ], [ %bf.load753, %land.lhs.true761 ], [ %bf.load753, %if.end750 ], !dbg !9248
  %bf.load772 = load i64, i64* %97, align 8, !dbg !9249
  %bf.lshr773 = lshr i64 %bf.load772, 56, !dbg !9249
  %conv775 = trunc i64 %bf.lshr773 to i8, !dbg !9249
  call void @llvm.dbg.value(metadata i8 %conv775, metadata !8955, metadata !DIExpression()), !dbg !9225
  %bf.lshr778 = lshr i64 %bf.load777, 56, !dbg !9248
  %conv780 = trunc i64 %bf.lshr778 to i8, !dbg !9248
  call void @llvm.dbg.value(metadata i8 %conv780, metadata !8956, metadata !DIExpression()), !dbg !9225
  %call781 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %call94) #7, !dbg !9250
  %tobool782 = icmp eq i8 %call781, 0, !dbg !9250
  br i1 %tobool782, label %land.lhs.true783, label %if.end798, !dbg !9252

land.lhs.true783:                                 ; preds = %if.end770
  %104 = trunc i64 %bf.lshr778 to i32, !dbg !9253
  %105 = trunc i64 %bf.lshr773 to i32, !dbg !9254
  %cmp786 = icmp eq i32 %104, %105, !dbg !9255
  br i1 %cmp786, label %if.end798, label %land.lhs.true788, !dbg !9256

land.lhs.true788:                                 ; preds = %land.lhs.true783
  %106 = load i8 (i8, i8)*, i8 (i8, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 5), align 8, !dbg !9257
  %call789 = tail call zeroext i8 %106(i8 zeroext %conv780, i8 zeroext %conv775) #6, !dbg !9258
  %tobool790 = icmp eq i8 %call789, 0, !dbg !9258
  br i1 %tobool790, label %if.then791, label %if.end798, !dbg !9259

if.then791:                                       ; preds = %land.lhs.true788
  switch i32 %errtype, label %sw.default796 [
    i32 0, label %sw.bb792
    i32 1, label %sw.bb793
    i32 2, label %sw.bb794
    i32 3, label %sw.bb795
  ], !dbg !9260

sw.bb792:                                         ; preds = %if.then791
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.219, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9262
  br label %sw.epilog797, !dbg !9264

sw.bb793:                                         ; preds = %if.then791
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.220, i64 0, i64 0)) #6, !dbg !9265
  br label %sw.epilog797, !dbg !9266

sw.bb794:                                         ; preds = %if.then791
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.221, i64 0, i64 0)) #6, !dbg !9267
  br label %sw.epilog797, !dbg !9268

sw.bb795:                                         ; preds = %if.then791
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.222, i64 0, i64 0)) #6, !dbg !9269
  br label %sw.epilog797, !dbg !9270

sw.default796:                                    ; preds = %if.then791
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9271
  br label %sw.epilog797, !dbg !9272

sw.epilog797:                                     ; preds = %sw.default796, %sw.bb795, %sw.bb794, %sw.bb793, %sw.bb792
  %107 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9273
  br label %cleanup1294, !dbg !9274

if.end798:                                        ; preds = %land.lhs.true788, %land.lhs.true783, %if.end770
  %108 = load i32, i32* @warn_missing_format_attribute, align 4, !dbg !9275
  %tobool799 = icmp eq i32 %108, 0, !dbg !9275
  br i1 %tobool799, label %if.end815, label %land.lhs.true800, !dbg !9277

land.lhs.true800:                                 ; preds = %if.end798
  %call801 = tail call zeroext i8 @check_missing_format_attribute(%union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9278
  %tobool803 = icmp eq i8 %call801, 0, !dbg !9278
  br i1 %tobool803, label %if.end815, label %if.then804, !dbg !9279

if.then804:                                       ; preds = %land.lhs.true800
  switch i32 %errtype, label %sw.default813 [
    i32 0, label %sw.bb805
    i32 1, label %sw.bb807
    i32 2, label %sw.bb809
    i32 3, label %sw.bb811
  ], !dbg !9280

sw.bb805:                                         ; preds = %if.then804
  %call806 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 131, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.223, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9282
  br label %if.end815, !dbg !9284

sw.bb807:                                         ; preds = %if.then804
  %call808 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 131, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.224, i64 0, i64 0)) #6, !dbg !9285
  br label %if.end815, !dbg !9286

sw.bb809:                                         ; preds = %if.then804
  %call810 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 131, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.225, i64 0, i64 0)) #6, !dbg !9287
  br label %if.end815, !dbg !9288

sw.bb811:                                         ; preds = %if.then804
  %call812 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %location, i32 131, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.226, i64 0, i64 0)) #6, !dbg !9289
  br label %if.end815, !dbg !9290

sw.default813:                                    ; preds = %if.then804
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9291
  br label %if.end815, !dbg !9292

if.end815:                                        ; preds = %land.lhs.true800, %if.end798, %sw.bb805, %sw.bb807, %sw.bb809, %sw.bb811, %sw.default813
  %bf.load817 = load i64, i64* %97, align 8, !dbg !9293
  %bf.cast81921 = and i64 %bf.load817, 65535, !dbg !9293
  %cmp820 = icmp eq i64 %bf.cast81921, 19, !dbg !9293
  br i1 %cmp820, label %if.then840, label %lor.lhs.false822, !dbg !9295

lor.lhs.false822:                                 ; preds = %if.end815
  %bf.load824 = load i64, i64* %100, align 8, !dbg !9296
  %bf.cast82622 = and i64 %bf.load824, 65535, !dbg !9296
  %cmp827 = icmp eq i64 %bf.cast82622, 19, !dbg !9296
  br i1 %cmp827, label %if.then840, label %lor.lhs.false829, !dbg !9297

lor.lhs.false829:                                 ; preds = %lor.lhs.false822
  %call830 = tail call fastcc i32 @comp_target_types(i32 %location, %union.tree_node* %type, %union.tree_node* %8) #7, !dbg !9298
  call void @llvm.dbg.value(metadata i32 %call830, metadata !8954, metadata !DIExpression()), !dbg !9225
  %tobool831 = icmp ne i32 %call830, 0, !dbg !9299
  %tobool834 = icmp ne i8 %call751, 0, !dbg !9300
  %or.cond7 = or i1 %tobool831, %tobool834, !dbg !9301
  br i1 %or.cond7, label %if.then840, label %lor.lhs.false835, !dbg !9301

lor.lhs.false835:                                 ; preds = %lor.lhs.false829
  %call836 = tail call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %mvl.0) #6, !dbg !9302
  %call837 = tail call %union.tree_node* @c_common_unsigned_type(%union.tree_node* %mvr.0) #6, !dbg !9303
  %cmp838 = icmp eq %union.tree_node* %call836, %call837, !dbg !9304
  br i1 %cmp838, label %if.then840, label %if.else1134, !dbg !9305

if.then840:                                       ; preds = %lor.lhs.false835, %lor.lhs.false829, %lor.lhs.false822, %if.end815
  %target_cmp.0 = phi i32 [ 0, %if.end815 ], [ 0, %lor.lhs.false822 ], [ %call830, %lor.lhs.false829 ], [ 0, %lor.lhs.false835 ], !dbg !9225
  call void @llvm.dbg.value(metadata i32 %target_cmp.0, metadata !8954, metadata !DIExpression()), !dbg !9225
  %109 = load i32, i32* @pedantic, align 4, !dbg !9306
  %tobool841 = icmp eq i32 %109, 0, !dbg !9306
  br i1 %tobool841, label %if.then840.if.else901_crit_edge, label %land.lhs.true842, !dbg !9309

if.then840.if.else901_crit_edge:                  ; preds = %if.then840
  %bf.load903.pre = load i64, i64* %100, align 8, !dbg !9310
  br label %if.else901, !dbg !9309

land.lhs.true842:                                 ; preds = %if.then840
  %bf.load844 = load i64, i64* %97, align 8, !dbg !9312
  %bf.cast84633 = and i64 %bf.load844, 65535, !dbg !9312
  %cmp847 = icmp eq i64 %bf.cast84633, 19, !dbg !9312
  br i1 %cmp847, label %land.lhs.true849, label %land.lhs.true842.lor.lhs.false856_crit_edge, !dbg !9313

land.lhs.true842.lor.lhs.false856_crit_edge:      ; preds = %land.lhs.true842
  %bf.load858.pre = load i64, i64* %100, align 8, !dbg !9314
  br label %lor.lhs.false856, !dbg !9313

land.lhs.true849:                                 ; preds = %land.lhs.true842
  %bf.load851 = load i64, i64* %100, align 8, !dbg !9315
  %bf.cast85336 = and i64 %bf.load851, 65535, !dbg !9316
  %cmp854 = icmp eq i64 %bf.cast85336, 20, !dbg !9316
  br i1 %cmp854, label %do.body873, label %lor.lhs.false856, !dbg !9317

lor.lhs.false856:                                 ; preds = %land.lhs.true842.lor.lhs.false856_crit_edge, %land.lhs.true849
  %bf.load858 = phi i64 [ %bf.load858.pre, %land.lhs.true842.lor.lhs.false856_crit_edge ], [ %bf.load851, %land.lhs.true849 ], !dbg !9314
  %bf.cast86034 = and i64 %bf.load858, 65535, !dbg !9314
  %cmp861 = icmp ne i64 %bf.cast86034, 19, !dbg !9314
  %tobool864 = icmp ne i8 %null_pointer_constant, 0, !dbg !9318
  %or.cond8 = or i1 %cmp861, %tobool864, !dbg !9319
  br i1 %or.cond8, label %if.else901, label %land.lhs.true865, !dbg !9319

land.lhs.true865:                                 ; preds = %lor.lhs.false856
  %cmp870 = icmp eq i64 %bf.cast84633, 20, !dbg !9320
  br i1 %cmp870, label %do.body873, label %if.else901, !dbg !9321

do.body873:                                       ; preds = %land.lhs.true849, %land.lhs.true865
  switch i32 %errtype, label %sw.default897 [
    i32 0, label %sw.bb874
    i32 1, label %sw.bb891
    i32 2, label %sw.bb893
    i32 3, label %sw.bb895
  ], !dbg !9322

sw.bb874:                                         ; preds = %do.body873
  %call875 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.227, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9324
  %tobool876 = icmp eq i8 %call875, 0, !dbg !9324
  br i1 %tobool876, label %if.end1166, label %if.then877, !dbg !9327

if.then877:                                       ; preds = %sw.bb874
  %tobool878 = icmp eq %union.tree_node* %fundecl, null, !dbg !9324
  br i1 %tobool878, label %cond.end888, label %land.lhs.true879, !dbg !9324

land.lhs.true879:                                 ; preds = %if.then877
  %locus881 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9324
  %110 = load i32, i32* %locus881, align 8, !dbg !9324
  %cmp882 = icmp ult i32 %110, 2, !dbg !9324
  br i1 %cmp882, label %cond.end888, label %cond.true884, !dbg !9324

cond.true884:                                     ; preds = %land.lhs.true879
  br label %cond.end888, !dbg !9324

cond.end888:                                      ; preds = %if.then877, %land.lhs.true879, %cond.true884
  %cond889 = phi i32 [ %110, %cond.true884 ], [ %location, %land.lhs.true879 ], [ %location, %if.then877 ], !dbg !9324
  tail call void (i32, i8*, ...) @inform(i32 %cond889, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9324
  br label %if.end1166, !dbg !9324

sw.bb891:                                         ; preds = %do.body873
  %call892 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.228, i64 0, i64 0)) #6, !dbg !9327
  br label %if.end1166, !dbg !9327

sw.bb893:                                         ; preds = %do.body873
  %call894 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.229, i64 0, i64 0)) #6, !dbg !9327
  br label %if.end1166, !dbg !9327

sw.bb895:                                         ; preds = %do.body873
  %call896 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 834, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.230, i64 0, i64 0)) #6, !dbg !9327
  br label %if.end1166, !dbg !9327

sw.default897:                                    ; preds = %do.body873
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5284, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9327
  br label %if.end1166, !dbg !9327

if.else901:                                       ; preds = %if.then840.if.else901_crit_edge, %lor.lhs.false856, %land.lhs.true865
  %bf.load1079 = phi i64 [ %bf.load903.pre, %if.then840.if.else901_crit_edge ], [ %bf.load858, %lor.lhs.false856 ], [ %bf.load858, %land.lhs.true865 ], !dbg !9310
  %bf.cast90523 = and i64 %bf.load1079, 65535, !dbg !9328
  %cmp906 = icmp eq i64 %bf.cast90523, 20, !dbg !9328
  br i1 %cmp906, label %if.else901.if.else1043_crit_edge, label %land.lhs.true908, !dbg !9329

if.else901.if.else1043_crit_edge:                 ; preds = %if.else901
  %bf.load1045.pre = load i64, i64* %97, align 8, !dbg !9330
  br label %if.else1043, !dbg !9329

land.lhs.true908:                                 ; preds = %if.else901
  %bf.load910 = load i64, i64* %97, align 8, !dbg !9332
  %bf.cast91228 = and i64 %bf.load910, 65535, !dbg !9333
  %cmp913 = icmp eq i64 %bf.cast91228, 20, !dbg !9333
  br i1 %cmp913, label %if.else1043, label %if.then915, !dbg !9334

if.then915:                                       ; preds = %land.lhs.true908
  %bf.lshr918 = lshr i64 %bf.load1079, 20, !dbg !9335
  %111 = trunc i64 %bf.lshr918 to i32, !dbg !9335
  %bf.cast920 = and i32 %111, 1, !dbg !9335
  %112 = lshr i64 %bf.load1079, 18, !dbg !9335
  %113 = trunc i64 %112 to i32, !dbg !9335
  %mul927 = and i32 %113, 2, !dbg !9335
  %or928 = or i32 %bf.cast920, %mul927, !dbg !9335
  %type929 = bitcast %union.tree_node* %96 to %struct.tree_type*, !dbg !9335
  %restrict_flag930 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type929, i64 0, i32 6, !dbg !9335
  %bf.load931 = load i32, i32* %restrict_flag930, align 4, !dbg !9335
  %114 = lshr i32 %bf.load931, 11, !dbg !9335
  %mul934 = and i32 %114, 4, !dbg !9335
  %or935 = or i32 %or928, %mul934, !dbg !9335
  %bf.lshr938 = lshr i64 %bf.load910, 20, !dbg !9338
  %115 = trunc i64 %bf.lshr938 to i32, !dbg !9338
  %bf.cast940 = and i32 %115, 1, !dbg !9338
  %116 = lshr i64 %bf.load910, 18, !dbg !9338
  %117 = trunc i64 %116 to i32, !dbg !9338
  %mul947 = and i32 %117, 2, !dbg !9338
  %or948 = or i32 %bf.cast940, %mul947, !dbg !9338
  %type949 = bitcast %union.tree_node* %95 to %struct.tree_type*, !dbg !9338
  %restrict_flag950 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type949, i64 0, i32 6, !dbg !9338
  %bf.load951 = load i32, i32* %restrict_flag950, align 4, !dbg !9338
  %118 = lshr i32 %bf.load951, 11, !dbg !9338
  %mul954 = and i32 %118, 4, !dbg !9338
  %or955 = or i32 %or948, %mul954, !dbg !9338
  %neg956 = xor i32 %or955, -1, !dbg !9339
  %and957 = and i32 %or935, %neg956, !dbg !9340
  %tobool958 = icmp eq i32 %and957, 0, !dbg !9340
  br i1 %tobool958, label %if.else992, label %if.then959, !dbg !9341

if.then959:                                       ; preds = %if.then915
  %call960 = tail call zeroext i8 @objc_type_quals_match(%union.tree_node* %95, %union.tree_node* %96) #6, !dbg !9342
  %tobool961 = icmp eq i8 %call960, 0, !dbg !9342
  br i1 %tobool961, label %do.body963, label %if.end1166, !dbg !9345

do.body963:                                       ; preds = %if.then959
  switch i32 %errtype, label %sw.default987 [
    i32 0, label %sw.bb964
    i32 1, label %sw.bb981
    i32 2, label %sw.bb983
    i32 3, label %sw.bb985
  ], !dbg !9346

sw.bb964:                                         ; preds = %do.body963
  %call965 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.213, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9348
  %tobool966 = icmp eq i8 %call965, 0, !dbg !9348
  br i1 %tobool966, label %if.end1166, label %if.then967, !dbg !9351

if.then967:                                       ; preds = %sw.bb964
  %tobool968 = icmp eq %union.tree_node* %fundecl, null, !dbg !9348
  br i1 %tobool968, label %cond.end978, label %land.lhs.true969, !dbg !9348

land.lhs.true969:                                 ; preds = %if.then967
  %locus971 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9348
  %119 = load i32, i32* %locus971, align 8, !dbg !9348
  %cmp972 = icmp ult i32 %119, 2, !dbg !9348
  br i1 %cmp972, label %cond.end978, label %cond.true974, !dbg !9348

cond.true974:                                     ; preds = %land.lhs.true969
  br label %cond.end978, !dbg !9348

cond.end978:                                      ; preds = %if.then967, %land.lhs.true969, %cond.true974
  %cond979 = phi i32 [ %119, %cond.true974 ], [ %location, %land.lhs.true969 ], [ %location, %if.then967 ], !dbg !9348
  tail call void (i32, i8*, ...) @inform(i32 %cond979, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9348
  br label %if.end1166, !dbg !9348

sw.bb981:                                         ; preds = %do.body963
  %call982 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.214, i64 0, i64 0)) #6, !dbg !9351
  br label %if.end1166, !dbg !9351

sw.bb983:                                         ; preds = %do.body963
  %call984 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.215, i64 0, i64 0)) #6, !dbg !9351
  br label %if.end1166, !dbg !9351

sw.bb985:                                         ; preds = %do.body963
  %call986 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.216, i64 0, i64 0)) #6, !dbg !9351
  br label %if.end1166, !dbg !9351

sw.default987:                                    ; preds = %do.body963
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5305, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9351
  br label %if.end1166, !dbg !9351

if.else992:                                       ; preds = %if.then915
  %cmp997 = icmp eq i64 %bf.cast91228, 19, !dbg !9352
  br i1 %cmp997, label %if.end1166, label %lor.lhs.false999, !dbg !9354

lor.lhs.false999:                                 ; preds = %if.else992
  %cmp1004 = icmp ne i64 %bf.cast90523, 19, !dbg !9355
  %tobool1007 = icmp eq i32 %target_cmp.0, 0, !dbg !9356
  %or.cond9.not = and i1 %tobool1007, %cmp1004, !dbg !9357
  %120 = load i32, i32* @warn_pointer_sign, align 4, !dbg !9358
  %tobool1010 = icmp ne i32 %120, 0, !dbg !9358
  %or.cond16 = and i1 %or.cond9.not, %tobool1010, !dbg !9357
  br i1 %or.cond16, label %do.body1012, label %if.end1166, !dbg !9357

do.body1012:                                      ; preds = %lor.lhs.false999
  switch i32 %errtype, label %sw.default1036 [
    i32 0, label %sw.bb1013
    i32 1, label %sw.bb1030
    i32 2, label %sw.bb1032
    i32 3, label %sw.bb1034
  ], !dbg !9360

sw.bb1013:                                        ; preds = %do.body1012
  %call1014 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 163, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.231, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9362
  %tobool1015 = icmp eq i8 %call1014, 0, !dbg !9362
  br i1 %tobool1015, label %if.end1166, label %if.then1016, !dbg !9365

if.then1016:                                      ; preds = %sw.bb1013
  %tobool1017 = icmp eq %union.tree_node* %fundecl, null, !dbg !9362
  br i1 %tobool1017, label %cond.end1027, label %land.lhs.true1018, !dbg !9362

land.lhs.true1018:                                ; preds = %if.then1016
  %locus1020 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9362
  %121 = load i32, i32* %locus1020, align 8, !dbg !9362
  %cmp1021 = icmp ult i32 %121, 2, !dbg !9362
  br i1 %cmp1021, label %cond.end1027, label %cond.true1023, !dbg !9362

cond.true1023:                                    ; preds = %land.lhs.true1018
  br label %cond.end1027, !dbg !9362

cond.end1027:                                     ; preds = %if.then1016, %land.lhs.true1018, %cond.true1023
  %cond1028 = phi i32 [ %121, %cond.true1023 ], [ %location, %land.lhs.true1018 ], [ %location, %if.then1016 ], !dbg !9362
  tail call void (i32, i8*, ...) @inform(i32 %cond1028, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9362
  br label %if.end1166, !dbg !9362

sw.bb1030:                                        ; preds = %do.body1012
  %call1031 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 163, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.232, i64 0, i64 0)) #6, !dbg !9365
  br label %if.end1166, !dbg !9365

sw.bb1032:                                        ; preds = %do.body1012
  %call1033 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 163, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.233, i64 0, i64 0)) #6, !dbg !9365
  br label %if.end1166, !dbg !9365

sw.bb1034:                                        ; preds = %do.body1012
  %call1035 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 163, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.234, i64 0, i64 0)) #6, !dbg !9365
  br label %if.end1166, !dbg !9365

sw.default1036:                                   ; preds = %do.body1012
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9365
  br label %if.end1166, !dbg !9365

if.else1043:                                      ; preds = %if.else901.if.else1043_crit_edge, %land.lhs.true908
  %bf.load1059 = phi i64 [ %bf.load1045.pre, %if.else901.if.else1043_crit_edge ], [ %bf.load910, %land.lhs.true908 ], !dbg !9330
  %bf.cast104724 = and i64 %bf.load1059, 65535, !dbg !9366
  %cmp1048 = icmp eq i64 %bf.cast104724, 20, !dbg !9366
  br i1 %cmp1048, label %land.lhs.true1050, label %if.end1166, !dbg !9367

land.lhs.true1050:                                ; preds = %if.else1043
  br i1 %cmp906, label %if.then1057, label %if.end1166, !dbg !9368

if.then1057:                                      ; preds = %land.lhs.true1050
  %bf.lshr1060 = lshr i64 %bf.load1059, 20, !dbg !9369
  %122 = trunc i64 %bf.lshr1060 to i32, !dbg !9369
  %bf.cast1062 = and i32 %122, 1, !dbg !9369
  %123 = lshr i64 %bf.load1059, 18, !dbg !9369
  %124 = trunc i64 %123 to i32, !dbg !9369
  %mul1069 = and i32 %124, 2, !dbg !9369
  %or1070 = or i32 %bf.cast1062, %mul1069, !dbg !9369
  %type1071 = bitcast %union.tree_node* %95 to %struct.tree_type*, !dbg !9369
  %restrict_flag1072 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1071, i64 0, i32 6, !dbg !9369
  %bf.load1073 = load i32, i32* %restrict_flag1072, align 4, !dbg !9369
  %125 = lshr i32 %bf.load1073, 11, !dbg !9369
  %mul1076 = and i32 %125, 4, !dbg !9369
  %or1077 = or i32 %or1070, %mul1076, !dbg !9369
  %bf.lshr1080 = lshr i64 %bf.load1079, 20, !dbg !9372
  %126 = trunc i64 %bf.lshr1080 to i32, !dbg !9372
  %bf.cast1082 = and i32 %126, 1, !dbg !9372
  %127 = lshr i64 %bf.load1079, 18, !dbg !9372
  %128 = trunc i64 %127 to i32, !dbg !9372
  %mul1089 = and i32 %128, 2, !dbg !9372
  %or1090 = or i32 %bf.cast1082, %mul1089, !dbg !9372
  %type1091 = bitcast %union.tree_node* %96 to %struct.tree_type*, !dbg !9372
  %restrict_flag1092 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1091, i64 0, i32 6, !dbg !9372
  %bf.load1093 = load i32, i32* %restrict_flag1092, align 4, !dbg !9372
  %129 = lshr i32 %bf.load1093, 11, !dbg !9372
  %mul1096 = and i32 %129, 4, !dbg !9372
  %or1097 = or i32 %or1090, %mul1096, !dbg !9372
  %neg1098 = xor i32 %or1097, -1, !dbg !9373
  %and1099 = and i32 %or1077, %neg1098, !dbg !9374
  %tobool1100 = icmp eq i32 %and1099, 0, !dbg !9374
  br i1 %tobool1100, label %if.end1166, label %do.body1102, !dbg !9375

do.body1102:                                      ; preds = %if.then1057
  switch i32 %errtype, label %sw.default1126 [
    i32 0, label %sw.bb1103
    i32 1, label %sw.bb1120
    i32 2, label %sw.bb1122
    i32 3, label %sw.bb1124
  ], !dbg !9376

sw.bb1103:                                        ; preds = %do.body1102
  %call1104 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.209, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9378
  %tobool1105 = icmp eq i8 %call1104, 0, !dbg !9378
  br i1 %tobool1105, label %if.end1166, label %if.then1106, !dbg !9381

if.then1106:                                      ; preds = %sw.bb1103
  %tobool1107 = icmp eq %union.tree_node* %fundecl, null, !dbg !9378
  br i1 %tobool1107, label %cond.end1117, label %land.lhs.true1108, !dbg !9378

land.lhs.true1108:                                ; preds = %if.then1106
  %locus1110 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9378
  %130 = load i32, i32* %locus1110, align 8, !dbg !9378
  %cmp1111 = icmp ult i32 %130, 2, !dbg !9378
  br i1 %cmp1111, label %cond.end1117, label %cond.true1113, !dbg !9378

cond.true1113:                                    ; preds = %land.lhs.true1108
  br label %cond.end1117, !dbg !9378

cond.end1117:                                     ; preds = %if.then1106, %land.lhs.true1108, %cond.true1113
  %cond1118 = phi i32 [ %130, %cond.true1113 ], [ %location, %land.lhs.true1108 ], [ %location, %if.then1106 ], !dbg !9378
  tail call void (i32, i8*, ...) @inform(i32 %cond1118, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9378
  br label %if.end1166, !dbg !9378

sw.bb1120:                                        ; preds = %do.body1102
  %call1121 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.210, i64 0, i64 0)) #6, !dbg !9381
  br label %if.end1166, !dbg !9381

sw.bb1122:                                        ; preds = %do.body1102
  %call1123 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.211, i64 0, i64 0)) #6, !dbg !9381
  br label %if.end1166, !dbg !9381

sw.bb1124:                                        ; preds = %do.body1102
  %call1125 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.212, i64 0, i64 0)) #6, !dbg !9381
  br label %if.end1166, !dbg !9381

sw.default1126:                                   ; preds = %do.body1102
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5342, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9381
  br label %if.end1166, !dbg !9381

if.else1134:                                      ; preds = %lor.lhs.false835
  %tobool1135 = icmp eq i8 %objc_ok.0, 0, !dbg !9382
  br i1 %tobool1135, label %do.body1137, label %if.end1166, !dbg !9384

do.body1137:                                      ; preds = %if.else1134
  switch i32 %errtype, label %sw.default1161 [
    i32 0, label %sw.bb1138
    i32 1, label %sw.bb1155
    i32 2, label %sw.bb1157
    i32 3, label %sw.bb1159
  ], !dbg !9385

sw.bb1138:                                        ; preds = %do.body1137
  %call1139 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.235, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9387
  %tobool1140 = icmp eq i8 %call1139, 0, !dbg !9387
  br i1 %tobool1140, label %if.end1166, label %if.then1141, !dbg !9390

if.then1141:                                      ; preds = %sw.bb1138
  %tobool1142 = icmp eq %union.tree_node* %fundecl, null, !dbg !9387
  br i1 %tobool1142, label %cond.end1152, label %land.lhs.true1143, !dbg !9387

land.lhs.true1143:                                ; preds = %if.then1141
  %locus1145 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9387
  %131 = load i32, i32* %locus1145, align 8, !dbg !9387
  %cmp1146 = icmp ult i32 %131, 2, !dbg !9387
  br i1 %cmp1146, label %cond.end1152, label %cond.true1148, !dbg !9387

cond.true1148:                                    ; preds = %land.lhs.true1143
  br label %cond.end1152, !dbg !9387

cond.end1152:                                     ; preds = %if.then1141, %land.lhs.true1143, %cond.true1148
  %cond1153 = phi i32 [ %131, %cond.true1148 ], [ %location, %land.lhs.true1143 ], [ %location, %if.then1141 ], !dbg !9387
  tail call void (i32, i8*, ...) @inform(i32 %cond1153, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9387
  br label %if.end1166, !dbg !9387

sw.bb1155:                                        ; preds = %do.body1137
  %call1156 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.236, i64 0, i64 0)) #6, !dbg !9390
  br label %if.end1166, !dbg !9390

sw.bb1157:                                        ; preds = %do.body1137
  %call1158 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.237, i64 0, i64 0)) #6, !dbg !9390
  br label %if.end1166, !dbg !9390

sw.bb1159:                                        ; preds = %do.body1137
  %call1160 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.238, i64 0, i64 0)) #6, !dbg !9390
  br label %if.end1166, !dbg !9390

sw.default1161:                                   ; preds = %do.body1137
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5354, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9390
  br label %if.end1166, !dbg !9390

if.end1166:                                       ; preds = %sw.bb874, %sw.bb964, %if.then959, %sw.bb1013, %sw.bb1103, %if.then1057, %sw.bb1138, %if.else1134, %lor.lhs.false999, %cond.end1152, %sw.default1161, %sw.bb1159, %sw.bb1157, %sw.bb1155, %cond.end888, %sw.default897, %sw.bb895, %sw.bb893, %sw.bb891, %if.else1043, %land.lhs.true1050, %sw.bb1120, %sw.bb1122, %sw.bb1124, %sw.default1126, %cond.end1117, %sw.bb981, %sw.bb983, %sw.bb985, %sw.default987, %cond.end978, %cond.end1027, %sw.default1036, %sw.bb1034, %sw.bb1032, %sw.bb1030, %if.else992
  %call1167 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call94) #6, !dbg !9391
  br label %cleanup1294, !dbg !9392

if.else1176:                                      ; preds = %land.lhs.true721
  %cmp1177 = icmp eq i32 %bf.cast, 10, !dbg !9393
  %cmp1180 = icmp eq i32 %bf.cast34, 15, !dbg !9394
  %or.cond10 = and i1 %cmp1177, %cmp1180, !dbg !9395
  br i1 %or.cond10, label %if.then1182, label %if.else1183, !dbg !9395

if.then1182:                                      ; preds = %if.else1176
  tail call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.239, i64 0, i64 0)) #6, !dbg !9396
  %132 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9398
  br label %cleanup1294, !dbg !9399

if.else1183:                                      ; preds = %if.else1176
  %cmp1187 = icmp eq i32 %bf.cast34, 8, !dbg !9400
  %or.cond11 = and i1 %cmp1177, %cmp1187, !dbg !9401
  br i1 %or.cond11, label %if.then1189, label %if.else1222, !dbg !9401

if.then1189:                                      ; preds = %if.else1183
  %tobool1190 = icmp eq i8 %null_pointer_constant, 0, !dbg !9402
  br i1 %tobool1190, label %do.body1192, label %if.end1220, !dbg !9405

do.body1192:                                      ; preds = %if.then1189
  switch i32 %errtype, label %sw.default1216 [
    i32 0, label %sw.bb1193
    i32 1, label %sw.bb1210
    i32 2, label %sw.bb1212
    i32 3, label %sw.bb1214
  ], !dbg !9406

sw.bb1193:                                        ; preds = %do.body1192
  %call1194 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.240, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9408
  %tobool1195 = icmp eq i8 %call1194, 0, !dbg !9408
  br i1 %tobool1195, label %if.end1220, label %if.then1196, !dbg !9411

if.then1196:                                      ; preds = %sw.bb1193
  %tobool1197 = icmp eq %union.tree_node* %fundecl, null, !dbg !9408
  br i1 %tobool1197, label %cond.end1207, label %land.lhs.true1198, !dbg !9408

land.lhs.true1198:                                ; preds = %if.then1196
  %locus1200 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9408
  %133 = load i32, i32* %locus1200, align 8, !dbg !9408
  %cmp1201 = icmp ult i32 %133, 2, !dbg !9408
  br i1 %cmp1201, label %cond.end1207, label %cond.true1203, !dbg !9408

cond.true1203:                                    ; preds = %land.lhs.true1198
  br label %cond.end1207, !dbg !9408

cond.end1207:                                     ; preds = %if.then1196, %land.lhs.true1198, %cond.true1203
  %cond1208 = phi i32 [ %133, %cond.true1203 ], [ %location, %land.lhs.true1198 ], [ %location, %if.then1196 ], !dbg !9408
  tail call void (i32, i8*, ...) @inform(i32 %cond1208, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9408
  br label %if.end1220, !dbg !9408

sw.bb1210:                                        ; preds = %do.body1192
  %call1211 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.241, i64 0, i64 0)) #6, !dbg !9411
  br label %if.end1220, !dbg !9411

sw.bb1212:                                        ; preds = %do.body1192
  %call1213 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.242, i64 0, i64 0)) #6, !dbg !9411
  br label %if.end1220, !dbg !9411

sw.bb1214:                                        ; preds = %do.body1192
  %call1215 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.243, i64 0, i64 0)) #6, !dbg !9411
  br label %if.end1220, !dbg !9411

sw.default1216:                                   ; preds = %do.body1192
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5379, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9411
  br label %if.end1220, !dbg !9411

if.end1220:                                       ; preds = %sw.bb1193, %if.then1189, %sw.bb1210, %sw.bb1212, %sw.bb1214, %sw.default1216, %cond.end1207
  %call1221 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call94) #6, !dbg !9412
  br label %cleanup1294, !dbg !9413

if.else1222:                                      ; preds = %if.else1183
  %cmp1223 = icmp eq i32 %bf.cast, 8, !dbg !9414
  %cmp1226 = icmp eq i32 %bf.cast34, 10, !dbg !9415
  %or.cond12 = and i1 %cmp1223, %cmp1226, !dbg !9416
  br i1 %or.cond12, label %do.body1229, label %if.else1258, !dbg !9416

land.lhs.true1225:                                ; preds = %if.end196, %if.end210, %if.else715
  %cmp1226.old = icmp eq i32 %bf.cast34, 10, !dbg !9415
  br i1 %cmp1226.old, label %do.body1229, label %if.else1258, !dbg !9417

do.body1229:                                      ; preds = %land.lhs.true1225, %if.else1222
  switch i32 %errtype, label %sw.default1253 [
    i32 0, label %sw.bb1230
    i32 1, label %sw.bb1247
    i32 2, label %sw.bb1249
    i32 3, label %sw.bb1251
  ], !dbg !9418

sw.bb1230:                                        ; preds = %do.body1229
  %call1231 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.244, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9421
  %tobool1232 = icmp eq i8 %call1231, 0, !dbg !9421
  br i1 %tobool1232, label %do.end1256, label %if.then1233, !dbg !9424

if.then1233:                                      ; preds = %sw.bb1230
  %tobool1234 = icmp eq %union.tree_node* %fundecl, null, !dbg !9421
  br i1 %tobool1234, label %cond.end1244, label %land.lhs.true1235, !dbg !9421

land.lhs.true1235:                                ; preds = %if.then1233
  %locus1237 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9421
  %134 = load i32, i32* %locus1237, align 8, !dbg !9421
  %cmp1238 = icmp ult i32 %134, 2, !dbg !9421
  br i1 %cmp1238, label %cond.end1244, label %cond.true1240, !dbg !9421

cond.true1240:                                    ; preds = %land.lhs.true1235
  br label %cond.end1244, !dbg !9421

cond.end1244:                                     ; preds = %if.then1233, %land.lhs.true1235, %cond.true1240
  %cond1245 = phi i32 [ %134, %cond.true1240 ], [ %location, %land.lhs.true1235 ], [ %location, %if.then1233 ], !dbg !9421
  tail call void (i32, i8*, ...) @inform(i32 %cond1245, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9421
  br label %do.end1256, !dbg !9421

sw.bb1247:                                        ; preds = %do.body1229
  %call1248 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.245, i64 0, i64 0)) #6, !dbg !9424
  br label %do.end1256, !dbg !9424

sw.bb1249:                                        ; preds = %do.body1229
  %call1250 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.246, i64 0, i64 0)) #6, !dbg !9424
  br label %do.end1256, !dbg !9424

sw.bb1251:                                        ; preds = %do.body1229
  %call1252 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.247, i64 0, i64 0)) #6, !dbg !9424
  br label %do.end1256, !dbg !9424

sw.default1253:                                   ; preds = %do.body1229
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9424
  br label %do.end1256, !dbg !9424

do.end1256:                                       ; preds = %sw.bb1230, %cond.end1244, %sw.default1253, %sw.bb1251, %sw.bb1249, %sw.bb1247
  %call1257 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call94) #6, !dbg !9425
  br label %cleanup1294, !dbg !9426

if.else1258:                                      ; preds = %land.lhs.true1225, %if.else1222
  %cmp1259 = icmp eq i32 %bf.cast, 7, !dbg !9427
  %cmp1262 = icmp eq i32 %bf.cast34, 10, !dbg !9428
  %or.cond13 = and i1 %cmp1259, %cmp1262, !dbg !9429
  br i1 %or.cond13, label %if.then1264, label %if.end1275, !dbg !9429

land.lhs.true1261:                                ; preds = %if.end196, %if.end210, %if.else715
  %cmp1262.old = icmp eq i32 %bf.cast34, 10, !dbg !9428
  br i1 %cmp1262.old, label %if.then1264, label %if.end1275, !dbg !9430

if.then1264:                                      ; preds = %if.else1258, %land.lhs.true1261
  %135 = load i8, i8* @in_late_binary_op, align 1, !dbg !9431
  call void @llvm.dbg.value(metadata i8 %135, metadata !8963, metadata !DIExpression()), !dbg !9432
  store i8 1, i8* @in_late_binary_op, align 1, !dbg !9433
  %call1267 = tail call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call94) #6, !dbg !9434
  call void @llvm.dbg.value(metadata %union.tree_node* %call1267, metadata !8957, metadata !DIExpression()), !dbg !9432
  store i8 %135, i8* @in_late_binary_op, align 1, !dbg !9435
  br label %cleanup1294

if.end1275:                                       ; preds = %if.else1258, %land.lhs.true1261, %if.else715, %if.end210, %if.end196, %if.else149, %if.end97, %cleanup711
  switch i32 %errtype, label %sw.default1292 [
    i32 0, label %sw.bb1276
    i32 1, label %sw.bb1289
    i32 2, label %sw.bb1290
    i32 3, label %sw.bb1291
  ], !dbg !9436

sw.bb1276:                                        ; preds = %if.end1275
  call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.248, i64 0, i64 0), i32 %parmnum.addr.1, %union.tree_node* %rname.1) #6, !dbg !9437
  %tobool1277 = icmp eq %union.tree_node* %fundecl, null, !dbg !9439
  br i1 %tobool1277, label %cond.false1286, label %land.lhs.true1278, !dbg !9440

land.lhs.true1278:                                ; preds = %sw.bb1276
  %locus1280 = getelementptr inbounds %union.tree_node, %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9441
  %136 = load i32, i32* %locus1280, align 8, !dbg !9441
  %cmp1281 = icmp ult i32 %136, 2, !dbg !9441
  br i1 %cmp1281, label %cond.false1286, label %cond.true1283, !dbg !9442

cond.true1283:                                    ; preds = %land.lhs.true1278
  br label %cond.end1287, !dbg !9442

cond.false1286:                                   ; preds = %sw.bb1276, %land.lhs.true1278
  br label %cond.end1287, !dbg !9442

cond.end1287:                                     ; preds = %cond.false1286, %cond.true1283
  %cond1288.in = phi i32* [ %locus1280, %cond.true1283 ], [ @input_location, %cond.false1286 ]
  %cond1288 = load i32, i32* %cond1288.in, align 4, !dbg !9442
  call void (i32, i8*, ...) @inform(i32 %cond1288, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.205, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9443
  br label %sw.epilog1293, !dbg !9444

sw.bb1289:                                        ; preds = %if.end1275
  call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.249, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9445
  br label %sw.epilog1293, !dbg !9446

sw.bb1290:                                        ; preds = %if.end1275
  call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.250, i64 0, i64 0), %union.tree_node* %type, %union.tree_node* %8) #6, !dbg !9447
  br label %sw.epilog1293, !dbg !9448

sw.bb1291:                                        ; preds = %if.end1275
  call void (i32, i8*, ...) @error_at(i32 %location, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.251, i64 0, i64 0), %union.tree_node* %8, %union.tree_node* %type) #6, !dbg !9449
  br label %sw.epilog1293, !dbg !9450

sw.default1292:                                   ; preds = %if.end1275
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 5429, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9451
  br label %sw.epilog1293, !dbg !9452

sw.epilog1293:                                    ; preds = %sw.default1292, %sw.bb1291, %sw.bb1290, %sw.bb1289, %cond.end1287
  %137 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9453
  br label %cleanup1294, !dbg !9454

cleanup1294:                                      ; preds = %sw.epilog797, %if.end1166, %if.end188, %if.then192, %if.end83, %cleanup711, %sw.epilog1293, %if.then1264, %do.end1256, %if.end1220, %if.then1182, %if.then208, %if.then147, %if.end135, %if.then113, %if.then109, %if.then96, %if.then92, %if.then36
  %retval.2 = phi %union.tree_node* [ %11, %if.then36 ], [ %28, %if.then92 ], [ %call94, %if.then96 ], [ %call136, %if.end135 ], [ %33, %if.then113 ], [ %32, %if.then109 ], [ %call148, %if.then147 ], [ %call209, %if.then208 ], [ %retval.0, %cleanup711 ], [ %137, %sw.epilog1293 ], [ %132, %if.then1182 ], [ %call1221, %if.end1220 ], [ %call1257, %do.end1256 ], [ %call1267, %if.then1264 ], [ %rhs.addr.0, %if.end83 ], [ %call189, %if.then192 ], [ %call189, %if.end188 ], [ %call1167, %if.end1166 ], [ %107, %sw.epilog797 ], !dbg !8964
  ret %union.tree_node* %retval.2, !dbg !9455
}

declare dso_local %union.tree_node* @objc_generate_write_barrier(%union.tree_node*, i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @store_init_value(i32 %init_loc, %union.tree_node* %decl, %union.tree_node* %init, %union.tree_node* %origtype) local_unnamed_addr #5 !dbg !9456 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata i32 %init_loc, metadata !9460, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !9461, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %init, metadata !9462, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype, metadata !9463, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i8 0, metadata !9466, metadata !DIExpression()), !dbg !9473
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9474
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !9474
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9465, metadata !DIExpression()), !dbg !9473
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9475
  %bf.load = load i64, i64* %1, align 8, !dbg !9475
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !9477
  %cmp = icmp eq i64 %bf.cast3, 0, !dbg !9477
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !9478

if.end:                                           ; preds = %entry
  %tobool = icmp eq %union.tree_node* %init, null, !dbg !9479
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9481

if.then2:                                         ; preds = %if.end
  %call = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* nonnull %init) #7, !dbg !9482
  call void @llvm.dbg.value(metadata i8 %call, metadata !9466, metadata !DIExpression()), !dbg !9473
  br label %if.end3, !dbg !9483

if.end3:                                          ; preds = %if.end, %if.then2
  %npc.0 = phi i8 [ %call, %if.then2 ], [ 0, %if.end ], !dbg !9473
  call void @llvm.dbg.value(metadata i8 %npc.0, metadata !9466, metadata !DIExpression()), !dbg !9473
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9484
  %bf.load5 = load i64, i64* %2, align 8, !dbg !9484
  %bf.lshr = lshr i64 %bf.load5, 26, !dbg !9484
  %3 = trunc i64 %bf.lshr to i32, !dbg !9484
  %bf.cast7 = and i32 %3, 1, !dbg !9484
  %call8 = tail call fastcc %union.tree_node* @digest_init(i32 %init_loc, %union.tree_node* %0, %union.tree_node* %init, %union.tree_node* %origtype, i8 zeroext %npc.0, i8 zeroext 1, i32 %bf.cast7) #7, !dbg !9485
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !9464, metadata !DIExpression()), !dbg !9473
  %4 = load i32, i32* @input_location, align 4, !dbg !9486
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %4) #6, !dbg !9486
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !9486
  %5 = load i8, i8* %sysp, align 8, !dbg !9486
  %cmp9 = icmp eq i8 %5, 0, !dbg !9486
  br i1 %cmp9, label %land.lhs.true, label %if.end54, !dbg !9488

land.lhs.true:                                    ; preds = %if.end3
  %6 = bitcast %union.tree_node** %type1 to i64**, !dbg !9489
  %7 = load i64*, i64** %6, align 8, !dbg !9489
  %bf.load14 = load i64, i64* %7, align 8, !dbg !9489
  %bf.cast164 = and i64 %bf.load14, 65535, !dbg !9489
  %cmp17 = icmp eq i64 %bf.cast164, 15, !dbg !9489
  br i1 %cmp17, label %land.lhs.true45, label %lor.lhs.false, !dbg !9489

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp25 = icmp eq i64 %bf.cast164, 16, !dbg !9489
  br i1 %cmp25, label %land.lhs.true45, label %lor.lhs.false27, !dbg !9489

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %cmp34 = icmp eq i64 %bf.cast164, 17, !dbg !9489
  br i1 %cmp34, label %land.lhs.true45, label %lor.lhs.false36, !dbg !9489

lor.lhs.false36:                                  ; preds = %lor.lhs.false27
  %cmp43 = icmp eq i64 %bf.cast164, 18, !dbg !9489
  br i1 %cmp43, label %land.lhs.true45, label %if.end54, !dbg !9490

land.lhs.true45:                                  ; preds = %lor.lhs.false36, %lor.lhs.false27, %lor.lhs.false, %land.lhs.true
  %bf.load47 = load i64, i64* %2, align 8, !dbg !9491
  %bf.cast5017 = and i64 %bf.load47, 67108864, !dbg !9491
  %tobool51 = icmp eq i64 %bf.cast5017, 0, !dbg !9491
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !9492

if.then52:                                        ; preds = %land.lhs.true45
  %call53 = call zeroext i8 (i32, i8*, ...) @warning(i32 202, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.79, i64 0, i64 0)) #6, !dbg !9493
  br label %if.end54, !dbg !9493

if.end54:                                         ; preds = %land.lhs.true45, %if.end3, %if.then52, %lor.lhs.false36
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9494
  store %union.tree_node* %call8, %union.tree_node** %initial, align 8, !dbg !9495
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9473
  br label %while.cond, !dbg !9496

while.cond:                                       ; preds = %while.body, %if.end54
  %value.0 = phi %union.tree_node* [ %call8, %if.end54 ], [ %12, %while.body ], !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !9464, metadata !DIExpression()), !dbg !9473
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9496
  %bf.load56 = load i64, i64* %9, align 8, !dbg !9496
  %bf.cast588 = and i64 %bf.load56, 65535, !dbg !9496
  %cmp59 = icmp eq i64 %bf.cast588, 116, !dbg !9496
  br i1 %cmp59, label %land.lhs.true75, label %lor.lhs.false61, !dbg !9496

lor.lhs.false61:                                  ; preds = %while.cond
  %10 = or i64 %bf.cast588, 4, !dbg !9496
  %11 = icmp eq i64 %10, 117, !dbg !9496
  br i1 %11, label %land.lhs.true75, label %while.end, !dbg !9496

land.lhs.true75:                                  ; preds = %lor.lhs.false61, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9496
  %12 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9496
  %cmp76 = icmp eq %union.tree_node* %12, %8, !dbg !9496
  br i1 %cmp76, label %while.end, label %land.rhs, !dbg !9496

land.rhs:                                         ; preds = %land.lhs.true75
  %type79 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9496
  %13 = load %union.tree_node*, %union.tree_node** %type79, align 8, !dbg !9496
  %type84 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9496
  %14 = load %union.tree_node*, %union.tree_node** %type84, align 8, !dbg !9496
  %cmp85 = icmp eq %union.tree_node* %13, %14, !dbg !9496
  br i1 %cmp85, label %while.body, label %while.end, !dbg !9496

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !9464, metadata !DIExpression()), !dbg !9473
  br label %while.cond, !dbg !9496, !llvm.loop !9497

while.end:                                        ; preds = %lor.lhs.false61, %land.lhs.true75, %land.rhs
  %value.0.lcssa = phi %union.tree_node* [ %value.0, %lor.lhs.false61 ], [ %value.0, %land.lhs.true75 ], [ %value.0, %land.rhs ], !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0.lcssa, metadata !9464, metadata !DIExpression()), !dbg !9473
  %bf.load91 = load i64, i64* %2, align 8, !dbg !9498
  %bf.cast9411 = and i64 %bf.load91, 67108864, !dbg !9498
  %tobool95 = icmp eq i64 %bf.cast9411, 0, !dbg !9498
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !9500

if.then96:                                        ; preds = %while.end
  call void @constant_expression_warning(%union.tree_node* %value.0.lcssa) #6, !dbg !9501
  br label %if.end97, !dbg !9501

if.end97:                                         ; preds = %while.end, %if.then96
  %bf.load99 = load i64, i64* %1, align 8, !dbg !9502
  %bf.cast10112 = and i64 %bf.load99, 65535, !dbg !9503
  %cmp102 = icmp eq i64 %bf.cast10112, 15, !dbg !9503
  br i1 %cmp102, label %land.lhs.true104, label %cleanup.cont, !dbg !9504

land.lhs.true104:                                 ; preds = %if.end97
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9505
  %15 = bitcast i32* %values to %union.tree_node**, !dbg !9505
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !9505
  %cmp106 = icmp eq %union.tree_node* %16, null, !dbg !9506
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9507
  %cmp109 = icmp ne %union.tree_node* %value.0.lcssa, %17, !dbg !9508
  %or.cond = and i1 %cmp106, %cmp109, !dbg !9509
  br i1 %or.cond, label %while.cond112.preheader, label %cleanup.cont, !dbg !9509

while.cond112.preheader:                          ; preds = %land.lhs.true104
  br label %while.cond112, !dbg !9510

while.cond112:                                    ; preds = %while.cond112.preheader, %while.body150
  %inside_init.0 = phi %union.tree_node* [ %21, %while.body150 ], [ %init, %while.cond112.preheader ], !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0, metadata !9467, metadata !DIExpression()), !dbg !9511
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9510
  %bf.load114 = load i64, i64* %18, align 8, !dbg !9510
  %bf.cast11613 = and i64 %bf.load114, 65535, !dbg !9510
  %cmp117 = icmp eq i64 %bf.cast11613, 116, !dbg !9510
  br i1 %cmp117, label %land.lhs.true133, label %lor.lhs.false119, !dbg !9510

lor.lhs.false119:                                 ; preds = %while.cond112
  %19 = or i64 %bf.cast11613, 4, !dbg !9510
  %20 = icmp eq i64 %19, 117, !dbg !9510
  br i1 %20, label %land.lhs.true133, label %while.end154, !dbg !9510

land.lhs.true133:                                 ; preds = %lor.lhs.false119, %while.cond112
  %operands135 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9510
  %21 = load %union.tree_node*, %union.tree_node** %operands135, align 8, !dbg !9510
  %cmp137 = icmp eq %union.tree_node* %21, %17, !dbg !9510
  br i1 %cmp137, label %while.end154, label %land.rhs139, !dbg !9510

land.rhs139:                                      ; preds = %land.lhs.true133
  %type141 = getelementptr inbounds %union.tree_node, %union.tree_node* %inside_init.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9510
  %22 = load %union.tree_node*, %union.tree_node** %type141, align 8, !dbg !9510
  %type146 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9510
  %23 = load %union.tree_node*, %union.tree_node** %type146, align 8, !dbg !9510
  %cmp147 = icmp eq %union.tree_node* %22, %23, !dbg !9510
  br i1 %cmp147, label %while.body150, label %while.end154, !dbg !9510

while.body150:                                    ; preds = %land.rhs139
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !9467, metadata !DIExpression()), !dbg !9511
  br label %while.cond112, !dbg !9510, !llvm.loop !9512

while.end154:                                     ; preds = %lor.lhs.false119, %land.lhs.true133, %land.rhs139
  %inside_init.0.lcssa = phi %union.tree_node* [ %inside_init.0, %lor.lhs.false119 ], [ %inside_init.0, %land.lhs.true133 ], [ %inside_init.0, %land.rhs139 ], !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %inside_init.0.lcssa, metadata !9467, metadata !DIExpression()), !dbg !9511
  %call155 = call %union.tree_node* @fold(%union.tree_node* %inside_init.0.lcssa) #6, !dbg !9513
  call void @llvm.dbg.value(metadata %union.tree_node* %call155, metadata !9467, metadata !DIExpression()), !dbg !9511
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9514
  %bf.load157 = load i64, i64* %24, align 8, !dbg !9514
  %bf.cast15916 = and i64 %bf.load157, 65535, !dbg !9515
  %cmp160 = icmp eq i64 %bf.cast15916, 119, !dbg !9515
  br i1 %cmp160, label %if.then162, label %cleanup.cont, !dbg !9516

if.then162:                                       ; preds = %while.end154
  %operands164 = getelementptr inbounds %union.tree_node, %union.tree_node* %call155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9517
  %25 = bitcast %union.tree_node** %operands164 to %struct.tree_exp**, !dbg !9517
  %26 = load %struct.tree_exp*, %struct.tree_exp** %25, align 8, !dbg !9517
  %arrayidx168 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %26, i64 0, i32 3, i64 0, !dbg !9517
  %27 = load %union.tree_node*, %union.tree_node** %arrayidx168, align 8, !dbg !9517
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !9470, metadata !DIExpression()), !dbg !9518
  %type170 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9519
  %28 = bitcast %union.tree_node** %type170 to %struct.tree_type**, !dbg !9519
  %29 = load %struct.tree_type*, %struct.tree_type** %28, align 8, !dbg !9519
  %values172 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %29, i64 0, i32 1, !dbg !9519
  %30 = load %union.tree_node*, %union.tree_node** %values172, align 8, !dbg !9519
  %tobool173 = icmp eq %union.tree_node* %30, null, !dbg !9519
  br i1 %tobool173, label %cleanup.cont, label %if.then174, !dbg !9521

if.then174:                                       ; preds = %if.then162
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9522
  %32 = load %union.tree_node*, %union.tree_node** %31, align 8, !dbg !9522
  %call176 = call %union.tree_node* @build_distinct_type_copy(%union.tree_node* %32) #6, !dbg !9524
  call void @llvm.dbg.value(metadata %union.tree_node* %call176, metadata !9465, metadata !DIExpression()), !dbg !9473
  store %union.tree_node* %call176, %union.tree_node** %type1, align 8, !dbg !9525
  %33 = load %struct.tree_type*, %struct.tree_type** %28, align 8, !dbg !9526
  %values182 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %33, i64 0, i32 1, !dbg !9526
  %34 = bitcast %union.tree_node** %values182 to i64*, !dbg !9526
  %35 = load i64, i64* %34, align 8, !dbg !9526
  %values184 = getelementptr inbounds %union.tree_node, %union.tree_node* %call176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9527
  %36 = bitcast i32* %values184 to i64*, !dbg !9528
  store i64 %35, i64* %36, align 8, !dbg !9528
  call void @layout_type(%union.tree_node* %call176) #6, !dbg !9529
  call void @layout_decl(%union.tree_node* %27, i32 0) #6, !dbg !9530
  br label %cleanup.cont, !dbg !9531

cleanup.cont:                                     ; preds = %if.then162, %entry, %while.end154, %if.then174, %land.lhs.true104, %if.end97
  ret void, !dbg !9532
}

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @constant_expression_warning(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_distinct_type_copy(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @error_init(i8* %msgid) local_unnamed_addr #5 !dbg !9533 {
entry:
  call void @llvm.dbg.value(metadata i8* %msgid, metadata !9537, metadata !DIExpression()), !dbg !9539
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* %msgid) #6, !dbg !9540
  %call = tail call fastcc i32 @spelling_length() #7, !dbg !9541
  %add = add nsw i32 %call, 1, !dbg !9541
  %conv = sext i32 %add to i64, !dbg !9541
  %0 = alloca i8, i64 %conv, align 16, !dbg !9541
  %call1 = call fastcc i8* @print_spelling(i8* nonnull %0) #7, !dbg !9542
  call void @llvm.dbg.value(metadata i8* %call1, metadata !9538, metadata !DIExpression()), !dbg !9539
  %1 = load i8, i8* %call1, align 1, !dbg !9543
  %tobool = icmp eq i8 %1, 0, !dbg !9543
  br i1 %tobool, label %if.end, label %if.then, !dbg !9545

if.then:                                          ; preds = %entry
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i64 0, i64 0), i8* %call1) #6, !dbg !9546
  br label %if.end, !dbg !9546

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !9547
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @print_spelling(i8* %buffer) unnamed_addr #5 !dbg !9548 {
entry:
  call void @llvm.dbg.value(metadata i8* %buffer, metadata !9552, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8* %buffer, metadata !9553, metadata !DIExpression()), !dbg !9560
  %0 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8, !dbg !9561
  call void @llvm.dbg.value(metadata %struct.spelling* %0, metadata !9554, metadata !DIExpression()), !dbg !9560
  br label %for.cond, !dbg !9562

for.cond:                                         ; preds = %for.inc13, %entry
  %p.0 = phi %struct.spelling* [ %0, %entry ], [ %incdec.ptr14, %for.inc13 ], !dbg !9563
  %d.0 = phi i8* [ %buffer, %entry ], [ %d.3, %for.inc13 ], !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.0, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata %struct.spelling* %p.0, metadata !9554, metadata !DIExpression()), !dbg !9560
  %1 = load %struct.spelling*, %struct.spelling** @spelling, align 8, !dbg !9564
  %cmp = icmp ult %struct.spelling* %p.0, %1, !dbg !9565
  br i1 %cmp, label %for.body, label %for.end15, !dbg !9566

for.body:                                         ; preds = %for.cond
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %p.0, i64 0, i32 0, !dbg !9567
  %2 = load i32, i32* %kind, align 8, !dbg !9567
  %cmp1 = icmp eq i32 %2, 3, !dbg !9568
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9569

if.then:                                          ; preds = %for.body
  %i = getelementptr inbounds %struct.spelling, %struct.spelling* %p.0, i64 0, i32 1, i32 0, !dbg !9570
  %3 = load i64, i64* %i, align 8, !dbg !9570
  %call = tail call i32 (i8*, i8*, ...) @sprintf(i8* %d.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.252, i64 0, i64 0), i64 %3) #6, !dbg !9572
  %call2 = tail call i64 @strlen(i8* %d.0) #6, !dbg !9573
  %add.ptr = getelementptr inbounds i8, i8* %d.0, i64 %call2, !dbg !9574
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !9553, metadata !DIExpression()), !dbg !9560
  br label %for.inc13, !dbg !9575

if.else:                                          ; preds = %for.body
  %cmp4 = icmp eq i32 %2, 2, !dbg !9576
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !9578

if.then5:                                         ; preds = %if.else
  %incdec.ptr = getelementptr inbounds i8, i8* %d.0, i64 1, !dbg !9579
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !9553, metadata !DIExpression()), !dbg !9560
  store i8 46, i8* %d.0, align 1, !dbg !9580
  br label %if.end, !dbg !9581

if.end:                                           ; preds = %if.then5, %if.else
  %d.1 = phi i8* [ %incdec.ptr, %if.then5 ], [ %d.0, %if.else ], !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.1, metadata !9553, metadata !DIExpression()), !dbg !9560
  %u6 = getelementptr inbounds %struct.spelling, %struct.spelling* %p.0, i64 0, i32 1, !dbg !9582
  %s7 = bitcast %union.anon.1* %u6 to i8**, !dbg !9584
  %4 = load i8*, i8** %s7, align 8, !dbg !9584
  call void @llvm.dbg.value(metadata i8* %4, metadata !9555, metadata !DIExpression()), !dbg !9585
  br label %for.cond8, !dbg !9586

for.cond8:                                        ; preds = %for.inc, %if.end
  %d.2 = phi i8* [ %d.1, %if.end ], [ %incdec.ptr11, %for.inc ], !dbg !9585
  %s.0 = phi i8* [ %4, %if.end ], [ %incdec.ptr9, %for.inc ], !dbg !9587
  call void @llvm.dbg.value(metadata i8* %s.0, metadata !9555, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i8* %d.2, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8* %s.0, metadata !9555, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9585
  %5 = load i8, i8* %s.0, align 1, !dbg !9588
  store i8 %5, i8* %d.2, align 1, !dbg !9590
  %tobool = icmp eq i8 %5, 0, !dbg !9591
  br i1 %tobool, label %for.inc13.loopexit, label %for.inc, !dbg !9591

for.inc:                                          ; preds = %for.cond8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %s.0, i64 1, !dbg !9592
  call void @llvm.dbg.value(metadata i8* %incdec.ptr9, metadata !9555, metadata !DIExpression()), !dbg !9585
  %incdec.ptr11 = getelementptr inbounds i8, i8* %d.2, i64 1, !dbg !9593
  call void @llvm.dbg.value(metadata i8* %incdec.ptr11, metadata !9553, metadata !DIExpression()), !dbg !9560
  br label %for.cond8, !dbg !9594, !llvm.loop !9595

for.inc13.loopexit:                               ; preds = %for.cond8
  %d.2.lcssa = phi i8* [ %d.2, %for.cond8 ], !dbg !9585
  call void @llvm.dbg.value(metadata i8* %d.2.lcssa, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.2.lcssa, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.2.lcssa, metadata !9553, metadata !DIExpression()), !dbg !9560
  br label %for.inc13, !dbg !9597

for.inc13:                                        ; preds = %for.inc13.loopexit, %if.then
  %d.3 = phi i8* [ %add.ptr, %if.then ], [ %d.2.lcssa, %for.inc13.loopexit ], !dbg !9598
  call void @llvm.dbg.value(metadata i8* %d.3, metadata !9553, metadata !DIExpression()), !dbg !9560
  %incdec.ptr14 = getelementptr inbounds %struct.spelling, %struct.spelling* %p.0, i64 1, !dbg !9597
  call void @llvm.dbg.value(metadata %struct.spelling* %incdec.ptr14, metadata !9554, metadata !DIExpression()), !dbg !9560
  br label %for.cond, !dbg !9599, !llvm.loop !9600

for.end15:                                        ; preds = %for.cond
  %d.0.lcssa = phi i8* [ %d.0, %for.cond ], !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.0.lcssa, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.0.lcssa, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.0.lcssa, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.value(metadata i8* %d.0.lcssa, metadata !9553, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9560
  store i8 0, i8* %d.0.lcssa, align 1, !dbg !9602
  ret i8* %buffer, !dbg !9603
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @spelling_length() unnamed_addr #5 !dbg !9604 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !9606, metadata !DIExpression()), !dbg !9608
  %0 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8, !dbg !9609
  call void @llvm.dbg.value(metadata %struct.spelling* %0, metadata !9607, metadata !DIExpression()), !dbg !9608
  br label %for.cond, !dbg !9611

for.cond:                                         ; preds = %for.inc, %entry
  %p.0 = phi %struct.spelling* [ %0, %entry ], [ %incdec.ptr, %for.inc ], !dbg !9612
  %size.0 = phi i32 [ 0, %entry ], [ %size.1, %for.inc ], !dbg !9608
  call void @llvm.dbg.value(metadata i32 %size.0, metadata !9606, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.value(metadata %struct.spelling* %p.0, metadata !9607, metadata !DIExpression()), !dbg !9608
  %1 = load %struct.spelling*, %struct.spelling** @spelling, align 8, !dbg !9613
  %cmp = icmp ult %struct.spelling* %p.0, %1, !dbg !9615
  br i1 %cmp, label %for.body, label %for.end, !dbg !9616

for.body:                                         ; preds = %for.cond
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %p.0, i64 0, i32 0, !dbg !9617
  %2 = load i32, i32* %kind, align 8, !dbg !9617
  %cmp1 = icmp eq i32 %2, 3, !dbg !9620
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9621

if.then:                                          ; preds = %for.body
  %add = add nsw i32 %size.0, 25, !dbg !9622
  call void @llvm.dbg.value(metadata i32 %add, metadata !9606, metadata !DIExpression()), !dbg !9608
  br label %for.inc, !dbg !9623

if.else:                                          ; preds = %for.body
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %p.0, i64 0, i32 1, !dbg !9624
  %s = bitcast %union.anon.1* %u to i8**, !dbg !9625
  %3 = load i8*, i8** %s, align 8, !dbg !9625
  %call = tail call i64 @strlen(i8* %3) #6, !dbg !9626
  %4 = trunc i64 %call to i32, !dbg !9627
  %5 = add i32 %4, 1, !dbg !9627
  %conv4 = add i32 %size.0, %5, !dbg !9627
  call void @llvm.dbg.value(metadata i32 %conv4, metadata !9606, metadata !DIExpression()), !dbg !9608
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %size.1 = phi i32 [ %add, %if.then ], [ %conv4, %if.else ], !dbg !9628
  call void @llvm.dbg.value(metadata i32 %size.1, metadata !9606, metadata !DIExpression()), !dbg !9608
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %p.0, i64 1, !dbg !9629
  call void @llvm.dbg.value(metadata %struct.spelling* %incdec.ptr, metadata !9607, metadata !DIExpression()), !dbg !9608
  br label %for.cond, !dbg !9630, !llvm.loop !9631

for.end:                                          ; preds = %for.cond
  %size.0.lcssa = phi i32 [ %size.0, %for.cond ], !dbg !9608
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !9606, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !9606, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.value(metadata i32 %size.0.lcssa, metadata !9606, metadata !DIExpression()), !dbg !9608
  ret i32 %size.0.lcssa, !dbg !9633
}

; Function Attrs: nounwind uwtable
define dso_local void @pedwarn_init(i32 %location, i32 %opt, i8* %msgid) local_unnamed_addr #5 !dbg !9634 {
entry:
  call void @llvm.dbg.value(metadata i32 %location, metadata !9638, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.value(metadata i32 %opt, metadata !9639, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.value(metadata i8* %msgid, metadata !9640, metadata !DIExpression()), !dbg !9642
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 %opt, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* %msgid) #6, !dbg !9643
  %call1 = tail call fastcc i32 @spelling_length() #7, !dbg !9644
  %add = add nsw i32 %call1, 1, !dbg !9644
  %conv = sext i32 %add to i64, !dbg !9644
  %0 = alloca i8, i64 %conv, align 16, !dbg !9644
  %call2 = call fastcc i8* @print_spelling(i8* nonnull %0) #7, !dbg !9645
  call void @llvm.dbg.value(metadata i8* %call2, metadata !9641, metadata !DIExpression()), !dbg !9642
  %1 = load i8, i8* %call2, align 1, !dbg !9646
  %tobool = icmp eq i8 %1, 0, !dbg !9646
  br i1 %tobool, label %if.end, label %if.then, !dbg !9648

if.then:                                          ; preds = %entry
  %call3 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %location, i32 %opt, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i64 0, i64 0), i8* %call2) #6, !dbg !9649
  br label %if.end, !dbg !9649

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !9650
}

; Function Attrs: nounwind uwtable
define dso_local void @maybe_warn_string_init(%union.tree_node* %type, %struct.c_expr* byval(%struct.c_expr) align 8 %expr) local_unnamed_addr #5 !dbg !9651 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9655, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.declare(metadata %struct.c_expr* %expr, metadata !9656, metadata !DIExpression()), !dbg !9658
  %0 = load i32, i32* @pedantic, align 4, !dbg !9659
  %tobool = icmp eq i32 %0, 0, !dbg !9659
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9661

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9662
  %bf.load = load i64, i64* %1, align 8, !dbg !9662
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9663
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !9663
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !9664

land.lhs.true1:                                   ; preds = %land.lhs.true
  %2 = bitcast %struct.c_expr* %expr to i64**, !dbg !9665
  %3 = load i64*, i64** %2, align 8, !dbg !9665
  %bf.load3 = load i64, i64* %3, align 8, !dbg !9665
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !9666
  %cmp6 = icmp eq i64 %bf.cast52, 28, !dbg !9666
  br i1 %cmp6, label %land.lhs.true7, label %if.end, !dbg !9667

land.lhs.true7:                                   ; preds = %land.lhs.true1
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 1, !dbg !9668
  %4 = load i32, i32* %original_code, align 8, !dbg !9668
  %cmp8 = icmp eq i32 %4, 28, !dbg !9669
  br i1 %cmp8, label %if.end, label %if.then, !dbg !9670

if.then:                                          ; preds = %land.lhs.true7
  %5 = load i32, i32* @input_location, align 4, !dbg !9671
  tail call void @pedwarn_init(i32 %5, i32 834, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.82, i64 0, i64 0)) #7, !dbg !9672
  br label %if.end, !dbg !9672

if.end:                                           ; preds = %land.lhs.true7, %entry, %if.then, %land.lhs.true1, %land.lhs.true
  ret void, !dbg !9673
}

; Function Attrs: nounwind uwtable
define dso_local void @start_init(%union.tree_node* %decl, %union.tree_node* %asmspec_tree, i32 %top_level) local_unnamed_addr #5 !dbg !9674 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !9678, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata %union.tree_node* %asmspec_tree, metadata !9679, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata i32 %top_level, metadata !9680, metadata !DIExpression()), !dbg !9683
  %call = tail call i8* @xmalloc(i64 64) #6, !dbg !9684
  call void @llvm.dbg.value(metadata i8* %call, metadata !9682, metadata !DIExpression()), !dbg !9683
  %0 = load i64, i64* bitcast (%union.tree_node** @constructor_decl to i64*), align 8, !dbg !9685
  %decl1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9686
  %1 = bitcast i8* %decl1 to i64*, !dbg !9687
  store i64 %0, i64* %1, align 8, !dbg !9687
  %2 = load i32, i32* @require_constant_value, align 4, !dbg !9688
  %conv = trunc i32 %2 to i8, !dbg !9688
  %3 = getelementptr inbounds i8, i8* %call, i64 61, !dbg !9689
  store i8 %conv, i8* %3, align 1, !dbg !9690
  %4 = load i32, i32* @require_constant_elements, align 4, !dbg !9691
  %conv2 = trunc i32 %4 to i8, !dbg !9691
  %5 = getelementptr inbounds i8, i8* %call, i64 62, !dbg !9692
  store i8 %conv2, i8* %5, align 2, !dbg !9693
  %6 = load i64, i64* bitcast (%struct.constructor_stack** @constructor_stack to i64*), align 8, !dbg !9694
  %constructor_stack = getelementptr inbounds i8, i8* %call, i64 16, !dbg !9695
  %7 = bitcast i8* %constructor_stack to i64*, !dbg !9696
  store i64 %6, i64* %7, align 8, !dbg !9696
  %8 = load i64, i64* bitcast (%struct.constructor_range_stack** @constructor_range_stack to i64*), align 8, !dbg !9697
  %constructor_range_stack = getelementptr inbounds i8, i8* %call, i64 24, !dbg !9698
  %9 = bitcast i8* %constructor_range_stack to i64*, !dbg !9699
  store i64 %8, i64* %9, align 8, !dbg !9699
  %10 = load i64, i64* bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i64*), align 8, !dbg !9700
  %elements = getelementptr inbounds i8, i8* %call, i64 32, !dbg !9701
  %11 = bitcast i8* %elements to i64*, !dbg !9702
  store i64 %10, i64* %11, align 8, !dbg !9702
  %12 = load i64, i64* bitcast (%struct.spelling** @spelling to i64*), align 8, !dbg !9703
  %spelling = getelementptr inbounds i8, i8* %call, i64 40, !dbg !9704
  %13 = bitcast i8* %spelling to i64*, !dbg !9705
  store i64 %12, i64* %13, align 8, !dbg !9705
  %14 = load i64, i64* bitcast (%struct.spelling** @spelling_base to i64*), align 8, !dbg !9706
  %spelling_base = getelementptr inbounds i8, i8* %call, i64 48, !dbg !9707
  %15 = bitcast i8* %spelling_base to i64*, !dbg !9708
  store i64 %14, i64* %15, align 8, !dbg !9708
  %16 = load i32, i32* @spelling_size, align 4, !dbg !9709
  %spelling_size = getelementptr inbounds i8, i8* %call, i64 56, !dbg !9710
  %17 = bitcast i8* %spelling_size to i32*, !dbg !9710
  store i32 %16, i32* %17, align 8, !dbg !9711
  %18 = load i32, i32* @constructor_top_level, align 4, !dbg !9712
  %conv3 = trunc i32 %18 to i8, !dbg !9712
  %19 = getelementptr inbounds i8, i8* %call, i64 60, !dbg !9713
  store i8 %conv3, i8* %19, align 4, !dbg !9714
  %20 = load i64, i64* bitcast (%struct.initializer_stack** @initializer_stack to i64*), align 8, !dbg !9715
  %21 = bitcast i8* %call to i64*, !dbg !9716
  store i64 %20, i64* %21, align 8, !dbg !9716
  store i8* %call, i8** bitcast (%struct.initializer_stack** @initializer_stack to i8**), align 8, !dbg !9717
  store %union.tree_node* %decl, %union.tree_node** @constructor_decl, align 8, !dbg !9718
  store i32 0, i32* @constructor_designated, align 4, !dbg !9719
  store i32 %top_level, i32* @constructor_top_level, align 4, !dbg !9720
  %cmp = icmp ne %union.tree_node* %decl, null, !dbg !9721
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9723
  %cmp6 = icmp ne %union.tree_node* %22, %decl, !dbg !9724
  %or.cond = and i1 %cmp, %cmp6, !dbg !9725
  br i1 %or.cond, label %if.then, label %if.else, !dbg !9725

if.then:                                          ; preds = %entry
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9726
  %bf.load = load i64, i64* %23, align 8, !dbg !9726
  %bf.lshr = lshr i64 %bf.load, 26, !dbg !9726
  %24 = trunc i64 %bf.lshr to i32, !dbg !9726
  %bf.cast = and i32 %24, 1, !dbg !9726
  store i32 %bf.cast, i32* @require_constant_value, align 4, !dbg !9728
  %bf.cast122 = and i64 %bf.load, 67108864, !dbg !9729
  %tobool = icmp eq i64 %bf.cast122, 0, !dbg !9729
  br i1 %tobool, label %lor.lhs.false, label %land.rhs, !dbg !9730

lor.lhs.false:                                    ; preds = %if.then
  %25 = load i32, i32* @pedantic, align 4, !dbg !9731
  %tobool13 = icmp eq i32 %25, 0, !dbg !9731
  %26 = load i32, i32* @flag_isoc99, align 4, !dbg !9732
  %tobool15 = icmp ne i32 %26, 0, !dbg !9732
  %or.cond1 = or i1 %tobool13, %tobool15, !dbg !9733
  br i1 %or.cond1, label %land.end, label %land.rhs, !dbg !9733

land.rhs:                                         ; preds = %if.then, %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9734
  %27 = bitcast %union.tree_node** %type to i64**, !dbg !9734
  %28 = load i64*, i64** %27, align 8, !dbg !9734
  %bf.load17 = load i64, i64* %28, align 8, !dbg !9734
  %bf.cast193 = and i64 %bf.load17, 65535, !dbg !9735
  %cmp20 = icmp eq i64 %bf.cast193, 15, !dbg !9735
  br i1 %cmp20, label %land.end, label %lor.lhs.false22, !dbg !9736

lor.lhs.false22:                                  ; preds = %land.rhs
  %cmp29 = icmp eq i64 %bf.cast193, 16, !dbg !9737
  br i1 %cmp29, label %land.end, label %lor.lhs.false31, !dbg !9738

lor.lhs.false31:                                  ; preds = %lor.lhs.false22
  %cmp38 = icmp eq i64 %bf.cast193, 17, !dbg !9739
  br i1 %cmp38, label %land.end, label %lor.rhs, !dbg !9740

lor.rhs:                                          ; preds = %lor.lhs.false31
  %cmp46 = icmp eq i64 %bf.cast193, 18, !dbg !9741
  %phitmp = zext i1 %cmp46 to i32, !dbg !9740
  br label %land.end, !dbg !9740

land.end:                                         ; preds = %land.rhs, %lor.lhs.false22, %lor.lhs.false31, %lor.rhs, %lor.lhs.false
  %29 = phi i32 [ 0, %lor.lhs.false ], [ 1, %lor.lhs.false31 ], [ 1, %lor.lhs.false22 ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  store i32 %29, i32* @require_constant_elements, align 4, !dbg !9742
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9743
  %30 = bitcast %union.tree_node** %name to %struct.tree_identifier**, !dbg !9743
  %31 = load %struct.tree_identifier*, %struct.tree_identifier** %30, align 8, !dbg !9743
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %31, i64 0, i32 1, i32 0, !dbg !9743
  %32 = load i8*, i8** %str, align 8, !dbg !9743
  %call48 = tail call i8* @identifier_to_locale(i8* %32) #6, !dbg !9744
  call void @llvm.dbg.value(metadata i8* %call48, metadata !9681, metadata !DIExpression()), !dbg !9683
  br label %if.end, !dbg !9745

if.else:                                          ; preds = %entry
  store i32 0, i32* @require_constant_value, align 4, !dbg !9746
  store i32 0, i32* @require_constant_elements, align 4, !dbg !9748
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i64 0, i64 0), metadata !9681, metadata !DIExpression()), !dbg !9683
  br label %if.end

if.end:                                           ; preds = %if.else, %land.end
  %locus.0 = phi i8* [ %call48, %land.end ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i64 0, i64 0), %if.else ], !dbg !9749
  call void @llvm.dbg.value(metadata i8* %locus.0, metadata !9681, metadata !DIExpression()), !dbg !9683
  store %struct.constructor_stack* null, %struct.constructor_stack** @constructor_stack, align 8, !dbg !9750
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !9751
  store i1 false, i1* @missing_braces_mentioned, align 4, !dbg !9752
  store %struct.spelling* null, %struct.spelling** @spelling_base, align 8, !dbg !9753
  store i32 0, i32* @spelling_size, align 4, !dbg !9754
  store %struct.spelling* null, %struct.spelling** @spelling, align 8, !dbg !9755
  %tobool49 = icmp eq i8* %locus.0, null, !dbg !9756
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !9758

if.then50:                                        ; preds = %if.end
  tail call fastcc void @push_string(i8* nonnull %locus.0) #7, !dbg !9759
  br label %if.end51, !dbg !9759

if.end51:                                         ; preds = %if.end, %if.then50
  ret void, !dbg !9760
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8* @identifier_to_locale(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @push_string(i8* %string) unnamed_addr #5 !dbg !9761 {
entry:
  call void @llvm.dbg.value(metadata i8* %string, metadata !9763, metadata !DIExpression()), !dbg !9766
  %0 = load i64, i64* bitcast (%struct.spelling** @spelling to i64*), align 8, !dbg !9767
  %1 = load i64, i64* bitcast (%struct.spelling** @spelling_base to i64*), align 8, !dbg !9767
  %sub.ptr.sub = sub i64 %0, %1, !dbg !9767
  %2 = lshr exact i64 %sub.ptr.sub, 4, !dbg !9767
  %conv = trunc i64 %2 to i32, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %conv, metadata !9764, metadata !DIExpression()), !dbg !9768
  %3 = load i32, i32* @spelling_size, align 4, !dbg !9769
  %cmp = icmp sgt i32 %3, %conv, !dbg !9769
  %4 = inttoptr i64 %0 to %struct.spelling*, !dbg !9767
  br i1 %cmp, label %if.end, label %if.then, !dbg !9767

if.then:                                          ; preds = %entry
  %5 = inttoptr i64 %1 to i8*, !dbg !9767
  %add = add nsw i32 %3, 10, !dbg !9771
  store i32 %add, i32* @spelling_size, align 4, !dbg !9771
  %conv2 = sext i32 %add to i64, !dbg !9771
  %mul = shl nsw i64 %conv2, 4, !dbg !9771
  %call = tail call i8* @xrealloc(i8* %5, i64 %mul) #6, !dbg !9771
  store i8* %call, i8** bitcast (%struct.spelling** @spelling_base to i8**), align 8, !dbg !9771
  %.cast = bitcast i8* %call to %struct.spelling*, !dbg !9771
  %sext = shl i64 %sub.ptr.sub, 28, !dbg !9771
  %idx.ext = ashr exact i64 %sext, 32, !dbg !9771
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %.cast, i64 %idx.ext, !dbg !9771
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8, !dbg !9771
  br label %if.end, !dbg !9771

if.end:                                           ; preds = %entry, %if.then
  %6 = phi %struct.spelling* [ %4, %entry ], [ %add.ptr, %if.then ], !dbg !9767
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %6, i64 0, i32 0, !dbg !9767
  store i32 1, i32* %kind, align 8, !dbg !9767
  %7 = load %struct.spelling*, %struct.spelling** @spelling, align 8, !dbg !9767
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %7, i64 0, i32 1, !dbg !9767
  %s = bitcast %union.anon.1* %u to i8**, !dbg !9767
  store i8* %string, i8** %s, align 8, !dbg !9767
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %7, i64 1, !dbg !9767
  store %struct.spelling* %incdec.ptr, %struct.spelling** @spelling, align 8, !dbg !9767
  ret void, !dbg !9773
}

; Function Attrs: nounwind uwtable
define dso_local void @finish_init() local_unnamed_addr #5 !dbg !9774 {
entry:
  %0 = load %struct.initializer_stack*, %struct.initializer_stack** @initializer_stack, align 8, !dbg !9781
  call void @llvm.dbg.value(metadata %struct.initializer_stack* %0, metadata !9778, metadata !DIExpression()), !dbg !9782
  br label %while.cond, !dbg !9783

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !9784
  %tobool = icmp eq %struct.constructor_stack* %1, null, !dbg !9783
  br i1 %tobool, label %while.end, label %while.body, !dbg !9783

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.constructor_stack* %1, metadata !9779, metadata !DIExpression()), !dbg !9785
  %2 = bitcast %struct.constructor_stack* %1 to i64*, !dbg !9786
  %3 = load i64, i64* %2, align 8, !dbg !9786
  store i64 %3, i64* bitcast (%struct.constructor_stack** @constructor_stack to i64*), align 8, !dbg !9787
  %4 = bitcast %struct.constructor_stack* %1 to i8*, !dbg !9788
  tail call void @free(i8* nonnull %4) #6, !dbg !9789
  br label %while.cond, !dbg !9783, !llvm.loop !9790

while.end:                                        ; preds = %while.cond
  %5 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !9792
  %tobool1 = icmp eq %struct.constructor_range_stack* %5, null, !dbg !9792
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !9792

cond.true:                                        ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 6262, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9792
  br label %cond.end, !dbg !9792

cond.end:                                         ; preds = %while.end, %cond.true
  %6 = load i8*, i8** bitcast (%struct.spelling** @spelling_base to i8**), align 8, !dbg !9793
  tail call void @free(i8* %6) #6, !dbg !9794
  %decl = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 1, !dbg !9795
  %7 = bitcast %union.tree_node** %decl to i64*, !dbg !9795
  %8 = load i64, i64* %7, align 8, !dbg !9795
  store i64 %8, i64* bitcast (%union.tree_node** @constructor_decl to i64*), align 8, !dbg !9796
  %require_constant_value = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 9, !dbg !9797
  %9 = load i8, i8* %require_constant_value, align 1, !dbg !9797
  %conv = sext i8 %9 to i32, !dbg !9798
  store i32 %conv, i32* @require_constant_value, align 4, !dbg !9799
  %require_constant_elements = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 10, !dbg !9800
  %10 = load i8, i8* %require_constant_elements, align 2, !dbg !9800
  %conv2 = sext i8 %10 to i32, !dbg !9801
  store i32 %conv2, i32* @require_constant_elements, align 4, !dbg !9802
  %constructor_stack = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 2, !dbg !9803
  %11 = bitcast %struct.constructor_stack** %constructor_stack to i64*, !dbg !9803
  %12 = load i64, i64* %11, align 8, !dbg !9803
  store i64 %12, i64* bitcast (%struct.constructor_stack** @constructor_stack to i64*), align 8, !dbg !9804
  %constructor_range_stack = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 3, !dbg !9805
  %13 = bitcast %struct.constructor_range_stack** %constructor_range_stack to i64*, !dbg !9805
  %14 = load i64, i64* %13, align 8, !dbg !9805
  store i64 %14, i64* bitcast (%struct.constructor_range_stack** @constructor_range_stack to i64*), align 8, !dbg !9806
  %elements = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 4, !dbg !9807
  %15 = bitcast %struct.VEC_constructor_elt_gc** %elements to i64*, !dbg !9807
  %16 = load i64, i64* %15, align 8, !dbg !9807
  store i64 %16, i64* bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i64*), align 8, !dbg !9808
  %spelling = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 5, !dbg !9809
  %17 = bitcast %struct.spelling** %spelling to i64*, !dbg !9809
  %18 = load i64, i64* %17, align 8, !dbg !9809
  store i64 %18, i64* bitcast (%struct.spelling** @spelling to i64*), align 8, !dbg !9810
  %spelling_base = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 6, !dbg !9811
  %19 = bitcast %struct.spelling** %spelling_base to i64*, !dbg !9811
  %20 = load i64, i64* %19, align 8, !dbg !9811
  store i64 %20, i64* bitcast (%struct.spelling** @spelling_base to i64*), align 8, !dbg !9812
  %spelling_size = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 7, !dbg !9813
  %21 = load i32, i32* %spelling_size, align 8, !dbg !9813
  store i32 %21, i32* @spelling_size, align 4, !dbg !9814
  %top_level = getelementptr inbounds %struct.initializer_stack, %struct.initializer_stack* %0, i64 0, i32 8, !dbg !9815
  %22 = load i8, i8* %top_level, align 4, !dbg !9815
  %conv3 = sext i8 %22 to i32, !dbg !9816
  store i32 %conv3, i32* @constructor_top_level, align 4, !dbg !9817
  %23 = bitcast %struct.initializer_stack* %0 to i64*, !dbg !9818
  %24 = load i64, i64* %23, align 8, !dbg !9818
  store i64 %24, i64* bitcast (%struct.initializer_stack** @initializer_stack to i64*), align 8, !dbg !9819
  %25 = bitcast %struct.initializer_stack* %0 to i8*, !dbg !9820
  tail call void @free(i8* %25) #6, !dbg !9821
  ret void, !dbg !9822
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @really_start_incremental_init(%union.tree_node* %type) local_unnamed_addr #5 !dbg !9823 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9825, metadata !DIExpression()), !dbg !9827
  %call = tail call i8* @xmalloc(i64 128) #6, !dbg !9828
  call void @llvm.dbg.value(metadata i8* %call, metadata !9826, metadata !DIExpression()), !dbg !9827
  %cmp = icmp eq %union.tree_node* %type, null, !dbg !9829
  br i1 %cmp, label %if.then, label %if.end, !dbg !9831

if.then:                                          ; preds = %entry
  %0 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @constructor_decl to %struct.tree_common**), align 8, !dbg !9832
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %0, i64 0, i32 2, !dbg !9832
  %1 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !9832
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9825, metadata !DIExpression()), !dbg !9827
  br label %if.end, !dbg !9833

if.end:                                           ; preds = %if.then, %entry
  %2 = phi %union.tree_node* [ %1, %if.then ], [ %type, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9825, metadata !DIExpression()), !dbg !9827
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9834
  %bf.load = load i64, i64* %3, align 8, !dbg !9834
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9836
  %cmp2 = icmp eq i64 %bf.cast1, 14, !dbg !9836
  br i1 %cmp2, label %land.lhs.true, label %if.end8, !dbg !9837

land.lhs.true:                                    ; preds = %if.end
  %bf.cast610 = and i64 %bf.load, 4294967296, !dbg !9838
  %tobool = icmp eq i64 %bf.cast610, 0, !dbg !9838
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !9839

if.then7:                                         ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.84, i64 0, i64 0)) #6, !dbg !9840
  br label %if.end8, !dbg !9840

if.end8:                                          ; preds = %land.lhs.true, %if.then7, %if.end
  %4 = load i64, i64* bitcast (%union.tree_node** @constructor_type to i64*), align 8, !dbg !9841
  %type9 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !9842
  %5 = bitcast i8* %type9 to i64*, !dbg !9843
  store i64 %4, i64* %5, align 8, !dbg !9843
  %6 = load i64, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !9844
  %fields = getelementptr inbounds i8, i8* %call, i64 16, !dbg !9845
  %7 = bitcast i8* %fields to i64*, !dbg !9846
  store i64 %6, i64* %7, align 8, !dbg !9846
  %8 = load i64, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !9847
  %index = getelementptr inbounds i8, i8* %call, i64 24, !dbg !9848
  %9 = bitcast i8* %index to i64*, !dbg !9849
  store i64 %8, i64* %9, align 8, !dbg !9849
  %10 = load i64, i64* bitcast (%union.tree_node** @constructor_max_index to i64*), align 8, !dbg !9850
  %max_index = getelementptr inbounds i8, i8* %call, i64 32, !dbg !9851
  %11 = bitcast i8* %max_index to i64*, !dbg !9852
  store i64 %10, i64* %11, align 8, !dbg !9852
  %12 = load i64, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !9853
  %unfilled_index = getelementptr inbounds i8, i8* %call, i64 40, !dbg !9854
  %13 = bitcast i8* %unfilled_index to i64*, !dbg !9855
  store i64 %12, i64* %13, align 8, !dbg !9855
  %14 = load i64, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !9856
  %unfilled_fields = getelementptr inbounds i8, i8* %call, i64 48, !dbg !9857
  %15 = bitcast i8* %unfilled_fields to i64*, !dbg !9858
  store i64 %14, i64* %15, align 8, !dbg !9858
  %16 = load i64, i64* bitcast (%union.tree_node** @constructor_bit_index to i64*), align 8, !dbg !9859
  %bit_index = getelementptr inbounds i8, i8* %call, i64 56, !dbg !9860
  %17 = bitcast i8* %bit_index to i64*, !dbg !9861
  store i64 %16, i64* %17, align 8, !dbg !9861
  %18 = load i64, i64* bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i64*), align 8, !dbg !9862
  %elements = getelementptr inbounds i8, i8* %call, i64 64, !dbg !9863
  %19 = bitcast i8* %elements to i64*, !dbg !9864
  store i64 %18, i64* %19, align 8, !dbg !9864
  %20 = load i32, i32* @constructor_constant, align 4, !dbg !9865
  %conv = trunc i32 %20 to i8, !dbg !9865
  %21 = getelementptr inbounds i8, i8* %call, i64 120, !dbg !9866
  store i8 %conv, i8* %21, align 8, !dbg !9867
  %22 = load i32, i32* @constructor_simple, align 4, !dbg !9868
  %conv10 = trunc i32 %22 to i8, !dbg !9868
  %23 = getelementptr inbounds i8, i8* %call, i64 121, !dbg !9869
  store i8 %conv10, i8* %23, align 1, !dbg !9870
  %24 = load i32, i32* @constructor_nonconst, align 4, !dbg !9871
  %conv11 = trunc i32 %24 to i8, !dbg !9871
  %25 = getelementptr inbounds i8, i8* %call, i64 122, !dbg !9872
  store i8 %conv11, i8* %25, align 2, !dbg !9873
  %26 = load i32, i32* @constructor_erroneous, align 4, !dbg !9874
  %conv12 = trunc i32 %26 to i8, !dbg !9874
  %27 = getelementptr inbounds i8, i8* %call, i64 124, !dbg !9875
  store i8 %conv12, i8* %27, align 4, !dbg !9876
  %28 = load i64, i64* bitcast (%struct.init_node** @constructor_pending_elts to i64*), align 8, !dbg !9877
  %pending_elts = getelementptr inbounds i8, i8* %call, i64 72, !dbg !9878
  %29 = bitcast i8* %pending_elts to i64*, !dbg !9879
  store i64 %28, i64* %29, align 8, !dbg !9879
  %30 = load i32, i32* @constructor_depth, align 4, !dbg !9880
  %depth = getelementptr inbounds i8, i8* %call, i64 84, !dbg !9881
  %31 = bitcast i8* %depth to i32*, !dbg !9881
  store i32 %30, i32* %31, align 4, !dbg !9882
  %replacement_value = getelementptr inbounds i8, i8* %call, i64 88, !dbg !9883
  %value = bitcast i8* %replacement_value to %union.tree_node**, !dbg !9884
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !9885
  %original_code = getelementptr inbounds i8, i8* %call, i64 96, !dbg !9886
  %32 = bitcast i8* %original_code to i32*, !dbg !9886
  store i32 0, i32* %32, align 8, !dbg !9887
  %original_type = getelementptr inbounds i8, i8* %call, i64 104, !dbg !9888
  %33 = bitcast i8* %original_type to %union.tree_node**, !dbg !9888
  store %union.tree_node* null, %union.tree_node** %33, align 8, !dbg !9889
  %34 = getelementptr inbounds i8, i8* %call, i64 123, !dbg !9890
  store i8 0, i8* %34, align 1, !dbg !9891
  %range_stack = getelementptr inbounds i8, i8* %call, i64 112, !dbg !9892
  %35 = bitcast i8* %range_stack to %struct.constructor_range_stack**, !dbg !9892
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %35, align 8, !dbg !9893
  %36 = getelementptr inbounds i8, i8* %call, i64 125, !dbg !9894
  store i8 0, i8* %36, align 1, !dbg !9895
  %37 = load i32, i32* @constructor_incremental, align 4, !dbg !9896
  %conv15 = trunc i32 %37 to i8, !dbg !9896
  %38 = getelementptr inbounds i8, i8* %call, i64 126, !dbg !9897
  store i8 %conv15, i8* %38, align 2, !dbg !9898
  %39 = load i32, i32* @constructor_designated, align 4, !dbg !9899
  %conv16 = trunc i32 %39 to i8, !dbg !9899
  %40 = getelementptr inbounds i8, i8* %call, i64 127, !dbg !9900
  store i8 %conv16, i8* %40, align 1, !dbg !9901
  %next = bitcast i8* %call to %struct.constructor_stack**, !dbg !9902
  store %struct.constructor_stack* null, %struct.constructor_stack** %next, align 8, !dbg !9903
  store i8* %call, i8** bitcast (%struct.constructor_stack** @constructor_stack to i8**), align 8, !dbg !9904
  store i32 1, i32* @constructor_constant, align 4, !dbg !9905
  store i32 1, i32* @constructor_simple, align 4, !dbg !9906
  store i32 0, i32* @constructor_nonconst, align 4, !dbg !9907
  %41 = load i64, i64* bitcast (%struct.spelling** @spelling to i64*), align 8, !dbg !9908
  %42 = load i64, i64* bitcast (%struct.spelling** @spelling_base to i64*), align 8, !dbg !9908
  %sub.ptr.sub = sub i64 %41, %42, !dbg !9908
  %43 = lshr exact i64 %sub.ptr.sub, 4, !dbg !9908
  %conv17 = trunc i64 %43 to i32, !dbg !9908
  store i32 %conv17, i32* @constructor_depth, align 4, !dbg !9909
  store %struct.VEC_constructor_elt_gc* null, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !9910
  store %struct.init_node* null, %struct.init_node** @constructor_pending_elts, align 8, !dbg !9911
  store %union.tree_node* %2, %union.tree_node** @constructor_type, align 8, !dbg !9912
  store i32 1, i32* @constructor_incremental, align 4, !dbg !9913
  store i32 0, i32* @constructor_designated, align 4, !dbg !9914
  store i32 0, i32* @designator_depth, align 4, !dbg !9915
  store i1 false, i1* @designator_erroneous, align 4, !dbg !9916
  %bf.load19 = load i64, i64* %3, align 8, !dbg !9917
  %bf.cast212 = and i64 %bf.load19, 65535, !dbg !9919
  %cmp22 = icmp eq i64 %bf.cast212, 16, !dbg !9919
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9920
  %45 = ptrtoint %union.tree_node* %2 to i64, !dbg !9920
  %46 = bitcast %union.tree_node* %2 to %struct.tree_type*, !dbg !9920
  br i1 %cmp22, label %if.then30, label %lor.lhs.false, !dbg !9920

lor.lhs.false:                                    ; preds = %if.end8
  %cmp28 = icmp eq i64 %bf.cast212, 17, !dbg !9921
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !9922

if.then30:                                        ; preds = %lor.lhs.false, %if.end8
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9923
  %47 = bitcast i32* %values to %union.tree_node**, !dbg !9923
  br label %while.cond, !dbg !9925

while.cond:                                       ; preds = %while.body, %if.then30
  %storemerge.in.in = phi %union.tree_node** [ %chain, %while.body ], [ %47, %if.then30 ]
  %storemerge.in = bitcast %union.tree_node** %storemerge.in.in to i64*, !dbg !9926
  %storemerge = load i64, i64* %storemerge.in, align 8, !dbg !9926
  store i64 %storemerge, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !9926
  %cmp32 = icmp eq i64 %storemerge, 0, !dbg !9927
  %48 = inttoptr i64 %storemerge to %struct.tree_decl_minimal*, !dbg !9928
  %49 = inttoptr i64 %storemerge to %union.tree_node*, !dbg !9928
  br i1 %cmp32, label %land.end, label %land.lhs.true34, !dbg !9928

land.lhs.true34:                                  ; preds = %while.cond
  %50 = inttoptr i64 %storemerge to %struct.tree_decl_common*, !dbg !9928
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %50, i64 0, i32 2, !dbg !9929
  %51 = bitcast i40* %lang_flag_4 to i64*, !dbg !9929
  %bf.load35 = load i64, i64* %51, align 8, !dbg !9929
  %bf.cast389 = and i64 %bf.load35, 524288, !dbg !9929
  %cmp39 = icmp eq i64 %bf.cast389, 0, !dbg !9929
  br i1 %cmp39, label %land.end, label %land.rhs, !dbg !9930

land.rhs:                                         ; preds = %land.lhs.true34
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %48, i64 0, i32 3, !dbg !9931
  %52 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !9931
  %cmp41 = icmp eq %union.tree_node* %52, null, !dbg !9932
  br label %land.end

land.end:                                         ; preds = %land.lhs.true34, %while.cond, %land.rhs
  %53 = phi i1 [ false, %land.lhs.true34 ], [ false, %while.cond ], [ %cmp41, %land.rhs ], !dbg !9926
  br i1 %53, label %while.body, label %while.end, !dbg !9925

while.body:                                       ; preds = %land.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9933
  br label %while.cond, !dbg !9925, !llvm.loop !9934

while.end:                                        ; preds = %land.end
  %.lcssa = phi %union.tree_node* [ %49, %land.end ], !dbg !9928
  store %union.tree_node* %.lcssa, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !9935
  %54 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !9936
  store i64 %54, i64* bitcast (%union.tree_node** @constructor_bit_index to i64*), align 8, !dbg !9937
  br label %if.end98, !dbg !9938

if.else:                                          ; preds = %lor.lhs.false
  %cmp48 = icmp eq i64 %bf.cast212, 15, !dbg !9939
  br i1 %cmp48, label %if.then50, label %if.else83, !dbg !9941

if.then50:                                        ; preds = %if.else
  %values52 = getelementptr inbounds i64, i64* %44, i64 3, !dbg !9942
  %55 = bitcast i64* %values52 to %union.tree_node**, !dbg !9942
  %56 = load %union.tree_node*, %union.tree_node** %55, align 8, !dbg !9942
  %tobool53 = icmp eq %union.tree_node* %56, null, !dbg !9942
  br i1 %tobool53, label %if.else81, label %if.then54, !dbg !9945

if.then54:                                        ; preds = %if.then50
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9946
  %57 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !9946
  %58 = load i64, i64* %57, align 8, !dbg !9946
  store i64 %58, i64* bitcast (%union.tree_node** @constructor_max_index to i64*), align 8, !dbg !9948
  %cmp58 = icmp eq i64 %58, 0, !dbg !9949
  %59 = inttoptr i64 %58 to %union.tree_node*, !dbg !9951
  %60 = inttoptr i64 %58 to i64*, !dbg !9951
  br i1 %cmp58, label %land.lhs.true60, label %if.end65, !dbg !9951

land.lhs.true60:                                  ; preds = %if.then54
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9952
  %62 = load %union.tree_node*, %union.tree_node** %61, align 8, !dbg !9952
  %tobool62 = icmp eq %union.tree_node* %62, null, !dbg !9952
  br i1 %tobool62, label %if.end65, label %if.then63, !dbg !9953

if.then63:                                        ; preds = %land.lhs.true60
  %call64 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 -1) #6, !dbg !9954
  store %union.tree_node* %call64, %union.tree_node** @constructor_max_index, align 8, !dbg !9955
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9956
  br label %if.end65, !dbg !9956

if.end65:                                         ; preds = %land.lhs.true60, %if.then63, %if.then54
  %64 = phi i64* [ %60, %land.lhs.true60 ], [ %63, %if.then63 ], [ %60, %if.then54 ]
  %65 = phi %union.tree_node* [ %59, %land.lhs.true60 ], [ %call64, %if.then63 ], [ %59, %if.then54 ], !dbg !9957
  %tobool66 = icmp eq %union.tree_node* %65, null, !dbg !9957
  br i1 %tobool66, label %if.end76, label %land.lhs.true67, !dbg !9959

land.lhs.true67:                                  ; preds = %if.end65
  %bf.load69 = load i64, i64* %64, align 8, !dbg !9960
  %bf.cast718 = and i64 %bf.load69, 65535, !dbg !9961
  %cmp72 = icmp eq i64 %bf.cast718, 23, !dbg !9961
  br i1 %cmp72, label %if.end76, label %if.then74, !dbg !9962

if.then74:                                        ; preds = %land.lhs.true67
  %call75 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 -1) #6, !dbg !9963
  store %union.tree_node* %call75, %union.tree_node** @constructor_max_index, align 8, !dbg !9964
  br label %if.end76, !dbg !9965

if.end76:                                         ; preds = %land.lhs.true67, %if.end65, %if.then74
  %66 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 2), align 16, !dbg !9966
  %67 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** @constructor_type to %struct.tree_type**), align 8, !dbg !9967
  %values78 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %67, i64 0, i32 1, !dbg !9967
  %68 = bitcast %union.tree_node** %values78 to %struct.tree_type**, !dbg !9967
  %69 = load %struct.tree_type*, %struct.tree_type** %68, align 8, !dbg !9967
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %69, i64 0, i32 13, !dbg !9967
  %70 = load %union.tree_node*, %union.tree_node** %minval, align 8, !dbg !9967
  %call80 = tail call %union.tree_node* @convert(%union.tree_node* %66, %union.tree_node* %70) #6, !dbg !9968
  store %union.tree_node* %call80, %union.tree_node** @constructor_index, align 8, !dbg !9969
  %71 = ptrtoint %union.tree_node* %call80 to i64, !dbg !9970
  br label %if.end82, !dbg !9970

if.else81:                                        ; preds = %if.then50
  %72 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !9971
  store i64 %72, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !9973
  store %union.tree_node* null, %union.tree_node** @constructor_max_index, align 8, !dbg !9974
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.end76
  %73 = phi i64 [ %72, %if.else81 ], [ %71, %if.end76 ], !dbg !9975
  store i64 %73, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !9976
  br label %if.end98, !dbg !9977

if.else83:                                        ; preds = %if.else
  %cmp88 = icmp eq i64 %bf.cast212, 14, !dbg !9978
  br i1 %cmp88, label %if.then90, label %if.else95, !dbg !9980

if.then90:                                        ; preds = %if.else83
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %46, i64 0, i32 6, !dbg !9981
  %bf.load92 = load i32, i32* %precision, align 4, !dbg !9981
  %bf.clear93 = and i32 %bf.load92, 1023, !dbg !9981
  %sh_prom = zext i32 %bf.clear93 to i64, !dbg !9981
  %notmask = shl nsw i64 -1, %sh_prom, !dbg !9983
  %sub = xor i64 %notmask, -1, !dbg !9983
  %call94 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %sub) #6, !dbg !9984
  store %union.tree_node* %call94, %union.tree_node** @constructor_max_index, align 8, !dbg !9985
  %74 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !9986
  store i64 %74, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !9987
  store i64 %74, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !9988
  br label %if.end98, !dbg !9989

if.else95:                                        ; preds = %if.else83
  store %union.tree_node* %2, %union.tree_node** @constructor_fields, align 8, !dbg !9990
  store i64 %45, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !9992
  br label %if.end98

if.end98:                                         ; preds = %if.end82, %if.else95, %if.then90, %while.end
  ret void, !dbg !9993
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @push_init_level(i32 %implicit) local_unnamed_addr #5 !dbg !9994 {
entry:
  %agg.tmp = alloca %struct.c_expr, align 8
  %agg.tmp20 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata i32 %implicit, metadata !9998, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10000, metadata !DIExpression()), !dbg !10001
  %cond3 = icmp eq i32 %implicit, 1, !dbg !10002
  br i1 %cond3, label %if.then25, label %while.cond.preheader, !dbg !10002

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !10003

while.cond:                                       ; preds = %while.cond.preheader, %if.end22
  %0 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10006
  %implicit1 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %0, i64 0, i32 17, !dbg !10007
  %1 = load i8, i8* %implicit1, align 1, !dbg !10007
  %tobool = icmp eq i8 %1, 0, !dbg !10003
  br i1 %tobool, label %if.end23, label %while.body, !dbg !10003

while.body:                                       ; preds = %while.cond
  %2 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !10008
  %bf.load = load i64, i64* %2, align 8, !dbg !10008
  %bf.cast24 = and i64 %bf.load, 65535, !dbg !10011
  %cmp2 = icmp eq i64 %bf.cast24, 16, !dbg !10011
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !10012

lor.lhs.false:                                    ; preds = %while.body
  %cmp7 = icmp eq i64 %bf.cast24, 17, !dbg !10013
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !10014

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.body
  %3 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10015
  %cmp8 = icmp eq %union.tree_node* %3, null, !dbg !10016
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !10017

if.then9:                                         ; preds = %land.lhs.true
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp, i32 1) #7, !dbg !10018
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp, i8 zeroext 1) #7, !dbg !10019
  br label %if.end22, !dbg !10019

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %cmp14 = icmp eq i64 %bf.cast24, 15, !dbg !10020
  %4 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !10022
  %tobool16 = icmp ne %union.tree_node* %4, null, !dbg !10022
  %or.cond = and i1 %cmp14, %tobool16, !dbg !10023
  br i1 %or.cond, label %land.lhs.true17, label %if.end23, !dbg !10023

land.lhs.true17:                                  ; preds = %if.else
  %5 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10024
  %call = call i32 @tree_int_cst_lt(%union.tree_node* nonnull %4, %union.tree_node* %5) #6, !dbg !10025
  %tobool18 = icmp eq i32 %call, 0, !dbg !10025
  br i1 %tobool18, label %if.end23, label %if.then19, !dbg !10026

if.then19:                                        ; preds = %land.lhs.true17
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp20, i32 1) #7, !dbg !10027
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp20, i8 zeroext 1) #7, !dbg !10028
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %if.then9
  br label %while.cond, !dbg !10003, !llvm.loop !10029

if.end23:                                         ; preds = %land.lhs.true17, %while.cond, %if.else
  %tobool24 = icmp eq i32 %implicit, 0, !dbg !10031
  br i1 %tobool24, label %if.end51, label %if.then25, !dbg !10033

if.then25:                                        ; preds = %if.end23, %entry
  %6 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !10034
  %bf.load27 = load i64, i64* %6, align 8, !dbg !10034
  %bf.cast2921 = and i64 %bf.load27, 65535, !dbg !10037
  %cmp30 = icmp eq i64 %bf.cast2921, 16, !dbg !10037
  br i1 %cmp30, label %land.lhs.true37, label %lor.lhs.false31, !dbg !10038

lor.lhs.false31:                                  ; preds = %if.then25
  %cmp36 = icmp eq i64 %bf.cast2921, 17, !dbg !10039
  br i1 %cmp36, label %land.lhs.true37, label %if.else41, !dbg !10040

land.lhs.true37:                                  ; preds = %lor.lhs.false31, %if.then25
  %7 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10041
  %tobool38 = icmp eq %union.tree_node* %7, null, !dbg !10041
  br i1 %tobool38, label %if.else41, label %if.then39, !dbg !10042

if.then39:                                        ; preds = %land.lhs.true37
  %call40 = call fastcc %union.tree_node* @find_init_member(%union.tree_node* nonnull %7) #7, !dbg !10043
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !10000, metadata !DIExpression()), !dbg !10001
  br label %if.end51, !dbg !10044

if.else41:                                        ; preds = %land.lhs.true37, %lor.lhs.false31
  %cmp46 = icmp eq i64 %bf.cast2921, 15, !dbg !10045
  br i1 %cmp46, label %if.then47, label %if.end51, !dbg !10047

if.then47:                                        ; preds = %if.else41
  %8 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10048
  %call48 = call fastcc %union.tree_node* @find_init_member(%union.tree_node* %8) #7, !dbg !10049
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !10000, metadata !DIExpression()), !dbg !10001
  br label %if.end51, !dbg !10050

if.end51:                                         ; preds = %if.end23, %if.then39, %if.then47, %if.else41
  %value.2 = phi %union.tree_node* [ null, %if.end23 ], [ %call40, %if.then39 ], [ %call48, %if.then47 ], [ null, %if.else41 ], !dbg !10001
  call void @llvm.dbg.value(metadata %union.tree_node* %value.2, metadata !10000, metadata !DIExpression()), !dbg !10001
  %call52 = call i8* @xmalloc(i64 128) #6, !dbg !10051
  call void @llvm.dbg.value(metadata i8* %call52, metadata !9999, metadata !DIExpression()), !dbg !10001
  %9 = load i64, i64* bitcast (%union.tree_node** @constructor_type to i64*), align 8, !dbg !10052
  %type = getelementptr inbounds i8, i8* %call52, i64 8, !dbg !10053
  %10 = bitcast i8* %type to i64*, !dbg !10054
  store i64 %9, i64* %10, align 8, !dbg !10054
  %11 = load i64, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !10055
  %fields = getelementptr inbounds i8, i8* %call52, i64 16, !dbg !10056
  %12 = bitcast i8* %fields to i64*, !dbg !10057
  store i64 %11, i64* %12, align 8, !dbg !10057
  %13 = load i64, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !10058
  %index = getelementptr inbounds i8, i8* %call52, i64 24, !dbg !10059
  %14 = bitcast i8* %index to i64*, !dbg !10060
  store i64 %13, i64* %14, align 8, !dbg !10060
  %15 = load i64, i64* bitcast (%union.tree_node** @constructor_max_index to i64*), align 8, !dbg !10061
  %max_index = getelementptr inbounds i8, i8* %call52, i64 32, !dbg !10062
  %16 = bitcast i8* %max_index to i64*, !dbg !10063
  store i64 %15, i64* %16, align 8, !dbg !10063
  %17 = load i64, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !10064
  %unfilled_index = getelementptr inbounds i8, i8* %call52, i64 40, !dbg !10065
  %18 = bitcast i8* %unfilled_index to i64*, !dbg !10066
  store i64 %17, i64* %18, align 8, !dbg !10066
  %19 = load i64, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !10067
  %unfilled_fields = getelementptr inbounds i8, i8* %call52, i64 48, !dbg !10068
  %20 = bitcast i8* %unfilled_fields to i64*, !dbg !10069
  store i64 %19, i64* %20, align 8, !dbg !10069
  %21 = load i64, i64* bitcast (%union.tree_node** @constructor_bit_index to i64*), align 8, !dbg !10070
  %bit_index = getelementptr inbounds i8, i8* %call52, i64 56, !dbg !10071
  %22 = bitcast i8* %bit_index to i64*, !dbg !10072
  store i64 %21, i64* %22, align 8, !dbg !10072
  %23 = load i64, i64* bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i64*), align 8, !dbg !10073
  %elements = getelementptr inbounds i8, i8* %call52, i64 64, !dbg !10074
  %24 = bitcast i8* %elements to i64*, !dbg !10075
  store i64 %23, i64* %24, align 8, !dbg !10075
  %25 = load i32, i32* @constructor_constant, align 4, !dbg !10076
  %conv = trunc i32 %25 to i8, !dbg !10076
  %26 = getelementptr inbounds i8, i8* %call52, i64 120, !dbg !10077
  store i8 %conv, i8* %26, align 8, !dbg !10078
  %27 = load i32, i32* @constructor_simple, align 4, !dbg !10079
  %conv53 = trunc i32 %27 to i8, !dbg !10079
  %28 = getelementptr inbounds i8, i8* %call52, i64 121, !dbg !10080
  store i8 %conv53, i8* %28, align 1, !dbg !10081
  %29 = load i32, i32* @constructor_nonconst, align 4, !dbg !10082
  %conv54 = trunc i32 %29 to i8, !dbg !10082
  %30 = getelementptr inbounds i8, i8* %call52, i64 122, !dbg !10083
  store i8 %conv54, i8* %30, align 2, !dbg !10084
  %31 = load i32, i32* @constructor_erroneous, align 4, !dbg !10085
  %conv55 = trunc i32 %31 to i8, !dbg !10085
  %32 = getelementptr inbounds i8, i8* %call52, i64 124, !dbg !10086
  store i8 %conv55, i8* %32, align 4, !dbg !10087
  %33 = load i64, i64* bitcast (%struct.init_node** @constructor_pending_elts to i64*), align 8, !dbg !10088
  %pending_elts = getelementptr inbounds i8, i8* %call52, i64 72, !dbg !10089
  %34 = bitcast i8* %pending_elts to i64*, !dbg !10090
  store i64 %33, i64* %34, align 8, !dbg !10090
  %35 = load i32, i32* @constructor_depth, align 4, !dbg !10091
  %depth = getelementptr inbounds i8, i8* %call52, i64 84, !dbg !10092
  %36 = bitcast i8* %depth to i32*, !dbg !10092
  store i32 %35, i32* %36, align 4, !dbg !10093
  %replacement_value = getelementptr inbounds i8, i8* %call52, i64 88, !dbg !10094
  %value56 = bitcast i8* %replacement_value to %union.tree_node**, !dbg !10095
  store %union.tree_node* null, %union.tree_node** %value56, align 8, !dbg !10096
  %original_code = getelementptr inbounds i8, i8* %call52, i64 96, !dbg !10097
  %37 = bitcast i8* %original_code to i32*, !dbg !10097
  store i32 0, i32* %37, align 8, !dbg !10098
  %original_type = getelementptr inbounds i8, i8* %call52, i64 104, !dbg !10099
  %38 = bitcast i8* %original_type to %union.tree_node**, !dbg !10099
  store %union.tree_node* null, %union.tree_node** %38, align 8, !dbg !10100
  %conv59 = trunc i32 %implicit to i8, !dbg !10101
  %39 = getelementptr inbounds i8, i8* %call52, i64 123, !dbg !10102
  store i8 %conv59, i8* %39, align 1, !dbg !10103
  %40 = getelementptr inbounds i8, i8* %call52, i64 125, !dbg !10104
  store i8 0, i8* %40, align 1, !dbg !10105
  %41 = load i32, i32* @constructor_incremental, align 4, !dbg !10106
  %conv61 = trunc i32 %41 to i8, !dbg !10106
  %42 = getelementptr inbounds i8, i8* %call52, i64 126, !dbg !10107
  store i8 %conv61, i8* %42, align 2, !dbg !10108
  %43 = load i32, i32* @constructor_designated, align 4, !dbg !10109
  %conv62 = trunc i32 %43 to i8, !dbg !10109
  %44 = getelementptr inbounds i8, i8* %call52, i64 127, !dbg !10110
  store i8 %conv62, i8* %44, align 1, !dbg !10111
  %45 = load i64, i64* bitcast (%struct.constructor_stack** @constructor_stack to i64*), align 8, !dbg !10112
  %46 = bitcast i8* %call52 to i64*, !dbg !10113
  store i64 %45, i64* %46, align 8, !dbg !10113
  %range_stack = getelementptr inbounds i8, i8* %call52, i64 112, !dbg !10114
  %47 = bitcast i8* %range_stack to %struct.constructor_range_stack**, !dbg !10114
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %47, align 8, !dbg !10115
  store i8* %call52, i8** bitcast (%struct.constructor_stack** @constructor_stack to i8**), align 8, !dbg !10116
  store i32 1, i32* @constructor_constant, align 4, !dbg !10117
  store i32 1, i32* @constructor_simple, align 4, !dbg !10118
  store i32 0, i32* @constructor_nonconst, align 4, !dbg !10119
  %48 = load i64, i64* bitcast (%struct.spelling** @spelling to i64*), align 8, !dbg !10120
  %49 = load i64, i64* bitcast (%struct.spelling** @spelling_base to i64*), align 8, !dbg !10120
  %sub.ptr.sub = sub i64 %48, %49, !dbg !10120
  %50 = lshr exact i64 %sub.ptr.sub, 4, !dbg !10120
  %conv63 = trunc i64 %50 to i32, !dbg !10120
  store i32 %conv63, i32* @constructor_depth, align 4, !dbg !10121
  store %struct.VEC_constructor_elt_gc* null, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !10122
  store i32 1, i32* @constructor_incremental, align 4, !dbg !10123
  store i32 0, i32* @constructor_designated, align 4, !dbg !10124
  store %struct.init_node* null, %struct.init_node** @constructor_pending_elts, align 8, !dbg !10125
  %tobool64 = icmp eq i32 %implicit, 0, !dbg !10126
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !10128

if.then65:                                        ; preds = %if.end51
  call void @llvm.dbg.value(metadata i8* %call52, metadata !9999, metadata !DIExpression()), !dbg !10001
  %51 = load i64, i64* bitcast (%struct.constructor_range_stack** @constructor_range_stack to i64*), align 8, !dbg !10129
  %52 = bitcast i8* %range_stack to i64*, !dbg !10131
  store i64 %51, i64* %52, align 8, !dbg !10131
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !10132
  store i32 0, i32* @designator_depth, align 4, !dbg !10133
  store i1 false, i1* @designator_erroneous, align 4, !dbg !10134
  br label %if.end67, !dbg !10135

if.end67:                                         ; preds = %if.end51, %if.then65
  %53 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !10136
  %cmp68 = icmp eq %union.tree_node* %53, null, !dbg !10138
  br i1 %cmp68, label %if.end106, label %if.else71, !dbg !10139

if.else71:                                        ; preds = %if.end67
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10139
  %bf.load73 = load i64, i64* %54, align 8, !dbg !10140
  %bf.cast754 = and i64 %bf.load73, 65535, !dbg !10142
  %cmp76 = icmp eq i64 %bf.cast754, 16, !dbg !10142
  br i1 %cmp76, label %if.then85, label %lor.lhs.false78, !dbg !10143

lor.lhs.false78:                                  ; preds = %if.else71
  %cmp83 = icmp eq i64 %bf.cast754, 17, !dbg !10144
  br i1 %cmp83, label %if.then85, label %if.else92, !dbg !10145

if.then85:                                        ; preds = %lor.lhs.false78, %if.else71
  %55 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10146
  %cmp86 = icmp eq %union.tree_node* %55, null, !dbg !10149
  br i1 %cmp86, label %if.then88, label %if.else89, !dbg !10150

if.then88:                                        ; preds = %if.then85
  store %union.tree_node* null, %union.tree_node** @constructor_type, align 8, !dbg !10151
  br label %if.end106, !dbg !10152

if.else89:                                        ; preds = %if.then85
  %type90 = getelementptr inbounds %union.tree_node, %union.tree_node* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10153
  %56 = bitcast %union.tree_node** %type90 to i64*, !dbg !10153
  %57 = load i64, i64* %56, align 8, !dbg !10153
  store i64 %57, i64* bitcast (%union.tree_node** @constructor_type to i64*), align 8, !dbg !10155
  call fastcc void @push_member_name(%union.tree_node* nonnull %55) #7, !dbg !10156
  %58 = load i32, i32* @constructor_depth, align 4, !dbg !10157
  %inc = add nsw i32 %58, 1, !dbg !10157
  store i32 %inc, i32* @constructor_depth, align 4, !dbg !10157
  br label %if.end106

if.else92:                                        ; preds = %lor.lhs.false78
  %cmp97 = icmp eq i64 %bf.cast754, 15, !dbg !10158
  br i1 %cmp97, label %if.then99, label %if.end106, !dbg !10160

if.then99:                                        ; preds = %if.else92
  %type101 = getelementptr inbounds %union.tree_node, %union.tree_node* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10161
  %59 = bitcast %union.tree_node** %type101 to i64*, !dbg !10161
  %60 = load i64, i64* %59, align 8, !dbg !10161
  store i64 %60, i64* bitcast (%union.tree_node** @constructor_type to i64*), align 8, !dbg !10163
  %61 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10164
  %call102 = call i64 @tree_low_cst(%union.tree_node* %61, i32 1) #6, !dbg !10165
  call fastcc void @push_array_bounds(i64 %call102) #7, !dbg !10166
  %62 = load i32, i32* @constructor_depth, align 4, !dbg !10167
  %inc103 = add nsw i32 %62, 1, !dbg !10167
  store i32 %inc103, i32* @constructor_depth, align 4, !dbg !10167
  br label %if.end106, !dbg !10168

if.end106:                                        ; preds = %if.else89, %if.then88, %if.then99, %if.else92, %if.end67
  %63 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !10169
  %cmp107 = icmp eq %union.tree_node* %63, null, !dbg !10171
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !10172

if.then109:                                       ; preds = %if.end106
  call void @error_init(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.85, i64 0, i64 0)) #7, !dbg !10173
  store %union.tree_node* null, %union.tree_node** @constructor_fields, align 8, !dbg !10175
  store %union.tree_node* null, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !10176
  br label %cleanup.cont, !dbg !10177

if.end110:                                        ; preds = %if.end106
  %tobool111 = icmp eq %union.tree_node* %value.2, null, !dbg !10178
  br i1 %tobool111, label %if.end155, label %land.lhs.true112, !dbg !10180

land.lhs.true112:                                 ; preds = %if.end110
  %64 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10181
  %bf.load114 = load i64, i64* %64, align 8, !dbg !10181
  %bf.cast11615 = and i64 %bf.load114, 65535, !dbg !10182
  %cmp117 = icmp eq i64 %bf.cast11615, 51, !dbg !10182
  br i1 %cmp117, label %if.then119, label %if.end155, !dbg !10183

if.then119:                                       ; preds = %land.lhs.true112
  %bf.lshr = lshr i64 %bf.load114, 17, !dbg !10184
  %65 = trunc i64 %bf.lshr to i32, !dbg !10184
  %bf.cast123 = and i32 %65, 1, !dbg !10184
  store i32 %bf.cast123, i32* @constructor_constant, align 4, !dbg !10186
  %bf.lshr126 = lshr i64 %bf.load114, 26, !dbg !10187
  %66 = trunc i64 %bf.lshr126 to i32, !dbg !10187
  %bf.cast128 = and i32 %66, 1, !dbg !10187
  store i32 %bf.cast128, i32* @constructor_simple, align 4, !dbg !10188
  %bf.lshr131 = lshr i64 %bf.load114, 34, !dbg !10189
  %67 = trunc i64 %bf.lshr131 to i32, !dbg !10189
  %bf.cast133 = and i32 %67, 1, !dbg !10189
  store i32 %bf.cast133, i32* @constructor_nonconst, align 4, !dbg !10190
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %value.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10191
  %68 = bitcast i32* %elts to i64*, !dbg !10191
  %69 = load i64, i64* %68, align 8, !dbg !10191
  store i64 %69, i64* bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i64*), align 8, !dbg !10192
  %tobool134 = icmp eq i64 %69, 0, !dbg !10193
  %.cast17 = inttoptr i64 %69 to %struct.VEC_constructor_elt_gc*, !dbg !10193
  %base135 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %.cast17, i64 0, i32 0, !dbg !10193
  %cond = select i1 %tobool134, %struct.VEC_constructor_elt_base* null, %struct.VEC_constructor_elt_base* %base135, !dbg !10193
  %call136 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #7, !dbg !10193
  %cmp137 = icmp eq i32 %call136, 0, !dbg !10193
  br i1 %cmp137, label %if.end155, label %land.lhs.true139, !dbg !10195

land.lhs.true139:                                 ; preds = %if.then119
  %70 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !10196
  %bf.load141 = load i64, i64* %70, align 8, !dbg !10196
  %bf.cast14318 = and i64 %bf.load141, 65535, !dbg !10197
  %cmp144 = icmp eq i64 %bf.cast14318, 16, !dbg !10197
  br i1 %cmp144, label %if.then153, label %lor.lhs.false146, !dbg !10198

lor.lhs.false146:                                 ; preds = %land.lhs.true139
  %cmp151 = icmp eq i64 %bf.cast14318, 15, !dbg !10199
  br i1 %cmp151, label %if.then153, label %if.end155, !dbg !10200

if.then153:                                       ; preds = %lor.lhs.false146, %land.lhs.true139
  call fastcc void @set_nonincremental_init() #7, !dbg !10201
  br label %if.end155, !dbg !10201

if.end155:                                        ; preds = %if.end110, %if.then119, %lor.lhs.false146, %if.then153, %land.lhs.true112
  %cmp156 = icmp ne i32 %implicit, 1, !dbg !10202
  %71 = load i32, i32* @warn_missing_braces, align 4, !dbg !10204
  %tobool159 = icmp eq i32 %71, 0, !dbg !10204
  %or.cond1.not = or i1 %tobool159, %cmp156, !dbg !10205
  %.b = load i1, i1* @missing_braces_mentioned, align 4, !dbg !10206
  %or.cond2 = or i1 %or.cond1.not, %.b, !dbg !10205
  br i1 %or.cond2, label %if.end163, label %if.then162, !dbg !10205

if.then162:                                       ; preds = %if.end155
  store i1 true, i1* @missing_braces_mentioned, align 4, !dbg !10207
  call fastcc void @warning_init(i32 128, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.86, i64 0, i64 0)) #7, !dbg !10209
  br label %if.end163, !dbg !10210

if.end163:                                        ; preds = %if.end155, %if.then162
  %72 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !10211
  %bf.load165 = load i64, i64* %72, align 8, !dbg !10211
  %bf.cast1677 = and i64 %bf.load165, 65535, !dbg !10213
  %cmp168 = icmp eq i64 %bf.cast1677, 16, !dbg !10213
  %73 = bitcast i64* %72 to %union.tree_node*, !dbg !10214
  %74 = ptrtoint i64* %72 to i64, !dbg !10214
  %75 = bitcast i64* %72 to %struct.tree_type*, !dbg !10214
  br i1 %cmp168, label %if.then177, label %lor.lhs.false170, !dbg !10214

lor.lhs.false170:                                 ; preds = %if.end163
  %cmp175 = icmp eq i64 %bf.cast1677, 17, !dbg !10215
  br i1 %cmp175, label %if.then177, label %if.else194, !dbg !10216

if.then177:                                       ; preds = %lor.lhs.false170, %if.end163
  %values = getelementptr inbounds i64, i64* %72, i64 3, !dbg !10217
  %76 = bitcast i64* %values to %union.tree_node**, !dbg !10217
  br label %while.cond179, !dbg !10219

while.cond179:                                    ; preds = %while.body191, %if.then177
  %storemerge.in.in = phi %union.tree_node** [ %chain, %while.body191 ], [ %76, %if.then177 ]
  %storemerge.in = bitcast %union.tree_node** %storemerge.in.in to i64*, !dbg !10220
  %storemerge = load i64, i64* %storemerge.in, align 8, !dbg !10220
  store i64 %storemerge, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !10220
  %cmp180 = icmp eq i64 %storemerge, 0, !dbg !10221
  %77 = inttoptr i64 %storemerge to %struct.tree_decl_minimal*, !dbg !10222
  %78 = inttoptr i64 %storemerge to %union.tree_node*, !dbg !10222
  br i1 %cmp180, label %land.end, label %land.lhs.true182, !dbg !10222

land.lhs.true182:                                 ; preds = %while.cond179
  %79 = inttoptr i64 %storemerge to %struct.tree_decl_common*, !dbg !10222
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %79, i64 0, i32 2, !dbg !10223
  %80 = bitcast i40* %lang_flag_4 to i64*, !dbg !10223
  %bf.load183 = load i64, i64* %80, align 8, !dbg !10223
  %bf.cast18614 = and i64 %bf.load183, 524288, !dbg !10223
  %cmp187 = icmp eq i64 %bf.cast18614, 0, !dbg !10223
  br i1 %cmp187, label %land.end, label %land.rhs, !dbg !10224

land.rhs:                                         ; preds = %land.lhs.true182
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %77, i64 0, i32 3, !dbg !10225
  %81 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !10225
  %cmp189 = icmp eq %union.tree_node* %81, null, !dbg !10226
  br label %land.end

land.end:                                         ; preds = %land.lhs.true182, %while.cond179, %land.rhs
  %82 = phi i1 [ false, %land.lhs.true182 ], [ false, %while.cond179 ], [ %cmp189, %land.rhs ], !dbg !10220
  br i1 %82, label %while.body191, label %while.end193, !dbg !10219

while.body191:                                    ; preds = %land.end
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10227
  br label %while.cond179, !dbg !10219, !llvm.loop !10228

while.end193:                                     ; preds = %land.end
  %.lcssa = phi %union.tree_node* [ %78, %land.end ], !dbg !10222
  store %union.tree_node* %.lcssa, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !10229
  %83 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !10230
  store i64 %83, i64* bitcast (%union.tree_node** @constructor_bit_index to i64*), align 8, !dbg !10231
  br label %cleanup.cont, !dbg !10232

if.else194:                                       ; preds = %lor.lhs.false170
  %cmp199 = icmp eq i64 %bf.cast1677, 14, !dbg !10233
  br i1 %cmp199, label %if.then201, label %if.else207, !dbg !10235

if.then201:                                       ; preds = %if.else194
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %75, i64 0, i32 6, !dbg !10236
  %bf.load203 = load i32, i32* %precision, align 4, !dbg !10236
  %bf.clear204 = and i32 %bf.load203, 1023, !dbg !10236
  %sh_prom = zext i32 %bf.clear204 to i64, !dbg !10236
  %notmask = shl nsw i64 -1, %sh_prom, !dbg !10238
  %sub = xor i64 %notmask, -1, !dbg !10238
  %call205 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %sub) #6, !dbg !10239
  store %union.tree_node* %call205, %union.tree_node** @constructor_max_index, align 8, !dbg !10240
  %84 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 2), align 16, !dbg !10241
  %85 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !10242
  %call206 = call %union.tree_node* @convert(%union.tree_node* %84, %union.tree_node* %85) #6, !dbg !10243
  store %union.tree_node* %call206, %union.tree_node** @constructor_index, align 8, !dbg !10244
  %.cast = ptrtoint %union.tree_node* %call206 to i64, !dbg !10245
  store i64 %.cast, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !10246
  br label %cleanup.cont, !dbg !10247

if.else207:                                       ; preds = %if.else194
  %cmp212 = icmp eq i64 %bf.cast1677, 15, !dbg !10248
  br i1 %cmp212, label %if.then214, label %if.else257, !dbg !10250

if.then214:                                       ; preds = %if.else207
  %values216 = getelementptr inbounds i64, i64* %72, i64 3, !dbg !10251
  %86 = bitcast i64* %values216 to %union.tree_node**, !dbg !10251
  %87 = load %union.tree_node*, %union.tree_node** %86, align 8, !dbg !10251
  %tobool217 = icmp eq %union.tree_node* %87, null, !dbg !10251
  br i1 %tobool217, label %if.else245, label %if.then218, !dbg !10254

if.then218:                                       ; preds = %if.then214
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10255
  %88 = bitcast %struct.rtx_def** %maxval to i64*, !dbg !10255
  %89 = load i64, i64* %88, align 8, !dbg !10255
  store i64 %89, i64* bitcast (%union.tree_node** @constructor_max_index to i64*), align 8, !dbg !10257
  %cmp222 = icmp eq i64 %89, 0, !dbg !10258
  %90 = inttoptr i64 %89 to %union.tree_node*, !dbg !10260
  %91 = inttoptr i64 %89 to i64*, !dbg !10260
  br i1 %cmp222, label %land.lhs.true224, label %if.end229, !dbg !10260

land.lhs.true224:                                 ; preds = %if.then218
  %size = getelementptr inbounds i64, i64* %72, i64 4, !dbg !10261
  %92 = bitcast i64* %size to %union.tree_node**, !dbg !10261
  %93 = load %union.tree_node*, %union.tree_node** %92, align 8, !dbg !10261
  %tobool226 = icmp eq %union.tree_node* %93, null, !dbg !10261
  br i1 %tobool226, label %if.end229, label %if.then227, !dbg !10262

if.then227:                                       ; preds = %land.lhs.true224
  %call228 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 -1) #6, !dbg !10263
  store %union.tree_node* %call228, %union.tree_node** @constructor_max_index, align 8, !dbg !10264
  %94 = getelementptr inbounds %union.tree_node, %union.tree_node* %call228, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10265
  br label %if.end229, !dbg !10265

if.end229:                                        ; preds = %land.lhs.true224, %if.then227, %if.then218
  %95 = phi i64* [ %91, %land.lhs.true224 ], [ %94, %if.then227 ], [ %91, %if.then218 ]
  %96 = phi %union.tree_node* [ %90, %land.lhs.true224 ], [ %call228, %if.then227 ], [ %90, %if.then218 ], !dbg !10266
  %tobool230 = icmp eq %union.tree_node* %96, null, !dbg !10266
  br i1 %tobool230, label %if.end240, label %land.lhs.true231, !dbg !10268

land.lhs.true231:                                 ; preds = %if.end229
  %bf.load233 = load i64, i64* %95, align 8, !dbg !10269
  %bf.cast23513 = and i64 %bf.load233, 65535, !dbg !10270
  %cmp236 = icmp eq i64 %bf.cast23513, 23, !dbg !10270
  br i1 %cmp236, label %if.end240, label %if.then238, !dbg !10271

if.then238:                                       ; preds = %land.lhs.true231
  %call239 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 -1) #6, !dbg !10272
  store %union.tree_node* %call239, %union.tree_node** @constructor_max_index, align 8, !dbg !10273
  br label %if.end240, !dbg !10274

if.end240:                                        ; preds = %land.lhs.true231, %if.end229, %if.then238
  %97 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 2), align 16, !dbg !10275
  %98 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** @constructor_type to %struct.tree_type**), align 8, !dbg !10276
  %values242 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %98, i64 0, i32 1, !dbg !10276
  %99 = bitcast %union.tree_node** %values242 to %struct.tree_type**, !dbg !10276
  %100 = load %struct.tree_type*, %struct.tree_type** %99, align 8, !dbg !10276
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %100, i64 0, i32 13, !dbg !10276
  %101 = load %union.tree_node*, %union.tree_node** %minval, align 8, !dbg !10276
  %call244 = call %union.tree_node* @convert(%union.tree_node* %97, %union.tree_node* %101) #6, !dbg !10277
  store %union.tree_node* %call244, %union.tree_node** @constructor_index, align 8, !dbg !10278
  %102 = ptrtoint %union.tree_node* %call244 to i64, !dbg !10279
  br label %if.end246, !dbg !10279

if.else245:                                       ; preds = %if.then214
  %103 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !10280
  store i64 %103, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !10281
  br label %if.end246

if.end246:                                        ; preds = %if.else245, %if.end240
  %104 = phi i64 [ %103, %if.else245 ], [ %102, %if.end240 ], !dbg !10282
  store i64 %104, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !10283
  br i1 %tobool111, label %cleanup.cont, label %land.lhs.true248, !dbg !10284

land.lhs.true248:                                 ; preds = %if.end246
  %105 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10286
  %bf.load250 = load i64, i64* %105, align 8, !dbg !10286
  %bf.cast25211 = and i64 %bf.load250, 65535, !dbg !10287
  %cmp253 = icmp eq i64 %bf.cast25211, 28, !dbg !10287
  br i1 %cmp253, label %if.then255, label %cleanup.cont, !dbg !10288

if.then255:                                       ; preds = %land.lhs.true248
  call fastcc void @set_nonincremental_init_from_string(%union.tree_node* nonnull %value.2) #7, !dbg !10289
  br label %cleanup.cont, !dbg !10291

if.else257:                                       ; preds = %if.else207
  %106 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10292
  %cmp258 = icmp eq %union.tree_node* %106, %73, !dbg !10295
  br i1 %cmp258, label %if.end261, label %if.then260, !dbg !10296

if.then260:                                       ; preds = %if.else257
  call fastcc void @warning_init(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.87, i64 0, i64 0)) #7, !dbg !10297
  %.pre = load i64, i64* bitcast (%union.tree_node** @constructor_type to i64*), align 8, !dbg !10298
  br label %if.end261, !dbg !10297

if.end261:                                        ; preds = %if.else257, %if.then260
  %107 = phi i64 [ %74, %if.else257 ], [ %.pre, %if.then260 ], !dbg !10298
  store i64 %107, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !10299
  store i64 %107, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !10300
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end246, %if.then109, %if.then201, %land.lhs.true248, %if.then255, %if.end261, %while.end193
  ret void, !dbg !10301
}

; Function Attrs: nounwind uwtable
define dso_local void @process_init_element(%struct.c_expr* byval(%struct.c_expr) align 8 %value, i8 zeroext %implicit) local_unnamed_addr #5 !dbg !10302 {
entry:
  %agg.tmp = alloca %struct.c_expr, align 8
  %agg.tmp93 = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.expanded_location, align 8
  %agg.tmp618 = alloca %struct.c_expr, align 8
  %agg.tmp630 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.declare(metadata %struct.c_expr* %value, metadata !10306, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata i8 %implicit, metadata !10307, metadata !DIExpression()), !dbg !10338
  %value1 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %value, i64 0, i32 0, !dbg !10339
  %0 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10339
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10308, metadata !DIExpression()), !dbg !10338
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !10340
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10341
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !10341

land.rhs:                                         ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10342
  %bf.load = load i64, i64* %2, align 8, !dbg !10342
  %bf.cast49 = and i64 %bf.load, 65535, !dbg !10343
  %cmp2 = icmp eq i64 %bf.cast49, 28, !dbg !10343
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %3 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ]
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %value, i64 0, i32 1, !dbg !10344
  %4 = load i32, i32* %original_code, align 8, !dbg !10344
  %cmp3 = icmp eq i32 %4, 28, !dbg !10345
  %conv4 = zext i1 %cmp3 to i8, !dbg !10346
  call void @llvm.dbg.value(metadata i8 %conv4, metadata !10310, metadata !DIExpression()), !dbg !10338
  store i32 0, i32* @designator_depth, align 4, !dbg !10347
  store i1 false, i1* @designator_erroneous, align 4, !dbg !10348
  %5 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !10349
  %tobool5 = icmp ne %union.tree_node* %5, null, !dbg !10349
  %or.cond = and i1 %3, %tobool5, !dbg !10351
  br i1 %or.cond, label %land.lhs.true6, label %if.end43, !dbg !10351

land.lhs.true6:                                   ; preds = %land.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10351
  %bf.load8 = load i64, i64* %6, align 8, !dbg !10352
  %bf.cast1045 = and i64 %bf.load8, 65535, !dbg !10353
  %cmp11 = icmp eq i64 %bf.cast1045, 15, !dbg !10353
  br i1 %cmp11, label %land.lhs.true13, label %if.end43, !dbg !10354

land.lhs.true13:                                  ; preds = %land.lhs.true6
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10355
  %7 = bitcast %union.tree_node** %type to i64**, !dbg !10355
  %8 = load i64*, i64** %7, align 8, !dbg !10355
  %bf.load15 = load i64, i64* %8, align 8, !dbg !10355
  %bf.cast1746 = and i64 %bf.load15, 65535, !dbg !10355
  %cmp18 = icmp eq i64 %bf.cast1746, 6, !dbg !10355
  br i1 %cmp18, label %land.lhs.true37, label %lor.lhs.false, !dbg !10355

lor.lhs.false:                                    ; preds = %land.lhs.true13
  %cmp26 = icmp eq i64 %bf.cast1746, 7, !dbg !10355
  br i1 %cmp26, label %land.lhs.true37, label %lor.lhs.false28, !dbg !10355

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %cmp35 = icmp eq i64 %bf.cast1746, 8, !dbg !10355
  br i1 %cmp35, label %land.lhs.true37, label %if.end43, !dbg !10356

land.lhs.true37:                                  ; preds = %lor.lhs.false28, %lor.lhs.false, %land.lhs.true13
  %9 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !10357
  %call = tail call i32 @integer_zerop(%union.tree_node* %9) #6, !dbg !10358
  %tobool38 = icmp eq i32 %call, 0, !dbg !10358
  br i1 %tobool38, label %if.end43, label %if.then, !dbg !10359

if.then:                                          ; preds = %land.lhs.true37
  %10 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10360
  %value39 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %10, i64 0, i32 12, i32 0, !dbg !10363
  %11 = load %union.tree_node*, %union.tree_node** %value39, align 8, !dbg !10363
  %tobool40 = icmp eq %union.tree_node* %11, null, !dbg !10360
  br i1 %tobool40, label %if.end, label %if.then41, !dbg !10364

if.then41:                                        ; preds = %if.then
  tail call void @error_init(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.102, i64 0, i64 0)) #7, !dbg !10365
  %.pre = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10366
  br label %if.end, !dbg !10365

if.end:                                           ; preds = %if.then, %if.then41
  %12 = phi %struct.constructor_stack* [ %10, %if.then ], [ %.pre, %if.then41 ], !dbg !10366
  %replacement_value42 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %12, i64 0, i32 12, !dbg !10367
  %13 = bitcast %struct.c_expr* %replacement_value42 to i8*, !dbg !10368
  %14 = bitcast %struct.c_expr* %value to i8*, !dbg !10368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !10368
  br label %cleanup.cont685, !dbg !10369

if.end43:                                         ; preds = %land.lhs.true37, %lor.lhs.false28, %land.lhs.true6, %land.end
  %15 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10370
  %value45 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %15, i64 0, i32 12, i32 0, !dbg !10372
  %16 = load %union.tree_node*, %union.tree_node** %value45, align 8, !dbg !10372
  %cmp46 = icmp eq %union.tree_node* %16, null, !dbg !10373
  br i1 %cmp46, label %if.end49, label %if.then48, !dbg !10374

if.then48:                                        ; preds = %if.end43
  tail call void @error_init(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0)) #7, !dbg !10375
  br label %cleanup.cont685, !dbg !10377

if.end49:                                         ; preds = %if.end43
  %17 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !10378
  %cmp50 = icmp eq %union.tree_node* %17, null, !dbg !10380
  br i1 %cmp50, label %cleanup.cont685, label %while.cond.preheader, !dbg !10381

while.cond.preheader:                             ; preds = %if.end49
  br label %while.cond, !dbg !10382

while.cond:                                       ; preds = %while.cond.preheader, %if.end96
  %18 = phi %struct.constructor_stack* [ %15, %while.cond.preheader ], [ %.pre55, %if.end96 ], !dbg !10383
  %implicit54 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %18, i64 0, i32 17, !dbg !10384
  %19 = load i8, i8* %implicit54, align 1, !dbg !10384
  %tobool55 = icmp eq i8 %19, 0, !dbg !10382
  br i1 %tobool55, label %while.end, label %while.body, !dbg !10382

while.body:                                       ; preds = %while.cond
  %20 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !10385
  %bf.load57 = load i64, i64* %20, align 8, !dbg !10385
  %bf.cast5941 = and i64 %bf.load57, 65535, !dbg !10388
  %cmp60 = icmp eq i64 %bf.cast5941, 16, !dbg !10388
  br i1 %cmp60, label %land.lhs.true69, label %lor.lhs.false62, !dbg !10389

lor.lhs.false62:                                  ; preds = %while.body
  %cmp67 = icmp eq i64 %bf.cast5941, 17, !dbg !10390
  br i1 %cmp67, label %land.lhs.true69, label %if.else, !dbg !10391

land.lhs.true69:                                  ; preds = %lor.lhs.false62, %while.body
  %21 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10392
  %cmp70 = icmp eq %union.tree_node* %21, null, !dbg !10393
  br i1 %cmp70, label %if.then72, label %if.else, !dbg !10394

if.then72:                                        ; preds = %land.lhs.true69
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp, i32 1) #7, !dbg !10395
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp, i8 zeroext 1) #7, !dbg !10396
  br label %if.end96, !dbg !10396

if.else:                                          ; preds = %land.lhs.true69, %lor.lhs.false62
  %22 = or i64 %bf.cast5941, 1, !dbg !10397
  %23 = icmp eq i64 %22, 15, !dbg !10397
  br i1 %23, label %land.lhs.true86, label %while.end, !dbg !10397

land.lhs.true86:                                  ; preds = %if.else
  %24 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !10399
  %cmp87 = icmp eq %union.tree_node* %24, null, !dbg !10400
  br i1 %cmp87, label %if.then92, label %lor.lhs.false89, !dbg !10401

lor.lhs.false89:                                  ; preds = %land.lhs.true86
  %25 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10402
  %call90 = call i32 @tree_int_cst_lt(%union.tree_node* nonnull %24, %union.tree_node* %25) #6, !dbg !10403
  %tobool91 = icmp eq i32 %call90, 0, !dbg !10403
  br i1 %tobool91, label %while.end, label %if.then92, !dbg !10404

if.then92:                                        ; preds = %lor.lhs.false89, %land.lhs.true86
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp93, i32 1) #7, !dbg !10405
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp93, i8 zeroext 1) #7, !dbg !10406
  br label %if.end96

if.end96:                                         ; preds = %if.then92, %if.then72
  %.pre55 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10383
  br label %while.cond, !dbg !10382, !llvm.loop !10407

while.end:                                        ; preds = %if.else, %lor.lhs.false89, %while.cond
  %26 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !10409
  %tobool97 = icmp eq %struct.constructor_range_stack* %26, null, !dbg !10409
  br i1 %tobool97, label %while.end.if.end135_crit_edge, label %if.then98, !dbg !10410

while.end.if.end135_crit_edge:                    ; preds = %while.end
  br label %if.end135, !dbg !10410

if.then98:                                        ; preds = %while.end
  %bf.load101 = load i64, i64* %1, align 8, !dbg !10411
  %bf.cast10338 = and i64 %bf.load101, 65535, !dbg !10412
  %cmp104 = icmp ne i64 %bf.cast10338, 119, !dbg !10412
  %27 = load i32, i32* @require_constant_value, align 4, !dbg !10413
  %tobool107 = icmp eq i32 %27, 0, !dbg !10413
  %or.cond1.not = or i1 %tobool107, %cmp104, !dbg !10414
  %28 = load i32, i32* @flag_isoc99, align 4, !dbg !10415
  %tobool109 = icmp ne i32 %28, 0, !dbg !10415
  %or.cond2 = or i1 %or.cond1.not, %tobool109, !dbg !10414
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10414
  br i1 %or.cond2, label %if.then110, label %if.end135, !dbg !10414

if.then110:                                       ; preds = %if.then98
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10311, metadata !DIExpression()), !dbg !10416
  %cmp116 = icmp eq i64 %bf.cast10338, 190, !dbg !10417
  br i1 %cmp116, label %if.then118, label %if.end124, !dbg !10419

if.then118:                                       ; preds = %if.then110
  %type121 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10420
  %30 = load %union.tree_node*, %union.tree_node** %type121, align 8, !dbg !10420
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !10311, metadata !DIExpression()), !dbg !10416
  %operands = getelementptr inbounds %struct.tree_common, %struct.tree_common* %29, i64 1, i32 2, !dbg !10422
  %31 = bitcast %union.tree_node** %operands to i64*, !dbg !10422
  %32 = load i64, i64* %31, align 8, !dbg !10422
  %33 = bitcast %struct.c_expr* %value to i64*, !dbg !10423
  store i64 %32, i64* %33, align 8, !dbg !10423
  %34 = inttoptr i64 %32 to %union.tree_node*, !dbg !10424
  br label %if.end124, !dbg !10424

if.end124:                                        ; preds = %if.then118, %if.then110
  %35 = phi %union.tree_node* [ %34, %if.then118 ], [ %0, %if.then110 ], !dbg !10425
  %semantic_type.0 = phi %union.tree_node* [ %30, %if.then118 ], [ null, %if.then110 ], !dbg !10416
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_type.0, metadata !10311, metadata !DIExpression()), !dbg !10416
  %call126 = call %union.tree_node* @c_save_expr(%union.tree_node* %35) #6, !dbg !10426
  store %union.tree_node* %call126, %union.tree_node** %value1, align 8, !dbg !10427
  %tobool128 = icmp eq %union.tree_node* %semantic_type.0, null, !dbg !10428
  br i1 %tobool128, label %if.end135, label %if.then129, !dbg !10430

if.then129:                                       ; preds = %if.end124
  %call131 = call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %semantic_type.0, %union.tree_node* %call126) #6, !dbg !10431
  store %union.tree_node* %call131, %union.tree_node** %value1, align 8, !dbg !10432
  br label %if.end135, !dbg !10433

if.end135:                                        ; preds = %while.end.if.end135_crit_edge, %if.end124, %if.then98, %if.then129
  %original_type603 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %value, i64 0, i32 2, !dbg !10434
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !10438
  br label %while.cond136, !dbg !10440

while.cond136:                                    ; preds = %while.cond136.backedge, %if.end135
  %36 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !10441
  %bf.load139 = load i64, i64* %36, align 8, !dbg !10441
  %bf.cast14121 = and i64 %bf.load139, 65535, !dbg !10442
  %cmp142 = icmp eq i64 %bf.cast14121, 16, !dbg !10442
  %37 = bitcast i64* %36 to %union.tree_node*, !dbg !10443
  br i1 %cmp142, label %if.then144, label %if.else307, !dbg !10443

if.then144:                                       ; preds = %while.cond136
  %38 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10444
  %cmp145 = icmp eq %union.tree_node* %38, null, !dbg !10446
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10447
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !10447

if.then147:                                       ; preds = %if.then144
  %40 = load i32, i32* @input_location, align 4, !dbg !10448
  call void @pedwarn_init(i32 %40, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0)) #7, !dbg !10450
  br label %cleanup, !dbg !10451

if.end148:                                        ; preds = %if.then144
  %type150 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10452
  %41 = load %union.tree_node*, %union.tree_node** %type150, align 8, !dbg !10452
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !10316, metadata !DIExpression()), !dbg !10453
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10454
  %cmp151 = icmp eq %union.tree_node* %41, %42, !dbg !10456
  br i1 %cmp151, label %if.end155, label %if.then153, !dbg !10457

if.then153:                                       ; preds = %if.end148
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10458
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !10458
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !10316, metadata !DIExpression()), !dbg !10453
  br label %if.end155, !dbg !10459

if.end155:                                        ; preds = %if.end148, %if.then153
  %fieldtype.0 = phi %union.tree_node* [ %44, %if.then153 ], [ %41, %if.end148 ], !dbg !10453
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldtype.0, metadata !10316, metadata !DIExpression()), !dbg !10453
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %fieldtype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10460
  %bf.load157 = load i64, i64* %45, align 8, !dbg !10460
  %46 = trunc i64 %bf.load157 to i32, !dbg !10460
  %bf.cast159 = and i32 %46, 65535, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %bf.cast159, metadata !10320, metadata !DIExpression()), !dbg !10453
  %cmp160 = icmp ne i32 %bf.cast159, 15, !dbg !10461
  %47 = load i32, i32* @require_constant_value, align 4, !dbg !10463
  %tobool163 = icmp ne i32 %47, 0, !dbg !10463
  %or.cond3 = or i1 %cmp160, %tobool163, !dbg !10464
  br i1 %or.cond3, label %if.end173, label %land.lhs.true164, !dbg !10464

land.lhs.true164:                                 ; preds = %if.end155
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %fieldtype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10465
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8, !dbg !10465
  %cmp166 = icmp eq %union.tree_node* %49, null, !dbg !10466
  br i1 %cmp166, label %land.lhs.true168, label %if.end173, !dbg !10467

land.lhs.true168:                                 ; preds = %land.lhs.true164
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10468
  %50 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10468
  %cmp170 = icmp eq %union.tree_node* %50, null, !dbg !10469
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !10470

if.then172:                                       ; preds = %land.lhs.true168
  call void @error_init(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.104, i64 0, i64 0)) #7, !dbg !10471
  br label %cleanup, !dbg !10473

if.end173:                                        ; preds = %if.end155, %land.lhs.true168, %land.lhs.true164
  %51 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10474
  %cmp175 = icmp ne %union.tree_node* %51, null, !dbg !10476
  %cmp178 = icmp eq i32 %bf.cast159, 15, !dbg !10477
  %or.cond4 = and i1 %cmp175, %cmp178, !dbg !10478
  br i1 %or.cond4, label %land.lhs.true180, label %if.else211, !dbg !10478

land.lhs.true180:                                 ; preds = %if.end173
  %type182 = getelementptr inbounds %union.tree_node, %union.tree_node* %fieldtype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10479
  %52 = bitcast %union.tree_node** %type182 to i64**, !dbg !10479
  %53 = load i64*, i64** %52, align 8, !dbg !10479
  %bf.load184 = load i64, i64* %53, align 8, !dbg !10479
  %bf.cast18635 = and i64 %bf.load184, 65535, !dbg !10479
  %cmp187 = icmp eq i64 %bf.cast18635, 6, !dbg !10479
  br i1 %cmp187, label %land.lhs.true207, label %lor.lhs.false189, !dbg !10479

lor.lhs.false189:                                 ; preds = %land.lhs.true180
  %cmp196 = icmp eq i64 %bf.cast18635, 7, !dbg !10479
  br i1 %cmp196, label %land.lhs.true207, label %lor.lhs.false198, !dbg !10479

lor.lhs.false198:                                 ; preds = %lor.lhs.false189
  %cmp205 = icmp eq i64 %bf.cast18635, 8, !dbg !10479
  %or.cond5 = and i1 %cmp205, %3, !dbg !10480
  br i1 %or.cond5, label %if.then209, label %if.else211, !dbg !10480

land.lhs.true207:                                 ; preds = %lor.lhs.false189, %land.lhs.true180
  br i1 %3, label %if.then209, label %if.else211, !dbg !10481

if.then209:                                       ; preds = %lor.lhs.false198, %land.lhs.true207
  store %union.tree_node* %0, %union.tree_node** %value1, align 8, !dbg !10482
  br label %if.end241, !dbg !10483

if.else211:                                       ; preds = %land.lhs.true207, %lor.lhs.false198, %if.end173
  %cmp213 = icmp eq %union.tree_node* %51, null, !dbg !10484
  br i1 %cmp213, label %if.end241, label %land.lhs.true215, !dbg !10486

land.lhs.true215:                                 ; preds = %if.else211
  %cmp217 = icmp eq %union.tree_node* %51, %42, !dbg !10487
  br i1 %cmp217, label %if.end241, label %land.lhs.true219, !dbg !10488

land.lhs.true219:                                 ; preds = %land.lhs.true215
  %type222 = getelementptr inbounds %union.tree_node, %union.tree_node* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10489
  %54 = bitcast %union.tree_node** %type222 to %struct.tree_type**, !dbg !10489
  %55 = load %struct.tree_type*, %struct.tree_type** %54, align 8, !dbg !10489
  %main_variant224 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %55, i64 0, i32 16, !dbg !10489
  %56 = load %union.tree_node*, %union.tree_node** %main_variant224, align 8, !dbg !10489
  %cmp225 = icmp ne %union.tree_node* %56, %fieldtype.0, !dbg !10490
  %bf.cast159.off = add nsw i32 %bf.cast159, -14, !dbg !10491
  %switch14 = icmp ult i32 %bf.cast159.off, 4, !dbg !10491
  %or.cond15 = and i1 %cmp225, %switch14, !dbg !10492
  br i1 %or.cond15, label %if.then239, label %if.end241, !dbg !10492

if.then239:                                       ; preds = %land.lhs.true219
  call void @push_init_level(i32 1) #7, !dbg !10493
  br label %cleanup, !dbg !10495, !llvm.loop !10496

if.end241:                                        ; preds = %land.lhs.true215, %if.else211, %land.lhs.true219, %if.then209
  %57 = phi %union.tree_node* [ %42, %land.lhs.true215 ], [ null, %if.else211 ], [ %51, %land.lhs.true219 ], [ %0, %if.then209 ], !dbg !10498
  %tobool243 = icmp eq %union.tree_node* %57, null, !dbg !10500
  br i1 %tobool243, label %if.else246, label %if.then244, !dbg !10501

if.then244:                                       ; preds = %if.end241
  call fastcc void @push_member_name(%union.tree_node* nonnull %38) #7, !dbg !10502
  %58 = load %union.tree_node*, %union.tree_node** %original_type603, align 8, !dbg !10504
  %59 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10505
  call fastcc void @output_init_element(%union.tree_node* nonnull %57, %union.tree_node* %58, i8 zeroext %conv4, %union.tree_node* %fieldtype.0, %union.tree_node* %59, i32 1, i8 zeroext %implicit) #7, !dbg !10506
  %60 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8, !dbg !10507
  %61 = load i32, i32* @constructor_depth, align 4, !dbg !10507
  %idx.ext = sext i32 %61 to i64, !dbg !10507
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %60, i64 %idx.ext, !dbg !10507
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8, !dbg !10507
  %.pn.pre.pre = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @constructor_fields to %struct.tree_common**), align 8, !dbg !10453
  br label %if.end280, !dbg !10508

if.else246:                                       ; preds = %if.end241
  %size247 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10509
  %62 = load %union.tree_node*, %union.tree_node** %size247, align 8, !dbg !10509
  %tobool248 = icmp eq %union.tree_node* %62, null, !dbg !10509
  br i1 %tobool248, label %if.end254, label %if.then249, !dbg !10512

if.then249:                                       ; preds = %if.else246
  %63 = load i32, i32* @input_location, align 4, !dbg !10513
  %call250 = call %union.tree_node* @bit_position(%union.tree_node* nonnull %38) #6, !dbg !10514
  %64 = load %struct.tree_decl_common*, %struct.tree_decl_common** bitcast (%union.tree_node** @constructor_fields to %struct.tree_decl_common**), align 8, !dbg !10515
  %size252 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %64, i64 0, i32 1, !dbg !10515
  %65 = load %union.tree_node*, %union.tree_node** %size252, align 8, !dbg !10515
  %call253 = call %union.tree_node* @size_binop_loc(i32 %63, i32 63, %union.tree_node* %call250, %union.tree_node* %65) #6, !dbg !10516
  store %union.tree_node* %call253, %union.tree_node** @constructor_bit_index, align 8, !dbg !10517
  %.pre57 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10518
  %66 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10520
  br label %if.end254, !dbg !10520

if.end254:                                        ; preds = %if.else246, %if.then249
  %.pn.pre63 = phi %struct.tree_common* [ %39, %if.else246 ], [ %66, %if.then249 ]
  %.pn5059 = phi %struct.tree_common* [ %39, %if.else246 ], [ %66, %if.then249 ]
  %67 = phi %union.tree_node* [ %38, %if.else246 ], [ %.pre57, %if.then249 ], !dbg !10518
  %68 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !10521
  %cmp255 = icmp eq %union.tree_node* %68, %67, !dbg !10522
  br i1 %cmp255, label %if.then257, label %if.end280, !dbg !10523

if.then257:                                       ; preds = %if.end254
  br label %while.cond260, !dbg !10524

while.cond260:                                    ; preds = %while.body275, %if.then257
  %.pn50 = phi %struct.tree_common* [ %73, %while.body275 ], [ %.pn5059, %if.then257 ], !dbg !10526
  %storemerge34.in.in = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.pn50, i64 0, i32 1, !dbg !10526
  %storemerge34.in = bitcast %union.tree_node** %storemerge34.in.in to i64*, !dbg !10526
  %storemerge34 = load i64, i64* %storemerge34.in, align 8, !dbg !10526
  store i64 %storemerge34, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !10526
  %cmp261 = icmp eq i64 %storemerge34, 0, !dbg !10527
  %69 = inttoptr i64 %storemerge34 to %struct.tree_decl_minimal*, !dbg !10528
  br i1 %cmp261, label %if.end280.loopexit, label %land.lhs.true263, !dbg !10528

land.lhs.true263:                                 ; preds = %while.cond260
  %70 = inttoptr i64 %storemerge34 to %struct.tree_decl_common*, !dbg !10528
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %70, i64 0, i32 2, !dbg !10529
  %71 = bitcast i40* %lang_flag_4 to i64*, !dbg !10529
  %bf.load265 = load i64, i64* %71, align 8, !dbg !10529
  %bf.cast26733 = and i64 %bf.load265, 524288, !dbg !10529
  %cmp268 = icmp eq i64 %bf.cast26733, 0, !dbg !10529
  br i1 %cmp268, label %if.end280.loopexit, label %land.rhs270, !dbg !10530

land.rhs270:                                      ; preds = %land.lhs.true263
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %69, i64 0, i32 3, !dbg !10531
  %72 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !10531
  %cmp271 = icmp eq %union.tree_node* %72, null, !dbg !10532
  br i1 %cmp271, label %while.body275, label %if.end280.loopexit, !dbg !10524

while.body275:                                    ; preds = %land.rhs270
  %73 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %69, i64 0, i32 0, !dbg !10524
  br label %while.cond260, !dbg !10524, !llvm.loop !10533

if.end280.loopexit:                               ; preds = %land.rhs270, %while.cond260, %land.lhs.true263
  br label %if.end280, !dbg !10535

if.end280:                                        ; preds = %if.end280.loopexit, %if.end254, %if.then244
  %.pn.pre = phi %struct.tree_common* [ %.pn.pre63, %if.end280.loopexit ], [ %.pn.pre63, %if.end254 ], [ %.pn.pre.pre, %if.then244 ], !dbg !10453
  br label %while.cond283, !dbg !10535

while.cond283:                                    ; preds = %while.body302, %if.end280
  %.pn = phi %struct.tree_common* [ %78, %while.body302 ], [ %.pn.pre, %if.end280 ], !dbg !10453
  %storemerge.in.in = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.pn, i64 0, i32 1, !dbg !10453
  %storemerge.in = bitcast %union.tree_node** %storemerge.in.in to i64*, !dbg !10453
  %storemerge = load i64, i64* %storemerge.in, align 8, !dbg !10453
  store i64 %storemerge, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !10453
  %cmp284 = icmp eq i64 %storemerge, 0, !dbg !10536
  %74 = inttoptr i64 %storemerge to %struct.tree_decl_minimal*, !dbg !10537
  br i1 %cmp284, label %cleanup.loopexit, label %land.lhs.true286, !dbg !10537

land.lhs.true286:                                 ; preds = %while.cond283
  %75 = inttoptr i64 %storemerge to %struct.tree_decl_common*, !dbg !10537
  %lang_flag_4288 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %75, i64 0, i32 2, !dbg !10538
  %76 = bitcast i40* %lang_flag_4288 to i64*, !dbg !10538
  %bf.load289 = load i64, i64* %76, align 8, !dbg !10538
  %bf.cast29232 = and i64 %bf.load289, 524288, !dbg !10538
  %cmp293 = icmp eq i64 %bf.cast29232, 0, !dbg !10538
  br i1 %cmp293, label %cleanup.loopexit, label %land.rhs295, !dbg !10539

land.rhs295:                                      ; preds = %land.lhs.true286
  %name297 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %74, i64 0, i32 3, !dbg !10540
  %77 = load %union.tree_node*, %union.tree_node** %name297, align 8, !dbg !10540
  %cmp298 = icmp eq %union.tree_node* %77, null, !dbg !10541
  br i1 %cmp298, label %while.body302, label %cleanup.loopexit, !dbg !10535

while.body302:                                    ; preds = %land.rhs295
  %78 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %74, i64 0, i32 0, !dbg !10535
  br label %while.cond283, !dbg !10535, !llvm.loop !10542

cleanup.loopexit:                                 ; preds = %land.rhs295, %while.cond283, %land.lhs.true286
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then239, %if.then172, %if.then147
  %cleanup.dest.slot.0 = phi i32 [ 5, %if.then147 ], [ 4, %if.then239 ], [ 5, %if.then172 ], [ 0, %cleanup.loopexit ]
  switch i32 %cleanup.dest.slot.0, label %unreachable [
    i32 0, label %if.end609
    i32 5, label %while.end680.loopexit
    i32 4, label %while.cond136.backedge
  ]

while.cond136.backedge:                           ; preds = %cleanup, %cleanup433, %cleanup545, %if.end675
  br label %while.cond136, !dbg !10441

if.else307:                                       ; preds = %while.cond136
  %cmp312 = icmp eq i64 %bf.cast14121, 17, !dbg !10544
  br i1 %cmp312, label %if.then314, label %if.else437, !dbg !10545

if.then314:                                       ; preds = %if.else307
  %79 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10546
  %cmp317 = icmp eq %union.tree_node* %79, null, !dbg !10548
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !10549

if.then319:                                       ; preds = %if.then314
  %80 = load i32, i32* @input_location, align 4, !dbg !10550
  call void @pedwarn_init(i32 %80, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.105, i64 0, i64 0)) #7, !dbg !10552
  br label %cleanup433, !dbg !10553

if.end320:                                        ; preds = %if.then314
  %type322 = getelementptr inbounds %union.tree_node, %union.tree_node* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10554
  %81 = load %union.tree_node*, %union.tree_node** %type322, align 8, !dbg !10554
  call void @llvm.dbg.value(metadata %union.tree_node* %81, metadata !10321, metadata !DIExpression()), !dbg !10555
  %82 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10556
  %cmp323 = icmp eq %union.tree_node* %81, %82, !dbg !10558
  br i1 %cmp323, label %if.end328, label %if.then325, !dbg !10559

if.then325:                                       ; preds = %if.end320
  %83 = getelementptr inbounds %union.tree_node, %union.tree_node* %81, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !10560
  %84 = load %union.tree_node*, %union.tree_node** %83, align 8, !dbg !10560
  call void @llvm.dbg.value(metadata %union.tree_node* %84, metadata !10321, metadata !DIExpression()), !dbg !10555
  br label %if.end328, !dbg !10561

if.end328:                                        ; preds = %if.end320, %if.then325
  %fieldtype315.0 = phi %union.tree_node* [ %84, %if.then325 ], [ %81, %if.end320 ], !dbg !10555
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldtype315.0, metadata !10321, metadata !DIExpression()), !dbg !10555
  %85 = getelementptr inbounds %union.tree_node, %union.tree_node* %fieldtype315.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10562
  %bf.load330 = load i64, i64* %85, align 8, !dbg !10562
  %86 = trunc i64 %bf.load330 to i32, !dbg !10562
  %bf.cast332 = and i32 %86, 65535, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %bf.cast332, metadata !10324, metadata !DIExpression()), !dbg !10555
  %87 = load i32, i32* @input_location, align 4, !dbg !10563
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %87) #6, !dbg !10563
  %88 = load i8, i8* %sysp, align 8, !dbg !10563
  %cmp334 = icmp ne i8 %88, 0, !dbg !10563
  %89 = load i32, i32* @constructor_designated, align 4, !dbg !10564
  %tobool337 = icmp ne i32 %89, 0, !dbg !10564
  %or.cond8 = or i1 %cmp334, %tobool337, !dbg !10565
  br i1 %or.cond8, label %if.end351, label %land.lhs.true338, !dbg !10565

land.lhs.true338:                                 ; preds = %if.end328
  %90 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10566
  %tobool340 = icmp eq %union.tree_node* %90, null, !dbg !10567
  br i1 %tobool340, label %if.then349, label %land.lhs.true341, !dbg !10568

land.lhs.true341:                                 ; preds = %land.lhs.true338
  %call343 = call i32 @integer_zerop(%union.tree_node* nonnull %90) #6, !dbg !10569
  %tobool344 = icmp eq i32 %call343, 0, !dbg !10569
  br i1 %tobool344, label %lor.lhs.false345, label %if.end351, !dbg !10570

lor.lhs.false345:                                 ; preds = %land.lhs.true341
  %91 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10571
  %call347 = call i32 @real_zerop(%union.tree_node* %91) #6, !dbg !10572
  %tobool348 = icmp eq i32 %call347, 0, !dbg !10572
  br i1 %tobool348, label %if.then349, label %if.end351, !dbg !10573

if.then349:                                       ; preds = %lor.lhs.false345, %land.lhs.true338
  %call350 = call zeroext i8 (i32, i8*, ...) @warning(i32 202, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.106, i64 0, i64 0)) #6, !dbg !10574
  br label %if.end351, !dbg !10574

if.end351:                                        ; preds = %lor.lhs.false345, %land.lhs.true341, %if.then349, %if.end328
  %92 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10575
  %cmp353 = icmp ne %union.tree_node* %92, null, !dbg !10577
  %cmp356 = icmp eq i32 %bf.cast332, 15, !dbg !10578
  %or.cond9 = and i1 %cmp353, %cmp356, !dbg !10579
  br i1 %or.cond9, label %land.lhs.true358, label %if.else389, !dbg !10579

land.lhs.true358:                                 ; preds = %if.end351
  %type360 = getelementptr inbounds %union.tree_node, %union.tree_node* %fieldtype315.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10580
  %93 = bitcast %union.tree_node** %type360 to i64**, !dbg !10580
  %94 = load i64*, i64** %93, align 8, !dbg !10580
  %bf.load362 = load i64, i64* %94, align 8, !dbg !10580
  %bf.cast36429 = and i64 %bf.load362, 65535, !dbg !10580
  %cmp365 = icmp eq i64 %bf.cast36429, 6, !dbg !10580
  br i1 %cmp365, label %land.lhs.true385, label %lor.lhs.false367, !dbg !10580

lor.lhs.false367:                                 ; preds = %land.lhs.true358
  %cmp374 = icmp eq i64 %bf.cast36429, 7, !dbg !10580
  br i1 %cmp374, label %land.lhs.true385, label %lor.lhs.false376, !dbg !10580

lor.lhs.false376:                                 ; preds = %lor.lhs.false367
  %cmp383 = icmp eq i64 %bf.cast36429, 8, !dbg !10580
  %or.cond10 = and i1 %cmp383, %3, !dbg !10581
  br i1 %or.cond10, label %if.then387, label %if.else389, !dbg !10581

land.lhs.true385:                                 ; preds = %lor.lhs.false367, %land.lhs.true358
  br i1 %3, label %if.then387, label %if.else389, !dbg !10582

if.then387:                                       ; preds = %lor.lhs.false376, %land.lhs.true385
  store %union.tree_node* %0, %union.tree_node** %value1, align 8, !dbg !10583
  br label %if.end419, !dbg !10584

if.else389:                                       ; preds = %land.lhs.true385, %lor.lhs.false376, %if.end351
  %cmp391 = icmp eq %union.tree_node* %92, null, !dbg !10585
  br i1 %cmp391, label %if.end419, label %land.lhs.true393, !dbg !10587

land.lhs.true393:                                 ; preds = %if.else389
  %95 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10588
  %cmp395 = icmp eq %union.tree_node* %92, %95, !dbg !10589
  br i1 %cmp395, label %if.end419, label %land.lhs.true397, !dbg !10590

land.lhs.true397:                                 ; preds = %land.lhs.true393
  %type400 = getelementptr inbounds %union.tree_node, %union.tree_node* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10591
  %96 = bitcast %union.tree_node** %type400 to %struct.tree_type**, !dbg !10591
  %97 = load %struct.tree_type*, %struct.tree_type** %96, align 8, !dbg !10591
  %main_variant402 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %97, i64 0, i32 16, !dbg !10591
  %98 = load %union.tree_node*, %union.tree_node** %main_variant402, align 8, !dbg !10591
  %cmp403 = icmp ne %union.tree_node* %98, %fieldtype315.0, !dbg !10592
  %bf.cast332.off = add nsw i32 %bf.cast332, -14, !dbg !10593
  %switch16 = icmp ult i32 %bf.cast332.off, 4, !dbg !10593
  %or.cond17 = and i1 %cmp403, %switch16, !dbg !10594
  br i1 %or.cond17, label %if.then417, label %if.end419, !dbg !10594

if.then417:                                       ; preds = %land.lhs.true397
  call void @push_init_level(i32 1) #7, !dbg !10595
  br label %cleanup433, !dbg !10597, !llvm.loop !10496

if.end419:                                        ; preds = %land.lhs.true393, %if.else389, %land.lhs.true397, %if.then387
  %99 = phi %union.tree_node* [ %92, %land.lhs.true393 ], [ null, %if.else389 ], [ %92, %land.lhs.true397 ], [ %0, %if.then387 ], !dbg !10598
  %tobool421 = icmp eq %union.tree_node* %99, null, !dbg !10600
  %100 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10601
  br i1 %tobool421, label %if.else427, label %if.then422, !dbg !10602

if.then422:                                       ; preds = %if.end419
  call fastcc void @push_member_name(%union.tree_node* %100) #7, !dbg !10603
  %101 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10605
  %102 = load %union.tree_node*, %union.tree_node** %original_type603, align 8, !dbg !10606
  %103 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10607
  call fastcc void @output_init_element(%union.tree_node* %101, %union.tree_node* %102, i8 zeroext %conv4, %union.tree_node* %fieldtype315.0, %union.tree_node* %103, i32 1, i8 zeroext %implicit) #7, !dbg !10608
  %104 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8, !dbg !10609
  %105 = load i32, i32* @constructor_depth, align 4, !dbg !10609
  %idx.ext425 = sext i32 %105 to i64, !dbg !10609
  %add.ptr426 = getelementptr inbounds %struct.spelling, %struct.spelling* %104, i64 %idx.ext425, !dbg !10609
  store %struct.spelling* %add.ptr426, %struct.spelling** @spelling, align 8, !dbg !10609
  br label %if.end432, !dbg !10610

if.else427:                                       ; preds = %if.end419
  %size429 = getelementptr inbounds %union.tree_node, %union.tree_node* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10611
  %106 = bitcast %union.tree_node** %size429 to i64*, !dbg !10611
  %107 = load i64, i64* %106, align 8, !dbg !10611
  store i64 %107, i64* bitcast (%union.tree_node** @constructor_bit_index to i64*), align 8, !dbg !10613
  %chain431 = getelementptr inbounds %union.tree_node, %union.tree_node* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10614
  %108 = bitcast %union.tree_node** %chain431 to i64*, !dbg !10614
  %109 = load i64, i64* %108, align 8, !dbg !10614
  store i64 %109, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !10615
  br label %if.end432

if.end432:                                        ; preds = %if.else427, %if.then422
  store %union.tree_node* null, %union.tree_node** @constructor_fields, align 8, !dbg !10616
  br label %cleanup433, !dbg !10617

cleanup433:                                       ; preds = %if.end432, %if.then417, %if.then319
  %cleanup.dest.slot.1 = phi i32 [ 5, %if.then319 ], [ 0, %if.end432 ], [ 4, %if.then417 ]
  switch i32 %cleanup.dest.slot.1, label %unreachable [
    i32 0, label %if.end609
    i32 5, label %while.end680.loopexit
    i32 4, label %while.cond136.backedge
  ]

if.else437:                                       ; preds = %if.else307
  %cmp442 = icmp eq i64 %bf.cast14121, 15, !dbg !10618
  br i1 %cmp442, label %if.then444, label %if.else549, !dbg !10619

if.then444:                                       ; preds = %if.else437
  %type446 = getelementptr inbounds i64, i64* %36, i64 2, !dbg !10620
  %110 = bitcast i64* %type446 to %struct.tree_type**, !dbg !10620
  %111 = load %struct.tree_type*, %struct.tree_type** %110, align 8, !dbg !10620
  %main_variant448 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %111, i64 0, i32 16, !dbg !10620
  %112 = load %union.tree_node*, %union.tree_node** %main_variant448, align 8, !dbg !10620
  call void @llvm.dbg.value(metadata %union.tree_node* %112, metadata !10325, metadata !DIExpression()), !dbg !10621
  %113 = getelementptr inbounds %union.tree_node, %union.tree_node* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10622
  %bf.load450 = load i64, i64* %113, align 8, !dbg !10622
  %114 = trunc i64 %bf.load450 to i32, !dbg !10622
  %bf.cast452 = and i32 %114, 65535, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %bf.cast452, metadata !10328, metadata !DIExpression()), !dbg !10621
  %115 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10623
  %cmp454 = icmp ne %union.tree_node* %115, null, !dbg !10625
  %cmp457 = icmp eq i32 %bf.cast452, 15, !dbg !10626
  %or.cond11 = and i1 %cmp454, %cmp457, !dbg !10627
  br i1 %or.cond11, label %land.lhs.true459, label %if.else490, !dbg !10627

land.lhs.true459:                                 ; preds = %if.then444
  %type461 = getelementptr inbounds %union.tree_node, %union.tree_node* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10628
  %116 = bitcast %union.tree_node** %type461 to i64**, !dbg !10628
  %117 = load i64*, i64** %116, align 8, !dbg !10628
  %bf.load463 = load i64, i64* %117, align 8, !dbg !10628
  %bf.cast46526 = and i64 %bf.load463, 65535, !dbg !10628
  %cmp466 = icmp eq i64 %bf.cast46526, 6, !dbg !10628
  br i1 %cmp466, label %land.lhs.true486, label %lor.lhs.false468, !dbg !10628

lor.lhs.false468:                                 ; preds = %land.lhs.true459
  %cmp475 = icmp eq i64 %bf.cast46526, 7, !dbg !10628
  br i1 %cmp475, label %land.lhs.true486, label %lor.lhs.false477, !dbg !10628

lor.lhs.false477:                                 ; preds = %lor.lhs.false468
  %cmp484 = icmp eq i64 %bf.cast46526, 8, !dbg !10628
  %or.cond12 = and i1 %cmp484, %3, !dbg !10629
  br i1 %or.cond12, label %if.then488, label %if.else490, !dbg !10629

land.lhs.true486:                                 ; preds = %lor.lhs.false468, %land.lhs.true459
  br i1 %3, label %if.then488, label %if.else490, !dbg !10630

if.then488:                                       ; preds = %lor.lhs.false477, %land.lhs.true486
  store %union.tree_node* %0, %union.tree_node** %value1, align 8, !dbg !10631
  br label %if.end520, !dbg !10632

if.else490:                                       ; preds = %land.lhs.true486, %lor.lhs.false477, %if.then444
  %cmp492 = icmp eq %union.tree_node* %115, null, !dbg !10633
  br i1 %cmp492, label %if.end520, label %land.lhs.true494, !dbg !10635

land.lhs.true494:                                 ; preds = %if.else490
  %118 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10636
  %cmp496 = icmp eq %union.tree_node* %115, %118, !dbg !10637
  br i1 %cmp496, label %if.end520, label %land.lhs.true498, !dbg !10638

land.lhs.true498:                                 ; preds = %land.lhs.true494
  %type501 = getelementptr inbounds %union.tree_node, %union.tree_node* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10639
  %119 = bitcast %union.tree_node** %type501 to %struct.tree_type**, !dbg !10639
  %120 = load %struct.tree_type*, %struct.tree_type** %119, align 8, !dbg !10639
  %main_variant503 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %120, i64 0, i32 16, !dbg !10639
  %121 = load %union.tree_node*, %union.tree_node** %main_variant503, align 8, !dbg !10639
  %cmp504 = icmp ne %union.tree_node* %121, %112, !dbg !10640
  %bf.cast452.off = add nsw i32 %bf.cast452, -14, !dbg !10641
  %switch18 = icmp ult i32 %bf.cast452.off, 4, !dbg !10641
  %or.cond19 = and i1 %cmp504, %switch18, !dbg !10642
  br i1 %or.cond19, label %if.then518, label %if.end520, !dbg !10642

if.then518:                                       ; preds = %land.lhs.true498
  call void @push_init_level(i32 1) #7, !dbg !10643
  br label %cleanup545, !dbg !10645, !llvm.loop !10496

if.end520:                                        ; preds = %land.lhs.true494, %if.else490, %land.lhs.true498, %if.then488
  %.pre56 = phi %union.tree_node* [ %115, %land.lhs.true494 ], [ null, %if.else490 ], [ %115, %land.lhs.true498 ], [ %0, %if.then488 ]
  %122 = phi %union.tree_node* [ %115, %land.lhs.true494 ], [ null, %if.else490 ], [ %115, %land.lhs.true498 ], [ %0, %if.then488 ]
  %123 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !10646
  %cmp521 = icmp eq %union.tree_node* %123, null, !dbg !10648
  br i1 %cmp521, label %if.end530, label %land.lhs.true523, !dbg !10649

land.lhs.true523:                                 ; preds = %if.end520
  %124 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10650
  %call524 = call i32 @tree_int_cst_lt(%union.tree_node* nonnull %123, %union.tree_node* %124) #6, !dbg !10651
  %tobool525 = icmp eq i32 %call524, 0, !dbg !10651
  br i1 %tobool525, label %lor.lhs.false526, label %if.then529, !dbg !10652

lor.lhs.false526:                                 ; preds = %land.lhs.true523
  %125 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !10653
  %call527 = call i32 @integer_all_onesp(%union.tree_node* %125) #6, !dbg !10654
  %tobool528 = icmp eq i32 %call527, 0, !dbg !10654
  br i1 %tobool528, label %lor.lhs.false526.if.end530_crit_edge, label %if.then529, !dbg !10655

lor.lhs.false526.if.end530_crit_edge:             ; preds = %lor.lhs.false526
  br label %if.end530, !dbg !10655

if.then529:                                       ; preds = %lor.lhs.false526, %land.lhs.true523
  %126 = load i32, i32* @input_location, align 4, !dbg !10656
  call void @pedwarn_init(i32 %126, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.107, i64 0, i64 0)) #7, !dbg !10658
  br label %cleanup545, !dbg !10659

if.end530:                                        ; preds = %lor.lhs.false526.if.end530_crit_edge, %if.end520
  %127 = phi %union.tree_node* [ %.pre56, %lor.lhs.false526.if.end530_crit_edge ], [ %122, %if.end520 ], !dbg !10660
  %tobool532 = icmp eq %union.tree_node* %127, null, !dbg !10662
  br i1 %tobool532, label %if.end539, label %if.then533, !dbg !10663

if.then533:                                       ; preds = %if.end530
  %128 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10664
  %call534 = call i64 @tree_low_cst(%union.tree_node* %128, i32 1) #6, !dbg !10666
  call fastcc void @push_array_bounds(i64 %call534) #7, !dbg !10667
  %129 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10668
  %130 = load %union.tree_node*, %union.tree_node** %original_type603, align 8, !dbg !10669
  %131 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10670
  call fastcc void @output_init_element(%union.tree_node* %129, %union.tree_node* %130, i8 zeroext %conv4, %union.tree_node* %112, %union.tree_node* %131, i32 1, i8 zeroext %implicit) #7, !dbg !10671
  %132 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8, !dbg !10672
  %133 = load i32, i32* @constructor_depth, align 4, !dbg !10672
  %idx.ext537 = sext i32 %133 to i64, !dbg !10672
  %add.ptr538 = getelementptr inbounds %struct.spelling, %struct.spelling* %132, i64 %idx.ext537, !dbg !10672
  store %struct.spelling* %add.ptr538, %struct.spelling** @spelling, align 8, !dbg !10672
  br label %if.end539, !dbg !10673

if.end539:                                        ; preds = %if.end530, %if.then533
  %134 = load i32, i32* @input_location, align 4, !dbg !10674
  %135 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10675
  %136 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 16, !dbg !10676
  %call540 = call %union.tree_node* @size_binop_loc(i32 %134, i32 63, %union.tree_node* %135, %union.tree_node* %136) #6, !dbg !10677
  store %union.tree_node* %call540, %union.tree_node** @constructor_index, align 8, !dbg !10678
  %137 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10679
  %tobool542 = icmp eq %union.tree_node* %137, null, !dbg !10681
  br i1 %tobool542, label %if.then543, label %cleanup545, !dbg !10682

if.then543:                                       ; preds = %if.end539
  %138 = ptrtoint %union.tree_node* %call540 to i64, !dbg !10682
  store i64 %138, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !10683
  br label %cleanup545, !dbg !10684

cleanup545:                                       ; preds = %if.end539, %if.then543, %if.then529, %if.then518
  %cleanup.dest.slot.2 = phi i32 [ 5, %if.then529 ], [ 4, %if.then518 ], [ 0, %if.then543 ], [ 0, %if.end539 ]
  switch i32 %cleanup.dest.slot.2, label %unreachable [
    i32 0, label %if.end609
    i32 4, label %while.cond136.backedge
    i32 5, label %while.end680.loopexit
  ]

if.else549:                                       ; preds = %if.else437
  %cmp554 = icmp eq i64 %bf.cast14121, 14, !dbg !10685
  br i1 %cmp554, label %if.then556, label %if.else591, !dbg !10686

if.then556:                                       ; preds = %if.else549
  %type559 = getelementptr inbounds i64, i64* %36, i64 2, !dbg !10687
  %139 = bitcast i64* %type559 to %struct.tree_type**, !dbg !10687
  %140 = load %struct.tree_type*, %struct.tree_type** %139, align 8, !dbg !10687
  %main_variant561 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %140, i64 0, i32 16, !dbg !10687
  %141 = load %union.tree_node*, %union.tree_node** %main_variant561, align 8, !dbg !10687
  call void @llvm.dbg.value(metadata %union.tree_node* %141, metadata !10329, metadata !DIExpression()), !dbg !10688
  %142 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !10689
  %143 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10691
  %call562 = call i32 @tree_int_cst_lt(%union.tree_node* %142, %union.tree_node* %143) #6, !dbg !10692
  %tobool563 = icmp eq i32 %call562, 0, !dbg !10692
  br i1 %tobool563, label %if.end565, label %if.then564, !dbg !10693

if.then564:                                       ; preds = %if.then556
  %144 = load i32, i32* @input_location, align 4, !dbg !10694
  call void @pedwarn_init(i32 %144, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.108, i64 0, i64 0)) #7, !dbg !10696
  br label %cleanup588, !dbg !10697

if.end565:                                        ; preds = %if.then556
  %145 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10698
  %tobool567 = icmp eq %union.tree_node* %145, null, !dbg !10700
  br i1 %tobool567, label %if.end582, label %if.then568, !dbg !10701

if.then568:                                       ; preds = %if.end565
  %146 = getelementptr inbounds %union.tree_node, %union.tree_node* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10701
  %bf.load571 = load i64, i64* %146, align 8, !dbg !10702
  %bf.cast57325 = and i64 %bf.load571, 65535, !dbg !10705
  %cmp574 = icmp eq i64 %bf.cast57325, 27, !dbg !10705
  br i1 %cmp574, label %if.then576, label %if.end579, !dbg !10706

if.then576:                                       ; preds = %if.then568
  %147 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** @constructor_type to %struct.tree_type**), align 8, !dbg !10707
  %main_variant578 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %147, i64 0, i32 16, !dbg !10707
  %148 = load %union.tree_node*, %union.tree_node** %main_variant578, align 8, !dbg !10707
  call void @llvm.dbg.value(metadata %union.tree_node* %148, metadata !10329, metadata !DIExpression()), !dbg !10688
  br label %if.end579, !dbg !10708

if.end579:                                        ; preds = %if.then576, %if.then568
  %elttype557.0 = phi %union.tree_node* [ %148, %if.then576 ], [ %141, %if.then568 ], !dbg !10688
  call void @llvm.dbg.value(metadata %union.tree_node* %elttype557.0, metadata !10329, metadata !DIExpression()), !dbg !10688
  %149 = load %union.tree_node*, %union.tree_node** %original_type603, align 8, !dbg !10709
  %150 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10710
  call fastcc void @output_init_element(%union.tree_node* nonnull %145, %union.tree_node* %149, i8 zeroext %conv4, %union.tree_node* %elttype557.0, %union.tree_node* %150, i32 1, i8 zeroext %implicit) #7, !dbg !10711
  br label %if.end582, !dbg !10712

if.end582:                                        ; preds = %if.end565, %if.end579
  %151 = load i32, i32* @input_location, align 4, !dbg !10713
  %152 = load %union.tree_node*, %union.tree_node** @constructor_index, align 8, !dbg !10714
  %153 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 16, !dbg !10715
  %call583 = call %union.tree_node* @size_binop_loc(i32 %151, i32 63, %union.tree_node* %152, %union.tree_node* %153) #6, !dbg !10716
  store %union.tree_node* %call583, %union.tree_node** @constructor_index, align 8, !dbg !10717
  %154 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10718
  %tobool585 = icmp eq %union.tree_node* %154, null, !dbg !10720
  br i1 %tobool585, label %if.then586, label %cleanup588, !dbg !10721

if.then586:                                       ; preds = %if.end582
  %155 = ptrtoint %union.tree_node* %call583 to i64, !dbg !10721
  store i64 %155, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !10722
  br label %cleanup588, !dbg !10723

cleanup588:                                       ; preds = %if.end582, %if.then586, %if.then564
  %cleanup.dest.slot.3 = phi i1 [ false, %if.then564 ], [ true, %if.then586 ], [ true, %if.end582 ]
  br i1 %cleanup.dest.slot.3, label %if.end609, label %while.end680.loopexit

if.else591:                                       ; preds = %if.else549
  %156 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10724
  %cmp592 = icmp ne %union.tree_node* %156, %37, !dbg !10725
  %157 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10726
  %cmp595 = icmp eq %union.tree_node* %157, null, !dbg !10727
  %or.cond13 = and i1 %cmp592, %cmp595, !dbg !10728
  br i1 %or.cond13, label %if.then597, label %if.else598, !dbg !10728

if.then597:                                       ; preds = %if.else591
  %158 = load i32, i32* @input_location, align 4, !dbg !10729
  call void @pedwarn_init(i32 %158, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.109, i64 0, i64 0)) #7, !dbg !10731
  br label %while.end680, !dbg !10732

if.else598:                                       ; preds = %if.else591
  %159 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !10733
  %tobool600 = icmp eq %union.tree_node* %159, null, !dbg !10734
  br i1 %tobool600, label %if.end604, label %if.then601, !dbg !10735

if.then601:                                       ; preds = %if.else598
  %160 = load %union.tree_node*, %union.tree_node** %original_type603, align 8, !dbg !10736
  call fastcc void @output_init_element(%union.tree_node* nonnull %159, %union.tree_node* %160, i8 zeroext %conv4, %union.tree_node* %37, %union.tree_node* null, i32 1, i8 zeroext %implicit) #7, !dbg !10737
  br label %if.end604, !dbg !10737

if.end604:                                        ; preds = %if.else598, %if.then601
  store %union.tree_node* null, %union.tree_node** @constructor_fields, align 8, !dbg !10738
  br label %if.end609

if.end609:                                        ; preds = %cleanup433, %if.end604, %cleanup588, %cleanup545, %cleanup
  %161 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !10739
  %tobool610 = icmp eq %struct.constructor_range_stack* %161, null, !dbg !10739
  br i1 %tobool610, label %while.end680.loopexit, label %if.then611, !dbg !10740

if.then611:                                       ; preds = %if.end609
  call void @llvm.dbg.value(metadata i32 0, metadata !10336, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %161, metadata !10335, metadata !DIExpression()), !dbg !10741
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !10742
  %stack = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %161, i64 0, i32 2, !dbg !10741
  br label %while.cond612, !dbg !10743

while.cond612:                                    ; preds = %cond.end, %if.then611
  %162 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10744
  %163 = load %struct.constructor_stack*, %struct.constructor_stack** %stack, align 8, !dbg !10745
  %cmp613 = icmp eq %struct.constructor_stack* %162, %163, !dbg !10746
  br i1 %cmp613, label %for.cond.preheader, label %while.body615, !dbg !10743

for.cond.preheader:                               ; preds = %while.cond612
  br label %for.cond, !dbg !10747

while.body615:                                    ; preds = %while.cond612
  %implicit616 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %162, i64 0, i32 17, !dbg !10749
  %164 = load i8, i8* %implicit616, align 1, !dbg !10749
  %tobool617 = icmp eq i8 %164, 0, !dbg !10749
  br i1 %tobool617, label %cond.true, label %cond.end, !dbg !10749

cond.true:                                        ; preds = %while.body615
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 8096, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10749
  br label %cond.end, !dbg !10749

cond.end:                                         ; preds = %while.body615, %cond.true
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp618, i32 1) #7, !dbg !10751
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp618, i8 zeroext 1) #7, !dbg !10752
  br label %while.cond612, !dbg !10743, !llvm.loop !10753

for.cond:                                         ; preds = %for.cond.preheader, %cond.end628
  %p.0 = phi %struct.constructor_range_stack* [ %169, %cond.end628 ], [ %161, %for.cond.preheader ], !dbg !10755
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %p.0, metadata !10332, metadata !DIExpression()), !dbg !10741
  %range_end = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.0, i64 0, i32 5, !dbg !10756
  %165 = load %union.tree_node*, %union.tree_node** %range_end, align 8, !dbg !10756
  %tobool620 = icmp eq %union.tree_node* %165, null, !dbg !10758
  br i1 %tobool620, label %for.body, label %lor.rhs, !dbg !10759

lor.rhs:                                          ; preds = %for.cond
  %index = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.0, i64 0, i32 4, !dbg !10760
  %166 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !10760
  %call622 = call i32 @tree_int_cst_equal(%union.tree_node* %166, %union.tree_node* nonnull %165) #6, !dbg !10761
  %tobool623 = icmp eq i32 %call622, 0, !dbg !10759
  br i1 %tobool623, label %for.end, label %for.body, !dbg !10747

for.body:                                         ; preds = %lor.rhs, %for.cond
  %167 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10762
  %implicit624 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %167, i64 0, i32 17, !dbg !10762
  %168 = load i8, i8* %implicit624, align 1, !dbg !10762
  %tobool625 = icmp eq i8 %168, 0, !dbg !10762
  br i1 %tobool625, label %cond.true626, label %cond.end628, !dbg !10762

cond.true626:                                     ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 8103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10762
  br label %cond.end628, !dbg !10762

cond.end628:                                      ; preds = %for.body, %cond.true626
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp630, i32 1) #7, !dbg !10764
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp630, i8 zeroext 1) #7, !dbg !10765
  %prev = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.0, i64 0, i32 1, !dbg !10766
  %169 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %prev, align 8, !dbg !10766
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %169, metadata !10332, metadata !DIExpression()), !dbg !10741
  br label %for.cond, !dbg !10767, !llvm.loop !10768

for.end:                                          ; preds = %lor.rhs
  %index.lcssa = phi %union.tree_node** [ %index, %lor.rhs ], !dbg !10760
  %p.0.lcssa = phi %struct.constructor_range_stack* [ %p.0, %lor.rhs ], !dbg !10755
  %range_end.lcssa = phi %union.tree_node** [ %range_end, %lor.rhs ], !dbg !10756
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %p.0.lcssa, metadata !10332, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %p.0.lcssa, metadata !10332, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %p.0.lcssa, metadata !10332, metadata !DIExpression()), !dbg !10741
  %170 = load i32, i32* @input_location, align 4, !dbg !10770
  %171 = load %union.tree_node*, %union.tree_node** %index.lcssa, align 8, !dbg !10771
  %172 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 16, !dbg !10772
  %call632 = call %union.tree_node* @size_binop_loc(i32 %170, i32 63, %union.tree_node* %171, %union.tree_node* %172) #6, !dbg !10773
  store %union.tree_node* %call632, %union.tree_node** %index.lcssa, align 8, !dbg !10774
  %173 = load %union.tree_node*, %union.tree_node** %range_end.lcssa, align 8, !dbg !10775
  %call636 = call i32 @tree_int_cst_equal(%union.tree_node* %call632, %union.tree_node* %173) #6, !dbg !10777
  %tobool637 = icmp eq i32 %call636, 0, !dbg !10777
  br i1 %tobool637, label %if.end642, label %land.lhs.true638, !dbg !10778

land.lhs.true638:                                 ; preds = %for.end
  %prev639 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.0.lcssa, i64 0, i32 1, !dbg !10779
  %174 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %prev639, align 8, !dbg !10779
  %tobool640 = icmp eq %struct.constructor_range_stack* %174, null, !dbg !10780
  %spec.select = zext i1 %tobool640 to i32, !dbg !10781
  br label %if.end642, !dbg !10781

if.end642:                                        ; preds = %for.end, %land.lhs.true638
  %finish.0 = phi i32 [ 0, %for.end ], [ %spec.select, %land.lhs.true638 ], !dbg !10741
  call void @llvm.dbg.value(metadata i32 %finish.0, metadata !10336, metadata !DIExpression()), !dbg !10741
  br label %while.cond643, !dbg !10782

while.cond643:                                    ; preds = %if.end671, %if.end642
  %p.1 = phi %struct.constructor_range_stack* [ %p.0.lcssa, %if.end642 ], [ %182, %if.end671 ], !dbg !10741
  %finish.1 = phi i32 [ %finish.0, %if.end642 ], [ %finish.2, %if.end671 ], !dbg !10741
  call void @llvm.dbg.value(metadata i32 %finish.1, metadata !10336, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %p.1, metadata !10332, metadata !DIExpression()), !dbg !10741
  %index645 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.1, i64 0, i32 4, !dbg !10783
  %175 = bitcast %union.tree_node** %index645 to i64*, !dbg !10783
  %176 = load i64, i64* %175, align 8, !dbg !10783
  store i64 %176, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !10785
  %fields = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.1, i64 0, i32 6, !dbg !10786
  %177 = bitcast %union.tree_node** %fields to i64*, !dbg !10786
  %178 = load i64, i64* %177, align 8, !dbg !10786
  store i64 %178, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !10787
  %tobool646 = icmp eq i32 %finish.1, 0, !dbg !10788
  %179 = inttoptr i64 %176 to %union.tree_node*, !dbg !10790
  br i1 %tobool646, label %if.end656, label %land.lhs.true647, !dbg !10790

land.lhs.true647:                                 ; preds = %while.cond643
  %range_end648 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.1, i64 0, i32 5, !dbg !10791
  %180 = load %union.tree_node*, %union.tree_node** %range_end648, align 8, !dbg !10791
  %tobool649 = icmp eq %union.tree_node* %180, null, !dbg !10792
  br i1 %tobool649, label %if.end656, label %land.lhs.true650, !dbg !10793

land.lhs.true650:                                 ; preds = %land.lhs.true647
  %range_start = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.1, i64 0, i32 3, !dbg !10794
  %181 = load %union.tree_node*, %union.tree_node** %range_start, align 8, !dbg !10794
  %cmp652 = icmp eq %union.tree_node* %181, %179, !dbg !10795
  br i1 %cmp652, label %if.then654, label %if.end656, !dbg !10796

if.then654:                                       ; preds = %land.lhs.true650
  call void @llvm.dbg.value(metadata i32 0, metadata !10336, metadata !DIExpression()), !dbg !10741
  %prev655 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.1, i64 0, i32 1, !dbg !10797
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %prev655, align 8, !dbg !10799
  br label %if.end656, !dbg !10800

if.end656:                                        ; preds = %land.lhs.true647, %while.cond643, %if.then654, %land.lhs.true650
  %finish.2 = phi i32 [ 0, %if.then654 ], [ %finish.1, %land.lhs.true650 ], [ %finish.1, %land.lhs.true647 ], [ 0, %while.cond643 ], !dbg !10741
  call void @llvm.dbg.value(metadata i32 %finish.2, metadata !10336, metadata !DIExpression()), !dbg !10741
  %next = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %p.1, i64 0, i32 0, !dbg !10801
  %182 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** %next, align 8, !dbg !10801
  call void @llvm.dbg.value(metadata %struct.constructor_range_stack* %182, metadata !10332, metadata !DIExpression()), !dbg !10741
  %tobool657 = icmp eq %struct.constructor_range_stack* %182, null, !dbg !10802
  br i1 %tobool657, label %while.end672, label %if.end659, !dbg !10804

if.end659:                                        ; preds = %if.end656
  call void @push_init_level(i32 2) #7, !dbg !10805
  %183 = load i64, i64* bitcast (%struct.constructor_stack** @constructor_stack to i64*), align 8, !dbg !10806
  %stack660 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %182, i64 0, i32 2, !dbg !10807
  %184 = bitcast %struct.constructor_stack** %stack660 to i64*, !dbg !10808
  store i64 %183, i64* %184, align 8, !dbg !10808
  %range_end661 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %182, i64 0, i32 5, !dbg !10809
  %185 = load %union.tree_node*, %union.tree_node** %range_end661, align 8, !dbg !10809
  %tobool662 = icmp eq %union.tree_node* %185, null, !dbg !10811
  br i1 %tobool662, label %if.end671, label %land.lhs.true663, !dbg !10812

land.lhs.true663:                                 ; preds = %if.end659
  %index664 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %182, i64 0, i32 4, !dbg !10813
  %186 = load %union.tree_node*, %union.tree_node** %index664, align 8, !dbg !10813
  %call666 = call i32 @tree_int_cst_equal(%union.tree_node* %186, %union.tree_node* nonnull %185) #6, !dbg !10814
  %tobool667 = icmp eq i32 %call666, 0, !dbg !10814
  br i1 %tobool667, label %if.end671, label %if.then668, !dbg !10815

if.then668:                                       ; preds = %land.lhs.true663
  %range_start669 = getelementptr inbounds %struct.constructor_range_stack, %struct.constructor_range_stack* %182, i64 0, i32 3, !dbg !10816
  %187 = bitcast %union.tree_node** %range_start669 to i64*, !dbg !10816
  %188 = load i64, i64* %187, align 8, !dbg !10816
  %189 = bitcast %union.tree_node** %index664 to i64*, !dbg !10817
  store i64 %188, i64* %189, align 8, !dbg !10817
  br label %if.end671, !dbg !10818

if.end671:                                        ; preds = %land.lhs.true663, %if.end659, %if.then668
  br label %while.cond643, !dbg !10782, !llvm.loop !10819

while.end672:                                     ; preds = %if.end656
  %finish.2.lcssa = phi i32 [ %finish.2, %if.end656 ], !dbg !10741
  call void @llvm.dbg.value(metadata i32 %finish.2.lcssa, metadata !10336, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata i32 %finish.2.lcssa, metadata !10336, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata i32 %finish.2.lcssa, metadata !10336, metadata !DIExpression()), !dbg !10741
  %tobool673 = icmp eq i32 %finish.2.lcssa, 0, !dbg !10821
  br i1 %tobool673, label %if.then674, label %if.end675, !dbg !10823

if.then674:                                       ; preds = %while.end672
  store %struct.constructor_range_stack* %161, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !10824
  br label %if.end675, !dbg !10825

if.end675:                                        ; preds = %while.end672, %if.then674
  br label %while.cond136.backedge

while.end680.loopexit:                            ; preds = %cleanup, %cleanup433, %cleanup545, %cleanup588, %if.end609
  br label %while.end680, !dbg !10826

while.end680:                                     ; preds = %while.end680.loopexit, %if.then597
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !10826
  br label %cleanup.cont685, !dbg !10827

cleanup.cont685:                                  ; preds = %if.end, %if.then48, %while.end680, %if.end49
  ret void, !dbg !10827

unreachable:                                      ; preds = %cleanup545, %cleanup433, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @pop_init_level(%struct.c_expr* noalias sret %agg.result, i32 %implicit) local_unnamed_addr #5 !dbg !10828 {
entry:
  %agg.tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata i32 %implicit, metadata !10832, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !10834, metadata !DIExpression()), !dbg !10836
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 0, !dbg !10837
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !10838
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !10839
  store i32 0, i32* %original_code, align 8, !dbg !10840
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !10841
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !10842
  %cmp = icmp eq i32 %implicit, 0, !dbg !10843
  br i1 %cmp, label %while.cond.preheader, label %if.end, !dbg !10845

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !10846

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %0 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10848
  %implicit1 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %0, i64 0, i32 17, !dbg !10849
  %1 = load i8, i8* %implicit1, align 1, !dbg !10849
  %tobool = icmp eq i8 %1, 0, !dbg !10846
  br i1 %tobool, label %while.end, label %while.body, !dbg !10846

while.body:                                       ; preds = %while.cond
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp, i32 1) #7, !dbg !10850
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp, i8 zeroext 1) #7, !dbg !10851
  br label %while.cond, !dbg !10846, !llvm.loop !10852

while.end:                                        ; preds = %while.cond
  %2 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !10854
  %tobool2 = icmp eq %struct.constructor_range_stack* %2, null, !dbg !10854
  br i1 %tobool2, label %if.end, label %cond.true, !dbg !10854

cond.true:                                        ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 6626, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10854
  br label %if.end, !dbg !10854

if.end:                                           ; preds = %while.end, %cond.true, %entry
  store i32 1, i32* @constructor_incremental, align 4, !dbg !10855
  call fastcc void @output_pending_init_elements(i32 1) #7, !dbg !10856
  %3 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !10857
  call void @llvm.dbg.value(metadata %struct.constructor_stack* %3, metadata !10833, metadata !DIExpression()), !dbg !10835
  %4 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !10858
  %tobool3 = icmp ne %union.tree_node* %4, null, !dbg !10858
  %5 = load %union.tree_node*, %union.tree_node** @constructor_fields, align 8, !dbg !10860
  %tobool4 = icmp ne %union.tree_node* %5, null, !dbg !10860
  %or.cond = and i1 %tobool3, %tobool4, !dbg !10861
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10861
  br i1 %or.cond, label %land.lhs.true5, label %if.end31, !dbg !10861

land.lhs.true5:                                   ; preds = %if.end
  %bf.load = load i64, i64* %6, align 8, !dbg !10862
  %bf.cast12 = and i64 %bf.load, 65535, !dbg !10863
  %cmp6 = icmp eq i64 %bf.cast12, 15, !dbg !10863
  br i1 %cmp6, label %land.lhs.true7, label %if.end31, !dbg !10864

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10865
  %7 = bitcast i32* %values to %union.tree_node**, !dbg !10865
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !10865
  %tobool8 = icmp eq %union.tree_node* %8, null, !dbg !10865
  br i1 %tobool8, label %if.end31, label %land.lhs.true9, !dbg !10866

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10867
  %9 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !10867
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !10867
  %tobool13 = icmp eq %union.tree_node* %10, null, !dbg !10867
  br i1 %tobool13, label %if.then14, label %if.end31, !dbg !10868

if.then14:                                        ; preds = %land.lhs.true9
  %11 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !10869
  %call = call i32 @integer_zerop(%union.tree_node* %11) #6, !dbg !10872
  %tobool15 = icmp eq i32 %call, 0, !dbg !10872
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !10873

if.then16:                                        ; preds = %if.then14
  store %union.tree_node* null, %union.tree_node** @constructor_type, align 8, !dbg !10874
  br label %if.end31, !dbg !10875

if.else:                                          ; preds = %if.then14
  %12 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** @constructor_type to %struct.tree_type**), align 8, !dbg !10876
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %12, i64 0, i32 2, !dbg !10876
  %13 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !10876
  %tobool18 = icmp eq %union.tree_node* %13, null, !dbg !10876
  br i1 %tobool18, label %cond.end21, label %cond.true19, !dbg !10876

cond.true19:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 6648, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10876
  br label %cond.end21, !dbg !10876

cond.end21:                                       ; preds = %if.else, %cond.true19
  %14 = load i32, i32* @constructor_depth, align 4, !dbg !10878
  %cmp23 = icmp sgt i32 %14, 2, !dbg !10880
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !10881

if.then24:                                        ; preds = %cond.end21
  call void @error_init(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.88, i64 0, i64 0)) #7, !dbg !10882
  br label %if.end26, !dbg !10882

if.else25:                                        ; preds = %cond.end21
  %15 = load i32, i32* @input_location, align 4, !dbg !10883
  call void @pedwarn_init(i32 %15, i32 834, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.89, i64 0, i64 0)) #7, !dbg !10884
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  %16 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @constructor_fields to %struct.tree_common**), align 8, !dbg !10885
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 1, !dbg !10885
  %17 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10885
  %cmp27 = icmp eq %union.tree_node* %17, null, !dbg !10887
  br i1 %cmp27, label %if.end26.if.end31_crit_edge, label %if.then28, !dbg !10888

if.end26.if.end31_crit_edge:                      ; preds = %if.end26
  %.pre = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !10889
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10888
  br label %if.end31, !dbg !10888

if.then28:                                        ; preds = %if.end26
  store %union.tree_node* null, %union.tree_node** @constructor_type, align 8, !dbg !10891
  br label %if.end31, !dbg !10892

if.end31:                                         ; preds = %if.end26.if.end31_crit_edge, %land.lhs.true9, %land.lhs.true7, %if.then16, %if.then28, %land.lhs.true5, %if.end
  %19 = phi i64* [ %18, %if.end26.if.end31_crit_edge ], [ %6, %land.lhs.true9 ], [ %6, %land.lhs.true7 ], [ null, %if.then16 ], [ null, %if.then28 ], [ %6, %land.lhs.true5 ], [ %6, %if.end ]
  %20 = phi %union.tree_node* [ %.pre, %if.end26.if.end31_crit_edge ], [ %4, %land.lhs.true9 ], [ %4, %land.lhs.true7 ], [ null, %if.then16 ], [ null, %if.then28 ], [ %4, %land.lhs.true5 ], [ %4, %if.end ], !dbg !10889
  %21 = load i32, i32* @warn_missing_field_initializers, align 4, !dbg !10893
  %tobool32 = icmp ne i32 %21, 0, !dbg !10893
  %tobool34 = icmp ne %union.tree_node* %20, null, !dbg !10889
  %or.cond1 = and i1 %tobool32, %tobool34, !dbg !10894
  br i1 %or.cond1, label %land.lhs.true35, label %if.end61, !dbg !10894

land.lhs.true35:                                  ; preds = %if.end31
  %bf.load37 = load i64, i64* %19, align 8, !dbg !10895
  %bf.cast3911 = and i64 %bf.load37, 65535, !dbg !10896
  %cmp40 = icmp eq i64 %bf.cast3911, 16, !dbg !10896
  %22 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !10897
  %tobool42 = icmp ne %union.tree_node* %22, null, !dbg !10897
  %or.cond2 = and i1 %cmp40, %tobool42, !dbg !10898
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10898
  br i1 %or.cond2, label %while.cond44.preheader, label %if.end61, !dbg !10898

while.cond44.preheader:                           ; preds = %land.lhs.true35
  br label %while.cond44, !dbg !10899

while.cond44:                                     ; preds = %while.cond44.preheader, %while.body52
  %24 = phi %union.tree_node* [ %22, %while.cond44.preheader ], [ %36, %while.body52 ]
  %25 = phi %union.tree_node* [ %22, %while.cond44.preheader ], [ %36, %while.body52 ]
  %26 = phi %struct.tree_decl_common* [ %23, %while.cond44.preheader ], [ %37, %while.body52 ]
  %27 = phi %struct.tree_decl_common* [ %23, %while.cond44.preheader ], [ %37, %while.body52 ]
  %28 = phi %union.tree_node* [ %22, %while.cond44.preheader ], [ %36, %while.body52 ], !dbg !10901
  %tobool45 = icmp eq %union.tree_node* %28, null, !dbg !10901
  br i1 %tobool45, label %land.end, label %land.rhs, !dbg !10902

land.rhs:                                         ; preds = %while.cond44
  %size46 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %27, i64 0, i32 1, !dbg !10903
  %29 = load %union.tree_node*, %union.tree_node** %size46, align 8, !dbg !10903
  %tobool47 = icmp eq %union.tree_node* %29, null, !dbg !10903
  br i1 %tobool47, label %land.end, label %lor.rhs, !dbg !10904

lor.rhs:                                          ; preds = %land.rhs
  %size49 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %26, i64 0, i32 1, !dbg !10905
  %30 = load %union.tree_node*, %union.tree_node** %size49, align 8, !dbg !10905
  %call50 = call i32 @integer_zerop(%union.tree_node* %30) #6, !dbg !10906
  %tobool51 = icmp ne i32 %call50, 0, !dbg !10904
  %.pre13 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !10907
  br label %land.end, !dbg !10904

land.end:                                         ; preds = %land.rhs, %while.cond44, %lor.rhs
  %31 = phi %union.tree_node* [ %24, %while.cond44 ], [ %24, %land.rhs ], [ %.pre13, %lor.rhs ]
  %32 = phi %union.tree_node* [ %25, %while.cond44 ], [ %25, %land.rhs ], [ %.pre13, %lor.rhs ], !dbg !10907
  %33 = phi i1 [ false, %while.cond44 ], [ true, %land.rhs ], [ %tobool51, %lor.rhs ], !dbg !10907
  br i1 %33, label %while.body52, label %while.end55, !dbg !10899

while.body52:                                     ; preds = %land.end
  %chain54 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10908
  %34 = bitcast %union.tree_node** %chain54 to i64*, !dbg !10908
  %35 = load i64, i64* %34, align 8, !dbg !10908
  store i64 %35, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !10909
  %36 = inttoptr i64 %35 to %union.tree_node*, !dbg !10899
  %37 = inttoptr i64 %35 to %struct.tree_decl_common*, !dbg !10899
  br label %while.cond44, !dbg !10899, !llvm.loop !10910

while.end55:                                      ; preds = %land.end
  %.lcssa16 = phi %union.tree_node* [ %31, %land.end ]
  %.lcssa = phi %union.tree_node* [ %32, %land.end ], !dbg !10907
  %tobool56 = icmp eq %union.tree_node* %.lcssa, null, !dbg !10911
  %38 = load i32, i32* @constructor_designated, align 4, !dbg !10913
  %tobool58 = icmp ne i32 %38, 0, !dbg !10913
  %or.cond3 = or i1 %tobool56, %tobool58, !dbg !10914
  br i1 %or.cond3, label %if.end61, label %if.then59, !dbg !10914

if.then59:                                        ; preds = %while.end55
  call fastcc void @push_member_name(%union.tree_node* %.lcssa16) #7, !dbg !10915
  call fastcc void @warning_init(i32 130, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.90, i64 0, i64 0)) #7, !dbg !10917
  %39 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8, !dbg !10918
  %40 = load i32, i32* @constructor_depth, align 4, !dbg !10918
  %idx.ext = sext i32 %40 to i64, !dbg !10918
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %39, i64 %idx.ext, !dbg !10918
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8, !dbg !10918
  br label %if.end61, !dbg !10919

if.end61:                                         ; preds = %if.then59, %while.end55, %land.lhs.true35, %if.end31
  %value62 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 12, i32 0, !dbg !10920
  %41 = load %union.tree_node*, %union.tree_node** %value62, align 8, !dbg !10920
  %tobool63 = icmp eq %union.tree_node* %41, null, !dbg !10922
  br i1 %tobool63, label %if.else66, label %if.then64, !dbg !10923

if.then64:                                        ; preds = %if.end61
  %replacement_value65 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 12, !dbg !10924
  %42 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !10924
  %43 = bitcast %struct.c_expr* %replacement_value65 to i8*, !dbg !10924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %43, i64 24, i1 false), !dbg !10924
  %.pre14 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !10925
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %.pre14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10927
  br label %if.end173, !dbg !10927

if.else66:                                        ; preds = %if.end61
  %45 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !10928
  %cmp67 = icmp eq %union.tree_node* %45, null, !dbg !10930
  br i1 %cmp67, label %if.end173, label %if.else69, !dbg !10931

if.else69:                                        ; preds = %if.else66
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10931
  %bf.load71 = load i64, i64* %46, align 8, !dbg !10932
  %bf.cast736 = and i64 %bf.load71, 65535, !dbg !10934
  %cmp74 = icmp eq i64 %bf.cast736, 16, !dbg !10934
  br i1 %cmp74, label %if.else138, label %land.lhs.true75, !dbg !10935

land.lhs.true75:                                  ; preds = %if.else69
  %cmp80 = icmp eq i64 %bf.cast736, 17, !dbg !10936
  br i1 %cmp80, label %if.else138, label %land.lhs.true81, !dbg !10937

land.lhs.true81:                                  ; preds = %land.lhs.true75
  %cmp86 = icmp eq i64 %bf.cast736, 15, !dbg !10938
  br i1 %cmp86, label %if.else138, label %land.lhs.true87, !dbg !10939

land.lhs.true87:                                  ; preds = %land.lhs.true81
  %cmp92 = icmp eq i64 %bf.cast736, 14, !dbg !10940
  br i1 %cmp92, label %if.else138, label %if.then93, !dbg !10941

if.then93:                                        ; preds = %land.lhs.true87
  %47 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !10942
  %base96 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %47, i64 0, i32 0, !dbg !10942
  %call100 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base96) #7, !dbg !10942
  %cmp101 = icmp eq i32 %call100, 0, !dbg !10942
  br i1 %cmp101, label %if.then102, label %if.else107, !dbg !10945

if.then102:                                       ; preds = %if.then93
  %48 = load i32, i32* @constructor_erroneous, align 4, !dbg !10946
  %tobool103 = icmp eq i32 %48, 0, !dbg !10946
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !10949

if.then104:                                       ; preds = %if.then102
  call void @error_init(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91, i64 0, i64 0)) #7, !dbg !10950
  br label %if.end105, !dbg !10950

if.end105:                                        ; preds = %if.then102, %if.then104
  %49 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !10951
  %50 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !10952
  store i64 %49, i64* %50, align 8, !dbg !10952
  %51 = inttoptr i64 %49 to %union.tree_node*, !dbg !10953
  %52 = inttoptr i64 %49 to i64*, !dbg !10953
  br label %if.end173, !dbg !10953

if.else107:                                       ; preds = %if.then93
  %53 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !10954
  %base110 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %53, i64 0, i32 0, !dbg !10954
  %call114 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base110) #7, !dbg !10954
  %cmp115 = icmp eq i32 %call114, 1, !dbg !10956
  br i1 %cmp115, label %if.else126, label %if.then116, !dbg !10957

if.then116:                                       ; preds = %if.else107
  call void @error_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.92, i64 0, i64 0)) #7, !dbg !10958
  %54 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !10960
  %base119 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %54, i64 0, i32 0, !dbg !10960
  %call123 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base119, i32 0) #7, !dbg !10960
  %value124 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call123, i64 0, i32 1, !dbg !10961
  %55 = bitcast %union.tree_node** %value124 to i64*, !dbg !10961
  %56 = load i64, i64* %55, align 8, !dbg !10961
  %57 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !10962
  store i64 %56, i64* %57, align 8, !dbg !10962
  %58 = inttoptr i64 %56 to %union.tree_node*, !dbg !10963
  %59 = inttoptr i64 %56 to i64*, !dbg !10963
  br label %if.end173, !dbg !10963

if.else126:                                       ; preds = %if.else107
  %60 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !10964
  %base129 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %60, i64 0, i32 0, !dbg !10964
  %call133 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base129, i32 0) #7, !dbg !10964
  %value134 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call133, i64 0, i32 1, !dbg !10965
  %61 = bitcast %union.tree_node** %value134 to i64*, !dbg !10965
  %62 = load i64, i64* %61, align 8, !dbg !10965
  %63 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !10966
  store i64 %62, i64* %63, align 8, !dbg !10966
  %64 = inttoptr i64 %62 to %union.tree_node*
  %65 = inttoptr i64 %62 to i64*
  br label %if.end173

if.else138:                                       ; preds = %land.lhs.true87, %land.lhs.true81, %land.lhs.true75, %if.else69
  %66 = load i32, i32* @constructor_erroneous, align 4, !dbg !10967
  %tobool139 = icmp eq i32 %66, 0, !dbg !10967
  br i1 %tobool139, label %if.else142, label %if.then140, !dbg !10970

if.then140:                                       ; preds = %if.else138
  %67 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !10971
  %68 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !10972
  store i64 %67, i64* %68, align 8, !dbg !10972
  %69 = inttoptr i64 %67 to %union.tree_node*, !dbg !10973
  %70 = inttoptr i64 %67 to i64*, !dbg !10973
  br label %if.end173, !dbg !10973

if.else142:                                       ; preds = %if.else138
  %71 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !10974
  %call143 = call %union.tree_node* @build_constructor(%union.tree_node* nonnull %45, %struct.VEC_constructor_elt_gc* %71) #6, !dbg !10976
  store %union.tree_node* %call143, %union.tree_node** %value, align 8, !dbg !10977
  %72 = load i32, i32* @constructor_constant, align 4, !dbg !10978
  %tobool145 = icmp eq i32 %72, 0, !dbg !10978
  %73 = getelementptr inbounds %union.tree_node, %union.tree_node* %call143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10980
  br i1 %tobool145, label %if.end151, label %if.then146, !dbg !10980

if.then146:                                       ; preds = %if.else142
  %bf.load149 = load i64, i64* %73, align 8, !dbg !10981
  %bf.set = or i64 %bf.load149, 131072, !dbg !10981
  store i64 %bf.set, i64* %73, align 8, !dbg !10981
  br label %if.end151, !dbg !10982

if.end151:                                        ; preds = %if.else142, %if.then146
  %tobool152 = icmp ne i32 %72, 0, !dbg !10983
  %74 = load i32, i32* @constructor_simple, align 4, !dbg !10985
  %tobool154 = icmp ne i32 %74, 0, !dbg !10985
  %or.cond4 = and i1 %tobool152, %tobool154, !dbg !10986
  br i1 %or.cond4, label %if.then155, label %if.end161, !dbg !10986

if.then155:                                       ; preds = %if.end151
  %bf.load158 = load i64, i64* %73, align 8, !dbg !10987
  %bf.set160 = or i64 %bf.load158, 67108864, !dbg !10987
  store i64 %bf.set160, i64* %73, align 8, !dbg !10987
  br label %if.end161, !dbg !10988

if.end161:                                        ; preds = %if.then155, %if.end151
  %75 = load i32, i32* @constructor_nonconst, align 4, !dbg !10989
  %tobool162 = icmp eq i32 %75, 0, !dbg !10989
  br i1 %tobool162, label %if.end173, label %if.then163, !dbg !10991

if.then163:                                       ; preds = %if.end161
  %bf.load166 = load i64, i64* %73, align 8, !dbg !10992
  %bf.set168 = or i64 %bf.load166, 17179869184, !dbg !10992
  store i64 %bf.set168, i64* %73, align 8, !dbg !10992
  br label %if.end173, !dbg !10993

if.end173:                                        ; preds = %if.end161, %if.else66, %if.then140, %if.then163, %if.end105, %if.else126, %if.then116, %if.then64
  %76 = phi %union.tree_node* [ %call143, %if.end161 ], [ null, %if.else66 ], [ %69, %if.then140 ], [ %call143, %if.then163 ], [ %51, %if.end105 ], [ %64, %if.else126 ], [ %58, %if.then116 ], [ %.pre14, %if.then64 ]
  %77 = phi i64* [ %73, %if.end161 ], [ null, %if.else66 ], [ %70, %if.then140 ], [ %73, %if.then163 ], [ %52, %if.end105 ], [ %65, %if.else126 ], [ %59, %if.then116 ], [ %44, %if.then64 ]
  %78 = phi %union.tree_node* [ %call143, %if.end161 ], [ null, %if.else66 ], [ %69, %if.then140 ], [ %call143, %if.then163 ], [ %51, %if.end105 ], [ %64, %if.else126 ], [ %58, %if.then116 ], [ %.pre14, %if.then64 ], !dbg !10925
  %tobool175 = icmp eq %union.tree_node* %78, null, !dbg !10994
  br i1 %tobool175, label %if.end194, label %land.lhs.true176, !dbg !10995

land.lhs.true176:                                 ; preds = %if.end173
  %bf.load179 = load i64, i64* %77, align 8, !dbg !10996
  %bf.cast1817 = and i64 %bf.load179, 65535, !dbg !10997
  %cmp182 = icmp eq i64 %bf.cast1817, 51, !dbg !10997
  br i1 %cmp182, label %if.end194, label %if.then183, !dbg !10998

if.then183:                                       ; preds = %land.lhs.true176
  %79 = load i32, i32* @constructor_nonconst, align 4, !dbg !10999
  %tobool184 = icmp eq i32 %79, 0, !dbg !10999
  br i1 %tobool184, label %if.else187, label %if.then185, !dbg !11002

if.then185:                                       ; preds = %if.then183
  store i32 189, i32* %original_code, align 8, !dbg !11003
  br label %if.end194, !dbg !11004

if.else187:                                       ; preds = %if.then183
  %80 = load i32, i32* %original_code, align 8, !dbg !11005
  %cmp189 = icmp eq i32 %80, 189, !dbg !11007
  br i1 %cmp189, label %if.then190, label %if.end194, !dbg !11008

if.then190:                                       ; preds = %if.else187
  store i32 0, i32* %original_code, align 8, !dbg !11009
  br label %if.end194, !dbg !11010

if.end194:                                        ; preds = %land.lhs.true176, %if.end173, %if.then185, %if.then190, %if.else187
  %type195 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 1, !dbg !11011
  %81 = bitcast %union.tree_node** %type195 to i64*, !dbg !11011
  %82 = load i64, i64* %81, align 8, !dbg !11011
  store i64 %82, i64* bitcast (%union.tree_node** @constructor_type to i64*), align 8, !dbg !11012
  %fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 2, !dbg !11013
  %83 = bitcast %union.tree_node** %fields to i64*, !dbg !11013
  %84 = load i64, i64* %83, align 8, !dbg !11013
  store i64 %84, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !11014
  %index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 3, !dbg !11015
  %85 = bitcast %union.tree_node** %index to i64*, !dbg !11015
  %86 = load i64, i64* %85, align 8, !dbg !11015
  store i64 %86, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !11016
  %max_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 4, !dbg !11017
  %87 = bitcast %union.tree_node** %max_index to i64*, !dbg !11017
  %88 = load i64, i64* %87, align 8, !dbg !11017
  store i64 %88, i64* bitcast (%union.tree_node** @constructor_max_index to i64*), align 8, !dbg !11018
  %unfilled_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 5, !dbg !11019
  %89 = bitcast %union.tree_node** %unfilled_index to i64*, !dbg !11019
  %90 = load i64, i64* %89, align 8, !dbg !11019
  store i64 %90, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !11020
  %unfilled_fields = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 6, !dbg !11021
  %91 = bitcast %union.tree_node** %unfilled_fields to i64*, !dbg !11021
  %92 = load i64, i64* %91, align 8, !dbg !11021
  store i64 %92, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !11022
  %bit_index = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 7, !dbg !11023
  %93 = bitcast %union.tree_node** %bit_index to i64*, !dbg !11023
  %94 = load i64, i64* %93, align 8, !dbg !11023
  store i64 %94, i64* bitcast (%union.tree_node** @constructor_bit_index to i64*), align 8, !dbg !11024
  %elements = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 8, !dbg !11025
  %95 = bitcast %struct.VEC_constructor_elt_gc** %elements to i64*, !dbg !11025
  %96 = load i64, i64* %95, align 8, !dbg !11025
  store i64 %96, i64* bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i64*), align 8, !dbg !11026
  %constant = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 14, !dbg !11027
  %97 = load i8, i8* %constant, align 8, !dbg !11027
  %conv = sext i8 %97 to i32, !dbg !11028
  store i32 %conv, i32* @constructor_constant, align 4, !dbg !11029
  %simple = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 15, !dbg !11030
  %98 = load i8, i8* %simple, align 1, !dbg !11030
  %conv196 = sext i8 %98 to i32, !dbg !11031
  store i32 %conv196, i32* @constructor_simple, align 4, !dbg !11032
  %nonconst = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 16, !dbg !11033
  %99 = load i8, i8* %nonconst, align 2, !dbg !11033
  %conv197 = sext i8 %99 to i32, !dbg !11034
  store i32 %conv197, i32* @constructor_nonconst, align 4, !dbg !11035
  %erroneous = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 18, !dbg !11036
  %100 = load i8, i8* %erroneous, align 4, !dbg !11036
  %conv198 = sext i8 %100 to i32, !dbg !11037
  store i32 %conv198, i32* @constructor_erroneous, align 4, !dbg !11038
  %incremental = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 20, !dbg !11039
  %101 = load i8, i8* %incremental, align 2, !dbg !11039
  %conv199 = sext i8 %101 to i32, !dbg !11040
  store i32 %conv199, i32* @constructor_incremental, align 4, !dbg !11041
  %designated = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 21, !dbg !11042
  %102 = load i8, i8* %designated, align 1, !dbg !11042
  %conv200 = sext i8 %102 to i32, !dbg !11043
  store i32 %conv200, i32* @constructor_designated, align 4, !dbg !11044
  %pending_elts = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 9, !dbg !11045
  %103 = bitcast %struct.init_node** %pending_elts to i64*, !dbg !11045
  %104 = load i64, i64* %103, align 8, !dbg !11045
  store i64 %104, i64* bitcast (%struct.init_node** @constructor_pending_elts to i64*), align 8, !dbg !11046
  %depth = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 11, !dbg !11047
  %105 = load i32, i32* %depth, align 4, !dbg !11047
  store i32 %105, i32* @constructor_depth, align 4, !dbg !11048
  %implicit201 = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 17, !dbg !11049
  %106 = load i8, i8* %implicit201, align 1, !dbg !11049
  %tobool202 = icmp eq i8 %106, 0, !dbg !11051
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !11052

if.then203:                                       ; preds = %if.end194
  %range_stack = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %3, i64 0, i32 13, !dbg !11053
  %107 = bitcast %struct.constructor_range_stack** %range_stack to i64*, !dbg !11053
  %108 = load i64, i64* %107, align 8, !dbg !11053
  store i64 %108, i64* bitcast (%struct.constructor_range_stack** @constructor_range_stack to i64*), align 8, !dbg !11054
  br label %if.end204, !dbg !11055

if.end204:                                        ; preds = %if.end194, %if.then203
  %109 = load %struct.spelling*, %struct.spelling** @spelling_base, align 8, !dbg !11056
  %idx.ext205 = sext i32 %105 to i64, !dbg !11056
  %add.ptr206 = getelementptr inbounds %struct.spelling, %struct.spelling* %109, i64 %idx.ext205, !dbg !11056
  store %struct.spelling* %add.ptr206, %struct.spelling** @spelling, align 8, !dbg !11056
  %110 = bitcast %struct.constructor_stack* %3 to i64*, !dbg !11057
  %111 = load i64, i64* %110, align 8, !dbg !11057
  store i64 %111, i64* bitcast (%struct.constructor_stack** @constructor_stack to i64*), align 8, !dbg !11058
  %112 = bitcast %struct.constructor_stack* %3 to i8*, !dbg !11059
  call void @free(i8* %112) #6, !dbg !11060
  %cmp208 = icmp eq %union.tree_node* %76, null, !dbg !11061
  %113 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !11063
  %cmp211 = icmp eq %struct.constructor_stack* %113, null, !dbg !11064
  %or.cond5 = and i1 %cmp208, %cmp211, !dbg !11065
  br i1 %or.cond5, label %if.then213, label %if.end215, !dbg !11065

if.then213:                                       ; preds = %if.end204
  %114 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !11066
  %115 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !11067
  store i64 %114, i64* %115, align 8, !dbg !11067
  br label %if.end215, !dbg !11068

if.end215:                                        ; preds = %if.then213, %if.end204
  ret void, !dbg !11069
}

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_init_member(%union.tree_node* %field) unnamed_addr #5 !dbg !11070 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !11072, metadata !DIExpression()), !dbg !11078
  %0 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11079
  %bf.load = load i64, i64* %0, align 8, !dbg !11079
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !11080
  %cmp = icmp eq i64 %bf.cast2, 15, !dbg !11080
  br i1 %cmp, label %if.then, label %if.else14, !dbg !11081

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @constructor_incremental, align 4, !dbg !11082
  %tobool = icmp eq i32 %1, 0, !dbg !11082
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !11085

land.lhs.true:                                    ; preds = %if.then
  %2 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !11086
  %call = tail call i32 @tree_int_cst_lt(%union.tree_node* %field, %union.tree_node* %2) #6, !dbg !11087
  %tobool1 = icmp eq i32 %call, 0, !dbg !11087
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !11088

if.then2:                                         ; preds = %land.lhs.true
  tail call fastcc void @set_nonincremental_init() #7, !dbg !11089
  br label %if.end, !dbg !11089

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then2
  br label %while.cond, !dbg !11090

while.cond:                                       ; preds = %if.end13, %if.end
  %p.0.in = phi %struct.init_node** [ @constructor_pending_elts, %if.end ], [ %p.1.in, %if.end13 ]
  %p.0 = load %struct.init_node*, %struct.init_node** %p.0.in, align 8, !dbg !11091
  call void @llvm.dbg.value(metadata %struct.init_node* %p.0, metadata !11073, metadata !DIExpression()), !dbg !11078
  %tobool3 = icmp eq %struct.init_node* %p.0, null, !dbg !11090
  br i1 %tobool3, label %if.end81.loopexit, label %while.body, !dbg !11090

while.body:                                       ; preds = %while.cond
  %purpose = getelementptr inbounds %struct.init_node, %struct.init_node* %p.0, i64 0, i32 4, !dbg !11092
  %3 = load %union.tree_node*, %union.tree_node** %purpose, align 8, !dbg !11092
  %call4 = tail call i32 @tree_int_cst_lt(%union.tree_node* %field, %union.tree_node* %3) #6, !dbg !11095
  %tobool5 = icmp eq i32 %call4, 0, !dbg !11095
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !11096

if.then6:                                         ; preds = %while.body
  %left = getelementptr inbounds %struct.init_node, %struct.init_node* %p.0, i64 0, i32 0, !dbg !11097
  br label %if.end13, !dbg !11098

if.else:                                          ; preds = %while.body
  %4 = load %union.tree_node*, %union.tree_node** %purpose, align 8, !dbg !11099
  %call8 = tail call i32 @tree_int_cst_lt(%union.tree_node* %4, %union.tree_node* %field) #6, !dbg !11101
  %tobool9 = icmp eq i32 %call8, 0, !dbg !11101
  br i1 %tobool9, label %if.else11, label %if.then10, !dbg !11102

if.then10:                                        ; preds = %if.else
  %right = getelementptr inbounds %struct.init_node, %struct.init_node* %p.0, i64 0, i32 1, !dbg !11103
  br label %if.end13

if.else11:                                        ; preds = %if.else
  %p.0.lcssa9 = phi %struct.init_node* [ %p.0, %if.else ], !dbg !11091
  %value = getelementptr inbounds %struct.init_node, %struct.init_node* %p.0.lcssa9, i64 0, i32 5, !dbg !11104
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !11104
  br label %cleanup82, !dbg !11105

if.end13:                                         ; preds = %if.then10, %if.then6
  %p.1.in = phi %struct.init_node** [ %left, %if.then6 ], [ %right, %if.then10 ]
  br label %while.cond, !dbg !11090, !llvm.loop !11106

if.else14:                                        ; preds = %entry
  %cmp19 = icmp eq i64 %bf.cast2, 16, !dbg !11108
  br i1 %cmp19, label %if.then20, label %if.else49, !dbg !11109

if.then20:                                        ; preds = %if.else14
  %call21 = tail call %union.tree_node* @bit_position(%union.tree_node* %field) #6, !dbg !11110
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !11074, metadata !DIExpression()), !dbg !11111
  %6 = load i32, i32* @constructor_incremental, align 4, !dbg !11112
  %tobool22 = icmp eq i32 %6, 0, !dbg !11112
  br i1 %tobool22, label %if.end29, label %land.lhs.true23, !dbg !11114

land.lhs.true23:                                  ; preds = %if.then20
  %7 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !11115
  %tobool24 = icmp eq %union.tree_node* %7, null, !dbg !11115
  br i1 %tobool24, label %if.then28, label %lor.lhs.false, !dbg !11116

lor.lhs.false:                                    ; preds = %land.lhs.true23
  %call25 = tail call %union.tree_node* @bit_position(%union.tree_node* nonnull %7) #6, !dbg !11117
  %call26 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call21, %union.tree_node* %call25) #6, !dbg !11118
  %tobool27 = icmp eq i32 %call26, 0, !dbg !11118
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !11119

if.then28:                                        ; preds = %lor.lhs.false, %land.lhs.true23
  tail call fastcc void @set_nonincremental_init() #7, !dbg !11120
  br label %if.end29, !dbg !11120

if.end29:                                         ; preds = %lor.lhs.false, %if.then20, %if.then28
  br label %while.cond30, !dbg !11121

while.cond30:                                     ; preds = %if.end47, %if.end29
  %p.2.in = phi %struct.init_node** [ @constructor_pending_elts, %if.end29 ], [ %p.3.in, %if.end47 ]
  %p.2 = load %struct.init_node*, %struct.init_node** %p.2.in, align 8, !dbg !11111
  call void @llvm.dbg.value(metadata %struct.init_node* %p.2, metadata !11073, metadata !DIExpression()), !dbg !11078
  %tobool31 = icmp eq %struct.init_node* %p.2, null, !dbg !11121
  br i1 %tobool31, label %cleanup.loopexit, label %while.body32, !dbg !11121

while.body32:                                     ; preds = %while.cond30
  %purpose33 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.2, i64 0, i32 4, !dbg !11122
  %8 = load %union.tree_node*, %union.tree_node** %purpose33, align 8, !dbg !11122
  %cmp34 = icmp eq %union.tree_node* %8, %field, !dbg !11125
  br i1 %cmp34, label %if.then35, label %if.else37, !dbg !11126

if.then35:                                        ; preds = %while.body32
  %p.2.lcssa10 = phi %struct.init_node* [ %p.2, %while.body32 ], !dbg !11111
  %value36 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.2.lcssa10, i64 0, i32 5, !dbg !11127
  %9 = load %union.tree_node*, %union.tree_node** %value36, align 8, !dbg !11127
  br label %cleanup, !dbg !11128

if.else37:                                        ; preds = %while.body32
  %call39 = tail call %union.tree_node* @bit_position(%union.tree_node* %8) #6, !dbg !11129
  %call40 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call21, %union.tree_node* %call39) #6, !dbg !11131
  %tobool41 = icmp eq i32 %call40, 0, !dbg !11131
  br i1 %tobool41, label %if.else44, label %if.then42, !dbg !11132

if.then42:                                        ; preds = %if.else37
  %left43 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.2, i64 0, i32 0, !dbg !11133
  br label %if.end47, !dbg !11134

if.else44:                                        ; preds = %if.else37
  %right45 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.2, i64 0, i32 1, !dbg !11135
  br label %if.end47

if.end47:                                         ; preds = %if.then42, %if.else44
  %p.3.in = phi %struct.init_node** [ %left43, %if.then42 ], [ %right45, %if.else44 ]
  br label %while.cond30, !dbg !11121, !llvm.loop !11136

cleanup.loopexit:                                 ; preds = %while.cond30
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then35
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then35 ], [ true, %cleanup.loopexit ]
  %retval.0 = phi %union.tree_node* [ %9, %if.then35 ], [ undef, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %if.end81, label %cleanup82

if.else49:                                        ; preds = %if.else14
  %cmp54 = icmp eq i64 %bf.cast2, 17, !dbg !11138
  br i1 %cmp54, label %if.then55, label %if.end81, !dbg !11140

if.then55:                                        ; preds = %if.else49
  %10 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !11141
  %base57 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %10, i64 0, i32 0, !dbg !11141
  %call58 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base57) #7, !dbg !11141
  %cmp59 = icmp eq i32 %call58, 0, !dbg !11141
  br i1 %cmp59, label %if.end81, label %land.lhs.true60, !dbg !11144

land.lhs.true60:                                  ; preds = %if.then55
  %11 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !11145
  %base63 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !11145
  %call67 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_last(%struct.VEC_constructor_elt_base* %base63) #7, !dbg !11145
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call67, i64 0, i32 0, !dbg !11146
  %12 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !11146
  %cmp68 = icmp eq %union.tree_node* %12, %field, !dbg !11147
  br i1 %cmp68, label %if.then69, label %if.end81, !dbg !11148

if.then69:                                        ; preds = %land.lhs.true60
  %13 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !11149
  %base72 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %13, i64 0, i32 0, !dbg !11149
  %call76 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_last(%struct.VEC_constructor_elt_base* %base72) #7, !dbg !11149
  %value77 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call76, i64 0, i32 1, !dbg !11150
  %14 = load %union.tree_node*, %union.tree_node** %value77, align 8, !dbg !11150
  br label %cleanup82, !dbg !11151

if.end81.loopexit:                                ; preds = %while.cond
  br label %if.end81, !dbg !11152

if.end81:                                         ; preds = %if.end81.loopexit, %cleanup, %if.then55, %land.lhs.true60, %if.else49
  br label %cleanup82, !dbg !11152

cleanup82:                                        ; preds = %cleanup, %if.end81, %if.then69, %if.else11
  %retval.1 = phi %union.tree_node* [ %5, %if.else11 ], [ null, %if.end81 ], [ %retval.0, %cleanup ], [ %14, %if.then69 ], !dbg !11078
  ret %union.tree_node* %retval.1, !dbg !11153
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_member_name(%union.tree_node* %decl) unnamed_addr #5 !dbg !11154 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !11156, metadata !DIExpression()), !dbg !11161
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11162
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !11162
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !11162
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11162

cond.true:                                        ; preds = %entry
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11163
  %1 = bitcast i32* %str to i8**, !dbg !11163
  %2 = load i8*, i8** %1, align 8, !dbg !11163
  %call = tail call i8* @identifier_to_locale(i8* %2) #6, !dbg !11164
  br label %cond.end, !dbg !11162

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.265, i64 0, i64 0), %entry ], !dbg !11162
  call void @llvm.dbg.value(metadata i8* %cond, metadata !11157, metadata !DIExpression()), !dbg !11161
  %3 = load i64, i64* bitcast (%struct.spelling** @spelling to i64*), align 8, !dbg !11165
  %4 = load i64, i64* bitcast (%struct.spelling** @spelling_base to i64*), align 8, !dbg !11165
  %sub.ptr.sub = sub i64 %3, %4, !dbg !11165
  %5 = lshr exact i64 %sub.ptr.sub, 4, !dbg !11165
  %conv = trunc i64 %5 to i32, !dbg !11165
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11159, metadata !DIExpression()), !dbg !11166
  %6 = load i32, i32* @spelling_size, align 4, !dbg !11167
  %cmp = icmp sgt i32 %6, %conv, !dbg !11167
  %7 = inttoptr i64 %3 to %struct.spelling*, !dbg !11165
  br i1 %cmp, label %if.end, label %if.then, !dbg !11165

if.then:                                          ; preds = %cond.end
  %8 = inttoptr i64 %4 to i8*, !dbg !11165
  %add = add nsw i32 %6, 10, !dbg !11169
  store i32 %add, i32* @spelling_size, align 4, !dbg !11169
  %conv4 = sext i32 %add to i64, !dbg !11169
  %mul = shl nsw i64 %conv4, 4, !dbg !11169
  %call5 = tail call i8* @xrealloc(i8* %8, i64 %mul) #6, !dbg !11169
  store i8* %call5, i8** bitcast (%struct.spelling** @spelling_base to i8**), align 8, !dbg !11169
  %.cast = bitcast i8* %call5 to %struct.spelling*, !dbg !11169
  %sext = shl i64 %sub.ptr.sub, 28, !dbg !11169
  %idx.ext = ashr exact i64 %sext, 32, !dbg !11169
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %.cast, i64 %idx.ext, !dbg !11169
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8, !dbg !11169
  br label %if.end, !dbg !11169

if.end:                                           ; preds = %cond.end, %if.then
  %9 = phi %struct.spelling* [ %7, %cond.end ], [ %add.ptr, %if.then ], !dbg !11165
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %9, i64 0, i32 0, !dbg !11165
  store i32 2, i32* %kind, align 8, !dbg !11165
  %10 = load %struct.spelling*, %struct.spelling** @spelling, align 8, !dbg !11165
  %u = getelementptr inbounds %struct.spelling, %struct.spelling* %10, i64 0, i32 1, !dbg !11165
  %s = bitcast %union.anon.1* %u to i8**, !dbg !11165
  store i8* %cond, i8** %s, align 8, !dbg !11165
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %10, i64 1, !dbg !11165
  store %struct.spelling* %incdec.ptr, %struct.spelling** @spelling, align 8, !dbg !11165
  ret void, !dbg !11171
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_array_bounds(i64 %bounds) unnamed_addr #5 !dbg !11172 {
entry:
  call void @llvm.dbg.value(metadata i64 %bounds, metadata !11176, metadata !DIExpression()), !dbg !11179
  %0 = load i64, i64* bitcast (%struct.spelling** @spelling to i64*), align 8, !dbg !11180
  %1 = load i64, i64* bitcast (%struct.spelling** @spelling_base to i64*), align 8, !dbg !11180
  %sub.ptr.sub = sub i64 %0, %1, !dbg !11180
  %2 = lshr exact i64 %sub.ptr.sub, 4, !dbg !11180
  %conv = trunc i64 %2 to i32, !dbg !11180
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11177, metadata !DIExpression()), !dbg !11181
  %3 = load i32, i32* @spelling_size, align 4, !dbg !11182
  %cmp = icmp sgt i32 %3, %conv, !dbg !11182
  %4 = inttoptr i64 %0 to %struct.spelling*, !dbg !11180
  br i1 %cmp, label %if.end, label %if.then, !dbg !11180

if.then:                                          ; preds = %entry
  %5 = inttoptr i64 %1 to i8*, !dbg !11180
  %add = add nsw i32 %3, 10, !dbg !11184
  store i32 %add, i32* @spelling_size, align 4, !dbg !11184
  %conv2 = sext i32 %add to i64, !dbg !11184
  %mul = shl nsw i64 %conv2, 4, !dbg !11184
  %call = tail call i8* @xrealloc(i8* %5, i64 %mul) #6, !dbg !11184
  store i8* %call, i8** bitcast (%struct.spelling** @spelling_base to i8**), align 8, !dbg !11184
  %.cast = bitcast i8* %call to %struct.spelling*, !dbg !11184
  %sext = shl i64 %sub.ptr.sub, 28, !dbg !11184
  %idx.ext = ashr exact i64 %sext, 32, !dbg !11184
  %add.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %.cast, i64 %idx.ext, !dbg !11184
  store %struct.spelling* %add.ptr, %struct.spelling** @spelling, align 8, !dbg !11184
  br label %if.end, !dbg !11184

if.end:                                           ; preds = %entry, %if.then
  %6 = phi %struct.spelling* [ %4, %entry ], [ %add.ptr, %if.then ], !dbg !11180
  %kind = getelementptr inbounds %struct.spelling, %struct.spelling* %6, i64 0, i32 0, !dbg !11180
  store i32 3, i32* %kind, align 8, !dbg !11180
  %7 = load %struct.spelling*, %struct.spelling** @spelling, align 8, !dbg !11180
  %i = getelementptr inbounds %struct.spelling, %struct.spelling* %7, i64 0, i32 1, i32 0, !dbg !11180
  store i64 %bounds, i64* %i, align 8, !dbg !11180
  %incdec.ptr = getelementptr inbounds %struct.spelling, %struct.spelling* %7, i64 1, !dbg !11180
  store %struct.spelling* %incdec.ptr, %struct.spelling** @spelling, align 8, !dbg !11180
  ret void, !dbg !11186
}

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !11187 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !11193, metadata !DIExpression()), !dbg !11194
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !11195
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11195

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !11195
  %0 = load i32, i32* %num, align 8, !dbg !11195
  br label %cond.end, !dbg !11195

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !11195
  ret i32 %cond, !dbg !11195
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_nonincremental_init() unnamed_addr #5 !dbg !11196 {
entry:
  %0 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11201
  %bf.load = load i64, i64* %0, align 8, !dbg !11201
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !11203
  %cmp = icmp eq i64 %bf.cast2, 16, !dbg !11203
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11204

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast2, 15, !dbg !11205
  br i1 %cmp5, label %if.end, label %cleanup.cont, !dbg !11206

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !11198, metadata !DIExpression()), !dbg !11207
  br label %for.cond, !dbg !11208

for.cond:                                         ; preds = %for.body, %if.end
  %value.0 = phi %union.tree_node* [ undef, %if.end ], [ %value.1, %for.body ]
  %index.0 = phi %union.tree_node* [ undef, %if.end ], [ %index.1, %for.body ]
  %ix.0 = phi i64 [ 0, %if.end ], [ %inc, %for.body ], !dbg !11210
  call void @llvm.dbg.value(metadata i64 %ix.0, metadata !11198, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata %union.tree_node* %index.0, metadata !11199, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !11200, metadata !DIExpression()), !dbg !11207
  %1 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !11211
  %base6 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %1, i64 0, i32 0, !dbg !11211
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base6) #7, !dbg !11211
  %conv = zext i32 %call to i64, !dbg !11211
  %cmp7 = icmp ult i64 %ix.0, %conv, !dbg !11211
  br i1 %cmp7, label %cond.false10, label %cond.end29, !dbg !11211

cond.false10:                                     ; preds = %for.cond
  %2 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !11211
  %base13 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %2, i64 0, i32 0, !dbg !11211
  %conv17 = trunc i64 %ix.0 to i32, !dbg !11211
  %call18 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base13, i32 %conv17) #7, !dbg !11211
  %value19 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call18, i64 0, i32 1, !dbg !11211
  %3 = load %union.tree_node*, %union.tree_node** %value19, align 8, !dbg !11211
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11200, metadata !DIExpression()), !dbg !11207
  %4 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !11211
  %base22 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %4, i64 0, i32 0, !dbg !11211
  %call27 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base22, i32 %conv17) #7, !dbg !11211
  %index28 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call27, i64 0, i32 0, !dbg !11211
  %5 = load %union.tree_node*, %union.tree_node** %index28, align 8, !dbg !11211
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11199, metadata !DIExpression()), !dbg !11207
  br label %cond.end29, !dbg !11211

cond.end29:                                       ; preds = %for.cond, %cond.false10
  %value.1 = phi %union.tree_node* [ %3, %cond.false10 ], [ %value.0, %for.cond ]
  %index.1 = phi %union.tree_node* [ %5, %cond.false10 ], [ %index.0, %for.cond ]
  %cond30 = phi i1 [ true, %cond.false10 ], [ false, %for.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %index.1, metadata !11199, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !11200, metadata !DIExpression()), !dbg !11207
  br i1 %cond30, label %for.body, label %for.end, !dbg !11208

for.body:                                         ; preds = %cond.end29
  tail call fastcc void @add_pending_init(%union.tree_node* %index.1, %union.tree_node* %value.1, %union.tree_node* null, i8 zeroext 0) #7, !dbg !11213
  %inc = add i64 %ix.0, 1, !dbg !11211
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11198, metadata !DIExpression()), !dbg !11207
  br label %for.cond, !dbg !11211, !llvm.loop !11214

for.end:                                          ; preds = %cond.end29
  store %struct.VEC_constructor_elt_gc* null, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !11216
  %6 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11217
  %bf.load33 = load i64, i64* %6, align 8, !dbg !11217
  %bf.cast353 = and i64 %bf.load33, 65535, !dbg !11219
  %cmp36 = icmp eq i64 %bf.cast353, 16, !dbg !11219
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !11220

if.then38:                                        ; preds = %for.end
  %values = getelementptr inbounds i64, i64* %6, i64 3, !dbg !11221
  br label %while.cond, !dbg !11223

while.cond:                                       ; preds = %while.body, %if.then38
  %storemerge.in = phi i64* [ %12, %while.body ], [ %values, %if.then38 ]
  %storemerge = load i64, i64* %storemerge.in, align 8, !dbg !11224
  store i64 %storemerge, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !11224
  %cmp39 = icmp eq i64 %storemerge, 0, !dbg !11225
  %7 = inttoptr i64 %storemerge to %struct.tree_decl_minimal*, !dbg !11226
  %8 = inttoptr i64 %storemerge to %struct.tree_common*, !dbg !11226
  br i1 %cmp39, label %if.end67.loopexit, label %land.lhs.true41, !dbg !11226

land.lhs.true41:                                  ; preds = %while.cond
  %9 = inttoptr i64 %storemerge to %struct.tree_decl_common*, !dbg !11226
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %9, i64 0, i32 2, !dbg !11227
  %10 = bitcast i40* %lang_flag_4 to i64*, !dbg !11227
  %bf.load42 = load i64, i64* %10, align 8, !dbg !11227
  %bf.cast445 = and i64 %bf.load42, 524288, !dbg !11227
  %cmp45 = icmp eq i64 %bf.cast445, 0, !dbg !11227
  br i1 %cmp45, label %if.end67.loopexit, label %land.rhs, !dbg !11228

land.rhs:                                         ; preds = %land.lhs.true41
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %7, i64 0, i32 3, !dbg !11229
  %11 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !11229
  %cmp47 = icmp eq %union.tree_node* %11, null, !dbg !11230
  br i1 %cmp47, label %while.body, label %if.end67.loopexit, !dbg !11223

while.body:                                       ; preds = %land.rhs
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 1, !dbg !11231
  %12 = bitcast %union.tree_node** %chain to i64*, !dbg !11231
  br label %while.cond, !dbg !11223, !llvm.loop !11232

if.else:                                          ; preds = %for.end
  %cmp53 = icmp eq i64 %bf.cast353, 15, !dbg !11233
  br i1 %cmp53, label %if.then55, label %if.end67, !dbg !11235

if.then55:                                        ; preds = %if.else
  %values57 = getelementptr inbounds i64, i64* %6, i64 3, !dbg !11236
  %13 = bitcast i64* %values57 to %union.tree_node**, !dbg !11236
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !11236
  %tobool58 = icmp eq %union.tree_node* %14, null, !dbg !11236
  br i1 %tobool58, label %if.else64, label %if.then59, !dbg !11239

if.then59:                                        ; preds = %if.then55
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 2), align 16, !dbg !11240
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !11241
  %16 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !11241
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !11241
  %call63 = tail call %union.tree_node* @convert(%union.tree_node* %15, %union.tree_node* %17) #6, !dbg !11242
  store %union.tree_node* %call63, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !11243
  br label %if.end67, !dbg !11244

if.else64:                                        ; preds = %if.then55
  %18 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19) to i64*), align 8, !dbg !11245
  store i64 %18, i64* bitcast (%union.tree_node** @constructor_unfilled_index to i64*), align 8, !dbg !11246
  br label %if.end67

if.end67.loopexit:                                ; preds = %land.rhs, %while.cond, %land.lhs.true41
  br label %if.end67, !dbg !11247

if.end67:                                         ; preds = %if.end67.loopexit, %if.else, %if.else64, %if.then59
  store i32 0, i32* @constructor_incremental, align 4, !dbg !11247
  br label %cleanup.cont, !dbg !11248

cleanup.cont:                                     ; preds = %land.lhs.true, %if.end67
  ret void, !dbg !11248
}

; Function Attrs: nounwind uwtable
define internal fastcc void @warning_init(i32 %opt, i8* %msgid) unnamed_addr #5 !dbg !11249 {
entry:
  call void @llvm.dbg.value(metadata i32 %opt, metadata !11253, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.value(metadata i8* %msgid, metadata !11254, metadata !DIExpression()), !dbg !11256
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 %opt, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* %msgid) #6, !dbg !11257
  %call1 = tail call fastcc i32 @spelling_length() #7, !dbg !11258
  %add = add nsw i32 %call1, 1, !dbg !11258
  %conv = sext i32 %add to i64, !dbg !11258
  %0 = alloca i8, i64 %conv, align 16, !dbg !11258
  %call2 = call fastcc i8* @print_spelling(i8* nonnull %0) #7, !dbg !11259
  call void @llvm.dbg.value(metadata i8* %call2, metadata !11255, metadata !DIExpression()), !dbg !11256
  %1 = load i8, i8* %call2, align 1, !dbg !11260
  %tobool = icmp eq i8 %1, 0, !dbg !11260
  br i1 %tobool, label %if.end, label %if.then, !dbg !11262

if.then:                                          ; preds = %entry
  %call3 = call zeroext i8 (i32, i8*, ...) @warning(i32 %opt, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i64 0, i64 0), i8* %call2) #6, !dbg !11263
  br label %if.end, !dbg !11263

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !11264
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_nonincremental_init_from_string(%union.tree_node* %str) unnamed_addr #5 !dbg !11265 {
entry:
  %val = alloca [2 x i64], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %str, metadata !11267, metadata !DIExpression()), !dbg !11279
  %0 = bitcast [2 x i64]* %val to i8*, !dbg !11280
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !11280
  call void @llvm.dbg.declare(metadata [2 x i64]* %val, metadata !11271, metadata !DIExpression()), !dbg !11281
  %1 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11282
  %bf.load = load i64, i64* %1, align 8, !dbg !11282
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11282
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !11282
  %2 = bitcast i64* %1 to %struct.tree_common*, !dbg !11282
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !11282

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 7257, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11282
  %.pre = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @constructor_type to %struct.tree_common**), align 8, !dbg !11283
  br label %cond.end, !dbg !11282

cond.end:                                         ; preds = %entry, %cond.true
  %3 = phi %struct.tree_common* [ %2, %entry ], [ %.pre, %cond.true ], !dbg !11283
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %str, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11284
  %4 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !11284
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !11284
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !11284
  %6 = bitcast %union.tree_node** %type3 to %struct.tree_type**, !dbg !11284
  %7 = load %struct.tree_type*, %struct.tree_type** %6, align 8, !dbg !11284
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %7, i64 0, i32 6, !dbg !11284
  %bf.load5 = load i32, i32* %precision, align 4, !dbg !11284
  %bf.clear6 = lshr i32 %bf.load5, 3, !dbg !11285
  %div = and i32 %bf.clear6, 127, !dbg !11285
  call void @llvm.dbg.value(metadata i32 %div, metadata !11276, metadata !DIExpression()), !dbg !11279
  %8 = load %struct.tree_type*, %struct.tree_type** bitcast ([11 x %union.tree_node*]* @integer_types to %struct.tree_type**), align 16, !dbg !11286
  %precision8 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !11286
  %bf.load9 = load i32, i32* %precision8, align 4, !dbg !11286
  %bf.clear10 = and i32 %bf.load9, 1023, !dbg !11286
  call void @llvm.dbg.value(metadata i32 %bf.clear10, metadata !11277, metadata !DIExpression()), !dbg !11279
  %type12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !11283
  %9 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !11283
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !11270, metadata !DIExpression()), !dbg !11279
  %str13 = getelementptr inbounds %union.tree_node, %union.tree_node* %str, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11287
  %arraydecay = bitcast i32* %str13 to i8*, !dbg !11287
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !11273, metadata !DIExpression()), !dbg !11279
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %str, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11288
  %11 = load i32, i32* %10, align 8, !dbg !11288
  %idx.ext = sext i32 %11 to i64, !dbg !11289
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %idx.ext, !dbg !11289
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !11274, metadata !DIExpression()), !dbg !11279
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19), align 8, !dbg !11290
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !11269, metadata !DIExpression()), !dbg !11279
  %cmp16 = icmp eq i32 %div, 1, !dbg !11292
  %arrayidx18 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i64 0, i64 0, !dbg !11296
  %arrayidx19 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i64 0, i64 1, !dbg !11296
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11298
  %sub = add nsw i32 %div, -1, !dbg !11300
  %mul35 = mul nsw i32 %sub, %bf.clear10, !dbg !11300
  %add = add nsw i32 %mul35, 8, !dbg !11300
  %cmp36 = icmp slt i32 %add, 64, !dbg !11302
  %cmp52 = icmp eq i32 %add, 64, !dbg !11304
  %sub64 = add nsw i32 %mul35, -57, !dbg !11306
  %sh_prom65 = zext i32 %sub64 to i64, !dbg !11306
  %shl66 = shl i64 1, %sh_prom65, !dbg !11306
  %sub70 = add nsw i32 %mul35, -56, !dbg !11306
  %sh_prom71 = zext i32 %sub70 to i64, !dbg !11306
  %shl72 = shl i64 -1, %sh_prom71, !dbg !11306
  %sub40 = add nsw i32 %mul35, 7, !dbg !11308
  %sh_prom41 = zext i32 %sub40 to i64, !dbg !11308
  %shl42 = shl i64 1, %sh_prom41, !dbg !11308
  %sh_prom45 = zext i32 %add to i64, !dbg !11311
  %shl46 = shl i64 -1, %sh_prom45, !dbg !11311
  br i1 %cmp16, label %cond.end.split.us, label %cond.end.cond.end.split_crit_edge, !dbg !11313

cond.end.cond.end.split_crit_edge:                ; preds = %cond.end
  br label %for.cond, !dbg !11313

cond.end.split.us:                                ; preds = %cond.end
  br label %for.cond.us, !dbg !11313

for.cond.us:                                      ; preds = %if.end78.us, %cond.end.split.us
  %p.0.us = phi i8* [ %arraydecay, %cond.end.split.us ], [ %incdec.ptr.us, %if.end78.us ], !dbg !11279
  %purpose.0.us = phi %union.tree_node* [ %12, %cond.end.split.us ], [ %call83.us, %if.end78.us ], !dbg !11314
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.0.us, metadata !11269, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %p.0.us, metadata !11273, metadata !DIExpression()), !dbg !11279
  %cmp15.us = icmp ult i8* %p.0.us, %add.ptr, !dbg !11315
  br i1 %cmp15.us, label %land.rhs.us, label %for.end84.us-lcssa.us, !dbg !11316

land.rhs.us:                                      ; preds = %for.cond.us
  %14 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !11317
  %call.us = tail call i32 @tree_int_cst_lt(%union.tree_node* %14, %union.tree_node* %purpose.0.us) #6, !dbg !11318
  %tobool.us = icmp eq i32 %call.us, 0, !dbg !11319
  br i1 %tobool.us, label %for.body.us, label %for.end84.us-lcssa.us, !dbg !11320

for.body.us:                                      ; preds = %land.rhs.us
  %incdec.ptr.us = getelementptr inbounds i8, i8* %p.0.us, i64 1, !dbg !11321
  call void @llvm.dbg.value(metadata i8* %incdec.ptr.us, metadata !11273, metadata !DIExpression()), !dbg !11279
  %15 = load i8, i8* %p.0.us, align 1, !dbg !11323
  %conv.us = zext i8 %15 to i64, !dbg !11324
  store i64 %conv.us, i64* %arrayidx19, align 8, !dbg !11325
  store i64 0, i64* %arrayidx18, align 16, !dbg !11326
  call void @llvm.dbg.value(metadata i8* %incdec.ptr.us, metadata !11273, metadata !DIExpression()), !dbg !11279
  %bf.load30.us = load i64, i64* %13, align 8, !dbg !11327
  %bf.cast322.us = and i64 %bf.load30.us, 2097152, !dbg !11327
  %tobool33.us = icmp eq i64 %bf.cast322.us, 0, !dbg !11327
  br i1 %tobool33.us, label %if.then34.us, label %if.end78.us, !dbg !11328

if.then34.us:                                     ; preds = %for.body.us
  call void @llvm.dbg.value(metadata i32 %add, metadata !11278, metadata !DIExpression()), !dbg !11279
  br i1 %cmp36, label %if.then38.us, label %if.else51.us, !dbg !11329

if.else51.us:                                     ; preds = %if.then34.us
  br i1 %cmp52, label %if.then54.us, label %if.else61.us, !dbg !11330

if.else61.us:                                     ; preds = %if.else51.us
  br i1 true, label %if.end78.us, label %if.then69.us, !dbg !11331

if.then69.us:                                     ; preds = %if.else61.us
  br label %if.end78.us, !dbg !11332

if.then54.us:                                     ; preds = %if.else51.us
  br i1 false, label %if.then58.us, label %if.end78.us, !dbg !11333

if.then58.us:                                     ; preds = %if.then54.us
  br label %if.end78.us, !dbg !11335

if.then38.us:                                     ; preds = %if.then34.us
  %and.us = and i64 %shl42, %conv.us, !dbg !11337
  %tobool43.us = icmp eq i64 %and.us, 0, !dbg !11337
  br i1 %tobool43.us, label %if.end78.us, label %if.then44.us, !dbg !11338

if.then44.us:                                     ; preds = %if.then38.us
  %or48.us = or i64 %shl46, %conv.us, !dbg !11339
  store i64 %or48.us, i64* %arrayidx19, align 8, !dbg !11339
  store i64 -1, i64* %arrayidx18, align 16, !dbg !11340
  br label %if.end78.us, !dbg !11341

if.end78.us:                                      ; preds = %if.then44.us, %if.then38.us, %if.then58.us, %if.then54.us, %if.then69.us, %if.else61.us, %for.body.us
  %16 = phi i64 [ -1, %if.then44.us ], [ 0, %if.then38.us ], [ undef, %if.then58.us ], [ 0, %if.then54.us ], [ undef, %if.then69.us ], [ 0, %if.else61.us ], [ 0, %for.body.us ], !dbg !11342
  %17 = phi i64 [ %or48.us, %if.then44.us ], [ %conv.us, %if.then38.us ], [ %conv.us, %if.then58.us ], [ %conv.us, %if.then54.us ], [ %conv.us, %if.then69.us ], [ %conv.us, %if.else61.us ], [ %conv.us, %for.body.us ], !dbg !11343
  %call81.us = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %9, i64 %17, i64 %16) #6, !dbg !11344
  call void @llvm.dbg.value(metadata %union.tree_node* %call81.us, metadata !11268, metadata !DIExpression()), !dbg !11279
  tail call fastcc void @add_pending_init(%union.tree_node* %purpose.0.us, %union.tree_node* %call81.us, %union.tree_node* null, i8 zeroext 0) #7, !dbg !11345
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 16, !dbg !11346
  %call83.us = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %purpose.0.us, %union.tree_node* %18) #6, !dbg !11346
  call void @llvm.dbg.value(metadata %union.tree_node* %call83.us, metadata !11269, metadata !DIExpression()), !dbg !11279
  br label %for.cond.us, !dbg !11347, !llvm.loop !11348

for.end84.us-lcssa.us:                            ; preds = %land.rhs.us, %for.cond.us
  br label %for.end84, !dbg !11350

for.cond:                                         ; preds = %if.end78, %cond.end.cond.end.split_crit_edge
  %p.0 = phi i8* [ %arraydecay, %cond.end.cond.end.split_crit_edge ], [ %p.1.lcssa, %if.end78 ], !dbg !11279
  %purpose.0 = phi %union.tree_node* [ %12, %cond.end.cond.end.split_crit_edge ], [ %call83, %if.end78 ], !dbg !11314
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.0, metadata !11269, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !11273, metadata !DIExpression()), !dbg !11279
  %cmp15 = icmp ult i8* %p.0, %add.ptr, !dbg !11315
  br i1 %cmp15, label %land.rhs, label %for.end84.us-lcssa, !dbg !11316

land.rhs:                                         ; preds = %for.cond
  %19 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !11317
  %call = tail call i32 @tree_int_cst_lt(%union.tree_node* %19, %union.tree_node* %purpose.0) #6, !dbg !11318
  %tobool = icmp eq i32 %call, 0, !dbg !11319
  br i1 %tobool, label %for.body, label %for.end84.us-lcssa, !dbg !11320

for.body:                                         ; preds = %land.rhs
  store i64 0, i64* %arrayidx18, align 16, !dbg !11351
  store i64 0, i64* %arrayidx19, align 8, !dbg !11352
  call void @llvm.dbg.value(metadata i32 0, metadata !11275, metadata !DIExpression()), !dbg !11279
  br label %for.cond20, !dbg !11353

for.cond20:                                       ; preds = %for.body23, %for.body
  %p.1 = phi i8* [ %p.0, %for.body ], [ %incdec.ptr24, %for.body23 ], !dbg !11279
  %byte.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body23 ], !dbg !11355
  call void @llvm.dbg.value(metadata i32 %byte.0, metadata !11275, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !11273, metadata !DIExpression()), !dbg !11279
  %exitcond = icmp eq i32 %byte.0, %div, !dbg !11356
  br i1 %exitcond, label %if.end.loopexit, label %for.body23, !dbg !11358

for.body23:                                       ; preds = %for.cond20
  %mul = mul nuw nsw i32 %byte.0, %bf.clear10, !dbg !11359
  call void @llvm.dbg.value(metadata i32 %mul, metadata !11278, metadata !DIExpression()), !dbg !11279
  %incdec.ptr24 = getelementptr inbounds i8, i8* %p.1, i64 1, !dbg !11362
  call void @llvm.dbg.value(metadata i8* %incdec.ptr24, metadata !11273, metadata !DIExpression()), !dbg !11279
  %20 = load i8, i8* %p.1, align 1, !dbg !11363
  %conv25 = zext i8 %20 to i64, !dbg !11364
  %rem = and i32 %mul, 63, !dbg !11365
  %sh_prom = zext i32 %rem to i64, !dbg !11366
  %shl = shl i64 %conv25, %sh_prom, !dbg !11366
  %cmp26 = icmp ult i32 %mul, 64, !dbg !11367
  %idxprom = zext i1 %cmp26 to i64, !dbg !11368
  %arrayidx28 = getelementptr inbounds [2 x i64], [2 x i64]* %val, i64 0, i64 %idxprom, !dbg !11368
  %21 = load i64, i64* %arrayidx28, align 8, !dbg !11369
  %or = or i64 %21, %shl, !dbg !11369
  store i64 %or, i64* %arrayidx28, align 8, !dbg !11369
  %inc = add nuw nsw i32 %byte.0, 1, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %inc, metadata !11275, metadata !DIExpression()), !dbg !11279
  br label %for.cond20, !dbg !11371, !llvm.loop !11372

if.end.loopexit:                                  ; preds = %for.cond20
  %p.1.lcssa = phi i8* [ %p.1, %for.cond20 ], !dbg !11279
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11273, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11273, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11273, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %p.1.lcssa, metadata !11273, metadata !DIExpression()), !dbg !11279
  %bf.load30 = load i64, i64* %13, align 8, !dbg !11327
  %bf.cast322 = and i64 %bf.load30, 2097152, !dbg !11327
  %tobool33 = icmp eq i64 %bf.cast322, 0, !dbg !11327
  br i1 %tobool33, label %if.then34, label %if.end78, !dbg !11328

if.then34:                                        ; preds = %if.end.loopexit
  call void @llvm.dbg.value(metadata i32 %add, metadata !11278, metadata !DIExpression()), !dbg !11279
  br i1 %cmp36, label %if.then38, label %if.else51, !dbg !11329

if.then38:                                        ; preds = %if.then34
  %22 = load i64, i64* %arrayidx19, align 8, !dbg !11374
  %and = and i64 %22, %shl42, !dbg !11337
  %tobool43 = icmp eq i64 %and, 0, !dbg !11337
  br i1 %tobool43, label %if.end78, label %if.then44, !dbg !11338

if.then44:                                        ; preds = %if.then38
  %or48 = or i64 %22, %shl46, !dbg !11339
  store i64 %or48, i64* %arrayidx19, align 8, !dbg !11339
  store i64 -1, i64* %arrayidx18, align 16, !dbg !11340
  br label %if.end78, !dbg !11341

if.else51:                                        ; preds = %if.then34
  br i1 %cmp52, label %if.then54, label %if.else61, !dbg !11330

if.then54:                                        ; preds = %if.else51
  %23 = load i64, i64* %arrayidx19, align 8, !dbg !11375
  %cmp56 = icmp slt i64 %23, 0, !dbg !11376
  br i1 %cmp56, label %if.then58, label %if.end78, !dbg !11333

if.then58:                                        ; preds = %if.then54
  store i64 -1, i64* %arrayidx18, align 16, !dbg !11377
  br label %if.end78, !dbg !11335

if.else61:                                        ; preds = %if.else51
  %24 = load i64, i64* %arrayidx18, align 16, !dbg !11378
  %and67 = and i64 %24, %shl66, !dbg !11379
  %tobool68 = icmp eq i64 %and67, 0, !dbg !11379
  br i1 %tobool68, label %if.end78, label %if.then69, !dbg !11331

if.then69:                                        ; preds = %if.else61
  %or74 = or i64 %24, %shl72, !dbg !11380
  store i64 %or74, i64* %arrayidx18, align 16, !dbg !11380
  br label %if.end78, !dbg !11332

if.end78:                                         ; preds = %if.then38, %if.else61, %if.end.loopexit, %if.then44, %if.then69, %if.then54, %if.then58
  %25 = load i64, i64* %arrayidx19, align 8, !dbg !11343
  %26 = load i64, i64* %arrayidx18, align 16, !dbg !11342
  %call81 = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %9, i64 %25, i64 %26) #6, !dbg !11344
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !11268, metadata !DIExpression()), !dbg !11279
  tail call fastcc void @add_pending_init(%union.tree_node* %purpose.0, %union.tree_node* %call81, %union.tree_node* null, i8 zeroext 0) #7, !dbg !11345
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 16, !dbg !11346
  %call83 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %purpose.0, %union.tree_node* %27) #6, !dbg !11346
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !11269, metadata !DIExpression()), !dbg !11279
  br label %for.cond, !dbg !11347, !llvm.loop !11348

for.end84.us-lcssa:                               ; preds = %land.rhs, %for.cond
  br label %for.end84, !dbg !11350

for.end84:                                        ; preds = %for.end84.us-lcssa.us, %for.end84.us-lcssa
  store i32 0, i32* @constructor_incremental, align 4, !dbg !11350
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !11381
  ret void, !dbg !11381
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_pending_init_elements(i32 %all) unnamed_addr #5 !dbg !11382 {
entry:
  call void @llvm.dbg.value(metadata i32 %all, metadata !11384, metadata !DIExpression()), !dbg !11394
  %0 = load %struct.init_node*, %struct.init_node** @constructor_pending_elts, align 8, !dbg !11395
  call void @llvm.dbg.value(metadata %struct.init_node* %0, metadata !11385, metadata !DIExpression()), !dbg !11394
  %tobool108 = icmp ne i32 %all, 0, !dbg !11396
  br label %retry, !dbg !11398

retry:                                            ; preds = %if.end133, %entry
  %elt.0 = phi %struct.init_node* [ %0, %entry ], [ %elt.13, %if.end133 ], !dbg !11399
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.0, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.label(metadata !11393), !dbg !11400
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11386, metadata !DIExpression()), !dbg !11394
  br label %while.cond, !dbg !11401

while.cond:                                       ; preds = %if.end106, %retry
  %next.0 = phi %union.tree_node* [ null, %retry ], [ %next.3, %if.end106 ], !dbg !11402
  %elt.1 = phi %struct.init_node* [ %elt.0, %retry ], [ %elt.12, %if.end106 ], !dbg !11399
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.1, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %union.tree_node* %next.0, metadata !11386, metadata !DIExpression()), !dbg !11394
  %tobool = icmp eq %struct.init_node* %elt.1, null, !dbg !11401
  br i1 %tobool, label %while.end107.loopexit, label %while.body, !dbg !11401

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11403
  %bf.load = load i64, i64* %1, align 8, !dbg !11403
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !11404
  %cmp = icmp eq i64 %bf.cast4, 15, !dbg !11404
  br i1 %cmp, label %if.then, label %if.else35, !dbg !11405

if.then:                                          ; preds = %while.body
  %purpose = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 4, !dbg !11406
  %2 = load %union.tree_node*, %union.tree_node** %purpose, align 8, !dbg !11406
  %3 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !11409
  %call = tail call i32 @tree_int_cst_equal(%union.tree_node* %2, %union.tree_node* %3) #6, !dbg !11410
  %tobool1 = icmp eq i32 %call, 0, !dbg !11410
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !11411

if.then2:                                         ; preds = %if.then
  %value = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 5, !dbg !11412
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !11412
  %origtype = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 6, !dbg !11413
  %5 = load %union.tree_node*, %union.tree_node** %origtype, align 8, !dbg !11413
  %6 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @constructor_type to %struct.tree_common**), align 8, !dbg !11414
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !11414
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11414
  %8 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !11415
  tail call fastcc void @output_init_element(%union.tree_node* %4, %union.tree_node* %5, i8 zeroext 1, %union.tree_node* %7, %union.tree_node* %8, i32 0, i8 zeroext 0) #7, !dbg !11416
  br label %if.end106, !dbg !11416

if.else:                                          ; preds = %if.then
  %9 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !11417
  %10 = load %union.tree_node*, %union.tree_node** %purpose, align 8, !dbg !11419
  %call4 = tail call i32 @tree_int_cst_lt(%union.tree_node* %9, %union.tree_node* %10) #6, !dbg !11420
  %tobool5 = icmp eq i32 %call4, 0, !dbg !11420
  br i1 %tobool5, label %if.else12, label %if.then6, !dbg !11421

if.then6:                                         ; preds = %if.else
  %left = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 0, !dbg !11422
  %11 = load %struct.init_node*, %struct.init_node** %left, align 8, !dbg !11422
  %tobool7 = icmp eq %struct.init_node* %11, null, !dbg !11425
  br i1 %tobool7, label %if.else10, label %if.then8, !dbg !11426

if.then8:                                         ; preds = %if.then6
  call void @llvm.dbg.value(metadata %struct.init_node* %11, metadata !11385, metadata !DIExpression()), !dbg !11394
  br label %if.end106, !dbg !11427

if.else10:                                        ; preds = %if.then6
  %purpose.lcssa = phi %union.tree_node** [ %purpose, %if.then6 ], !dbg !11406
  %elt.1.lcssa17 = phi %struct.init_node* [ %elt.1, %if.then6 ], !dbg !11399
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.1.lcssa17, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.1.lcssa17, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.1.lcssa17, metadata !11385, metadata !DIExpression()), !dbg !11394
  %12 = load %union.tree_node*, %union.tree_node** %purpose.lcssa, align 8, !dbg !11428
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !11386, metadata !DIExpression()), !dbg !11394
  br label %while.end107, !dbg !11430

if.else12:                                        ; preds = %if.else
  %right = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 1, !dbg !11431
  %13 = load %struct.init_node*, %struct.init_node** %right, align 8, !dbg !11431
  %tobool13 = icmp eq %struct.init_node* %13, null, !dbg !11434
  br i1 %tobool13, label %while.cond17.preheader, label %if.then14, !dbg !11435

while.cond17.preheader:                           ; preds = %if.else12
  br label %while.cond17, !dbg !11436

if.then14:                                        ; preds = %if.else12
  call void @llvm.dbg.value(metadata %struct.init_node* %13, metadata !11385, metadata !DIExpression()), !dbg !11394
  br label %if.end106, !dbg !11438

while.cond17:                                     ; preds = %while.cond17.preheader, %land.end
  %elt.2 = phi %struct.init_node* [ %14, %land.end ], [ %elt.1, %while.cond17.preheader ], !dbg !11394
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.2, metadata !11385, metadata !DIExpression()), !dbg !11394
  %parent = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.2, i64 0, i32 2, !dbg !11439
  %14 = load %struct.init_node*, %struct.init_node** %parent, align 8, !dbg !11439
  %tobool18 = icmp eq %struct.init_node* %14, null, !dbg !11440
  br i1 %tobool18, label %land.end, label %land.rhs, !dbg !11441

land.rhs:                                         ; preds = %while.cond17
  %right20 = getelementptr inbounds %struct.init_node, %struct.init_node* %14, i64 0, i32 1, !dbg !11442
  %15 = load %struct.init_node*, %struct.init_node** %right20, align 8, !dbg !11442
  %cmp21 = icmp eq %struct.init_node* %15, %elt.2, !dbg !11443
  br label %land.end

land.end:                                         ; preds = %while.cond17, %land.rhs
  %16 = phi i1 [ false, %while.cond17 ], [ %cmp21, %land.rhs ], !dbg !11444
  call void @llvm.dbg.value(metadata %struct.init_node* %14, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %struct.init_node* %14, metadata !11385, metadata !DIExpression()), !dbg !11394
  br i1 %16, label %while.cond17, label %while.end, !dbg !11436, !llvm.loop !11445

while.end:                                        ; preds = %land.end
  %.lcssa16 = phi %struct.init_node* [ %14, %land.end ], !dbg !11439
  %tobool18.lcssa = phi i1 [ %tobool18, %land.end ], !dbg !11440
  br i1 %tobool18.lcssa, label %if.end106, label %land.lhs.true, !dbg !11447

land.lhs.true:                                    ; preds = %while.end
  %17 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !11449
  %purpose26 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa16, i64 0, i32 4, !dbg !11450
  %18 = load %union.tree_node*, %union.tree_node** %purpose26, align 8, !dbg !11450
  %call27 = tail call i32 @tree_int_cst_lt(%union.tree_node* %17, %union.tree_node* %18) #6, !dbg !11451
  %tobool28 = icmp eq i32 %call27, 0, !dbg !11451
  br i1 %tobool28, label %if.end106, label %if.then29, !dbg !11452

if.then29:                                        ; preds = %land.lhs.true
  %purpose26.lcssa = phi %union.tree_node** [ %purpose26, %land.lhs.true ], !dbg !11450
  %.lcssa16.lcssa = phi %struct.init_node* [ %.lcssa16, %land.lhs.true ], !dbg !11439
  %19 = load %union.tree_node*, %union.tree_node** %purpose26.lcssa, align 8, !dbg !11453
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !11386, metadata !DIExpression()), !dbg !11394
  br label %while.end107, !dbg !11455

if.else35:                                        ; preds = %while.body
  %cmp40 = icmp eq i64 %bf.cast4, 16, !dbg !11456
  br i1 %cmp40, label %if.then46, label %lor.lhs.false, !dbg !11457

lor.lhs.false:                                    ; preds = %if.else35
  %cmp45 = icmp eq i64 %bf.cast4, 17, !dbg !11458
  br i1 %cmp45, label %if.then46, label %if.end106, !dbg !11459

if.then46:                                        ; preds = %lor.lhs.false, %if.else35
  %20 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !11460
  %cmp47 = icmp eq %union.tree_node* %20, null, !dbg !11462
  br i1 %cmp47, label %cleanup, label %if.end49, !dbg !11463

if.end49:                                         ; preds = %if.then46
  %call50 = tail call %union.tree_node* @bit_position(%union.tree_node* nonnull %20) #6, !dbg !11464
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !11387, metadata !DIExpression()), !dbg !11465
  %purpose51 = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 4, !dbg !11466
  %21 = load %union.tree_node*, %union.tree_node** %purpose51, align 8, !dbg !11466
  %call52 = tail call %union.tree_node* @bit_position(%union.tree_node* %21) #6, !dbg !11467
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !11392, metadata !DIExpression()), !dbg !11465
  %call53 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call52, %union.tree_node* %call50) #6, !dbg !11468
  %tobool54 = icmp eq i32 %call53, 0, !dbg !11468
  br i1 %tobool54, label %if.else63, label %if.then55, !dbg !11470

if.then55:                                        ; preds = %if.end49
  %22 = bitcast %union.tree_node** %purpose51 to i64*, !dbg !11471
  %23 = load i64, i64* %22, align 8, !dbg !11471
  store i64 %23, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !11473
  %value57 = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 5, !dbg !11474
  %24 = load %union.tree_node*, %union.tree_node** %value57, align 8, !dbg !11474
  %origtype58 = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 6, !dbg !11475
  %25 = load %union.tree_node*, %union.tree_node** %origtype58, align 8, !dbg !11475
  %26 = inttoptr i64 %23 to %struct.tree_common*, !dbg !11476
  %type61 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %26, i64 0, i32 2, !dbg !11476
  %27 = load %union.tree_node*, %union.tree_node** %type61, align 8, !dbg !11476
  %.cast = inttoptr i64 %23 to %union.tree_node*, !dbg !11477
  tail call fastcc void @output_init_element(%union.tree_node* %24, %union.tree_node* %25, i8 zeroext 1, %union.tree_node* %27, %union.tree_node* %.cast, i32 0, i8 zeroext 0) #7, !dbg !11478
  br label %cleanup, !dbg !11479

if.else63:                                        ; preds = %if.end49
  %call64 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call50, %union.tree_node* %call52) #6, !dbg !11480
  %tobool65 = icmp eq i32 %call64, 0, !dbg !11480
  br i1 %tobool65, label %if.else74, label %if.then66, !dbg !11482

if.then66:                                        ; preds = %if.else63
  %left67 = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 0, !dbg !11483
  %28 = load %struct.init_node*, %struct.init_node** %left67, align 8, !dbg !11483
  %tobool68 = icmp eq %struct.init_node* %28, null, !dbg !11486
  br i1 %tobool68, label %if.else71, label %if.then69, !dbg !11487

if.then69:                                        ; preds = %if.then66
  call void @llvm.dbg.value(metadata %struct.init_node* %28, metadata !11385, metadata !DIExpression()), !dbg !11394
  br label %cleanup, !dbg !11488

if.else71:                                        ; preds = %if.then66
  %29 = load %union.tree_node*, %union.tree_node** %purpose51, align 8, !dbg !11489
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !11386, metadata !DIExpression()), !dbg !11394
  br label %cleanup, !dbg !11491

if.else74:                                        ; preds = %if.else63
  %right75 = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.1, i64 0, i32 1, !dbg !11492
  %30 = load %struct.init_node*, %struct.init_node** %right75, align 8, !dbg !11492
  %tobool76 = icmp eq %struct.init_node* %30, null, !dbg !11495
  br i1 %tobool76, label %while.cond80.preheader, label %if.then77, !dbg !11496

while.cond80.preheader:                           ; preds = %if.else74
  br label %while.cond80, !dbg !11497

if.then77:                                        ; preds = %if.else74
  call void @llvm.dbg.value(metadata %struct.init_node* %30, metadata !11385, metadata !DIExpression()), !dbg !11394
  br label %cleanup, !dbg !11499

while.cond80:                                     ; preds = %while.cond80.preheader, %land.end87
  %elt.6 = phi %struct.init_node* [ %31, %land.end87 ], [ %elt.1, %while.cond80.preheader ], !dbg !11394
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.6, metadata !11385, metadata !DIExpression()), !dbg !11394
  %parent81 = getelementptr inbounds %struct.init_node, %struct.init_node* %elt.6, i64 0, i32 2, !dbg !11500
  %31 = load %struct.init_node*, %struct.init_node** %parent81, align 8, !dbg !11500
  %tobool82 = icmp eq %struct.init_node* %31, null, !dbg !11501
  br i1 %tobool82, label %land.end87, label %land.rhs83, !dbg !11502

land.rhs83:                                       ; preds = %while.cond80
  %right85 = getelementptr inbounds %struct.init_node, %struct.init_node* %31, i64 0, i32 1, !dbg !11503
  %32 = load %struct.init_node*, %struct.init_node** %right85, align 8, !dbg !11503
  %cmp86 = icmp eq %struct.init_node* %32, %elt.6, !dbg !11504
  br label %land.end87

land.end87:                                       ; preds = %while.cond80, %land.rhs83
  %33 = phi i1 [ false, %while.cond80 ], [ %cmp86, %land.rhs83 ], !dbg !11505
  call void @llvm.dbg.value(metadata %struct.init_node* %31, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %struct.init_node* %31, metadata !11385, metadata !DIExpression()), !dbg !11394
  br i1 %33, label %while.cond80, label %while.end90, !dbg !11497, !llvm.loop !11506

while.end90:                                      ; preds = %land.end87
  %.lcssa = phi %struct.init_node* [ %31, %land.end87 ], !dbg !11500
  %tobool82.lcssa = phi i1 [ %tobool82, %land.end87 ], !dbg !11501
  br i1 %tobool82.lcssa, label %cleanup, label %land.lhs.true93, !dbg !11508

land.lhs.true93:                                  ; preds = %while.end90
  %purpose94 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa, i64 0, i32 4, !dbg !11510
  %34 = load %union.tree_node*, %union.tree_node** %purpose94, align 8, !dbg !11510
  %call95 = tail call %union.tree_node* @bit_position(%union.tree_node* %34) #6, !dbg !11511
  %call96 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call50, %union.tree_node* %call95) #6, !dbg !11512
  %tobool97 = icmp eq i32 %call96, 0, !dbg !11512
  br i1 %tobool97, label %cleanup, label %if.then98, !dbg !11513

if.then98:                                        ; preds = %land.lhs.true93
  %35 = load %union.tree_node*, %union.tree_node** %purpose94, align 8, !dbg !11514
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !11386, metadata !DIExpression()), !dbg !11394
  br label %cleanup, !dbg !11516

cleanup:                                          ; preds = %land.lhs.true93, %while.end90, %if.then55, %if.then77, %if.then69, %if.then46, %if.then98, %if.else71
  %next.1 = phi %union.tree_node* [ %29, %if.else71 ], [ %35, %if.then98 ], [ %next.0, %if.then46 ], [ %next.0, %if.then69 ], [ %next.0, %while.end90 ], [ %next.0, %land.lhs.true93 ], [ %next.0, %if.then77 ], [ %next.0, %if.then55 ], !dbg !11394
  %elt.10 = phi %struct.init_node* [ %elt.1, %if.else71 ], [ %.lcssa, %if.then98 ], [ %elt.1, %if.then46 ], [ %28, %if.then69 ], [ null, %while.end90 ], [ %.lcssa, %land.lhs.true93 ], [ %30, %if.then77 ], [ %elt.1, %if.then55 ], !dbg !11394
  %cleanup.dest.slot.0 = phi i1 [ false, %if.else71 ], [ false, %if.then98 ], [ false, %if.then46 ], [ true, %if.then69 ], [ true, %while.end90 ], [ true, %land.lhs.true93 ], [ true, %if.then77 ], [ true, %if.then55 ]
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.10, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %union.tree_node* %next.1, metadata !11386, metadata !DIExpression()), !dbg !11394
  br i1 %cleanup.dest.slot.0, label %if.end106, label %while.end107.loopexit

if.end106:                                        ; preds = %land.lhs.true, %while.end, %lor.lhs.false, %cleanup, %if.then2, %if.then14, %if.then8
  %next.3 = phi %union.tree_node* [ %next.0, %if.then8 ], [ %next.0, %while.end ], [ %next.0, %land.lhs.true ], [ %next.0, %if.then14 ], [ %next.0, %if.then2 ], [ %next.0, %lor.lhs.false ], [ %next.1, %cleanup ], !dbg !11402
  %elt.12 = phi %struct.init_node* [ %11, %if.then8 ], [ null, %while.end ], [ %.lcssa16, %land.lhs.true ], [ %13, %if.then14 ], [ %elt.1, %if.then2 ], [ %elt.1, %lor.lhs.false ], [ %elt.10, %cleanup ], !dbg !11399
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.12, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %union.tree_node* %next.3, metadata !11386, metadata !DIExpression()), !dbg !11394
  br label %while.cond, !dbg !11401, !llvm.loop !11517

while.end107.loopexit:                            ; preds = %cleanup, %while.cond
  %next.4.ph = phi %union.tree_node* [ %next.0, %while.cond ], [ %next.1, %cleanup ]
  %elt.13.ph = phi %struct.init_node* [ null, %while.cond ], [ %elt.10, %cleanup ]
  br label %while.end107, !dbg !11519

while.end107:                                     ; preds = %while.end107.loopexit, %if.then29, %if.else10
  %next.4 = phi %union.tree_node* [ %12, %if.else10 ], [ %19, %if.then29 ], [ %next.4.ph, %while.end107.loopexit ], !dbg !11394
  %elt.13 = phi %struct.init_node* [ %elt.1.lcssa17, %if.else10 ], [ %.lcssa16.lcssa, %if.then29 ], [ %elt.13.ph, %while.end107.loopexit ], !dbg !11394
  call void @llvm.dbg.value(metadata %struct.init_node* %elt.13, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %union.tree_node* %next.4, metadata !11386, metadata !DIExpression()), !dbg !11394
  %cmp110 = icmp ne %union.tree_node* %next.4, null, !dbg !11520
  %or.cond = and i1 %tobool108, %cmp110, !dbg !11521
  br i1 %or.cond, label %if.end112, label %if.then111, !dbg !11521

if.then111:                                       ; preds = %while.end107
  ret void, !dbg !11522

if.end112:                                        ; preds = %while.end107
  %36 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11523
  %bf.load114 = load i64, i64* %36, align 8, !dbg !11523
  %bf.cast1161 = and i64 %bf.load114, 65535, !dbg !11525
  %cmp117 = icmp eq i64 %bf.cast1161, 16, !dbg !11525
  br i1 %cmp117, label %if.then124, label %lor.lhs.false118, !dbg !11526

lor.lhs.false118:                                 ; preds = %if.end112
  %cmp123 = icmp eq i64 %bf.cast1161, 17, !dbg !11527
  br i1 %cmp123, label %if.then124, label %if.else125, !dbg !11528

if.then124:                                       ; preds = %lor.lhs.false118, %if.end112
  store %union.tree_node* %next.4, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !11529
  br label %if.end133, !dbg !11530

if.else125:                                       ; preds = %lor.lhs.false118
  %cmp130 = icmp eq i64 %bf.cast1161, 15, !dbg !11531
  br i1 %cmp130, label %if.then131, label %if.end133, !dbg !11533

if.then131:                                       ; preds = %if.else125
  store %union.tree_node* %next.4, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !11534
  br label %if.end133, !dbg !11535

if.end133:                                        ; preds = %if.else125, %if.then131, %if.then124
  br label %retry, !dbg !11536
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !11537 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !11543, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !11544, metadata !DIExpression()), !dbg !11545
  br label %land.end, !dbg !11546

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !11546
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11546
  ret %struct.constructor_elt_d* %arrayidx, !dbg !11546
}

; Function Attrs: nounwind uwtable
define dso_local void @set_init_index(%union.tree_node* %first, %union.tree_node* %last) local_unnamed_addr #5 !dbg !11547 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %first, metadata !11549, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata %union.tree_node* %last, metadata !11550, metadata !DIExpression()), !dbg !11551
  %call = tail call fastcc i32 @set_designator(i32 1) #7, !dbg !11552
  %tobool = icmp eq i32 %call, 0, !dbg !11552
  br i1 %tobool, label %if.end, label %if.end140, !dbg !11554

if.end:                                           ; preds = %entry
  store i1 true, i1* @designator_erroneous, align 4, !dbg !11555
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %first, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11556
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !11556
  %1 = load i64*, i64** %0, align 8, !dbg !11556
  %bf.load = load i64, i64* %1, align 8, !dbg !11556
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11556
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !11556
  br i1 %cmp, label %lor.lhs.false16, label %lor.lhs.false, !dbg !11556

lor.lhs.false:                                    ; preds = %if.end
  %cmp7 = icmp eq i64 %bf.cast1, 7, !dbg !11556
  br i1 %cmp7, label %lor.lhs.false16, label %lor.lhs.false8, !dbg !11556

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp15 = icmp eq i64 %bf.cast1, 8, !dbg !11556
  br i1 %cmp15, label %lor.lhs.false16, label %if.then41, !dbg !11558

lor.lhs.false16:                                  ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end
  %tobool17 = icmp eq %union.tree_node* %last, null, !dbg !11559
  br i1 %tobool17, label %if.end42, label %land.lhs.true, !dbg !11560

land.lhs.true:                                    ; preds = %lor.lhs.false16
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %last, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11561
  %2 = bitcast %union.tree_node** %type19 to i64**, !dbg !11561
  %3 = load i64*, i64** %2, align 8, !dbg !11561
  %bf.load21 = load i64, i64* %3, align 8, !dbg !11561
  %bf.cast2311 = and i64 %bf.load21, 65535, !dbg !11561
  %cmp24 = icmp eq i64 %bf.cast2311, 6, !dbg !11561
  br i1 %cmp24, label %if.end42, label %lor.lhs.false25, !dbg !11561

lor.lhs.false25:                                  ; preds = %land.lhs.true
  %cmp32 = icmp eq i64 %bf.cast2311, 7, !dbg !11561
  br i1 %cmp32, label %if.end42, label %lor.lhs.false33, !dbg !11561

lor.lhs.false33:                                  ; preds = %lor.lhs.false25
  %cmp40 = icmp eq i64 %bf.cast2311, 8, !dbg !11561
  br i1 %cmp40, label %if.end42, label %if.then41, !dbg !11562

if.then41:                                        ; preds = %lor.lhs.false33, %lor.lhs.false8
  tail call void @error_init(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.93, i64 0, i64 0)) #7, !dbg !11563
  br label %if.end140, !dbg !11565

if.end42:                                         ; preds = %lor.lhs.false16, %lor.lhs.false33, %lor.lhs.false25, %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %first, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11566
  %bf.load44 = load i64, i64* %4, align 8, !dbg !11566
  %bf.cast464 = and i64 %bf.load44, 65535, !dbg !11568
  %cmp47 = icmp eq i64 %bf.cast464, 23, !dbg !11568
  br i1 %cmp47, label %if.end57, label %if.then48, !dbg !11569

if.then48:                                        ; preds = %if.end42
  %call49 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %first, i8 zeroext 0, i8* null) #6, !dbg !11570
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !11549, metadata !DIExpression()), !dbg !11551
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11572
  %bf.load51 = load i64, i64* %5, align 8, !dbg !11572
  %bf.cast5310 = and i64 %bf.load51, 65535, !dbg !11574
  %cmp54 = icmp eq i64 %bf.cast5310, 23, !dbg !11574
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !11575

if.then55:                                        ; preds = %if.then48
  %6 = load i32, i32* @input_location, align 4, !dbg !11576
  tail call void @pedwarn_init(i32 %6, i32 834, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.94, i64 0, i64 0)) #7, !dbg !11577
  br label %if.end57, !dbg !11577

if.end57:                                         ; preds = %if.end42, %if.then48, %if.then55
  %first.addr.0 = phi %union.tree_node* [ %first, %if.end42 ], [ %call49, %if.then55 ], [ %call49, %if.then48 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %first.addr.0, metadata !11549, metadata !DIExpression()), !dbg !11551
  br i1 %tobool17, label %if.end74, label %land.lhs.true59, !dbg !11578

land.lhs.true59:                                  ; preds = %if.end57
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %last, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11580
  %bf.load61 = load i64, i64* %7, align 8, !dbg !11580
  %bf.cast638 = and i64 %bf.load61, 65535, !dbg !11581
  %cmp64 = icmp eq i64 %bf.cast638, 23, !dbg !11581
  br i1 %cmp64, label %if.end74, label %if.then65, !dbg !11582

if.then65:                                        ; preds = %land.lhs.true59
  %call66 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* nonnull %last, i8 zeroext 0, i8* null) #6, !dbg !11583
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !11550, metadata !DIExpression()), !dbg !11551
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11585
  %bf.load68 = load i64, i64* %8, align 8, !dbg !11585
  %bf.cast709 = and i64 %bf.load68, 65535, !dbg !11587
  %cmp71 = icmp eq i64 %bf.cast709, 23, !dbg !11587
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !11588

if.then72:                                        ; preds = %if.then65
  %9 = load i32, i32* @input_location, align 4, !dbg !11589
  tail call void @pedwarn_init(i32 %9, i32 834, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.94, i64 0, i64 0)) #7, !dbg !11590
  br label %if.end74, !dbg !11590

if.end74:                                         ; preds = %land.lhs.true59, %if.end57, %if.then65, %if.then72
  %last.addr.0 = phi %union.tree_node* [ %last, %land.lhs.true59 ], [ null, %if.end57 ], [ %call66, %if.then72 ], [ %call66, %if.then65 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %last.addr.0, metadata !11550, metadata !DIExpression()), !dbg !11551
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %first.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11591
  %bf.load76 = load i64, i64* %10, align 8, !dbg !11591
  %bf.cast785 = and i64 %bf.load76, 65535, !dbg !11593
  %cmp79 = icmp eq i64 %bf.cast785, 23, !dbg !11593
  br i1 %cmp79, label %if.else, label %if.then80, !dbg !11594

if.then80:                                        ; preds = %if.end74
  tail call void @error_init(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.95, i64 0, i64 0)) #7, !dbg !11595
  br label %if.end140, !dbg !11595

if.else:                                          ; preds = %if.end74
  %cmp81 = icmp eq %union.tree_node* %last.addr.0, null, !dbg !11596
  br i1 %cmp81, label %if.else89, label %land.lhs.true82, !dbg !11598

land.lhs.true82:                                  ; preds = %if.else
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11599
  %bf.load84 = load i64, i64* %11, align 8, !dbg !11599
  %bf.cast867 = and i64 %bf.load84, 65535, !dbg !11600
  %cmp87 = icmp eq i64 %bf.cast867, 23, !dbg !11600
  br i1 %cmp87, label %if.else89, label %if.then88, !dbg !11601

if.then88:                                        ; preds = %land.lhs.true82
  tail call void @error_init(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.95, i64 0, i64 0)) #7, !dbg !11602
  br label %if.end140, !dbg !11602

if.else89:                                        ; preds = %land.lhs.true82, %if.else
  %12 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11603
  %bf.load91 = load i64, i64* %12, align 8, !dbg !11603
  %bf.cast936 = and i64 %bf.load91, 65535, !dbg !11605
  %cmp94 = icmp eq i64 %bf.cast936, 15, !dbg !11605
  br i1 %cmp94, label %if.else96, label %if.then95, !dbg !11606

if.then95:                                        ; preds = %if.else89
  tail call void @error_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.96, i64 0, i64 0)) #7, !dbg !11607
  br label %if.end140, !dbg !11607

if.else96:                                        ; preds = %if.else89
  %call97 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %first.addr.0) #6, !dbg !11608
  %cmp98 = icmp eq i32 %call97, -1, !dbg !11610
  br i1 %cmp98, label %if.then99, label %if.else100, !dbg !11611

if.then99:                                        ; preds = %if.else96
  tail call void @error_init(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.97, i64 0, i64 0)) #7, !dbg !11612
  br label %if.end140, !dbg !11612

if.else100:                                       ; preds = %if.else96
  %13 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !11613
  %tobool101 = icmp eq %union.tree_node* %13, null, !dbg !11613
  br i1 %tobool101, label %if.else106, label %land.lhs.true102, !dbg !11615

land.lhs.true102:                                 ; preds = %if.else100
  %call103 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %13, %union.tree_node* %first.addr.0) #6, !dbg !11616
  %tobool104 = icmp eq i32 %call103, 0, !dbg !11616
  br i1 %tobool104, label %if.else106, label %if.then105, !dbg !11617

if.then105:                                       ; preds = %land.lhs.true102
  tail call void @error_init(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.97, i64 0, i64 0)) #7, !dbg !11618
  br label %if.end140, !dbg !11618

if.else106:                                       ; preds = %land.lhs.true102, %if.else100
  tail call void @constant_expression_warning(%union.tree_node* %first.addr.0) #6, !dbg !11619
  br i1 %cmp81, label %if.end109, label %if.then108, !dbg !11621

if.then108:                                       ; preds = %if.else106
  tail call void @constant_expression_warning(%union.tree_node* nonnull %last.addr.0) #6, !dbg !11622
  br label %if.end109, !dbg !11622

if.end109:                                        ; preds = %if.else106, %if.then108
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 2), align 16, !dbg !11624
  %call110 = tail call %union.tree_node* @convert(%union.tree_node* %14, %union.tree_node* %first.addr.0) #6, !dbg !11625
  store %union.tree_node* %call110, %union.tree_node** @constructor_index, align 8, !dbg !11626
  br i1 %cmp81, label %if.end130, label %if.then112, !dbg !11627

if.then112:                                       ; preds = %if.end109
  %call113 = tail call i32 @tree_int_cst_equal(%union.tree_node* %first.addr.0, %union.tree_node* nonnull %last.addr.0) #6, !dbg !11628
  %tobool114 = icmp eq i32 %call113, 0, !dbg !11628
  br i1 %tobool114, label %if.else116, label %if.end130, !dbg !11632

if.else116:                                       ; preds = %if.then112
  %call117 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %last.addr.0, %union.tree_node* %first.addr.0) #6, !dbg !11633
  %tobool118 = icmp eq i32 %call117, 0, !dbg !11633
  br i1 %tobool118, label %if.else120, label %if.then119, !dbg !11635

if.then119:                                       ; preds = %if.else116
  tail call void @error_init(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.98, i64 0, i64 0)) #7, !dbg !11636
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11550, metadata !DIExpression()), !dbg !11551
  br label %if.end130, !dbg !11638

if.else120:                                       ; preds = %if.else116
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 2), align 16, !dbg !11639
  %call121 = tail call %union.tree_node* @convert(%union.tree_node* %15, %union.tree_node* nonnull %last.addr.0) #6, !dbg !11641
  call void @llvm.dbg.value(metadata %union.tree_node* %call121, metadata !11550, metadata !DIExpression()), !dbg !11551
  %16 = load %union.tree_node*, %union.tree_node** @constructor_max_index, align 8, !dbg !11642
  %cmp122 = icmp eq %union.tree_node* %16, null, !dbg !11644
  br i1 %cmp122, label %if.end130, label %land.lhs.true123, !dbg !11645

land.lhs.true123:                                 ; preds = %if.else120
  %call124 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %16, %union.tree_node* %call121) #6, !dbg !11646
  %tobool125 = icmp eq i32 %call124, 0, !dbg !11646
  br i1 %tobool125, label %if.end130, label %if.then126, !dbg !11647

if.then126:                                       ; preds = %land.lhs.true123
  tail call void @error_init(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.99, i64 0, i64 0)) #7, !dbg !11648
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11550, metadata !DIExpression()), !dbg !11551
  br label %if.end130, !dbg !11650

if.end130:                                        ; preds = %land.lhs.true123, %if.else120, %if.then112, %if.end109, %if.then126, %if.then119
  %last.addr.4 = phi %union.tree_node* [ null, %if.end109 ], [ null, %if.then112 ], [ null, %if.then119 ], [ null, %if.then126 ], [ %call121, %land.lhs.true123 ], [ %call121, %if.else120 ], !dbg !11551
  call void @llvm.dbg.value(metadata %union.tree_node* %last.addr.4, metadata !11550, metadata !DIExpression()), !dbg !11551
  %17 = load i32, i32* @designator_depth, align 4, !dbg !11651
  %inc = add nsw i32 %17, 1, !dbg !11651
  store i32 %inc, i32* @designator_depth, align 4, !dbg !11651
  store i1 false, i1* @designator_erroneous, align 4, !dbg !11652
  %18 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !11653
  %tobool131 = icmp ne %struct.constructor_range_stack* %18, null, !dbg !11653
  %tobool133 = icmp ne %union.tree_node* %last.addr.4, null, !dbg !11655
  %or.cond = or i1 %tobool131, %tobool133, !dbg !11656
  br i1 %or.cond, label %if.then134, label %if.end140, !dbg !11656

if.then134:                                       ; preds = %if.end130
  tail call fastcc void @push_range_stack(%union.tree_node* %last.addr.4) #7, !dbg !11657
  br label %if.end140, !dbg !11657

if.end140:                                        ; preds = %entry, %if.then88, %if.then99, %if.then134, %if.end130, %if.then105, %if.then95, %if.then41, %if.then80
  ret void, !dbg !11658
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @set_designator(i32 %array) unnamed_addr #5 !dbg !11659 {
entry:
  %agg.tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata i32 %array, metadata !11661, metadata !DIExpression()), !dbg !11664
  %0 = load %union.tree_node*, %union.tree_node** @constructor_type, align 8, !dbg !11665
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !11667
  %.b = load i1, i1* @designator_erroneous, align 4, !dbg !11668
  %or.cond3 = or i1 %cmp, %.b, !dbg !11670
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11670
  br i1 %or.cond3, label %cleanup, label %if.end2, !dbg !11670

if.end2:                                          ; preds = %entry
  %2 = load i32, i32* @designator_depth, align 4, !dbg !11671
  %tobool3 = icmp eq i32 %2, 0, !dbg !11671
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !11673

if.then4:                                         ; preds = %if.end2
  %3 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !11674
  %tobool5 = icmp eq %struct.constructor_range_stack* %3, null, !dbg !11674
  br i1 %tobool5, label %cond.end, label %cond.true, !dbg !11674

cond.true:                                        ; preds = %if.then4
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 6789, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11674
  br label %cond.end, !dbg !11674

cond.end:                                         ; preds = %if.then4, %cond.true
  br label %while.cond, !dbg !11676

while.cond:                                       ; preds = %while.body, %cond.end
  %4 = load %struct.constructor_stack*, %struct.constructor_stack** @constructor_stack, align 8, !dbg !11677
  %implicit = getelementptr inbounds %struct.constructor_stack, %struct.constructor_stack* %4, i64 0, i32 17, !dbg !11678
  %5 = load i8, i8* %implicit, align 1, !dbg !11678
  %tobool6 = icmp eq i8 %5, 0, !dbg !11676
  br i1 %tobool6, label %while.end, label %while.body, !dbg !11676

while.body:                                       ; preds = %while.cond
  call void @pop_init_level(%struct.c_expr* nonnull sret %agg.tmp, i32 1) #7, !dbg !11679
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp, i8 zeroext 1) #7, !dbg !11680
  br label %while.cond, !dbg !11676, !llvm.loop !11681

while.end:                                        ; preds = %while.cond
  store i32 1, i32* @constructor_designated, align 4, !dbg !11683
  br label %cleanup, !dbg !11684

if.end7:                                          ; preds = %if.end2
  %bf.load = load i64, i64* %1, align 8, !dbg !11685
  %6 = trunc i64 %bf.load to i16, !dbg !11685
  switch i16 %6, label %sw.default [
    i16 16, label %sw.bb
    i16 17, label %sw.bb
    i16 15, label %sw.bb12
  ], !dbg !11686

sw.bb:                                            ; preds = %if.end7, %if.end7
  %7 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @constructor_fields to %struct.tree_common**), align 8, !dbg !11687
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !11687
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11687
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !11662, metadata !DIExpression()), !dbg !11664
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11689
  %cmp8 = icmp eq %union.tree_node* %8, %9, !dbg !11691
  br i1 %cmp8, label %sw.epilog, label %if.then9, !dbg !11692

if.then9:                                         ; preds = %sw.bb
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11693
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !11693
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !11662, metadata !DIExpression()), !dbg !11664
  br label %sw.epilog, !dbg !11694

sw.bb12:                                          ; preds = %if.end7
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11695
  %12 = bitcast %union.tree_node** %type14 to %struct.tree_type**, !dbg !11695
  %13 = load %struct.tree_type*, %struct.tree_type** %12, align 8, !dbg !11695
  %main_variant16 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %13, i64 0, i32 16, !dbg !11695
  %14 = load %union.tree_node*, %union.tree_node** %main_variant16, align 8, !dbg !11695
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !11662, metadata !DIExpression()), !dbg !11664
  br label %sw.epilog, !dbg !11696

sw.default:                                       ; preds = %if.end7
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 6811, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !11697
  unreachable, !dbg !11698

sw.epilog:                                        ; preds = %sw.bb, %if.then9, %sw.bb12
  %subtype.1 = phi %union.tree_node* [ %14, %sw.bb12 ], [ %11, %if.then9 ], [ %8, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %subtype.1, metadata !11662, metadata !DIExpression()), !dbg !11664
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %subtype.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11699
  %bf.load18 = load i64, i64* %15, align 8, !dbg !11699
  %16 = trunc i64 %bf.load18 to i32, !dbg !11699
  %bf.cast20 = and i32 %16, 65535, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %bf.cast20, metadata !11663, metadata !DIExpression()), !dbg !11664
  %tobool21 = icmp ne i32 %array, 0, !dbg !11700
  %cmp22 = icmp ne i32 %bf.cast20, 15, !dbg !11702
  %or.cond = and i1 %tobool21, %cmp22, !dbg !11703
  br i1 %or.cond, label %if.then23, label %if.else, !dbg !11703

if.then23:                                        ; preds = %sw.epilog
  tail call void @error_init(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.96, i64 0, i64 0)) #7, !dbg !11704
  br label %cleanup, !dbg !11706

if.else:                                          ; preds = %sw.epilog
  %17 = and i32 %16, 65534, !dbg !11707
  %switch = icmp eq i32 %17, 16, !dbg !11707
  %or.cond4 = or i1 %tobool21, %switch, !dbg !11707
  br i1 %or.cond4, label %if.end31, label %if.then29, !dbg !11707

if.then29:                                        ; preds = %if.else
  tail call void @error_init(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.100, i64 0, i64 0)) #7, !dbg !11709
  br label %cleanup, !dbg !11711

if.end31:                                         ; preds = %if.else
  store i32 1, i32* @constructor_designated, align 4, !dbg !11712
  tail call void @push_init_level(i32 2) #7, !dbg !11713
  br label %cleanup, !dbg !11714

cleanup:                                          ; preds = %entry, %if.end31, %if.then29, %if.then23, %while.end
  %retval.0 = phi i32 [ 1, %if.then23 ], [ 0, %if.end31 ], [ 1, %if.then29 ], [ 0, %while.end ], [ 1, %entry ], !dbg !11664
  ret i32 %retval.0, !dbg !11715
}

declare dso_local i32 @tree_int_cst_sgn(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @push_range_stack(%union.tree_node* %range_end) unnamed_addr #5 !dbg !11716 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %range_end, metadata !11718, metadata !DIExpression()), !dbg !11720
  %call = tail call i8* @ggc_alloc_stat(i64 56) #6, !dbg !11721
  call void @llvm.dbg.value(metadata i8* %call, metadata !11719, metadata !DIExpression()), !dbg !11720
  %0 = load i64, i64* bitcast (%struct.constructor_range_stack** @constructor_range_stack to i64*), align 8, !dbg !11722
  %prev = getelementptr inbounds i8, i8* %call, i64 8, !dbg !11723
  %1 = bitcast i8* %prev to i64*, !dbg !11724
  store i64 %0, i64* %1, align 8, !dbg !11724
  %next = bitcast i8* %call to %struct.constructor_range_stack**, !dbg !11725
  store %struct.constructor_range_stack* null, %struct.constructor_range_stack** %next, align 8, !dbg !11726
  %2 = load i64, i64* bitcast (%union.tree_node** @constructor_fields to i64*), align 8, !dbg !11727
  %fields = getelementptr inbounds i8, i8* %call, i64 48, !dbg !11728
  %3 = bitcast i8* %fields to i64*, !dbg !11729
  store i64 %2, i64* %3, align 8, !dbg !11729
  %4 = load i64, i64* bitcast (%union.tree_node** @constructor_index to i64*), align 8, !dbg !11730
  %range_start = getelementptr inbounds i8, i8* %call, i64 24, !dbg !11731
  %5 = bitcast i8* %range_start to i64*, !dbg !11732
  store i64 %4, i64* %5, align 8, !dbg !11732
  %index = getelementptr inbounds i8, i8* %call, i64 32, !dbg !11733
  %6 = bitcast i8* %index to i64*, !dbg !11734
  store i64 %4, i64* %6, align 8, !dbg !11734
  %7 = load i64, i64* bitcast (%struct.constructor_stack** @constructor_stack to i64*), align 8, !dbg !11735
  %stack = getelementptr inbounds i8, i8* %call, i64 16, !dbg !11736
  %8 = bitcast i8* %stack to i64*, !dbg !11737
  store i64 %7, i64* %8, align 8, !dbg !11737
  %range_end1 = getelementptr inbounds i8, i8* %call, i64 40, !dbg !11738
  %9 = bitcast i8* %range_end1 to %union.tree_node**, !dbg !11738
  store %union.tree_node* %range_end, %union.tree_node** %9, align 8, !dbg !11739
  %10 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !11740
  %tobool = icmp eq %struct.constructor_range_stack* %10, null, !dbg !11740
  br i1 %tobool, label %if.end, label %if.then, !dbg !11742

if.then:                                          ; preds = %entry
  %11 = bitcast %struct.constructor_range_stack* %10 to i8**, !dbg !11742
  call void @llvm.dbg.value(metadata i8* %call, metadata !11719, metadata !DIExpression()), !dbg !11720
  store i8* %call, i8** %11, align 8, !dbg !11743
  br label %if.end, !dbg !11744

if.end:                                           ; preds = %entry, %if.then
  store i8* %call, i8** bitcast (%struct.constructor_range_stack** @constructor_range_stack to i8**), align 8, !dbg !11745
  ret void, !dbg !11746
}

; Function Attrs: nounwind uwtable
define dso_local void @set_init_label(%union.tree_node* %fieldname) local_unnamed_addr #5 !dbg !11747 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fieldname, metadata !11749, metadata !DIExpression()), !dbg !11751
  %call = tail call fastcc i32 @set_designator(i32 0) #7, !dbg !11752
  %tobool = icmp eq i32 %call, 0, !dbg !11752
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !11754

if.end:                                           ; preds = %entry
  store i1 true, i1* @designator_erroneous, align 4, !dbg !11755
  %0 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11756
  %bf.load = load i64, i64* %0, align 8, !dbg !11756
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11758
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !11758
  br i1 %cmp, label %if.end7, label %land.lhs.true, !dbg !11759

land.lhs.true:                                    ; preds = %if.end
  %cmp5 = icmp eq i64 %bf.cast1, 17, !dbg !11760
  br i1 %cmp5, label %if.end7, label %if.then6, !dbg !11761

if.then6:                                         ; preds = %land.lhs.true
  tail call void @error_init(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.100, i64 0, i64 0)) #7, !dbg !11762
  br label %cleanup.cont, !dbg !11764

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %values = getelementptr inbounds i64, i64* %0, i64 3, !dbg !11765
  %1 = bitcast i64* %values to %union.tree_node**, !dbg !11765
  br label %for.cond, !dbg !11767

for.cond:                                         ; preds = %for.inc, %if.end7
  %tail.0.in = phi %union.tree_node** [ %1, %if.end7 ], [ %chain, %for.inc ]
  %tail.0 = load %union.tree_node*, %union.tree_node** %tail.0.in, align 8, !dbg !11768
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.0, metadata !11750, metadata !DIExpression()), !dbg !11751
  %cond = icmp eq %union.tree_node* %tail.0, null, !dbg !11769
  br i1 %cond, label %if.then13.loopexit, label %for.body, !dbg !11769

for.body:                                         ; preds = %for.cond
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11770
  %2 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !11770
  %cmp9 = icmp eq %union.tree_node* %2, %fieldname, !dbg !11774
  br i1 %cmp9, label %for.end, label %for.inc, !dbg !11775

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11776
  br label %for.cond, !dbg !11777, !llvm.loop !11778

for.end:                                          ; preds = %for.body
  %tail.0.lcssa5 = phi %union.tree_node* [ %tail.0, %for.body ], !dbg !11768
  store %union.tree_node* %tail.0.lcssa5, %union.tree_node** @constructor_fields, align 8, !dbg !11780
  %3 = load i32, i32* @designator_depth, align 4, !dbg !11783
  %inc = add nsw i32 %3, 1, !dbg !11783
  store i32 %inc, i32* @designator_depth, align 4, !dbg !11783
  store i1 false, i1* @designator_erroneous, align 4, !dbg !11784
  %4 = load %struct.constructor_range_stack*, %struct.constructor_range_stack** @constructor_range_stack, align 8, !dbg !11785
  %tobool14 = icmp eq %struct.constructor_range_stack* %4, null, !dbg !11785
  br i1 %tobool14, label %cleanup.cont, label %if.then15, !dbg !11787

if.then13.loopexit:                               ; preds = %for.cond
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.101, i64 0, i64 0), %union.tree_node* %fieldname) #6, !dbg !11788
  br label %cleanup.cont, !dbg !11788

if.then15:                                        ; preds = %for.end
  tail call fastcc void @push_range_stack(%union.tree_node* null) #7, !dbg !11789
  br label %cleanup.cont, !dbg !11789

cleanup.cont:                                     ; preds = %for.end, %entry, %if.then6, %if.then15, %if.then13.loopexit
  ret void, !dbg !11790
}

declare dso_local %union.tree_node* @c_save_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_init_element(%union.tree_node* %value, %union.tree_node* %origtype, i8 zeroext %strict_string, %union.tree_node* %type, %union.tree_node* %field, i32 %pending, i8 zeroext %implicit) unnamed_addr #5 !dbg !11791 {
entry:
  %maybe_const = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !11795, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype, metadata !11796, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata i8 %strict_string, metadata !11797, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !11798, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !11799, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata i32 %pending, metadata !11800, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata i8 %implicit, metadata !11801, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11802, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !11804, metadata !DIExpression(DW_OP_deref)), !dbg !11821
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %maybe_const) #8, !dbg !11822
  call void @llvm.dbg.value(metadata i8 1, metadata !11804, metadata !DIExpression()), !dbg !11821
  store i8 1, i8* %maybe_const, align 1, !dbg !11823
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11824
  %cmp = icmp eq %union.tree_node* %0, %type, !dbg !11826
  %cmp1 = icmp eq %union.tree_node* %0, %value, !dbg !11827
  %or.cond = or i1 %cmp, %cmp1, !dbg !11828
  br i1 %or.cond, label %if.then, label %if.end, !dbg !11828

if.then:                                          ; preds = %entry
  store i32 1, i32* @constructor_erroneous, align 4, !dbg !11829
  br label %cleanup, !dbg !11831

if.end:                                           ; preds = %entry
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11832
  %1 = bitcast %union.tree_node** %type2 to i64**, !dbg !11832
  %2 = load i64*, i64** %1, align 8, !dbg !11832
  %bf.load = load i64, i64* %2, align 8, !dbg !11832
  %bf.cast9 = and i64 %bf.load, 65535, !dbg !11834
  %cmp3 = icmp eq i64 %bf.cast9, 15, !dbg !11834
  br i1 %cmp3, label %land.lhs.true, label %if.end59, !dbg !11835

land.lhs.true:                                    ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11836
  %bf.load5 = load i64, i64* %3, align 8, !dbg !11836
  %bf.cast728 = and i64 %bf.load5, 65535, !dbg !11837
  %cmp8 = icmp eq i64 %bf.cast728, 28, !dbg !11837
  br i1 %cmp8, label %land.lhs.true15, label %lor.lhs.false9, !dbg !11838

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %cmp14 = icmp eq i64 %bf.cast728, 119, !dbg !11839
  br i1 %cmp14, label %land.lhs.true15, label %if.end59, !dbg !11840

land.lhs.true15:                                  ; preds = %lor.lhs.false9, %land.lhs.true
  br i1 %cmp8, label %land.lhs.true21, label %land.lhs.true51, !dbg !11841

land.lhs.true21:                                  ; preds = %land.lhs.true15
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11842
  %bf.load23 = load i64, i64* %4, align 8, !dbg !11842
  %bf.cast2531 = and i64 %bf.load23, 65535, !dbg !11843
  %cmp26 = icmp eq i64 %bf.cast2531, 15, !dbg !11843
  br i1 %cmp26, label %land.lhs.true27, label %land.lhs.true51, !dbg !11844

land.lhs.true27:                                  ; preds = %land.lhs.true21
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11845
  %5 = bitcast %union.tree_node** %type29 to i64**, !dbg !11845
  %6 = load i64*, i64** %5, align 8, !dbg !11845
  %bf.load31 = load i64, i64* %6, align 8, !dbg !11845
  %bf.cast3332 = and i64 %bf.load31, 65535, !dbg !11845
  %cmp34 = icmp eq i64 %bf.cast3332, 6, !dbg !11845
  br i1 %cmp34, label %if.end59, label %lor.lhs.false35, !dbg !11845

lor.lhs.false35:                                  ; preds = %land.lhs.true27
  %cmp42 = icmp eq i64 %bf.cast3332, 7, !dbg !11845
  br i1 %cmp42, label %if.end59, label %lor.lhs.false43, !dbg !11845

lor.lhs.false43:                                  ; preds = %lor.lhs.false35
  %cmp50 = icmp eq i64 %bf.cast3332, 8, !dbg !11845
  br i1 %cmp50, label %if.end59, label %land.lhs.true51, !dbg !11846

land.lhs.true51:                                  ; preds = %lor.lhs.false43, %land.lhs.true21, %land.lhs.true15
  %main_variant = getelementptr inbounds i64, i64* %2, i64 16, !dbg !11847
  %7 = bitcast i64* %main_variant to %union.tree_node**, !dbg !11847
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !11847
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11848
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !11848
  %call = tail call i32 @comptypes(%union.tree_node* %8, %union.tree_node* %10) #7, !dbg !11849
  %tobool = icmp eq i32 %call, 0, !dbg !11849
  br i1 %tobool, label %if.then57, label %if.end59, !dbg !11850

if.then57:                                        ; preds = %land.lhs.true51
  %11 = load i32, i32* @input_location, align 4, !dbg !11851
  %call58 = tail call fastcc %union.tree_node* @array_to_pointer_conversion(i32 %11, %union.tree_node* %value) #7, !dbg !11852
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !11795, metadata !DIExpression()), !dbg !11821
  br label %if.end59, !dbg !11853

if.end59:                                         ; preds = %land.lhs.true51, %if.then57, %lor.lhs.false43, %lor.lhs.false35, %land.lhs.true27, %lor.lhs.false9, %if.end
  %value.addr.0 = phi %union.tree_node* [ %value, %land.lhs.true27 ], [ %value, %lor.lhs.false35 ], [ %value, %lor.lhs.false43 ], [ %value, %land.lhs.true51 ], [ %call58, %if.then57 ], [ %value, %lor.lhs.false9 ], [ %value, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.0, metadata !11795, metadata !DIExpression()), !dbg !11821
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11854
  %bf.load61 = load i64, i64* %12, align 8, !dbg !11854
  %bf.cast6310 = and i64 %bf.load61, 65535, !dbg !11855
  %cmp64 = icmp ne i64 %bf.cast6310, 119, !dbg !11855
  %13 = load i32, i32* @require_constant_value, align 4, !dbg !11856
  %tobool66 = icmp eq i32 %13, 0, !dbg !11856
  %or.cond1.not = or i1 %tobool66, %cmp64, !dbg !11857
  %14 = load i32, i32* @flag_isoc99, align 4, !dbg !11858
  %tobool68 = icmp ne i32 %14, 0, !dbg !11858
  %or.cond2 = or i1 %or.cond1.not, %tobool68, !dbg !11857
  %or.cond2.not = xor i1 %or.cond2, true, !dbg !11857
  %tobool70 = icmp ne i32 %pending, 0, !dbg !11859
  %or.cond3 = and i1 %tobool70, %or.cond2.not, !dbg !11857
  br i1 %or.cond3, label %if.then71, label %if.end75, !dbg !11857

if.then71:                                        ; preds = %if.end59
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11860
  %15 = bitcast %union.tree_node** %operands to %struct.tree_exp**, !dbg !11860
  %16 = load %struct.tree_exp*, %struct.tree_exp** %15, align 8, !dbg !11860
  %arrayidx74 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %16, i64 0, i32 3, i64 0, !dbg !11860
  %17 = bitcast %union.tree_node** %arrayidx74 to %struct.tree_decl_common**, !dbg !11860
  %18 = load %struct.tree_decl_common*, %struct.tree_decl_common** %17, align 8, !dbg !11860
  %initial = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %18, i64 0, i32 5, !dbg !11861
  %19 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !11861
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !11795, metadata !DIExpression()), !dbg !11821
  br label %if.end75, !dbg !11862

if.end75:                                         ; preds = %if.end59, %if.then71
  %value.addr.1 = phi %union.tree_node* [ %19, %if.then71 ], [ %value.addr.0, %if.end59 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.1, metadata !11795, metadata !DIExpression()), !dbg !11821
  %call76 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* %value.addr.1) #7, !dbg !11863
  call void @llvm.dbg.value(metadata i8 %call76, metadata !11805, metadata !DIExpression()), !dbg !11821
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11864
  %bf.load78 = load i64, i64* %20, align 8, !dbg !11864
  %bf.cast8011 = and i64 %bf.load78, 65535, !dbg !11866
  %cmp81 = icmp eq i64 %bf.cast8011, 190, !dbg !11866
  br i1 %cmp81, label %if.then82, label %if.end88, !dbg !11867

if.then82:                                        ; preds = %if.end75
  %type84 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11868
  %21 = load %union.tree_node*, %union.tree_node** %type84, align 8, !dbg !11868
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !11802, metadata !DIExpression()), !dbg !11821
  %operands86 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11870
  %22 = load %union.tree_node*, %union.tree_node** %operands86, align 8, !dbg !11870
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !11795, metadata !DIExpression()), !dbg !11821
  br label %if.end88, !dbg !11871

if.end88:                                         ; preds = %if.then82, %if.end75
  %semantic_type.0 = phi %union.tree_node* [ %21, %if.then82 ], [ null, %if.end75 ], !dbg !11821
  %value.addr.2 = phi %union.tree_node* [ %22, %if.then82 ], [ %value.addr.1, %if.end75 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.2, metadata !11795, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_type.0, metadata !11802, metadata !DIExpression()), !dbg !11821
  %23 = load i32, i32* @require_constant_value, align 4, !dbg !11872
  %conv = trunc i32 %23 to i8, !dbg !11872
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !11804, metadata !DIExpression(DW_OP_deref)), !dbg !11821
  %call89 = call %union.tree_node* @c_fully_fold(%union.tree_node* %value.addr.2, i8 zeroext %conv, i8* nonnull %maybe_const) #6, !dbg !11873
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !11795, metadata !DIExpression()), !dbg !11821
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11874
  %cmp90 = icmp eq %union.tree_node* %call89, %24, !dbg !11876
  br i1 %cmp90, label %if.then92, label %if.else, !dbg !11877

if.then92:                                        ; preds = %if.end88
  store i32 1, i32* @constructor_erroneous, align 4, !dbg !11878
  br label %if.end136, !dbg !11879

if.else:                                          ; preds = %if.end88
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11880
  %bf.load94 = load i64, i64* %25, align 8, !dbg !11880
  %bf.cast9612 = and i64 %bf.load94, 131072, !dbg !11880
  %tobool97 = icmp eq i64 %bf.cast9612, 0, !dbg !11880
  br i1 %tobool97, label %if.then98, label %if.else99, !dbg !11882

if.then98:                                        ; preds = %if.else
  store i32 0, i32* @constructor_constant, align 4, !dbg !11883
  br label %if.end136, !dbg !11884

if.else99:                                        ; preds = %if.else
  %type101 = getelementptr inbounds %union.tree_node, %union.tree_node* %call89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11885
  %26 = load %union.tree_node*, %union.tree_node** %type101, align 8, !dbg !11885
  %call102 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %call89, %union.tree_node* %26) #6, !dbg !11887
  %tobool103 = icmp eq %union.tree_node* %call102, null, !dbg !11887
  br i1 %tobool103, label %if.then133, label %lor.lhs.false104, !dbg !11888

lor.lhs.false104:                                 ; preds = %if.else99
  %27 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11889
  %bf.load106 = load i64, i64* %27, align 8, !dbg !11889
  %bf.cast10824 = and i64 %bf.load106, 65535, !dbg !11890
  %cmp109 = icmp eq i64 %bf.cast10824, 16, !dbg !11890
  br i1 %cmp109, label %land.lhs.true118, label %lor.lhs.false111, !dbg !11891

lor.lhs.false111:                                 ; preds = %lor.lhs.false104
  %cmp116 = icmp eq i64 %bf.cast10824, 17, !dbg !11892
  br i1 %cmp116, label %land.lhs.true118, label %if.end136, !dbg !11893

land.lhs.true118:                                 ; preds = %lor.lhs.false111, %lor.lhs.false104
  %lang_flag_4 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11894
  %28 = bitcast i40* %lang_flag_4 to i64*, !dbg !11894
  %bf.load120 = load i64, i64* %28, align 8, !dbg !11894
  %bf.cast12326 = and i64 %bf.load120, 524288, !dbg !11894
  %cmp124 = icmp eq i64 %bf.cast12326, 0, !dbg !11894
  br i1 %cmp124, label %if.end136, label %land.lhs.true126, !dbg !11895

land.lhs.true126:                                 ; preds = %land.lhs.true118
  %bf.load128 = load i64, i64* %25, align 8, !dbg !11896
  %bf.cast13027 = and i64 %bf.load128, 65535, !dbg !11897
  %cmp131 = icmp eq i64 %bf.cast13027, 23, !dbg !11897
  br i1 %cmp131, label %if.end136, label %if.then133, !dbg !11898

if.then133:                                       ; preds = %land.lhs.true126, %if.else99
  store i32 0, i32* @constructor_simple, align 4, !dbg !11899
  br label %if.end136, !dbg !11900

if.end136:                                        ; preds = %land.lhs.true126, %land.lhs.true118, %if.then98, %if.then133, %lor.lhs.false111, %if.then92
  %29 = load i8, i8* %maybe_const, align 1, !dbg !11901
  call void @llvm.dbg.value(metadata i8 %29, metadata !11804, metadata !DIExpression()), !dbg !11821
  %tobool137 = icmp eq i8 %29, 0, !dbg !11901
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !11903

if.then138:                                       ; preds = %if.end136
  store i32 1, i32* @constructor_nonconst, align 4, !dbg !11904
  br label %if.end139, !dbg !11905

if.end139:                                        ; preds = %if.end136, %if.then138
  %type141 = getelementptr inbounds %union.tree_node, %union.tree_node* %call89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11906
  %30 = load %union.tree_node*, %union.tree_node** %type141, align 8, !dbg !11906
  %call142 = call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %call89, %union.tree_node* %30) #6, !dbg !11908
  %tobool143 = icmp eq %union.tree_node* %call142, null, !dbg !11908
  br i1 %tobool143, label %if.then144, label %if.else153, !dbg !11909

if.then144:                                       ; preds = %if.end139
  %31 = load i32, i32* @require_constant_value, align 4, !dbg !11910
  %tobool145 = icmp eq i32 %31, 0, !dbg !11910
  br i1 %tobool145, label %if.else147, label %if.then146, !dbg !11913

if.then146:                                       ; preds = %if.then144
  call void @error_init(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.260, i64 0, i64 0)) #7, !dbg !11914
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11916
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !11795, metadata !DIExpression()), !dbg !11821
  br label %if.end161, !dbg !11917

if.else147:                                       ; preds = %if.then144
  %33 = load i32, i32* @require_constant_elements, align 4, !dbg !11918
  %tobool148 = icmp eq i32 %33, 0, !dbg !11918
  br i1 %tobool148, label %if.end161, label %if.then149, !dbg !11920

if.then149:                                       ; preds = %if.else147
  %34 = load i32, i32* @input_location, align 4, !dbg !11921
  %call150 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %34, i32 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.262, i64 0, i64 0)) #6, !dbg !11922
  br label %if.end161, !dbg !11922

if.else153:                                       ; preds = %if.end139
  %35 = load i8, i8* %maybe_const, align 1, !dbg !11923
  call void @llvm.dbg.value(metadata i8 %35, metadata !11804, metadata !DIExpression()), !dbg !11821
  %tobool154 = icmp eq i8 %35, 0, !dbg !11923
  br i1 %tobool154, label %land.lhs.true155, label %if.end161, !dbg !11925

land.lhs.true155:                                 ; preds = %if.else153
  %36 = load i32, i32* @require_constant_value, align 4, !dbg !11926
  %37 = load i32, i32* @require_constant_elements, align 4, !dbg !11927
  %38 = or i32 %36, %37, !dbg !11928
  %39 = icmp eq i32 %38, 0, !dbg !11928
  br i1 %39, label %if.end161, label %if.then159, !dbg !11928

if.then159:                                       ; preds = %land.lhs.true155
  %40 = load i32, i32* @input_location, align 4, !dbg !11929
  call void @pedwarn_init(i32 %40, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.261, i64 0, i64 0)) #7, !dbg !11930
  br label %if.end161, !dbg !11930

if.end161:                                        ; preds = %land.lhs.true155, %if.else153, %if.else147, %if.then159, %if.then146, %if.then149
  %value.addr.4 = phi %union.tree_node* [ %32, %if.then146 ], [ %call89, %if.then149 ], [ %call89, %if.else147 ], [ %call89, %land.lhs.true155 ], [ %call89, %if.then159 ], [ %call89, %if.else153 ], !dbg !11821
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.4, metadata !11795, metadata !DIExpression()), !dbg !11821
  %41 = load i32, i32* @warn_cxx_compat, align 4, !dbg !11931
  %tobool162 = icmp ne i32 %41, 0, !dbg !11931
  %cmp164 = icmp ne %union.tree_node* %field, null, !dbg !11932
  %or.cond5 = and i1 %tobool162, %cmp164, !dbg !11933
  br i1 %or.cond5, label %land.lhs.true166, label %if.end212, !dbg !11933

land.lhs.true166:                                 ; preds = %if.end161
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11934
  %bf.load168 = load i64, i64* %42, align 8, !dbg !11934
  %bf.cast17022 = and i64 %bf.load168, 65535, !dbg !11935
  %cmp171 = icmp eq i64 %bf.cast17022, 31, !dbg !11935
  br i1 %cmp171, label %land.lhs.true173, label %if.end212, !dbg !11936

land.lhs.true173:                                 ; preds = %land.lhs.true166
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !11937
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !11937
  %cmp174 = icmp eq %union.tree_node* %44, null, !dbg !11938
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11939
  br i1 %cmp174, label %if.end212, label %land.lhs.true176, !dbg !11939

land.lhs.true176:                                 ; preds = %land.lhs.true173
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11940
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8, !dbg !11940
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11941
  %49 = load %union.tree_node*, %union.tree_node** %48, align 8, !dbg !11941
  %cmp183 = icmp eq %union.tree_node* %47, %49, !dbg !11942
  br i1 %cmp183, label %if.end212, label %land.lhs.true185, !dbg !11943

land.lhs.true185:                                 ; preds = %land.lhs.true176
  %bf.load189 = load i64, i64* %45, align 8, !dbg !11944
  %bf.cast19123 = and i64 %bf.load189, 65535, !dbg !11945
  %cmp192 = icmp eq i64 %bf.cast19123, 6, !dbg !11945
  br i1 %cmp192, label %if.then194, label %if.end212, !dbg !11946

if.then194:                                       ; preds = %land.lhs.true185
  %cmp195 = icmp eq %union.tree_node* %origtype, null, !dbg !11947
  br i1 %cmp195, label %cond.false, label %cond.end, !dbg !11948

cond.false:                                       ; preds = %if.then194
  %type198 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.addr.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11949
  %50 = load %union.tree_node*, %union.tree_node** %type198, align 8, !dbg !11949
  br label %cond.end, !dbg !11948

cond.end:                                         ; preds = %if.then194, %cond.false
  %cond = phi %union.tree_node* [ %50, %cond.false ], [ %origtype, %if.then194 ], !dbg !11948
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !11809, metadata !DIExpression()), !dbg !11950
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11951
  %cmp199 = icmp eq %union.tree_node* %cond, %51, !dbg !11953
  br i1 %cmp199, label %if.end212, label %land.lhs.true201, !dbg !11954

land.lhs.true201:                                 ; preds = %cond.end
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !11955
  %53 = load %union.tree_node*, %union.tree_node** %52, align 8, !dbg !11955
  %cmp208 = icmp eq %union.tree_node* %53, %47, !dbg !11956
  br i1 %cmp208, label %if.end212, label %if.then210, !dbg !11957

if.then210:                                       ; preds = %land.lhs.true201
  call fastcc void @warning_init(i32 49, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.206, i64 0, i64 0)) #7, !dbg !11958
  br label %if.end212, !dbg !11958

if.end212:                                        ; preds = %land.lhs.true201, %cond.end, %land.lhs.true176, %land.lhs.true173, %if.then210, %land.lhs.true185, %land.lhs.true166, %if.end161
  %tobool213 = icmp eq %union.tree_node* %field, null, !dbg !11959
  br i1 %tobool213, label %if.end243, label %land.lhs.true214, !dbg !11961

land.lhs.true214:                                 ; preds = %if.end212
  %type216 = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11962
  %54 = load %union.tree_node*, %union.tree_node** %type216, align 8, !dbg !11962
  %55 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11963
  %cmp217 = icmp eq %union.tree_node* %54, %55, !dbg !11964
  br i1 %cmp217, label %cleanup, label %lor.lhs.false219, !dbg !11965

lor.lhs.false219:                                 ; preds = %land.lhs.true214
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11966
  %57 = load %union.tree_node*, %union.tree_node** %56, align 8, !dbg !11966
  %cmp223 = icmp eq %union.tree_node* %57, null, !dbg !11966
  br i1 %cmp223, label %if.end243, label %land.lhs.true225, !dbg !11967

land.lhs.true225:                                 ; preds = %lor.lhs.false219
  %call230 = call i32 @integer_zerop(%union.tree_node* nonnull %57) #6, !dbg !11968
  %tobool231 = icmp eq i32 %call230, 0, !dbg !11968
  br i1 %tobool231, label %if.end243, label %land.lhs.true232, !dbg !11969

land.lhs.true232:                                 ; preds = %land.lhs.true225
  %58 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11970
  %bf.load234 = load i64, i64* %58, align 8, !dbg !11970
  %bf.cast23621 = and i64 %bf.load234, 65535, !dbg !11971
  %cmp237 = icmp eq i64 %bf.cast23621, 15, !dbg !11971
  br i1 %cmp237, label %cleanup, label %lor.lhs.false239, !dbg !11972

lor.lhs.false239:                                 ; preds = %land.lhs.true232
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !11973
  %59 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !11973
  %tobool241 = icmp eq %union.tree_node* %59, null, !dbg !11973
  br i1 %tobool241, label %if.end243, label %cleanup, !dbg !11974

if.end243:                                        ; preds = %lor.lhs.false239, %land.lhs.true225, %lor.lhs.false219, %if.end212
  %tobool244 = icmp eq %union.tree_node* %semantic_type.0, null, !dbg !11975
  br i1 %tobool244, label %if.end247, label %if.then245, !dbg !11977

if.then245:                                       ; preds = %if.end243
  %call246 = call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %semantic_type.0, %union.tree_node* %value.addr.4) #6, !dbg !11978
  call void @llvm.dbg.value(metadata %union.tree_node* %call246, metadata !11795, metadata !DIExpression()), !dbg !11821
  br label %if.end247, !dbg !11979

if.end247:                                        ; preds = %if.end243, %if.then245
  %value.addr.5 = phi %union.tree_node* [ %call246, %if.then245 ], [ %value.addr.4, %if.end243 ], !dbg !11821
  call void @llvm.dbg.value(metadata %union.tree_node* %value.addr.5, metadata !11795, metadata !DIExpression()), !dbg !11821
  %60 = load i32, i32* @input_location, align 4, !dbg !11980
  %61 = load i32, i32* @require_constant_value, align 4, !dbg !11981
  %call248 = call fastcc %union.tree_node* @digest_init(i32 %60, %union.tree_node* %type, %union.tree_node* %value.addr.5, %union.tree_node* %origtype, i8 zeroext %call76, i8 zeroext %strict_string, i32 %61) #7, !dbg !11982
  call void @llvm.dbg.value(metadata %union.tree_node* %call248, metadata !11795, metadata !DIExpression()), !dbg !11821
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !11983
  %cmp249 = icmp eq %union.tree_node* %call248, %62, !dbg !11985
  br i1 %cmp249, label %if.then251, label %if.end252, !dbg !11986

if.then251:                                       ; preds = %if.end247
  store i32 1, i32* @constructor_erroneous, align 4, !dbg !11987
  br label %cleanup, !dbg !11989

if.end252:                                        ; preds = %if.end247
  %63 = load i32, i32* @require_constant_value, align 4, !dbg !11990
  %64 = load i32, i32* @require_constant_elements, align 4, !dbg !11992
  %65 = or i32 %63, %64, !dbg !11993
  %66 = icmp eq i32 %65, 0, !dbg !11993
  br i1 %66, label %if.end257, label %if.then256, !dbg !11993

if.then256:                                       ; preds = %if.end252
  call void @constant_expression_warning(%union.tree_node* %call248) #6, !dbg !11994
  br label %if.end257, !dbg !11994

if.end257:                                        ; preds = %if.end252, %if.then256
  %67 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !11995
  %bf.load259 = load i64, i64* %67, align 8, !dbg !11995
  %bf.cast26113 = and i64 %bf.load259, 65535, !dbg !11996
  %cmp262 = icmp eq i64 %bf.cast26113, 15, !dbg !11996
  br i1 %cmp262, label %land.lhs.true264, label %if.else276, !dbg !11997

land.lhs.true264:                                 ; preds = %if.end257
  %68 = load i32, i32* @constructor_incremental, align 4, !dbg !11998
  %tobool265 = icmp eq i32 %68, 0, !dbg !11998
  br i1 %tobool265, label %if.then269, label %lor.lhs.false266, !dbg !11999

lor.lhs.false266:                                 ; preds = %land.lhs.true264
  %69 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !12000
  %call267 = call i32 @tree_int_cst_equal(%union.tree_node* %field, %union.tree_node* %69) #6, !dbg !12001
  %tobool268 = icmp eq i32 %call267, 0, !dbg !12001
  br i1 %tobool268, label %lor.lhs.false266.if.then269_crit_edge, label %lor.lhs.false266.if.else276_crit_edge, !dbg !12002

lor.lhs.false266.if.then269_crit_edge:            ; preds = %lor.lhs.false266
  %.pre37 = load i32, i32* @constructor_incremental, align 4, !dbg !12003
  %phitmp = icmp eq i32 %.pre37, 0, !dbg !12002
  br label %if.then269, !dbg !12002

lor.lhs.false266.if.else276_crit_edge:            ; preds = %lor.lhs.false266
  %.pre = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !12006
  %bf.load278.pre = load i64, i64* %.pre, align 8, !dbg !12006
  br label %if.else276, !dbg !12002

if.then269:                                       ; preds = %lor.lhs.false266.if.then269_crit_edge, %land.lhs.true264
  %70 = phi i1 [ %phitmp, %lor.lhs.false266.if.then269_crit_edge ], [ true, %land.lhs.true264 ]
  br i1 %70, label %if.end275, label %land.lhs.true271, !dbg !12007

land.lhs.true271:                                 ; preds = %if.then269
  %71 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !12008
  %call272 = call i32 @tree_int_cst_lt(%union.tree_node* %field, %union.tree_node* %71) #6, !dbg !12009
  %tobool273 = icmp eq i32 %call272, 0, !dbg !12009
  br i1 %tobool273, label %if.end275, label %if.then274, !dbg !12010

if.then274:                                       ; preds = %land.lhs.true271
  call fastcc void @set_nonincremental_init() #7, !dbg !12011
  br label %if.end275, !dbg !12011

if.end275:                                        ; preds = %land.lhs.true271, %if.then269, %if.then274
  call fastcc void @add_pending_init(%union.tree_node* %field, %union.tree_node* %call248, %union.tree_node* %origtype, i8 zeroext %implicit) #7, !dbg !12012
  br label %cleanup, !dbg !12013

if.else276:                                       ; preds = %lor.lhs.false266.if.else276_crit_edge, %if.end257
  %bf.load304 = phi i64 [ %bf.load278.pre, %lor.lhs.false266.if.else276_crit_edge ], [ %bf.load259, %if.end257 ], !dbg !12006
  %bf.cast28014 = and i64 %bf.load304, 65535, !dbg !12014
  %cmp281 = icmp eq i64 %bf.cast28014, 16, !dbg !12014
  br i1 %cmp281, label %land.lhs.true283, label %if.else302, !dbg !12015

land.lhs.true283:                                 ; preds = %if.else276
  %72 = load i32, i32* @constructor_incremental, align 4, !dbg !12016
  %tobool284 = icmp eq i32 %72, 0, !dbg !12016
  %73 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !12017
  %cmp286 = icmp ne %union.tree_node* %73, %field, !dbg !12018
  %or.cond7 = or i1 %tobool284, %cmp286, !dbg !12019
  br i1 %or.cond7, label %if.then288, label %if.else302, !dbg !12019

if.then288:                                       ; preds = %land.lhs.true283
  br i1 %tobool284, label %if.end301, label %if.then290, !dbg !12020

if.then290:                                       ; preds = %if.then288
  %tobool291 = icmp eq %union.tree_node* %73, null, !dbg !12021
  br i1 %tobool291, label %if.then292, label %if.else293, !dbg !12022

if.then292:                                       ; preds = %if.then290
  call fastcc void @set_nonincremental_init() #7, !dbg !12023
  br label %if.end301, !dbg !12023

if.else293:                                       ; preds = %if.then290
  %call294 = call %union.tree_node* @bit_position(%union.tree_node* %field) #6, !dbg !12024
  call void @llvm.dbg.value(metadata %union.tree_node* %call294, metadata !11812, metadata !DIExpression()), !dbg !12025
  %74 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !12026
  %call295 = call %union.tree_node* @bit_position(%union.tree_node* %74) #6, !dbg !12027
  call void @llvm.dbg.value(metadata %union.tree_node* %call295, metadata !11820, metadata !DIExpression()), !dbg !12025
  %call296 = call i32 @tree_int_cst_lt(%union.tree_node* %call294, %union.tree_node* %call295) #6, !dbg !12028
  %tobool297 = icmp eq i32 %call296, 0, !dbg !12028
  br i1 %tobool297, label %if.end301, label %if.then298, !dbg !12030

if.then298:                                       ; preds = %if.else293
  call fastcc void @set_nonincremental_init() #7, !dbg !12031
  br label %if.end301, !dbg !12031

if.end301:                                        ; preds = %if.else293, %if.then288, %if.then292, %if.then298
  call fastcc void @add_pending_init(%union.tree_node* %field, %union.tree_node* %call248, %union.tree_node* %origtype, i8 zeroext %implicit) #7, !dbg !12032
  br label %cleanup, !dbg !12033

if.else302:                                       ; preds = %land.lhs.true283, %if.else276
  %cmp307 = icmp eq i64 %bf.cast28014, 17, !dbg !12034
  br i1 %cmp307, label %land.lhs.true309, label %if.end345, !dbg !12036

land.lhs.true309:                                 ; preds = %if.else302
  %75 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !12037
  %base312 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %75, i64 0, i32 0, !dbg !12037
  %call316 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base312) #7, !dbg !12037
  %cmp317 = icmp eq i32 %call316, 0, !dbg !12037
  br i1 %cmp317, label %if.end345, label %if.then319, !dbg !12038

if.then319:                                       ; preds = %land.lhs.true309
  %tobool320 = icmp eq i8 %implicit, 0, !dbg !12039
  br i1 %tobool320, label %if.then321, label %if.end342, !dbg !12042

if.then321:                                       ; preds = %if.then319
  %76 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !12043
  %base324 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %76, i64 0, i32 0, !dbg !12043
  %call328 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_last(%struct.VEC_constructor_elt_base* %base324) #7, !dbg !12043
  %value329 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call328, i64 0, i32 1, !dbg !12043
  %77 = bitcast %union.tree_node** %value329 to i64**, !dbg !12043
  %78 = load i64*, i64** %77, align 8, !dbg !12043
  %bf.load331 = load i64, i64* %78, align 8, !dbg !12043
  %bf.cast33420 = and i64 %bf.load331, 65536, !dbg !12043
  %tobool335 = icmp eq i64 %bf.cast33420, 0, !dbg !12043
  br i1 %tobool335, label %if.else337, label %if.then336, !dbg !12046

if.then336:                                       ; preds = %if.then321
  call fastcc void @warning_init(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.266, i64 0, i64 0)) #7, !dbg !12047
  br label %if.end342, !dbg !12047

if.else337:                                       ; preds = %if.then321
  %79 = load i32, i32* @warn_override_init, align 4, !dbg !12048
  %tobool338 = icmp eq i32 %79, 0, !dbg !12048
  br i1 %tobool338, label %if.end342, label %if.then339, !dbg !12050

if.then339:                                       ; preds = %if.else337
  call fastcc void @warning_init(i32 154, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.267, i64 0, i64 0)) #7, !dbg !12051
  br label %if.end342, !dbg !12051

if.end342:                                        ; preds = %if.else337, %if.then319, %if.then336, %if.then339
  store %struct.VEC_constructor_elt_gc* null, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !12052
  br label %if.end345, !dbg !12053

if.end345:                                        ; preds = %if.end342, %land.lhs.true309, %if.else302
  %call346 = call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_gc_safe_push(%struct.VEC_constructor_elt_gc** nonnull @constructor_elements, %struct.constructor_elt_d* null) #7, !dbg !12054
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call346, metadata !11803, metadata !DIExpression()), !dbg !11821
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call346, i64 0, i32 0, !dbg !12055
  store %union.tree_node* %field, %union.tree_node** %index, align 8, !dbg !12056
  %value347 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call346, i64 0, i32 1, !dbg !12057
  store %union.tree_node* %call248, %union.tree_node** %value347, align 8, !dbg !12058
  %80 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !12059
  %bf.load349 = load i64, i64* %80, align 8, !dbg !12059
  %bf.cast35116 = and i64 %bf.load349, 65535, !dbg !12061
  %cmp352 = icmp eq i64 %bf.cast35116, 15, !dbg !12061
  br i1 %cmp352, label %if.then354, label %if.else356, !dbg !12062

if.then354:                                       ; preds = %if.end345
  %81 = load i32, i32* @input_location, align 4, !dbg !12063
  %82 = load %union.tree_node*, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !12064
  %83 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 16, !dbg !12065
  %call355 = call %union.tree_node* @size_binop_loc(i32 %81, i32 63, %union.tree_node* %82, %union.tree_node* %83) #6, !dbg !12066
  store %union.tree_node* %call355, %union.tree_node** @constructor_unfilled_index, align 8, !dbg !12067
  br label %if.end391, !dbg !12068

if.else356:                                       ; preds = %if.end345
  %cmp361 = icmp eq i64 %bf.cast35116, 16, !dbg !12069
  br i1 %cmp361, label %if.then363, label %if.else381, !dbg !12071

if.then363:                                       ; preds = %if.else356
  %.pn.pre = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @constructor_unfilled_fields to %struct.tree_common**), align 8, !dbg !12072
  br label %while.cond, !dbg !12074

while.cond:                                       ; preds = %while.body, %if.then363
  %.pn = phi %struct.tree_common* [ %88, %while.body ], [ %.pn.pre, %if.then363 ], !dbg !12072
  %storemerge.in.in = getelementptr inbounds %struct.tree_common, %struct.tree_common* %.pn, i64 0, i32 1, !dbg !12072
  %storemerge.in = bitcast %union.tree_node** %storemerge.in.in to i64*, !dbg !12072
  %storemerge = load i64, i64* %storemerge.in, align 8, !dbg !12072
  store i64 %storemerge, i64* bitcast (%union.tree_node** @constructor_unfilled_fields to i64*), align 8, !dbg !12072
  %cmp366 = icmp eq i64 %storemerge, 0, !dbg !12075
  %84 = inttoptr i64 %storemerge to %struct.tree_decl_minimal*, !dbg !12076
  br i1 %cmp366, label %if.end391.loopexit, label %land.lhs.true368, !dbg !12076

land.lhs.true368:                                 ; preds = %while.cond
  %85 = inttoptr i64 %storemerge to %struct.tree_decl_common*, !dbg !12076
  %lang_flag_4370 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %85, i64 0, i32 2, !dbg !12077
  %86 = bitcast i40* %lang_flag_4370 to i64*, !dbg !12077
  %bf.load371 = load i64, i64* %86, align 8, !dbg !12077
  %bf.cast37419 = and i64 %bf.load371, 524288, !dbg !12077
  %cmp375 = icmp eq i64 %bf.cast37419, 0, !dbg !12077
  br i1 %cmp375, label %if.end391.loopexit, label %land.rhs, !dbg !12078

land.rhs:                                         ; preds = %land.lhs.true368
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %84, i64 0, i32 3, !dbg !12079
  %87 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !12079
  %cmp377 = icmp eq %union.tree_node* %87, null, !dbg !12080
  br i1 %cmp377, label %while.body, label %if.end391.loopexit, !dbg !12074

while.body:                                       ; preds = %land.rhs
  %88 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %84, i64 0, i32 0, !dbg !12074
  br label %while.cond, !dbg !12074, !llvm.loop !12081

if.else381:                                       ; preds = %if.else356
  %cmp386 = icmp eq i64 %bf.cast35116, 17, !dbg !12083
  br i1 %cmp386, label %if.then388, label %if.end391, !dbg !12085

if.then388:                                       ; preds = %if.else381
  store %union.tree_node* null, %union.tree_node** @constructor_unfilled_fields, align 8, !dbg !12086
  br label %if.end391, !dbg !12087

if.end391.loopexit:                               ; preds = %land.rhs, %while.cond, %land.lhs.true368
  br label %if.end391, !dbg !12088

if.end391:                                        ; preds = %if.end391.loopexit, %if.then388, %if.else381, %if.then354
  %tobool392 = icmp eq i32 %pending, 0, !dbg !12088
  br i1 %tobool392, label %cleanup, label %if.then393, !dbg !12090

if.then393:                                       ; preds = %if.end391
  call fastcc void @output_pending_init_elements(i32 0) #7, !dbg !12091
  br label %cleanup, !dbg !12091

cleanup:                                          ; preds = %lor.lhs.false239, %if.end391, %if.then393, %land.lhs.true214, %land.lhs.true232, %if.end301, %if.end275, %if.then251, %if.then
  call void @llvm.dbg.value(metadata i8* %maybe_const, metadata !11804, metadata !DIExpression(DW_OP_deref)), !dbg !11821
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %maybe_const) #8, !dbg !12092
  ret void, !dbg !12092
}

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @bit_position(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @real_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_all_onesp(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_asm_stmt(%union.tree_node* %cv_qualifier, %union.tree_node* %args) local_unnamed_addr #5 !dbg !12093 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %cv_qualifier, metadata !12095, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata %union.tree_node* %args, metadata !12096, metadata !DIExpression()), !dbg !12097
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12098
  %bf.load = load i64, i64* %0, align 8, !dbg !12098
  %bf.cast1 = and i64 %bf.load, 134217728, !dbg !12098
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !12098
  %tobool1 = icmp ne %union.tree_node* %cv_qualifier, null, !dbg !12100
  %or.cond = and i1 %tobool, %tobool1, !dbg !12101
  br i1 %or.cond, label %if.then, label %if.end, !dbg !12101

if.then:                                          ; preds = %entry
  %bf.set = or i64 %bf.load, 134217728, !dbg !12102
  store i64 %bf.set, i64* %0, align 8, !dbg !12102
  br label %if.end, !dbg !12103

if.end:                                           ; preds = %entry, %if.then
  %call = tail call %union.tree_node* @add_stmt(%union.tree_node* %args) #6, !dbg !12104
  ret %union.tree_node* %call, !dbg !12105
}

declare dso_local %union.tree_node* @add_stmt(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_asm_expr(i32 %loc, %union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers, %union.tree_node* %labels, i8 zeroext %simple) local_unnamed_addr #5 !dbg !12106 {
entry:
  %constraint = alloca i8*, align 8
  %allows_mem = alloca i8, align 1
  %allows_reg = alloca i8, align 1
  %is_inout = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12110, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %string, metadata !12111, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !12112, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs, metadata !12113, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers, metadata !12114, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %labels, metadata !12115, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata i8 %simple, metadata !12116, metadata !DIExpression()), !dbg !12135
  %0 = bitcast i8** %constraint to i8*, !dbg !12136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12136
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !12122, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !12137
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !12123, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !12137
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !12124, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !12137
  %call = tail call i32 @list_length(%union.tree_node* %inputs) #6, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %call, metadata !12125, metadata !DIExpression()), !dbg !12135
  %call1 = tail call i32 @list_length(%union.tree_node* %outputs) #6, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %call1, metadata !12126, metadata !DIExpression()), !dbg !12135
  %conv = sext i32 %call1 to i64, !dbg !12140
  %1 = alloca i8*, i64 %conv, align 16, !dbg !12140
  call void @llvm.dbg.value(metadata i8** %1, metadata !12121, metadata !DIExpression()), !dbg !12135
  %call2 = tail call %union.tree_node* @resolve_asm_operand_names(%union.tree_node* %string, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %labels) #6, !dbg !12141
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !12111, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata i32 0, metadata !12119, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs, metadata !12117, metadata !DIExpression()), !dbg !12135
  br label %for.cond, !dbg !12142

for.cond:                                         ; preds = %if.end56, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end56 ], [ 0, %entry ], !dbg !12143
  %tail.0 = phi %union.tree_node* [ %17, %if.end56 ], [ %outputs, %entry ], !dbg !12143
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !12119, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.0, metadata !12117, metadata !DIExpression()), !dbg !12135
  %tobool = icmp eq %union.tree_node* %tail.0, null, !dbg !12144
  br i1 %tobool, label %for.cond60.preheader, label %for.body, !dbg !12144

for.cond60.preheader:                             ; preds = %for.cond
  br label %for.cond60, !dbg !12145

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12146
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !12146
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !12127, metadata !DIExpression()), !dbg !12147
  %call3 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %3) #6, !dbg !12148
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !12127, metadata !DIExpression()), !dbg !12147
  %call4 = call fastcc i32 @lvalue_or_else(%union.tree_node* %call3, i32 4) #7, !dbg !12149
  %tobool5 = icmp eq i32 %call4, 0, !dbg !12149
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12151
  %spec.select = select i1 %tobool5, %union.tree_node* %4, %union.tree_node* %call3, !dbg !12152
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !12127, metadata !DIExpression()), !dbg !12147
  %cmp = icmp eq %union.tree_node* %spec.select, %4, !dbg !12153
  br i1 %cmp, label %if.end42, label %land.lhs.true, !dbg !12155

land.lhs.true:                                    ; preds = %for.body
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12156
  %bf.load = load i64, i64* %5, align 8, !dbg !12156
  %bf.cast3 = and i64 %bf.load, 1048576, !dbg !12156
  %tobool7 = icmp eq i64 %bf.cast3, 0, !dbg !12156
  br i1 %tobool7, label %lor.lhs.false, label %if.then41, !dbg !12157

lor.lhs.false:                                    ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12158
  %6 = bitcast %union.tree_node** %type to i64**, !dbg !12158
  %7 = load i64*, i64** %6, align 8, !dbg !12158
  %bf.load9 = load i64, i64* %7, align 8, !dbg !12158
  %bf.cast124 = and i64 %bf.load9, 1048576, !dbg !12158
  %tobool13 = icmp eq i64 %bf.cast124, 0, !dbg !12158
  br i1 %tobool13, label %lor.lhs.false14, label %if.then41, !dbg !12159

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %bf.cast205 = and i64 %bf.load9, 65535, !dbg !12160
  %cmp21 = icmp eq i64 %bf.cast205, 16, !dbg !12160
  br i1 %cmp21, label %land.lhs.true32, label %lor.lhs.false23, !dbg !12161

lor.lhs.false23:                                  ; preds = %lor.lhs.false14
  %cmp30 = icmp eq i64 %bf.cast205, 17, !dbg !12162
  br i1 %cmp30, label %land.lhs.true32, label %if.end42, !dbg !12163

land.lhs.true32:                                  ; preds = %lor.lhs.false23, %lor.lhs.false14
  %bf.cast397 = and i64 %bf.load9, 17179869184, !dbg !12164
  %tobool40 = icmp eq i64 %bf.cast397, 0, !dbg !12164
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !12165

if.then41:                                        ; preds = %land.lhs.true32, %lor.lhs.false, %land.lhs.true
  call fastcc void @readonly_error(%union.tree_node* %spec.select, i32 4) #7, !dbg !12166
  br label %if.end42, !dbg !12166

if.end42:                                         ; preds = %land.lhs.true32, %for.body, %if.then41, %lor.lhs.false23
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12167
  %8 = bitcast i32* %purpose to %struct.tree_list**, !dbg !12167
  %9 = load %struct.tree_list*, %struct.tree_list** %8, align 8, !dbg !12167
  %value45 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %9, i64 0, i32 2, !dbg !12167
  %10 = bitcast %union.tree_node** %value45 to %struct.tree_string**, !dbg !12167
  %11 = load %struct.tree_string*, %struct.tree_string** %10, align 8, !dbg !12167
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %11, i64 0, i32 2, i64 0, !dbg !12167
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !12120, metadata !DIExpression()), !dbg !12135
  store i8* %arraydecay, i8** %constraint, align 8, !dbg !12168
  %.cast = ptrtoint i8* %arraydecay to i64, !dbg !12169
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %indvars.iv, !dbg !12170
  %12 = bitcast i8** %arrayidx to i64*, !dbg !12171
  store i64 %.cast, i64* %12, align 8, !dbg !12171
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !12120, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !12122, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !12123, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !12124, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  %13 = trunc i64 %indvars.iv to i32, !dbg !12172
  %call47 = call zeroext i8 @parse_output_constraint(i8** nonnull %constraint, i32 %13, i32 %call, i32 %call1, i8* nonnull %allows_mem, i8* nonnull %allows_reg, i8* nonnull %is_inout) #6, !dbg !12172
  %tobool48 = icmp eq i8 %call47, 0, !dbg !12172
  br i1 %tobool48, label %if.else, label %if.then49, !dbg !12174

if.then49:                                        ; preds = %if.end42
  %14 = load i8, i8* %allows_reg, align 1, !dbg !12175
  call void @llvm.dbg.value(metadata i8 %14, metadata !12123, metadata !DIExpression()), !dbg !12135
  %tobool50 = icmp eq i8 %14, 0, !dbg !12175
  br i1 %tobool50, label %land.lhs.true51, label %if.end56, !dbg !12178

land.lhs.true51:                                  ; preds = %if.then49
  %call52 = call zeroext i8 @c_mark_addressable(%union.tree_node* %spec.select) #7, !dbg !12179
  %tobool53 = icmp eq i8 %call52, 0, !dbg !12179
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12180
  %spec.select1 = select i1 %tobool53, %union.tree_node* %15, %union.tree_node* %spec.select, !dbg !12181
  br label %if.end56, !dbg !12181

if.else:                                          ; preds = %if.end42
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12182
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !12127, metadata !DIExpression()), !dbg !12147
  br label %if.end56

if.end56:                                         ; preds = %if.then49, %land.lhs.true51, %if.else
  %output.2 = phi %union.tree_node* [ %16, %if.else ], [ %spec.select, %if.then49 ], [ %spec.select1, %land.lhs.true51 ], !dbg !12147
  call void @llvm.dbg.value(metadata %union.tree_node* %output.2, metadata !12127, metadata !DIExpression()), !dbg !12147
  store %union.tree_node* %output.2, %union.tree_node** %2, align 8, !dbg !12183
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !12184
  call void @llvm.dbg.value(metadata i32 undef, metadata !12119, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12135
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12185
  %17 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !12185
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !12117, metadata !DIExpression()), !dbg !12135
  br label %for.cond, !dbg !12186, !llvm.loop !12187

for.cond60:                                       ; preds = %for.cond60.preheader, %if.end87
  %tail.1 = phi %union.tree_node* [ %28, %if.end87 ], [ %inputs, %for.cond60.preheader ], !dbg !12189
  %i.1 = phi i32 [ %inc91, %if.end87 ], [ 0, %for.cond60.preheader ], !dbg !12189
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !12119, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata %union.tree_node* %tail.1, metadata !12117, metadata !DIExpression()), !dbg !12135
  %tobool61 = icmp eq %union.tree_node* %tail.1, null, !dbg !12145
  br i1 %tobool61, label %for.end94, label %for.body62, !dbg !12145

for.body62:                                       ; preds = %for.cond60
  %purpose64 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12190
  %18 = bitcast i32* %purpose64 to %struct.tree_list**, !dbg !12190
  %19 = load %struct.tree_list*, %struct.tree_list** %18, align 8, !dbg !12190
  %value66 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %19, i64 0, i32 2, !dbg !12190
  %20 = bitcast %union.tree_node** %value66 to %struct.tree_string**, !dbg !12190
  %21 = load %struct.tree_string*, %struct.tree_string** %20, align 8, !dbg !12190
  %arraydecay69 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %21, i64 0, i32 2, i64 0, !dbg !12190
  call void @llvm.dbg.value(metadata i8* %arraydecay69, metadata !12120, metadata !DIExpression()), !dbg !12135
  store i8* %arraydecay69, i8** %constraint, align 8, !dbg !12191
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12192
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !12192
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !12131, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata i8** %constraint, metadata !12120, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !12122, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !12123, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  %call72 = call zeroext i8 @parse_input_constraint(i8** nonnull %constraint, i32 %i.1, i32 %call, i32 %call1, i32 0, i8** nonnull %1, i8* nonnull %allows_mem, i8* nonnull %allows_reg) #6, !dbg !12194
  %tobool73 = icmp eq i8 %call72, 0, !dbg !12194
  br i1 %tobool73, label %if.else86, label %if.then74, !dbg !12196

if.then74:                                        ; preds = %for.body62
  %24 = load i8, i8* %allows_reg, align 1, !dbg !12197
  call void @llvm.dbg.value(metadata i8 %24, metadata !12123, metadata !DIExpression()), !dbg !12135
  %tobool75 = icmp eq i8 %24, 0, !dbg !12197
  br i1 %tobool75, label %land.lhs.true76, label %if.end87, !dbg !12200

land.lhs.true76:                                  ; preds = %if.then74
  %25 = load i8, i8* %allows_mem, align 1, !dbg !12201
  call void @llvm.dbg.value(metadata i8 %25, metadata !12122, metadata !DIExpression()), !dbg !12135
  %tobool78 = icmp eq i8 %25, 0, !dbg !12201
  br i1 %tobool78, label %if.end87, label %if.then79, !dbg !12202

if.then79:                                        ; preds = %land.lhs.true76
  %call80 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %23) #6, !dbg !12203
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !12131, metadata !DIExpression()), !dbg !12193
  %call81 = call zeroext i8 @c_mark_addressable(%union.tree_node* %call80) #7, !dbg !12205
  %tobool82 = icmp eq i8 %call81, 0, !dbg !12205
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12207
  %spec.select2 = select i1 %tobool82, %union.tree_node* %26, %union.tree_node* %call80, !dbg !12208
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select2, metadata !12131, metadata !DIExpression()), !dbg !12193
  br label %if.end87, !dbg !12209

if.else86:                                        ; preds = %for.body62
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12210
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !12131, metadata !DIExpression()), !dbg !12193
  br label %if.end87

if.end87:                                         ; preds = %land.lhs.true76, %if.then74, %if.then79, %if.else86
  %input.2 = phi %union.tree_node* [ %27, %if.else86 ], [ %23, %if.then74 ], [ %spec.select2, %if.then79 ], [ %23, %land.lhs.true76 ], !dbg !12193
  call void @llvm.dbg.value(metadata %union.tree_node* %input.2, metadata !12131, metadata !DIExpression()), !dbg !12193
  store %union.tree_node* %input.2, %union.tree_node** %22, align 8, !dbg !12211
  %inc91 = add nuw nsw i32 %i.1, 1, !dbg !12212
  call void @llvm.dbg.value(metadata i32 %inc91, metadata !12119, metadata !DIExpression()), !dbg !12135
  %chain93 = getelementptr inbounds %union.tree_node, %union.tree_node* %tail.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12213
  %28 = load %union.tree_node*, %union.tree_node** %chain93, align 8, !dbg !12213
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !12117, metadata !DIExpression()), !dbg !12135
  br label %for.cond60, !dbg !12214, !llvm.loop !12215

for.end94:                                        ; preds = %for.cond60
  %cmp95 = icmp eq %union.tree_node* %outputs, null, !dbg !12217
  %cmp98 = icmp eq %union.tree_node* %labels, null, !dbg !12217
  %or.cond = or i1 %cmp95, %cmp98, !dbg !12217
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !12217

cond.true:                                        ; preds = %for.end94
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 8245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !12217
  br label %cond.end, !dbg !12217

cond.end:                                         ; preds = %for.end94, %cond.true
  %call100 = call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %loc, i32 140, %union.tree_node* %call2, %union.tree_node* %outputs, %union.tree_node* %inputs, %union.tree_node* %clobbers, %union.tree_node* %labels) #6, !dbg !12218
  call void @llvm.dbg.value(metadata %union.tree_node* %call100, metadata !12118, metadata !DIExpression()), !dbg !12135
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12219
  %bf.load103 = load i64, i64* %29, align 8, !dbg !12220
  %30 = and i8 %simple, 1, !dbg !12220
  %bf.value = zext i8 %30 to i64, !dbg !12220
  %bf.shl = shl nuw nsw i64 %bf.value, 26, !dbg !12220
  %bf.clear104 = and i64 %bf.load103, -201326593, !dbg !12220
  %bf.set = or i64 %bf.clear104, %bf.shl, !dbg !12220
  %cmp105 = icmp eq i32 %call1, 0, !dbg !12221
  %31 = zext i1 %cmp105 to i64, !dbg !12222
  %bf.shl110 = shl nuw nsw i64 %31, 27, !dbg !12222
  %bf.set112 = or i64 %bf.set, %bf.shl110, !dbg !12222
  store i64 %bf.set112, i64* %29, align 8, !dbg !12222
  call void @llvm.dbg.value(metadata i8* %is_inout, metadata !12124, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %is_inout) #8, !dbg !12223
  call void @llvm.dbg.value(metadata i8* %allows_reg, metadata !12123, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_reg) #8, !dbg !12223
  call void @llvm.dbg.value(metadata i8* %allows_mem, metadata !12122, metadata !DIExpression(DW_OP_deref)), !dbg !12135
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %allows_mem) #8, !dbg !12223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !12223
  ret %union.tree_node* %call100, !dbg !12224
}

declare dso_local %union.tree_node* @resolve_asm_operand_names(%union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @parse_output_constraint(i8**, i32, i32, i32, i8*, i8*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @parse_input_constraint(i8**, i32, i32, i32, i32, i8**, i8*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_stmt(i32, i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_goto_label(i32 %loc, %union.tree_node* %label) local_unnamed_addr #5 !dbg !12225 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12227, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !12228, metadata !DIExpression()), !dbg !12232
  %call = tail call %union.tree_node* @lookup_label_for_goto(i32 %loc, %union.tree_node* %label) #6, !dbg !12233
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12229, metadata !DIExpression()), !dbg !12232
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !12234
  br i1 %tobool, label %cleanup, label %if.end, !dbg !12236

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12237
  %bf.load = load i64, i64* %0, align 8, !dbg !12238
  %bf.set = or i64 %bf.load, 16777216, !dbg !12238
  store i64 %bf.set, i64* %0, align 8, !dbg !12238
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12239
  %call1 = tail call %union.tree_node* @build1_stat(i32 134, %union.tree_node* %1, %union.tree_node* nonnull %call) #6, !dbg !12239
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !12230, metadata !DIExpression()), !dbg !12240
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12241
  store i32 %loc, i32* %2, align 8, !dbg !12241
  %call2 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call1) #6, !dbg !12242
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call2, %if.end ], [ null, %entry ], !dbg !12232
  ret %union.tree_node* %retval.0, !dbg !12243
}

declare dso_local %union.tree_node* @lookup_label_for_goto(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_goto_ptr(i32 %loc, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !12244 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12246, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !12247, metadata !DIExpression()), !dbg !12249
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i64 0, i64 0)) #6, !dbg !12250
  %call1 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %expr, i8 zeroext 0, i8* null) #6, !dbg !12251
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !12247, metadata !DIExpression()), !dbg !12249
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !12252
  %call2 = tail call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call1) #6, !dbg !12253
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !12247, metadata !DIExpression()), !dbg !12249
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12254
  %call3 = tail call %union.tree_node* @build1_stat(i32 134, %union.tree_node* %1, %union.tree_node* %call2) #6, !dbg !12254
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !12248, metadata !DIExpression()), !dbg !12249
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12255
  store i32 %loc, i32* %2, align 8, !dbg !12255
  %call4 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call3) #6, !dbg !12256
  ret %union.tree_node* %call4, !dbg !12257
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_return(i32 %loc, %union.tree_node* %retval1, %union.tree_node* %origtype) local_unnamed_addr #5 !dbg !12258 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12260, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.value(metadata %union.tree_node* %retval1, metadata !12261, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype, metadata !12262, metadata !DIExpression()), !dbg !12280
  %0 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !12281
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %0, i64 0, i32 2, !dbg !12281
  %1 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !12281
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !12281
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !12281
  %3 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !12281
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !12263, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.value(metadata i8 0, metadata !12265, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.value(metadata i8 0, metadata !12266, metadata !DIExpression()), !dbg !12280
  %.cast = getelementptr inbounds %struct.tree_common, %struct.tree_common* %0, i64 0, i32 0, i32 0, !dbg !12282
  %bf.load = load i64, i64* %.cast, align 8, !dbg !12282
  %bf.cast5 = and i64 %bf.load, 524288, !dbg !12282
  %tobool = icmp eq i64 %bf.cast5, 0, !dbg !12282
  br i1 %tobool, label %if.end, label %if.then, !dbg !12284

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.111, i64 0, i64 0)) #6, !dbg !12285
  br label %if.end, !dbg !12285

if.end:                                           ; preds = %entry, %if.then
  %tobool4 = icmp eq %union.tree_node* %retval1, null, !dbg !12286
  br i1 %tobool4, label %if.end20, label %if.then5, !dbg !12287

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !12267, metadata !DIExpression()), !dbg !12288
  %call6 = tail call fastcc zeroext i8 @null_pointer_constant_p(%union.tree_node* nonnull %retval1) #7, !dbg !12289
  call void @llvm.dbg.value(metadata i8 %call6, metadata !12266, metadata !DIExpression()), !dbg !12280
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %retval1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12290
  %bf.load8 = load i64, i64* %4, align 8, !dbg !12290
  %bf.cast1019 = and i64 %bf.load8, 65535, !dbg !12292
  %cmp = icmp eq i64 %bf.cast1019, 190, !dbg !12292
  br i1 %cmp, label %if.then11, label %if.end14, !dbg !12293

if.then11:                                        ; preds = %if.then5
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %retval1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12294
  %5 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !12294
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !12267, metadata !DIExpression()), !dbg !12288
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %retval1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12296
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !12296
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !12261, metadata !DIExpression()), !dbg !12280
  br label %if.end14, !dbg !12297

if.end14:                                         ; preds = %if.then11, %if.then5
  %semantic_type.0 = phi %union.tree_node* [ %5, %if.then11 ], [ null, %if.then5 ], !dbg !12288
  %retval.addr.0 = phi %union.tree_node* [ %6, %if.then11 ], [ %retval1, %if.then5 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %retval.addr.0, metadata !12261, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.value(metadata %union.tree_node* %semantic_type.0, metadata !12267, metadata !DIExpression()), !dbg !12288
  %call15 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* %retval.addr.0, i8 zeroext 0, i8* null) #6, !dbg !12298
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !12261, metadata !DIExpression()), !dbg !12280
  %tobool16 = icmp eq %union.tree_node* %semantic_type.0, null, !dbg !12299
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !12301

if.then17:                                        ; preds = %if.end14
  %call18 = tail call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %semantic_type.0, %union.tree_node* %call15) #6, !dbg !12302
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !12261, metadata !DIExpression()), !dbg !12280
  br label %if.end20, !dbg !12303

if.end20:                                         ; preds = %if.end14, %if.end, %if.then17
  %npc.0 = phi i8 [ 0, %if.end ], [ %call6, %if.then17 ], [ %call6, %if.end14 ], !dbg !12280
  %retval.addr.2 = phi %union.tree_node* [ null, %if.end ], [ %call18, %if.then17 ], [ %call15, %if.end14 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %retval.addr.2, metadata !12261, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.value(metadata i8 %npc.0, metadata !12266, metadata !DIExpression()), !dbg !12280
  %tobool21 = icmp eq %union.tree_node* %retval.addr.2, null, !dbg !12304
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !12305

if.then22:                                        ; preds = %if.end20
  store i32 1, i32* @current_function_returns_null, align 4, !dbg !12306
  %7 = load i32, i32* @warn_return_type, align 4, !dbg !12308
  %8 = load i32, i32* @flag_isoc99, align 4, !dbg !12310
  %9 = or i32 %7, %8, !dbg !12311
  %10 = icmp ne i32 %9, 0, !dbg !12311
  %cmp25 = icmp ne %union.tree_node* %3, null, !dbg !12312
  %or.cond2 = and i1 %10, %cmp25, !dbg !12311
  br i1 %or.cond2, label %land.lhs.true26, label %if.end191, !dbg !12311

land.lhs.true26:                                  ; preds = %if.then22
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12313
  %bf.load28 = load i64, i64* %11, align 8, !dbg !12313
  %bf.cast306 = and i64 %bf.load28, 65535, !dbg !12314
  %cmp31 = icmp eq i64 %bf.cast306, 19, !dbg !12314
  br i1 %cmp31, label %if.end191, label %if.then32, !dbg !12315

if.then32:                                        ; preds = %land.lhs.true26
  %tobool33 = icmp eq i32 %8, 0, !dbg !12316
  %cond = select i1 %tobool33, i32 172, i32 0, !dbg !12316
  tail call void (i32, i32, i8*, ...) @pedwarn_c99(i32 %loc, i32 %cond, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.112, i64 0, i64 0)) #6, !dbg !12318
  call void @llvm.dbg.value(metadata i8 1, metadata !12265, metadata !DIExpression()), !dbg !12280
  br label %if.end191, !dbg !12319

if.else:                                          ; preds = %if.end20
  %cmp35 = icmp eq %union.tree_node* %3, null, !dbg !12320
  br i1 %cmp35, label %if.then42, label %lor.lhs.false36, !dbg !12321

lor.lhs.false36:                                  ; preds = %if.else
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12322
  %bf.load38 = load i64, i64* %12, align 8, !dbg !12322
  %bf.cast407 = and i64 %bf.load38, 65535, !dbg !12323
  %cmp41 = icmp eq i64 %bf.cast407, 19, !dbg !12323
  br i1 %cmp41, label %if.then42, label %if.else55, !dbg !12324

if.then42:                                        ; preds = %lor.lhs.false36, %if.else
  store i32 1, i32* @current_function_returns_null, align 4, !dbg !12325
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %retval.addr.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12327
  %13 = bitcast %union.tree_node** %type44 to i64**, !dbg !12327
  %14 = load i64*, i64** %13, align 8, !dbg !12327
  %bf.load46 = load i64, i64* %14, align 8, !dbg !12327
  %bf.cast4818 = and i64 %bf.load46, 65535, !dbg !12329
  %cmp49 = icmp eq i64 %bf.cast4818, 19, !dbg !12329
  br i1 %cmp49, label %if.else52, label %if.then50, !dbg !12330

if.then50:                                        ; preds = %if.then42
  %call51 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.113, i64 0, i64 0)) #6, !dbg !12331
  br label %if.end191, !dbg !12331

if.else52:                                        ; preds = %if.then42
  %call53 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 834, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.114, i64 0, i64 0)) #6, !dbg !12332
  br label %if.end191

if.else55:                                        ; preds = %lor.lhs.false36
  %call56 = tail call fastcc %union.tree_node* @convert_for_assignment(i32 %loc, %union.tree_node* nonnull %3, %union.tree_node* nonnull %retval.addr.2, %union.tree_node* %origtype, i32 3, i8 zeroext %npc.0, %union.tree_node* null, %union.tree_node* null, i32 0) #7, !dbg !12333
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !12270, metadata !DIExpression()), !dbg !12334
  %15 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !12335
  %result = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %15, i64 0, i32 3, !dbg !12335
  %16 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !12335
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !12274, metadata !DIExpression()), !dbg !12334
  store i32 1, i32* @current_function_returns_value, align 4, !dbg !12336
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12337
  %cmp57 = icmp eq %union.tree_node* %call56, %17, !dbg !12339
  br i1 %cmp57, label %cleanup186, label %if.end59, !dbg !12340

if.end59:                                         ; preds = %if.else55
  %type61 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12341
  %18 = load %union.tree_node*, %union.tree_node** %type61, align 8, !dbg !12341
  %call62 = tail call %union.tree_node* @convert(%union.tree_node* %18, %union.tree_node* %call56) #6, !dbg !12342
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !12270, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !12275, metadata !DIExpression()), !dbg !12334
  br label %while.cond, !dbg !12343

while.cond:                                       ; preds = %while.cond.backedge, %if.end59
  %inner.0 = phi %union.tree_node* [ %call62, %if.end59 ], [ %inner.0.be, %while.cond.backedge ], !dbg !12334
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !12275, metadata !DIExpression()), !dbg !12334
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12344
  %bf.load64 = load i64, i64* %19, align 8, !dbg !12344
  %20 = trunc i64 %bf.load64 to i16, !dbg !12344
  switch i16 %20, label %while.end178.loopexit [
    i16 116, label %sw.bb
    i16 113, label %sw.bb
    i16 117, label %sw.bb
    i16 63, label %sw.bb
    i16 66, label %sw.bb
    i16 64, label %sw.bb70
    i16 121, label %sw.bb130
  ], !dbg !12345

sw.bb:                                            ; preds = %while.cond, %while.cond, %while.cond, %while.cond, %while.cond
  %operands68 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12346
  %21 = load %union.tree_node*, %union.tree_node** %operands68, align 8, !dbg !12346
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !12275, metadata !DIExpression()), !dbg !12334
  br label %while.cond.backedge, !dbg !12347

while.cond.backedge:                              ; preds = %sw.bb, %cleanup
  %inner.0.be = phi %union.tree_node* [ %inner.1, %cleanup ], [ %21, %sw.bb ]
  br label %while.cond, !dbg !12334, !llvm.loop !12348

sw.bb70:                                          ; preds = %while.cond
  %operands72 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12350
  %arrayidx73 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands72, i64 1, !dbg !12350
  br label %while.cond74, !dbg !12351

while.cond74:                                     ; preds = %while.body106, %sw.bb70
  %op1.0.in = phi %union.tree_node** [ %arrayidx73, %sw.bb70 ], [ %operands108, %while.body106 ]
  %op1.0 = load %union.tree_node*, %union.tree_node** %op1.0.in, align 8, !dbg !12352
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !12276, metadata !DIExpression()), !dbg !12352
  %type76 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12353
  %22 = bitcast %union.tree_node** %type76 to i64**, !dbg !12353
  %23 = load i64*, i64** %22, align 8, !dbg !12353
  %bf.load78 = load i64, i64* %23, align 8, !dbg !12353
  %bf.cast8011 = and i64 %bf.load78, 65535, !dbg !12353
  %cmp81 = icmp eq i64 %bf.cast8011, 10, !dbg !12353
  %cmp89 = icmp eq i64 %bf.cast8011, 12, !dbg !12353
  %or.cond21 = or i1 %cmp81, %cmp89, !dbg !12353
  br i1 %or.cond21, label %while.end, label %land.rhs, !dbg !12353

land.rhs:                                         ; preds = %while.cond74
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12354
  %bf.load91 = load i64, i64* %24, align 8, !dbg !12354
  %bf.cast9313 = and i64 %bf.load91, 65535, !dbg !12354
  %cmp94 = icmp eq i64 %bf.cast9313, 116, !dbg !12354
  br i1 %cmp94, label %while.body106, label %lor.lhs.false95, !dbg !12354

lor.lhs.false95:                                  ; preds = %land.rhs
  %25 = or i64 %bf.cast9313, 4, !dbg !12355
  %26 = icmp eq i64 %25, 117, !dbg !12355
  br i1 %26, label %while.body106, label %while.end, !dbg !12355

while.body106:                                    ; preds = %land.rhs, %lor.lhs.false95
  %operands108 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12356
  br label %while.cond74, !dbg !12351, !llvm.loop !12357

while.end:                                        ; preds = %lor.lhs.false95, %while.cond74
  %bf.cast8011.lcssa = phi i64 [ %bf.cast8011, %lor.lhs.false95 ], [ %bf.cast8011, %while.cond74 ], !dbg !12353
  %cmp81.lcssa = phi i1 [ %cmp81, %lor.lhs.false95 ], [ %cmp81, %while.cond74 ], !dbg !12353
  br i1 %cmp81.lcssa, label %cleanup, label %lor.lhs.false117, !dbg !12358

lor.lhs.false117:                                 ; preds = %while.end
  %cmp124 = icmp eq i64 %bf.cast8011.lcssa, 12, !dbg !12358
  br i1 %cmp124, label %cleanup, label %if.end126, !dbg !12360

if.end126:                                        ; preds = %lor.lhs.false117
  %27 = load %union.tree_node*, %union.tree_node** %operands72, align 8, !dbg !12361
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !12275, metadata !DIExpression()), !dbg !12334
  br label %cleanup, !dbg !12362, !llvm.loop !12348

cleanup:                                          ; preds = %while.end, %lor.lhs.false117, %if.end126
  %inner.1 = phi %union.tree_node* [ %27, %if.end126 ], [ %inner.0, %lor.lhs.false117 ], [ %inner.0, %while.end ], !dbg !12334
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end126 ], [ true, %lor.lhs.false117 ], [ true, %while.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1, metadata !12275, metadata !DIExpression()), !dbg !12334
  br i1 %cleanup.dest.slot.0, label %while.end178.loopexit, label %while.cond.backedge

sw.bb130:                                         ; preds = %while.cond
  %inner.0.lcssa24 = phi %union.tree_node* [ %inner.0, %while.cond ], !dbg !12334
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa24, metadata !12275, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa24, metadata !12275, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa24, metadata !12275, metadata !DIExpression()), !dbg !12334
  br label %while.cond134, !dbg !12363

while.cond134:                                    ; preds = %while.body148, %sw.bb130
  %inner.0.pn = phi %union.tree_node* [ %inner.0.lcssa24, %sw.bb130 ], [ %inner.2, %while.body148 ]
  %inner.2.in = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12364
  %inner.2 = load %union.tree_node*, %union.tree_node** %inner.2.in, align 8, !dbg !12364
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.2, metadata !12275, metadata !DIExpression()), !dbg !12334
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12365
  %bf.load136 = load i64, i64* %28, align 8, !dbg !12365
  %bf.cast138 = and i64 %bf.load136, 65535, !dbg !12365
  %arrayidx139 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast138, !dbg !12365
  %29 = load i32, i32* %arrayidx139, align 4, !dbg !12365
  %cmp140 = icmp ne i32 %29, 4, !dbg !12365
  %cmp146 = icmp eq i64 %bf.cast138, 47, !dbg !12366
  %or.cond = or i1 %cmp140, %cmp146, !dbg !12367
  br i1 %or.cond, label %while.end152, label %while.body148, !dbg !12367

while.body148:                                    ; preds = %while.cond134
  br label %while.cond134, !dbg !12363, !llvm.loop !12368

while.end152:                                     ; preds = %while.cond134
  %inner.2.lcssa = phi %union.tree_node* [ %inner.2, %while.cond134 ], !dbg !12364
  %bf.load136.lcssa = phi i64 [ %bf.load136, %while.cond134 ], !dbg !12365
  %.lcssa = phi i32 [ %29, %while.cond134 ], !dbg !12365
  %cmp159 = icmp eq i32 %.lcssa, 3, !dbg !12370
  br i1 %cmp159, label %land.lhs.true160, label %while.end178, !dbg !12372

land.lhs.true160:                                 ; preds = %while.end152
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12373
  %30 = bitcast i40* %decl_flag_1 to i64*, !dbg !12373
  %bf.load161 = load i64, i64* %30, align 8, !dbg !12373
  %bf.cast1648 = and i64 %bf.load161, 33554432, !dbg !12373
  %tobool165 = icmp eq i64 %bf.cast1648, 0, !dbg !12373
  br i1 %tobool165, label %land.lhs.true166, label %while.end178, !dbg !12374

land.lhs.true166:                                 ; preds = %land.lhs.true160
  %bf.cast1719 = and i64 %bf.load136.lcssa, 67108864, !dbg !12375
  %tobool172 = icmp eq i64 %bf.cast1719, 0, !dbg !12375
  br i1 %tobool172, label %land.lhs.true173, label %while.end178, !dbg !12376

land.lhs.true173:                                 ; preds = %land.lhs.true166
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12377
  %31 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !12377
  %32 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !12378
  %cmp174 = icmp eq %union.tree_node* %31, %32, !dbg !12379
  br i1 %cmp174, label %if.then175, label %while.end178, !dbg !12380

if.then175:                                       ; preds = %land.lhs.true173
  %call176 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.115, i64 0, i64 0)) #6, !dbg !12381
  br label %while.end178, !dbg !12381

while.end178.loopexit:                            ; preds = %while.cond, %cleanup
  br label %while.end178, !dbg !12382

while.end178:                                     ; preds = %while.end178.loopexit, %land.lhs.true166, %land.lhs.true160, %if.then175, %land.lhs.true173, %while.end152
  %33 = load %union.tree_node*, %union.tree_node** %type61, align 8, !dbg !12382
  %call181 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %33, %union.tree_node* %16, %union.tree_node* %call62) #6, !dbg !12382
  call void @llvm.dbg.value(metadata %union.tree_node* %call181, metadata !12261, metadata !DIExpression()), !dbg !12280
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12383
  store i32 %loc, i32* %34, align 8, !dbg !12383
  %35 = load i32, i32* @warn_sequence_point, align 4, !dbg !12384
  %tobool183 = icmp eq i32 %35, 0, !dbg !12384
  br i1 %tobool183, label %cleanup186, label %if.then184, !dbg !12386

if.then184:                                       ; preds = %while.end178
  tail call void @verify_sequence_points(%union.tree_node* %call181) #6, !dbg !12387
  br label %cleanup186, !dbg !12387

cleanup186:                                       ; preds = %while.end178, %if.then184, %if.else55
  %cleanup.dest.slot.1 = phi i1 [ false, %if.else55 ], [ true, %if.then184 ], [ true, %while.end178 ]
  %retval.addr.3 = phi %union.tree_node* [ %retval.addr.2, %if.else55 ], [ %call181, %if.then184 ], [ %call181, %while.end178 ], !dbg !12280
  call void @llvm.dbg.value(metadata %union.tree_node* %retval.addr.3, metadata !12261, metadata !DIExpression()), !dbg !12280
  br i1 %cleanup.dest.slot.1, label %if.end191, label %cleanup201

if.end191:                                        ; preds = %land.lhs.true26, %if.else52, %if.then50, %cleanup186, %if.then32, %if.then22
  %no_warning.1 = phi i64 [ 8388608, %if.then32 ], [ 0, %land.lhs.true26 ], [ 0, %if.then22 ], [ 0, %cleanup186 ], [ 0, %if.then50 ], [ 0, %if.else52 ]
  %retval.addr.5 = phi %union.tree_node* [ null, %if.then32 ], [ null, %land.lhs.true26 ], [ null, %if.then22 ], [ %retval.addr.3, %cleanup186 ], [ %retval.addr.2, %if.then50 ], [ %retval.addr.2, %if.else52 ], !dbg !12388
  call void @llvm.dbg.value(metadata %union.tree_node* %retval.addr.5, metadata !12261, metadata !DIExpression()), !dbg !12280
  %call192 = tail call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %loc, i32 135, %union.tree_node* %retval.addr.5) #6, !dbg !12389
  call void @llvm.dbg.value(metadata %union.tree_node* %call192, metadata !12264, metadata !DIExpression()), !dbg !12280
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %call192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12390
  %bf.load194 = load i64, i64* %36, align 8, !dbg !12391
  %bf.lshr195.masked = and i64 %bf.load194, 8388608, !dbg !12391
  %bf.value = or i64 %bf.lshr195.masked, %no_warning.1, !dbg !12391
  %bf.clear199 = and i64 %bf.load194, -8388609, !dbg !12391
  %bf.set = or i64 %bf.clear199, %bf.value, !dbg !12391
  store i64 %bf.set, i64* %36, align 8, !dbg !12391
  %call200 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call192) #6, !dbg !12392
  br label %cleanup201, !dbg !12393

cleanup201:                                       ; preds = %cleanup186, %if.end191
  %retval.1 = phi %union.tree_node* [ %call200, %if.end191 ], [ null, %cleanup186 ], !dbg !12280
  ret %union.tree_node* %retval.1, !dbg !12394
}

declare dso_local void @pedwarn_c99(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @verify_sequence_points(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_start_case(i32 %switch_loc, i32 %switch_cond_loc, %union.tree_node* %exp) local_unnamed_addr #5 !dbg !12395 {
entry:
  %tmp = alloca %struct.expanded_location, align 8
  call void @llvm.dbg.value(metadata i32 %switch_loc, metadata !12399, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata i32 %switch_cond_loc, metadata !12400, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !12401, metadata !DIExpression()), !dbg !12409
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12410
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12402, metadata !DIExpression()), !dbg !12409
  %cmp = icmp eq %union.tree_node* %0, %exp, !dbg !12411
  br i1 %cmp, label %if.end32, label %if.then, !dbg !12412

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12413
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !12413
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !12402, metadata !DIExpression()), !dbg !12409
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12414
  %bf.load = load i64, i64* %2, align 8, !dbg !12414
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12414
  %cmp1 = icmp eq i64 %bf.cast1, 6, !dbg !12414
  br i1 %cmp1, label %if.else, label %lor.lhs.false, !dbg !12414

lor.lhs.false:                                    ; preds = %if.then
  %cmp6 = icmp eq i64 %bf.cast1, 7, !dbg !12414
  br i1 %cmp6, label %if.else, label %lor.lhs.false7, !dbg !12414

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i64 %bf.cast1, 8, !dbg !12414
  br i1 %cmp12, label %if.else, label %if.then13, !dbg !12415

if.then13:                                        ; preds = %lor.lhs.false7
  %cmp14 = icmp eq %union.tree_node* %1, %0, !dbg !12416
  br i1 %cmp14, label %if.end, label %if.then15, !dbg !12419

if.then15:                                        ; preds = %if.then13
  tail call void (i32, i8*, ...) @error_at(i32 %switch_cond_loc, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.116, i64 0, i64 0)) #6, !dbg !12420
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12422
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !12402, metadata !DIExpression()), !dbg !12409
  br label %if.end, !dbg !12423

if.end:                                           ; preds = %if.then13, %if.then15
  %orig_type.0 = phi %union.tree_node* [ %3, %if.then15 ], [ %0, %if.then13 ], !dbg !12424
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type.0, metadata !12402, metadata !DIExpression()), !dbg !12409
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !12425
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !12401, metadata !DIExpression()), !dbg !12409
  br label %if.end32, !dbg !12426

if.else:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %if.then
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !12427
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !12427
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !12404, metadata !DIExpression()), !dbg !12428
  %7 = load i32, i32* @input_location, align 4, !dbg !12429
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %7) #6, !dbg !12429
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 3, !dbg !12429
  %8 = load i8, i8* %sysp, align 8, !dbg !12429
  %cmp18 = icmp eq i8 %8, 0, !dbg !12429
  br i1 %cmp18, label %land.lhs.true, label %if.end26, !dbg !12431

land.lhs.true:                                    ; preds = %if.else
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !dbg !12432
  %cmp20 = icmp eq %union.tree_node* %6, %9, !dbg !12433
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 16, !dbg !12434
  %cmp23 = icmp eq %union.tree_node* %6, %10, !dbg !12435
  %or.cond = or i1 %cmp20, %cmp23, !dbg !12436
  br i1 %or.cond, label %if.then25, label %if.end26, !dbg !12436

if.then25:                                        ; preds = %land.lhs.true
  %call = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %switch_cond_loc, i32 202, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.117, i64 0, i64 0)) #6, !dbg !12437
  br label %if.end26, !dbg !12437

if.end26:                                         ; preds = %if.else, %land.lhs.true, %if.then25
  %call27 = call %union.tree_node* @c_fully_fold(%union.tree_node* %exp, i8 zeroext 0, i8* null) #6, !dbg !12438
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !12401, metadata !DIExpression()), !dbg !12409
  %call28 = call %union.tree_node* @default_conversion(%union.tree_node* %call27) #7, !dbg !12439
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !12401, metadata !DIExpression()), !dbg !12409
  %11 = load i32, i32* @warn_sequence_point, align 4, !dbg !12440
  %tobool = icmp eq i32 %11, 0, !dbg !12440
  br i1 %tobool, label %if.end32, label %if.then29, !dbg !12442

if.then29:                                        ; preds = %if.end26
  call void @verify_sequence_points(%union.tree_node* %call28) #6, !dbg !12443
  br label %if.end32, !dbg !12443

if.end32:                                         ; preds = %if.end26, %entry, %if.end, %if.then29
  %exp.addr.1 = phi %union.tree_node* [ %exp, %entry ], [ %4, %if.end ], [ %call28, %if.then29 ], [ %call28, %if.end26 ]
  %orig_type.2 = phi %union.tree_node* [ %exp, %entry ], [ %orig_type.0, %if.end ], [ %1, %if.then29 ], [ %1, %if.end26 ], !dbg !12409
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_type.2, metadata !12402, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1, metadata !12401, metadata !DIExpression()), !dbg !12409
  %call33 = call i8* @xmalloc(i64 40) #6, !dbg !12444
  call void @llvm.dbg.value(metadata i8* %call33, metadata !12403, metadata !DIExpression()), !dbg !12409
  %call34 = call %union.tree_node* @build3_stat(i32 138, %union.tree_node* %orig_type.2, %union.tree_node* %exp.addr.1, %union.tree_node* null, %union.tree_node* null) #6, !dbg !12445
  %switch_expr = bitcast i8* %call33 to %union.tree_node**, !dbg !12446
  store %union.tree_node* %call34, %union.tree_node** %switch_expr, align 8, !dbg !12447
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12448
  store i32 %switch_loc, i32* %12, align 8, !dbg !12448
  %orig_type37 = getelementptr inbounds i8, i8* %call33, i64 8, !dbg !12449
  %13 = bitcast i8* %orig_type37 to %union.tree_node**, !dbg !12449
  store %union.tree_node* %orig_type.2, %union.tree_node** %13, align 8, !dbg !12450
  %call38 = call %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)* nonnull @case_compare, void (i64)* null, void (i64)* null) #6, !dbg !12451
  %cases = getelementptr inbounds i8, i8* %call33, i64 16, !dbg !12452
  %14 = bitcast i8* %cases to %struct.splay_tree_s**, !dbg !12452
  store %struct.splay_tree_s* %call38, %struct.splay_tree_s** %14, align 8, !dbg !12453
  %call39 = call %struct.c_spot_bindings* @c_get_switch_bindings() #6, !dbg !12454
  %bindings = getelementptr inbounds i8, i8* %call33, i64 24, !dbg !12455
  %15 = bitcast i8* %bindings to %struct.c_spot_bindings**, !dbg !12455
  store %struct.c_spot_bindings* %call39, %struct.c_spot_bindings** %15, align 8, !dbg !12456
  %16 = load i64, i64* bitcast (%struct.c_switch** @c_switch_stack to i64*), align 8, !dbg !12457
  %next = getelementptr inbounds i8, i8* %call33, i64 32, !dbg !12458
  %17 = bitcast i8* %next to i64*, !dbg !12459
  store i64 %16, i64* %17, align 8, !dbg !12459
  store i8* %call33, i8** bitcast (%struct.c_switch** @c_switch_stack to i8**), align 8, !dbg !12460
  %18 = load %union.tree_node*, %union.tree_node** %switch_expr, align 8, !dbg !12461
  %call41 = call %union.tree_node* @add_stmt(%union.tree_node* %18) #6, !dbg !12462
  ret %union.tree_node* %call41, !dbg !12463
}

declare dso_local %struct.splay_tree_s* @splay_tree_new(i32 (i64, i64)*, void (i64)*, void (i64)*) local_unnamed_addr #2

declare dso_local i32 @case_compare(i64, i64) #2

declare dso_local %struct.c_spot_bindings* @c_get_switch_bindings() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @do_case(i32 %loc, %union.tree_node* %low_value, %union.tree_node* %high_value) local_unnamed_addr #5 !dbg !12464 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12466, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata %union.tree_node* %low_value, metadata !12467, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata %union.tree_node* %high_value, metadata !12468, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !12469, metadata !DIExpression()), !dbg !12470
  %tobool = icmp eq %union.tree_node* %low_value, null, !dbg !12471
  br i1 %tobool, label %if.end8, label %land.lhs.true, !dbg !12473

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %low_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12474
  %bf.load = load i64, i64* %0, align 8, !dbg !12474
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !12475
  %cmp = icmp eq i64 %bf.cast3, 23, !dbg !12475
  br i1 %cmp, label %if.end8, label %if.then, !dbg !12476

if.then:                                          ; preds = %land.lhs.true
  %call = tail call %union.tree_node* @c_fully_fold(%union.tree_node* nonnull %low_value, i8 zeroext 0, i8* null) #6, !dbg !12477
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12467, metadata !DIExpression()), !dbg !12470
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12479
  %bf.load2 = load i64, i64* %1, align 8, !dbg !12479
  %bf.cast44 = and i64 %bf.load2, 65535, !dbg !12481
  %cmp5 = icmp eq i64 %bf.cast44, 23, !dbg !12481
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !12482

if.then6:                                         ; preds = %if.then
  %2 = load i32, i32* @input_location, align 4, !dbg !12483
  %call7 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %2, i32 834, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.118, i64 0, i64 0)) #6, !dbg !12484
  br label %if.end8, !dbg !12484

if.end8:                                          ; preds = %land.lhs.true, %entry, %if.then, %if.then6
  %low_value.addr.0 = phi %union.tree_node* [ %low_value, %land.lhs.true ], [ null, %entry ], [ %call, %if.then6 ], [ %call, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %low_value.addr.0, metadata !12467, metadata !DIExpression()), !dbg !12470
  %tobool9 = icmp eq %union.tree_node* %high_value, null, !dbg !12485
  br i1 %tobool9, label %if.end26, label %land.lhs.true10, !dbg !12487

land.lhs.true10:                                  ; preds = %if.end8
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %high_value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12488
  %bf.load12 = load i64, i64* %3, align 8, !dbg !12488
  %bf.cast141 = and i64 %bf.load12, 65535, !dbg !12489
  %cmp15 = icmp eq i64 %bf.cast141, 23, !dbg !12489
  br i1 %cmp15, label %if.end26, label %if.then16, !dbg !12490

if.then16:                                        ; preds = %land.lhs.true10
  %call17 = tail call %union.tree_node* @c_fully_fold(%union.tree_node* nonnull %high_value, i8 zeroext 0, i8* null) #6, !dbg !12491
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !12468, metadata !DIExpression()), !dbg !12470
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12493
  %bf.load19 = load i64, i64* %4, align 8, !dbg !12493
  %bf.cast212 = and i64 %bf.load19, 65535, !dbg !12495
  %cmp22 = icmp eq i64 %bf.cast212, 23, !dbg !12495
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !12496

if.then23:                                        ; preds = %if.then16
  %5 = load i32, i32* @input_location, align 4, !dbg !12497
  %call24 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %5, i32 834, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.118, i64 0, i64 0)) #6, !dbg !12498
  br label %if.end26, !dbg !12498

if.end26:                                         ; preds = %land.lhs.true10, %if.end8, %if.then16, %if.then23
  %high_value.addr.0 = phi %union.tree_node* [ %high_value, %land.lhs.true10 ], [ null, %if.end8 ], [ %call17, %if.then23 ], [ %call17, %if.then16 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %high_value.addr.0, metadata !12468, metadata !DIExpression()), !dbg !12470
  %6 = load %struct.c_switch*, %struct.c_switch** @c_switch_stack, align 8, !dbg !12499
  %cmp27 = icmp eq %struct.c_switch* %6, null, !dbg !12501
  br i1 %cmp27, label %if.then28, label %if.end32, !dbg !12502

if.then28:                                        ; preds = %if.end26
  %tobool29 = icmp eq %union.tree_node* %low_value.addr.0, null, !dbg !12503
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !12506

if.then30:                                        ; preds = %if.then28
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.119, i64 0, i64 0)) #6, !dbg !12507
  br label %cleanup, !dbg !12507

if.else:                                          ; preds = %if.then28
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.120, i64 0, i64 0)) #6, !dbg !12508
  br label %cleanup

if.end32:                                         ; preds = %if.end26
  %7 = bitcast %struct.c_switch* %6 to i64**, !dbg !12502
  %bindings = getelementptr inbounds %struct.c_switch, %struct.c_switch* %6, i64 0, i32 3, !dbg !12509
  %8 = load %struct.c_spot_bindings*, %struct.c_spot_bindings** %bindings, align 8, !dbg !12509
  %9 = load i64*, i64** %7, align 8, !dbg !12511
  %bf.load34 = load i64, i64* %9, align 8, !dbg !12511
  %bf.cast36 = and i64 %bf.load34, 65535, !dbg !12511
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast36, !dbg !12511
  %10 = load i32, i32* %arrayidx, align 4, !dbg !12511
  %cmp37 = icmp ugt i32 %10, 3, !dbg !12511
  br i1 %cmp37, label %land.lhs.true38, label %cond.end, !dbg !12511

land.lhs.true38:                                  ; preds = %if.end32
  %cmp46 = icmp ult i32 %10, 11, !dbg !12511
  br i1 %cmp46, label %cond.true, label %cond.end, !dbg !12511

cond.true:                                        ; preds = %land.lhs.true38
  %locus = getelementptr inbounds i64, i64* %9, i64 3, !dbg !12511
  %11 = bitcast i64* %locus to i32*, !dbg !12511
  %12 = load i32, i32* %11, align 8, !dbg !12511
  br label %cond.end, !dbg !12511

cond.end:                                         ; preds = %if.end32, %land.lhs.true38, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %land.lhs.true38 ], [ 0, %if.end32 ], !dbg !12511
  %call48 = tail call zeroext i8 @c_check_switch_jump_warnings(%struct.c_spot_bindings* %8, i32 %cond, i32 %loc) #6, !dbg !12512
  %tobool49 = icmp eq i8 %call48, 0, !dbg !12512
  br i1 %tobool49, label %if.end51, label %cleanup, !dbg !12513

if.end51:                                         ; preds = %cond.end
  %13 = load %struct.c_switch*, %struct.c_switch** @c_switch_stack, align 8, !dbg !12514
  %cases = getelementptr inbounds %struct.c_switch, %struct.c_switch* %13, i64 0, i32 2, !dbg !12515
  %14 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases, align 8, !dbg !12515
  %15 = bitcast %struct.c_switch* %13 to %struct.tree_exp**, !dbg !12516
  %16 = load %struct.tree_exp*, %struct.tree_exp** %15, align 8, !dbg !12516
  %arrayidx54 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %16, i64 0, i32 3, i64 0, !dbg !12516
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx54, align 8, !dbg !12516
  %orig_type = getelementptr inbounds %struct.c_switch, %struct.c_switch* %13, i64 0, i32 1, !dbg !12517
  %18 = load %union.tree_node*, %union.tree_node** %orig_type, align 8, !dbg !12517
  %call55 = tail call %union.tree_node* @c_add_case_label(i32 %loc, %struct.splay_tree_s* %14, %union.tree_node* %17, %union.tree_node* %18, %union.tree_node* %low_value.addr.0, %union.tree_node* %high_value.addr.0) #6, !dbg !12518
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !12469, metadata !DIExpression()), !dbg !12470
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12519
  %cmp56 = icmp eq %union.tree_node* %call55, %19, !dbg !12521
  %spec.select = select i1 %cmp56, %union.tree_node* null, %union.tree_node* %call55, !dbg !12522
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !12469, metadata !DIExpression()), !dbg !12470
  br label %cleanup, !dbg !12523

cleanup:                                          ; preds = %cond.end, %if.then30, %if.else, %if.end51
  %retval.0 = phi %union.tree_node* [ %spec.select, %if.end51 ], [ null, %if.else ], [ null, %if.then30 ], [ null, %cond.end ], !dbg !12470
  ret %union.tree_node* %retval.0, !dbg !12524
}

declare dso_local zeroext i8 @c_check_switch_jump_warnings(%struct.c_spot_bindings*, i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_add_case_label(i32, %struct.splay_tree_s*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_finish_case(%union.tree_node* %body) local_unnamed_addr #5 !dbg !12525 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %body, metadata !12527, metadata !DIExpression()), !dbg !12530
  %0 = load %struct.c_switch*, %struct.c_switch** @c_switch_stack, align 8, !dbg !12531
  call void @llvm.dbg.value(metadata %struct.c_switch* %0, metadata !12528, metadata !DIExpression()), !dbg !12530
  %1 = bitcast %struct.c_switch* %0 to %struct.tree_exp**, !dbg !12532
  %2 = load %struct.tree_exp*, %struct.tree_exp** %1, align 8, !dbg !12532
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 3, i64 1, !dbg !12532
  store %union.tree_node* %body, %union.tree_node** %arrayidx, align 8, !dbg !12533
  %3 = bitcast %struct.c_switch* %0 to i64**, !dbg !12534
  %4 = load i64*, i64** %3, align 8, !dbg !12534
  %bf.load = load i64, i64* %4, align 8, !dbg !12534
  %bf.cast = and i64 %bf.load, 65535, !dbg !12534
  %arrayidx2 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !12534
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !12534
  %cmp = icmp ugt i32 %5, 3, !dbg !12534
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !12534

land.lhs.true:                                    ; preds = %entry
  %cmp10 = icmp ult i32 %5, 11, !dbg !12534
  br i1 %cmp10, label %cond.true, label %cond.end, !dbg !12534

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds i64, i64* %4, i64 3, !dbg !12534
  %6 = bitcast i64* %locus to i32*, !dbg !12534
  %7 = load i32, i32* %6, align 8, !dbg !12534
  br label %cond.end, !dbg !12534

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !12534
  call void @llvm.dbg.value(metadata i32 %cond, metadata !12529, metadata !DIExpression()), !dbg !12530
  %cases = getelementptr inbounds %struct.c_switch, %struct.c_switch* %0, i64 0, i32 2, !dbg !12535
  %8 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases, align 8, !dbg !12535
  %type = getelementptr inbounds i64, i64* %4, i64 2, !dbg !12536
  %9 = bitcast i64* %type to %union.tree_node**, !dbg !12536
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !12536
  %operands16 = getelementptr inbounds i64, i64* %4, i64 5, !dbg !12537
  %11 = bitcast i64* %operands16 to %union.tree_node**, !dbg !12537
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !12537
  tail call void @c_do_switch_warnings(%struct.splay_tree_s* %8, i32 %cond, %union.tree_node* %10, %union.tree_node* %12) #6, !dbg !12538
  %next = getelementptr inbounds %struct.c_switch, %struct.c_switch* %0, i64 0, i32 4, !dbg !12539
  %13 = bitcast %struct.c_switch** %next to i64*, !dbg !12539
  %14 = load i64, i64* %13, align 8, !dbg !12539
  store i64 %14, i64* bitcast (%struct.c_switch** @c_switch_stack to i64*), align 8, !dbg !12540
  %15 = load %struct.splay_tree_s*, %struct.splay_tree_s** %cases, align 8, !dbg !12541
  tail call void @splay_tree_delete(%struct.splay_tree_s* %15) #6, !dbg !12542
  %bindings = getelementptr inbounds %struct.c_switch, %struct.c_switch* %0, i64 0, i32 3, !dbg !12543
  %16 = load %struct.c_spot_bindings*, %struct.c_spot_bindings** %bindings, align 8, !dbg !12543
  tail call void @c_release_switch_bindings(%struct.c_spot_bindings* %16) #6, !dbg !12544
  %17 = bitcast %struct.c_switch* %0 to i8*, !dbg !12545
  tail call void @free(i8* %17) #6, !dbg !12545
  ret void, !dbg !12546
}

declare dso_local void @c_do_switch_warnings(%struct.splay_tree_s*, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @splay_tree_delete(%struct.splay_tree_s*) local_unnamed_addr #2

declare dso_local void @c_release_switch_bindings(%struct.c_spot_bindings*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_finish_if_stmt(i32 %if_locus, %union.tree_node* %cond, %union.tree_node* %then_block, %union.tree_node* %else_block, i8 zeroext %nested_if) local_unnamed_addr #5 !dbg !12547 {
entry:
  call void @llvm.dbg.value(metadata i32 %if_locus, metadata !12551, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !12552, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata %union.tree_node* %then_block, metadata !12553, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata %union.tree_node* %else_block, metadata !12554, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata i8 %nested_if, metadata !12555, metadata !DIExpression()), !dbg !12561
  %0 = load i32, i32* @warn_parentheses, align 4, !dbg !12562
  %tobool = icmp ne i32 %0, 0, !dbg !12562
  %tobool1 = icmp ne i8 %nested_if, 0, !dbg !12563
  %or.cond = and i1 %tobool, %tobool1, !dbg !12564
  %cmp = icmp eq %union.tree_node* %else_block, null, !dbg !12565
  %or.cond1 = and i1 %or.cond, %cmp, !dbg !12564
  br i1 %or.cond1, label %while.cond.preheader, label %if.end16, !dbg !12564

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !12566

while.cond:                                       ; preds = %while.cond.preheader, %sw.epilog
  %inner_if.0 = phi %union.tree_node* [ %inner_if.1, %sw.epilog ], [ %then_block, %while.cond.preheader ], !dbg !12567
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_if.0, metadata !12557, metadata !DIExpression()), !dbg !12568
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_if.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12569
  %bf.load = load i64, i64* %1, align 8, !dbg !12569
  %2 = trunc i64 %bf.load to i16, !dbg !12569
  switch i16 %2, label %sw.default [
    i16 56, label %found
    i16 58, label %sw.bb4
    i16 147, label %sw.bb5
    i16 131, label %sw.bb6
    i16 130, label %sw.bb6
  ], !dbg !12570

sw.bb4:                                           ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_if.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12571
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12571
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12571
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !12557, metadata !DIExpression()), !dbg !12568
  br label %sw.epilog, !dbg !12573

sw.bb5:                                           ; preds = %while.cond
  %call = tail call %union.tree_node* @expr_last(%union.tree_node* %then_block) #6, !dbg !12574
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12557, metadata !DIExpression()), !dbg !12568
  br label %sw.epilog, !dbg !12575

sw.bb6:                                           ; preds = %while.cond, %while.cond
  %operands8 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_if.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12576
  %4 = load %union.tree_node*, %union.tree_node** %operands8, align 8, !dbg !12576
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !12557, metadata !DIExpression()), !dbg !12568
  br label %sw.epilog, !dbg !12577

sw.default:                                       ; preds = %while.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 8614, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !12578
  br label %sw.epilog, !dbg !12579

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4
  %inner_if.1 = phi %union.tree_node* [ %inner_if.0, %sw.default ], [ %4, %sw.bb6 ], [ %call, %sw.bb5 ], [ %3, %sw.bb4 ], !dbg !12568
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_if.1, metadata !12557, metadata !DIExpression()), !dbg !12568
  br label %while.cond, !dbg !12566, !llvm.loop !12580

found:                                            ; preds = %while.cond
  %inner_if.0.lcssa = phi %union.tree_node* [ %inner_if.0, %while.cond ], !dbg !12567
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_if.0.lcssa, metadata !12557, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_if.0.lcssa, metadata !12557, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.value(metadata %union.tree_node* %inner_if.0.lcssa, metadata !12557, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.label(metadata !12560), !dbg !12582
  %operands11 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner_if.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12583
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands11, i64 2, !dbg !12583
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !12583
  %tobool13 = icmp eq %union.tree_node* %5, null, !dbg !12583
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !12585

if.then14:                                        ; preds = %found
  %call15 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %if_locus, i32 159, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.121, i64 0, i64 0)) #6, !dbg !12586
  br label %if.end16, !dbg !12586

if.end16:                                         ; preds = %found, %if.then14, %entry
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12587
  %call17 = tail call %union.tree_node* @build3_stat(i32 56, %union.tree_node* %6, %union.tree_node* %cond, %union.tree_node* %then_block, %union.tree_node* %else_block) #6, !dbg !12587
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !12556, metadata !DIExpression()), !dbg !12561
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12588
  store i32 %if_locus, i32* %7, align 8, !dbg !12588
  %call19 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call17) #6, !dbg !12589
  ret void, !dbg !12590
}

declare dso_local %union.tree_node* @expr_last(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_finish_loop(i32 %start_locus, %union.tree_node* %cond, %union.tree_node* %incr, %union.tree_node* %body, %union.tree_node* %blab, %union.tree_node* %clab, i8 zeroext %cond_is_first) local_unnamed_addr #5 !dbg !12591 {
entry:
  %blab.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %start_locus, metadata !12595, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !12596, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %incr, metadata !12597, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %body, metadata !12598, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %blab, metadata !12599, metadata !DIExpression()), !dbg !12608
  store %union.tree_node* %blab, %union.tree_node** %blab.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %clab, metadata !12600, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i8 %cond_is_first, metadata !12601, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !12602, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !12603, metadata !DIExpression()), !dbg !12608
  %tobool = icmp eq %union.tree_node* %cond, null, !dbg !12609
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !12610

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @integer_zerop(%union.tree_node* nonnull %cond) #6, !dbg !12611
  %tobool2 = icmp eq i32 %call, 0, !dbg !12611
  br i1 %tobool2, label %if.else, label %if.then, !dbg !12612

if.then:                                          ; preds = %land.lhs.true
  %tobool3 = icmp eq i8 %cond_is_first, 0, !dbg !12613
  br i1 %tobool3, label %if.end41, label %if.then4, !dbg !12616

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata %union.tree_node** %blab.addr, metadata !12599, metadata !DIExpression(DW_OP_deref)), !dbg !12608
  %call5 = call %union.tree_node* @build_and_jump(%union.tree_node** nonnull %blab.addr) #6, !dbg !12617
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !12604, metadata !DIExpression()), !dbg !12608
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12619
  store i32 %start_locus, i32* %0, align 8, !dbg !12619
  %call6 = call %union.tree_node* @add_stmt(%union.tree_node* %call5) #6, !dbg !12620
  br label %if.end41, !dbg !12621

if.else:                                          ; preds = %land.lhs.true, %entry
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12622
  %call7 = tail call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %1, %union.tree_node* null) #6, !dbg !12622
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !12605, metadata !DIExpression()), !dbg !12623
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12624
  %call9 = tail call %union.tree_node* @build_and_jump(%union.tree_node** nonnull %operands) #6, !dbg !12625
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !12603, metadata !DIExpression()), !dbg !12608
  br i1 %tobool, label %if.end39, label %land.lhs.true11, !dbg !12626

land.lhs.true11:                                  ; preds = %if.else
  %call12 = tail call i32 @integer_nonzerop(%union.tree_node* nonnull %cond) #6, !dbg !12628
  %tobool13 = icmp eq i32 %call12, 0, !dbg !12628
  br i1 %tobool13, label %if.then14, label %if.end39, !dbg !12629

if.then14:                                        ; preds = %land.lhs.true11
  %tobool15 = icmp eq i8 %cond_is_first, 0, !dbg !12630
  br i1 %tobool15, label %if.end31, label %if.then16, !dbg !12633

if.then16:                                        ; preds = %if.then14
  %tobool17 = icmp eq %union.tree_node* %incr, null, !dbg !12634
  %tobool18 = icmp ne %union.tree_node* %clab, null, !dbg !12637
  %or.cond = and i1 %tobool17, %tobool18, !dbg !12638
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12639
  br i1 %or.cond, label %if.else25, label %if.then19, !dbg !12638

if.then19:                                        ; preds = %if.then16
  %call20 = tail call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %2, %union.tree_node* null) #6, !dbg !12640
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !12602, metadata !DIExpression()), !dbg !12608
  %operands22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12642
  %call24 = tail call %union.tree_node* @build_and_jump(%union.tree_node** nonnull %operands22) #6, !dbg !12643
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !12604, metadata !DIExpression()), !dbg !12608
  br label %if.end27, !dbg !12644

if.else25:                                        ; preds = %if.then16
  %call26 = tail call %union.tree_node* @build1_stat(i32 134, %union.tree_node* %2, %union.tree_node* nonnull %clab) #6, !dbg !12645
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !12604, metadata !DIExpression()), !dbg !12608
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.then19
  %entry1.0 = phi %union.tree_node* [ %call20, %if.then19 ], [ null, %if.else25 ], !dbg !12608
  %t.0 = phi %union.tree_node* [ %call24, %if.then19 ], [ %call26, %if.else25 ], !dbg !12639
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !12604, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %entry1.0, metadata !12602, metadata !DIExpression()), !dbg !12608
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12646
  store i32 %start_locus, i32* %3, align 8, !dbg !12646
  %call30 = tail call %union.tree_node* @add_stmt(%union.tree_node* %t.0) #6, !dbg !12647
  br label %if.end31, !dbg !12648

if.end31:                                         ; preds = %if.then14, %if.end27
  %entry1.1 = phi %union.tree_node* [ %entry1.0, %if.end27 ], [ null, %if.then14 ], !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %entry1.1, metadata !12602, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node** %blab.addr, metadata !12599, metadata !DIExpression(DW_OP_deref)), !dbg !12608
  %call32 = call %union.tree_node* @build_and_jump(%union.tree_node** nonnull %blab.addr) #6, !dbg !12649
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !12604, metadata !DIExpression()), !dbg !12608
  br i1 %tobool15, label %if.else36, label %if.then34, !dbg !12650

if.then34:                                        ; preds = %if.end31
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12651
  %call35 = call %union.tree_node* @fold_build3_stat_loc(i32 %start_locus, i32 56, %union.tree_node* %4, %union.tree_node* nonnull %cond, %union.tree_node* %call9, %union.tree_node* %call32) #6, !dbg !12651
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !12603, metadata !DIExpression()), !dbg !12608
  br label %if.end39, !dbg !12653

if.else36:                                        ; preds = %if.end31
  %5 = load i32, i32* @input_location, align 4, !dbg !12654
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12654
  %call37 = call %union.tree_node* @fold_build3_stat_loc(i32 %5, i32 56, %union.tree_node* %6, %union.tree_node* nonnull %cond, %union.tree_node* %call9, %union.tree_node* %call32) #6, !dbg !12654
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !12603, metadata !DIExpression()), !dbg !12608
  br label %if.end39

if.end39:                                         ; preds = %land.lhs.true11, %if.else, %if.then34, %if.else36
  %entry1.2 = phi %union.tree_node* [ null, %land.lhs.true11 ], [ null, %if.else ], [ %entry1.1, %if.else36 ], [ %entry1.1, %if.then34 ], !dbg !12608
  %exit.1 = phi %union.tree_node* [ %call9, %land.lhs.true11 ], [ %call9, %if.else ], [ %call37, %if.else36 ], [ %call35, %if.then34 ], !dbg !12623
  call void @llvm.dbg.value(metadata %union.tree_node* %exit.1, metadata !12603, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %entry1.2, metadata !12602, metadata !DIExpression()), !dbg !12608
  %call40 = call %union.tree_node* @add_stmt(%union.tree_node* %call7) #6, !dbg !12655
  br label %if.end41

if.end41:                                         ; preds = %if.then, %if.then4, %if.end39
  %entry1.3 = phi %union.tree_node* [ %entry1.2, %if.end39 ], [ null, %if.then4 ], [ null, %if.then ], !dbg !12656
  %exit.2 = phi %union.tree_node* [ %exit.1, %if.end39 ], [ null, %if.then4 ], [ null, %if.then ], !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %exit.2, metadata !12603, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.tree_node* %entry1.3, metadata !12602, metadata !DIExpression()), !dbg !12608
  %tobool42 = icmp eq %union.tree_node* %body, null, !dbg !12657
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !12659

if.then43:                                        ; preds = %if.end41
  %call44 = call %union.tree_node* @add_stmt(%union.tree_node* nonnull %body) #6, !dbg !12660
  br label %if.end45, !dbg !12660

if.end45:                                         ; preds = %if.end41, %if.then43
  %tobool46 = icmp eq %union.tree_node* %clab, null, !dbg !12661
  br i1 %tobool46, label %if.end50, label %if.then47, !dbg !12663

if.then47:                                        ; preds = %if.end45
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12664
  %call48 = call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %7, %union.tree_node* nonnull %clab) #6, !dbg !12664
  %call49 = call %union.tree_node* @add_stmt(%union.tree_node* %call48) #6, !dbg !12665
  br label %if.end50, !dbg !12665

if.end50:                                         ; preds = %if.end45, %if.then47
  %tobool51 = icmp eq %union.tree_node* %incr, null, !dbg !12666
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !12668

if.then52:                                        ; preds = %if.end50
  %call53 = call %union.tree_node* @add_stmt(%union.tree_node* nonnull %incr) #6, !dbg !12669
  br label %if.end54, !dbg !12669

if.end54:                                         ; preds = %if.end50, %if.then52
  %tobool55 = icmp eq %union.tree_node* %entry1.3, null, !dbg !12670
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !12672

if.then56:                                        ; preds = %if.end54
  %call57 = call %union.tree_node* @add_stmt(%union.tree_node* nonnull %entry1.3) #6, !dbg !12673
  br label %if.end58, !dbg !12673

if.end58:                                         ; preds = %if.end54, %if.then56
  %tobool59 = icmp eq %union.tree_node* %exit.2, null, !dbg !12674
  br i1 %tobool59, label %if.end62, label %if.then60, !dbg !12676

if.then60:                                        ; preds = %if.end58
  %call61 = call %union.tree_node* @add_stmt(%union.tree_node* nonnull %exit.2) #6, !dbg !12677
  br label %if.end62, !dbg !12677

if.end62:                                         ; preds = %if.end58, %if.then60
  %8 = load %union.tree_node*, %union.tree_node** %blab.addr, align 8, !dbg !12678
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !12599, metadata !DIExpression()), !dbg !12608
  %tobool63 = icmp eq %union.tree_node* %8, null, !dbg !12678
  br i1 %tobool63, label %if.end67, label %if.then64, !dbg !12680

if.then64:                                        ; preds = %if.end62
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12681
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !12599, metadata !DIExpression()), !dbg !12608
  %call65 = call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %9, %union.tree_node* nonnull %8) #6, !dbg !12681
  %call66 = call %union.tree_node* @add_stmt(%union.tree_node* %call65) #6, !dbg !12682
  br label %if.end67, !dbg !12682

if.end67:                                         ; preds = %if.end62, %if.then64
  ret void, !dbg !12683
}

declare dso_local %union.tree_node* @build_and_jump(%union.tree_node**) local_unnamed_addr #2

declare dso_local i32 @integer_nonzerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_bc_stmt(i32 %loc, %union.tree_node** %label_p, i8 zeroext %is_break) local_unnamed_addr #5 !dbg !12684 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12688, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata %union.tree_node** %label_p, metadata !12689, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i8 %is_break, metadata !12690, metadata !DIExpression()), !dbg !12693
  %0 = load %union.tree_node*, %union.tree_node** %label_p, align 8, !dbg !12694
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !12692, metadata !DIExpression()), !dbg !12693
  %call = tail call %struct.stmt_tree_s* @current_stmt_tree() #6, !dbg !12695
  %x_cur_stmt_list = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call, i64 0, i32 0, !dbg !12695
  %1 = load %union.tree_node*, %union.tree_node** %x_cur_stmt_list, align 8, !dbg !12695
  %call1 = tail call zeroext i8 @block_may_fallthru(%union.tree_node* %1) #6, !dbg !12696
  %tobool = icmp eq i8 %call1, 0, !dbg !12697
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !12691, metadata !DIExpression()), !dbg !12693
  %tobool2 = icmp eq %union.tree_node* %0, null, !dbg !12698
  br i1 %tobool2, label %if.then, label %if.else, !dbg !12700

if.then:                                          ; preds = %entry
  br i1 %tobool, label %if.end17, label %if.then4, !dbg !12701

if.then4:                                         ; preds = %if.then
  %call5 = tail call %union.tree_node* @create_artificial_label(i32 %loc) #6, !dbg !12703
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !12692, metadata !DIExpression()), !dbg !12693
  store %union.tree_node* %call5, %union.tree_node** %label_p, align 8, !dbg !12705
  br label %if.end17, !dbg !12706

if.else:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12707
  %bf.load = load i64, i64* %2, align 8, !dbg !12707
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !12709
  %cmp = icmp eq i64 %bf.cast1, 30, !dbg !12709
  br i1 %cmp, label %if.end17, label %if.else8, !dbg !12710

if.else8:                                         ; preds = %if.else
  %int_cst9 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12711
  %low = bitcast i32* %int_cst9 to i64*, !dbg !12711
  %3 = load i64, i64* %low, align 8, !dbg !12711
  switch i64 %3, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb14
  ], !dbg !12712

sw.bb:                                            ; preds = %if.else8
  %tobool10 = icmp eq i8 %is_break, 0, !dbg !12713
  br i1 %tobool10, label %if.else12, label %if.then11, !dbg !12716

if.then11:                                        ; preds = %sw.bb
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.122, i64 0, i64 0)) #6, !dbg !12717
  br label %cleanup, !dbg !12717

if.else12:                                        ; preds = %sw.bb
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.123, i64 0, i64 0)) #6, !dbg !12718
  br label %cleanup

sw.bb14:                                          ; preds = %if.else8
  %tobool15 = icmp eq i8 %is_break, 0, !dbg !12719
  br i1 %tobool15, label %cond.true, label %cond.end, !dbg !12719

cond.true:                                        ; preds = %sw.bb14
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 8735, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !12719
  br label %cond.end, !dbg !12719

cond.end:                                         ; preds = %sw.bb14, %cond.true
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.124, i64 0, i64 0)) #6, !dbg !12720
  br label %cleanup, !dbg !12721

sw.default:                                       ; preds = %if.else8
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 8740, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !12722
  br label %if.end17

if.end17:                                         ; preds = %sw.default, %if.else, %if.then, %if.then4
  %label.1 = phi %union.tree_node* [ null, %if.then ], [ %call5, %if.then4 ], [ %0, %if.else ], [ %0, %sw.default ], !dbg !12723
  call void @llvm.dbg.value(metadata %union.tree_node* %label.1, metadata !12692, metadata !DIExpression()), !dbg !12693
  br i1 %tobool, label %cleanup, label %if.end20, !dbg !12724

if.end20:                                         ; preds = %if.end17
  %tobool21 = icmp eq i8 %is_break, 0, !dbg !12725
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !12727

if.then22:                                        ; preds = %if.end20
  %call23 = tail call %union.tree_node* @build_predict_expr(i32 8, i32 0) #6, !dbg !12728
  %call24 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call23) #6, !dbg !12729
  br label %if.end25, !dbg !12729

if.end25:                                         ; preds = %if.end20, %if.then22
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12730
  %call26 = tail call %union.tree_node* @build1_stat(i32 134, %union.tree_node* %4, %union.tree_node* %label.1) #6, !dbg !12730
  %call27 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call26) #6, !dbg !12731
  br label %cleanup, !dbg !12732

cleanup:                                          ; preds = %if.end17, %if.then11, %if.else12, %if.end25, %cond.end
  %retval.0 = phi %union.tree_node* [ %call27, %if.end25 ], [ null, %cond.end ], [ null, %if.else12 ], [ null, %if.then11 ], [ null, %if.end17 ], !dbg !12693
  ret %union.tree_node* %retval.0, !dbg !12733
}

declare dso_local zeroext i8 @block_may_fallthru(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.stmt_tree_s* @current_stmt_tree() local_unnamed_addr #2

declare dso_local %union.tree_node* @create_artificial_label(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_predict_expr(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_process_expr_stmt(i32 %loc, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !12734 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12736, metadata !DIExpression()), !dbg !12738
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !12737, metadata !DIExpression()), !dbg !12738
  %tobool = icmp eq %union.tree_node* %expr, null, !dbg !12739
  br i1 %tobool, label %return, label %if.end, !dbg !12741

if.end:                                           ; preds = %entry
  %call = tail call %union.tree_node* @c_fully_fold(%union.tree_node* nonnull %expr, i8 zeroext 0, i8* null) #6, !dbg !12742
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12737, metadata !DIExpression()), !dbg !12738
  %0 = load i32, i32* @warn_sequence_point, align 4, !dbg !12743
  %tobool1 = icmp eq i32 %0, 0, !dbg !12743
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12745

if.then2:                                         ; preds = %if.end
  tail call void @verify_sequence_points(%union.tree_node* %call) #6, !dbg !12746
  br label %if.end3, !dbg !12746

if.end3:                                          ; preds = %if.end, %if.then2
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12747
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !12747
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12749
  %cmp = icmp eq %union.tree_node* %1, %2, !dbg !12750
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12751
  br i1 %cmp, label %if.end20, label %land.lhs.true, !dbg !12751

land.lhs.true:                                    ; preds = %if.end3
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !12752
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !12752
  %cmp7 = icmp eq %union.tree_node* %5, null, !dbg !12752
  br i1 %cmp7, label %lor.lhs.false, label %if.end20, !dbg !12752

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.load = load i64, i64* %3, align 8, !dbg !12752
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !12752
  %cmp10 = icmp eq i64 %bf.cast2, 19, !dbg !12752
  br i1 %cmp10, label %if.end20, label %land.lhs.true11, !dbg !12753

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %cmp18 = icmp eq i64 %bf.cast2, 15, !dbg !12754
  br i1 %cmp18, label %if.end20, label %if.then19, !dbg !12755

if.then19:                                        ; preds = %land.lhs.true11
  tail call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.125, i64 0, i64 0)) #6, !dbg !12756
  br label %if.end20, !dbg !12756

if.end20:                                         ; preds = %land.lhs.true11, %land.lhs.true, %if.end3, %if.then19, %lor.lhs.false
  %call21 = tail call %struct.stmt_tree_s* @current_stmt_tree() #6, !dbg !12757
  %6 = bitcast %struct.stmt_tree_s* %call21 to i64**, !dbg !12757
  %7 = load i64*, i64** %6, align 8, !dbg !12757
  %bf.load23 = load i64, i64* %7, align 8, !dbg !12757
  %bf.cast251 = and i64 %bf.load23, 17179869184, !dbg !12757
  %tobool26 = icmp eq i64 %bf.cast251, 0, !dbg !12757
  %8 = load i32, i32* @warn_unused_value, align 4, !dbg !12759
  %tobool28 = icmp ne i32 %8, 0, !dbg !12759
  %or.cond = and i1 %tobool26, %tobool28, !dbg !12760
  br i1 %or.cond, label %if.then29, label %if.end30, !dbg !12760

if.then29:                                        ; preds = %if.end20
  tail call fastcc void @emit_side_effect_warnings(i32 %loc, %union.tree_node* %call) #7, !dbg !12761
  br label %if.end30, !dbg !12761

if.end30:                                         ; preds = %if.end20, %if.then29
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12762
  %bf.load32 = load i64, i64* %9, align 8, !dbg !12762
  %bf.cast34 = and i64 %bf.load32, 65535, !dbg !12762
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast34, !dbg !12762
  %10 = load i32, i32* %arrayidx, align 4, !dbg !12762
  %cmp35 = icmp eq i32 %10, 3, !dbg !12762
  br i1 %cmp35, label %if.then44, label %lor.lhs.false36, !dbg !12764

lor.lhs.false36:                                  ; preds = %if.end30
  %cmp43 = icmp eq i32 %10, 1, !dbg !12765
  br i1 %cmp43, label %if.then44, label %return, !dbg !12766

if.then44:                                        ; preds = %lor.lhs.false36, %if.end30
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !12767
  %call47 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %11, %union.tree_node* %call) #6, !dbg !12767
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !12737, metadata !DIExpression()), !dbg !12738
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12769
  store i32 %loc, i32* %12, align 8, !dbg !12769
  br label %return, !dbg !12770

return:                                           ; preds = %entry, %lor.lhs.false36, %if.then44
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %call47, %if.then44 ], [ %call, %lor.lhs.false36 ], !dbg !12738
  ret %union.tree_node* %retval.0, !dbg !12771
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_side_effect_warnings(i32 %loc, %union.tree_node* %expr) unnamed_addr #5 !dbg !12772 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12776, metadata !DIExpression()), !dbg !12778
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !12777, metadata !DIExpression()), !dbg !12778
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12779
  %cmp = icmp eq %union.tree_node* %0, %expr, !dbg !12781
  br i1 %cmp, label %if.end17, label %if.else, !dbg !12782

if.else:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12783
  %bf.load = load i64, i64* %1, align 8, !dbg !12783
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !12783
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !12783
  br i1 %tobool, label %if.then1, label %if.else14, !dbg !12785

if.then1:                                         ; preds = %if.else
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12786
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !12786
  %3 = load i64*, i64** %2, align 8, !dbg !12786
  %bf.load3 = load i64, i64* %3, align 8, !dbg !12786
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !12786
  %cmp6 = icmp eq i64 %bf.cast52, 19, !dbg !12786
  br i1 %cmp6, label %if.end17, label %land.lhs.true, !dbg !12789

land.lhs.true:                                    ; preds = %if.then1
  %bf.cast113 = and i64 %bf.load, 8388608, !dbg !12790
  %tobool12 = icmp eq i64 %bf.cast113, 0, !dbg !12790
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !12791

if.then13:                                        ; preds = %land.lhs.true
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 229, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.268, i64 0, i64 0)) #6, !dbg !12792
  br label %if.end17, !dbg !12792

if.else14:                                        ; preds = %if.else
  %call15 = tail call i32 @warn_if_unused_value(%union.tree_node* %expr, i32 %loc) #6, !dbg !12793
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true, %if.else14, %if.then13, %if.then1, %entry
  ret void, !dbg !12794
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_expr_stmt(i32 %loc, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !12795 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12797, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !12798, metadata !DIExpression()), !dbg !12799
  %tobool = icmp eq %union.tree_node* %expr, null, !dbg !12800
  br i1 %tobool, label %return, label %if.then, !dbg !12802

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @c_process_expr_stmt(i32 %loc, %union.tree_node* nonnull %expr) #7, !dbg !12803
  %call1 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call) #6, !dbg !12804
  br label %return, !dbg !12805

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !12806
  ret %union.tree_node* %retval.0, !dbg !12807
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_begin_stmt_expr() local_unnamed_addr #5 !dbg !12808 {
entry:
  tail call void @keep_next_level() #6, !dbg !12813
  %call = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #7, !dbg !12814
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12812, metadata !DIExpression()), !dbg !12815
  %0 = load %struct.c_switch*, %struct.c_switch** @c_switch_stack, align 8, !dbg !12816
  %cmp = icmp eq %struct.c_switch* %0, null, !dbg !12817
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !12816

cond.false:                                       ; preds = %entry
  %bindings = getelementptr inbounds %struct.c_switch, %struct.c_switch* %0, i64 0, i32 3, !dbg !12818
  %1 = load %struct.c_spot_bindings*, %struct.c_spot_bindings** %bindings, align 8, !dbg !12818
  br label %cond.end, !dbg !12816

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.c_spot_bindings* [ %1, %cond.false ], [ null, %entry ], !dbg !12816
  tail call void @c_bindings_start_stmt_expr(%struct.c_spot_bindings* %cond) #6, !dbg !12819
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12820
  %bf.load = load i64, i64* %2, align 8, !dbg !12821
  %bf.set = or i64 %bf.load, 17179869184, !dbg !12821
  store i64 %bf.set, i64* %2, align 8, !dbg !12821
  ret %union.tree_node* %call, !dbg !12822
}

declare dso_local void @keep_next_level() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_begin_compound_stmt(i8 zeroext %do_scope) local_unnamed_addr #5 !dbg !12823 {
entry:
  call void @llvm.dbg.value(metadata i8 %do_scope, metadata !12827, metadata !DIExpression()), !dbg !12829
  %call = tail call %union.tree_node* @push_stmt_list() #6, !dbg !12830
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12828, metadata !DIExpression()), !dbg !12829
  %tobool = icmp eq i8 %do_scope, 0, !dbg !12831
  br i1 %tobool, label %if.end, label %if.then, !dbg !12833

if.then:                                          ; preds = %entry
  tail call void @push_scope() #6, !dbg !12834
  br label %if.end, !dbg !12834

if.end:                                           ; preds = %entry, %if.then
  ret %union.tree_node* %call, !dbg !12835
}

declare dso_local void @c_bindings_start_stmt_expr(%struct.c_spot_bindings*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_stmt_expr(i32 %loc, %union.tree_node* %body) local_unnamed_addr #5 !dbg !12836 {
entry:
  %i = alloca %struct.tree_stmt_iterator, align 8
  %tmp12 = alloca %struct.tree_stmt_iterator, align 8
  %tmp61 = alloca %struct.tree_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12838, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node* %body, metadata !12839, metadata !DIExpression()), !dbg !12864
  %call = tail call %union.tree_node* @c_end_compound_stmt(i32 %loc, %union.tree_node* %body, i8 zeroext 1) #7, !dbg !12865
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12839, metadata !DIExpression()), !dbg !12864
  %0 = load %struct.c_switch*, %struct.c_switch** @c_switch_stack, align 8, !dbg !12866
  %cmp = icmp eq %struct.c_switch* %0, null, !dbg !12867
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !12866

cond.false:                                       ; preds = %entry
  %bindings = getelementptr inbounds %struct.c_switch, %struct.c_switch* %0, i64 0, i32 3, !dbg !12868
  %1 = load %struct.c_spot_bindings*, %struct.c_spot_bindings** %bindings, align 8, !dbg !12868
  br label %cond.end, !dbg !12866

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %struct.c_spot_bindings* [ %1, %cond.false ], [ null, %entry ], !dbg !12866
  tail call void @c_bindings_end_stmt_expr(%struct.c_spot_bindings* %cond) #6, !dbg !12869
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12870
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !12870
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !12844, metadata !DIExpression()), !dbg !12864
  %2 = bitcast %struct.tree_stmt_iterator* %i to i8*, !dbg !12871
  %3 = bitcast %struct.tree_stmt_iterator* %tmp12 to i8*, !dbg !12872
  %4 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp12, i64 0, i32 0, !dbg !12872
  %5 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp12, i64 0, i32 1, !dbg !12872
  %6 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 0, !dbg !12873
  %7 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 1, !dbg !12873
  %8 = bitcast %struct.tree_stmt_iterator* %tmp61 to i8*, !dbg !12874
  %9 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp61, i64 0, i32 0, !dbg !12874
  %10 = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %tmp61, i64 0, i32 1, !dbg !12874
  br label %continue_searching, !dbg !12875

continue_searching:                               ; preds = %if.then76, %cond.end
  %last_p.0 = phi %union.tree_node** [ %arrayidx, %cond.end ], [ %operands78, %if.then76 ], !dbg !12864
  %last.0.in = phi %union.tree_node** [ %arrayidx, %cond.end ], [ %operands78, %if.then76 ]
  %retval.0 = phi %union.tree_node* [ undef, %cond.end ], [ %retval.2, %if.then76 ]
  %last.0 = load %union.tree_node*, %union.tree_node** %last.0.in, align 8, !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0, metadata !12840, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node** %last_p.0, metadata !12844, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.label(metadata !12863), !dbg !12876
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12877
  %bf.load = load i64, i64* %11, align 8, !dbg !12877
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !12878
  %cmp4 = icmp eq i64 %bf.cast2, 147, !dbg !12878
  br i1 %cmp4, label %if.then, label %if.end65, !dbg !12879

if.then:                                          ; preds = %continue_searching
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !12880
  %bf.cast87 = and i64 %bf.load, 65536, !dbg !12881
  %tobool = icmp eq i64 %bf.cast87, 0, !dbg !12881
  br i1 %tobool, label %cleanup, label %if.end, !dbg !12883

if.end:                                           ; preds = %if.then
  %12 = load i32, i32* @warn_unused_value, align 4, !dbg !12884
  %tobool10 = icmp eq i32 %12, 0, !dbg !12884
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !12885

if.then11:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !12886
  %call13 = call fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %last.0) #7, !dbg !12886
  %13 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call13, 0, !dbg !12886
  store %struct.tree_statement_list_node* %13, %struct.tree_statement_list_node** %4, align 8, !dbg !12886
  %14 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call13, 1, !dbg !12886
  store %union.tree_node* %14, %union.tree_node** %5, align 8, !dbg !12886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !12886
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !12886
  br label %for.cond, !dbg !12887

for.cond:                                         ; preds = %cond.end59, %if.then11
  %15 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %6, align 8, !dbg !12888
  %16 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !12888
  %call14 = call fastcc zeroext i8 @tsi_one_before_end_p(%struct.tree_statement_list_node* %15, %union.tree_node* %16) #7, !dbg !12888
  %tobool15 = icmp eq i8 %call14, 0, !dbg !12889
  br i1 %tobool15, label %for.body, label %if.end63.loopexit, !dbg !12890

for.body:                                         ; preds = %for.cond
  %17 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %6, align 8, !dbg !12891
  %18 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !12891
  %call16 = call fastcc %union.tree_node* @tsi_stmt(%struct.tree_statement_list_node* %17, %union.tree_node* %18) #7, !dbg !12891
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !12860, metadata !DIExpression()), !dbg !12892
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12893
  %bf.load18 = load i64, i64* %19, align 8, !dbg !12893
  %bf.cast20 = and i64 %bf.load18, 65535, !dbg !12893
  %arrayidx21 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast20, !dbg !12893
  %20 = load i32, i32* %arrayidx21, align 4, !dbg !12893
  %cmp22 = icmp ugt i32 %20, 3, !dbg !12893
  br i1 %cmp22, label %land.lhs.true, label %cond.end33, !dbg !12893

land.lhs.true:                                    ; preds = %for.body
  %cmp29 = icmp ult i32 %20, 11, !dbg !12893
  br i1 %cmp29, label %cond.true30, label %cond.end33, !dbg !12893

cond.true30:                                      ; preds = %land.lhs.true
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12893
  %22 = load i32, i32* %21, align 8, !dbg !12893
  br label %cond.end33, !dbg !12893

cond.end33:                                       ; preds = %for.body, %land.lhs.true, %cond.true30
  %cond34 = phi i32 [ %22, %cond.true30 ], [ 0, %land.lhs.true ], [ 0, %for.body ], !dbg !12893
  %cmp35 = icmp eq i32 %cond34, 0, !dbg !12893
  br i1 %cmp35, label %cond.end59, label %cond.true36, !dbg !12893

cond.true36:                                      ; preds = %cond.end33
  br i1 %cmp22, label %land.lhs.true44, label %cond.end59, !dbg !12894

land.lhs.true44:                                  ; preds = %cond.true36
  %cmp51 = icmp ult i32 %20, 11, !dbg !12894
  br i1 %cmp51, label %cond.true52, label %cond.end59, !dbg !12894

cond.true52:                                      ; preds = %land.lhs.true44
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12894
  %24 = load i32, i32* %23, align 8, !dbg !12894
  br label %cond.end59, !dbg !12894

cond.end59:                                       ; preds = %cond.end33, %cond.true52, %land.lhs.true44, %cond.true36
  %cond60 = phi i32 [ %24, %cond.true52 ], [ 0, %land.lhs.true44 ], [ 0, %cond.true36 ], [ %loc, %cond.end33 ], !dbg !12893
  call void @llvm.dbg.value(metadata i32 %cond60, metadata !12854, metadata !DIExpression()), !dbg !12892
  call fastcc void @emit_side_effect_warnings(i32 %cond60, %union.tree_node* %call16) #7, !dbg !12895
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %i, metadata !12845, metadata !DIExpression(DW_OP_deref)), !dbg !12871
  call fastcc void @tsi_next(%struct.tree_stmt_iterator* nonnull %i) #7, !dbg !12896
  br label %for.cond, !dbg !12897, !llvm.loop !12898

if.else:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !12900
  %call62 = call fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_last(%union.tree_node* %last.0) #7, !dbg !12900
  %25 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call62, 0, !dbg !12900
  store %struct.tree_statement_list_node* %25, %struct.tree_statement_list_node** %9, align 8, !dbg !12900
  %26 = extractvalue { %struct.tree_statement_list_node*, %union.tree_node* } %call62, 1, !dbg !12900
  store %union.tree_node* %26, %union.tree_node** %10, align 8, !dbg !12900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !12900
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !12900
  br label %if.end63

if.end63.loopexit:                                ; preds = %for.cond
  br label %if.end63, !dbg !12901

if.end63:                                         ; preds = %if.end63.loopexit, %if.else
  %27 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %6, align 8, !dbg !12901
  %28 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !12901
  %call64 = call fastcc %union.tree_node** @tsi_stmt_ptr(%struct.tree_statement_list_node* %27, %union.tree_node* %28) #7, !dbg !12901
  call void @llvm.dbg.value(metadata %union.tree_node** %call64, metadata !12844, metadata !DIExpression()), !dbg !12864
  %29 = load %union.tree_node*, %union.tree_node** %call64, align 8, !dbg !12902
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !12840, metadata !DIExpression()), !dbg !12864
  br label %cleanup, !dbg !12903

cleanup:                                          ; preds = %if.then, %if.end63
  %last_p.1 = phi %union.tree_node** [ %call64, %if.end63 ], [ %last_p.0, %if.then ], !dbg !12864
  %last.1 = phi %union.tree_node* [ %29, %if.end63 ], [ %last.0, %if.then ], !dbg !12864
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end63 ], [ false, %if.then ]
  %retval.1 = phi %union.tree_node* [ %retval.0, %if.end63 ], [ %call, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %last.1, metadata !12840, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node** %last_p.1, metadata !12844, metadata !DIExpression()), !dbg !12864
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !12903
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end65_crit_edge, label %cleanup158.loopexit

cleanup.if.end65_crit_edge:                       ; preds = %cleanup
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %last.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12904
  %bf.load67.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !12906
  %.pre = and i64 %bf.load67.pre, 65535, !dbg !12907
  br label %if.end65

if.end65:                                         ; preds = %cleanup.if.end65_crit_edge, %continue_searching
  %bf.cast693.pre-phi = phi i64 [ %.pre, %cleanup.if.end65_crit_edge ], [ %bf.cast2, %continue_searching ], !dbg !12907
  %last_p.2 = phi %union.tree_node** [ %last_p.1, %cleanup.if.end65_crit_edge ], [ %last_p.0, %continue_searching ], !dbg !12864
  %last.2 = phi %union.tree_node* [ %last.1, %cleanup.if.end65_crit_edge ], [ %last.0, %continue_searching ], !dbg !12864
  %retval.2 = phi %union.tree_node* [ %retval.1, %cleanup.if.end65_crit_edge ], [ %retval.0, %continue_searching ]
  call void @llvm.dbg.value(metadata %union.tree_node* %last.2, metadata !12840, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node** %last_p.2, metadata !12844, metadata !DIExpression()), !dbg !12864
  %cmp70 = icmp eq i64 %bf.cast693.pre-phi, 131, !dbg !12907
  br i1 %cmp70, label %if.then76, label %lor.lhs.false, !dbg !12908

lor.lhs.false:                                    ; preds = %if.end65
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12906
  %cmp75 = icmp eq i64 %bf.cast693.pre-phi, 130, !dbg !12909
  br i1 %cmp75, label %if.then76, label %if.end80, !dbg !12910

if.then76:                                        ; preds = %lor.lhs.false, %if.end65
  %operands78 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12911
  call void @llvm.dbg.value(metadata %union.tree_node** %operands78, metadata !12844, metadata !DIExpression()), !dbg !12864
  br label %continue_searching, !dbg !12913

if.end80:                                         ; preds = %lor.lhs.false
  %.lcssa = phi i64* [ %30, %lor.lhs.false ], !dbg !12906
  %last_p.2.lcssa = phi %union.tree_node** [ %last_p.2, %lor.lhs.false ], !dbg !12864
  %last.2.lcssa = phi %union.tree_node* [ %last.2, %lor.lhs.false ], !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node** %last_p.2.lcssa, metadata !12844, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node* %last.2.lcssa, metadata !12840, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node** %last_p.2.lcssa, metadata !12844, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node* %last.2.lcssa, metadata !12840, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node** %last_p.2.lcssa, metadata !12844, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node* %last.2.lcssa, metadata !12840, metadata !DIExpression()), !dbg !12864
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !12914
  %cmp81 = icmp eq %union.tree_node* %last.2.lcssa, %31, !dbg !12916
  br i1 %cmp81, label %cleanup158, label %if.end83, !dbg !12917

if.end83:                                         ; preds = %if.end80
  %32 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !12918
  %cmp87 = icmp eq %union.tree_node* %last.2.lcssa, %32, !dbg !12920
  br i1 %cmp87, label %land.lhs.true88, label %if.end98, !dbg !12921

land.lhs.true88:                                  ; preds = %if.end83
  %33 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !12922
  %cmp92 = icmp eq %union.tree_node* %33, null, !dbg !12923
  br i1 %cmp92, label %if.then93, label %if.end98, !dbg !12924

if.then93:                                        ; preds = %land.lhs.true88
  %call94 = call %union.tree_node* @c_wrap_maybe_const(%union.tree_node* %last.2.lcssa, i8 zeroext 1) #6, !dbg !12925
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !12840, metadata !DIExpression()), !dbg !12864
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12927
  %bf.load96 = load i64, i64* %34, align 8, !dbg !12928
  %bf.set = or i64 %bf.load96, 8388608, !dbg !12928
  store i64 %bf.set, i64* %34, align 8, !dbg !12928
  br label %cleanup158, !dbg !12929

if.end98:                                         ; preds = %land.lhs.true88, %if.end83
  %type99 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !12930
  %35 = load %union.tree_node*, %union.tree_node** %type99, align 8, !dbg !12930
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !12841, metadata !DIExpression()), !dbg !12864
  %tobool100 = icmp eq %union.tree_node* %35, null, !dbg !12931
  br i1 %tobool100, label %cleanup158, label %lor.lhs.false101, !dbg !12933

lor.lhs.false101:                                 ; preds = %if.end98
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12934
  %bf.load103 = load i64, i64* %36, align 8, !dbg !12934
  %bf.cast1055 = and i64 %bf.load103, 65535, !dbg !12934
  %cmp106 = icmp eq i64 %bf.cast1055, 19, !dbg !12934
  br i1 %cmp106, label %cleanup158, label %if.end108, !dbg !12935

if.end108:                                        ; preds = %lor.lhs.false101
  %call109 = call %union.tree_node* @create_tmp_var_raw(%union.tree_node* nonnull %35, i8* null) #6, !dbg !12936
  call void @llvm.dbg.value(metadata %union.tree_node* %call109, metadata !12842, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node* %last.2.lcssa, metadata !12843, metadata !DIExpression()), !dbg !12864
  %bf.load111 = load i64, i64* %.lcssa, align 8, !dbg !12937
  %bf.cast1136 = and i64 %bf.load111, 65535, !dbg !12939
  %cmp114 = icmp eq i64 %bf.cast1136, 116, !dbg !12939
  br i1 %cmp114, label %land.lhs.true115, label %if.end128, !dbg !12940

land.lhs.true115:                                 ; preds = %if.end108
  %37 = load %union.tree_node*, %union.tree_node** %type99, align 8, !dbg !12941
  %operands119 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !12942
  %38 = bitcast %union.tree_node** %operands119 to %struct.tree_common**, !dbg !12942
  %39 = load %struct.tree_common*, %struct.tree_common** %38, align 8, !dbg !12942
  %type122 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %39, i64 0, i32 2, !dbg !12942
  %40 = load %union.tree_node*, %union.tree_node** %type122, align 8, !dbg !12942
  %cmp123 = icmp eq %union.tree_node* %37, %40, !dbg !12943
  br i1 %cmp123, label %if.then124, label %if.end128, !dbg !12944

if.then124:                                       ; preds = %land.lhs.true115
  %41 = bitcast %struct.tree_common* %39 to %union.tree_node*, !dbg !12944
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !12843, metadata !DIExpression()), !dbg !12864
  br label %if.end128, !dbg !12945

if.end128:                                        ; preds = %if.then124, %land.lhs.true115, %if.end108
  %val.0 = phi %union.tree_node* [ %41, %if.then124 ], [ %last.2.lcssa, %land.lhs.true115 ], [ %last.2.lcssa, %if.end108 ], !dbg !12864
  call void @llvm.dbg.value(metadata %union.tree_node* %val.0, metadata !12843, metadata !DIExpression()), !dbg !12864
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12946
  %call129 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %42, %union.tree_node* %call109, %union.tree_node* %val.0) #6, !dbg !12946
  store %union.tree_node* %call129, %union.tree_node** %last_p.2.lcssa, align 8, !dbg !12947
  %bf.load131 = load i64, i64* %.lcssa, align 8, !dbg !12948
  %bf.cast133 = and i64 %bf.load131, 65535, !dbg !12948
  %arrayidx135 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast133, !dbg !12948
  %43 = load i32, i32* %arrayidx135, align 4, !dbg !12948
  %cmp136 = icmp ugt i32 %43, 3, !dbg !12948
  br i1 %cmp136, label %land.lhs.true137, label %cond.end149, !dbg !12948

land.lhs.true137:                                 ; preds = %if.end128
  %cmp144 = icmp ult i32 %43, 11, !dbg !12948
  br i1 %cmp144, label %cond.true145, label %cond.end149, !dbg !12948

cond.true145:                                     ; preds = %land.lhs.true137
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12948
  %45 = load i32, i32* %44, align 8, !dbg !12948
  br label %cond.end149, !dbg !12948

cond.end149:                                      ; preds = %if.end128, %land.lhs.true137, %cond.true145
  %cond150 = phi i32 [ %45, %cond.true145 ], [ 0, %land.lhs.true137 ], [ 0, %if.end128 ], !dbg !12948
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12948
  store i32 %cond150, i32* %46, align 8, !dbg !12948
  %call154 = call %union.tree_node* @build4_stat(i32 55, %union.tree_node* nonnull %35, %union.tree_node* %call109, %union.tree_node* %call, %union.tree_node* null, %union.tree_node* null) #6, !dbg !12949
  call void @llvm.dbg.value(metadata %union.tree_node* %call154, metadata !12861, metadata !DIExpression()), !dbg !12950
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %call154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12951
  store i32 %loc, i32* %47, align 8, !dbg !12951
  br label %cleanup158

cleanup158.loopexit:                              ; preds = %cleanup
  %retval.1.lcssa = phi %union.tree_node* [ %retval.1, %cleanup ]
  br label %cleanup158, !dbg !12952

cleanup158:                                       ; preds = %cleanup158.loopexit, %if.end98, %lor.lhs.false101, %if.end80, %cond.end149, %if.then93
  %retval.3 = phi %union.tree_node* [ %call94, %if.then93 ], [ %call154, %cond.end149 ], [ %last.2.lcssa, %if.end80 ], [ %call, %lor.lhs.false101 ], [ %call, %if.end98 ], [ %retval.1.lcssa, %cleanup158.loopexit ]
  ret %union.tree_node* %retval.3, !dbg !12952
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_end_compound_stmt(i32 %loc, %union.tree_node* %stmt, i8 zeroext %do_scope) local_unnamed_addr #5 !dbg !12953 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !12957, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.value(metadata %union.tree_node* %stmt, metadata !12958, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.value(metadata i8 %do_scope, metadata !12959, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !12960, metadata !DIExpression()), !dbg !12961
  %tobool = icmp eq i8 %do_scope, 0, !dbg !12962
  br i1 %tobool, label %if.end2, label %if.then, !dbg !12964

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @c_language, align 4, !dbg !12965
  %and = and i32 %0, 1, !dbg !12965
  %cmp = icmp eq i32 %and, 0, !dbg !12965
  br i1 %cmp, label %if.end, label %if.then1, !dbg !12968

if.then1:                                         ; preds = %if.then
  tail call void @objc_clear_super_receiver() #6, !dbg !12969
  br label %if.end, !dbg !12969

if.end:                                           ; preds = %if.then, %if.then1
  %call = tail call %union.tree_node* @pop_scope() #6, !dbg !12970
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !12960, metadata !DIExpression()), !dbg !12961
  br label %if.end2, !dbg !12971

if.end2:                                          ; preds = %entry, %if.end
  %block.0 = phi %union.tree_node* [ %call, %if.end ], [ null, %entry ], !dbg !12961
  call void @llvm.dbg.value(metadata %union.tree_node* %block.0, metadata !12960, metadata !DIExpression()), !dbg !12961
  %call3 = tail call %union.tree_node* @pop_stmt_list(%union.tree_node* %stmt) #6, !dbg !12972
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !12958, metadata !DIExpression()), !dbg !12961
  %call4 = tail call %union.tree_node* @c_build_bind_expr(i32 %loc, %union.tree_node* %block.0, %union.tree_node* %call3) #6, !dbg !12973
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !12958, metadata !DIExpression()), !dbg !12961
  %call5 = tail call %struct.stmt_tree_s* @current_stmt_tree() #6, !dbg !12974
  %x_cur_stmt_list = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call5, i64 0, i32 0, !dbg !12974
  %1 = load %union.tree_node*, %union.tree_node** %x_cur_stmt_list, align 8, !dbg !12974
  %tobool6 = icmp eq %union.tree_node* %1, null, !dbg !12974
  br i1 %tobool6, label %if.end21, label %land.lhs.true, !dbg !12976

land.lhs.true:                                    ; preds = %if.end2
  %call7 = tail call %struct.stmt_tree_s* @current_stmt_tree() #6, !dbg !12977
  %2 = bitcast %struct.stmt_tree_s* %call7 to i64**, !dbg !12977
  %3 = load i64*, i64** %2, align 8, !dbg !12977
  %bf.load = load i64, i64* %3, align 8, !dbg !12977
  %bf.cast1 = and i64 %bf.load, 17179869184, !dbg !12977
  %tobool9 = icmp eq i64 %bf.cast1, 0, !dbg !12977
  br i1 %tobool9, label %if.end21, label %land.lhs.true10, !dbg !12978

land.lhs.true10:                                  ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12979
  %bf.load12 = load i64, i64* %4, align 8, !dbg !12979
  %bf.cast142 = and i64 %bf.load12, 65535, !dbg !12980
  %cmp15 = icmp eq i64 %bf.cast142, 58, !dbg !12980
  br i1 %cmp15, label %if.end21, label %if.then16, !dbg !12981

if.then16:                                        ; preds = %land.lhs.true10
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !12982
  %call17 = tail call %union.tree_node* @build3_stat(i32 58, %union.tree_node* %5, %union.tree_node* null, %union.tree_node* %call4, %union.tree_node* null) #6, !dbg !12982
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !12958, metadata !DIExpression()), !dbg !12961
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !12984
  %bf.load19 = load i64, i64* %6, align 8, !dbg !12985
  %bf.set = or i64 %bf.load19, 65536, !dbg !12985
  store i64 %bf.set, i64* %6, align 8, !dbg !12985
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12986
  store i32 %loc, i32* %7, align 8, !dbg !12986
  br label %if.end21, !dbg !12987

if.end21:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.end2, %if.then16
  %stmt.addr.0 = phi %union.tree_node* [ %call17, %if.then16 ], [ %call4, %land.lhs.true10 ], [ %call4, %land.lhs.true ], [ %call4, %if.end2 ], !dbg !12961
  call void @llvm.dbg.value(metadata %union.tree_node* %stmt.addr.0, metadata !12958, metadata !DIExpression()), !dbg !12961
  ret %union.tree_node* %stmt.addr.0, !dbg !12988
}

declare dso_local void @c_bindings_end_stmt_expr(%struct.c_spot_bindings*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_start(%union.tree_node* %t) unnamed_addr #0 !dbg !12989 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !12993, metadata !DIExpression()), !dbg !12995
  %head = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !12996
  %0 = bitcast i32* %head to %struct.tree_statement_list_node**, !dbg !12996
  %1 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %0, align 8, !dbg !12996
  %2 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } undef, %struct.tree_statement_list_node* %1, 0, !dbg !12997
  %3 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } %2, %union.tree_node* %t, 1, !dbg !12997
  ret { %struct.tree_statement_list_node*, %union.tree_node* } %3, !dbg !12997
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tsi_one_before_end_p(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !12998 {
entry:
  %cmp = icmp eq %struct.tree_statement_list_node* %i.coerce0, null, !dbg !13003
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !13004

land.rhs:                                         ; preds = %entry
  %next = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %i.coerce0, i64 0, i32 1, !dbg !13005
  %0 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %next, align 8, !dbg !13005
  %cmp2 = icmp eq %struct.tree_statement_list_node* %0, null, !dbg !13006
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !13007
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @tsi_stmt(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !13008 {
entry:
  %stmt = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %i.coerce0, i64 0, i32 2, !dbg !13013
  %0 = load %union.tree_node*, %union.tree_node** %stmt, align 8, !dbg !13013
  ret %union.tree_node* %0, !dbg !13014
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @tsi_next(%struct.tree_stmt_iterator* %i) unnamed_addr #0 !dbg !13015 {
entry:
  call void @llvm.dbg.value(metadata %struct.tree_stmt_iterator* %i, metadata !13020, metadata !DIExpression()), !dbg !13021
  %ptr = getelementptr inbounds %struct.tree_stmt_iterator, %struct.tree_stmt_iterator* %i, i64 0, i32 0, !dbg !13022
  %0 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %ptr, align 8, !dbg !13022
  %next = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %0, i64 0, i32 1, !dbg !13023
  %1 = bitcast %struct.tree_statement_list_node** %next to i64*, !dbg !13023
  %2 = load i64, i64* %1, align 8, !dbg !13023
  %3 = bitcast %struct.tree_stmt_iterator* %i to i64*, !dbg !13024
  store i64 %2, i64* %3, align 8, !dbg !13024
  ret void, !dbg !13025
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { %struct.tree_statement_list_node*, %union.tree_node* } @tsi_last(%union.tree_node* %t) unnamed_addr #0 !dbg !13026 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !13028, metadata !DIExpression()), !dbg !13030
  %tail = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13031
  %0 = bitcast %union.tree_node** %tail to %struct.tree_statement_list_node**, !dbg !13031
  %1 = load %struct.tree_statement_list_node*, %struct.tree_statement_list_node** %0, align 8, !dbg !13031
  %2 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } undef, %struct.tree_statement_list_node* %1, 0, !dbg !13032
  %3 = insertvalue { %struct.tree_statement_list_node*, %union.tree_node* } %2, %union.tree_node* %t, 1, !dbg !13032
  ret { %struct.tree_statement_list_node*, %union.tree_node* } %3, !dbg !13032
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @tsi_stmt_ptr(%struct.tree_statement_list_node* %i.coerce0, %union.tree_node* %i.coerce1) unnamed_addr #0 !dbg !13033 {
entry:
  %stmt = getelementptr inbounds %struct.tree_statement_list_node, %struct.tree_statement_list_node* %i.coerce0, i64 0, i32 2, !dbg !13038
  ret %union.tree_node** %stmt, !dbg !13039
}

declare dso_local %union.tree_node* @create_tmp_var_raw(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @push_stmt_list() local_unnamed_addr #2

declare dso_local void @push_scope() local_unnamed_addr #2

declare dso_local void @objc_clear_super_receiver() local_unnamed_addr #2

declare dso_local %union.tree_node* @pop_scope() local_unnamed_addr #2

declare dso_local %union.tree_node* @pop_stmt_list(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_build_bind_expr(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @push_cleanup(%union.tree_node* %decl, %union.tree_node* %cleanup, i8 zeroext %eh_only) local_unnamed_addr #5 !dbg !13040 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !13044, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata %union.tree_node* %cleanup, metadata !13045, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i8 %eh_only, metadata !13046, metadata !DIExpression()), !dbg !13051
  %tobool = icmp eq i8 %eh_only, 0, !dbg !13052
  %cond = select i1 %tobool, i32 131, i32 130, !dbg !13052
  call void @llvm.dbg.value(metadata i32 %cond, metadata !13047, metadata !DIExpression()), !dbg !13051
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13053
  %0 = load i32, i32* %locus, align 8, !dbg !13053
  %call = tail call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %0, i32 %cond, i8* null, %union.tree_node* %cleanup) #6, !dbg !13054
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13048, metadata !DIExpression()), !dbg !13051
  %call1 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call) #6, !dbg !13055
  %call2 = tail call %struct.stmt_tree_s* @current_stmt_tree() #6, !dbg !13056
  %1 = bitcast %struct.stmt_tree_s* %call2 to i64**, !dbg !13056
  %2 = load i64*, i64** %1, align 8, !dbg !13056
  %bf.load = load i64, i64* %2, align 8, !dbg !13056
  %bf.cast = and i64 %bf.load, 17179869184, !dbg !13056
  %call4 = tail call %union.tree_node* @push_stmt_list() #6, !dbg !13057
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !13049, metadata !DIExpression()), !dbg !13051
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13058
  store %union.tree_node* %call4, %union.tree_node** %operands, align 8, !dbg !13059
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13060
  %bf.load7 = load i64, i64* %3, align 8, !dbg !13061
  %bf.clear8 = and i64 %bf.load7, -17179869185, !dbg !13061
  %bf.set = or i64 %bf.clear8, %bf.cast, !dbg !13061
  store i64 %bf.set, i64* %3, align 8, !dbg !13061
  ret void, !dbg !13062
}

declare dso_local %union.tree_node* @excess_precision_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @pointer_int_sum(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @pointer_diff(i32 %loc, %union.tree_node* %op0, %union.tree_node* %op1) unnamed_addr #5 !dbg !13063 {
entry:
  %as_common = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !13065, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !13066, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !13067, metadata !DIExpression()), !dbg !13083
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 43), align 8, !dbg !13084
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13068, metadata !DIExpression()), !dbg !13083
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13085
  %1 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !13085
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !13085
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !13085
  %3 = bitcast %union.tree_node** %type2 to i64**, !dbg !13085
  %4 = load i64*, i64** %3, align 8, !dbg !13085
  %bf.load = load i64, i64* %4, align 8, !dbg !13085
  %bf.lshr = lshr i64 %bf.load, 56, !dbg !13085
  call void @llvm.dbg.value(metadata i8 undef, metadata !13071, metadata !DIExpression()), !dbg !13083
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13086
  %5 = bitcast %union.tree_node** %type4 to %struct.tree_common**, !dbg !13086
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !13086
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !13086
  %7 = bitcast %union.tree_node** %type6 to i64**, !dbg !13086
  %8 = load i64*, i64** %7, align 8, !dbg !13086
  %bf.load8 = load i64, i64* %8, align 8, !dbg !13086
  %bf.lshr9 = lshr i64 %bf.load8, 56, !dbg !13086
  call void @llvm.dbg.value(metadata i8 undef, metadata !13072, metadata !DIExpression()), !dbg !13083
  %9 = bitcast i64* %4 to %union.tree_node*, !dbg !13087
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !13073, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !13078, metadata !DIExpression()), !dbg !13083
  %10 = trunc i64 %bf.lshr to i32, !dbg !13088
  %11 = trunc i64 %bf.lshr9 to i32, !dbg !13089
  %cmp = icmp eq i32 %10, %11, !dbg !13090
  br i1 %cmp, label %if.end27, label %if.then, !dbg !13091

if.then:                                          ; preds = %entry
  %conv11 = trunc i64 %bf.lshr9 to i8, !dbg !13086
  call void @llvm.dbg.value(metadata i8 %conv11, metadata !13072, metadata !DIExpression()), !dbg !13083
  %conv = trunc i64 %bf.lshr to i8, !dbg !13085
  call void @llvm.dbg.value(metadata i8 %conv, metadata !13071, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !13079, metadata !DIExpression(DW_OP_deref)), !dbg !13092
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !13093
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !13079, metadata !DIExpression(DW_OP_deref)), !dbg !13092
  %call = call fastcc zeroext i8 @addr_space_superset(i8 zeroext %conv, i8 zeroext %conv11, i8* nonnull %as_common) #7, !dbg !13094
  %tobool = icmp eq i8 %call, 0, !dbg !13094
  br i1 %tobool, label %if.then19, label %if.end, !dbg !13096

if.then19:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 3182, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !13097
  br label %if.end, !dbg !13097

if.end:                                           ; preds = %if.then, %if.then19
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !13098
  %13 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !13099
  %call24 = call fastcc %union.tree_node* @common_pointer_type(%union.tree_node* %12, %union.tree_node* %13) #7, !dbg !13100
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !13082, metadata !DIExpression()), !dbg !13092
  %call25 = call %union.tree_node* @convert(%union.tree_node* %call24, %union.tree_node* %op0) #6, !dbg !13101
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !13066, metadata !DIExpression()), !dbg !13083
  %call26 = call %union.tree_node* @convert(%union.tree_node* %call24, %union.tree_node* %op1) #6, !dbg !13102
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !13067, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata i8* %as_common, metadata !13079, metadata !DIExpression(DW_OP_deref)), !dbg !13092
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %as_common) #8, !dbg !13103
  br label %if.end27, !dbg !13104

if.end27:                                         ; preds = %entry, %if.end
  %op1.addr.0 = phi %union.tree_node* [ %call26, %if.end ], [ %op1, %entry ]
  %op0.addr.0 = phi %union.tree_node* [ %call25, %if.end ], [ %op0, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.addr.0, metadata !13066, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.addr.0, metadata !13067, metadata !DIExpression()), !dbg !13083
  %type28 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !13105
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type28, i64 0, i32 6, !dbg !13105
  %bf.load29 = load i32, i32* %precision, align 4, !dbg !13105
  %bf.clear = and i32 %bf.load29, 1023, !dbg !13105
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13107
  %14 = bitcast %union.tree_node** %type31 to %struct.tree_type**, !dbg !13107
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !13107
  %precision33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !13107
  %bf.load34 = load i32, i32* %precision33, align 4, !dbg !13107
  %bf.clear35 = and i32 %bf.load34, 1023, !dbg !13107
  %cmp36 = icmp ult i32 %bf.clear, %bf.clear35, !dbg !13108
  br i1 %cmp36, label %if.then38, label %if.end46, !dbg !13109

if.then38:                                        ; preds = %if.end27
  %16 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !13110
  %call45 = call %union.tree_node* %16(i32 %bf.clear35, i32 0) #6, !dbg !13111
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !13070, metadata !DIExpression()), !dbg !13083
  br label %if.end46, !dbg !13112

if.end46:                                         ; preds = %if.end27, %if.then38
  %inttype.0 = phi %union.tree_node* [ %call45, %if.then38 ], [ %0, %if.end27 ], !dbg !13113
  call void @llvm.dbg.value(metadata %union.tree_node* %inttype.0, metadata !13070, metadata !DIExpression()), !dbg !13083
  %bf.load48 = load i64, i64* %4, align 8, !dbg !13114
  %bf.cast502 = and i64 %bf.load48, 65535, !dbg !13116
  %cmp51 = icmp eq i64 %bf.cast502, 19, !dbg !13116
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !13117

if.then53:                                        ; preds = %if.end46
  %17 = load i32, i32* @pedantic, align 4, !dbg !13118
  %tobool54 = icmp eq i32 %17, 0, !dbg !13118
  %cond = select i1 %tobool54, i32 162, i32 834, !dbg !13118
  %call55 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 %cond, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.269, i64 0, i64 0)) #6, !dbg !13119
  %bf.load58.pre = load i64, i64* %4, align 8, !dbg !13120
  br label %if.end56, !dbg !13119

if.end56:                                         ; preds = %if.then53, %if.end46
  %bf.load58 = phi i64 [ %bf.load58.pre, %if.then53 ], [ %bf.load48, %if.end46 ], !dbg !13120
  %bf.cast603 = and i64 %bf.load58, 65535, !dbg !13122
  %cmp61 = icmp eq i64 %bf.cast603, 20, !dbg !13122
  br i1 %cmp61, label %if.then63, label %if.end67, !dbg !13123

if.then63:                                        ; preds = %if.end56
  %18 = load i32, i32* @pedantic, align 4, !dbg !13124
  %tobool64 = icmp eq i32 %18, 0, !dbg !13124
  %cond65 = select i1 %tobool64, i32 162, i32 834, !dbg !13124
  %call66 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 %cond65, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.270, i64 0, i64 0)) #6, !dbg !13125
  br label %if.end67, !dbg !13125

if.end67:                                         ; preds = %if.then63, %if.end56
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13126
  %bf.load69 = load i64, i64* %19, align 8, !dbg !13126
  %bf.cast714 = and i64 %bf.load69, 65535, !dbg !13126
  %cmp72 = icmp eq i64 %bf.cast714, 116, !dbg !13126
  br i1 %cmp72, label %land.lhs.true, label %lor.lhs.false, !dbg !13126

lor.lhs.false:                                    ; preds = %if.end67
  %cmp78 = icmp eq i64 %bf.cast714, 113, !dbg !13126
  br i1 %cmp78, label %land.lhs.true, label %if.end99, !dbg !13128

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end67
  %20 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !13129
  %precision83 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %20, i64 0, i32 6, !dbg !13129
  %bf.load84 = load i32, i32* %precision83, align 4, !dbg !13129
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13130
  %21 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !13130
  %22 = load %struct.tree_common*, %struct.tree_common** %21, align 8, !dbg !13130
  %type87 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %22, i64 0, i32 2, !dbg !13130
  %23 = bitcast %union.tree_node** %type87 to %struct.tree_type**, !dbg !13130
  %24 = load %struct.tree_type*, %struct.tree_type** %23, align 8, !dbg !13130
  %precision89 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %24, i64 0, i32 6, !dbg !13130
  %bf.load90 = load i32, i32* %precision89, align 4, !dbg !13130
  %25 = xor i32 %bf.load84, %bf.load90, !dbg !13131
  %26 = and i32 %25, 1023, !dbg !13131
  %cmp92 = icmp eq i32 %26, 0, !dbg !13131
  br i1 %cmp92, label %if.then94, label %if.end99, !dbg !13132

if.then94:                                        ; preds = %land.lhs.true
  %27 = bitcast %struct.tree_common* %22 to %union.tree_node*, !dbg !13132
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !13074, metadata !DIExpression()), !dbg !13083
  br label %if.end99, !dbg !13133

if.end99:                                         ; preds = %lor.lhs.false, %land.lhs.true, %if.then94
  %con0.0 = phi %union.tree_node* [ %27, %if.then94 ], [ %op0.addr.0, %land.lhs.true ], [ %op0.addr.0, %lor.lhs.false ], !dbg !13134
  call void @llvm.dbg.value(metadata %union.tree_node* %con0.0, metadata !13074, metadata !DIExpression()), !dbg !13083
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13135
  %bf.load101 = load i64, i64* %28, align 8, !dbg !13135
  %bf.cast1036 = and i64 %bf.load101, 65535, !dbg !13135
  %cmp104 = icmp eq i64 %bf.cast1036, 116, !dbg !13135
  br i1 %cmp104, label %land.lhs.true113, label %lor.lhs.false106, !dbg !13135

lor.lhs.false106:                                 ; preds = %if.end99
  %cmp111 = icmp eq i64 %bf.cast1036, 113, !dbg !13135
  br i1 %cmp111, label %land.lhs.true113, label %if.end136, !dbg !13137

land.lhs.true113:                                 ; preds = %lor.lhs.false106, %if.end99
  %type115 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13138
  %29 = bitcast %union.tree_node** %type115 to %struct.tree_type**, !dbg !13138
  %30 = load %struct.tree_type*, %struct.tree_type** %29, align 8, !dbg !13138
  %precision117 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %30, i64 0, i32 6, !dbg !13138
  %bf.load118 = load i32, i32* %precision117, align 4, !dbg !13138
  %operands121 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13139
  %31 = bitcast %union.tree_node** %operands121 to %struct.tree_common**, !dbg !13139
  %32 = load %struct.tree_common*, %struct.tree_common** %31, align 8, !dbg !13139
  %type124 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %32, i64 0, i32 2, !dbg !13139
  %33 = bitcast %union.tree_node** %type124 to %struct.tree_type**, !dbg !13139
  %34 = load %struct.tree_type*, %struct.tree_type** %33, align 8, !dbg !13139
  %precision126 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %34, i64 0, i32 6, !dbg !13139
  %bf.load127 = load i32, i32* %precision126, align 4, !dbg !13139
  %35 = xor i32 %bf.load118, %bf.load127, !dbg !13140
  %36 = and i32 %35, 1023, !dbg !13140
  %cmp129 = icmp eq i32 %36, 0, !dbg !13140
  br i1 %cmp129, label %if.then131, label %if.end136, !dbg !13141

if.then131:                                       ; preds = %land.lhs.true113
  %37 = bitcast %struct.tree_common* %32 to %union.tree_node*, !dbg !13141
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !13075, metadata !DIExpression()), !dbg !13083
  br label %if.end136, !dbg !13142

if.end136:                                        ; preds = %lor.lhs.false106, %land.lhs.true113, %if.then131
  %con1.0 = phi %union.tree_node* [ %37, %if.then131 ], [ %op1.addr.0, %land.lhs.true113 ], [ %op1.addr.0, %lor.lhs.false106 ], !dbg !13143
  call void @llvm.dbg.value(metadata %union.tree_node* %con1.0, metadata !13075, metadata !DIExpression()), !dbg !13083
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %con0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13144
  %bf.load138 = load i64, i64* %38, align 8, !dbg !13144
  %bf.cast1408 = and i64 %bf.load138, 65535, !dbg !13146
  %cmp141 = icmp eq i64 %bf.cast1408, 63, !dbg !13146
  br i1 %cmp141, label %if.then143, label %if.else150, !dbg !13147

if.then143:                                       ; preds = %if.end136
  %operands145 = getelementptr inbounds %union.tree_node, %union.tree_node* %con0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13148
  %arrayidx146 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands145, i64 1, !dbg !13148
  %39 = load %union.tree_node*, %union.tree_node** %operands145, align 8, !dbg !13150
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !13074, metadata !DIExpression()), !dbg !13083
  br label %if.end151, !dbg !13151

if.else150:                                       ; preds = %if.end136
  br label %if.end151

if.end151:                                        ; preds = %if.else150, %if.then143
  %con0.1 = phi %union.tree_node* [ %39, %if.then143 ], [ %con0.0, %if.else150 ], !dbg !13083
  %lit0.0.in = phi %union.tree_node** [ %arrayidx146, %if.then143 ], [ getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), %if.else150 ]
  %lit0.0 = load %union.tree_node*, %union.tree_node** %lit0.0.in, align 8, !dbg !13152
  call void @llvm.dbg.value(metadata %union.tree_node* %lit0.0, metadata !13076, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %union.tree_node* %con0.1, metadata !13074, metadata !DIExpression()), !dbg !13083
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %con1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13153
  %bf.load153 = load i64, i64* %40, align 8, !dbg !13153
  %bf.cast1559 = and i64 %bf.load153, 65535, !dbg !13155
  %cmp156 = icmp eq i64 %bf.cast1559, 63, !dbg !13155
  br i1 %cmp156, label %if.then158, label %if.else165, !dbg !13156

if.then158:                                       ; preds = %if.end151
  %operands160 = getelementptr inbounds %union.tree_node, %union.tree_node* %con1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13157
  %arrayidx161 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands160, i64 1, !dbg !13157
  %41 = load %union.tree_node*, %union.tree_node** %operands160, align 8, !dbg !13159
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !13075, metadata !DIExpression()), !dbg !13083
  br label %if.end166, !dbg !13160

if.else165:                                       ; preds = %if.end151
  br label %if.end166

if.end166:                                        ; preds = %if.else165, %if.then158
  %con1.1 = phi %union.tree_node* [ %41, %if.then158 ], [ %con1.0, %if.else165 ], !dbg !13083
  %lit1.0.in = phi %union.tree_node** [ %arrayidx161, %if.then158 ], [ getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), %if.else165 ]
  %lit1.0 = load %union.tree_node*, %union.tree_node** %lit1.0.in, align 8, !dbg !13161
  call void @llvm.dbg.value(metadata %union.tree_node* %lit1.0, metadata !13077, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %union.tree_node* %con1.1, metadata !13075, metadata !DIExpression()), !dbg !13083
  %call167 = call i32 @operand_equal_p(%union.tree_node* %con0.1, %union.tree_node* %con1.1, i32 0) #6, !dbg !13162
  %tobool168 = icmp ne i32 %call167, 0, !dbg !13162
  %spec.select = select i1 %tobool168, %union.tree_node* %lit1.0, %union.tree_node* %op1.addr.0, !dbg !13164
  %spec.select1 = select i1 %tobool168, %union.tree_node* %lit0.0, %union.tree_node* %op0.addr.0, !dbg !13164
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select1, metadata !13066, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !13067, metadata !DIExpression()), !dbg !13083
  %call171 = call %union.tree_node* @convert(%union.tree_node* %inttype.0, %union.tree_node* %spec.select1) #6, !dbg !13165
  %call172 = call %union.tree_node* @convert(%union.tree_node* %inttype.0, %union.tree_node* %spec.select) #6, !dbg !13166
  %call173 = call %union.tree_node* @build_binary_op(i32 %loc, i32 64, %union.tree_node* %call171, %union.tree_node* %call172, i32 0) #7, !dbg !13167
  call void @llvm.dbg.value(metadata %union.tree_node* %call173, metadata !13066, metadata !DIExpression()), !dbg !13083
  %42 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !13168
  %type177 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %42, i64 0, i32 2, !dbg !13168
  %43 = bitcast %union.tree_node** %type177 to %struct.tree_type**, !dbg !13168
  %44 = load %struct.tree_type*, %struct.tree_type** %43, align 8, !dbg !13168
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %44, i64 0, i32 2, !dbg !13168
  %45 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !13168
  %cmp179 = icmp eq %union.tree_node* %45, null, !dbg !13168
  br i1 %cmp179, label %lor.lhs.false181, label %if.end193, !dbg !13168

lor.lhs.false181:                                 ; preds = %if.end166
  %46 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %44, i64 0, i32 0, i32 0, i32 0, !dbg !13168
  %bf.load187 = load i64, i64* %46, align 8, !dbg !13168
  %bf.cast18910 = and i64 %bf.load187, 65535, !dbg !13168
  %cmp190 = icmp eq i64 %bf.cast18910, 19, !dbg !13168
  br i1 %cmp190, label %if.end193, label %if.then192, !dbg !13170

if.then192:                                       ; preds = %lor.lhs.false181
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.186, i64 0, i64 0)) #6, !dbg !13171
  br label %if.end193, !dbg !13171

if.end193:                                        ; preds = %if.end166, %if.then192, %lor.lhs.false181
  %call194 = call fastcc %union.tree_node* @c_size_in_bytes(%union.tree_node* %9) #7, !dbg !13172
  call void @llvm.dbg.value(metadata %union.tree_node* %call194, metadata !13067, metadata !DIExpression()), !dbg !13083
  %call195 = call %union.tree_node* @convert(%union.tree_node* %inttype.0, %union.tree_node* %call194) #6, !dbg !13173
  %call196 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 76, %union.tree_node* %inttype.0, %union.tree_node* %call173, %union.tree_node* %call195) #6, !dbg !13173
  call void @llvm.dbg.value(metadata %union.tree_node* %call196, metadata !13069, metadata !DIExpression()), !dbg !13083
  %call197 = call %union.tree_node* @convert(%union.tree_node* %0, %union.tree_node* %call196) #6, !dbg !13174
  ret %union.tree_node* %call197, !dbg !13175
}

declare dso_local void @warn_for_div_by_zero(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_common_truthvalue_conversion(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @decl_with_nonnull_addr_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @same_scalar_type_ignoring_signedness(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @binary_op_error(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @convert_and_check(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @shorten_binary_op(%union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_narrower(%union.tree_node*, i32*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_common_signed_or_unsigned_type(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @shorten_compare(%union.tree_node**, %union.tree_node**, %union.tree_node**, i32*) local_unnamed_addr #2

declare dso_local void @warn_for_sign_compare(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_initializer_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_expr_to_decl(%union.tree_node* %expr, i8* %tc, i8* %se) local_unnamed_addr #5 !dbg !13176 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !13180, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8* %tc, metadata !13181, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8* %se, metadata !13182, metadata !DIExpression()), !dbg !13186
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13187
  %bf.load = load i64, i64* %0, align 8, !dbg !13187
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13188
  %cmp = icmp eq i64 %bf.cast1, 119, !dbg !13188
  br i1 %cmp, label %if.then, label %return, !dbg !13189

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13190
  %1 = bitcast %union.tree_node** %operands to %struct.tree_exp**, !dbg !13190
  %2 = load %struct.tree_exp*, %struct.tree_exp** %1, align 8, !dbg !13190
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 3, i64 0, !dbg !13190
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !13190
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13183, metadata !DIExpression()), !dbg !13191
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13192
  %bf.load5 = load i64, i64* %4, align 8, !dbg !13192
  %bf.cast72 = and i64 %bf.load5, 67108864, !dbg !13192
  %tobool = icmp eq i64 %bf.cast72, 0, !dbg !13192
  br i1 %tobool, label %if.then8, label %return, !dbg !13194

if.then8:                                         ; preds = %if.then
  store i8 1, i8* %se, align 1, !dbg !13195
  br label %return, !dbg !13196

return:                                           ; preds = %if.then, %entry, %if.then8
  %retval.0 = phi %union.tree_node* [ %3, %if.then8 ], [ %3, %if.then ], [ %expr, %entry ], !dbg !13197
  ret %union.tree_node* %retval.0, !dbg !13198
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_begin_omp_parallel() local_unnamed_addr #5 !dbg !13199 {
entry:
  tail call void @keep_next_level() #6, !dbg !13202
  %call = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #7, !dbg !13203
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13201, metadata !DIExpression()), !dbg !13204
  ret %union.tree_node* %call, !dbg !13205
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_omp_parallel(i32 %loc, %union.tree_node* %clauses, %union.tree_node* %block) local_unnamed_addr #5 !dbg !13206 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !13208, metadata !DIExpression()), !dbg !13212
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !13209, metadata !DIExpression()), !dbg !13212
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !13210, metadata !DIExpression()), !dbg !13212
  %call = tail call %union.tree_node* @c_end_compound_stmt(i32 %loc, %union.tree_node* %block, i8 zeroext 1) #7, !dbg !13213
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13210, metadata !DIExpression()), !dbg !13212
  %call1 = tail call %union.tree_node* @make_node_stat(i32 153) #6, !dbg !13214
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !13211, metadata !DIExpression()), !dbg !13212
  %0 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !13215
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13216
  %1 = bitcast %union.tree_node** %type to i64*, !dbg !13217
  store i64 %0, i64* %1, align 8, !dbg !13217
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13218
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !13218
  store %union.tree_node* %clauses, %union.tree_node** %arrayidx, align 8, !dbg !13219
  store %union.tree_node* %call, %union.tree_node** %operands, align 8, !dbg !13220
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13221
  store i32 %loc, i32* %2, align 8, !dbg !13221
  %call6 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call1) #6, !dbg !13222
  ret %union.tree_node* %call6, !dbg !13223
}

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_begin_omp_task() local_unnamed_addr #5 !dbg !13224 {
entry:
  tail call void @keep_next_level() #6, !dbg !13227
  %call = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #7, !dbg !13228
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13226, metadata !DIExpression()), !dbg !13229
  ret %union.tree_node* %call, !dbg !13230
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_omp_task(i32 %loc, %union.tree_node* %clauses, %union.tree_node* %block) local_unnamed_addr #5 !dbg !13231 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !13233, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !13234, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !13235, metadata !DIExpression()), !dbg !13237
  %call = tail call %union.tree_node* @c_end_compound_stmt(i32 %loc, %union.tree_node* %block, i8 zeroext 1) #7, !dbg !13238
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !13235, metadata !DIExpression()), !dbg !13237
  %call1 = tail call %union.tree_node* @make_node_stat(i32 154) #6, !dbg !13239
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !13236, metadata !DIExpression()), !dbg !13237
  %0 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !13240
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13241
  %1 = bitcast %union.tree_node** %type to i64*, !dbg !13242
  store i64 %0, i64* %1, align 8, !dbg !13242
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !13243
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !13243
  store %union.tree_node* %clauses, %union.tree_node** %arrayidx, align 8, !dbg !13244
  store %union.tree_node* %call, %union.tree_node** %operands, align 8, !dbg !13245
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13246
  store i32 %loc, i32* %2, align 8, !dbg !13246
  %call6 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call1) #6, !dbg !13247
  ret %union.tree_node* %call6, !dbg !13248
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_finish_omp_clauses(%union.tree_node* %clauses) local_unnamed_addr #5 !dbg !13249 {
entry:
  %clauses.addr = alloca %union.tree_node*, align 8
  %generic_head = alloca %struct.bitmap_head_def, align 8
  %firstprivate_head = alloca %struct.bitmap_head_def, align 8
  %lastprivate_head = alloca %struct.bitmap_head_def, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !13251, metadata !DIExpression()), !dbg !13278
  store %union.tree_node* %clauses, %union.tree_node** %clauses.addr, align 8
  %0 = bitcast %struct.bitmap_head_def* %generic_head to i8*, !dbg !13279
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !13279
  %1 = bitcast %struct.bitmap_head_def* %firstprivate_head to i8*, !dbg !13279
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !13279
  %2 = bitcast %struct.bitmap_head_def* %lastprivate_head to i8*, !dbg !13279
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !13279
  call void @llvm.dbg.value(metadata %union.tree_node** %clauses.addr, metadata !13258, metadata !DIExpression()), !dbg !13278
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* null) #6, !dbg !13280
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %generic_head, metadata !13252, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %generic_head, %struct.bitmap_obstack* nonnull @bitmap_default_obstack) #7, !dbg !13281
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %firstprivate_head, metadata !13254, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %firstprivate_head, %struct.bitmap_obstack* nonnull @bitmap_default_obstack) #7, !dbg !13282
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lastprivate_head, metadata !13255, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* nonnull %lastprivate_head, %struct.bitmap_obstack* nonnull @bitmap_default_obstack) #7, !dbg !13283
  call void @llvm.dbg.value(metadata %union.tree_node** %clauses.addr, metadata !13258, metadata !DIExpression()), !dbg !13278
  br label %for.cond, !dbg !13284

for.cond:                                         ; preds = %cleanup, %entry
  %c.0 = phi %union.tree_node* [ %clauses, %entry ], [ %c.0.pre, %cleanup ], !dbg !13285
  %name.0 = phi i8* [ undef, %entry ], [ %name.3, %cleanup ]
  %pc.0 = phi %union.tree_node** [ %clauses.addr, %entry ], [ %pc.2, %cleanup ], !dbg !13286
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0, metadata !13256, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata %union.tree_node** %pc.0, metadata !13258, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8* %name.0, metadata !13259, metadata !DIExpression()), !dbg !13278
  %tobool = icmp eq %union.tree_node* %c.0, null, !dbg !13287
  br i1 %tobool, label %for.end, label %for.body, !dbg !13287

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !13260, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 0, metadata !13264, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 0, metadata !13265, metadata !DIExpression()), !dbg !13288
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13289
  %4 = load i32, i32* %3, align 4, !dbg !13289
  switch i32 %4, label %sw.default222 [
    i32 2, label %check_dup_generic
    i32 1, label %sw.bb1
    i32 5, label %sw.bb2
    i32 7, label %sw.bb90
    i32 6, label %sw.bb91
    i32 3, label %sw.bb146
    i32 4, label %sw.bb183
    i32 8, label %sw.bb220
    i32 9, label %sw.bb220
    i32 10, label %sw.bb220
    i32 11, label %sw.bb220
    i32 12, label %sw.bb220
    i32 13, label %sw.bb220
    i32 15, label %sw.bb220
    i32 14, label %sw.bb220
  ], !dbg !13290

sw.bb1:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0), metadata !13259, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8 1, metadata !13264, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 1, metadata !13265, metadata !DIExpression()), !dbg !13288
  br label %check_dup_generic, !dbg !13291

sw.bb2:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i64 0, i64 0), metadata !13259, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8 1, metadata !13265, metadata !DIExpression()), !dbg !13288
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13292
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !13292
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !13292
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !13257, metadata !DIExpression()), !dbg !13278
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13293
  %6 = bitcast %union.tree_node** %type to i64**, !dbg !13293
  %7 = load i64*, i64** %6, align 8, !dbg !13293
  %bf.load = load i64, i64* %7, align 8, !dbg !13293
  %bf.cast10 = and i64 %bf.load, 65535, !dbg !13293
  %cmp = icmp eq i64 %bf.cast10, 15, !dbg !13293
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13293

lor.lhs.false:                                    ; preds = %sw.bb2
  %cmp10 = icmp eq i64 %bf.cast10, 16, !dbg !13293
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !13293

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp18 = icmp eq i64 %bf.cast10, 17, !dbg !13293
  br i1 %cmp18, label %if.then, label %lor.lhs.false19, !dbg !13293

lor.lhs.false19:                                  ; preds = %lor.lhs.false11
  %cmp26 = icmp eq i64 %bf.cast10, 18, !dbg !13293
  br i1 %cmp26, label %if.then, label %lor.lhs.false27, !dbg !13294

lor.lhs.false27:                                  ; preds = %lor.lhs.false19
  %cmp34 = icmp eq i64 %bf.cast10, 10, !dbg !13295
  br i1 %cmp34, label %if.then, label %lor.lhs.false35, !dbg !13295

lor.lhs.false35:                                  ; preds = %lor.lhs.false27
  %cmp42 = icmp eq i64 %bf.cast10, 12, !dbg !13295
  br i1 %cmp42, label %if.then, label %if.else, !dbg !13296

if.then:                                          ; preds = %lor.lhs.false35, %lor.lhs.false27, %lor.lhs.false19, %lor.lhs.false11, %lor.lhs.false, %sw.bb2
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13297
  %9 = load i32, i32* %8, align 8, !dbg !13297
  call void (i32, i8*, ...) @error_at(i32 %9, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.145, i64 0, i64 0), %union.tree_node* %5) #6, !dbg !13299
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %check_dup_generic, !dbg !13300

if.else:                                          ; preds = %lor.lhs.false35
  %cmp50 = icmp eq i64 %bf.cast10, 9, !dbg !13301
  br i1 %cmp50, label %if.then76, label %lor.lhs.false51, !dbg !13301

lor.lhs.false51:                                  ; preds = %if.else
  %cmp58 = icmp eq i64 %bf.cast10, 13, !dbg !13301
  br i1 %cmp58, label %land.lhs.true, label %lor.lhs.false59, !dbg !13301

lor.lhs.false59:                                  ; preds = %lor.lhs.false51
  %cmp66 = icmp eq i64 %bf.cast10, 14, !dbg !13301
  br i1 %cmp66, label %land.lhs.true, label %check_dup_generic, !dbg !13301

land.lhs.true:                                    ; preds = %lor.lhs.false59, %lor.lhs.false51
  %type70 = getelementptr inbounds i64, i64* %7, i64 2, !dbg !13301
  %10 = bitcast i64* %type70 to i64**, !dbg !13301
  %11 = load i64*, i64** %10, align 8, !dbg !13301
  %bf.load72 = load i64, i64* %11, align 8, !dbg !13301
  %bf.cast7419 = and i64 %bf.load72, 65535, !dbg !13301
  %cmp75 = icmp eq i64 %bf.cast7419, 9, !dbg !13301
  br i1 %cmp75, label %if.then76, label %check_dup_generic, !dbg !13302

if.then76:                                        ; preds = %land.lhs.true, %if.else
  %subcode = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13303
  %reduction_code = bitcast %union.tree_node** %subcode to i32*, !dbg !13303
  %12 = load i32, i32* %reduction_code, align 8, !dbg !13303
  call void @llvm.dbg.value(metadata i32 %12, metadata !13266, metadata !DIExpression()), !dbg !13304
  call void @llvm.dbg.value(metadata i8* null, metadata !13271, metadata !DIExpression()), !dbg !13304
  switch i32 %12, label %sw.default [
    i32 63, label %sw.epilog
    i32 65, label %sw.epilog
    i32 64, label %sw.epilog
    i32 89, label %sw.bb79
    i32 88, label %sw.bb80
    i32 87, label %sw.bb81
    i32 91, label %sw.bb82
    i32 92, label %sw.bb83
  ], !dbg !13305

sw.bb79:                                          ; preds = %if.then76
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.146, i64 0, i64 0), metadata !13271, metadata !DIExpression()), !dbg !13304
  br label %sw.epilog, !dbg !13306

sw.bb80:                                          ; preds = %if.then76
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i64 0, i64 0), metadata !13271, metadata !DIExpression()), !dbg !13304
  br label %sw.epilog, !dbg !13308

sw.bb81:                                          ; preds = %if.then76
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.148, i64 0, i64 0), metadata !13271, metadata !DIExpression()), !dbg !13304
  br label %sw.epilog, !dbg !13309

sw.bb82:                                          ; preds = %if.then76
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i64 0, i64 0), metadata !13271, metadata !DIExpression()), !dbg !13304
  br label %sw.epilog, !dbg !13310

sw.bb83:                                          ; preds = %if.then76
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i64 0, i64 0), metadata !13271, metadata !DIExpression()), !dbg !13304
  br label %sw.epilog, !dbg !13311

sw.default:                                       ; preds = %if.then76
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 10085, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !13312
  br label %sw.epilog, !dbg !13313

sw.epilog:                                        ; preds = %if.then76, %if.then76, %if.then76, %sw.default, %sw.bb83, %sw.bb82, %sw.bb81, %sw.bb80, %sw.bb79
  %r_name.0 = phi i8* [ null, %sw.default ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i64 0, i64 0), %sw.bb83 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i64 0, i64 0), %sw.bb82 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.148, i64 0, i64 0), %sw.bb81 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i64 0, i64 0), %sw.bb80 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.146, i64 0, i64 0), %sw.bb79 ], [ null, %if.then76 ], [ null, %if.then76 ], [ null, %if.then76 ], !dbg !13304
  call void @llvm.dbg.value(metadata i8* %r_name.0, metadata !13271, metadata !DIExpression()), !dbg !13304
  %tobool84 = icmp eq i8* %r_name.0, null, !dbg !13314
  br i1 %tobool84, label %check_dup_generic, label %if.then85, !dbg !13316

if.then85:                                        ; preds = %sw.epilog
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13317
  %14 = load i32, i32* %13, align 8, !dbg !13317
  call void (i32, i8*, ...) @error_at(i32 %14, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.151, i64 0, i64 0), %union.tree_node* %5, i8* nonnull %r_name.0) #6, !dbg !13319
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %check_dup_generic, !dbg !13320

sw.bb90:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.152, i64 0, i64 0), metadata !13259, metadata !DIExpression()), !dbg !13278
  br label %check_dup_generic, !dbg !13321

sw.bb91:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.153, i64 0, i64 0), metadata !13259, metadata !DIExpression()), !dbg !13278
  %ops93 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13322
  %arrayidx94 = bitcast i40* %ops93 to %union.tree_node**, !dbg !13322
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx94, align 8, !dbg !13322
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !13257, metadata !DIExpression()), !dbg !13278
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13323
  %bf.load96 = load i64, i64* %16, align 8, !dbg !13323
  %bf.cast986 = and i64 %bf.load96, 65535, !dbg !13325
  %cmp99 = icmp eq i64 %bf.cast986, 32, !dbg !13325
  br i1 %cmp99, label %lor.lhs.false100, label %if.then104, !dbg !13326

lor.lhs.false100:                                 ; preds = %sw.bb91
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !13327
  %17 = bitcast i24* %tls_model to i32*, !dbg !13327
  %bf.load101 = load i32, i32* %17, align 8, !dbg !13327
  %bf.clear102 = and i32 %bf.load101, 49152, !dbg !13327
  %cmp103 = icmp eq i32 %bf.clear102, 0, !dbg !13327
  br i1 %cmp103, label %if.then104, label %check_dup_generic, !dbg !13328

if.then104:                                       ; preds = %lor.lhs.false100, %sw.bb91
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13329
  %19 = load i32, i32* %18, align 8, !dbg !13329
  call void (i32, i8*, ...) @error_at(i32 %19, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.154, i64 0, i64 0), %union.tree_node* %15) #6, !dbg !13331
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %check_dup_generic, !dbg !13332

check_dup_generic:                                ; preds = %sw.epilog, %lor.lhs.false100, %if.then104, %if.then, %if.then85, %land.lhs.true, %lor.lhs.false59, %for.body, %sw.bb90, %sw.bb1
  %need_implicitly_determined.0 = phi i8 [ 0, %sw.bb90 ], [ 1, %sw.bb1 ], [ 1, %for.body ], [ 1, %lor.lhs.false59 ], [ 1, %land.lhs.true ], [ 1, %if.then85 ], [ 1, %sw.epilog ], [ 1, %if.then ], [ 0, %if.then104 ], [ 0, %lor.lhs.false100 ], !dbg !13288
  %need_complete.0 = phi i8 [ 0, %sw.bb90 ], [ 1, %sw.bb1 ], [ 0, %for.body ], [ 0, %lor.lhs.false59 ], [ 0, %land.lhs.true ], [ 0, %if.then85 ], [ 0, %sw.epilog ], [ 0, %if.then ], [ 0, %if.then104 ], [ 0, %lor.lhs.false100 ], !dbg !13288
  %remove.4 = phi i8 [ 0, %sw.bb90 ], [ 0, %sw.bb1 ], [ 0, %for.body ], [ 0, %lor.lhs.false59 ], [ 0, %land.lhs.true ], [ 1, %if.then85 ], [ 0, %sw.epilog ], [ 1, %if.then ], [ 1, %if.then104 ], [ 0, %lor.lhs.false100 ], !dbg !13288
  %name.1 = phi i8* [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.152, i64 0, i64 0), %sw.bb90 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0), %sw.bb1 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i64 0, i64 0), %for.body ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i64 0, i64 0), %lor.lhs.false59 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i64 0, i64 0), %land.lhs.true ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i64 0, i64 0), %if.then85 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i64 0, i64 0), %sw.epilog ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.144, i64 0, i64 0), %if.then ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.153, i64 0, i64 0), %if.then104 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.153, i64 0, i64 0), %lor.lhs.false100 ], !dbg !13333
  call void @llvm.dbg.value(metadata i8* %name.1, metadata !13259, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8 %remove.4, metadata !13260, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 %need_complete.0, metadata !13264, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 %need_implicitly_determined.0, metadata !13265, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.label(metadata !13277), !dbg !13334
  %ops109 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13335
  %arrayidx110 = bitcast i40* %ops109 to %union.tree_node**, !dbg !13335
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx110, align 8, !dbg !13335
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !13257, metadata !DIExpression()), !dbg !13278
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13336
  %bf.load112 = load i64, i64* %21, align 8, !dbg !13336
  %bf.cast1147 = and i64 %bf.load112, 65535, !dbg !13338
  %cmp115 = icmp eq i64 %bf.cast1147, 32, !dbg !13338
  br i1 %cmp115, label %if.else125, label %land.lhs.true116, !dbg !13339

land.lhs.true116:                                 ; preds = %check_dup_generic
  %cmp121 = icmp eq i64 %bf.cast1147, 34, !dbg !13340
  br i1 %cmp121, label %if.else125, label %if.then122, !dbg !13341

if.then122:                                       ; preds = %land.lhs.true116
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13342
  %23 = load i32, i32* %22, align 8, !dbg !13342
  call void (i32, i8*, ...) @error_at(i32 %23, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.155, i64 0, i64 0), %union.tree_node* %20, i8* %name.1) #6, !dbg !13344
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %sw.epilog223, !dbg !13345

if.else125:                                       ; preds = %land.lhs.true116, %check_dup_generic
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13346
  %24 = load i32, i32* %uid, align 4, !dbg !13346
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %generic_head, metadata !13252, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %generic_head, i32 %24) #6, !dbg !13348
  %tobool126 = icmp eq i32 %call, 0, !dbg !13348
  br i1 %tobool126, label %lor.lhs.false127, label %if.then137, !dbg !13349

lor.lhs.false127:                                 ; preds = %if.else125
  %25 = load i32, i32* %uid, align 4, !dbg !13350
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %firstprivate_head, metadata !13254, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call130 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %firstprivate_head, i32 %25) #6, !dbg !13351
  %tobool131 = icmp eq i32 %call130, 0, !dbg !13351
  br i1 %tobool131, label %lor.lhs.false132, label %if.then137, !dbg !13352

lor.lhs.false132:                                 ; preds = %lor.lhs.false127
  %26 = load i32, i32* %uid, align 4, !dbg !13353
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lastprivate_head, metadata !13255, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call135 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %lastprivate_head, i32 %26) #6, !dbg !13354
  %tobool136 = icmp eq i32 %call135, 0, !dbg !13354
  br i1 %tobool136, label %if.else140, label %if.then137, !dbg !13355

if.then137:                                       ; preds = %lor.lhs.false132, %lor.lhs.false127, %if.else125
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13356
  %28 = load i32, i32* %27, align 8, !dbg !13356
  call void (i32, i8*, ...) @error_at(i32 %28, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.156, i64 0, i64 0), %union.tree_node* %20) #6, !dbg !13358
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %sw.epilog223, !dbg !13359

if.else140:                                       ; preds = %lor.lhs.false132
  %29 = load i32, i32* %uid, align 4, !dbg !13360
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %generic_head, metadata !13252, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call143 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %generic_head, i32 %29) #6, !dbg !13361
  br label %sw.epilog223

sw.bb146:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i64 0, i64 0), metadata !13259, metadata !DIExpression()), !dbg !13278
  %ops148 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13362
  %arrayidx149 = bitcast i40* %ops148 to %union.tree_node**, !dbg !13362
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx149, align 8, !dbg !13362
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !13257, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8 1, metadata !13264, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 1, metadata !13265, metadata !DIExpression()), !dbg !13288
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13363
  %bf.load151 = load i64, i64* %31, align 8, !dbg !13363
  %bf.cast1534 = and i64 %bf.load151, 65535, !dbg !13365
  %cmp154 = icmp eq i64 %bf.cast1534, 32, !dbg !13365
  br i1 %cmp154, label %if.else164, label %land.lhs.true155, !dbg !13366

land.lhs.true155:                                 ; preds = %sw.bb146
  %cmp160 = icmp eq i64 %bf.cast1534, 34, !dbg !13367
  br i1 %cmp160, label %if.else164, label %if.then161, !dbg !13368

if.then161:                                       ; preds = %land.lhs.true155
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13369
  %33 = load i32, i32* %32, align 8, !dbg !13369
  call void (i32, i8*, ...) @error_at(i32 %33, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.158, i64 0, i64 0), %union.tree_node* %30) #6, !dbg !13371
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %sw.epilog223, !dbg !13372

if.else164:                                       ; preds = %land.lhs.true155, %sw.bb146
  %uid166 = getelementptr inbounds %union.tree_node, %union.tree_node* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13373
  %34 = load i32, i32* %uid166, align 4, !dbg !13373
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %generic_head, metadata !13252, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call167 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %generic_head, i32 %34) #6, !dbg !13375
  %tobool168 = icmp eq i32 %call167, 0, !dbg !13375
  br i1 %tobool168, label %lor.lhs.false169, label %if.then174, !dbg !13376

lor.lhs.false169:                                 ; preds = %if.else164
  %35 = load i32, i32* %uid166, align 4, !dbg !13377
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %firstprivate_head, metadata !13254, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call172 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %firstprivate_head, i32 %35) #6, !dbg !13378
  %tobool173 = icmp eq i32 %call172, 0, !dbg !13378
  br i1 %tobool173, label %if.else177, label %if.then174, !dbg !13379

if.then174:                                       ; preds = %lor.lhs.false169, %if.else164
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13380
  %37 = load i32, i32* %36, align 8, !dbg !13380
  call void (i32, i8*, ...) @error_at(i32 %37, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.156, i64 0, i64 0), %union.tree_node* %30) #6, !dbg !13382
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %sw.epilog223, !dbg !13383

if.else177:                                       ; preds = %lor.lhs.false169
  %38 = load i32, i32* %uid166, align 4, !dbg !13384
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %firstprivate_head, metadata !13254, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call180 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %firstprivate_head, i32 %38) #6, !dbg !13385
  br label %sw.epilog223

sw.bb183:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0), metadata !13259, metadata !DIExpression()), !dbg !13278
  %ops185 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13386
  %arrayidx186 = bitcast i40* %ops185 to %union.tree_node**, !dbg !13386
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx186, align 8, !dbg !13386
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !13257, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8 1, metadata !13264, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 1, metadata !13265, metadata !DIExpression()), !dbg !13288
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13387
  %bf.load188 = load i64, i64* %40, align 8, !dbg !13387
  %bf.cast1901 = and i64 %bf.load188, 65535, !dbg !13389
  %cmp191 = icmp eq i64 %bf.cast1901, 32, !dbg !13389
  br i1 %cmp191, label %if.else201, label %land.lhs.true192, !dbg !13390

land.lhs.true192:                                 ; preds = %sw.bb183
  %cmp197 = icmp eq i64 %bf.cast1901, 34, !dbg !13391
  br i1 %cmp197, label %if.else201, label %if.then198, !dbg !13392

if.then198:                                       ; preds = %land.lhs.true192
  %41 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13393
  %42 = load i32, i32* %41, align 8, !dbg !13393
  call void (i32, i8*, ...) @error_at(i32 %42, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.160, i64 0, i64 0), %union.tree_node* %39) #6, !dbg !13395
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %sw.epilog223, !dbg !13396

if.else201:                                       ; preds = %land.lhs.true192, %sw.bb183
  %uid203 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13397
  %43 = load i32, i32* %uid203, align 4, !dbg !13397
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %generic_head, metadata !13252, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call204 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %generic_head, i32 %43) #6, !dbg !13399
  %tobool205 = icmp eq i32 %call204, 0, !dbg !13399
  br i1 %tobool205, label %lor.lhs.false206, label %if.then211, !dbg !13400

lor.lhs.false206:                                 ; preds = %if.else201
  %44 = load i32, i32* %uid203, align 4, !dbg !13401
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lastprivate_head, metadata !13255, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call209 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %lastprivate_head, i32 %44) #6, !dbg !13402
  %tobool210 = icmp eq i32 %call209, 0, !dbg !13402
  br i1 %tobool210, label %if.else214, label %if.then211, !dbg !13403

if.then211:                                       ; preds = %lor.lhs.false206, %if.else201
  %45 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13404
  %46 = load i32, i32* %45, align 8, !dbg !13404
  call void (i32, i8*, ...) @error_at(i32 %46, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.156, i64 0, i64 0), %union.tree_node* %39) #6, !dbg !13406
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %sw.epilog223, !dbg !13407

if.else214:                                       ; preds = %lor.lhs.false206
  %47 = load i32, i32* %uid203, align 4, !dbg !13408
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %lastprivate_head, metadata !13255, metadata !DIExpression(DW_OP_deref)), !dbg !13278
  %call217 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %lastprivate_head, i32 %47) #6, !dbg !13409
  br label %sw.epilog223

sw.bb220:                                         ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13410
  call void @llvm.dbg.value(metadata %union.tree_node** %chain, metadata !13258, metadata !DIExpression()), !dbg !13278
  br label %cleanup, !dbg !13411

sw.default222:                                    ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 10188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !13412
  br label %sw.epilog223, !dbg !13413

sw.epilog223:                                     ; preds = %if.then198, %if.else214, %if.then211, %if.then161, %if.else177, %if.then174, %if.then122, %if.else140, %if.then137, %sw.default222
  %need_implicitly_determined.1 = phi i8 [ 0, %sw.default222 ], [ %need_implicitly_determined.0, %if.then137 ], [ %need_implicitly_determined.0, %if.else140 ], [ %need_implicitly_determined.0, %if.then122 ], [ 1, %if.then174 ], [ 1, %if.else177 ], [ 1, %if.then161 ], [ 1, %if.then211 ], [ 1, %if.else214 ], [ 1, %if.then198 ], !dbg !13288
  %need_complete.1 = phi i8 [ 0, %sw.default222 ], [ %need_complete.0, %if.then137 ], [ %need_complete.0, %if.else140 ], [ %need_complete.0, %if.then122 ], [ 1, %if.then174 ], [ 1, %if.else177 ], [ 1, %if.then161 ], [ 1, %if.then211 ], [ 1, %if.else214 ], [ 1, %if.then198 ], !dbg !13288
  %remove.11 = phi i8 [ 0, %sw.default222 ], [ 1, %if.then137 ], [ %remove.4, %if.else140 ], [ 1, %if.then122 ], [ 1, %if.then174 ], [ 0, %if.else177 ], [ 1, %if.then161 ], [ 1, %if.then211 ], [ 0, %if.else214 ], [ 1, %if.then198 ], !dbg !13288
  %name.2 = phi i8* [ %name.0, %sw.default222 ], [ %name.1, %if.then137 ], [ %name.1, %if.else140 ], [ %name.1, %if.then122 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i64 0, i64 0), %if.then174 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i64 0, i64 0), %if.else177 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.157, i64 0, i64 0), %if.then161 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0), %if.then211 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0), %if.else214 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0), %if.then198 ]
  call void @llvm.dbg.value(metadata i8* %name.2, metadata !13259, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8 %remove.11, metadata !13260, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 %need_complete.1, metadata !13264, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 %need_implicitly_determined.1, metadata !13265, metadata !DIExpression()), !dbg !13288
  %tobool224 = icmp eq i8 %remove.11, 0, !dbg !13414
  br i1 %tobool224, label %if.then225, label %if.end264, !dbg !13415

if.then225:                                       ; preds = %sw.epilog223
  %ops227 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13416
  %arrayidx228 = bitcast i40* %ops227 to %union.tree_node**, !dbg !13416
  %48 = load %union.tree_node*, %union.tree_node** %arrayidx228, align 8, !dbg !13416
  call void @llvm.dbg.value(metadata %union.tree_node* %48, metadata !13257, metadata !DIExpression()), !dbg !13278
  %tobool229 = icmp eq i8 %need_complete.1, 0, !dbg !13417
  br i1 %tobool229, label %if.end235, label %if.then230, !dbg !13419

if.then230:                                       ; preds = %if.then225
  %call231 = call %union.tree_node* @require_complete_type(%union.tree_node* %48) #7, !dbg !13420
  call void @llvm.dbg.value(metadata %union.tree_node* %call231, metadata !13257, metadata !DIExpression()), !dbg !13278
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13422
  %cmp232 = icmp eq %union.tree_node* %call231, %49, !dbg !13424
  %spec.select = zext i1 %cmp232 to i8, !dbg !13425
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %if.end235, !dbg !13426

if.end235:                                        ; preds = %if.then225, %if.then230
  %remove.13 = phi i8 [ %spec.select, %if.then230 ], [ 0, %if.then225 ], !dbg !13288
  %t.0 = phi %union.tree_node* [ %call231, %if.then230 ], [ %48, %if.then225 ], !dbg !13427
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !13257, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8 %remove.13, metadata !13260, metadata !DIExpression()), !dbg !13288
  %tobool236 = icmp eq i8 %need_implicitly_determined.1, 0, !dbg !13428
  br i1 %tobool236, label %if.end264, label %if.then237, !dbg !13429

if.then237:                                       ; preds = %if.end235
  call void @llvm.dbg.value(metadata i8* null, metadata !13272, metadata !DIExpression()), !dbg !13430
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13431
  %bf.load239 = load i64, i64* %50, align 8, !dbg !13431
  %bf.cast2412 = and i64 %bf.load239, 65535, !dbg !13433
  %cmp242 = icmp eq i64 %bf.cast2412, 32, !dbg !13433
  br i1 %cmp242, label %land.lhs.true243, label %if.else251, !dbg !13434

land.lhs.true243:                                 ; preds = %if.then237
  %tls_model245 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !13435
  %51 = bitcast i24* %tls_model245 to i32*, !dbg !13435
  %bf.load246 = load i32, i32* %51, align 8, !dbg !13435
  %bf.clear248 = and i32 %bf.load246, 49152, !dbg !13435
  %cmp249 = icmp eq i32 %bf.clear248, 0, !dbg !13435
  br i1 %cmp249, label %if.else251, label %if.end257, !dbg !13436

if.else251:                                       ; preds = %land.lhs.true243, %if.then237
  %call252 = call i32 @c_omp_predetermined_sharing(%union.tree_node* %t.0) #6, !dbg !13437
  switch i32 %call252, label %sw.default255 [
    i32 0, label %if.end257
    i32 1, label %sw.bb253
    i32 3, label %sw.bb254
  ], !dbg !13438

sw.bb253:                                         ; preds = %if.else251
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i64 0, i64 0), metadata !13272, metadata !DIExpression()), !dbg !13430
  br label %if.end257, !dbg !13439

sw.bb254:                                         ; preds = %if.else251
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0), metadata !13272, metadata !DIExpression()), !dbg !13430
  br label %if.end257, !dbg !13441

sw.default255:                                    ; preds = %if.else251
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 10219, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !13442
  br label %if.end257, !dbg !13443

if.end257:                                        ; preds = %land.lhs.true243, %if.else251, %sw.bb253, %sw.bb254, %sw.default255
  %share_name.1 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.161, i64 0, i64 0), %land.lhs.true243 ], [ null, %sw.default255 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0), %sw.bb254 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i64 0, i64 0), %sw.bb253 ], [ null, %if.else251 ], !dbg !13430
  call void @llvm.dbg.value(metadata i8* %share_name.1, metadata !13272, metadata !DIExpression()), !dbg !13430
  %tobool258 = icmp eq i8* %share_name.1, null, !dbg !13444
  br i1 %tobool258, label %if.end264, label %if.then259, !dbg !13446

if.then259:                                       ; preds = %if.end257
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13447
  %53 = load i32, i32* %52, align 8, !dbg !13447
  call void (i32, i8*, ...) @error_at(i32 %53, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.162, i64 0, i64 0), %union.tree_node* %t.0, i8* nonnull %share_name.1, i8* %name.2) #6, !dbg !13449
  call void @llvm.dbg.value(metadata i8 1, metadata !13260, metadata !DIExpression()), !dbg !13288
  br label %if.end264, !dbg !13450

if.end264:                                        ; preds = %if.end257, %if.end235, %sw.epilog223, %if.then259
  %remove.16 = phi i8 [ %remove.11, %sw.epilog223 ], [ %remove.13, %if.end235 ], [ 1, %if.then259 ], [ %remove.13, %if.end257 ], !dbg !13288
  call void @llvm.dbg.value(metadata i8 %remove.16, metadata !13260, metadata !DIExpression()), !dbg !13288
  %tobool265 = icmp eq i8 %remove.16, 0, !dbg !13451
  %chain268 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13453
  br i1 %tobool265, label %cleanup, label %if.then266, !dbg !13454

if.then266:                                       ; preds = %if.end264
  %54 = bitcast %union.tree_node** %chain268 to i64*, !dbg !13455
  %55 = load i64, i64* %54, align 8, !dbg !13455
  %56 = bitcast %union.tree_node** %pc.0 to i64*, !dbg !13456
  store i64 %55, i64* %56, align 8, !dbg !13456
  br label %cleanup, !dbg !13457

cleanup:                                          ; preds = %if.end264, %if.then266, %sw.bb220
  %name.3 = phi i8* [ %name.0, %sw.bb220 ], [ %name.2, %if.end264 ], [ %name.2, %if.then266 ]
  %pc.2 = phi %union.tree_node** [ %chain, %sw.bb220 ], [ %chain268, %if.end264 ], [ %pc.0, %if.then266 ], !dbg !13285
  call void @llvm.dbg.value(metadata %union.tree_node** %pc.2, metadata !13258, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.value(metadata i8* %name.3, metadata !13259, metadata !DIExpression()), !dbg !13278
  %c.0.pre = load %union.tree_node*, %union.tree_node** %pc.2, align 8, !dbg !13285
  br label %for.cond, !dbg !13458, !llvm.loop !13459

for.end:                                          ; preds = %for.cond
  call void @bitmap_obstack_release(%struct.bitmap_obstack* null) #6, !dbg !13461
  %57 = load %union.tree_node*, %union.tree_node** %clauses.addr, align 8, !dbg !13462
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !13251, metadata !DIExpression()), !dbg !13278
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !13463
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !13463
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !13463
  ret %union.tree_node* %57, !dbg !13464
}

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) unnamed_addr #0 !dbg !13465 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %head, metadata !13469, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata %struct.bitmap_obstack* @bitmap_default_obstack, metadata !13470, metadata !DIExpression()), !dbg !13471
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 1, !dbg !13472
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !13473
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 0, !dbg !13474
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !13475
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 3, !dbg !13476
  store %struct.bitmap_obstack* @bitmap_default_obstack, %struct.bitmap_obstack** %obstack1, align 8, !dbg !13477
  ret void, !dbg !13478
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local i32 @c_omp_predetermined_sharing(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_variant_type_copy(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_build_va_arg(i32 %loc, %union.tree_node* %expr, %union.tree_node* %type) local_unnamed_addr #5 !dbg !13479 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !13481, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !13482, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !13483, metadata !DIExpression()), !dbg !13484
  %0 = load i32, i32* @warn_cxx_compat, align 4, !dbg !13485
  %tobool = icmp eq i32 %0, 0, !dbg !13485
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !13487

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13488
  %bf.load = load i64, i64* %1, align 8, !dbg !13488
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !13489
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !13489
  br i1 %cmp, label %if.then, label %if.end, !dbg !13490

if.then:                                          ; preds = %land.lhs.true
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc, i32 49, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.164, i64 0, i64 0)) #6, !dbg !13491
  br label %if.end, !dbg !13491

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %call1 = tail call %union.tree_node* @build_va_arg(i32 %loc, %union.tree_node* %expr, %union.tree_node* %type) #6, !dbg !13492
  ret %union.tree_node* %call1, !dbg !13493
}

declare dso_local %union.tree_node* @build_va_arg(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_complex_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_common_fixed_point_type_for_size(i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @function_types_compatible_p(%union.tree_node* %f1, %union.tree_node* %f2, i8* %enum_and_int_p) unnamed_addr #5 !dbg !13494 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %f1, metadata !13496, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata %union.tree_node* %f2, metadata !13497, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !13498, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32 1, metadata !13501, metadata !DIExpression()), !dbg !13505
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %f1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13506
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !13506
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !13503, metadata !DIExpression()), !dbg !13505
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %f2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13507
  %1 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !13507
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !13504, metadata !DIExpression()), !dbg !13505
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13508
  %bf.load = load i64, i64* %2, align 8, !dbg !13508
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13510
  %bf.load4 = load i64, i64* %3, align 8, !dbg !13510
  %bf.lshr10 = xor i64 %bf.load, %bf.load4, !dbg !13511
  %4 = and i64 %bf.lshr10, 524288, !dbg !13511
  %cmp = icmp eq i64 %4, 0, !dbg !13511
  br i1 %cmp, label %if.end, label %if.then, !dbg !13512

if.then:                                          ; preds = %entry
  %5 = load i32, i32* @input_location, align 4, !dbg !13513
  %call = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %5, i32 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.169, i64 0, i64 0)) #6, !dbg !13514
  %bf.load9.pre = load i64, i64* %2, align 8, !dbg !13515
  br label %if.end, !dbg !13514

if.end:                                           ; preds = %entry, %if.then
  %bf.load33 = phi i64 [ %bf.load, %entry ], [ %bf.load9.pre, %if.then ], !dbg !13515
  %bf.cast122 = and i64 %bf.load33, 524288, !dbg !13515
  %tobool = icmp eq i64 %bf.cast122, 0, !dbg !13515
  br i1 %tobool, label %if.end39, label %if.then13, !dbg !13517

if.then13:                                        ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !13518
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !13518
  %bf.lshr17 = lshr i64 %bf.load33, 20, !dbg !13519
  %8 = trunc i64 %bf.lshr17 to i32, !dbg !13519
  %bf.cast19 = and i32 %8, 1, !dbg !13519
  %type26 = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !13519
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type26, i64 0, i32 6, !dbg !13519
  %bf.load27 = load i32, i32* %restrict_flag, align 4, !dbg !13519
  %9 = lshr i32 %bf.load27, 11, !dbg !13519
  %mul30 = and i32 %9, 4, !dbg !13519
  %or31 = or i32 %bf.cast19, %mul30, !dbg !13519
  %10 = lshr i64 %bf.load33, 48, !dbg !13519
  %11 = trunc i64 %10 to i32, !dbg !13519
  %shl = and i32 %11, 65280, !dbg !13519
  %or36 = or i32 %or31, %shl, !dbg !13519
  %call38 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %7, i32 %or36) #6, !dbg !13520
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !13503, metadata !DIExpression()), !dbg !13505
  br label %if.end39, !dbg !13521

if.end39:                                         ; preds = %if.end, %if.then13
  %ret1.0 = phi %union.tree_node* [ %call38, %if.then13 ], [ %0, %if.end ], !dbg !13505
  call void @llvm.dbg.value(metadata %union.tree_node* %ret1.0, metadata !13503, metadata !DIExpression()), !dbg !13505
  %bf.load41 = load i64, i64* %3, align 8, !dbg !13522
  %bf.cast443 = and i64 %bf.load41, 524288, !dbg !13522
  %tobool45 = icmp eq i64 %bf.cast443, 0, !dbg !13522
  br i1 %tobool45, label %if.end78, label %if.then46, !dbg !13524

if.then46:                                        ; preds = %if.end39
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !13525
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !13525
  %bf.lshr51 = lshr i64 %bf.load41, 20, !dbg !13526
  %14 = trunc i64 %bf.lshr51 to i32, !dbg !13526
  %bf.cast53 = and i32 %14, 1, !dbg !13526
  %type62 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !13526
  %restrict_flag63 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type62, i64 0, i32 6, !dbg !13526
  %bf.load64 = load i32, i32* %restrict_flag63, align 4, !dbg !13526
  %15 = lshr i32 %bf.load64, 11, !dbg !13526
  %mul67 = and i32 %15, 4, !dbg !13526
  %or68 = or i32 %bf.cast53, %mul67, !dbg !13526
  %16 = lshr i64 %bf.load41, 48, !dbg !13526
  %17 = trunc i64 %16 to i32, !dbg !13526
  %shl74 = and i32 %17, 65280, !dbg !13526
  %or75 = or i32 %or68, %shl74, !dbg !13526
  %call77 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %13, i32 %or75) #6, !dbg !13527
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !13504, metadata !DIExpression()), !dbg !13505
  br label %if.end78, !dbg !13528

if.end78:                                         ; preds = %if.end39, %if.then46
  %ret2.0 = phi %union.tree_node* [ %call77, %if.then46 ], [ %1, %if.end39 ], !dbg !13505
  call void @llvm.dbg.value(metadata %union.tree_node* %ret2.0, metadata !13504, metadata !DIExpression()), !dbg !13505
  %call79 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %ret1.0, %union.tree_node* %ret2.0, i8* %enum_and_int_p) #7, !dbg !13529
  call void @llvm.dbg.value(metadata i32 %call79, metadata !13501, metadata !DIExpression()), !dbg !13505
  %cmp80 = icmp eq i32 %call79, 0, !dbg !13530
  br i1 %cmp80, label %cleanup, label %if.end82, !dbg !13532

if.end82:                                         ; preds = %if.end78
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %f1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13533
  %18 = bitcast i32* %values to %union.tree_node**, !dbg !13533
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !13533
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !13499, metadata !DIExpression()), !dbg !13505
  %values85 = getelementptr inbounds %union.tree_node, %union.tree_node* %f2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13534
  %20 = bitcast i32* %values85 to %union.tree_node**, !dbg !13534
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !13534
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !13500, metadata !DIExpression()), !dbg !13505
  %cmp86 = icmp eq %union.tree_node* %19, null, !dbg !13535
  br i1 %cmp86, label %if.then87, label %if.end100, !dbg !13537

if.then87:                                        ; preds = %if.end82
  %call88 = tail call i32 @self_promoting_args_p(%union.tree_node* %21) #6, !dbg !13538
  %tobool89 = icmp eq i32 %call88, 0, !dbg !13538
  br i1 %tobool89, label %cleanup, label %if.end91, !dbg !13541

if.end91:                                         ; preds = %if.then87
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %f1, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13542
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !13542
  %tobool93 = icmp eq %union.tree_node* %23, null, !dbg !13542
  br i1 %tobool93, label %cleanup, label %land.lhs.true, !dbg !13544

land.lhs.true:                                    ; preds = %if.end91
  %call96 = tail call fastcc i32 @type_lists_compatible_p(%union.tree_node* %21, %union.tree_node* nonnull %23, i8* %enum_and_int_p) #7, !dbg !13545
  %cmp97 = icmp eq i32 %call96, 1, !dbg !13546
  %spec.select = select i1 %cmp97, i32 %call79, i32 2, !dbg !13547
  ret i32 %spec.select, !dbg !13547

if.end100:                                        ; preds = %if.end82
  %cmp101 = icmp eq %union.tree_node* %21, null, !dbg !13548
  br i1 %cmp101, label %if.then102, label %if.end117, !dbg !13550

if.then102:                                       ; preds = %if.end100
  %call103 = tail call i32 @self_promoting_args_p(%union.tree_node* nonnull %19) #6, !dbg !13551
  %tobool104 = icmp eq i32 %call103, 0, !dbg !13551
  br i1 %tobool104, label %cleanup, label %if.end106, !dbg !13554

if.end106:                                        ; preds = %if.then102
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %f2, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13555
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !13555
  %tobool109 = icmp eq %union.tree_node* %25, null, !dbg !13555
  br i1 %tobool109, label %cleanup, label %land.lhs.true110, !dbg !13557

land.lhs.true110:                                 ; preds = %if.end106
  %call113 = tail call fastcc i32 @type_lists_compatible_p(%union.tree_node* nonnull %19, %union.tree_node* nonnull %25, i8* %enum_and_int_p) #7, !dbg !13558
  %cmp114 = icmp eq i32 %call113, 1, !dbg !13559
  %spec.select1 = select i1 %cmp114, i32 %call79, i32 2, !dbg !13560
  br label %cleanup, !dbg !13560

if.end117:                                        ; preds = %if.end100
  %call118 = tail call fastcc i32 @type_lists_compatible_p(%union.tree_node* nonnull %19, %union.tree_node* nonnull %21, i8* %enum_and_int_p) #7, !dbg !13561
  call void @llvm.dbg.value(metadata i32 %call118, metadata !13502, metadata !DIExpression()), !dbg !13505
  %cmp119 = icmp eq i32 %call118, 1, !dbg !13562
  %call118.call79 = select i1 %cmp119, i32 %call79, i32 %call118, !dbg !13563
  br label %cleanup, !dbg !13564

cleanup:                                          ; preds = %if.end91, %if.then87, %if.end106, %if.then102, %land.lhs.true110, %if.end78, %if.end117
  %retval.0 = phi i32 [ %call118.call79, %if.end117 ], [ 0, %if.end78 ], [ 0, %if.then87 ], [ %call79, %if.end91 ], [ 0, %if.then102 ], [ %call79, %if.end106 ], [ %spec.select1, %land.lhs.true110 ], !dbg !13505
  ret i32 %retval.0, !dbg !13565
}

declare dso_local i32 @attribute_list_contained(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @tagged_types_tu_compatible_p(%union.tree_node* %t1, %union.tree_node* %t2, i8* %enum_and_int_p) unnamed_addr #5 !dbg !13566 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !13570, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 0, metadata !13573, metadata !DIExpression()), !dbg !13602
  br label %while.cond, !dbg !13603

while.cond:                                       ; preds = %while.body, %entry
  %t1.addr.0 = phi %union.tree_node* [ %t1, %entry ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0, metadata !13568, metadata !DIExpression()), !dbg !13602
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13604
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !13604
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !13604
  br i1 %tobool, label %while.end, label %land.lhs.true, !dbg !13605

land.lhs.true:                                    ; preds = %while.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13605
  %bf.load = load i64, i64* %2, align 8, !dbg !13606
  %bf.cast16 = and i64 %bf.load, 65535, !dbg !13607
  %cmp = icmp eq i64 %bf.cast16, 35, !dbg !13607
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !13608

land.rhs:                                         ; preds = %land.lhs.true
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 3, !dbg !13609
  %3 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !13609
  %tobool5 = icmp eq %union.tree_node* %3, null, !dbg !13608
  br i1 %tobool5, label %while.end, label %while.body, !dbg !13603

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13568, metadata !DIExpression()), !dbg !13602
  br label %while.cond, !dbg !13603, !llvm.loop !13610

while.end:                                        ; preds = %land.rhs, %while.cond, %land.lhs.true
  %t1.addr.0.lcssa = phi %union.tree_node* [ %t1.addr.0, %land.rhs ], [ %t1.addr.0, %while.cond ], [ %t1.addr.0, %land.lhs.true ]
  %.lcssa39 = phi %union.tree_node* [ %1, %land.rhs ], [ %1, %while.cond ], [ %1, %land.lhs.true ], !dbg !13604
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t1.addr.0.lcssa, metadata !13568, metadata !DIExpression()), !dbg !13602
  br label %while.cond10, !dbg !13612

while.cond10:                                     ; preds = %while.body29, %while.end
  %t2.addr.0 = phi %union.tree_node* [ %t2, %while.end ], [ %7, %while.body29 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0, metadata !13569, metadata !DIExpression()), !dbg !13602
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13613
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !13613
  %tobool13 = icmp eq %union.tree_node* %5, null, !dbg !13613
  br i1 %tobool13, label %while.end34, label %land.lhs.true14, !dbg !13614

land.lhs.true14:                                  ; preds = %while.cond10
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13614
  %bf.load18 = load i64, i64* %6, align 8, !dbg !13615
  %bf.cast2015 = and i64 %bf.load18, 65535, !dbg !13616
  %cmp21 = icmp eq i64 %bf.cast2015, 35, !dbg !13616
  br i1 %cmp21, label %land.rhs22, label %while.end34, !dbg !13617

land.rhs22:                                       ; preds = %land.lhs.true14
  %result26 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 3, !dbg !13618
  %7 = load %union.tree_node*, %union.tree_node** %result26, align 8, !dbg !13618
  %tobool27 = icmp eq %union.tree_node* %7, null, !dbg !13617
  br i1 %tobool27, label %while.end34, label %while.body29, !dbg !13612

while.body29:                                     ; preds = %land.rhs22
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !13569, metadata !DIExpression()), !dbg !13602
  br label %while.cond10, !dbg !13612, !llvm.loop !13619

while.end34:                                      ; preds = %land.rhs22, %while.cond10, %land.lhs.true14
  %t2.addr.0.lcssa = phi %union.tree_node* [ %t2.addr.0, %land.rhs22 ], [ %t2.addr.0, %while.cond10 ], [ %t2.addr.0, %land.lhs.true14 ]
  %.lcssa = phi %union.tree_node* [ %5, %land.rhs22 ], [ %5, %while.cond10 ], [ %5, %land.lhs.true14 ], !dbg !13613
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %t2.addr.0.lcssa, metadata !13569, metadata !DIExpression()), !dbg !13602
  %8 = load i32, i32* @flag_isoc99, align 4, !dbg !13621
  %tobool35 = icmp eq i32 %8, 0, !dbg !13621
  br i1 %tobool35, label %if.end, label %land.lhs.true36, !dbg !13623

land.lhs.true36:                                  ; preds = %while.end34
  %cmp41 = icmp eq %union.tree_node* %.lcssa39, %.lcssa, !dbg !13624
  br i1 %cmp41, label %if.end, label %cleanup381, !dbg !13625

if.end:                                           ; preds = %land.lhs.true36, %while.end34
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13626
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !13626
  %cmp43 = icmp eq %union.tree_node* %10, null, !dbg !13628
  br i1 %cmp43, label %cleanup381, label %lor.lhs.false, !dbg !13629

lor.lhs.false:                                    ; preds = %if.end
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13630
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !13630
  %cmp46 = icmp eq %union.tree_node* %12, null, !dbg !13631
  br i1 %cmp46, label %cleanup381, label %if.end48, !dbg !13632

if.end48:                                         ; preds = %lor.lhs.false
  br label %for.cond, !dbg !13633

for.cond:                                         ; preds = %for.inc, %if.end48
  %tts_i.0.in = phi %struct.tagged_tu_seen_cache** [ @tagged_tu_seen_base, %if.end48 ], [ %next, %for.inc ]
  %tts_i.0 = load %struct.tagged_tu_seen_cache*, %struct.tagged_tu_seen_cache** %tts_i.0.in, align 8, !dbg !13635
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %tts_i.0, metadata !13574, metadata !DIExpression()), !dbg !13636
  %cmp49 = icmp eq %struct.tagged_tu_seen_cache* %tts_i.0, null, !dbg !13637
  br i1 %cmp49, label %cleanup.loopexit, label %for.body, !dbg !13639

for.body:                                         ; preds = %for.cond
  %t150 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %tts_i.0, i64 0, i32 1, !dbg !13640
  %13 = load %union.tree_node*, %union.tree_node** %t150, align 8, !dbg !13640
  %cmp51 = icmp eq %union.tree_node* %13, %t1.addr.0.lcssa, !dbg !13642
  br i1 %cmp51, label %land.lhs.true52, label %for.inc, !dbg !13643

land.lhs.true52:                                  ; preds = %for.body
  %t253 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %tts_i.0, i64 0, i32 2, !dbg !13644
  %14 = load %union.tree_node*, %union.tree_node** %t253, align 8, !dbg !13644
  %cmp54 = icmp eq %union.tree_node* %14, %t2.addr.0.lcssa, !dbg !13645
  br i1 %cmp54, label %if.then55, label %for.inc, !dbg !13646

if.then55:                                        ; preds = %land.lhs.true52
  %tts_i.0.lcssa38 = phi %struct.tagged_tu_seen_cache* [ %tts_i.0, %land.lhs.true52 ], !dbg !13635
  %val = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %tts_i.0.lcssa38, i64 0, i32 3, !dbg !13647
  %15 = load i32, i32* %val, align 8, !dbg !13647
  br label %cleanup, !dbg !13648

for.inc:                                          ; preds = %for.body, %land.lhs.true52
  %next = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %tts_i.0, i64 0, i32 0, !dbg !13649
  br label %for.cond, !dbg !13650, !llvm.loop !13651

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then55
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then55 ], [ true, %cleanup.loopexit ]
  %retval.0 = phi i32 [ %15, %if.then55 ], [ undef, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %cleanup.cont, label %cleanup381

cleanup.cont:                                     ; preds = %cleanup
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13653
  %bf.load58 = load i64, i64* %16, align 8, !dbg !13653
  %17 = trunc i64 %bf.load58 to i16, !dbg !13653
  switch i16 %17, label %sw.default [
    i16 6, label %sw.bb
    i16 17, label %sw.bb139
    i16 16, label %sw.bb298
  ], !dbg !13654

sw.bb:                                            ; preds = %cleanup.cont
  %call = tail call fastcc %struct.tagged_tu_seen_cache* @alloc_tagged_tu_seen_cache(%union.tree_node* %t1.addr.0.lcssa, %union.tree_node* %t2.addr.0.lcssa) #7, !dbg !13655
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %call, metadata !13576, metadata !DIExpression()), !dbg !13656
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13657
  %18 = bitcast i32* %values to %union.tree_node**, !dbg !13657
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !13657
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !13579, metadata !DIExpression()), !dbg !13656
  %values63 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13658
  %20 = bitcast i32* %values63 to %union.tree_node**, !dbg !13658
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !13658
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !13580, metadata !DIExpression()), !dbg !13656
  %cmp64 = icmp eq %union.tree_node* %19, %21, !dbg !13659
  br i1 %cmp64, label %cleanup381, label %for.cond67.preheader, !dbg !13661

for.cond67.preheader:                             ; preds = %sw.bb
  br label %for.cond67, !dbg !13662

for.cond67:                                       ; preds = %for.cond67.preheader, %for.inc86
  %tv1.0 = phi %union.tree_node* [ %30, %for.inc86 ], [ %19, %for.cond67.preheader ], !dbg !13656
  %tv2.0 = phi %union.tree_node* [ %31, %for.inc86 ], [ %21, %for.cond67.preheader ], !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv2.0, metadata !13580, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv1.0, metadata !13579, metadata !DIExpression()), !dbg !13656
  %tobool68 = icmp ne %union.tree_node* %tv1.0, null, !dbg !13664
  %tobool70 = icmp ne %union.tree_node* %tv2.0, null, !dbg !13666
  %spec.select = and i1 %tobool70, %tobool68, !dbg !13666
  br i1 %spec.select, label %for.body72, label %for.end89, !dbg !13662

for.body72:                                       ; preds = %for.cond67
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %tv1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13667
  %22 = bitcast i32* %purpose to %union.tree_node**, !dbg !13667
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !13667
  %purpose74 = getelementptr inbounds %union.tree_node, %union.tree_node* %tv2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13670
  %24 = bitcast i32* %purpose74 to %union.tree_node**, !dbg !13670
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !13670
  %cmp75 = icmp eq %union.tree_node* %23, %25, !dbg !13671
  br i1 %cmp75, label %if.end77, label %for.end89, !dbg !13672

if.end77:                                         ; preds = %for.body72
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %tv1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13673
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !13673
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %tv2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13675
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !13675
  %call81 = tail call i32 @simple_cst_equal(%union.tree_node* %27, %union.tree_node* %29) #6, !dbg !13676
  %cmp82 = icmp eq i32 %call81, 1, !dbg !13677
  br i1 %cmp82, label %for.inc86, label %if.then83, !dbg !13678

if.then83:                                        ; preds = %if.end77
  %val84 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call, i64 0, i32 3, !dbg !13679
  store i32 0, i32* %val84, align 8, !dbg !13681
  br label %cleanup381, !dbg !13682

for.inc86:                                        ; preds = %if.end77
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tv1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13683
  %30 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !13683
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !13579, metadata !DIExpression()), !dbg !13656
  %chain88 = getelementptr inbounds %union.tree_node, %union.tree_node* %tv2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13684
  %31 = load %union.tree_node*, %union.tree_node** %chain88, align 8, !dbg !13684
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !13580, metadata !DIExpression()), !dbg !13656
  br label %for.cond67, !dbg !13685, !llvm.loop !13686

for.end89:                                        ; preds = %for.body72, %for.cond67
  %tv1.0.lcssa = phi %union.tree_node* [ %tv1.0, %for.body72 ], [ %tv1.0, %for.cond67 ], !dbg !13656
  %tv2.0.lcssa = phi %union.tree_node* [ %tv2.0, %for.body72 ], [ %tv2.0, %for.cond67 ], !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv1.0.lcssa, metadata !13579, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv1.0.lcssa, metadata !13579, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv2.0.lcssa, metadata !13580, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv2.0.lcssa, metadata !13580, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv1.0.lcssa, metadata !13579, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv1.0.lcssa, metadata !13579, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv2.0.lcssa, metadata !13580, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv2.0.lcssa, metadata !13580, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv1.0.lcssa, metadata !13579, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv1.0.lcssa, metadata !13579, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv2.0.lcssa, metadata !13580, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %union.tree_node* %tv2.0.lcssa, metadata !13580, metadata !DIExpression()), !dbg !13656
  %cmp90 = icmp eq %union.tree_node* %tv1.0.lcssa, null, !dbg !13688
  %cmp92 = icmp eq %union.tree_node* %tv2.0.lcssa, null, !dbg !13690
  %or.cond = and i1 %cmp90, %cmp92, !dbg !13691
  br i1 %or.cond, label %cleanup381, label %if.end94, !dbg !13691

if.end94:                                         ; preds = %for.end89
  %or.cond5 = or i1 %cmp90, %cmp92, !dbg !13692
  br i1 %or.cond5, label %if.then98, label %if.end100, !dbg !13692

if.then98:                                        ; preds = %if.end94
  %val99 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call, i64 0, i32 3, !dbg !13694
  store i32 0, i32* %val99, align 8, !dbg !13696
  br label %cleanup381, !dbg !13697

if.end100:                                        ; preds = %if.end94
  %32 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !13698
  %call103 = tail call i32 @list_length(%union.tree_node* %32) #6, !dbg !13700
  %33 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !13701
  %call106 = tail call i32 @list_length(%union.tree_node* %33) #6, !dbg !13702
  %cmp107 = icmp eq i32 %call103, %call106, !dbg !13703
  br i1 %cmp107, label %if.end110, label %if.then108, !dbg !13704

if.then108:                                       ; preds = %if.end100
  %val109 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call, i64 0, i32 3, !dbg !13705
  store i32 0, i32* %val109, align 8, !dbg !13707
  br label %cleanup381, !dbg !13708

if.end110:                                        ; preds = %if.end100
  br label %for.cond113, !dbg !13709

for.cond113:                                      ; preds = %for.inc132, %if.end110
  %s1.0.in = phi %union.tree_node** [ %18, %if.end110 ], [ %chain134, %for.inc132 ]
  %s1.0 = load %union.tree_node*, %union.tree_node** %s1.0.in, align 8, !dbg !13711
  call void @llvm.dbg.value(metadata %union.tree_node* %s1.0, metadata !13571, metadata !DIExpression()), !dbg !13602
  %tobool114 = icmp eq %union.tree_node* %s1.0, null, !dbg !13712
  br i1 %tobool114, label %cleanup381.loopexit, label %for.body115, !dbg !13712

for.body115:                                      ; preds = %for.cond113
  %purpose117 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13713
  %34 = bitcast i32* %purpose117 to %union.tree_node**, !dbg !13713
  %35 = load %union.tree_node*, %union.tree_node** %34, align 8, !dbg !13713
  %36 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !13716
  %call120 = tail call %union.tree_node* @purpose_member(%union.tree_node* %35, %union.tree_node* %36) #6, !dbg !13717
  call void @llvm.dbg.value(metadata %union.tree_node* %call120, metadata !13572, metadata !DIExpression()), !dbg !13602
  %cmp121 = icmp eq %union.tree_node* %call120, null, !dbg !13718
  br i1 %cmp121, label %if.then129, label %lor.lhs.false122, !dbg !13720

lor.lhs.false122:                                 ; preds = %for.body115
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13721
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8, !dbg !13721
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13722
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8, !dbg !13722
  %call127 = tail call i32 @simple_cst_equal(%union.tree_node* %38, %union.tree_node* %40) #6, !dbg !13723
  %cmp128 = icmp eq i32 %call127, 1, !dbg !13724
  br i1 %cmp128, label %for.inc132, label %if.then129, !dbg !13725

if.then129:                                       ; preds = %lor.lhs.false122, %for.body115
  %val130 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call, i64 0, i32 3, !dbg !13726
  store i32 0, i32* %val130, align 8, !dbg !13728
  br label %cleanup381, !dbg !13729

for.inc132:                                       ; preds = %lor.lhs.false122
  %chain134 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13730
  br label %for.cond113, !dbg !13731, !llvm.loop !13732

sw.bb139:                                         ; preds = %cleanup.cont
  %call141 = tail call fastcc %struct.tagged_tu_seen_cache* @alloc_tagged_tu_seen_cache(%union.tree_node* %t1.addr.0.lcssa, %union.tree_node* %t2.addr.0.lcssa) #7, !dbg !13734
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %call141, metadata !13581, metadata !DIExpression()), !dbg !13735
  %values143 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13736
  %41 = bitcast i32* %values143 to %union.tree_node**, !dbg !13736
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !13736
  %call144 = tail call i32 @list_length(%union.tree_node* %42) #6, !dbg !13738
  %values146 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13739
  %43 = bitcast i32* %values146 to %union.tree_node**, !dbg !13739
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !13739
  %call147 = tail call i32 @list_length(%union.tree_node* %44) #6, !dbg !13740
  %cmp148 = icmp eq i32 %call144, %call147, !dbg !13741
  br i1 %cmp148, label %if.end151, label %if.then149, !dbg !13742

if.then149:                                       ; preds = %sw.bb139
  %val150 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call141, i64 0, i32 3, !dbg !13743
  store i32 0, i32* %val150, align 8, !dbg !13745
  br label %cleanup381, !dbg !13746

if.end151:                                        ; preds = %sw.bb139
  %val183 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call141, i64 0, i32 3, !dbg !13747
  br label %for.cond156, !dbg !13750

for.cond156:                                      ; preds = %for.inc204, %if.end151
  %needs_warning.0 = phi i8 [ 0, %if.end151 ], [ %needs_warning.2, %for.inc204 ], !dbg !13751
  %s2.0.in = phi %union.tree_node** [ %43, %if.end151 ], [ %chain208, %for.inc204 ]
  %s1.1.in = phi %union.tree_node** [ %41, %if.end151 ], [ %chain206, %for.inc204 ]
  %retval.2 = phi i32 [ %retval.0, %if.end151 ], [ %retval.3, %for.inc204 ], !dbg !13648
  %s1.1 = load %union.tree_node*, %union.tree_node** %s1.1.in, align 8, !dbg !13752
  %s2.0 = load %union.tree_node*, %union.tree_node** %s2.0.in, align 8, !dbg !13752
  call void @llvm.dbg.value(metadata %union.tree_node* %s1.1, metadata !13571, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %s2.0, metadata !13572, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.0, metadata !13573, metadata !DIExpression()), !dbg !13602
  %tobool157 = icmp ne %union.tree_node* %s1.1, null, !dbg !13753
  %tobool159 = icmp ne %union.tree_node* %s2.0, null, !dbg !13754
  %spec.select6 = and i1 %tobool159, %tobool157, !dbg !13754
  br i1 %spec.select6, label %for.body161, label %for.end209, !dbg !13755

for.body161:                                      ; preds = %for.cond156
  %name163 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13756
  %45 = load %union.tree_node*, %union.tree_node** %name163, align 8, !dbg !13756
  %name165 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13758
  %46 = load %union.tree_node*, %union.tree_node** %name165, align 8, !dbg !13758
  %cmp166 = icmp eq %union.tree_node* %45, %46, !dbg !13759
  br i1 %cmp166, label %if.end168, label %cleanup201, !dbg !13760

if.end168:                                        ; preds = %for.body161
  %type170 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13761
  %47 = load %union.tree_node*, %union.tree_node** %type170, align 8, !dbg !13761
  %type172 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13762
  %48 = load %union.tree_node*, %union.tree_node** %type172, align 8, !dbg !13762
  %call173 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %47, %union.tree_node* %48, i8* %enum_and_int_p) #7, !dbg !13763
  call void @llvm.dbg.value(metadata i32 %call173, metadata !13583, metadata !DIExpression()), !dbg !13764
  %cond10 = icmp eq i32 %call173, 1, !dbg !13765
  br i1 %cond10, label %if.end187, label %land.lhs.true175, !dbg !13765

land.lhs.true175:                                 ; preds = %if.end168
  %49 = load %union.tree_node*, %union.tree_node** %name163, align 8, !dbg !13767
  %tobool178 = icmp eq %union.tree_node* %49, null, !dbg !13767
  br i1 %tobool178, label %cleanup201, label %if.end180, !dbg !13768

if.end180:                                        ; preds = %land.lhs.true175
  switch i32 %call173, label %if.end187 [
    i32 0, label %if.then182
    i32 2, label %if.then186
  ], !dbg !13769

if.then182:                                       ; preds = %if.end180
  store i32 0, i32* %val183, align 8, !dbg !13770
  br label %cleanup201, !dbg !13771

if.then186:                                       ; preds = %if.end180
  call void @llvm.dbg.value(metadata i8 1, metadata !13573, metadata !DIExpression()), !dbg !13602
  br label %if.end187, !dbg !13772

if.end187:                                        ; preds = %if.end168, %if.end180, %if.then186
  %needs_warning.1 = phi i8 [ 1, %if.then186 ], [ %needs_warning.0, %if.end180 ], [ %needs_warning.0, %if.end168 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.1, metadata !13573, metadata !DIExpression()), !dbg !13602
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13774
  %bf.load189 = load i64, i64* %50, align 8, !dbg !13774
  %bf.cast19114 = and i64 %bf.load189, 65535, !dbg !13776
  %cmp192 = icmp eq i64 %bf.cast19114, 31, !dbg !13776
  br i1 %cmp192, label %land.lhs.true193, label %cleanup201, !dbg !13777

land.lhs.true193:                                 ; preds = %if.end187
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.1, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13778
  %52 = load %union.tree_node*, %union.tree_node** %51, align 8, !dbg !13778
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.0, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13779
  %54 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !13779
  %call196 = tail call i32 @simple_cst_equal(%union.tree_node* %52, %union.tree_node* %54) #6, !dbg !13780
  %cmp197 = icmp eq i32 %call196, 1, !dbg !13781
  br i1 %cmp197, label %cleanup201, label %if.then198, !dbg !13782

if.then198:                                       ; preds = %land.lhs.true193
  store i32 0, i32* %val183, align 8, !dbg !13783
  br label %cleanup201, !dbg !13785

cleanup201:                                       ; preds = %land.lhs.true193, %land.lhs.true175, %for.body161, %if.end187, %if.then198, %if.then182
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then182 ], [ 1, %if.then198 ], [ 16, %for.body161 ], [ 16, %land.lhs.true175 ], [ 0, %land.lhs.true193 ], [ 0, %if.end187 ]
  %needs_warning.2 = phi i8 [ %needs_warning.0, %if.then182 ], [ %needs_warning.1, %if.then198 ], [ %needs_warning.0, %for.body161 ], [ %needs_warning.0, %land.lhs.true175 ], [ %needs_warning.1, %land.lhs.true193 ], [ %needs_warning.1, %if.end187 ], !dbg !13602
  %retval.3 = phi i32 [ 0, %if.then182 ], [ 0, %if.then198 ], [ %retval.2, %for.body161 ], [ %retval.2, %land.lhs.true175 ], [ %retval.2, %land.lhs.true193 ], [ %retval.2, %if.end187 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.2, metadata !13573, metadata !DIExpression()), !dbg !13602
  switch i32 %cleanup.dest.slot.1, label %cleanup381.loopexit18 [
    i32 0, label %for.inc204
    i32 16, label %for.end209
  ]

for.inc204:                                       ; preds = %cleanup201
  %chain206 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13786
  %chain208 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13787
  br label %for.cond156, !dbg !13788, !llvm.loop !13789

for.end209:                                       ; preds = %cleanup201, %for.cond156
  %tobool157.lcssa = phi i1 [ %tobool157, %cleanup201 ], [ %tobool157, %for.cond156 ], !dbg !13753
  %tobool159.lcssa = phi i1 [ %tobool159, %cleanup201 ], [ %tobool159, %for.cond156 ], !dbg !13754
  %needs_warning.3 = phi i8 [ %needs_warning.2, %cleanup201 ], [ %needs_warning.0, %for.cond156 ], !dbg !13751
  %retval.4 = phi i32 [ %retval.3, %cleanup201 ], [ %retval.2, %for.cond156 ], !dbg !13648
  call void @llvm.dbg.value(metadata i8 %needs_warning.3, metadata !13573, metadata !DIExpression()), !dbg !13602
  %or.cond7 = or i1 %tobool157.lcssa, %tobool159.lcssa, !dbg !13791
  br i1 %or.cond7, label %if.end217, label %if.then213, !dbg !13791

if.then213:                                       ; preds = %for.end209
  %tobool214 = icmp eq i8 %needs_warning.3, 0, !dbg !13793
  %cond = select i1 %tobool214, i32 1, i32 2, !dbg !13793
  store i32 %cond, i32* %val183, align 8, !dbg !13795
  br label %cleanup381, !dbg !13796

if.end217:                                        ; preds = %for.end209
  br label %for.cond220, !dbg !13797

for.cond220:                                      ; preds = %for.inc288, %if.end217
  %needs_warning.4 = phi i8 [ %needs_warning.3, %if.end217 ], [ %needs_warning.10, %for.inc288 ], !dbg !13751
  %s1.2.in = phi %union.tree_node** [ %41, %if.end217 ], [ %chain290, %for.inc288 ]
  %retval.5 = phi i32 [ %retval.4, %if.end217 ], [ %retval.10, %for.inc288 ], !dbg !13602
  %s1.2 = load %union.tree_node*, %union.tree_node** %s1.2.in, align 8, !dbg !13798
  call void @llvm.dbg.value(metadata %union.tree_node* %s1.2, metadata !13571, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.4, metadata !13573, metadata !DIExpression()), !dbg !13602
  %tobool221 = icmp eq %union.tree_node* %s1.2, null, !dbg !13799
  br i1 %tobool221, label %for.end291, label %for.body222, !dbg !13799

for.body222:                                      ; preds = %for.cond220
  call void @llvm.dbg.value(metadata i8 0, metadata !13587, metadata !DIExpression()), !dbg !13800
  %name229 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13801
  %type237 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13802
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13803
  %56 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.2, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13803
  br label %for.cond225, !dbg !13805

for.cond225:                                      ; preds = %for.inc277, %for.body222
  %needs_warning.5 = phi i8 [ %needs_warning.4, %for.body222 ], [ %needs_warning.8, %for.inc277 ], !dbg !13751
  %s2.1.in = phi %union.tree_node** [ %43, %for.body222 ], [ %chain279, %for.inc277 ]
  %ok.0 = phi i8 [ 0, %for.body222 ], [ %ok.2, %for.inc277 ], !dbg !13806
  %retval.6 = phi i32 [ %retval.5, %for.body222 ], [ %retval.8, %for.inc277 ], !dbg !13602
  %s2.1 = load %union.tree_node*, %union.tree_node** %s2.1.in, align 8, !dbg !13807
  call void @llvm.dbg.value(metadata i8 %ok.0, metadata !13587, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %union.tree_node* %s2.1, metadata !13572, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.5, metadata !13573, metadata !DIExpression()), !dbg !13602
  %tobool226 = icmp eq %union.tree_node* %s2.1, null, !dbg !13808
  br i1 %tobool226, label %for.end280, label %for.body227, !dbg !13808

for.body227:                                      ; preds = %for.cond225
  %57 = load %union.tree_node*, %union.tree_node** %name229, align 8, !dbg !13809
  %name231 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13810
  %58 = load %union.tree_node*, %union.tree_node** %name231, align 8, !dbg !13810
  %cmp232 = icmp eq %union.tree_node* %57, %58, !dbg !13811
  br i1 %cmp232, label %if.then234, label %for.inc277, !dbg !13812

if.then234:                                       ; preds = %for.body227
  %59 = load %union.tree_node*, %union.tree_node** %type237, align 8, !dbg !13813
  %type239 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13814
  %60 = load %union.tree_node*, %union.tree_node** %type239, align 8, !dbg !13814
  %call240 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %59, %union.tree_node* %60, i8* %enum_and_int_p) #7, !dbg !13815
  call void @llvm.dbg.value(metadata i32 %call240, metadata !13591, metadata !DIExpression()), !dbg !13802
  %cond11 = icmp eq i32 %call240, 1, !dbg !13816
  br i1 %cond11, label %if.end257, label %land.lhs.true243, !dbg !13816

land.lhs.true243:                                 ; preds = %if.then234
  %61 = load %union.tree_node*, %union.tree_node** %name229, align 8, !dbg !13818
  %tobool246 = icmp eq %union.tree_node* %61, null, !dbg !13818
  br i1 %tobool246, label %cleanup274, label %if.end248, !dbg !13819

if.end248:                                        ; preds = %land.lhs.true243
  switch i32 %call240, label %if.end257 [
    i32 0, label %if.then251
    i32 2, label %if.then256
  ], !dbg !13820

if.then251:                                       ; preds = %if.end248
  store i32 0, i32* %val183, align 8, !dbg !13821
  br label %cleanup274, !dbg !13824

if.then256:                                       ; preds = %if.end248
  call void @llvm.dbg.value(metadata i8 1, metadata !13573, metadata !DIExpression()), !dbg !13602
  br label %if.end257, !dbg !13825

if.end257:                                        ; preds = %if.then234, %if.end248, %if.then256
  %needs_warning.6 = phi i8 [ 1, %if.then256 ], [ %needs_warning.5, %if.end248 ], [ %needs_warning.5, %if.then234 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.6, metadata !13573, metadata !DIExpression()), !dbg !13602
  %bf.load259 = load i64, i64* %55, align 8, !dbg !13827
  %bf.cast26113 = and i64 %bf.load259, 65535, !dbg !13828
  %cmp262 = icmp eq i64 %bf.cast26113, 31, !dbg !13828
  br i1 %cmp262, label %land.lhs.true264, label %if.end273, !dbg !13829

land.lhs.true264:                                 ; preds = %if.end257
  %62 = load %union.tree_node*, %union.tree_node** %56, align 8, !dbg !13830
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.1, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13831
  %64 = load %union.tree_node*, %union.tree_node** %63, align 8, !dbg !13831
  %call269 = tail call i32 @simple_cst_equal(%union.tree_node* %62, %union.tree_node* %64) #6, !dbg !13832
  %cmp270 = icmp eq i32 %call269, 1, !dbg !13833
  br i1 %cmp270, label %if.end273, label %cleanup274, !dbg !13834

if.end273:                                        ; preds = %land.lhs.true264, %if.end257
  call void @llvm.dbg.value(metadata i8 1, metadata !13587, metadata !DIExpression()), !dbg !13800
  br label %cleanup274, !dbg !13835

cleanup274:                                       ; preds = %land.lhs.true264, %land.lhs.true243, %if.end273, %if.then251
  %cleanup.dest.slot.2 = phi i32 [ 1, %if.then251 ], [ 22, %if.end273 ], [ 24, %land.lhs.true243 ], [ 22, %land.lhs.true264 ]
  %needs_warning.7 = phi i8 [ %needs_warning.5, %if.then251 ], [ %needs_warning.6, %if.end273 ], [ %needs_warning.5, %land.lhs.true243 ], [ %needs_warning.6, %land.lhs.true264 ], !dbg !13602
  %ok.1 = phi i8 [ %ok.0, %if.then251 ], [ 1, %if.end273 ], [ %ok.0, %land.lhs.true243 ], [ %ok.0, %land.lhs.true264 ], !dbg !13800
  %retval.7 = phi i32 [ 0, %if.then251 ], [ %retval.6, %if.end273 ], [ %retval.6, %land.lhs.true243 ], [ %retval.6, %land.lhs.true264 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %ok.1, metadata !13587, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8 %needs_warning.7, metadata !13573, metadata !DIExpression()), !dbg !13602
  switch i32 %cleanup.dest.slot.2, label %cleanup285.loopexit [
    i32 24, label %for.inc277
    i32 22, label %for.end280
  ]

for.inc277:                                       ; preds = %for.body227, %cleanup274
  %needs_warning.8 = phi i8 [ %needs_warning.7, %cleanup274 ], [ %needs_warning.5, %for.body227 ], !dbg !13751
  %ok.2 = phi i8 [ %ok.1, %cleanup274 ], [ %ok.0, %for.body227 ], !dbg !13806
  %retval.8 = phi i32 [ %retval.7, %cleanup274 ], [ %retval.6, %for.body227 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %ok.2, metadata !13587, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8 %needs_warning.8, metadata !13573, metadata !DIExpression()), !dbg !13602
  %chain279 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13836
  br label %for.cond225, !dbg !13837, !llvm.loop !13838

for.end280:                                       ; preds = %for.cond225, %cleanup274
  %needs_warning.9 = phi i8 [ %needs_warning.7, %cleanup274 ], [ %needs_warning.5, %for.cond225 ], !dbg !13751
  %ok.3 = phi i8 [ %ok.1, %cleanup274 ], [ %ok.0, %for.cond225 ], !dbg !13806
  %retval.9 = phi i32 [ %retval.7, %cleanup274 ], [ %retval.6, %for.cond225 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %ok.3, metadata !13587, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8 %needs_warning.9, metadata !13573, metadata !DIExpression()), !dbg !13602
  %tobool281 = icmp eq i8 %ok.3, 0, !dbg !13840
  br i1 %tobool281, label %if.then282, label %cleanup285, !dbg !13842

if.then282:                                       ; preds = %for.end280
  store i32 0, i32* %val183, align 8, !dbg !13843
  br label %cleanup285, !dbg !13845

cleanup285.loopexit:                              ; preds = %cleanup274
  %needs_warning.7.lcssa = phi i8 [ %needs_warning.7, %cleanup274 ], !dbg !13602
  %retval.7.lcssa = phi i32 [ %retval.7, %cleanup274 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.7.lcssa, metadata !13573, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.7.lcssa, metadata !13573, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.7.lcssa, metadata !13573, metadata !DIExpression()), !dbg !13602
  br label %cleanup285

cleanup285:                                       ; preds = %cleanup285.loopexit, %for.end280, %if.then282
  %cleanup.dest.slot.3 = phi i1 [ false, %if.then282 ], [ true, %for.end280 ], [ false, %cleanup285.loopexit ]
  %needs_warning.10 = phi i8 [ %needs_warning.9, %if.then282 ], [ %needs_warning.9, %for.end280 ], [ %needs_warning.7.lcssa, %cleanup285.loopexit ], !dbg !13751
  %retval.10 = phi i32 [ 0, %if.then282 ], [ %retval.9, %for.end280 ], [ %retval.7.lcssa, %cleanup285.loopexit ], !dbg !13800
  call void @llvm.dbg.value(metadata i8 %needs_warning.10, metadata !13573, metadata !DIExpression()), !dbg !13602
  br i1 %cleanup.dest.slot.3, label %for.inc288, label %cleanup381.loopexit17

for.inc288:                                       ; preds = %cleanup285
  %chain290 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13846
  br label %for.cond220, !dbg !13847, !llvm.loop !13848

for.end291:                                       ; preds = %for.cond220
  %needs_warning.4.lcssa = phi i8 [ %needs_warning.4, %for.cond220 ], !dbg !13751
  call void @llvm.dbg.value(metadata i8 %needs_warning.4.lcssa, metadata !13573, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.4.lcssa, metadata !13573, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.4.lcssa, metadata !13573, metadata !DIExpression()), !dbg !13602
  %tobool293 = icmp eq i8 %needs_warning.4.lcssa, 0, !dbg !13850
  %cond294 = select i1 %tobool293, i32 10, i32 2, !dbg !13850
  store i32 %cond294, i32* %val183, align 8, !dbg !13851
  br label %cleanup381, !dbg !13852

sw.bb298:                                         ; preds = %cleanup.cont
  %call300 = tail call fastcc %struct.tagged_tu_seen_cache* @alloc_tagged_tu_seen_cache(%union.tree_node* %t1.addr.0.lcssa, %union.tree_node* %t2.addr.0.lcssa) #7, !dbg !13853
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %call300, metadata !13596, metadata !DIExpression()), !dbg !13854
  %values302 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13855
  %65 = bitcast i32* %values302 to %union.tree_node**, !dbg !13855
  %values304 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13856
  %66 = bitcast i32* %values304 to %union.tree_node**, !dbg !13856
  br label %for.cond305, !dbg !13857

for.cond305:                                      ; preds = %for.inc363, %sw.bb298
  %needs_warning.11 = phi i8 [ 0, %sw.bb298 ], [ %needs_warning.13, %for.inc363 ], !dbg !13751
  %s2.2.in = phi %union.tree_node** [ %66, %sw.bb298 ], [ %chain367, %for.inc363 ]
  %s1.3.in = phi %union.tree_node** [ %65, %sw.bb298 ], [ %chain365, %for.inc363 ]
  %s1.3 = load %union.tree_node*, %union.tree_node** %s1.3.in, align 8, !dbg !13858
  %s2.2 = load %union.tree_node*, %union.tree_node** %s2.2.in, align 8, !dbg !13858
  call void @llvm.dbg.value(metadata %union.tree_node* %s1.3, metadata !13571, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %union.tree_node* %s2.2, metadata !13572, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.11, metadata !13573, metadata !DIExpression()), !dbg !13602
  %tobool306 = icmp ne %union.tree_node* %s1.3, null, !dbg !13859
  %tobool308 = icmp ne %union.tree_node* %s2.2, null, !dbg !13860
  %spec.select8 = and i1 %tobool308, %tobool306, !dbg !13860
  br i1 %spec.select8, label %for.body310, label %for.end368, !dbg !13861

for.body310:                                      ; preds = %for.cond305
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13862
  %bf.load313 = load i64, i64* %67, align 8, !dbg !13862
  %68 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13864
  %bf.load317 = load i64, i64* %68, align 8, !dbg !13864
  %69 = xor i64 %bf.load313, %bf.load317, !dbg !13865
  %70 = and i64 %69, 65535, !dbg !13865
  %cmp320 = icmp eq i64 %70, 0, !dbg !13865
  br i1 %cmp320, label %lor.lhs.false322, label %cleanup360, !dbg !13866

lor.lhs.false322:                                 ; preds = %for.body310
  %name324 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13867
  %71 = load %union.tree_node*, %union.tree_node** %name324, align 8, !dbg !13867
  %name326 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13868
  %72 = load %union.tree_node*, %union.tree_node** %name326, align 8, !dbg !13868
  %cmp327 = icmp eq %union.tree_node* %71, %72, !dbg !13869
  br i1 %cmp327, label %if.end330, label %cleanup360, !dbg !13870

if.end330:                                        ; preds = %lor.lhs.false322
  %type332 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13871
  %73 = load %union.tree_node*, %union.tree_node** %type332, align 8, !dbg !13871
  %type334 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !13872
  %74 = load %union.tree_node*, %union.tree_node** %type334, align 8, !dbg !13872
  %call335 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %73, %union.tree_node* %74, i8* %enum_and_int_p) #7, !dbg !13873
  call void @llvm.dbg.value(metadata i32 %call335, metadata !13598, metadata !DIExpression()), !dbg !13874
  switch i32 %call335, label %if.end343 [
    i32 0, label %cleanup360
    i32 2, label %if.then342
  ], !dbg !13875

if.then342:                                       ; preds = %if.end330
  call void @llvm.dbg.value(metadata i8 1, metadata !13573, metadata !DIExpression()), !dbg !13602
  br label %if.end343, !dbg !13876

if.end343:                                        ; preds = %if.end330, %if.then342
  %needs_warning.12 = phi i8 [ 1, %if.then342 ], [ %needs_warning.11, %if.end330 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.12, metadata !13573, metadata !DIExpression()), !dbg !13602
  %bf.load345 = load i64, i64* %67, align 8, !dbg !13878
  %bf.cast34712 = and i64 %bf.load345, 65535, !dbg !13880
  %cmp348 = icmp eq i64 %bf.cast34712, 31, !dbg !13880
  br i1 %cmp348, label %land.lhs.true350, label %if.end359, !dbg !13881

land.lhs.true350:                                 ; preds = %if.end343
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.3, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13882
  %76 = load %union.tree_node*, %union.tree_node** %75, align 8, !dbg !13882
  %77 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.2, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !13883
  %78 = load %union.tree_node*, %union.tree_node** %77, align 8, !dbg !13883
  %call355 = tail call i32 @simple_cst_equal(%union.tree_node* %76, %union.tree_node* %78) #6, !dbg !13884
  %cmp356 = icmp eq i32 %call355, 1, !dbg !13885
  br i1 %cmp356, label %if.end359, label %cleanup360, !dbg !13886

if.end359:                                        ; preds = %land.lhs.true350, %if.end343
  br label %cleanup360, !dbg !13887

cleanup360:                                       ; preds = %land.lhs.true350, %lor.lhs.false322, %for.body310, %if.end330, %if.end359
  %cleanup.dest.slot.4 = phi i1 [ true, %if.end359 ], [ false, %lor.lhs.false322 ], [ false, %for.body310 ], [ false, %if.end330 ], [ false, %land.lhs.true350 ]
  %needs_warning.13 = phi i8 [ %needs_warning.12, %if.end359 ], [ %needs_warning.11, %lor.lhs.false322 ], [ %needs_warning.11, %for.body310 ], [ %needs_warning.11, %if.end330 ], [ %needs_warning.12, %land.lhs.true350 ], !dbg !13602
  call void @llvm.dbg.value(metadata i8 %needs_warning.13, metadata !13573, metadata !DIExpression()), !dbg !13602
  br i1 %cleanup.dest.slot.4, label %for.inc363, label %for.end368

for.inc363:                                       ; preds = %cleanup360
  %chain365 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13888
  %chain367 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !13889
  br label %for.cond305, !dbg !13890, !llvm.loop !13891

for.end368:                                       ; preds = %cleanup360, %for.cond305
  %spec.select8.lcssa = phi i1 [ %spec.select8, %cleanup360 ], [ %spec.select8, %for.cond305 ], !dbg !13860
  %needs_warning.14 = phi i8 [ %needs_warning.13, %cleanup360 ], [ %needs_warning.11, %for.cond305 ], !dbg !13751
  call void @llvm.dbg.value(metadata i8 %needs_warning.14, metadata !13573, metadata !DIExpression()), !dbg !13602
  br i1 %spec.select8.lcssa, label %if.then372, label %if.else, !dbg !13893

if.then372:                                       ; preds = %for.end368
  %val373 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call300, i64 0, i32 3, !dbg !13895
  store i32 0, i32* %val373, align 8, !dbg !13896
  br label %if.end378, !dbg !13897

if.else:                                          ; preds = %for.end368
  %tobool375 = icmp eq i8 %needs_warning.14, 0, !dbg !13898
  %cond376 = select i1 %tobool375, i32 1, i32 2, !dbg !13898
  %val377 = getelementptr inbounds %struct.tagged_tu_seen_cache, %struct.tagged_tu_seen_cache* %call300, i64 0, i32 3, !dbg !13899
  store i32 %cond376, i32* %val377, align 8, !dbg !13900
  br label %if.end378

if.end378:                                        ; preds = %if.else, %if.then372
  %79 = phi i32 [ %cond376, %if.else ], [ 0, %if.then372 ], !dbg !13901
  br label %cleanup381

sw.default:                                       ; preds = %cleanup.cont
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 1500, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !13902
  br label %cleanup381, !dbg !13903

cleanup381.loopexit:                              ; preds = %for.cond113
  br label %cleanup381, !dbg !13904

cleanup381.loopexit17:                            ; preds = %cleanup285
  %retval.10.lcssa = phi i32 [ %retval.10, %cleanup285 ], !dbg !13800
  br label %cleanup381, !dbg !13904

cleanup381.loopexit18:                            ; preds = %cleanup201
  %retval.3.lcssa = phi i32 [ %retval.3, %cleanup201 ], !dbg !13602
  br label %cleanup381, !dbg !13904

cleanup381:                                       ; preds = %cleanup381.loopexit18, %cleanup381.loopexit17, %cleanup381.loopexit, %land.lhs.true36, %if.then149, %if.then213, %for.end291, %if.then83, %if.then98, %if.then108, %if.then129, %sw.bb, %for.end89, %if.end, %lor.lhs.false, %cleanup, %sw.default, %if.end378
  %retval.12 = phi i32 [ %retval.0, %cleanup ], [ 0, %sw.default ], [ %79, %if.end378 ], [ 0, %land.lhs.true36 ], [ 1, %lor.lhs.false ], [ 1, %if.end ], [ 0, %if.then98 ], [ 0, %if.then108 ], [ 0, %if.then129 ], [ 0, %if.then83 ], [ 1, %sw.bb ], [ 1, %for.end89 ], [ 0, %if.then149 ], [ %cond294, %for.end291 ], [ %cond, %if.then213 ], [ 1, %cleanup381.loopexit ], [ %retval.10.lcssa, %cleanup381.loopexit17 ], [ %retval.3.lcssa, %cleanup381.loopexit18 ], !dbg !13602
  ret i32 %retval.12, !dbg !13904
}

declare dso_local i32 @self_promoting_args_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @type_lists_compatible_p(%union.tree_node* %args1, %union.tree_node* %args2, i8* %enum_and_int_p) unnamed_addr #5 !dbg !13905 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %args1, metadata !13907, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata %union.tree_node* %args2, metadata !13908, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !13909, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i32 1, metadata !13910, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i32 0, metadata !13911, metadata !DIExpression()), !dbg !13936
  br label %while.cond, !dbg !13937

while.cond:                                       ; preds = %cleanup196, %entry
  %newval.0 = phi i32 [ 0, %entry ], [ %newval.4, %cleanup196 ], !dbg !13938
  %val.0 = phi i32 [ 1, %entry ], [ %val.2, %cleanup196 ], !dbg !13939
  %args2.addr.0 = phi %union.tree_node* [ %args2, %entry ], [ %args2.addr.1, %cleanup196 ]
  %args1.addr.0 = phi %union.tree_node* [ %args1, %entry ], [ %args1.addr.1, %cleanup196 ]
  %retval.0 = phi i32 [ undef, %entry ], [ %retval.8, %cleanup196 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %args1.addr.0, metadata !13907, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata %union.tree_node* %args2.addr.0, metadata !13908, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i32 %val.0, metadata !13910, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i32 %newval.0, metadata !13911, metadata !DIExpression()), !dbg !13936
  %cmp = icmp eq %union.tree_node* %args1.addr.0, null, !dbg !13940
  %cmp1 = icmp eq %union.tree_node* %args2.addr.0, null, !dbg !13942
  %or.cond = and i1 %cmp, %cmp1, !dbg !13943
  br i1 %or.cond, label %cleanup196, label %if.end, !dbg !13943

if.end:                                           ; preds = %while.cond
  %or.cond3 = or i1 %cmp, %cmp1, !dbg !13944
  br i1 %or.cond3, label %cleanup196, label %if.end5, !dbg !13944

if.end5:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %args1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13946
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !13946
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !13912, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !13914, metadata !DIExpression()), !dbg !13947
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %args2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13948
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !13948
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13915, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !13916, metadata !DIExpression()), !dbg !13947
  %tobool = icmp ne %union.tree_node* %1, null, !dbg !13949
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !13951
  %cmp9 = icmp ne %union.tree_node* %1, %4, !dbg !13952
  %or.cond4 = and i1 %tobool, %cmp9, !dbg !13953
  br i1 %or.cond4, label %land.lhs.true10, label %if.end13, !dbg !13953

land.lhs.true10:                                  ; preds = %if.end5
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13954
  %bf.load = load i64, i64* %5, align 8, !dbg !13954
  %bf.cast25 = and i64 %bf.load, 65535, !dbg !13955
  %cmp11 = icmp eq i64 %bf.cast25, 15, !dbg !13955
  br i1 %cmp11, label %if.end13, label %if.then12, !dbg !13956

if.then12:                                        ; preds = %land.lhs.true10
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !13957
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !13957
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !13914, metadata !DIExpression()), !dbg !13947
  br label %if.end13, !dbg !13958

if.end13:                                         ; preds = %land.lhs.true10, %if.then12, %if.end5
  %mv1.0 = phi %union.tree_node* [ %7, %if.then12 ], [ %1, %land.lhs.true10 ], [ %1, %if.end5 ], !dbg !13947
  call void @llvm.dbg.value(metadata %union.tree_node* %mv1.0, metadata !13914, metadata !DIExpression()), !dbg !13947
  %tobool14 = icmp ne %union.tree_node* %3, null, !dbg !13959
  %cmp16 = icmp ne %union.tree_node* %3, %4, !dbg !13961
  %or.cond5 = and i1 %tobool14, %cmp16, !dbg !13962
  br i1 %or.cond5, label %land.lhs.true17, label %if.end26, !dbg !13962

land.lhs.true17:                                  ; preds = %if.end13
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13963
  %bf.load19 = load i64, i64* %8, align 8, !dbg !13963
  %bf.cast2124 = and i64 %bf.load19, 65535, !dbg !13964
  %cmp22 = icmp eq i64 %bf.cast2124, 15, !dbg !13964
  br i1 %cmp22, label %if.end26, label %if.then23, !dbg !13965

if.then23:                                        ; preds = %land.lhs.true17
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !13966
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !13966
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !13916, metadata !DIExpression()), !dbg !13947
  br label %if.end26, !dbg !13967

if.end26:                                         ; preds = %land.lhs.true17, %if.then23, %if.end13
  %mv2.0 = phi %union.tree_node* [ %10, %if.then23 ], [ %3, %land.lhs.true17 ], [ %3, %if.end13 ], !dbg !13947
  call void @llvm.dbg.value(metadata %union.tree_node* %mv2.0, metadata !13916, metadata !DIExpression()), !dbg !13947
  %cmp27 = icmp eq %union.tree_node* %1, null, !dbg !13968
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !13969

if.then28:                                        ; preds = %if.end26
  %call = tail call %union.tree_node* @c_type_promotes_to(%union.tree_node* %3) #7, !dbg !13970
  %cmp29 = icmp eq %union.tree_node* %call, %3, !dbg !13973
  br i1 %cmp29, label %if.end188, label %cleanup196, !dbg !13974

if.else:                                          ; preds = %if.end26
  %cmp32 = icmp eq %union.tree_node* %3, null, !dbg !13975
  br i1 %cmp32, label %if.then33, label %if.else38, !dbg !13976

if.then33:                                        ; preds = %if.else
  %call34 = tail call %union.tree_node* @c_type_promotes_to(%union.tree_node* nonnull %1) #7, !dbg !13977
  %cmp35 = icmp eq %union.tree_node* %call34, %1, !dbg !13980
  br i1 %cmp35, label %if.end188, label %cleanup196, !dbg !13981

if.else38:                                        ; preds = %if.else
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13982
  %bf.load40 = load i64, i64* %11, align 8, !dbg !13982
  %bf.cast4216 = and i64 %bf.load40, 65535, !dbg !13983
  %cmp43 = icmp eq i64 %bf.cast4216, 0, !dbg !13983
  br i1 %cmp43, label %if.end188, label %lor.lhs.false44, !dbg !13984

lor.lhs.false44:                                  ; preds = %if.else38
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !13985
  %bf.load46 = load i64, i64* %12, align 8, !dbg !13985
  %bf.cast4817 = and i64 %bf.load46, 65535, !dbg !13986
  %cmp49 = icmp eq i64 %bf.cast4817, 0, !dbg !13986
  br i1 %cmp49, label %if.end188, label %if.else51, !dbg !13987

if.else51:                                        ; preds = %lor.lhs.false44
  %call52 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %mv1.0, %union.tree_node* %mv2.0, i8* %enum_and_int_p) #7, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %call52, metadata !13911, metadata !DIExpression()), !dbg !13936
  %tobool53 = icmp eq i32 %call52, 0, !dbg !13989
  br i1 %tobool53, label %if.then54, label %if.end188, !dbg !13990

if.then54:                                        ; preds = %if.else51
  %bf.load56 = load i64, i64* %11, align 8, !dbg !13991
  %bf.cast5818 = and i64 %bf.load56, 65535, !dbg !13992
  %cmp59 = icmp eq i64 %bf.cast5818, 17, !dbg !13992
  br i1 %cmp59, label %land.lhs.true60, label %if.else110, !dbg !13993

land.lhs.true60:                                  ; preds = %if.then54
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !13994
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !13994
  %cmp62 = icmp eq %union.tree_node* %14, null, !dbg !13995
  br i1 %cmp62, label %land.lhs.true68, label %lor.lhs.false63, !dbg !13996

lor.lhs.false63:                                  ; preds = %land.lhs.true60
  %type64 = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !13997
  %transparent_aggr_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type64, i64 0, i32 6, !dbg !13997
  %bf.load65 = load i32, i32* %transparent_aggr_flag, align 4, !dbg !13997
  %bf.clear66 = and i32 %bf.load65, 4096, !dbg !13997
  %tobool67 = icmp eq i32 %bf.clear66, 0, !dbg !13997
  br i1 %tobool67, label %if.else110, label %land.lhs.true68, !dbg !13998

land.lhs.true68:                                  ; preds = %lor.lhs.false63, %land.lhs.true60
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !13999
  %16 = bitcast %union.tree_node** %15 to i64**, !dbg !13999
  %17 = load i64*, i64** %16, align 8, !dbg !13999
  %bf.load71 = load i64, i64* %17, align 8, !dbg !13999
  %bf.cast7322 = and i64 %bf.load71, 65535, !dbg !14000
  %cmp74 = icmp eq i64 %bf.cast7322, 23, !dbg !14000
  br i1 %cmp74, label %land.lhs.true75, label %if.else110, !dbg !14001

land.lhs.true75:                                  ; preds = %land.lhs.true68
  %18 = bitcast i64* %17 to %union.tree_node*, !dbg !14001
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14002
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !14002
  %call80 = tail call i32 @tree_int_cst_equal(%union.tree_node* %18, %union.tree_node* %20) #6, !dbg !14003
  %tobool81 = icmp eq i32 %call80, 0, !dbg !14003
  br i1 %tobool81, label %if.else110, label %if.then82, !dbg !14004

if.then82:                                        ; preds = %land.lhs.true75
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14005
  %21 = bitcast i32* %values to %union.tree_node**, !dbg !14005
  br label %for.cond, !dbg !14006

for.cond:                                         ; preds = %for.inc, %if.then82
  %memb.0.in = phi %union.tree_node** [ %21, %if.then82 ], [ %chain, %for.inc ]
  %memb.0 = load %union.tree_node*, %union.tree_node** %memb.0.in, align 8, !dbg !14007
  call void @llvm.dbg.value(metadata %union.tree_node* %memb.0, metadata !13917, metadata !DIExpression()), !dbg !14008
  %cond10 = icmp eq %union.tree_node* %memb.0, null, !dbg !14009
  br i1 %cond10, label %cleanup107.loopexit, label %for.body, !dbg !14009

for.body:                                         ; preds = %for.cond
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14010
  %22 = load %union.tree_node*, %union.tree_node** %type85, align 8, !dbg !14010
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !13925, metadata !DIExpression()), !dbg !14011
  %tobool86 = icmp ne %union.tree_node* %22, null, !dbg !14012
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !14014
  %cmp88 = icmp ne %union.tree_node* %22, %23, !dbg !14015
  %or.cond6 = and i1 %tobool86, %cmp88, !dbg !14016
  br i1 %or.cond6, label %land.lhs.true89, label %if.end98, !dbg !14016

land.lhs.true89:                                  ; preds = %for.body
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14017
  %bf.load91 = load i64, i64* %24, align 8, !dbg !14017
  %bf.cast9323 = and i64 %bf.load91, 65535, !dbg !14018
  %cmp94 = icmp eq i64 %bf.cast9323, 15, !dbg !14018
  br i1 %cmp94, label %if.end98, label %if.then95, !dbg !14019

if.then95:                                        ; preds = %land.lhs.true89
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14020
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8, !dbg !14020
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !13925, metadata !DIExpression()), !dbg !14011
  br label %if.end98, !dbg !14021

if.end98:                                         ; preds = %land.lhs.true89, %if.then95, %for.body
  %mv3.0 = phi %union.tree_node* [ %26, %if.then95 ], [ %22, %land.lhs.true89 ], [ %22, %for.body ], !dbg !14011
  call void @llvm.dbg.value(metadata %union.tree_node* %mv3.0, metadata !13925, metadata !DIExpression()), !dbg !14011
  %call99 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %mv3.0, %union.tree_node* %mv2.0, i8* %enum_and_int_p) #7, !dbg !14022
  %tobool100 = icmp eq i32 %call99, 0, !dbg !14022
  br i1 %tobool100, label %for.inc, label %for.end

for.inc:                                          ; preds = %if.end98
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %memb.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14024
  br label %for.cond, !dbg !14025, !llvm.loop !14026

for.end:                                          ; preds = %if.end98
  br label %cleanup107, !dbg !14028

cleanup107.loopexit:                              ; preds = %for.cond
  br label %cleanup107

cleanup107:                                       ; preds = %cleanup107.loopexit, %for.end
  %cleanup.dest.slot.1 = phi i32 [ 0, %for.end ], [ 1, %cleanup107.loopexit ]
  %retval.1 = phi i32 [ %retval.0, %for.end ], [ 0, %cleanup107.loopexit ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end188, label %cleanup196

if.else110:                                       ; preds = %land.lhs.true75, %lor.lhs.false63, %land.lhs.true68, %if.then54
  %bf.load112 = load i64, i64* %12, align 8, !dbg !14029
  %bf.cast11419 = and i64 %bf.load112, 65535, !dbg !14030
  %cmp115 = icmp eq i64 %bf.cast11419, 17, !dbg !14030
  br i1 %cmp115, label %land.lhs.true116, label %cleanup196, !dbg !14031

land.lhs.true116:                                 ; preds = %if.else110
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !14032
  %28 = load %union.tree_node*, %union.tree_node** %27, align 8, !dbg !14032
  %cmp119 = icmp eq %union.tree_node* %28, null, !dbg !14033
  br i1 %cmp119, label %land.lhs.true127, label %lor.lhs.false120, !dbg !14034

lor.lhs.false120:                                 ; preds = %land.lhs.true116
  %type121 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !14035
  %transparent_aggr_flag122 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type121, i64 0, i32 6, !dbg !14035
  %bf.load123 = load i32, i32* %transparent_aggr_flag122, align 4, !dbg !14035
  %bf.clear125 = and i32 %bf.load123, 4096, !dbg !14035
  %tobool126 = icmp eq i32 %bf.clear125, 0, !dbg !14035
  br i1 %tobool126, label %cleanup196, label %land.lhs.true127, !dbg !14036

land.lhs.true127:                                 ; preds = %lor.lhs.false120, %land.lhs.true116
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14037
  %30 = bitcast %union.tree_node** %29 to i64**, !dbg !14037
  %31 = load i64*, i64** %30, align 8, !dbg !14037
  %bf.load131 = load i64, i64* %31, align 8, !dbg !14037
  %bf.cast13320 = and i64 %bf.load131, 65535, !dbg !14038
  %cmp134 = icmp eq i64 %bf.cast13320, 23, !dbg !14038
  br i1 %cmp134, label %land.lhs.true135, label %cleanup196, !dbg !14039

land.lhs.true135:                                 ; preds = %land.lhs.true127
  %32 = bitcast i64* %31 to %union.tree_node*, !dbg !14039
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !14040
  %34 = load %union.tree_node*, %union.tree_node** %33, align 8, !dbg !14040
  %call140 = tail call i32 @tree_int_cst_equal(%union.tree_node* %32, %union.tree_node* %34) #6, !dbg !14041
  %tobool141 = icmp eq i32 %call140, 0, !dbg !14041
  br i1 %tobool141, label %cleanup196, label %if.then142, !dbg !14042

if.then142:                                       ; preds = %land.lhs.true135
  %values145 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14043
  %35 = bitcast i32* %values145 to %union.tree_node**, !dbg !14043
  br label %for.cond146, !dbg !14044

for.cond146:                                      ; preds = %for.inc172, %if.then142
  %memb143.0.in = phi %union.tree_node** [ %35, %if.then142 ], [ %chain174, %for.inc172 ]
  %memb143.0 = load %union.tree_node*, %union.tree_node** %memb143.0.in, align 8, !dbg !14045
  call void @llvm.dbg.value(metadata %union.tree_node* %memb143.0, metadata !13929, metadata !DIExpression()), !dbg !14046
  %cond13 = icmp eq %union.tree_node* %memb143.0, null, !dbg !14047
  br i1 %cond13, label %cleanup179.loopexit, label %for.body148, !dbg !14047

for.body148:                                      ; preds = %for.cond146
  %type151 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb143.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !14048
  %36 = load %union.tree_node*, %union.tree_node** %type151, align 8, !dbg !14048
  call void @llvm.dbg.value(metadata %union.tree_node* %36, metadata !13932, metadata !DIExpression()), !dbg !14049
  %tobool152 = icmp ne %union.tree_node* %36, null, !dbg !14050
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !14052
  %cmp154 = icmp ne %union.tree_node* %36, %37, !dbg !14053
  %or.cond7 = and i1 %tobool152, %cmp154, !dbg !14054
  br i1 %or.cond7, label %land.lhs.true155, label %if.end164, !dbg !14054

land.lhs.true155:                                 ; preds = %for.body148
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14055
  %bf.load157 = load i64, i64* %38, align 8, !dbg !14055
  %bf.cast15921 = and i64 %bf.load157, 65535, !dbg !14056
  %cmp160 = icmp eq i64 %bf.cast15921, 15, !dbg !14056
  br i1 %cmp160, label %if.end164, label %if.then161, !dbg !14057

if.then161:                                       ; preds = %land.lhs.true155
  %39 = getelementptr inbounds %union.tree_node, %union.tree_node* %36, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !14058
  %40 = load %union.tree_node*, %union.tree_node** %39, align 8, !dbg !14058
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !13932, metadata !DIExpression()), !dbg !14049
  br label %if.end164, !dbg !14059

if.end164:                                        ; preds = %land.lhs.true155, %if.then161, %for.body148
  %mv3149.0 = phi %union.tree_node* [ %40, %if.then161 ], [ %36, %land.lhs.true155 ], [ %36, %for.body148 ], !dbg !14049
  call void @llvm.dbg.value(metadata %union.tree_node* %mv3149.0, metadata !13932, metadata !DIExpression()), !dbg !14049
  %call165 = tail call fastcc i32 @comptypes_internal(%union.tree_node* %mv3149.0, %union.tree_node* %mv1.0, i8* %enum_and_int_p) #7, !dbg !14060
  %tobool166 = icmp eq i32 %call165, 0, !dbg !14060
  br i1 %tobool166, label %for.inc172, label %for.end175

for.inc172:                                       ; preds = %if.end164
  %chain174 = getelementptr inbounds %union.tree_node, %union.tree_node* %memb143.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14062
  br label %for.cond146, !dbg !14063, !llvm.loop !14064

for.end175:                                       ; preds = %if.end164
  br label %cleanup179, !dbg !14066

cleanup179.loopexit:                              ; preds = %for.cond146
  br label %cleanup179

cleanup179:                                       ; preds = %cleanup179.loopexit, %for.end175
  %cleanup.dest.slot.3 = phi i32 [ 0, %for.end175 ], [ 1, %cleanup179.loopexit ]
  %retval.2 = phi i32 [ %retval.0, %for.end175 ], [ 0, %cleanup179.loopexit ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond1, label %if.end188, label %cleanup196

if.end188:                                        ; preds = %if.then28, %if.then33, %if.else51, %cleanup179, %cleanup107, %if.else38, %lor.lhs.false44
  %newval.3 = phi i32 [ %newval.0, %if.then28 ], [ %newval.0, %if.then33 ], [ %newval.0, %lor.lhs.false44 ], [ %newval.0, %if.else38 ], [ 0, %cleanup107 ], [ 0, %cleanup179 ], [ %call52, %if.else51 ], !dbg !13938
  %retval.7 = phi i32 [ %retval.0, %if.then28 ], [ %retval.0, %if.then33 ], [ %retval.0, %lor.lhs.false44 ], [ %retval.0, %if.else38 ], [ %retval.1, %cleanup107 ], [ %retval.2, %cleanup179 ], [ %retval.0, %if.else51 ]
  call void @llvm.dbg.value(metadata i32 %newval.3, metadata !13911, metadata !DIExpression()), !dbg !13936
  %cmp189 = icmp sgt i32 %newval.3, %val.0, !dbg !14067
  %spec.select = select i1 %cmp189, i32 %newval.3, i32 %val.0, !dbg !14069
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !13910, metadata !DIExpression()), !dbg !13936
  %chain193 = getelementptr inbounds %union.tree_node, %union.tree_node* %args1.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14070
  %41 = load %union.tree_node*, %union.tree_node** %chain193, align 8, !dbg !14070
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !13907, metadata !DIExpression()), !dbg !13936
  %chain195 = getelementptr inbounds %union.tree_node, %union.tree_node* %args2.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !14071
  %42 = load %union.tree_node*, %union.tree_node** %chain195, align 8, !dbg !14071
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !13908, metadata !DIExpression()), !dbg !13936
  br label %cleanup196, !dbg !14072

cleanup196:                                       ; preds = %if.then28, %if.then33, %land.lhs.true135, %lor.lhs.false120, %if.else110, %land.lhs.true127, %if.end, %while.cond, %cleanup107, %cleanup179, %if.end188
  %cleanup.dest.slot.4 = phi i32 [ 0, %if.end188 ], [ %cleanup.dest.slot.1, %cleanup107 ], [ %cleanup.dest.slot.3, %cleanup179 ], [ 1, %while.cond ], [ 1, %if.end ], [ 1, %if.then28 ], [ 1, %if.then33 ], [ 1, %land.lhs.true135 ], [ 1, %land.lhs.true127 ], [ 1, %lor.lhs.false120 ], [ 1, %if.else110 ]
  %newval.4 = phi i32 [ %newval.3, %if.end188 ], [ 0, %cleanup107 ], [ 0, %cleanup179 ], [ %newval.0, %while.cond ], [ %newval.0, %if.end ], [ %newval.0, %if.then28 ], [ %newval.0, %if.then33 ], [ 0, %land.lhs.true135 ], [ 0, %land.lhs.true127 ], [ 0, %lor.lhs.false120 ], [ 0, %if.else110 ], !dbg !13936
  %val.2 = phi i32 [ %spec.select, %if.end188 ], [ %val.0, %cleanup107 ], [ %val.0, %cleanup179 ], [ %val.0, %while.cond ], [ %val.0, %if.end ], [ %val.0, %if.then28 ], [ %val.0, %if.then33 ], [ %val.0, %land.lhs.true135 ], [ %val.0, %land.lhs.true127 ], [ %val.0, %lor.lhs.false120 ], [ %val.0, %if.else110 ], !dbg !13936
  %args2.addr.1 = phi %union.tree_node* [ %42, %if.end188 ], [ %args2.addr.0, %cleanup107 ], [ %args2.addr.0, %cleanup179 ], [ null, %while.cond ], [ %args2.addr.0, %if.end ], [ %args2.addr.0, %if.then28 ], [ %args2.addr.0, %if.then33 ], [ %args2.addr.0, %land.lhs.true135 ], [ %args2.addr.0, %land.lhs.true127 ], [ %args2.addr.0, %lor.lhs.false120 ], [ %args2.addr.0, %if.else110 ]
  %args1.addr.1 = phi %union.tree_node* [ %41, %if.end188 ], [ %args1.addr.0, %cleanup107 ], [ %args1.addr.0, %cleanup179 ], [ null, %while.cond ], [ %args1.addr.0, %if.end ], [ %args1.addr.0, %if.then28 ], [ %args1.addr.0, %if.then33 ], [ %args1.addr.0, %land.lhs.true135 ], [ %args1.addr.0, %land.lhs.true127 ], [ %args1.addr.0, %lor.lhs.false120 ], [ %args1.addr.0, %if.else110 ]
  %retval.8 = phi i32 [ %retval.7, %if.end188 ], [ %retval.1, %cleanup107 ], [ %retval.2, %cleanup179 ], [ %val.0, %while.cond ], [ 0, %if.end ], [ 0, %if.then28 ], [ 0, %if.then33 ], [ 0, %land.lhs.true135 ], [ 0, %land.lhs.true127 ], [ 0, %lor.lhs.false120 ], [ 0, %if.else110 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %args1.addr.1, metadata !13907, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata %union.tree_node* %args2.addr.1, metadata !13908, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i32 %val.2, metadata !13910, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i32 %newval.4, metadata !13911, metadata !DIExpression()), !dbg !13936
  %cond = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond, label %while.cond, label %cleanup202, !llvm.loop !14073

cleanup202:                                       ; preds = %cleanup196
  %retval.8.lcssa = phi i32 [ %retval.8, %cleanup196 ]
  ret i32 %retval.8.lcssa, !dbg !14074
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.tagged_tu_seen_cache* @alloc_tagged_tu_seen_cache(%union.tree_node* %t1, %union.tree_node* %t2) unnamed_addr #5 !dbg !14075 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !14079, metadata !DIExpression()), !dbg !14082
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !14080, metadata !DIExpression()), !dbg !14082
  %call = tail call i8* @xmalloc(i64 32) #6, !dbg !14083
  %0 = bitcast i8* %call to %struct.tagged_tu_seen_cache*, !dbg !14083
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %0, metadata !14081, metadata !DIExpression()), !dbg !14082
  %1 = load i64, i64* bitcast (%struct.tagged_tu_seen_cache** @tagged_tu_seen_base to i64*), align 8, !dbg !14084
  %2 = bitcast i8* %call to i64*, !dbg !14085
  store i64 %1, i64* %2, align 8, !dbg !14085
  %t11 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !14086
  %3 = bitcast i8* %t11 to %union.tree_node**, !dbg !14086
  store %union.tree_node* %t1, %union.tree_node** %3, align 8, !dbg !14087
  %t22 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !14088
  %4 = bitcast i8* %t22 to %union.tree_node**, !dbg !14088
  store %union.tree_node* %t2, %union.tree_node** %4, align 8, !dbg !14089
  store i8* %call, i8** bitcast (%struct.tagged_tu_seen_cache** @tagged_tu_seen_base to i8**), align 8, !dbg !14090
  %val = getelementptr inbounds i8, i8* %call, i64 24, !dbg !14091
  %5 = bitcast i8* %val to i32*, !dbg !14091
  store i32 1, i32* %5, align 8, !dbg !14092
  ret %struct.tagged_tu_seen_cache* %0, !dbg !14093
}

declare dso_local i32 @simple_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @purpose_member(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #2

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local void @ggc_free(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_message_selector() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !14094 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !14098, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !14099, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !14100, metadata !DIExpression()), !dbg !14101
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !14102
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !14102

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !14102
  %0 = load i32, i32* %num, align 8, !dbg !14102
  %cmp = icmp ugt i32 %0, %ix_, !dbg !14102
  br i1 %cmp, label %if.then, label %if.else, !dbg !14104

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !14105
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14105
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14105
  br label %return, !dbg !14105

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !14107

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !14109
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !14109
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !14109
  ret i32 %retval.0, !dbg !14104
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !14110 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !14114, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !14115, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !14116, metadata !DIExpression()), !dbg !14118
  %idxprom = zext i32 %ix_ to i64, !dbg !14119
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14119
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !14119
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !14117, metadata !DIExpression()), !dbg !14118
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !14119
  ret %union.tree_node* %0, !dbg !14119
}

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local void @lvalue_error(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @comptypes_check_enum_int(%union.tree_node* %type1, %union.tree_node* %type2, i8* %enum_and_int_p) unnamed_addr #5 !dbg !14120 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type1, metadata !14124, metadata !DIExpression()), !dbg !14129
  call void @llvm.dbg.value(metadata %union.tree_node* %type2, metadata !14125, metadata !DIExpression()), !dbg !14129
  call void @llvm.dbg.value(metadata i8* %enum_and_int_p, metadata !14126, metadata !DIExpression()), !dbg !14129
  %0 = load %struct.tagged_tu_seen_cache*, %struct.tagged_tu_seen_cache** @tagged_tu_seen_base, align 8, !dbg !14130
  call void @llvm.dbg.value(metadata %struct.tagged_tu_seen_cache* %0, metadata !14127, metadata !DIExpression()), !dbg !14129
  %call = tail call fastcc i32 @comptypes_internal(%union.tree_node* %type1, %union.tree_node* %type2, i8* %enum_and_int_p) #7, !dbg !14131
  call void @llvm.dbg.value(metadata i32 %call, metadata !14128, metadata !DIExpression()), !dbg !14129
  tail call fastcc void @free_all_tagged_tu_seen_up_to(%struct.tagged_tu_seen_cache* %0) #7, !dbg !14132
  ret i32 %call, !dbg !14133
}

declare dso_local zeroext i8 @vector_types_convertible_p(%union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @vector_targets_convertible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @check_missing_format_attribute(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_common_unsigned_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @objc_type_quals_match(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_constant_value_for_optimization(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector_from_ctor(%union.tree_node*, %struct.VEC_constructor_elt_gc*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @valid_compound_expr_initializer(%union.tree_node* %value, %union.tree_node* %endtype) unnamed_addr #5 !dbg !14134 {
entry:
  br label %tailrecurse, !dbg !14138

tailrecurse:                                      ; preds = %if.end, %entry
  %value.tr = phi %union.tree_node* [ %value, %entry ], [ %3, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr, metadata !14136, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %union.tree_node* %endtype, metadata !14137, metadata !DIExpression()), !dbg !14141
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !14142
  %bf.load = load i64, i64* %0, align 8, !dbg !14142
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14143
  %cmp = icmp eq i64 %bf.cast1, 52, !dbg !14143
  br i1 %cmp, label %if.then, label %if.else, !dbg !14144

if.then:                                          ; preds = %tailrecurse
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %value.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !14145
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !14145
  %call = tail call fastcc %union.tree_node* @valid_compound_expr_initializer(%union.tree_node* %1, %union.tree_node* %endtype) #7, !dbg !14147
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !14148
  %cmp1 = icmp eq %union.tree_node* %call, %2, !dbg !14149
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !14150

if.then2:                                         ; preds = %if.then
  %call.lcssa = phi %union.tree_node* [ %call, %if.then ], !dbg !14147
  ret %union.tree_node* %call.lcssa, !dbg !14151

if.end:                                           ; preds = %if.then
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !14152
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8, !dbg !14152
  br label %tailrecurse, !dbg !14138

if.else:                                          ; preds = %tailrecurse
  %value.tr.lcssa = phi %union.tree_node* [ %value.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr.lcssa, metadata !14136, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr.lcssa, metadata !14136, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr.lcssa, metadata !14136, metadata !DIExpression()), !dbg !14141
  %call7 = tail call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %value.tr.lcssa, %union.tree_node* %endtype) #6, !dbg !14153
  %tobool = icmp eq %union.tree_node* %call7, null, !dbg !14153
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !14155
  %spec.select = select i1 %tobool, %union.tree_node* %4, %union.tree_node* %value.tr.lcssa, !dbg !14156
  ret %union.tree_node* %spec.select, !dbg !14156
}

declare dso_local %union.tree_node* @initializer_constant_valid_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_pending_init(%union.tree_node* %purpose, %union.tree_node* %value, %union.tree_node* %origtype, i8 zeroext %implicit) unnamed_addr #5 !dbg !14157 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose, metadata !14161, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !14162, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %union.tree_node* %origtype, metadata !14163, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata i8 %implicit, metadata !14164, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** @constructor_pending_elts, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* null, metadata !14165, metadata !DIExpression()), !dbg !14189
  %0 = load i64*, i64** bitcast (%union.tree_node** @constructor_type to i64**), align 8, !dbg !14190
  %bf.load = load i64, i64* %0, align 8, !dbg !14190
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !14191
  %cmp = icmp eq i64 %bf.cast1, 15, !dbg !14191
  br i1 %cmp, label %while.cond.preheader, label %if.else27, !dbg !14192

while.cond.preheader:                             ; preds = %entry
  br label %while.cond, !dbg !14193

while.cond:                                       ; preds = %while.cond.preheader, %if.end26
  %p.0 = phi %struct.init_node* [ %1, %if.end26 ], [ null, %while.cond.preheader ], !dbg !14189
  %q.0 = phi %struct.init_node** [ %q.1, %if.end26 ], [ @constructor_pending_elts, %while.cond.preheader ], !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.0, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.0, metadata !14165, metadata !DIExpression()), !dbg !14189
  %1 = load %struct.init_node*, %struct.init_node** %q.0, align 8, !dbg !14195
  %cmp1 = icmp eq %struct.init_node* %1, null, !dbg !14196
  br i1 %cmp1, label %if.end65.loopexit, label %while.body, !dbg !14193

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.init_node* %1, metadata !14165, metadata !DIExpression()), !dbg !14189
  %purpose2 = getelementptr inbounds %struct.init_node, %struct.init_node* %1, i64 0, i32 4, !dbg !14197
  %2 = load %union.tree_node*, %union.tree_node** %purpose2, align 8, !dbg !14197
  %call = tail call i32 @tree_int_cst_lt(%union.tree_node* %purpose, %union.tree_node* %2) #6, !dbg !14200
  %tobool = icmp eq i32 %call, 0, !dbg !14200
  br i1 %tobool, label %if.else, label %if.then3, !dbg !14201

if.then3:                                         ; preds = %while.body
  %left = getelementptr inbounds %struct.init_node, %struct.init_node* %1, i64 0, i32 0, !dbg !14202
  call void @llvm.dbg.value(metadata %struct.init_node** %left, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %if.end26, !dbg !14203

if.else:                                          ; preds = %while.body
  %3 = load %union.tree_node*, %union.tree_node** %purpose2, align 8, !dbg !14204
  %call5 = tail call i32 @tree_int_cst_lt(%union.tree_node* %3, %union.tree_node* %purpose) #6, !dbg !14206
  %tobool6 = icmp eq i32 %call5, 0, !dbg !14206
  br i1 %tobool6, label %if.else8, label %if.then7, !dbg !14207

if.then7:                                         ; preds = %if.else
  %right = getelementptr inbounds %struct.init_node, %struct.init_node* %1, i64 0, i32 1, !dbg !14208
  call void @llvm.dbg.value(metadata %struct.init_node** %right, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %if.end26

if.else8:                                         ; preds = %if.else
  %.lcssa21 = phi %struct.init_node* [ %1, %if.else ], !dbg !14195
  %tobool9 = icmp eq i8 %implicit, 0, !dbg !14209
  br i1 %tobool9, label %if.then10, label %if.end22, !dbg !14212

if.then10:                                        ; preds = %if.else8
  %value11 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa21, i64 0, i32 5, !dbg !14213
  %4 = bitcast %union.tree_node** %value11 to i64**, !dbg !14213
  %5 = load i64*, i64** %4, align 8, !dbg !14213
  %bf.load13 = load i64, i64* %5, align 8, !dbg !14213
  %bf.cast154 = and i64 %bf.load13, 65536, !dbg !14213
  %tobool16 = icmp eq i64 %bf.cast154, 0, !dbg !14213
  br i1 %tobool16, label %if.else18, label %if.then17, !dbg !14216

if.then17:                                        ; preds = %if.then10
  tail call fastcc void @warning_init(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.266, i64 0, i64 0)) #7, !dbg !14217
  br label %if.end22, !dbg !14217

if.else18:                                        ; preds = %if.then10
  %6 = load i32, i32* @warn_override_init, align 4, !dbg !14218
  %tobool19 = icmp eq i32 %6, 0, !dbg !14218
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !14220

if.then20:                                        ; preds = %if.else18
  tail call fastcc void @warning_init(i32 154, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.267, i64 0, i64 0)) #7, !dbg !14221
  br label %if.end22, !dbg !14221

if.end22:                                         ; preds = %if.else18, %if.else8, %if.then17, %if.then20
  %value23 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa21, i64 0, i32 5, !dbg !14222
  store %union.tree_node* %value, %union.tree_node** %value23, align 8, !dbg !14223
  %origtype24 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa21, i64 0, i32 6, !dbg !14224
  store %union.tree_node* %origtype, %union.tree_node** %origtype24, align 8, !dbg !14225
  br label %cleanup.cont264, !dbg !14226

if.end26:                                         ; preds = %if.then7, %if.then3
  %q.1 = phi %struct.init_node** [ %left, %if.then3 ], [ %right, %if.then7 ], !dbg !14227
  call void @llvm.dbg.value(metadata %struct.init_node** %q.1, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %while.cond, !dbg !14193, !llvm.loop !14228

if.else27:                                        ; preds = %entry
  %call28 = tail call %union.tree_node* @bit_position(%union.tree_node* %purpose) #6, !dbg !14230
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !14169, metadata !DIExpression()), !dbg !14231
  br label %while.cond29, !dbg !14232

while.cond29:                                     ; preds = %if.end63, %if.else27
  %p.1 = phi %struct.init_node* [ null, %if.else27 ], [ %7, %if.end63 ], !dbg !14189
  %q.2 = phi %struct.init_node** [ @constructor_pending_elts, %if.else27 ], [ %q.3, %if.end63 ], !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.2, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.1, metadata !14165, metadata !DIExpression()), !dbg !14189
  %7 = load %struct.init_node*, %struct.init_node** %q.2, align 8, !dbg !14233
  %cmp30 = icmp eq %struct.init_node* %7, null, !dbg !14234
  br i1 %cmp30, label %cleanup.loopexit, label %while.body31, !dbg !14232

while.body31:                                     ; preds = %while.cond29
  call void @llvm.dbg.value(metadata %struct.init_node* %7, metadata !14165, metadata !DIExpression()), !dbg !14189
  %purpose32 = getelementptr inbounds %struct.init_node, %struct.init_node* %7, i64 0, i32 4, !dbg !14235
  %8 = load %union.tree_node*, %union.tree_node** %purpose32, align 8, !dbg !14235
  %call33 = tail call %union.tree_node* @bit_position(%union.tree_node* %8) #6, !dbg !14238
  %call34 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call28, %union.tree_node* %call33) #6, !dbg !14239
  %tobool35 = icmp eq i32 %call34, 0, !dbg !14239
  br i1 %tobool35, label %if.else38, label %if.then36, !dbg !14240

if.then36:                                        ; preds = %while.body31
  %left37 = getelementptr inbounds %struct.init_node, %struct.init_node* %7, i64 0, i32 0, !dbg !14241
  call void @llvm.dbg.value(metadata %struct.init_node** %left37, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %if.end63, !dbg !14242

if.else38:                                        ; preds = %while.body31
  %9 = load %union.tree_node*, %union.tree_node** %purpose32, align 8, !dbg !14243
  %cmp40 = icmp eq %union.tree_node* %9, %purpose, !dbg !14245
  br i1 %cmp40, label %if.else43, label %if.then41, !dbg !14246

if.then41:                                        ; preds = %if.else38
  %right42 = getelementptr inbounds %struct.init_node, %struct.init_node* %7, i64 0, i32 1, !dbg !14247
  call void @llvm.dbg.value(metadata %struct.init_node** %right42, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %if.end63

if.else43:                                        ; preds = %if.else38
  %q.2.lcssa25 = phi %struct.init_node** [ %q.2, %if.else38 ], !dbg !14189
  %.lcssa24 = phi %struct.init_node* [ %7, %if.else38 ], !dbg !14233
  call void @llvm.dbg.value(metadata %struct.init_node** %q.2.lcssa25, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.2.lcssa25, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.2.lcssa25, metadata !14166, metadata !DIExpression()), !dbg !14189
  %tobool44 = icmp eq i8 %implicit, 0, !dbg !14248
  br i1 %tobool44, label %if.then45, label %if.end59, !dbg !14251

if.then45:                                        ; preds = %if.else43
  %value46 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa24, i64 0, i32 5, !dbg !14252
  %10 = bitcast %union.tree_node** %value46 to i64**, !dbg !14252
  %11 = load i64*, i64** %10, align 8, !dbg !14252
  %bf.load48 = load i64, i64* %11, align 8, !dbg !14252
  %bf.cast513 = and i64 %bf.load48, 65536, !dbg !14252
  %tobool52 = icmp eq i64 %bf.cast513, 0, !dbg !14252
  br i1 %tobool52, label %if.else54, label %if.then53, !dbg !14255

if.then53:                                        ; preds = %if.then45
  tail call fastcc void @warning_init(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.266, i64 0, i64 0)) #7, !dbg !14256
  br label %if.end59, !dbg !14256

if.else54:                                        ; preds = %if.then45
  %12 = load i32, i32* @warn_override_init, align 4, !dbg !14257
  %tobool55 = icmp eq i32 %12, 0, !dbg !14257
  br i1 %tobool55, label %if.end59, label %if.then56, !dbg !14259

if.then56:                                        ; preds = %if.else54
  tail call fastcc void @warning_init(i32 154, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.267, i64 0, i64 0)) #7, !dbg !14260
  br label %if.end59, !dbg !14260

if.end59:                                         ; preds = %if.else54, %if.else43, %if.then53, %if.then56
  %value60 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa24, i64 0, i32 5, !dbg !14261
  store %union.tree_node* %value, %union.tree_node** %value60, align 8, !dbg !14262
  %origtype61 = getelementptr inbounds %struct.init_node, %struct.init_node* %.lcssa24, i64 0, i32 6, !dbg !14263
  store %union.tree_node* %origtype, %union.tree_node** %origtype61, align 8, !dbg !14264
  br label %cleanup, !dbg !14265

if.end63:                                         ; preds = %if.then41, %if.then36
  %q.3 = phi %struct.init_node** [ %left37, %if.then36 ], [ %right42, %if.then41 ], !dbg !14266
  call void @llvm.dbg.value(metadata %struct.init_node** %q.3, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %while.cond29, !dbg !14232, !llvm.loop !14267

cleanup.loopexit:                                 ; preds = %while.cond29
  %p.1.lcssa = phi %struct.init_node* [ %p.1, %while.cond29 ], !dbg !14189
  %q.2.lcssa = phi %struct.init_node** [ %q.2, %while.cond29 ], !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.1.lcssa, metadata !14165, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.2.lcssa, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.1.lcssa, metadata !14165, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.2.lcssa, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.1.lcssa, metadata !14165, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.2.lcssa, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end59
  %q.226 = phi %struct.init_node** [ %q.2.lcssa25, %if.end59 ], [ %q.2.lcssa, %cleanup.loopexit ]
  %p.2 = phi %struct.init_node* [ %.lcssa24, %if.end59 ], [ %p.1.lcssa, %cleanup.loopexit ], !dbg !14189
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end59 ], [ true, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata %struct.init_node* %p.2, metadata !14165, metadata !DIExpression()), !dbg !14189
  br i1 %cleanup.dest.slot.0, label %if.end65, label %cleanup.cont264

if.end65.loopexit:                                ; preds = %while.cond
  %p.0.lcssa = phi %struct.init_node* [ %p.0, %while.cond ], !dbg !14189
  %q.0.lcssa = phi %struct.init_node** [ %q.0, %while.cond ], !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.0.lcssa, metadata !14165, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.0.lcssa, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.0.lcssa, metadata !14165, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.0.lcssa, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.0.lcssa, metadata !14165, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node** %q.0.lcssa, metadata !14166, metadata !DIExpression()), !dbg !14189
  br label %if.end65, !dbg !14269

if.end65:                                         ; preds = %if.end65.loopexit, %cleanup
  %p.3 = phi %struct.init_node* [ %p.2, %cleanup ], [ %p.0.lcssa, %if.end65.loopexit ], !dbg !14189
  %q.4 = phi %struct.init_node** [ %q.226, %cleanup ], [ %q.0.lcssa, %if.end65.loopexit ], !dbg !14270
  call void @llvm.dbg.value(metadata %struct.init_node** %q.4, metadata !14166, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.3, metadata !14165, metadata !DIExpression()), !dbg !14189
  %call66 = tail call i8* @ggc_alloc_stat(i64 56) #6, !dbg !14269
  %13 = bitcast i8* %call66 to %struct.init_node*, !dbg !14269
  call void @llvm.dbg.value(metadata %struct.init_node* %13, metadata !14168, metadata !DIExpression()), !dbg !14189
  %purpose67 = getelementptr inbounds i8, i8* %call66, i64 32, !dbg !14271
  %14 = bitcast i8* %purpose67 to %union.tree_node**, !dbg !14271
  store %union.tree_node* %purpose, %union.tree_node** %14, align 8, !dbg !14272
  %value68 = getelementptr inbounds i8, i8* %call66, i64 40, !dbg !14273
  %15 = bitcast i8* %value68 to %union.tree_node**, !dbg !14273
  store %union.tree_node* %value, %union.tree_node** %15, align 8, !dbg !14274
  %origtype69 = getelementptr inbounds i8, i8* %call66, i64 48, !dbg !14275
  %16 = bitcast i8* %origtype69 to %union.tree_node**, !dbg !14275
  store %union.tree_node* %origtype, %union.tree_node** %16, align 8, !dbg !14276
  %17 = bitcast %struct.init_node** %q.4 to i8**, !dbg !14277
  store i8* %call66, i8** %17, align 8, !dbg !14277
  %parent = getelementptr inbounds i8, i8* %call66, i64 16, !dbg !14278
  %18 = bitcast i8* %parent to %struct.init_node**, !dbg !14278
  store %struct.init_node* %p.3, %struct.init_node** %18, align 8, !dbg !14279
  %left70 = bitcast i8* %call66 to %struct.init_node**, !dbg !14280
  store %struct.init_node* null, %struct.init_node** %left70, align 8, !dbg !14281
  %right71 = getelementptr inbounds i8, i8* %call66, i64 8, !dbg !14282
  %19 = bitcast i8* %right71 to %struct.init_node**, !dbg !14282
  store %struct.init_node* null, %struct.init_node** %19, align 8, !dbg !14283
  %balance = getelementptr inbounds i8, i8* %call66, i64 24, !dbg !14284
  %20 = bitcast i8* %balance to i32*, !dbg !14284
  store i32 0, i32* %20, align 8, !dbg !14285
  br label %while.cond72, !dbg !14286

while.cond72:                                     ; preds = %cleanup256, %if.end65
  %p.4 = phi %struct.init_node* [ %p.3, %if.end65 ], [ %p.5, %cleanup256 ], !dbg !14189
  %r.0 = phi %struct.init_node* [ %13, %if.end65 ], [ %r.1, %cleanup256 ], !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %r.0, metadata !14168, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.4, metadata !14165, metadata !DIExpression()), !dbg !14189
  %tobool73 = icmp eq %struct.init_node* %p.4, null, !dbg !14286
  br i1 %tobool73, label %cleanup.cont264.loopexit, label %while.body74, !dbg !14286

while.body74:                                     ; preds = %while.cond72
  %left75 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 0, !dbg !14287
  %21 = load %struct.init_node*, %struct.init_node** %left75, align 8, !dbg !14287
  %cmp76 = icmp eq %struct.init_node* %r.0, %21, !dbg !14288
  %balance78 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 3, !dbg !14289
  %22 = load i32, i32* %balance78, align 8, !dbg !14289
  %cmp79 = icmp eq i32 %22, 0, !dbg !14289
  br i1 %cmp76, label %if.then77, label %if.else162, !dbg !14290

if.then77:                                        ; preds = %while.body74
  br i1 %cmp79, label %if.then80, label %if.else82, !dbg !14291

if.then80:                                        ; preds = %if.then77
  br label %if.end254, !dbg !14292

if.else82:                                        ; preds = %if.then77
  %cmp84 = icmp slt i32 %22, 0, !dbg !14293
  br i1 %cmp84, label %if.then85, label %if.else159, !dbg !14294

if.then85:                                        ; preds = %if.else82
  %balance86 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 3, !dbg !14295
  %23 = load i32, i32* %balance86, align 8, !dbg !14295
  %cmp87 = icmp slt i32 %23, 0, !dbg !14296
  %right89 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 1, !dbg !14297
  %24 = load %struct.init_node*, %struct.init_node** %right89, align 8, !dbg !14297
  br i1 %cmp87, label %if.then88, label %if.else114, !dbg !14298

if.then88:                                        ; preds = %if.then85
  store %struct.init_node* %24, %struct.init_node** %left75, align 8, !dbg !14299
  %tobool92 = icmp eq %struct.init_node* %24, null, !dbg !14301
  br i1 %tobool92, label %if.end96, label %if.then93, !dbg !14303

if.then93:                                        ; preds = %if.then88
  %parent95 = getelementptr inbounds %struct.init_node, %struct.init_node* %24, i64 0, i32 2, !dbg !14304
  store %struct.init_node* %p.4, %struct.init_node** %parent95, align 8, !dbg !14305
  br label %if.end96, !dbg !14306

if.end96:                                         ; preds = %if.then88, %if.then93
  store %struct.init_node* %p.4, %struct.init_node** %right89, align 8, !dbg !14307
  store i32 0, i32* %balance78, align 8, !dbg !14308
  store i32 0, i32* %balance86, align 8, !dbg !14309
  %parent100 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 2, !dbg !14310
  %25 = load %struct.init_node*, %struct.init_node** %parent100, align 8, !dbg !14310
  call void @llvm.dbg.value(metadata %struct.init_node* %25, metadata !14172, metadata !DIExpression()), !dbg !14311
  store %struct.init_node* %r.0, %struct.init_node** %parent100, align 8, !dbg !14312
  %parent102 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 2, !dbg !14313
  store %struct.init_node* %25, %struct.init_node** %parent102, align 8, !dbg !14314
  %tobool103 = icmp eq %struct.init_node* %25, null, !dbg !14315
  br i1 %tobool103, label %if.else112, label %if.then104, !dbg !14317

if.then104:                                       ; preds = %if.end96
  %left105 = getelementptr inbounds %struct.init_node, %struct.init_node* %25, i64 0, i32 0, !dbg !14318
  %26 = load %struct.init_node*, %struct.init_node** %left105, align 8, !dbg !14318
  %cmp106 = icmp eq %struct.init_node* %26, %p.4, !dbg !14321
  br i1 %cmp106, label %if.then107, label %if.else109, !dbg !14322

if.then107:                                       ; preds = %if.then104
  store %struct.init_node* %r.0, %struct.init_node** %left105, align 8, !dbg !14323
  br label %cleanup256, !dbg !14324

if.else109:                                       ; preds = %if.then104
  %right110 = getelementptr inbounds %struct.init_node, %struct.init_node* %25, i64 0, i32 1, !dbg !14325
  store %struct.init_node* %r.0, %struct.init_node** %right110, align 8, !dbg !14326
  br label %cleanup256

if.else112:                                       ; preds = %if.end96
  store %struct.init_node* %r.0, %struct.init_node** @constructor_pending_elts, align 8, !dbg !14327
  br label %cleanup256

if.else114:                                       ; preds = %if.then85
  call void @llvm.dbg.value(metadata %struct.init_node* %24, metadata !14174, metadata !DIExpression()), !dbg !14328
  %27 = bitcast %struct.init_node* %24 to i64*, !dbg !14329
  %28 = load i64, i64* %27, align 8, !dbg !14329
  %29 = bitcast %struct.init_node** %right89 to i64*, !dbg !14330
  store i64 %28, i64* %29, align 8, !dbg !14330
  %tobool119 = icmp eq i64 %28, 0, !dbg !14331
  br i1 %tobool119, label %if.end123, label %if.then120, !dbg !14333

if.then120:                                       ; preds = %if.else114
  %30 = inttoptr i64 %28 to %struct.init_node*, !dbg !14333
  %parent122 = getelementptr inbounds %struct.init_node, %struct.init_node* %30, i64 0, i32 2, !dbg !14334
  store %struct.init_node* %r.0, %struct.init_node** %parent122, align 8, !dbg !14335
  br label %if.end123, !dbg !14336

if.end123:                                        ; preds = %if.else114, %if.then120
  %left124 = getelementptr inbounds %struct.init_node, %struct.init_node* %24, i64 0, i32 0, !dbg !14337
  store %struct.init_node* %r.0, %struct.init_node** %left124, align 8, !dbg !14338
  %right125 = getelementptr inbounds %struct.init_node, %struct.init_node* %24, i64 0, i32 1, !dbg !14339
  %31 = bitcast %struct.init_node** %right125 to i64*, !dbg !14339
  %32 = load i64, i64* %31, align 8, !dbg !14339
  %33 = bitcast %struct.init_node* %p.4 to i64*, !dbg !14340
  store i64 %32, i64* %33, align 8, !dbg !14340
  %tobool128 = icmp eq i64 %32, 0, !dbg !14341
  br i1 %tobool128, label %if.end132, label %if.then129, !dbg !14343

if.then129:                                       ; preds = %if.end123
  %34 = inttoptr i64 %32 to %struct.init_node*, !dbg !14343
  %parent131 = getelementptr inbounds %struct.init_node, %struct.init_node* %34, i64 0, i32 2, !dbg !14344
  store %struct.init_node* %p.4, %struct.init_node** %parent131, align 8, !dbg !14345
  br label %if.end132, !dbg !14346

if.end132:                                        ; preds = %if.end123, %if.then129
  store %struct.init_node* %p.4, %struct.init_node** %right125, align 8, !dbg !14347
  %balance134 = getelementptr inbounds %struct.init_node, %struct.init_node* %24, i64 0, i32 3, !dbg !14348
  %35 = load i32, i32* %balance134, align 8, !dbg !14348
  %.lobit2 = lshr i32 %35, 31, !dbg !14349
  store i32 %.lobit2, i32* %balance78, align 8, !dbg !14350
  %36 = load i32, i32* %balance134, align 8, !dbg !14351
  %cmp138 = icmp sgt i32 %36, 0, !dbg !14352
  %sub = sext i1 %cmp138 to i32, !dbg !14353
  store i32 %sub, i32* %balance86, align 8, !dbg !14354
  store i32 0, i32* %balance134, align 8, !dbg !14355
  %parent142 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 2, !dbg !14356
  %37 = load %struct.init_node*, %struct.init_node** %parent142, align 8, !dbg !14356
  call void @llvm.dbg.value(metadata %struct.init_node* %37, metadata !14172, metadata !DIExpression()), !dbg !14311
  store %struct.init_node* %24, %struct.init_node** %parent142, align 8, !dbg !14357
  %parent144 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 2, !dbg !14358
  store %struct.init_node* %24, %struct.init_node** %parent144, align 8, !dbg !14359
  %parent145 = getelementptr inbounds %struct.init_node, %struct.init_node* %24, i64 0, i32 2, !dbg !14360
  store %struct.init_node* %37, %struct.init_node** %parent145, align 8, !dbg !14361
  %tobool146 = icmp eq %struct.init_node* %37, null, !dbg !14362
  br i1 %tobool146, label %if.else156, label %if.then147, !dbg !14364

if.then147:                                       ; preds = %if.end132
  %left148 = getelementptr inbounds %struct.init_node, %struct.init_node* %37, i64 0, i32 0, !dbg !14365
  %38 = load %struct.init_node*, %struct.init_node** %left148, align 8, !dbg !14365
  %cmp149 = icmp eq %struct.init_node* %38, %p.4, !dbg !14368
  br i1 %cmp149, label %if.then151, label %if.else153, !dbg !14369

if.then151:                                       ; preds = %if.then147
  store %struct.init_node* %24, %struct.init_node** %left148, align 8, !dbg !14370
  br label %cleanup256, !dbg !14371

if.else153:                                       ; preds = %if.then147
  %right154 = getelementptr inbounds %struct.init_node, %struct.init_node* %37, i64 0, i32 1, !dbg !14372
  store %struct.init_node* %24, %struct.init_node** %right154, align 8, !dbg !14373
  br label %cleanup256

if.else156:                                       ; preds = %if.end132
  store %struct.init_node* %24, %struct.init_node** @constructor_pending_elts, align 8, !dbg !14374
  br label %cleanup256

if.else159:                                       ; preds = %if.else82
  store i32 0, i32* %balance78, align 8, !dbg !14375
  br label %cleanup256, !dbg !14377

if.else162:                                       ; preds = %while.body74
  br i1 %cmp79, label %if.then166, label %if.else168, !dbg !14378

if.then166:                                       ; preds = %if.else162
  br label %if.end254

if.else168:                                       ; preds = %if.else162
  %cmp170 = icmp sgt i32 %22, 0, !dbg !14379
  br i1 %cmp170, label %if.then172, label %if.else251, !dbg !14380

if.then172:                                       ; preds = %if.else168
  %balance173 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 3, !dbg !14381
  %39 = load i32, i32* %balance173, align 8, !dbg !14381
  %cmp174 = icmp sgt i32 %39, 0, !dbg !14382
  %left177 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 0, !dbg !14383
  %40 = load %struct.init_node*, %struct.init_node** %left177, align 8, !dbg !14383
  br i1 %cmp174, label %if.then176, label %if.else203, !dbg !14384

if.then176:                                       ; preds = %if.then172
  %right178 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 1, !dbg !14385
  store %struct.init_node* %40, %struct.init_node** %right178, align 8, !dbg !14387
  %tobool180 = icmp eq %struct.init_node* %40, null, !dbg !14388
  br i1 %tobool180, label %if.end184, label %if.then181, !dbg !14390

if.then181:                                       ; preds = %if.then176
  %parent183 = getelementptr inbounds %struct.init_node, %struct.init_node* %40, i64 0, i32 2, !dbg !14391
  store %struct.init_node* %p.4, %struct.init_node** %parent183, align 8, !dbg !14392
  br label %if.end184, !dbg !14393

if.end184:                                        ; preds = %if.then176, %if.then181
  store %struct.init_node* %p.4, %struct.init_node** %left177, align 8, !dbg !14394
  store i32 0, i32* %balance78, align 8, !dbg !14395
  store i32 0, i32* %balance173, align 8, !dbg !14396
  %parent188 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 2, !dbg !14397
  %41 = load %struct.init_node*, %struct.init_node** %parent188, align 8, !dbg !14397
  call void @llvm.dbg.value(metadata %struct.init_node* %41, metadata !14172, metadata !DIExpression()), !dbg !14311
  store %struct.init_node* %r.0, %struct.init_node** %parent188, align 8, !dbg !14398
  %parent190 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 2, !dbg !14399
  store %struct.init_node* %41, %struct.init_node** %parent190, align 8, !dbg !14400
  %tobool191 = icmp eq %struct.init_node* %41, null, !dbg !14401
  br i1 %tobool191, label %if.else201, label %if.then192, !dbg !14403

if.then192:                                       ; preds = %if.end184
  %left193 = getelementptr inbounds %struct.init_node, %struct.init_node* %41, i64 0, i32 0, !dbg !14404
  %42 = load %struct.init_node*, %struct.init_node** %left193, align 8, !dbg !14404
  %cmp194 = icmp eq %struct.init_node* %42, %p.4, !dbg !14407
  br i1 %cmp194, label %if.then196, label %if.else198, !dbg !14408

if.then196:                                       ; preds = %if.then192
  store %struct.init_node* %r.0, %struct.init_node** %left193, align 8, !dbg !14409
  br label %cleanup256, !dbg !14410

if.else198:                                       ; preds = %if.then192
  %right199 = getelementptr inbounds %struct.init_node, %struct.init_node* %41, i64 0, i32 1, !dbg !14411
  store %struct.init_node* %r.0, %struct.init_node** %right199, align 8, !dbg !14412
  br label %cleanup256

if.else201:                                       ; preds = %if.end184
  store %struct.init_node* %r.0, %struct.init_node** @constructor_pending_elts, align 8, !dbg !14413
  br label %cleanup256

if.else203:                                       ; preds = %if.then172
  call void @llvm.dbg.value(metadata %struct.init_node* %40, metadata !14182, metadata !DIExpression()), !dbg !14414
  %right206 = getelementptr inbounds %struct.init_node, %struct.init_node* %40, i64 0, i32 1, !dbg !14415
  %43 = bitcast %struct.init_node** %right206 to i64*, !dbg !14415
  %44 = load i64, i64* %43, align 8, !dbg !14415
  %45 = bitcast %struct.init_node* %r.0 to i64*, !dbg !14416
  store i64 %44, i64* %45, align 8, !dbg !14416
  %tobool209 = icmp eq i64 %44, 0, !dbg !14417
  br i1 %tobool209, label %if.end213, label %if.then210, !dbg !14419

if.then210:                                       ; preds = %if.else203
  %46 = inttoptr i64 %44 to %struct.init_node*, !dbg !14419
  %parent212 = getelementptr inbounds %struct.init_node, %struct.init_node* %46, i64 0, i32 2, !dbg !14420
  store %struct.init_node* %r.0, %struct.init_node** %parent212, align 8, !dbg !14421
  br label %if.end213, !dbg !14422

if.end213:                                        ; preds = %if.else203, %if.then210
  store %struct.init_node* %r.0, %struct.init_node** %right206, align 8, !dbg !14423
  %47 = bitcast %struct.init_node* %40 to i64*, !dbg !14424
  %48 = load i64, i64* %47, align 8, !dbg !14424
  %right216 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 1, !dbg !14425
  %49 = bitcast %struct.init_node** %right216 to i64*, !dbg !14426
  store i64 %48, i64* %49, align 8, !dbg !14426
  %tobool218 = icmp eq i64 %48, 0, !dbg !14427
  br i1 %tobool218, label %if.end222, label %if.then219, !dbg !14429

if.then219:                                       ; preds = %if.end213
  %50 = inttoptr i64 %48 to %struct.init_node*, !dbg !14429
  %parent221 = getelementptr inbounds %struct.init_node, %struct.init_node* %50, i64 0, i32 2, !dbg !14430
  store %struct.init_node* %p.4, %struct.init_node** %parent221, align 8, !dbg !14431
  br label %if.end222, !dbg !14432

if.end222:                                        ; preds = %if.end213, %if.then219
  %left223 = getelementptr inbounds %struct.init_node, %struct.init_node* %40, i64 0, i32 0, !dbg !14433
  store %struct.init_node* %p.4, %struct.init_node** %left223, align 8, !dbg !14434
  %balance224 = getelementptr inbounds %struct.init_node, %struct.init_node* %40, i64 0, i32 3, !dbg !14435
  %51 = load i32, i32* %balance224, align 8, !dbg !14435
  %.lobit = lshr i32 %51, 31, !dbg !14436
  store i32 %.lobit, i32* %balance173, align 8, !dbg !14437
  %52 = load i32, i32* %balance224, align 8, !dbg !14438
  %cmp229 = icmp sgt i32 %52, 0, !dbg !14439
  %sub231 = sext i1 %cmp229 to i32, !dbg !14440
  store i32 %sub231, i32* %balance78, align 8, !dbg !14441
  store i32 0, i32* %balance224, align 8, !dbg !14442
  %parent234 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 2, !dbg !14443
  %53 = load %struct.init_node*, %struct.init_node** %parent234, align 8, !dbg !14443
  call void @llvm.dbg.value(metadata %struct.init_node* %53, metadata !14172, metadata !DIExpression()), !dbg !14311
  store %struct.init_node* %40, %struct.init_node** %parent234, align 8, !dbg !14444
  %parent236 = getelementptr inbounds %struct.init_node, %struct.init_node* %r.0, i64 0, i32 2, !dbg !14445
  store %struct.init_node* %40, %struct.init_node** %parent236, align 8, !dbg !14446
  %parent237 = getelementptr inbounds %struct.init_node, %struct.init_node* %40, i64 0, i32 2, !dbg !14447
  store %struct.init_node* %53, %struct.init_node** %parent237, align 8, !dbg !14448
  %tobool238 = icmp eq %struct.init_node* %53, null, !dbg !14449
  br i1 %tobool238, label %if.else248, label %if.then239, !dbg !14451

if.then239:                                       ; preds = %if.end222
  %left240 = getelementptr inbounds %struct.init_node, %struct.init_node* %53, i64 0, i32 0, !dbg !14452
  %54 = load %struct.init_node*, %struct.init_node** %left240, align 8, !dbg !14452
  %cmp241 = icmp eq %struct.init_node* %54, %p.4, !dbg !14455
  br i1 %cmp241, label %if.then243, label %if.else245, !dbg !14456

if.then243:                                       ; preds = %if.then239
  store %struct.init_node* %40, %struct.init_node** %left240, align 8, !dbg !14457
  br label %cleanup256, !dbg !14458

if.else245:                                       ; preds = %if.then239
  %right246 = getelementptr inbounds %struct.init_node, %struct.init_node* %53, i64 0, i32 1, !dbg !14459
  store %struct.init_node* %40, %struct.init_node** %right246, align 8, !dbg !14460
  br label %cleanup256

if.else248:                                       ; preds = %if.end222
  store %struct.init_node* %40, %struct.init_node** @constructor_pending_elts, align 8, !dbg !14461
  br label %cleanup256

if.else251:                                       ; preds = %if.else168
  store i32 0, i32* %balance78, align 8, !dbg !14462
  br label %cleanup256, !dbg !14464

if.end254:                                        ; preds = %if.then166, %if.then80
  %storemerge = phi i32 [ 1, %if.then166 ], [ -1, %if.then80 ], !dbg !14289
  store i32 %storemerge, i32* %balance78, align 8, !dbg !14289
  call void @llvm.dbg.value(metadata %struct.init_node* %p.4, metadata !14168, metadata !DIExpression()), !dbg !14189
  %parent255 = getelementptr inbounds %struct.init_node, %struct.init_node* %p.4, i64 0, i32 2, !dbg !14465
  %55 = load %struct.init_node*, %struct.init_node** %parent255, align 8, !dbg !14465
  call void @llvm.dbg.value(metadata %struct.init_node* %55, metadata !14165, metadata !DIExpression()), !dbg !14189
  br label %cleanup256, !dbg !14466

cleanup256:                                       ; preds = %if.then196, %if.else198, %if.else201, %if.then243, %if.else245, %if.else248, %if.then107, %if.else109, %if.else112, %if.then151, %if.else153, %if.else156, %if.end254, %if.else251, %if.else159
  %p.5 = phi %struct.init_node* [ %55, %if.end254 ], [ %p.4, %if.else159 ], [ %p.4, %if.else251 ], [ %p.4, %if.else156 ], [ %p.4, %if.else153 ], [ %p.4, %if.then151 ], [ %p.4, %if.else112 ], [ %p.4, %if.else109 ], [ %p.4, %if.then107 ], [ %p.4, %if.else248 ], [ %p.4, %if.else245 ], [ %p.4, %if.then243 ], [ %p.4, %if.else201 ], [ %p.4, %if.else198 ], [ %p.4, %if.then196 ], !dbg !14189
  %r.1 = phi %struct.init_node* [ %p.4, %if.end254 ], [ %r.0, %if.else159 ], [ %r.0, %if.else251 ], [ %r.0, %if.else156 ], [ %r.0, %if.else153 ], [ %r.0, %if.then151 ], [ %r.0, %if.else112 ], [ %r.0, %if.else109 ], [ %r.0, %if.then107 ], [ %r.0, %if.else248 ], [ %r.0, %if.else245 ], [ %r.0, %if.then243 ], [ %r.0, %if.else201 ], [ %r.0, %if.else198 ], [ %r.0, %if.then196 ], !dbg !14189
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end254 ], [ false, %if.else159 ], [ false, %if.else251 ], [ false, %if.else156 ], [ false, %if.else153 ], [ false, %if.then151 ], [ false, %if.else112 ], [ false, %if.else109 ], [ false, %if.then107 ], [ false, %if.else248 ], [ false, %if.else245 ], [ false, %if.then243 ], [ false, %if.else201 ], [ false, %if.else198 ], [ false, %if.then196 ]
  call void @llvm.dbg.value(metadata %struct.init_node* %r.1, metadata !14168, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.init_node* %p.5, metadata !14165, metadata !DIExpression()), !dbg !14189
  br i1 %cleanup.dest.slot.1, label %while.cond72, label %cleanup.cont264.loopexit, !llvm.loop !14467

cleanup.cont264.loopexit:                         ; preds = %cleanup256, %while.cond72
  br label %cleanup.cont264, !dbg !14468

cleanup.cont264:                                  ; preds = %cleanup.cont264.loopexit, %if.end22, %cleanup
  ret void, !dbg !14468
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_last(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !14469 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !14473, metadata !DIExpression()), !dbg !14474
  br label %land.end, !dbg !14475

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !14475
  %0 = load i32, i32* %num2, align 8, !dbg !14475
  %sub = add i32 %0, -1, !dbg !14475
  %idxprom = zext i32 %sub to i64, !dbg !14475
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14475
  ret %struct.constructor_elt_d* %arrayidx, !dbg !14475
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_gc_safe_push(%struct.VEC_constructor_elt_gc** %vec_, %struct.constructor_elt_d* %obj_) unnamed_addr #0 !dbg !14476 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc** @constructor_elements, metadata !14483, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* null, metadata !14484, metadata !DIExpression()), !dbg !14485
  %call = tail call fastcc i32 @VEC_constructor_elt_gc_reserve(%struct.VEC_constructor_elt_gc** nonnull @constructor_elements, i32 1) #7, !dbg !14486
  %0 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !14486
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %0, null, !dbg !14486
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !14486

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %0, i64 0, i32 0, !dbg !14486
  br label %cond.end, !dbg !14486

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !14486
  %call1 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %cond, %struct.constructor_elt_d* null) #7, !dbg !14486
  ret %struct.constructor_elt_d* %call1, !dbg !14486
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_gc_reserve(%struct.VEC_constructor_elt_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !14487 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc** @constructor_elements, metadata !14491, metadata !DIExpression()), !dbg !14494
  call void @llvm.dbg.value(metadata i32 1, metadata !14492, metadata !DIExpression()), !dbg !14494
  %0 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** @constructor_elements, align 8, !dbg !14495
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %0, null, !dbg !14495
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !14495

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %0, i64 0, i32 0, !dbg !14495
  br label %cond.end, !dbg !14495

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !14495
  %call = tail call fastcc i32 @VEC_constructor_elt_base_space(%struct.VEC_constructor_elt_base* %cond, i32 1) #7, !dbg !14495
  %tobool1 = icmp eq i32 %call, 0, !dbg !14495
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !14495
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !14493, metadata !DIExpression()), !dbg !14494
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14495

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i8**), align 8, !dbg !14496
  %call3 = tail call i8* @vec_gc_o_reserve(i8* %1, i32 1, i64 8, i64 16) #6, !dbg !14496
  store i8* %call3, i8** bitcast (%struct.VEC_constructor_elt_gc** @constructor_elements to i8**), align 8, !dbg !14496
  br label %if.end, !dbg !14496

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !14495
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %vec_, %struct.constructor_elt_d* %obj_) unnamed_addr #0 !dbg !14498 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !14502, metadata !DIExpression()), !dbg !14505
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* null, metadata !14503, metadata !DIExpression()), !dbg !14505
  %num1 = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !14506
  %0 = load i32, i32* %num1, align 8, !dbg !14506
  %inc = add i32 %0, 1, !dbg !14506
  store i32 %inc, i32* %num1, align 8, !dbg !14506
  %idxprom = zext i32 %0 to i64, !dbg !14506
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !14506
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %arrayidx, metadata !14504, metadata !DIExpression()), !dbg !14505
  ret %struct.constructor_elt_d* %arrayidx, !dbg !14506
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_space(%struct.VEC_constructor_elt_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !14507 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !14511, metadata !DIExpression()), !dbg !14513
  call void @llvm.dbg.value(metadata i32 1, metadata !14512, metadata !DIExpression()), !dbg !14513
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !14514
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !14514

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 1, !dbg !14514
  %0 = load i32, i32* %alloc, align 4, !dbg !14514
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !14514
  %1 = load i32, i32* %num, align 8, !dbg !14514
  %cmp1 = icmp ne i32 %0, %1, !dbg !14514
  %phitmp = zext i1 %cmp1 to i32, !dbg !14514
  br label %cond.end, !dbg !14514

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14514

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !14514
}

declare dso_local i8* @vec_gc_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2042, !2043, !2044}
!llvm.ident = !{!2045}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "tagged_tu_seen_base", scope: !2, file: !3, line: 178, type: !1957, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !450, globals: !1969, nameTableKind: None)
!3 = !DIFile(filename: "c-typeck.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !335, !340, !345, !363, !370, !377, !385, !400, !408, !415, !437, !444}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !330, line: 363, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334}
!332 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !330, line: 355, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !341, line: 474, baseType: !7, size: 32, elements: !342)
!341 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344}
!343 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!347 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368, !369}
!365 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ref_operator", file: !378, line: 395, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./c-common.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384}
!380 = !DIEnumerator(name: "RO_NULL", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "RO_ARRAY_INDEXING", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "RO_UNARY_STAR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "RO_ARROW", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "RO_IMPLICIT_CONVERSION", value: 4, isUnsigned: true)
!385 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_typespec_keyword", file: !386, line: 192, baseType: !7, size: 32, elements: !387)
!386 = !DIFile(filename: "./c-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!387 = !{!388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!388 = !DIEnumerator(name: "cts_none", value: 0, isUnsigned: true)
!389 = !DIEnumerator(name: "cts_void", value: 1, isUnsigned: true)
!390 = !DIEnumerator(name: "cts_bool", value: 2, isUnsigned: true)
!391 = !DIEnumerator(name: "cts_char", value: 3, isUnsigned: true)
!392 = !DIEnumerator(name: "cts_int", value: 4, isUnsigned: true)
!393 = !DIEnumerator(name: "cts_float", value: 5, isUnsigned: true)
!394 = !DIEnumerator(name: "cts_double", value: 6, isUnsigned: true)
!395 = !DIEnumerator(name: "cts_dfloat32", value: 7, isUnsigned: true)
!396 = !DIEnumerator(name: "cts_dfloat64", value: 8, isUnsigned: true)
!397 = !DIEnumerator(name: "cts_dfloat128", value: 9, isUnsigned: true)
!398 = !DIEnumerator(name: "cts_fract", value: 10, isUnsigned: true)
!399 = !DIEnumerator(name: "cts_accum", value: 11, isUnsigned: true)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_storage_class", file: !386, line: 180, baseType: !7, size: 32, elements: !401)
!401 = !{!402, !403, !404, !405, !406, !407}
!402 = !DIEnumerator(name: "csc_none", value: 0, isUnsigned: true)
!403 = !DIEnumerator(name: "csc_auto", value: 1, isUnsigned: true)
!404 = !DIEnumerator(name: "csc_extern", value: 2, isUnsigned: true)
!405 = !DIEnumerator(name: "csc_register", value: 3, isUnsigned: true)
!406 = !DIEnumerator(name: "csc_static", value: 4, isUnsigned: true)
!407 = !DIEnumerator(name: "csc_typedef", value: 5, isUnsigned: true)
!408 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_declarator_kind", file: !386, line: 285, baseType: !7, size: 32, elements: !409)
!409 = !{!410, !411, !412, !413, !414}
!410 = !DIEnumerator(name: "cdk_id", value: 0, isUnsigned: true)
!411 = !DIEnumerator(name: "cdk_function", value: 1, isUnsigned: true)
!412 = !DIEnumerator(name: "cdk_array", value: 2, isUnsigned: true)
!413 = !DIEnumerator(name: "cdk_pointer", value: 3, isUnsigned: true)
!414 = !DIEnumerator(name: "cdk_attrs", value: 4, isUnsigned: true)
!415 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !416, line: 36, baseType: !7, size: 32, elements: !417)
!416 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!417 = !{!418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436}
!418 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!419 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!420 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!421 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!422 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!423 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!424 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!425 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!426 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!427 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!428 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!429 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!430 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!431 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!432 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!433 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!434 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!435 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!436 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lvalue_use", file: !378, line: 1034, baseType: !7, size: 32, elements: !438)
!438 = !{!439, !440, !441, !442, !443}
!439 = !DIEnumerator(name: "lv_assign", value: 0, isUnsigned: true)
!440 = !DIEnumerator(name: "lv_increment", value: 1, isUnsigned: true)
!441 = !DIEnumerator(name: "lv_decrement", value: 2, isUnsigned: true)
!442 = !DIEnumerator(name: "lv_addressof", value: 3, isUnsigned: true)
!443 = !DIEnumerator(name: "lv_asm", value: 4, isUnsigned: true)
!444 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "impl_conv", file: !3, line: 51, baseType: !7, size: 32, elements: !445)
!445 = !{!446, !447, !448, !449}
!446 = !DIEnumerator(name: "ic_argpass", value: 0, isUnsigned: true)
!447 = !DIEnumerator(name: "ic_assign", value: 1, isUnsigned: true)
!448 = !DIEnumerator(name: "ic_init", value: 2, isUnsigned: true)
!449 = !DIEnumerator(name: "ic_return", value: 3, isUnsigned: true)
!450 = !{!451, !452, !453, !454, !457, !458, !460, !134, !587, !415, !455, !1877, !1883, !514, !1950, !462, !1951, !1409, !1953, !1957, !1963, !1315, !1936, !1915, !1896, !516, !1655, !7}
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!453 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !461, line: 56, baseType: !462)
!461 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !464)
!464 = !{!465, !498, !504, !517, !536, !547, !552, !561, !567, !580, !592, !633, !1126, !1154, !1171, !1172, !1177, !1186, !1192, !1197, !1201, !1205, !1518, !1575, !1581, !1587, !1594, !1607, !1621, !1638, !1650, !1672, !1687, !1859}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !463, file: !135, line: 3372, baseType: !466, size: 64)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !467)
!467 = !{!468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !466, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !466, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !466, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !466, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !466, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !466, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !466, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !466, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !466, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !466, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !466, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !466, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !466, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !466, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !466, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !466, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !466, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !466, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !466, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !466, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !466, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !466, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !466, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !466, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !466, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !466, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !466, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !466, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !466, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !466, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !463, file: !135, line: 3373, baseType: !499, size: 192)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !500)
!500 = !{!501, !502, !503}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !499, file: !135, line: 403, baseType: !466, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !499, file: !135, line: 404, baseType: !460, size: 64, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !499, file: !135, line: 405, baseType: !460, size: 64, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !463, file: !135, line: 3374, baseType: !505, size: 320)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !506)
!506 = !{!507, !508}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !505, file: !135, line: 1385, baseType: !499, size: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !505, file: !135, line: 1386, baseType: !509, size: 128, offset: 192)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !510, line: 58, baseType: !511)
!510 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !510, line: 54, size: 128, elements: !512)
!512 = !{!513, !515}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !511, file: !510, line: 56, baseType: !514, size: 64)
!514 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !511, file: !510, line: 57, baseType: !516, size: 64, offset: 64)
!516 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !463, file: !135, line: 3375, baseType: !518, size: 256)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !519)
!519 = !{!520, !521}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !518, file: !135, line: 1398, baseType: !499, size: 192)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !518, file: !135, line: 1399, baseType: !522, size: 64, offset: 192)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !524, line: 52, size: 256, elements: !525)
!524 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!525 = !{!526, !527, !528, !529, !530, !531, !532}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !523, file: !524, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !523, file: !524, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !523, file: !524, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !523, file: !524, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !523, file: !524, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !523, file: !524, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !523, file: !524, line: 62, baseType: !533, size: 192, offset: 64)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 192, elements: !534)
!534 = !{!535}
!535 = !DISubrange(count: 3)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !463, file: !135, line: 3376, baseType: !537, size: 256)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !538)
!538 = !{!539, !540}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !537, file: !135, line: 1409, baseType: !499, size: 192)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !537, file: !135, line: 1410, baseType: !541, size: 64, offset: 192)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !543, line: 27, size: 192, elements: !544)
!543 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !542, file: !543, line: 29, baseType: !509, size: 128)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !542, file: !543, line: 30, baseType: !5, size: 32, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !463, file: !135, line: 3377, baseType: !548, size: 256)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !548, file: !135, line: 1438, baseType: !499, size: 192)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !548, file: !135, line: 1439, baseType: !460, size: 64, offset: 192)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !463, file: !135, line: 3378, baseType: !553, size: 256)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !554)
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !553, file: !135, line: 1419, baseType: !499, size: 192)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !553, file: !135, line: 1420, baseType: !453, size: 32, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !553, file: !135, line: 1421, baseType: !558, size: 8, offset: 224)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 8, elements: !559)
!559 = !{!560}
!560 = !DISubrange(count: 1)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !463, file: !135, line: 3379, baseType: !562, size: 320)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !563)
!563 = !{!564, !565, !566}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !562, file: !135, line: 1429, baseType: !499, size: 192)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !562, file: !135, line: 1430, baseType: !460, size: 64, offset: 192)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !562, file: !135, line: 1431, baseType: !460, size: 64, offset: 256)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !463, file: !135, line: 3380, baseType: !568, size: 320)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !569)
!569 = !{!570, !571}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !568, file: !135, line: 1461, baseType: !499, size: 192)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !568, file: !135, line: 1462, baseType: !572, size: 128, offset: 192)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !573, line: 31, size: 128, elements: !574)
!573 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!574 = !{!575, !578, !579}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !572, file: !573, line: 32, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !572, file: !573, line: 33, baseType: !7, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !572, file: !573, line: 34, baseType: !7, size: 32, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !463, file: !135, line: 3381, baseType: !581, size: 384)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !582)
!582 = !{!583, !584, !589, !590, !591}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !581, file: !135, line: 2508, baseType: !499, size: 192)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !581, file: !135, line: 2509, baseType: !585, size: 32, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !586, line: 58, baseType: !587)
!586 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !588, line: 44, baseType: !7)
!588 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!589 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !581, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !581, file: !135, line: 2511, baseType: !460, size: 64, offset: 256)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !581, file: !135, line: 2512, baseType: !460, size: 64, offset: 320)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !463, file: !135, line: 3382, baseType: !593, size: 896)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !594)
!594 = !{!595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !593, file: !135, line: 2653, baseType: !581, size: 384)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !593, file: !135, line: 2654, baseType: !460, size: 64, offset: 384)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !593, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !593, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !593, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !593, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !593, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !593, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !593, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !593, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !593, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !593, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !593, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !593, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !593, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !593, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !593, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !593, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !593, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !593, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !593, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !593, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !593, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !593, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !593, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !593, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !593, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !593, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !593, file: !135, line: 2705, baseType: !460, size: 64, offset: 576)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !593, file: !135, line: 2706, baseType: !460, size: 64, offset: 640)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !593, file: !135, line: 2707, baseType: !460, size: 64, offset: 704)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !593, file: !135, line: 2708, baseType: !460, size: 64, offset: 768)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !593, file: !135, line: 2711, baseType: !628, size: 64, offset: 832)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !630, line: 39, size: 8, elements: !631)
!630 = !DIFile(filename: "./c-lang.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!631 = !{!632}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !629, file: !630, line: 40, baseType: !456, size: 8)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !463, file: !135, line: 3383, baseType: !634, size: 960)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !635)
!635 = !{!636, !637}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !634, file: !135, line: 2757, baseType: !593, size: 896)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !634, file: !135, line: 2758, baseType: !638, size: 64, offset: 896)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !461, line: 50, baseType: !639)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !641, line: 240, size: 384, elements: !642)
!641 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!642 = !{!643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !640, file: !641, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !640, file: !641, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !640, file: !641, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !640, file: !641, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !640, file: !641, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !640, file: !641, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !640, file: !641, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !640, file: !641, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !640, file: !641, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !640, file: !641, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !640, file: !641, line: 321, baseType: !654, size: 320, offset: 64)
!654 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !641, line: 315, size: 320, elements: !655)
!655 = !{!656, !1059, !1061, !1124, !1125}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !654, file: !641, line: 316, baseType: !657, size: 64)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 64, elements: !559)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !641, line: 183, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !641, line: 166, size: 64, elements: !660)
!660 = !{!661, !662, !663, !664, !665, !673, !674, !686, !689, !749, !750, !1036, !1049, !1056}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !659, file: !641, line: 168, baseType: !453, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !659, file: !641, line: 169, baseType: !7, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !659, file: !641, line: 170, baseType: !458, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !659, file: !641, line: 171, baseType: !638, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !659, file: !641, line: 172, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !461, line: 53, baseType: !667)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !641, line: 359, size: 128, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !668, file: !641, line: 360, baseType: !453, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !668, file: !641, line: 361, baseType: !672, size: 64, offset: 64)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, size: 64, elements: !559)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !659, file: !641, line: 173, baseType: !5, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !659, file: !641, line: 174, baseType: !675, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !641, line: 133, baseType: !676)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 115, size: 32, elements: !677)
!677 = !{!678, !679, !680, !681, !682, !683, !684, !685}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !676, file: !641, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !676, file: !641, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !676, file: !641, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !676, file: !641, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !676, file: !641, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !676, file: !641, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !676, file: !641, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !676, file: !641, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !659, file: !641, line: 175, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !641, line: 175, flags: DIFlagFwdDecl)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !659, file: !641, line: 176, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !692, line: 75, size: 256, elements: !693)
!692 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!693 = !{!694, !708, !709, !710}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !691, file: !692, line: 76, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !692, line: 68, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !692, line: 63, size: 320, elements: !698)
!698 = !{!699, !701, !702, !703}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !697, file: !692, line: 64, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !697, file: !692, line: 65, baseType: !700, size: 64, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !697, file: !692, line: 66, baseType: !7, size: 32, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !697, file: !692, line: 67, baseType: !704, size: 128, offset: 192)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 128, elements: !706)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !692, line: 29, baseType: !514)
!706 = !{!707}
!707 = !DISubrange(count: 2)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !691, file: !692, line: 77, baseType: !695, size: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !691, file: !692, line: 78, baseType: !7, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !691, file: !692, line: 79, baseType: !711, size: 64, offset: 192)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !692, line: 49, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !692, line: 45, size: 832, elements: !714)
!714 = !{!715, !716, !717}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !713, file: !692, line: 46, baseType: !700, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !713, file: !692, line: 47, baseType: !690, size: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !713, file: !692, line: 48, baseType: !718, size: 704, offset: 128)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !719, line: 164, size: 704, elements: !720)
!719 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!720 = !{!721, !722, !732, !733, !734, !735, !736, !737, !741, !745, !746, !747, !748}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !718, file: !719, line: 166, baseType: !516, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !718, file: !719, line: 167, baseType: !723, size: 64, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !719, line: 157, size: 192, elements: !725)
!725 = !{!726, !727, !728}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !724, file: !719, line: 159, baseType: !455, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !724, file: !719, line: 160, baseType: !723, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !724, file: !719, line: 161, baseType: !729, size: 32, offset: 128)
!729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 32, elements: !730)
!730 = !{!731}
!731 = !DISubrange(count: 4)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !718, file: !719, line: 168, baseType: !455, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !718, file: !719, line: 169, baseType: !455, size: 64, offset: 192)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !718, file: !719, line: 170, baseType: !455, size: 64, offset: 256)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !718, file: !719, line: 171, baseType: !516, size: 64, offset: 320)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !718, file: !719, line: 172, baseType: !453, size: 32, offset: 384)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !718, file: !719, line: 176, baseType: !738, size: 64, offset: 448)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!723, !457, !516}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !718, file: !719, line: 177, baseType: !742, size: 64, offset: 512)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{null, !457, !723}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !718, file: !719, line: 178, baseType: !457, size: 64, offset: 576)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !718, file: !719, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !718, file: !719, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !718, file: !719, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !659, file: !641, line: 177, baseType: !460, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !659, file: !641, line: 178, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !330, line: 217, size: 832, elements: !753)
!753 = !{!754, !1001, !1002, !1003, !1006, !1010, !1011, !1012, !1030, !1031, !1032, !1033, !1034, !1035}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !752, file: !330, line: 219, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !330, line: 151, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !330, line: 151, size: 128, elements: !758)
!758 = !{!759}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !757, file: !330, line: 151, baseType: !760, size: 128)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !330, line: 150, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !330, line: 150, size: 128, elements: !762)
!762 = !{!763, !764, !765}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !761, file: !330, line: 150, baseType: !7, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !761, file: !330, line: 150, baseType: !7, size: 32, offset: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !761, file: !330, line: 150, baseType: !766, size: 64, offset: 64)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 64, elements: !559)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !461, line: 108, baseType: !768)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !330, line: 122, size: 512, elements: !770)
!770 = !{!771, !772, !773, !993, !994, !995, !996, !997, !998, !999}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !769, file: !330, line: 124, baseType: !751, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !769, file: !330, line: 125, baseType: !751, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !769, file: !330, line: 131, baseType: !774, size: 64, offset: 128)
!774 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !330, line: 128, size: 64, elements: !775)
!775 = !{!776, !992}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !774, file: !330, line: 129, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !461, line: 66, baseType: !778)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !780, line: 143, size: 192, elements: !781)
!780 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!781 = !{!782, !990, !991}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !779, file: !780, line: 145, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !461, line: 69, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !780, line: 136, size: 192, elements: !786)
!786 = !{!787, !988, !989}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !785, file: !780, line: 137, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !461, line: 58, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !780, line: 737, size: 768, elements: !791)
!791 = !{!792, !809, !843, !849, !854, !859, !866, !872, !878, !883, !897, !902, !908, !913, !923, !928, !946, !953, !960, !966, !971, !977, !983}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !790, file: !780, line: 738, baseType: !793, size: 256)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !780, line: 271, size: 256, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !793, file: !780, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !793, file: !780, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !793, file: !780, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !793, file: !780, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !793, file: !780, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !793, file: !780, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !793, file: !780, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !793, file: !780, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !793, file: !780, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !793, file: !780, line: 312, baseType: !7, size: 32, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !793, file: !780, line: 316, baseType: !585, size: 32, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !793, file: !780, line: 319, baseType: !7, size: 32, offset: 96)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !793, file: !780, line: 323, baseType: !751, size: 64, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !793, file: !780, line: 327, baseType: !460, size: 64, offset: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !790, file: !780, line: 739, baseType: !810, size: 448)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !780, line: 350, size: 448, elements: !811)
!811 = !{!812, !841}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !810, file: !780, line: 353, baseType: !813, size: 384)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !780, line: 333, size: 384, elements: !814)
!814 = !{!815, !816, !824}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !813, file: !780, line: 336, baseType: !793, size: 256)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !813, file: !780, line: 343, baseType: !817, size: 64, offset: 256)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !819, line: 37, size: 128, elements: !820)
!819 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!820 = !{!821, !822}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !818, file: !819, line: 39, baseType: !817, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !818, file: !819, line: 40, baseType: !823, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !813, file: !780, line: 344, baseType: !825, size: 64, offset: 320)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !819, line: 45, size: 320, elements: !827)
!827 = !{!828, !829}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !826, file: !819, line: 47, baseType: !825, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !826, file: !819, line: 48, baseType: !830, size: 256, offset: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !831)
!831 = !{!832, !834, !835, !840}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !830, file: !135, line: 1884, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !830, file: !135, line: 1885, baseType: !833, size: 64, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !830, file: !135, line: 1891, baseType: !836, size: 64, offset: 128)
!836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !830, file: !135, line: 1891, size: 64, elements: !837)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !836, file: !135, line: 1891, baseType: !788, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !836, file: !135, line: 1891, baseType: !460, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !830, file: !135, line: 1892, baseType: !823, size: 64, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !810, file: !780, line: 359, baseType: !842, size: 64, offset: 384)
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !559)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !790, file: !780, line: 740, baseType: !844, size: 512)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !780, line: 365, size: 512, elements: !845)
!845 = !{!846, !847, !848}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !844, file: !780, line: 368, baseType: !813, size: 384)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !844, file: !780, line: 373, baseType: !460, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !844, file: !780, line: 374, baseType: !460, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !790, file: !780, line: 741, baseType: !850, size: 576)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !780, line: 380, size: 576, elements: !851)
!851 = !{!852, !853}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !850, file: !780, line: 383, baseType: !844, size: 512)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !850, file: !780, line: 389, baseType: !842, size: 64, offset: 512)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !790, file: !780, line: 742, baseType: !855, size: 320)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !780, line: 395, size: 320, elements: !856)
!856 = !{!857, !858}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !855, file: !780, line: 397, baseType: !793, size: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !855, file: !780, line: 400, baseType: !777, size: 64, offset: 256)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !790, file: !780, line: 743, baseType: !860, size: 448)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !780, line: 406, size: 448, elements: !861)
!861 = !{!862, !863, !864, !865}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !860, file: !780, line: 408, baseType: !793, size: 256)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !860, file: !780, line: 412, baseType: !460, size: 64, offset: 256)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !860, file: !780, line: 420, baseType: !460, size: 64, offset: 320)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !860, file: !780, line: 423, baseType: !777, size: 64, offset: 384)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !790, file: !780, line: 744, baseType: !867, size: 384)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !780, line: 429, size: 384, elements: !868)
!868 = !{!869, !870, !871}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !867, file: !780, line: 431, baseType: !793, size: 256)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !867, file: !780, line: 434, baseType: !460, size: 64, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !867, file: !780, line: 437, baseType: !777, size: 64, offset: 320)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !790, file: !780, line: 745, baseType: !873, size: 384)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !780, line: 443, size: 384, elements: !874)
!874 = !{!875, !876, !877}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !873, file: !780, line: 445, baseType: !793, size: 256)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !873, file: !780, line: 449, baseType: !460, size: 64, offset: 256)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !873, file: !780, line: 453, baseType: !777, size: 64, offset: 320)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !790, file: !780, line: 746, baseType: !879, size: 320)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !780, line: 459, size: 320, elements: !880)
!880 = !{!881, !882}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !879, file: !780, line: 461, baseType: !793, size: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !879, file: !780, line: 464, baseType: !460, size: 64, offset: 256)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !790, file: !780, line: 747, baseType: !884, size: 768)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !780, line: 469, size: 768, elements: !885)
!885 = !{!886, !887, !888, !889, !890}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !884, file: !780, line: 471, baseType: !793, size: 256)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !884, file: !780, line: 474, baseType: !7, size: 32, offset: 256)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !884, file: !780, line: 475, baseType: !7, size: 32, offset: 288)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !884, file: !780, line: 478, baseType: !460, size: 64, offset: 320)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !884, file: !780, line: 481, baseType: !891, size: 384, offset: 384)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !892, size: 384, elements: !559)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !893)
!893 = !{!894, !895, !896}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !892, file: !135, line: 1920, baseType: !830, size: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !892, file: !135, line: 1921, baseType: !460, size: 64, offset: 256)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !892, file: !135, line: 1922, baseType: !585, size: 32, offset: 320)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !790, file: !780, line: 748, baseType: !898, size: 320)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !780, line: 487, size: 320, elements: !899)
!899 = !{!900, !901}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !898, file: !780, line: 490, baseType: !793, size: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !898, file: !780, line: 494, baseType: !453, size: 32, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !790, file: !780, line: 749, baseType: !903, size: 384)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !780, line: 500, size: 384, elements: !904)
!904 = !{!905, !906, !907}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !903, file: !780, line: 502, baseType: !793, size: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !903, file: !780, line: 506, baseType: !777, size: 64, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !903, file: !780, line: 510, baseType: !777, size: 64, offset: 320)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !790, file: !780, line: 750, baseType: !909, size: 320)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !780, line: 529, size: 320, elements: !910)
!910 = !{!911, !912}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !909, file: !780, line: 531, baseType: !793, size: 256)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !909, file: !780, line: 540, baseType: !777, size: 64, offset: 256)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !790, file: !780, line: 751, baseType: !914, size: 704)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !780, line: 546, size: 704, elements: !915)
!915 = !{!916, !917, !918, !919, !920, !921, !922}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !914, file: !780, line: 549, baseType: !844, size: 512)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !914, file: !780, line: 553, baseType: !458, size: 64, offset: 512)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !914, file: !780, line: 557, baseType: !452, size: 8, offset: 576)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !914, file: !780, line: 558, baseType: !452, size: 8, offset: 584)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !914, file: !780, line: 559, baseType: !452, size: 8, offset: 592)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !914, file: !780, line: 560, baseType: !452, size: 8, offset: 600)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !914, file: !780, line: 566, baseType: !842, size: 64, offset: 640)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !790, file: !780, line: 752, baseType: !924, size: 384)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !780, line: 571, size: 384, elements: !925)
!925 = !{!926, !927}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !924, file: !780, line: 573, baseType: !855, size: 320)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !924, file: !780, line: 577, baseType: !460, size: 64, offset: 320)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !790, file: !780, line: 753, baseType: !929, size: 576)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !780, line: 600, size: 576, elements: !930)
!930 = !{!931, !932, !933, !936, !945}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !929, file: !780, line: 602, baseType: !855, size: 320)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !929, file: !780, line: 605, baseType: !460, size: 64, offset: 320)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !929, file: !780, line: 609, baseType: !934, size: 64, offset: 384)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !935, line: 46, baseType: !514)
!935 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!936 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !929, file: !780, line: 612, baseType: !937, size: 64, offset: 448)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !780, line: 581, size: 320, elements: !939)
!939 = !{!940, !941, !942, !943, !944}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !938, file: !780, line: 583, baseType: !134, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !938, file: !780, line: 586, baseType: !460, size: 64, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !938, file: !780, line: 589, baseType: !460, size: 64, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !938, file: !780, line: 592, baseType: !460, size: 64, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !938, file: !780, line: 595, baseType: !460, size: 64, offset: 256)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !929, file: !780, line: 616, baseType: !777, size: 64, offset: 512)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !790, file: !780, line: 754, baseType: !947, size: 512)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !780, line: 622, size: 512, elements: !948)
!948 = !{!949, !950, !951, !952}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !947, file: !780, line: 624, baseType: !855, size: 320)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !947, file: !780, line: 628, baseType: !460, size: 64, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !947, file: !780, line: 632, baseType: !460, size: 64, offset: 384)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !947, file: !780, line: 636, baseType: !460, size: 64, offset: 448)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !790, file: !780, line: 755, baseType: !954, size: 704)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !780, line: 642, size: 704, elements: !955)
!955 = !{!956, !957, !958, !959}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !954, file: !780, line: 644, baseType: !947, size: 512)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !954, file: !780, line: 648, baseType: !460, size: 64, offset: 512)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !954, file: !780, line: 652, baseType: !460, size: 64, offset: 576)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !954, file: !780, line: 653, baseType: !460, size: 64, offset: 640)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !790, file: !780, line: 756, baseType: !961, size: 448)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !780, line: 663, size: 448, elements: !962)
!962 = !{!963, !964, !965}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !961, file: !780, line: 665, baseType: !855, size: 320)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !961, file: !780, line: 668, baseType: !460, size: 64, offset: 320)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !961, file: !780, line: 673, baseType: !460, size: 64, offset: 384)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !790, file: !780, line: 757, baseType: !967, size: 384)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !780, line: 694, size: 384, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !967, file: !780, line: 696, baseType: !855, size: 320)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !967, file: !780, line: 699, baseType: !460, size: 64, offset: 320)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !790, file: !780, line: 758, baseType: !972, size: 384)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !780, line: 681, size: 384, elements: !973)
!973 = !{!974, !975, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !972, file: !780, line: 683, baseType: !793, size: 256)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !972, file: !780, line: 686, baseType: !460, size: 64, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !972, file: !780, line: 689, baseType: !460, size: 64, offset: 320)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !790, file: !780, line: 759, baseType: !978, size: 384)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !780, line: 707, size: 384, elements: !979)
!979 = !{!980, !981, !982}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !978, file: !780, line: 709, baseType: !793, size: 256)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !978, file: !780, line: 712, baseType: !460, size: 64, offset: 256)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !978, file: !780, line: 712, baseType: !460, size: 64, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !790, file: !780, line: 760, baseType: !984, size: 320)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !780, line: 718, size: 320, elements: !985)
!985 = !{!986, !987}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !984, file: !780, line: 720, baseType: !793, size: 256)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !984, file: !780, line: 723, baseType: !460, size: 64, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !785, file: !780, line: 138, baseType: !784, size: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !785, file: !780, line: 139, baseType: !784, size: 64, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !779, file: !780, line: 146, baseType: !783, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !779, file: !780, line: 152, baseType: !777, size: 64, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !774, file: !330, line: 130, baseType: !638, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !769, file: !330, line: 134, baseType: !457, size: 64, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !769, file: !330, line: 137, baseType: !460, size: 64, offset: 256)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !769, file: !330, line: 138, baseType: !585, size: 32, offset: 320)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !769, file: !330, line: 142, baseType: !7, size: 32, offset: 352)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !769, file: !330, line: 144, baseType: !453, size: 32, offset: 384)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !769, file: !330, line: 145, baseType: !453, size: 32, offset: 416)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !769, file: !330, line: 146, baseType: !1000, size: 64, offset: 448)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !330, line: 119, baseType: !516)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !752, file: !330, line: 220, baseType: !755, size: 64, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !752, file: !330, line: 223, baseType: !457, size: 64, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !752, file: !330, line: 226, baseType: !1004, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !330, line: 185, flags: DIFlagFwdDecl)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !752, file: !330, line: 229, baseType: !1007, size: 128, offset: 256)
!1007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 128, elements: !706)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !330, line: 229, flags: DIFlagFwdDecl)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !752, file: !330, line: 232, baseType: !751, size: 64, offset: 384)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !752, file: !330, line: 233, baseType: !751, size: 64, offset: 448)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !752, file: !330, line: 238, baseType: !1013, size: 64, offset: 512)
!1013 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !330, line: 235, size: 64, elements: !1014)
!1014 = !{!1015, !1021}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1013, file: !330, line: 236, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !330, line: 273, size: 128, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1017, file: !330, line: 275, baseType: !777, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1017, file: !330, line: 278, baseType: !777, size: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1013, file: !330, line: 237, baseType: !1022, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !330, line: 259, size: 320, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1023, file: !330, line: 261, baseType: !638, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1023, file: !330, line: 262, baseType: !638, size: 64, offset: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1023, file: !330, line: 266, baseType: !638, size: 64, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1023, file: !330, line: 267, baseType: !638, size: 64, offset: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1023, file: !330, line: 270, baseType: !453, size: 32, offset: 256)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !752, file: !330, line: 241, baseType: !1000, size: 64, offset: 576)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !752, file: !330, line: 244, baseType: !453, size: 32, offset: 640)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !752, file: !330, line: 247, baseType: !453, size: 32, offset: 672)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !752, file: !330, line: 250, baseType: !453, size: 32, offset: 704)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !752, file: !330, line: 253, baseType: !453, size: 32, offset: 736)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !752, file: !330, line: 256, baseType: !453, size: 32, offset: 768)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !659, file: !641, line: 179, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !641, line: 150, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !641, line: 142, size: 320, elements: !1040)
!1040 = !{!1041, !1042, !1043, !1044, !1047, !1048}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1039, file: !641, line: 144, baseType: !460, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1039, file: !641, line: 145, baseType: !638, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1039, file: !641, line: 146, baseType: !638, size: 64, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1039, file: !641, line: 147, baseType: !1045, size: 32, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1046, line: 31, baseType: !453)
!1046 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1039, file: !641, line: 148, baseType: !7, size: 32, offset: 224)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1039, file: !641, line: 149, baseType: !452, size: 8, offset: 256)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !659, file: !641, line: 180, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !641, line: 162, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !641, line: 159, size: 128, elements: !1053)
!1053 = !{!1054, !1055}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1052, file: !641, line: 160, baseType: !460, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1052, file: !641, line: 161, baseType: !516, size: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !659, file: !641, line: 181, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !641, line: 181, flags: DIFlagFwdDecl)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !654, file: !641, line: 317, baseType: !1060, size: 64)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 64, elements: !559)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !654, file: !641, line: 318, baseType: !1062, size: 320)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !641, line: 188, size: 320, elements: !1063)
!1063 = !{!1064, !1066, !1123}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1062, file: !641, line: 190, baseType: !1065, size: 192)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 192, elements: !534)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1062, file: !641, line: 193, baseType: !1067, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !641, line: 206, size: 320, elements: !1069)
!1069 = !{!1070, !1108, !1109, !1110, !1122}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1068, file: !641, line: 208, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !461, line: 62, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1074, line: 538, size: 256, elements: !1075)
!1074 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1075 = !{!1076, !1080, !1086, !1099}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1073, file: !1074, line: 539, baseType: !1077, size: 32)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1074, line: 482, size: 32, elements: !1078)
!1078 = !{!1079}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1077, file: !1074, line: 484, baseType: !7, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1073, file: !1074, line: 540, baseType: !1081, size: 192)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1074, line: 488, size: 192, elements: !1082)
!1082 = !{!1083, !1084, !1085}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1081, file: !1074, line: 489, baseType: !1077, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1081, file: !1074, line: 492, baseType: !458, size: 64, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1081, file: !1074, line: 496, baseType: !460, size: 64, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1073, file: !1074, line: 541, baseType: !1087, size: 256)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1074, line: 504, size: 256, elements: !1088)
!1088 = !{!1089, !1090, !1097, !1098}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1087, file: !1074, line: 505, baseType: !1077, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1087, file: !1074, line: 509, baseType: !1091, size: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1074, line: 501, baseType: !1092)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{null, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1087, file: !1074, line: 510, baseType: !1095, size: 64, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1087, file: !1074, line: 513, baseType: !1071, size: 64, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1073, file: !1074, line: 542, baseType: !1100, size: 128)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1074, line: 530, size: 128, elements: !1101)
!1101 = !{!1102, !1103}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1100, file: !1074, line: 531, baseType: !1077, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1100, file: !1074, line: 534, baseType: !1104, size: 64, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1074, line: 525, baseType: !1105)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!452, !460, !458, !514, !514}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1068, file: !641, line: 211, baseType: !7, size: 32, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1068, file: !641, line: 214, baseType: !516, size: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1068, file: !641, line: 224, baseType: !1111, size: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !641, line: 202, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !641, line: 202, size: 128, elements: !1114)
!1114 = !{!1115}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1113, file: !641, line: 202, baseType: !1116, size: 128)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !641, line: 200, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !641, line: 200, size: 128, elements: !1118)
!1118 = !{!1119, !1120, !1121}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1117, file: !641, line: 200, baseType: !7, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1117, file: !641, line: 200, baseType: !7, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1117, file: !641, line: 200, baseType: !672, size: 64, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1068, file: !641, line: 234, baseType: !1111, size: 64, offset: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1062, file: !641, line: 197, baseType: !516, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !654, file: !641, line: 319, baseType: !523, size: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !654, file: !641, line: 320, baseType: !542, size: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !463, file: !135, line: 3384, baseType: !1127, size: 1472)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !1128)
!1128 = !{!1129, !1150, !1151, !1152, !1153}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1127, file: !135, line: 3115, baseType: !1130, size: 1216)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1130, file: !135, line: 2985, baseType: !634, size: 960)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1130, file: !135, line: 2986, baseType: !460, size: 64, offset: 960)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1130, file: !135, line: 2987, baseType: !460, size: 64, offset: 1024)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1130, file: !135, line: 2988, baseType: !460, size: 64, offset: 1088)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1130, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1130, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1130, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1130, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1130, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1130, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1130, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1130, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1130, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1130, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1130, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1130, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1130, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1130, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1127, file: !135, line: 3117, baseType: !460, size: 64, offset: 1216)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1127, file: !135, line: 3119, baseType: !460, size: 64, offset: 1280)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1127, file: !135, line: 3121, baseType: !460, size: 64, offset: 1344)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1127, file: !135, line: 3123, baseType: !460, size: 64, offset: 1408)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !463, file: !135, line: 3385, baseType: !1155, size: 1088)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !1156)
!1156 = !{!1157, !1158, !1159}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1155, file: !135, line: 2875, baseType: !634, size: 960)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1155, file: !135, line: 2876, baseType: !638, size: 64, offset: 960)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1155, file: !135, line: 2877, baseType: !1160, size: 64, offset: 1024)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1162, line: 172, size: 128, elements: !1163)
!1162 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1163 = !{!1164, !1165, !1166, !1167, !1168, !1169, !1170}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1161, file: !1162, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1161, file: !1162, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1161, file: !1162, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1161, file: !1162, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1161, file: !1162, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1161, file: !1162, line: 195, baseType: !7, size: 32, offset: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1161, file: !1162, line: 199, baseType: !460, size: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !463, file: !135, line: 3386, baseType: !1130, size: 1216)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !463, file: !135, line: 3387, baseType: !1173, size: 1280)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !1174)
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1173, file: !135, line: 3094, baseType: !1130, size: 1216)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1173, file: !135, line: 3095, baseType: !1160, size: 64, offset: 1216)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !463, file: !135, line: 3388, baseType: !1178, size: 1216)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183, !1184, !1185}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1178, file: !135, line: 2825, baseType: !593, size: 896)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1178, file: !135, line: 2827, baseType: !460, size: 64, offset: 896)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1178, file: !135, line: 2828, baseType: !460, size: 64, offset: 960)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1178, file: !135, line: 2829, baseType: !460, size: 64, offset: 1024)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1178, file: !135, line: 2830, baseType: !460, size: 64, offset: 1088)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1178, file: !135, line: 2831, baseType: !460, size: 64, offset: 1152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !463, file: !135, line: 3389, baseType: !1187, size: 1024)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !1188)
!1188 = !{!1189, !1190, !1191}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1187, file: !135, line: 2851, baseType: !634, size: 960)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1187, file: !135, line: 2852, baseType: !453, size: 32, offset: 960)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1187, file: !135, line: 2853, baseType: !453, size: 32, offset: 992)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !463, file: !135, line: 3390, baseType: !1193, size: 1024)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !1194)
!1194 = !{!1195, !1196}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1193, file: !135, line: 2858, baseType: !634, size: 960)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1193, file: !135, line: 2859, baseType: !1160, size: 64, offset: 960)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !463, file: !135, line: 3391, baseType: !1198, size: 960)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !1199)
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1198, file: !135, line: 2863, baseType: !634, size: 960)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !463, file: !135, line: 3392, baseType: !1202, size: 1472)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !1203)
!1203 = !{!1204}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1202, file: !135, line: 3305, baseType: !1127, size: 1472)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !463, file: !135, line: 3393, baseType: !1206, size: 1792)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !1207)
!1207 = !{!1208, !1209, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1206, file: !135, line: 3249, baseType: !1127, size: 1472)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1206, file: !135, line: 3251, baseType: !1210, size: 64, offset: 1472)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1212, line: 463, size: 1152, elements: !1213)
!1212 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1213 = !{!1214, !1217, !1248, !1249, !1362, !1365, !1366, !1367, !1368, !1369, !1370, !1394, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1211, file: !1212, line: 464, baseType: !1215, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1212, line: 464, flags: DIFlagFwdDecl)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1211, file: !1212, line: 467, baseType: !1218, size: 64, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !330, line: 374, size: 640, elements: !1220)
!1220 = !{!1221, !1223, !1224, !1237, !1238, !1239, !1240, !1241, !1242, !1244, !1246, !1247}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1219, file: !330, line: 377, baseType: !1222, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !461, line: 111, baseType: !751)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1219, file: !330, line: 378, baseType: !1222, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1219, file: !330, line: 381, baseType: !1225, size: 64, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !330, line: 282, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !330, line: 282, size: 128, elements: !1228)
!1228 = !{!1229}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1227, file: !330, line: 282, baseType: !1230, size: 128)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !330, line: 281, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !330, line: 281, size: 128, elements: !1232)
!1232 = !{!1233, !1234, !1235}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1231, file: !330, line: 281, baseType: !7, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1231, file: !330, line: 281, baseType: !7, size: 32, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1231, file: !330, line: 281, baseType: !1236, size: 64, offset: 64)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 64, elements: !559)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1219, file: !330, line: 384, baseType: !453, size: 32, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1219, file: !330, line: 387, baseType: !453, size: 32, offset: 224)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1219, file: !330, line: 390, baseType: !453, size: 32, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1219, file: !330, line: 394, baseType: !1225, size: 64, offset: 320)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1219, file: !330, line: 396, baseType: !329, size: 32, offset: 384)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1219, file: !330, line: 399, baseType: !1243, size: 64, offset: 416)
!1243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 64, elements: !706)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1219, file: !330, line: 402, baseType: !1245, size: 64, offset: 480)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !706)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1219, file: !330, line: 406, baseType: !453, size: 32, offset: 544)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1219, file: !330, line: 409, baseType: !453, size: 32, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1211, file: !1212, line: 470, baseType: !778, size: 64, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1211, file: !1212, line: 473, baseType: !1250, size: 64, offset: 192)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1162, line: 39, size: 1152, elements: !1252)
!1252 = !{!1253, !1301, !1314, !1326, !1327, !1339, !1340, !1344, !1345, !1346, !1347, !1348}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1251, file: !1162, line: 41, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1255, line: 144, baseType: !1256)
!1255 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1255, line: 100, size: 896, elements: !1258)
!1258 = !{!1259, !1265, !1270, !1275, !1277, !1278, !1279, !1280, !1281, !1282, !1287, !1289, !1290, !1295, !1300}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1257, file: !1255, line: 102, baseType: !1260, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1255, line: 52, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1095}
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1255, line: 47, baseType: !7)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1257, file: !1255, line: 105, baseType: !1266, size: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1255, line: 59, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!453, !1095, !1095}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1257, file: !1255, line: 108, baseType: !1271, size: 64, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1255, line: 63, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{null, !457}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1257, file: !1255, line: 111, baseType: !1276, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1257, file: !1255, line: 114, baseType: !934, size: 64, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1257, file: !1255, line: 117, baseType: !934, size: 64, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1257, file: !1255, line: 120, baseType: !934, size: 64, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1257, file: !1255, line: 124, baseType: !7, size: 32, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1257, file: !1255, line: 128, baseType: !7, size: 32, offset: 480)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1257, file: !1255, line: 131, baseType: !1283, size: 64, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1255, line: 75, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!457, !934, !934}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1257, file: !1255, line: 132, baseType: !1288, size: 64, offset: 576)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1255, line: 78, baseType: !1272)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1257, file: !1255, line: 135, baseType: !457, size: 64, offset: 640)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1257, file: !1255, line: 136, baseType: !1291, size: 64, offset: 704)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1255, line: 82, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!457, !457, !934, !934}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1257, file: !1255, line: 137, baseType: !1296, size: 64, offset: 768)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1255, line: 83, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !457, !457}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1257, file: !1255, line: 141, baseType: !7, size: 32, offset: 832)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1251, file: !1162, line: 48, baseType: !1302, size: 64, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !780, line: 35, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !780, line: 35, size: 128, elements: !1305)
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1304, file: !780, line: 35, baseType: !1307, size: 128)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !780, line: 33, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !780, line: 33, size: 128, elements: !1309)
!1309 = !{!1310, !1311, !1312}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1308, file: !780, line: 33, baseType: !7, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1308, file: !780, line: 33, baseType: !7, size: 32, offset: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1308, file: !780, line: 33, baseType: !1313, size: 64, offset: 64)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 64, elements: !559)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1251, file: !1162, line: 51, baseType: !1315, size: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !1318)
!1318 = !{!1319}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1317, file: !135, line: 183, baseType: !1320, size: 128)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !1322)
!1322 = !{!1323, !1324, !1325}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1321, file: !135, line: 182, baseType: !7, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1321, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1321, file: !135, line: 182, baseType: !842, size: 64, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1251, file: !1162, line: 54, baseType: !460, size: 64, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1251, file: !1162, line: 57, baseType: !1328, size: 128, offset: 256)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1329, line: 31, size: 128, elements: !1330)
!1329 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1330 = !{!1331, !1332, !1333, !1334, !1335, !1336, !1337}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1328, file: !1329, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1328, file: !1329, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1328, file: !1329, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1328, file: !1329, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1328, file: !1329, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1328, file: !1329, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1328, file: !1329, line: 56, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !461, line: 47, baseType: !690)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1251, file: !1162, line: 60, baseType: !1328, size: 128, offset: 384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1251, file: !1162, line: 64, baseType: !1341, size: 64, offset: 512)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1343, line: 33, flags: DIFlagFwdDecl)
!1343 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1251, file: !1162, line: 67, baseType: !460, size: 64, offset: 576)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1251, file: !1162, line: 73, baseType: !1254, size: 64, offset: 640)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1251, file: !1162, line: 77, baseType: !1338, size: 64, offset: 704)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1251, file: !1162, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1251, file: !1162, line: 82, baseType: !1349, size: 320, offset: 832)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !819, line: 62, size: 320, elements: !1350)
!1350 = !{!1351, !1357, !1358, !1359, !1360, !1361}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1349, file: !819, line: 63, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !819, line: 56, size: 128, elements: !1354)
!1354 = !{!1355, !1356}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !819, line: 57, baseType: !1352, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1353, file: !819, line: 58, baseType: !558, size: 8, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1349, file: !819, line: 64, baseType: !7, size: 32, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1349, file: !819, line: 66, baseType: !7, size: 32, offset: 96)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1349, file: !819, line: 68, baseType: !452, size: 8, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1349, file: !819, line: 70, baseType: !817, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1349, file: !819, line: 71, baseType: !825, size: 64, offset: 256)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1211, file: !1212, line: 476, baseType: !1363, size: 64, offset: 256)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1212, line: 476, flags: DIFlagFwdDecl)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1211, file: !1212, line: 479, baseType: !1254, size: 64, offset: 320)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1211, file: !1212, line: 484, baseType: !460, size: 64, offset: 384)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1211, file: !1212, line: 488, baseType: !460, size: 64, offset: 448)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1211, file: !1212, line: 493, baseType: !460, size: 64, offset: 512)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1211, file: !1212, line: 496, baseType: !460, size: 64, offset: 576)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1211, file: !1212, line: 501, baseType: !1371, size: 64, offset: 640)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !341, line: 2355, size: 576, elements: !1373)
!1373 = !{!1374, !1377, !1378, !1379, !1380, !1382, !1383, !1388, !1389, !1390, !1391, !1392, !1393}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1372, file: !341, line: 2356, baseType: !1375, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !341, line: 2356, flags: DIFlagFwdDecl)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1372, file: !341, line: 2357, baseType: !458, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1372, file: !341, line: 2358, baseType: !453, size: 32, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1372, file: !341, line: 2359, baseType: !453, size: 32, offset: 160)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1372, file: !341, line: 2360, baseType: !1381, size: 128, offset: 192)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 128, elements: !730)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1372, file: !341, line: 2364, baseType: !453, size: 32, offset: 320)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1372, file: !341, line: 2367, baseType: !1384, size: 128, offset: 384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !341, line: 2349, size: 128, elements: !1385)
!1385 = !{!1386, !1387}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1384, file: !341, line: 2351, baseType: !638, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1384, file: !341, line: 2352, baseType: !516, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1372, file: !341, line: 2371, baseType: !340, size: 32, offset: 512)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1372, file: !341, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1372, file: !341, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1372, file: !341, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1372, file: !341, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1372, file: !341, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1211, file: !1212, line: 504, baseType: !1395, size: 64, offset: 704)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !630, line: 47, size: 512, elements: !1397)
!1397 = !{!1398, !1406, !1407, !1408, !1459, !1469, !1470, !1471, !1472}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1396, file: !630, line: 48, baseType: !1399, size: 128)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_language_function", file: !378, line: 436, size: 128, elements: !1400)
!1400 = !{!1401}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "x_stmt_tree", scope: !1399, file: !378, line: 439, baseType: !1402, size: 128)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stmt_tree_s", file: !378, line: 410, size: 128, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "x_cur_stmt_list", scope: !1402, file: !378, line: 412, baseType: !460, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "stmts_are_full_exprs_p", scope: !1402, file: !378, line: 428, baseType: !453, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "x_break_label", scope: !1396, file: !630, line: 49, baseType: !460, size: 64, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "x_cont_label", scope: !1396, file: !630, line: 50, baseType: !460, size: 64, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "x_switch_stack", scope: !1396, file: !630, line: 51, baseType: !1409, size: 64, offset: 256)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_switch", file: !3, line: 8421, size: 320, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1455, !1458}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "switch_expr", scope: !1410, file: !3, line: 8423, baseType: !460, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "orig_type", scope: !1410, file: !3, line: 8427, baseType: !460, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "cases", scope: !1410, file: !3, line: 8434, baseType: !1415, size: 64, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree", file: !1416, line: 128, baseType: !1417)
!1416 = !DIFile(filename: "./include/splay-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_s", file: !1416, line: 109, size: 448, elements: !1419)
!1419 = !{!1420, !1432, !1437, !1442, !1447, !1452, !1454}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1418, file: !1416, line: 111, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_node", file: !1416, line: 66, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_node_s", file: !1416, line: 96, size: 256, elements: !1424)
!1424 = !{!1425, !1428, !1430, !1431}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1423, file: !1416, line: 98, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_key", file: !1416, line: 62, baseType: !1427)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "libi_uhostptr_t", file: !1416, line: 41, baseType: !514)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1423, file: !1416, line: 101, baseType: !1429, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_value", file: !1416, line: 63, baseType: !1427)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1423, file: !1416, line: 104, baseType: !1421, size: 64, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1423, file: !1416, line: 105, baseType: !1421, size: 64, offset: 192)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1418, file: !1416, line: 114, baseType: !1433, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_compare_fn", file: !1416, line: 70, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!453, !1426, !1426}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "delete_key", scope: !1418, file: !1416, line: 117, baseType: !1438, size: 64, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_key_fn", file: !1416, line: 74, baseType: !1439)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{null, !1426}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "delete_value", scope: !1418, file: !1416, line: 120, baseType: !1443, size: 64, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_value_fn", file: !1416, line: 78, baseType: !1444)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{null, !1429}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "allocate", scope: !1418, file: !1416, line: 123, baseType: !1448, size: 64, offset: 256)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_allocate_fn", file: !1416, line: 87, baseType: !1449)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!457, !453, !457}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "deallocate", scope: !1418, file: !1416, line: 124, baseType: !1453, size: 64, offset: 320)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_deallocate_fn", file: !1416, line: 93, baseType: !1297)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_data", scope: !1418, file: !1416, line: 125, baseType: !457, size: 64, offset: 384)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "bindings", scope: !1410, file: !3, line: 8438, baseType: !1456, size: 64, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DICompositeType(tag: DW_TAG_structure_type, name: "c_spot_bindings", file: !386, line: 400, flags: DIFlagFwdDecl)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1410, file: !3, line: 8441, baseType: !1409, size: 64, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "arg_info", scope: !1396, file: !630, line: 52, baseType: !1460, size: 64, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_arg_info", file: !386, line: 299, size: 384, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !1461, file: !386, line: 301, baseType: !460, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !1461, file: !386, line: 303, baseType: !460, size: 64, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1461, file: !386, line: 305, baseType: !460, size: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "others", scope: !1461, file: !386, line: 308, baseType: !460, size: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sizes", scope: !1461, file: !386, line: 313, baseType: !460, size: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "had_vla_unspec", scope: !1461, file: !386, line: 315, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "returns_value", scope: !1396, file: !630, line: 53, baseType: !453, size: 32, offset: 384)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "returns_null", scope: !1396, file: !630, line: 54, baseType: !453, size: 32, offset: 416)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "returns_abnormally", scope: !1396, file: !630, line: 55, baseType: !453, size: 32, offset: 448)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "warn_about_return_type", scope: !1396, file: !630, line: 56, baseType: !453, size: 32, offset: 480)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1211, file: !1212, line: 507, baseType: !1254, size: 64, offset: 768)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1211, file: !1212, line: 510, baseType: !453, size: 32, offset: 832)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1211, file: !1212, line: 513, baseType: !453, size: 32, offset: 864)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1211, file: !1212, line: 516, baseType: !585, size: 32, offset: 896)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1211, file: !1212, line: 519, baseType: !585, size: 32, offset: 928)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1211, file: !1212, line: 522, baseType: !7, size: 32, offset: 960)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1211, file: !1212, line: 523, baseType: !7, size: 32, offset: 992)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1211, file: !1212, line: 528, baseType: !458, size: 64, offset: 1024)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1211, file: !1212, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1211, file: !1212, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1211, file: !1212, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1211, file: !1212, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1211, file: !1212, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1211, file: !1212, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1211, file: !1212, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1211, file: !1212, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1211, file: !1212, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1211, file: !1212, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1211, file: !1212, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1211, file: !1212, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1211, file: !1212, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1211, file: !1212, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1211, file: !1212, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1211, file: !1212, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1206, file: !135, line: 3254, baseType: !460, size: 64, offset: 1536)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1206, file: !135, line: 3257, baseType: !460, size: 64, offset: 1600)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1206, file: !135, line: 3258, baseType: !460, size: 64, offset: 1664)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1206, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1206, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1206, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1206, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1206, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1206, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1206, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1206, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1206, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1206, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1206, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1206, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1206, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1206, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1206, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1206, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1206, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1206, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !463, file: !135, line: 3394, baseType: !1519, size: 1344)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1519, file: !135, line: 2280, baseType: !499, size: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1519, file: !135, line: 2281, baseType: !460, size: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1519, file: !135, line: 2282, baseType: !460, size: 64, offset: 256)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1519, file: !135, line: 2283, baseType: !460, size: 64, offset: 320)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1519, file: !135, line: 2284, baseType: !460, size: 64, offset: 384)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1519, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1519, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1519, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1519, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1519, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1519, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1519, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1519, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1519, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1519, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1519, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1519, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1519, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1519, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1519, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1519, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1519, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1519, file: !135, line: 2306, baseType: !1045, size: 32, offset: 544)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1519, file: !135, line: 2307, baseType: !460, size: 64, offset: 576)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1519, file: !135, line: 2308, baseType: !460, size: 64, offset: 640)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1519, file: !135, line: 2314, baseType: !1547, size: 64, offset: 704)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !1548)
!1548 = !{!1549, !1550, !1551}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1547, file: !135, line: 2310, baseType: !453, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1547, file: !135, line: 2311, baseType: !458, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1547, file: !135, line: 2312, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1519, file: !135, line: 2315, baseType: !460, size: 64, offset: 768)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1519, file: !135, line: 2316, baseType: !460, size: 64, offset: 832)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1519, file: !135, line: 2317, baseType: !460, size: 64, offset: 896)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1519, file: !135, line: 2318, baseType: !460, size: 64, offset: 960)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1519, file: !135, line: 2319, baseType: !460, size: 64, offset: 1024)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1519, file: !135, line: 2320, baseType: !460, size: 64, offset: 1088)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1519, file: !135, line: 2321, baseType: !460, size: 64, offset: 1152)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1519, file: !135, line: 2322, baseType: !460, size: 64, offset: 1216)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1519, file: !135, line: 2324, baseType: !1563, size: 64, offset: 1280)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !630, line: 27, size: 256, elements: !1565)
!1565 = !{!1566, !1572, !1573, !1574}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1564, file: !630, line: 29, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sorted_fields_type", file: !378, line: 369, size: 128, elements: !1569)
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1568, file: !378, line: 370, baseType: !453, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1568, file: !378, line: 371, baseType: !842, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "enum_min", scope: !1564, file: !630, line: 31, baseType: !460, size: 64, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "enum_max", scope: !1564, file: !630, line: 32, baseType: !460, size: 64, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "objc_info", scope: !1564, file: !630, line: 36, baseType: !460, size: 64, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !463, file: !135, line: 3395, baseType: !1576, size: 320)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !1577)
!1577 = !{!1578, !1579, !1580}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1576, file: !135, line: 1470, baseType: !499, size: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1576, file: !135, line: 1471, baseType: !460, size: 64, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1576, file: !135, line: 1472, baseType: !460, size: 64, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !463, file: !135, line: 3396, baseType: !1582, size: 320)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !1583)
!1583 = !{!1584, !1585, !1586}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1582, file: !135, line: 1483, baseType: !499, size: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1582, file: !135, line: 1484, baseType: !453, size: 32, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1582, file: !135, line: 1485, baseType: !842, size: 64, offset: 256)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !463, file: !135, line: 3397, baseType: !1588, size: 384)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1588, file: !135, line: 1830, baseType: !499, size: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1588, file: !135, line: 1831, baseType: !585, size: 32, offset: 192)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1588, file: !135, line: 1832, baseType: !460, size: 64, offset: 256)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1588, file: !135, line: 1835, baseType: !842, size: 64, offset: 320)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !463, file: !135, line: 3398, baseType: !1595, size: 704)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1606}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1595, file: !135, line: 1899, baseType: !499, size: 192)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1595, file: !135, line: 1902, baseType: !460, size: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1595, file: !135, line: 1905, baseType: !788, size: 64, offset: 256)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1595, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1595, file: !135, line: 1911, baseType: !1602, size: 64, offset: 384)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1162, line: 117, size: 128, elements: !1604)
!1604 = !{!1605}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1603, file: !1162, line: 120, baseType: !1328, size: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1595, file: !135, line: 1914, baseType: !830, size: 256, offset: 448)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !463, file: !135, line: 3399, baseType: !1608, size: 704)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1608, file: !135, line: 2009, baseType: !499, size: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1608, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1608, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1608, file: !135, line: 2014, baseType: !585, size: 32, offset: 224)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1608, file: !135, line: 2016, baseType: !460, size: 64, offset: 256)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1608, file: !135, line: 2017, baseType: !1315, size: 64, offset: 320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1608, file: !135, line: 2019, baseType: !460, size: 64, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1608, file: !135, line: 2020, baseType: !460, size: 64, offset: 448)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1608, file: !135, line: 2021, baseType: !460, size: 64, offset: 512)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1608, file: !135, line: 2022, baseType: !460, size: 64, offset: 576)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1608, file: !135, line: 2023, baseType: !460, size: 64, offset: 640)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !463, file: !135, line: 3400, baseType: !1622, size: 832)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !1623)
!1623 = !{!1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1622, file: !135, line: 2431, baseType: !499, size: 192)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1622, file: !135, line: 2433, baseType: !460, size: 64, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1622, file: !135, line: 2434, baseType: !460, size: 64, offset: 256)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1622, file: !135, line: 2435, baseType: !460, size: 64, offset: 320)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1622, file: !135, line: 2436, baseType: !460, size: 64, offset: 384)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1622, file: !135, line: 2437, baseType: !1315, size: 64, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1622, file: !135, line: 2438, baseType: !460, size: 64, offset: 512)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1622, file: !135, line: 2440, baseType: !460, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1622, file: !135, line: 2441, baseType: !460, size: 64, offset: 640)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1622, file: !135, line: 2443, baseType: !1634, size: 128, offset: 704)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !1635)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !1636)
!1636 = !{!1637}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1635, file: !135, line: 182, baseType: !1320, size: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !463, file: !135, line: 3401, baseType: !1639, size: 320)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !1640)
!1640 = !{!1641, !1642, !1649}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1639, file: !135, line: 3329, baseType: !499, size: 192)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1639, file: !135, line: 3330, baseType: !1643, size: 64, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !1645)
!1645 = !{!1646, !1647, !1648}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1644, file: !135, line: 3322, baseType: !1643, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1644, file: !135, line: 3323, baseType: !1643, size: 64, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1644, file: !135, line: 3324, baseType: !460, size: 64, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1639, file: !135, line: 3331, baseType: !1643, size: 64, offset: 256)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !463, file: !135, line: 3402, baseType: !1651, size: 256)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1651, file: !135, line: 1541, baseType: !499, size: 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1651, file: !135, line: 1542, baseType: !1655, size: 64, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !1658)
!1658 = !{!1659}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1657, file: !135, line: 1538, baseType: !1660, size: 192)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !1662)
!1662 = !{!1663, !1664, !1665}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1661, file: !135, line: 1537, baseType: !7, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1661, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1661, file: !135, line: 1537, baseType: !1666, size: 128, offset: 64)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1667, size: 128, elements: !559)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !1669)
!1669 = !{!1670, !1671}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1668, file: !135, line: 1533, baseType: !460, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1668, file: !135, line: 1534, baseType: !460, size: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !463, file: !135, line: 3403, baseType: !1673, size: 512)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1678, !1684, !1685, !1686}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1673, file: !135, line: 1939, baseType: !499, size: 192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1673, file: !135, line: 1940, baseType: !585, size: 32, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1673, file: !135, line: 1941, baseType: !345, size: 32, offset: 224)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1673, file: !135, line: 1946, baseType: !1679, size: 32, offset: 256)
!1679 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !1680)
!1680 = !{!1681, !1682, !1683}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1679, file: !135, line: 1943, baseType: !363, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1679, file: !135, line: 1944, baseType: !370, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1679, file: !135, line: 1945, baseType: !134, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1673, file: !135, line: 1950, baseType: !777, size: 64, offset: 320)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1673, file: !135, line: 1951, baseType: !777, size: 64, offset: 384)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1673, file: !135, line: 1953, baseType: !842, size: 64, offset: 448)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !463, file: !135, line: 3404, baseType: !1688, size: 1664)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !1689)
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1688, file: !135, line: 3338, baseType: !499, size: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1688, file: !135, line: 3341, baseType: !1692, size: 1472, offset: 192)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1693, line: 410, size: 1472, elements: !1694)
!1693 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1694 = !{!1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1692, file: !1693, line: 412, baseType: !453, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1692, file: !1693, line: 413, baseType: !453, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1692, file: !1693, line: 414, baseType: !453, size: 32, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1692, file: !1693, line: 415, baseType: !453, size: 32, offset: 96)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1692, file: !1693, line: 416, baseType: !453, size: 32, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1692, file: !1693, line: 417, baseType: !453, size: 32, offset: 160)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1692, file: !1693, line: 418, baseType: !452, size: 8, offset: 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1692, file: !1693, line: 419, baseType: !452, size: 8, offset: 200)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1692, file: !1693, line: 420, baseType: !1704, size: 8, offset: 208)
!1704 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1692, file: !1693, line: 421, baseType: !1704, size: 8, offset: 216)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1692, file: !1693, line: 422, baseType: !1704, size: 8, offset: 224)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1692, file: !1693, line: 423, baseType: !1704, size: 8, offset: 232)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1692, file: !1693, line: 424, baseType: !1704, size: 8, offset: 240)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1692, file: !1693, line: 425, baseType: !1704, size: 8, offset: 248)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1692, file: !1693, line: 426, baseType: !1704, size: 8, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1692, file: !1693, line: 427, baseType: !1704, size: 8, offset: 264)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1692, file: !1693, line: 428, baseType: !1704, size: 8, offset: 272)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1692, file: !1693, line: 429, baseType: !1704, size: 8, offset: 280)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1692, file: !1693, line: 430, baseType: !1704, size: 8, offset: 288)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1692, file: !1693, line: 431, baseType: !1704, size: 8, offset: 296)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1692, file: !1693, line: 432, baseType: !1704, size: 8, offset: 304)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1692, file: !1693, line: 433, baseType: !1704, size: 8, offset: 312)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1692, file: !1693, line: 434, baseType: !1704, size: 8, offset: 320)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1692, file: !1693, line: 435, baseType: !1704, size: 8, offset: 328)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1692, file: !1693, line: 436, baseType: !1704, size: 8, offset: 336)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1692, file: !1693, line: 437, baseType: !1704, size: 8, offset: 344)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1692, file: !1693, line: 438, baseType: !1704, size: 8, offset: 352)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1692, file: !1693, line: 439, baseType: !1704, size: 8, offset: 360)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1692, file: !1693, line: 440, baseType: !1704, size: 8, offset: 368)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1692, file: !1693, line: 441, baseType: !1704, size: 8, offset: 376)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1692, file: !1693, line: 442, baseType: !1704, size: 8, offset: 384)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1692, file: !1693, line: 443, baseType: !1704, size: 8, offset: 392)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1692, file: !1693, line: 444, baseType: !1704, size: 8, offset: 400)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1692, file: !1693, line: 445, baseType: !1704, size: 8, offset: 408)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1692, file: !1693, line: 446, baseType: !1704, size: 8, offset: 416)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1692, file: !1693, line: 447, baseType: !1704, size: 8, offset: 424)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1692, file: !1693, line: 448, baseType: !1704, size: 8, offset: 432)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1692, file: !1693, line: 449, baseType: !1704, size: 8, offset: 440)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1692, file: !1693, line: 450, baseType: !1704, size: 8, offset: 448)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1692, file: !1693, line: 451, baseType: !1704, size: 8, offset: 456)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1692, file: !1693, line: 452, baseType: !1704, size: 8, offset: 464)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1692, file: !1693, line: 453, baseType: !1704, size: 8, offset: 472)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1692, file: !1693, line: 454, baseType: !1704, size: 8, offset: 480)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1692, file: !1693, line: 455, baseType: !1704, size: 8, offset: 488)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1692, file: !1693, line: 456, baseType: !1704, size: 8, offset: 496)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1692, file: !1693, line: 457, baseType: !1704, size: 8, offset: 504)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1692, file: !1693, line: 458, baseType: !1704, size: 8, offset: 512)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1692, file: !1693, line: 459, baseType: !1704, size: 8, offset: 520)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1692, file: !1693, line: 460, baseType: !1704, size: 8, offset: 528)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1692, file: !1693, line: 461, baseType: !1704, size: 8, offset: 536)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1692, file: !1693, line: 462, baseType: !1704, size: 8, offset: 544)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1692, file: !1693, line: 463, baseType: !1704, size: 8, offset: 552)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1692, file: !1693, line: 464, baseType: !1704, size: 8, offset: 560)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1692, file: !1693, line: 465, baseType: !1704, size: 8, offset: 568)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1692, file: !1693, line: 466, baseType: !1704, size: 8, offset: 576)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1692, file: !1693, line: 467, baseType: !1704, size: 8, offset: 584)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1692, file: !1693, line: 468, baseType: !1704, size: 8, offset: 592)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1692, file: !1693, line: 469, baseType: !1704, size: 8, offset: 600)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1692, file: !1693, line: 470, baseType: !1704, size: 8, offset: 608)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1692, file: !1693, line: 471, baseType: !1704, size: 8, offset: 616)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1692, file: !1693, line: 472, baseType: !1704, size: 8, offset: 624)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1692, file: !1693, line: 473, baseType: !1704, size: 8, offset: 632)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1692, file: !1693, line: 474, baseType: !1704, size: 8, offset: 640)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1692, file: !1693, line: 475, baseType: !1704, size: 8, offset: 648)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1692, file: !1693, line: 476, baseType: !1704, size: 8, offset: 656)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1692, file: !1693, line: 477, baseType: !1704, size: 8, offset: 664)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1692, file: !1693, line: 478, baseType: !1704, size: 8, offset: 672)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1692, file: !1693, line: 479, baseType: !1704, size: 8, offset: 680)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1692, file: !1693, line: 480, baseType: !1704, size: 8, offset: 688)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1692, file: !1693, line: 481, baseType: !1704, size: 8, offset: 696)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1692, file: !1693, line: 482, baseType: !1704, size: 8, offset: 704)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1692, file: !1693, line: 483, baseType: !1704, size: 8, offset: 712)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1692, file: !1693, line: 484, baseType: !1704, size: 8, offset: 720)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1692, file: !1693, line: 485, baseType: !1704, size: 8, offset: 728)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1692, file: !1693, line: 486, baseType: !1704, size: 8, offset: 736)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1692, file: !1693, line: 487, baseType: !1704, size: 8, offset: 744)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1692, file: !1693, line: 488, baseType: !1704, size: 8, offset: 752)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1692, file: !1693, line: 489, baseType: !1704, size: 8, offset: 760)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1692, file: !1693, line: 490, baseType: !1704, size: 8, offset: 768)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1692, file: !1693, line: 491, baseType: !1704, size: 8, offset: 776)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1692, file: !1693, line: 492, baseType: !1704, size: 8, offset: 784)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1692, file: !1693, line: 493, baseType: !1704, size: 8, offset: 792)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1692, file: !1693, line: 494, baseType: !1704, size: 8, offset: 800)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1692, file: !1693, line: 495, baseType: !1704, size: 8, offset: 808)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1692, file: !1693, line: 496, baseType: !1704, size: 8, offset: 816)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1692, file: !1693, line: 497, baseType: !1704, size: 8, offset: 824)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1692, file: !1693, line: 498, baseType: !1704, size: 8, offset: 832)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1692, file: !1693, line: 499, baseType: !1704, size: 8, offset: 840)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1692, file: !1693, line: 500, baseType: !1704, size: 8, offset: 848)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1692, file: !1693, line: 501, baseType: !1704, size: 8, offset: 856)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1692, file: !1693, line: 502, baseType: !1704, size: 8, offset: 864)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1692, file: !1693, line: 503, baseType: !1704, size: 8, offset: 872)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1692, file: !1693, line: 504, baseType: !1704, size: 8, offset: 880)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1692, file: !1693, line: 505, baseType: !1704, size: 8, offset: 888)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1692, file: !1693, line: 506, baseType: !1704, size: 8, offset: 896)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1692, file: !1693, line: 507, baseType: !1704, size: 8, offset: 904)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1692, file: !1693, line: 508, baseType: !1704, size: 8, offset: 912)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1692, file: !1693, line: 509, baseType: !1704, size: 8, offset: 920)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1692, file: !1693, line: 510, baseType: !1704, size: 8, offset: 928)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1692, file: !1693, line: 511, baseType: !1704, size: 8, offset: 936)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1692, file: !1693, line: 512, baseType: !1704, size: 8, offset: 944)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1692, file: !1693, line: 513, baseType: !1704, size: 8, offset: 952)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1692, file: !1693, line: 514, baseType: !1704, size: 8, offset: 960)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1692, file: !1693, line: 515, baseType: !1704, size: 8, offset: 968)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1692, file: !1693, line: 516, baseType: !1704, size: 8, offset: 976)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1692, file: !1693, line: 517, baseType: !1704, size: 8, offset: 984)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1692, file: !1693, line: 518, baseType: !1704, size: 8, offset: 992)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1692, file: !1693, line: 519, baseType: !1704, size: 8, offset: 1000)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1692, file: !1693, line: 520, baseType: !1704, size: 8, offset: 1008)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1692, file: !1693, line: 521, baseType: !1704, size: 8, offset: 1016)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1692, file: !1693, line: 522, baseType: !1704, size: 8, offset: 1024)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1692, file: !1693, line: 523, baseType: !1704, size: 8, offset: 1032)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1692, file: !1693, line: 524, baseType: !1704, size: 8, offset: 1040)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1692, file: !1693, line: 525, baseType: !1704, size: 8, offset: 1048)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1692, file: !1693, line: 526, baseType: !1704, size: 8, offset: 1056)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1692, file: !1693, line: 527, baseType: !1704, size: 8, offset: 1064)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1692, file: !1693, line: 528, baseType: !1704, size: 8, offset: 1072)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1692, file: !1693, line: 529, baseType: !1704, size: 8, offset: 1080)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1692, file: !1693, line: 530, baseType: !1704, size: 8, offset: 1088)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1692, file: !1693, line: 531, baseType: !1704, size: 8, offset: 1096)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1692, file: !1693, line: 532, baseType: !1704, size: 8, offset: 1104)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1692, file: !1693, line: 533, baseType: !1704, size: 8, offset: 1112)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1692, file: !1693, line: 534, baseType: !1704, size: 8, offset: 1120)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1692, file: !1693, line: 535, baseType: !1704, size: 8, offset: 1128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1692, file: !1693, line: 536, baseType: !1704, size: 8, offset: 1136)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1692, file: !1693, line: 537, baseType: !1704, size: 8, offset: 1144)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1692, file: !1693, line: 538, baseType: !1704, size: 8, offset: 1152)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1692, file: !1693, line: 539, baseType: !1704, size: 8, offset: 1160)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1692, file: !1693, line: 540, baseType: !1704, size: 8, offset: 1168)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1692, file: !1693, line: 541, baseType: !1704, size: 8, offset: 1176)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1692, file: !1693, line: 542, baseType: !1704, size: 8, offset: 1184)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1692, file: !1693, line: 543, baseType: !1704, size: 8, offset: 1192)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1692, file: !1693, line: 544, baseType: !1704, size: 8, offset: 1200)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1692, file: !1693, line: 545, baseType: !1704, size: 8, offset: 1208)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1692, file: !1693, line: 546, baseType: !1704, size: 8, offset: 1216)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1692, file: !1693, line: 547, baseType: !1704, size: 8, offset: 1224)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1692, file: !1693, line: 548, baseType: !1704, size: 8, offset: 1232)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1692, file: !1693, line: 549, baseType: !1704, size: 8, offset: 1240)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1692, file: !1693, line: 550, baseType: !1704, size: 8, offset: 1248)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1692, file: !1693, line: 551, baseType: !1704, size: 8, offset: 1256)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1692, file: !1693, line: 552, baseType: !1704, size: 8, offset: 1264)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1692, file: !1693, line: 553, baseType: !1704, size: 8, offset: 1272)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1692, file: !1693, line: 554, baseType: !1704, size: 8, offset: 1280)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1692, file: !1693, line: 555, baseType: !1704, size: 8, offset: 1288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1692, file: !1693, line: 556, baseType: !1704, size: 8, offset: 1296)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1692, file: !1693, line: 557, baseType: !1704, size: 8, offset: 1304)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1692, file: !1693, line: 558, baseType: !1704, size: 8, offset: 1312)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1692, file: !1693, line: 559, baseType: !1704, size: 8, offset: 1320)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1692, file: !1693, line: 560, baseType: !1704, size: 8, offset: 1328)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1692, file: !1693, line: 561, baseType: !1704, size: 8, offset: 1336)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1692, file: !1693, line: 562, baseType: !1704, size: 8, offset: 1344)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1692, file: !1693, line: 563, baseType: !1704, size: 8, offset: 1352)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1692, file: !1693, line: 564, baseType: !1704, size: 8, offset: 1360)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1692, file: !1693, line: 565, baseType: !1704, size: 8, offset: 1368)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1692, file: !1693, line: 566, baseType: !1704, size: 8, offset: 1376)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1692, file: !1693, line: 567, baseType: !1704, size: 8, offset: 1384)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1692, file: !1693, line: 568, baseType: !1704, size: 8, offset: 1392)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1692, file: !1693, line: 569, baseType: !1704, size: 8, offset: 1400)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1692, file: !1693, line: 570, baseType: !1704, size: 8, offset: 1408)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1692, file: !1693, line: 571, baseType: !1704, size: 8, offset: 1416)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1692, file: !1693, line: 572, baseType: !1704, size: 8, offset: 1424)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1692, file: !1693, line: 573, baseType: !1704, size: 8, offset: 1432)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1692, file: !1693, line: 574, baseType: !1704, size: 8, offset: 1440)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !463, file: !135, line: 3405, baseType: !1860, size: 384)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !1861)
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1860, file: !135, line: 3353, baseType: !499, size: 192)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1860, file: !135, line: 3356, baseType: !1864, size: 192, offset: 192)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1693, line: 578, size: 192, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1864, file: !1693, line: 580, baseType: !453, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1864, file: !1693, line: 581, baseType: !453, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1864, file: !1693, line: 582, baseType: !453, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1864, file: !1693, line: 583, baseType: !453, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1864, file: !1693, line: 584, baseType: !452, size: 8, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1864, file: !1693, line: 585, baseType: !452, size: 8, offset: 136)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1864, file: !1693, line: 586, baseType: !452, size: 8, offset: 144)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1864, file: !1693, line: 587, baseType: !452, size: 8, offset: 152)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1864, file: !1693, line: 588, baseType: !452, size: 8, offset: 160)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1864, file: !1693, line: 589, baseType: !452, size: 8, offset: 168)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1864, file: !1693, line: 590, baseType: !452, size: 8, offset: 176)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "initializer_stack", file: !3, line: 6174, size: 512, elements: !1879)
!1879 = !{!1880, !1881, !1882, !1933, !1934, !1935, !1945, !1946, !1947, !1948, !1949}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1878, file: !3, line: 6176, baseType: !1877, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1878, file: !3, line: 6177, baseType: !460, size: 64, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "constructor_stack", scope: !1878, file: !3, line: 6178, baseType: !1883, size: 64, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_stack", file: !3, line: 6125, size: 1024, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1906, !1907, !1908, !1914, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1884, file: !3, line: 6127, baseType: !1883, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1884, file: !3, line: 6128, baseType: !460, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !1884, file: !3, line: 6129, baseType: !460, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1884, file: !3, line: 6130, baseType: !460, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "max_index", scope: !1884, file: !3, line: 6131, baseType: !460, size: 64, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "unfilled_index", scope: !1884, file: !3, line: 6132, baseType: !460, size: 64, offset: 320)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "unfilled_fields", scope: !1884, file: !3, line: 6133, baseType: !460, size: 64, offset: 384)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "bit_index", scope: !1884, file: !3, line: 6134, baseType: !460, size: 64, offset: 448)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1884, file: !3, line: 6135, baseType: !1655, size: 64, offset: 512)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pending_elts", scope: !1884, file: !3, line: 6136, baseType: !1896, size: 64, offset: 576)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_node", file: !3, line: 6081, size: 448, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1897, file: !3, line: 6083, baseType: !1896, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1897, file: !3, line: 6083, baseType: !1896, size: 64, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1897, file: !3, line: 6084, baseType: !1896, size: 64, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "balance", scope: !1897, file: !3, line: 6085, baseType: !453, size: 32, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1897, file: !3, line: 6086, baseType: !460, size: 64, offset: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1897, file: !3, line: 6087, baseType: !460, size: 64, offset: 320)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "origtype", scope: !1897, file: !3, line: 6088, baseType: !460, size: 64, offset: 384)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1884, file: !3, line: 6137, baseType: !453, size: 32, offset: 640)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1884, file: !3, line: 6138, baseType: !453, size: 32, offset: 672)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "replacement_value", scope: !1884, file: !3, line: 6141, baseType: !1909, size: 192, offset: 704)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_expr", file: !386, line: 116, size: 192, elements: !1910)
!1910 = !{!1911, !1912, !1913}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1909, file: !386, line: 119, baseType: !460, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "original_code", scope: !1909, file: !386, line: 126, baseType: !134, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "original_type", scope: !1909, file: !386, line: 131, baseType: !460, size: 64, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "range_stack", scope: !1884, file: !3, line: 6142, baseType: !1915, size: 64, offset: 896)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_range_stack", file: !3, line: 6158, size: 448, elements: !1917)
!1917 = !{!1918, !1919, !1920, !1921, !1922, !1923, !1924}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1916, file: !3, line: 6160, baseType: !1915, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1916, file: !3, line: 6160, baseType: !1915, size: 64, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1916, file: !3, line: 6161, baseType: !1883, size: 64, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1916, file: !3, line: 6162, baseType: !460, size: 64, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1916, file: !3, line: 6163, baseType: !460, size: 64, offset: 256)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1916, file: !3, line: 6164, baseType: !460, size: 64, offset: 320)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !1916, file: !3, line: 6165, baseType: !460, size: 64, offset: 384)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !1884, file: !3, line: 6143, baseType: !456, size: 8, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !1884, file: !3, line: 6144, baseType: !456, size: 8, offset: 968)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "nonconst", scope: !1884, file: !3, line: 6145, baseType: !456, size: 8, offset: 976)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "implicit", scope: !1884, file: !3, line: 6146, baseType: !456, size: 8, offset: 984)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "erroneous", scope: !1884, file: !3, line: 6147, baseType: !456, size: 8, offset: 992)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1884, file: !3, line: 6148, baseType: !456, size: 8, offset: 1000)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "incremental", scope: !1884, file: !3, line: 6149, baseType: !456, size: 8, offset: 1008)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "designated", scope: !1884, file: !3, line: 6150, baseType: !456, size: 8, offset: 1016)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "constructor_range_stack", scope: !1878, file: !3, line: 6179, baseType: !1915, size: 64, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1878, file: !3, line: 6180, baseType: !1655, size: 64, offset: 256)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "spelling", scope: !1878, file: !3, line: 6181, baseType: !1936, size: 64, offset: 320)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spelling", file: !3, line: 5533, size: 128, elements: !1938)
!1938 = !{!1939, !1940}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1937, file: !3, line: 5535, baseType: !453, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1937, file: !3, line: 5540, baseType: !1941, size: 64, offset: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1937, file: !3, line: 5536, size: 64, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1941, file: !3, line: 5538, baseType: !514, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1941, file: !3, line: 5539, baseType: !458, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "spelling_base", scope: !1878, file: !3, line: 6182, baseType: !1936, size: 64, offset: 384)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "spelling_size", scope: !1878, file: !3, line: 6183, baseType: !453, size: 32, offset: 448)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "top_level", scope: !1878, file: !3, line: 6184, baseType: !456, size: 8, offset: 480)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "require_constant_value", scope: !1878, file: !3, line: 6185, baseType: !456, size: 8, offset: 488)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "require_constant_elements", scope: !1878, file: !3, line: 6186, baseType: !456, size: 8, offset: 496)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tagged_tu_seen_cache", file: !3, line: 169, size: 256, elements: !1955)
!1955 = !{!1956, !1959, !1961, !1962}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1954, file: !3, line: 170, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1954)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !1954, file: !3, line: 171, baseType: !1960, size: 64, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !461, line: 59, baseType: !1951)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !1954, file: !3, line: 172, baseType: !1960, size: 64, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1954, file: !3, line: 175, baseType: !453, size: 32, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "maybe_used_decl", file: !3, line: 2431, size: 192, elements: !1965)
!1965 = !{!1966, !1967, !1968}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1964, file: !3, line: 2434, baseType: !460, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1964, file: !3, line: 2436, baseType: !453, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1964, file: !3, line: 2438, baseType: !1963, size: 64, offset: 128)
!1969 = !{!1970, !1972, !1974, !1976, !1978, !1980, !1982, !0, !1984, !1986, !1988, !1990, !1992, !1994, !1996, !1998, !2000, !2002, !2004, !2006, !2008, !2010, !2012, !2014, !2016, !2018, !2020, !2022, !2024, !2026, !2028, !2030, !2032, !2034, !2036, !2038}
!1970 = !DIGlobalVariableExpression(var: !1971, expr: !DIExpression())
!1971 = distinct !DIGlobalVariable(name: "in_late_binary_op", scope: !2, file: !3, line: 63, type: !452, isLocal: false, isDefinition: true)
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "in_alignof", scope: !2, file: !3, line: 66, type: !453, isLocal: false, isDefinition: true)
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "in_sizeof", scope: !2, file: !3, line: 69, type: !453, isLocal: false, isDefinition: true)
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "in_typeof", scope: !2, file: !3, line: 72, type: !453, isLocal: false, isDefinition: true)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "missing_braces_mentioned", scope: !2, file: !3, line: 76, type: !453, isLocal: true, isDefinition: true)
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression())
!1981 = distinct !DIGlobalVariable(name: "require_constant_value", scope: !2, file: !3, line: 78, type: !453, isLocal: true, isDefinition: true)
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "require_constant_elements", scope: !2, file: !3, line: 79, type: !453, isLocal: true, isDefinition: true)
!1984 = !DIGlobalVariableExpression(var: !1985, expr: !DIExpression())
!1985 = distinct !DIGlobalVariable(name: "maybe_used_decls", scope: !2, file: !3, line: 2441, type: !1963, isLocal: true, isDefinition: true)
!1986 = !DIGlobalVariableExpression(var: !1987, expr: !DIExpression())
!1987 = distinct !DIGlobalVariable(name: "spelling", scope: !2, file: !3, line: 5547, type: !1936, isLocal: true, isDefinition: true)
!1988 = !DIGlobalVariableExpression(var: !1989, expr: !DIExpression())
!1989 = distinct !DIGlobalVariable(name: "spelling_base", scope: !2, file: !3, line: 5548, type: !1936, isLocal: true, isDefinition: true)
!1990 = !DIGlobalVariableExpression(var: !1991, expr: !DIExpression())
!1991 = distinct !DIGlobalVariable(name: "spelling_size", scope: !2, file: !3, line: 5549, type: !453, isLocal: true, isDefinition: true)
!1992 = !DIGlobalVariableExpression(var: !1993, expr: !DIExpression())
!1993 = distinct !DIGlobalVariable(name: "constructor_type", scope: !2, file: !3, line: 6032, type: !460, isLocal: true, isDefinition: true)
!1994 = !DIGlobalVariableExpression(var: !1995, expr: !DIExpression())
!1995 = distinct !DIGlobalVariable(name: "constructor_fields", scope: !2, file: !3, line: 6036, type: !460, isLocal: true, isDefinition: true)
!1996 = !DIGlobalVariableExpression(var: !1997, expr: !DIExpression())
!1997 = distinct !DIGlobalVariable(name: "constructor_index", scope: !2, file: !3, line: 6040, type: !460, isLocal: true, isDefinition: true)
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "constructor_max_index", scope: !2, file: !3, line: 6043, type: !460, isLocal: true, isDefinition: true)
!2000 = !DIGlobalVariableExpression(var: !2001, expr: !DIExpression())
!2001 = distinct !DIGlobalVariable(name: "constructor_unfilled_fields", scope: !2, file: !3, line: 6046, type: !460, isLocal: true, isDefinition: true)
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "constructor_unfilled_index", scope: !2, file: !3, line: 6050, type: !460, isLocal: true, isDefinition: true)
!2004 = !DIGlobalVariableExpression(var: !2005, expr: !DIExpression())
!2005 = distinct !DIGlobalVariable(name: "constructor_bit_index", scope: !2, file: !3, line: 6054, type: !460, isLocal: true, isDefinition: true)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "constructor_elements", scope: !2, file: !3, line: 6059, type: !1655, isLocal: true, isDefinition: true)
!2008 = !DIGlobalVariableExpression(var: !2009, expr: !DIExpression())
!2009 = distinct !DIGlobalVariable(name: "constructor_incremental", scope: !2, file: !3, line: 6063, type: !453, isLocal: true, isDefinition: true)
!2010 = !DIGlobalVariableExpression(var: !2011, expr: !DIExpression())
!2011 = distinct !DIGlobalVariable(name: "constructor_constant", scope: !2, file: !3, line: 6066, type: !453, isLocal: true, isDefinition: true)
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "constructor_simple", scope: !2, file: !3, line: 6069, type: !453, isLocal: true, isDefinition: true)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "constructor_nonconst", scope: !2, file: !3, line: 6073, type: !453, isLocal: true, isDefinition: true)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "constructor_erroneous", scope: !2, file: !3, line: 6076, type: !453, isLocal: true, isDefinition: true)
!2018 = !DIGlobalVariableExpression(var: !2019, expr: !DIExpression())
!2019 = distinct !DIGlobalVariable(name: "constructor_pending_elts", scope: !2, file: !3, line: 6096, type: !1896, isLocal: true, isDefinition: true)
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "constructor_depth", scope: !2, file: !3, line: 6099, type: !453, isLocal: true, isDefinition: true)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "constructor_decl", scope: !2, file: !3, line: 6104, type: !460, isLocal: true, isDefinition: true)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "constructor_top_level", scope: !2, file: !3, line: 6107, type: !453, isLocal: true, isDefinition: true)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "constructor_designated", scope: !2, file: !3, line: 6110, type: !453, isLocal: true, isDefinition: true)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "designator_depth", scope: !2, file: !3, line: 6113, type: !453, isLocal: true, isDefinition: true)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "designator_erroneous", scope: !2, file: !3, line: 6116, type: !453, isLocal: true, isDefinition: true)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "constructor_stack", scope: !2, file: !3, line: 6153, type: !1883, isLocal: true, isDefinition: true)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "constructor_range_stack", scope: !2, file: !3, line: 6168, type: !1915, isLocal: true, isDefinition: true)
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "initializer_stack", scope: !2, file: !3, line: 6189, type: !1877, isLocal: true, isDefinition: true)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "c_switch_stack", scope: !2, file: !3, line: 8450, type: !1409, isLocal: false, isDefinition: true)
!2040 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2041 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2042 = !{i32 2, !"Dwarf Version", i32 4}
!2043 = !{i32 2, !"Debug Info Version", i32 3}
!2044 = !{i32 1, !"wchar_size", i32 4}
!2045 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2046 = distinct !DISubprogram(name: "vprintf", scope: !2047, file: !2047, line: 39, type: !2048, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2058)
!2047 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!453, !2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !458)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2052, file: !3, baseType: !7, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2052, file: !3, baseType: !7, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2052, file: !3, baseType: !457, size: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2052, file: !3, baseType: !457, size: 64, offset: 128)
!2058 = !{!2059, !2060}
!2059 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2046, file: !2047, line: 39, type: !2050)
!2060 = !DILocalVariable(name: "__arg", arg: 2, scope: !2046, file: !2047, line: 39, type: !2051)
!2061 = !DILocation(line: 0, scope: !2046)
!2062 = !DILocation(line: 41, column: 20, scope: !2046)
!2063 = !DILocation(line: 41, column: 10, scope: !2046)
!2064 = !DILocation(line: 41, column: 3, scope: !2046)
!2065 = distinct !DISubprogram(name: "getchar", scope: !2047, file: !2047, line: 47, type: !2066, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!453}
!2068 = !{}
!2069 = !DILocation(line: 49, column: 16, scope: !2065)
!2070 = !DILocation(line: 49, column: 10, scope: !2065)
!2071 = !DILocation(line: 49, column: 3, scope: !2065)
!2072 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2047, file: !2047, line: 56, type: !2073, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2126)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!453, !2075}
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2077, line: 7, baseType: !2078)
!2077 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2079, line: 49, size: 1728, elements: !2080)
!2079 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2080 = !{!2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2096, !2098, !2099, !2100, !2103, !2105, !2106, !2107, !2110, !2112, !2115, !2118, !2119, !2120, !2121, !2122}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2078, file: !2079, line: 51, baseType: !453, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2078, file: !2079, line: 54, baseType: !455, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2078, file: !2079, line: 55, baseType: !455, size: 64, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2078, file: !2079, line: 56, baseType: !455, size: 64, offset: 192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2078, file: !2079, line: 57, baseType: !455, size: 64, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2078, file: !2079, line: 58, baseType: !455, size: 64, offset: 320)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2078, file: !2079, line: 59, baseType: !455, size: 64, offset: 384)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2078, file: !2079, line: 60, baseType: !455, size: 64, offset: 448)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2078, file: !2079, line: 61, baseType: !455, size: 64, offset: 512)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2078, file: !2079, line: 64, baseType: !455, size: 64, offset: 576)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2078, file: !2079, line: 65, baseType: !455, size: 64, offset: 640)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2078, file: !2079, line: 66, baseType: !455, size: 64, offset: 704)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2078, file: !2079, line: 68, baseType: !2094, size: 64, offset: 768)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2079, line: 36, flags: DIFlagFwdDecl)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2078, file: !2079, line: 70, baseType: !2097, size: 64, offset: 832)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2078, file: !2079, line: 72, baseType: !453, size: 32, offset: 896)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2078, file: !2079, line: 73, baseType: !453, size: 32, offset: 928)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2078, file: !2079, line: 74, baseType: !2101, size: 64, offset: 960)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2102, line: 152, baseType: !516)
!2102 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2078, file: !2079, line: 77, baseType: !2104, size: 16, offset: 1024)
!2104 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2078, file: !2079, line: 78, baseType: !1704, size: 8, offset: 1040)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2078, file: !2079, line: 79, baseType: !558, size: 8, offset: 1048)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2078, file: !2079, line: 81, baseType: !2108, size: 64, offset: 1088)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2079, line: 43, baseType: null)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2078, file: !2079, line: 89, baseType: !2111, size: 64, offset: 1152)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2102, line: 153, baseType: !516)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2078, file: !2079, line: 91, baseType: !2113, size: 64, offset: 1216)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2079, line: 37, flags: DIFlagFwdDecl)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2078, file: !2079, line: 92, baseType: !2116, size: 64, offset: 1280)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2079, line: 38, flags: DIFlagFwdDecl)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2078, file: !2079, line: 93, baseType: !2097, size: 64, offset: 1344)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2078, file: !2079, line: 94, baseType: !457, size: 64, offset: 1408)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2078, file: !2079, line: 95, baseType: !934, size: 64, offset: 1472)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2078, file: !2079, line: 96, baseType: !453, size: 32, offset: 1536)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2078, file: !2079, line: 98, baseType: !2123, size: 160, offset: 1568)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 160, elements: !2124)
!2124 = !{!2125}
!2125 = !DISubrange(count: 20)
!2126 = !{!2127}
!2127 = !DILocalVariable(name: "__fp", arg: 1, scope: !2072, file: !2047, line: 56, type: !2075)
!2128 = !DILocation(line: 0, scope: !2072)
!2129 = !DILocation(line: 58, column: 10, scope: !2072)
!2130 = !DILocation(line: 58, column: 3, scope: !2072)
!2131 = distinct !DISubprogram(name: "getc_unlocked", scope: !2047, file: !2047, line: 66, type: !2073, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2132)
!2132 = !{!2133}
!2133 = !DILocalVariable(name: "__fp", arg: 1, scope: !2131, file: !2047, line: 66, type: !2075)
!2134 = !DILocation(line: 0, scope: !2131)
!2135 = !DILocation(line: 68, column: 10, scope: !2131)
!2136 = !DILocation(line: 68, column: 3, scope: !2131)
!2137 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2047, file: !2047, line: 73, type: !2066, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2068)
!2138 = !DILocation(line: 75, column: 10, scope: !2137)
!2139 = !DILocation(line: 75, column: 3, scope: !2137)
!2140 = distinct !DISubprogram(name: "putchar", scope: !2047, file: !2047, line: 82, type: !2141, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2143)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!453, !453}
!2143 = !{!2144}
!2144 = !DILocalVariable(name: "__c", arg: 1, scope: !2140, file: !2047, line: 82, type: !453)
!2145 = !DILocation(line: 0, scope: !2140)
!2146 = !DILocation(line: 84, column: 21, scope: !2140)
!2147 = !DILocation(line: 84, column: 10, scope: !2140)
!2148 = !DILocation(line: 84, column: 3, scope: !2140)
!2149 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2047, file: !2047, line: 91, type: !2150, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2152)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!453, !453, !2075}
!2152 = !{!2153, !2154}
!2153 = !DILocalVariable(name: "__c", arg: 1, scope: !2149, file: !2047, line: 91, type: !453)
!2154 = !DILocalVariable(name: "__stream", arg: 2, scope: !2149, file: !2047, line: 91, type: !2075)
!2155 = !DILocation(line: 0, scope: !2149)
!2156 = !DILocation(line: 93, column: 10, scope: !2149)
!2157 = !DILocation(line: 93, column: 3, scope: !2149)
!2158 = distinct !DISubprogram(name: "putc_unlocked", scope: !2047, file: !2047, line: 101, type: !2150, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2159)
!2159 = !{!2160, !2161}
!2160 = !DILocalVariable(name: "__c", arg: 1, scope: !2158, file: !2047, line: 101, type: !453)
!2161 = !DILocalVariable(name: "__stream", arg: 2, scope: !2158, file: !2047, line: 101, type: !2075)
!2162 = !DILocation(line: 0, scope: !2158)
!2163 = !DILocation(line: 103, column: 10, scope: !2158)
!2164 = !DILocation(line: 103, column: 3, scope: !2158)
!2165 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2047, file: !2047, line: 108, type: !2141, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2166)
!2166 = !{!2167}
!2167 = !DILocalVariable(name: "__c", arg: 1, scope: !2165, file: !2047, line: 108, type: !453)
!2168 = !DILocation(line: 0, scope: !2165)
!2169 = !DILocation(line: 110, column: 10, scope: !2165)
!2170 = !DILocation(line: 110, column: 3, scope: !2165)
!2171 = distinct !DISubprogram(name: "getline", scope: !2047, file: !2047, line: 118, type: !2172, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2176)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!2174, !454, !2175, !2075}
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2102, line: 193, baseType: !516)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!2176 = !{!2177, !2178, !2179}
!2177 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2171, file: !2047, line: 118, type: !454)
!2178 = !DILocalVariable(name: "__n", arg: 2, scope: !2171, file: !2047, line: 118, type: !2175)
!2179 = !DILocalVariable(name: "__stream", arg: 3, scope: !2171, file: !2047, line: 118, type: !2075)
!2180 = !DILocation(line: 0, scope: !2171)
!2181 = !DILocation(line: 120, column: 10, scope: !2171)
!2182 = !DILocation(line: 120, column: 3, scope: !2171)
!2183 = distinct !DISubprogram(name: "feof_unlocked", scope: !2047, file: !2047, line: 128, type: !2073, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2184)
!2184 = !{!2185}
!2185 = !DILocalVariable(name: "__stream", arg: 1, scope: !2183, file: !2047, line: 128, type: !2075)
!2186 = !DILocation(line: 0, scope: !2183)
!2187 = !DILocation(line: 130, column: 10, scope: !2183)
!2188 = !DILocation(line: 130, column: 3, scope: !2183)
!2189 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2047, file: !2047, line: 135, type: !2073, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2190)
!2190 = !{!2191}
!2191 = !DILocalVariable(name: "__stream", arg: 1, scope: !2189, file: !2047, line: 135, type: !2075)
!2192 = !DILocation(line: 0, scope: !2189)
!2193 = !DILocation(line: 137, column: 10, scope: !2189)
!2194 = !DILocation(line: 137, column: 3, scope: !2189)
!2195 = distinct !DISubprogram(name: "tolower", scope: !2196, file: !2196, line: 207, type: !2141, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2197)
!2196 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2197 = !{!2198}
!2198 = !DILocalVariable(name: "__c", arg: 1, scope: !2195, file: !2196, line: 207, type: !453)
!2199 = !DILocation(line: 0, scope: !2195)
!2200 = !DILocation(line: 209, column: 22, scope: !2195)
!2201 = !DILocation(line: 209, column: 39, scope: !2195)
!2202 = !DILocation(line: 209, column: 38, scope: !2195)
!2203 = !DILocation(line: 209, column: 37, scope: !2195)
!2204 = !DILocation(line: 209, column: 10, scope: !2195)
!2205 = !DILocation(line: 209, column: 3, scope: !2195)
!2206 = distinct !DISubprogram(name: "toupper", scope: !2196, file: !2196, line: 213, type: !2141, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2207)
!2207 = !{!2208}
!2208 = !DILocalVariable(name: "__c", arg: 1, scope: !2206, file: !2196, line: 213, type: !453)
!2209 = !DILocation(line: 0, scope: !2206)
!2210 = !DILocation(line: 215, column: 22, scope: !2206)
!2211 = !DILocation(line: 215, column: 39, scope: !2206)
!2212 = !DILocation(line: 215, column: 38, scope: !2206)
!2213 = !DILocation(line: 215, column: 37, scope: !2206)
!2214 = !DILocation(line: 215, column: 10, scope: !2206)
!2215 = !DILocation(line: 215, column: 3, scope: !2206)
!2216 = distinct !DISubprogram(name: "atoi", scope: !2217, file: !2217, line: 361, type: !2218, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2220)
!2217 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!453, !458}
!2220 = !{!2221}
!2221 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2216, file: !2217, line: 361, type: !458)
!2222 = !DILocation(line: 0, scope: !2216)
!2223 = !DILocation(line: 363, column: 16, scope: !2216)
!2224 = !DILocation(line: 363, column: 10, scope: !2216)
!2225 = !DILocation(line: 363, column: 3, scope: !2216)
!2226 = distinct !DISubprogram(name: "atol", scope: !2217, file: !2217, line: 366, type: !2227, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2229)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!516, !458}
!2229 = !{!2230}
!2230 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2226, file: !2217, line: 366, type: !458)
!2231 = !DILocation(line: 0, scope: !2226)
!2232 = !DILocation(line: 368, column: 10, scope: !2226)
!2233 = !DILocation(line: 368, column: 3, scope: !2226)
!2234 = distinct !DISubprogram(name: "atoll", scope: !2217, file: !2217, line: 373, type: !2235, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2238)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!2237, !458}
!2237 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2238 = !{!2239}
!2239 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2234, file: !2217, line: 373, type: !458)
!2240 = !DILocation(line: 0, scope: !2234)
!2241 = !DILocation(line: 375, column: 10, scope: !2234)
!2242 = !DILocation(line: 375, column: 3, scope: !2234)
!2243 = distinct !DISubprogram(name: "bsearch", scope: !2244, file: !2244, line: 20, type: !2245, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2248)
!2244 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!457, !1095, !1095, !934, !934, !2247}
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2217, line: 808, baseType: !1267)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258}
!2249 = !DILocalVariable(name: "__key", arg: 1, scope: !2243, file: !2244, line: 20, type: !1095)
!2250 = !DILocalVariable(name: "__base", arg: 2, scope: !2243, file: !2244, line: 20, type: !1095)
!2251 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2243, file: !2244, line: 20, type: !934)
!2252 = !DILocalVariable(name: "__size", arg: 4, scope: !2243, file: !2244, line: 20, type: !934)
!2253 = !DILocalVariable(name: "__compar", arg: 5, scope: !2243, file: !2244, line: 21, type: !2247)
!2254 = !DILocalVariable(name: "__l", scope: !2243, file: !2244, line: 23, type: !934)
!2255 = !DILocalVariable(name: "__u", scope: !2243, file: !2244, line: 23, type: !934)
!2256 = !DILocalVariable(name: "__idx", scope: !2243, file: !2244, line: 23, type: !934)
!2257 = !DILocalVariable(name: "__p", scope: !2243, file: !2244, line: 24, type: !1095)
!2258 = !DILocalVariable(name: "__comparison", scope: !2243, file: !2244, line: 25, type: !453)
!2259 = !DILocation(line: 0, scope: !2243)
!2260 = !DILocation(line: 29, column: 3, scope: !2243)
!2261 = !DILocation(line: 27, column: 7, scope: !2243)
!2262 = !DILocation(line: 29, column: 14, scope: !2243)
!2263 = !DILocation(line: 31, column: 20, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2243, file: !2244, line: 30, column: 5)
!2265 = !DILocation(line: 31, column: 27, scope: !2264)
!2266 = !DILocation(line: 32, column: 56, scope: !2264)
!2267 = !DILocation(line: 32, column: 47, scope: !2264)
!2268 = !DILocation(line: 33, column: 22, scope: !2264)
!2269 = !DILocation(line: 34, column: 24, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2264, file: !2244, line: 34, column: 11)
!2271 = !DILocation(line: 34, column: 11, scope: !2264)
!2272 = !DILocation(line: 36, column: 29, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2270, file: !2244, line: 36, column: 16)
!2274 = !DILocation(line: 36, column: 16, scope: !2270)
!2275 = !DILocation(line: 37, column: 14, scope: !2273)
!2276 = distinct !{!2276, !2260, !2277}
!2277 = !DILocation(line: 40, column: 5, scope: !2243)
!2278 = !DILocation(line: 43, column: 1, scope: !2243)
!2279 = distinct !DISubprogram(name: "atof", scope: !2280, file: !2280, line: 25, type: !2281, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2284)
!2280 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2281 = !DISubroutineType(types: !2282)
!2282 = !{!2283, !458}
!2283 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2284 = !{!2285}
!2285 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2279, file: !2280, line: 25, type: !458)
!2286 = !DILocation(line: 0, scope: !2279)
!2287 = !DILocation(line: 27, column: 10, scope: !2279)
!2288 = !DILocation(line: 27, column: 3, scope: !2279)
!2289 = distinct !DISubprogram(name: "strtoimax", scope: !2290, file: !2290, line: 324, type: !2291, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2297)
!2290 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2291 = !DISubroutineType(types: !2292)
!2292 = !{!2293, !2050, !2296, !453}
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2294, line: 101, baseType: !2295)
!2294 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2102, line: 72, baseType: !516)
!2296 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !454)
!2297 = !{!2298, !2299, !2300}
!2298 = !DILocalVariable(name: "nptr", arg: 1, scope: !2289, file: !2290, line: 324, type: !2050)
!2299 = !DILocalVariable(name: "endptr", arg: 2, scope: !2289, file: !2290, line: 324, type: !2296)
!2300 = !DILocalVariable(name: "base", arg: 3, scope: !2289, file: !2290, line: 324, type: !453)
!2301 = !DILocation(line: 0, scope: !2289)
!2302 = !DILocation(line: 327, column: 10, scope: !2289)
!2303 = !DILocation(line: 327, column: 3, scope: !2289)
!2304 = distinct !DISubprogram(name: "strtoumax", scope: !2290, file: !2290, line: 336, type: !2305, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2309)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!2307, !2050, !2296, !453}
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2294, line: 102, baseType: !2308)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2102, line: 73, baseType: !514)
!2309 = !{!2310, !2311, !2312}
!2310 = !DILocalVariable(name: "nptr", arg: 1, scope: !2304, file: !2290, line: 336, type: !2050)
!2311 = !DILocalVariable(name: "endptr", arg: 2, scope: !2304, file: !2290, line: 336, type: !2296)
!2312 = !DILocalVariable(name: "base", arg: 3, scope: !2304, file: !2290, line: 336, type: !453)
!2313 = !DILocation(line: 0, scope: !2304)
!2314 = !DILocation(line: 339, column: 10, scope: !2304)
!2315 = !DILocation(line: 339, column: 3, scope: !2304)
!2316 = distinct !DISubprogram(name: "wcstoimax", scope: !2290, file: !2290, line: 348, type: !2317, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2326)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!2293, !2319, !2323, !453}
!2319 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2320)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2322)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2290, line: 34, baseType: !453)
!2323 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2324)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2326 = !{!2327, !2328, !2329}
!2327 = !DILocalVariable(name: "nptr", arg: 1, scope: !2316, file: !2290, line: 348, type: !2319)
!2328 = !DILocalVariable(name: "endptr", arg: 2, scope: !2316, file: !2290, line: 348, type: !2323)
!2329 = !DILocalVariable(name: "base", arg: 3, scope: !2316, file: !2290, line: 348, type: !453)
!2330 = !DILocation(line: 0, scope: !2316)
!2331 = !DILocation(line: 351, column: 10, scope: !2316)
!2332 = !DILocation(line: 351, column: 3, scope: !2316)
!2333 = distinct !DISubprogram(name: "wcstoumax", scope: !2290, file: !2290, line: 362, type: !2334, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2336)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!2307, !2319, !2323, !453}
!2336 = !{!2337, !2338, !2339}
!2337 = !DILocalVariable(name: "nptr", arg: 1, scope: !2333, file: !2290, line: 362, type: !2319)
!2338 = !DILocalVariable(name: "endptr", arg: 2, scope: !2333, file: !2290, line: 362, type: !2323)
!2339 = !DILocalVariable(name: "base", arg: 3, scope: !2333, file: !2290, line: 362, type: !453)
!2340 = !DILocation(line: 0, scope: !2333)
!2341 = !DILocation(line: 365, column: 10, scope: !2333)
!2342 = !DILocation(line: 365, column: 3, scope: !2333)
!2343 = distinct !DISubprogram(name: "stat", scope: !2344, file: !2344, line: 453, type: !2345, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2382)
!2344 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!453, !458, !2347}
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2349, line: 46, size: 1152, elements: !2350)
!2349 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2350 = !{!2351, !2353, !2355, !2357, !2359, !2361, !2363, !2364, !2365, !2366, !2368, !2370, !2378, !2379, !2380}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2348, file: !2349, line: 48, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2102, line: 145, baseType: !514)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2348, file: !2349, line: 53, baseType: !2354, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2102, line: 148, baseType: !514)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2348, file: !2349, line: 61, baseType: !2356, size: 64, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2102, line: 151, baseType: !514)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2348, file: !2349, line: 62, baseType: !2358, size: 32, offset: 192)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2102, line: 150, baseType: !7)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2348, file: !2349, line: 64, baseType: !2360, size: 32, offset: 224)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2102, line: 146, baseType: !7)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2348, file: !2349, line: 65, baseType: !2362, size: 32, offset: 256)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2102, line: 147, baseType: !7)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2348, file: !2349, line: 67, baseType: !453, size: 32, offset: 288)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2348, file: !2349, line: 69, baseType: !2352, size: 64, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2348, file: !2349, line: 74, baseType: !2101, size: 64, offset: 384)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2348, file: !2349, line: 78, baseType: !2367, size: 64, offset: 448)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2102, line: 174, baseType: !516)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2348, file: !2349, line: 80, baseType: !2369, size: 64, offset: 512)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2102, line: 179, baseType: !516)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2348, file: !2349, line: 91, baseType: !2371, size: 128, offset: 576)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2372, line: 10, size: 128, elements: !2373)
!2372 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2373 = !{!2374, !2376}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2371, file: !2372, line: 12, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2102, line: 160, baseType: !516)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2371, file: !2372, line: 16, baseType: !2377, size: 64, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2102, line: 196, baseType: !516)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2348, file: !2349, line: 92, baseType: !2371, size: 128, offset: 704)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2348, file: !2349, line: 93, baseType: !2371, size: 128, offset: 832)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2348, file: !2349, line: 106, baseType: !2381, size: 192, offset: 960)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2377, size: 192, elements: !534)
!2382 = !{!2383, !2384}
!2383 = !DILocalVariable(name: "__path", arg: 1, scope: !2343, file: !2344, line: 453, type: !458)
!2384 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2343, file: !2344, line: 453, type: !2347)
!2385 = !DILocation(line: 0, scope: !2343)
!2386 = !DILocation(line: 455, column: 10, scope: !2343)
!2387 = !DILocation(line: 455, column: 3, scope: !2343)
!2388 = distinct !DISubprogram(name: "lstat", scope: !2344, file: !2344, line: 460, type: !2345, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2389)
!2389 = !{!2390, !2391}
!2390 = !DILocalVariable(name: "__path", arg: 1, scope: !2388, file: !2344, line: 460, type: !458)
!2391 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2388, file: !2344, line: 460, type: !2347)
!2392 = !DILocation(line: 0, scope: !2388)
!2393 = !DILocation(line: 462, column: 10, scope: !2388)
!2394 = !DILocation(line: 462, column: 3, scope: !2388)
!2395 = distinct !DISubprogram(name: "fstat", scope: !2344, file: !2344, line: 467, type: !2396, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2398)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!453, !453, !2347}
!2398 = !{!2399, !2400}
!2399 = !DILocalVariable(name: "__fd", arg: 1, scope: !2395, file: !2344, line: 467, type: !453)
!2400 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2395, file: !2344, line: 467, type: !2347)
!2401 = !DILocation(line: 0, scope: !2395)
!2402 = !DILocation(line: 469, column: 10, scope: !2395)
!2403 = !DILocation(line: 469, column: 3, scope: !2395)
!2404 = distinct !DISubprogram(name: "fstatat", scope: !2344, file: !2344, line: 474, type: !2405, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2407)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{!453, !453, !458, !2347, !453}
!2407 = !{!2408, !2409, !2410, !2411}
!2408 = !DILocalVariable(name: "__fd", arg: 1, scope: !2404, file: !2344, line: 474, type: !453)
!2409 = !DILocalVariable(name: "__filename", arg: 2, scope: !2404, file: !2344, line: 474, type: !458)
!2410 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2404, file: !2344, line: 474, type: !2347)
!2411 = !DILocalVariable(name: "__flag", arg: 4, scope: !2404, file: !2344, line: 474, type: !453)
!2412 = !DILocation(line: 0, scope: !2404)
!2413 = !DILocation(line: 477, column: 10, scope: !2404)
!2414 = !DILocation(line: 477, column: 3, scope: !2404)
!2415 = distinct !DISubprogram(name: "mknod", scope: !2344, file: !2344, line: 483, type: !2416, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2418)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!453, !458, !2358, !2352}
!2418 = !{!2419, !2420, !2421}
!2419 = !DILocalVariable(name: "__path", arg: 1, scope: !2415, file: !2344, line: 483, type: !458)
!2420 = !DILocalVariable(name: "__mode", arg: 2, scope: !2415, file: !2344, line: 483, type: !2358)
!2421 = !DILocalVariable(name: "__dev", arg: 3, scope: !2415, file: !2344, line: 483, type: !2352)
!2422 = !DILocation(line: 0, scope: !2415)
!2423 = !DILocation(line: 485, column: 10, scope: !2415)
!2424 = !DILocation(line: 485, column: 3, scope: !2415)
!2425 = distinct !DISubprogram(name: "mknodat", scope: !2344, file: !2344, line: 491, type: !2426, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2428)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!453, !453, !458, !2358, !2352}
!2428 = !{!2429, !2430, !2431, !2432}
!2429 = !DILocalVariable(name: "__fd", arg: 1, scope: !2425, file: !2344, line: 491, type: !453)
!2430 = !DILocalVariable(name: "__path", arg: 2, scope: !2425, file: !2344, line: 491, type: !458)
!2431 = !DILocalVariable(name: "__mode", arg: 3, scope: !2425, file: !2344, line: 491, type: !2358)
!2432 = !DILocalVariable(name: "__dev", arg: 4, scope: !2425, file: !2344, line: 491, type: !2352)
!2433 = !DILocation(line: 0, scope: !2425)
!2434 = !DILocation(line: 494, column: 10, scope: !2425)
!2435 = !DILocation(line: 494, column: 3, scope: !2425)
!2436 = distinct !DISubprogram(name: "stat64", scope: !2344, file: !2344, line: 502, type: !2437, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2459)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{!453, !458, !2439}
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2349, line: 119, size: 1152, elements: !2441)
!2441 = !{!2442, !2443, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2455, !2456, !2457, !2458}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2440, file: !2349, line: 121, baseType: !2352, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2440, file: !2349, line: 123, baseType: !2444, size: 64, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2102, line: 149, baseType: !514)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2440, file: !2349, line: 124, baseType: !2356, size: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2440, file: !2349, line: 125, baseType: !2358, size: 32, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2440, file: !2349, line: 132, baseType: !2360, size: 32, offset: 224)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2440, file: !2349, line: 133, baseType: !2362, size: 32, offset: 256)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2440, file: !2349, line: 135, baseType: !453, size: 32, offset: 288)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2440, file: !2349, line: 136, baseType: !2352, size: 64, offset: 320)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2440, file: !2349, line: 137, baseType: !2101, size: 64, offset: 384)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2440, file: !2349, line: 143, baseType: !2367, size: 64, offset: 448)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2440, file: !2349, line: 144, baseType: !2454, size: 64, offset: 512)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2102, line: 180, baseType: !516)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2440, file: !2349, line: 152, baseType: !2371, size: 128, offset: 576)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2440, file: !2349, line: 153, baseType: !2371, size: 128, offset: 704)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2440, file: !2349, line: 154, baseType: !2371, size: 128, offset: 832)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2440, file: !2349, line: 164, baseType: !2381, size: 192, offset: 960)
!2459 = !{!2460, !2461}
!2460 = !DILocalVariable(name: "__path", arg: 1, scope: !2436, file: !2344, line: 502, type: !458)
!2461 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2436, file: !2344, line: 502, type: !2439)
!2462 = !DILocation(line: 0, scope: !2436)
!2463 = !DILocation(line: 504, column: 10, scope: !2436)
!2464 = !DILocation(line: 504, column: 3, scope: !2436)
!2465 = distinct !DISubprogram(name: "lstat64", scope: !2344, file: !2344, line: 509, type: !2437, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2466)
!2466 = !{!2467, !2468}
!2467 = !DILocalVariable(name: "__path", arg: 1, scope: !2465, file: !2344, line: 509, type: !458)
!2468 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2465, file: !2344, line: 509, type: !2439)
!2469 = !DILocation(line: 0, scope: !2465)
!2470 = !DILocation(line: 511, column: 10, scope: !2465)
!2471 = !DILocation(line: 511, column: 3, scope: !2465)
!2472 = distinct !DISubprogram(name: "fstat64", scope: !2344, file: !2344, line: 516, type: !2473, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2475)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!453, !453, !2439}
!2475 = !{!2476, !2477}
!2476 = !DILocalVariable(name: "__fd", arg: 1, scope: !2472, file: !2344, line: 516, type: !453)
!2477 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2472, file: !2344, line: 516, type: !2439)
!2478 = !DILocation(line: 0, scope: !2472)
!2479 = !DILocation(line: 518, column: 10, scope: !2472)
!2480 = !DILocation(line: 518, column: 3, scope: !2472)
!2481 = distinct !DISubprogram(name: "fstatat64", scope: !2344, file: !2344, line: 523, type: !2482, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2484)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{!453, !453, !458, !2439, !453}
!2484 = !{!2485, !2486, !2487, !2488}
!2485 = !DILocalVariable(name: "__fd", arg: 1, scope: !2481, file: !2344, line: 523, type: !453)
!2486 = !DILocalVariable(name: "__filename", arg: 2, scope: !2481, file: !2344, line: 523, type: !458)
!2487 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2481, file: !2344, line: 523, type: !2439)
!2488 = !DILocalVariable(name: "__flag", arg: 4, scope: !2481, file: !2344, line: 523, type: !453)
!2489 = !DILocation(line: 0, scope: !2481)
!2490 = !DILocation(line: 526, column: 10, scope: !2481)
!2491 = !DILocation(line: 526, column: 3, scope: !2481)
!2492 = distinct !DISubprogram(name: "require_complete_type", scope: !3, file: !3, line: 185, type: !2493, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2495)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!460, !460}
!2495 = !{!2496, !2497}
!2496 = !DILocalVariable(name: "value", arg: 1, scope: !2492, file: !3, line: 185, type: !460)
!2497 = !DILocalVariable(name: "type", scope: !2492, file: !3, line: 187, type: !460)
!2498 = !DILocation(line: 0, scope: !2492)
!2499 = !DILocation(line: 187, column: 15, scope: !2492)
!2500 = !DILocation(line: 189, column: 16, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 189, column: 7)
!2502 = !DILocation(line: 189, column: 13, scope: !2501)
!2503 = !DILocation(line: 189, column: 40, scope: !2501)
!2504 = !DILocation(line: 189, column: 32, scope: !2501)
!2505 = !DILocation(line: 190, column: 5, scope: !2501)
!2506 = !DILocation(line: 193, column: 7, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 193, column: 7)
!2508 = !DILocation(line: 193, column: 7, scope: !2492)
!2509 = !DILocation(line: 196, column: 3, scope: !2492)
!2510 = !DILocation(line: 197, column: 10, scope: !2492)
!2511 = !DILocation(line: 197, column: 3, scope: !2492)
!2512 = !DILocation(line: 198, column: 1, scope: !2492)
!2513 = distinct !DISubprogram(name: "c_incomplete_type_error", scope: !3, file: !3, line: 205, type: !2514, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2516)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{null, !1960, !1960}
!2516 = !{!2517, !2518, !2519, !2520}
!2517 = !DILocalVariable(name: "value", arg: 1, scope: !2513, file: !3, line: 205, type: !1960)
!2518 = !DILocalVariable(name: "type", arg: 2, scope: !2513, file: !3, line: 205, type: !1960)
!2519 = !DILocalVariable(name: "type_code_string", scope: !2513, file: !3, line: 207, type: !458)
!2520 = !DILabel(scope: !2521, name: "retry", file: !3, line: 218)
!2521 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 217, column: 5)
!2522 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 213, column: 7)
!2523 = !DILocation(line: 0, scope: !2513)
!2524 = !DILocation(line: 210, column: 7, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 210, column: 7)
!2526 = !DILocation(line: 210, column: 24, scope: !2525)
!2527 = !DILocation(line: 210, column: 7, scope: !2513)
!2528 = !DILocation(line: 213, column: 13, scope: !2522)
!2529 = !DILocation(line: 213, column: 18, scope: !2522)
!2530 = !DILocation(line: 213, column: 22, scope: !2522)
!2531 = !DILocation(line: 213, column: 40, scope: !2522)
!2532 = !DILocation(line: 214, column: 8, scope: !2522)
!2533 = !DILocation(line: 214, column: 29, scope: !2522)
!2534 = !DILocation(line: 213, column: 7, scope: !2513)
!2535 = !DILocation(line: 215, column: 5, scope: !2522)
!2536 = !DILocation(line: 217, column: 5, scope: !2522)
!2537 = !DILocation(line: 221, column: 15, scope: !2521)
!2538 = !DILocation(line: 218, column: 5, scope: !2521)
!2539 = !DILocation(line: 221, column: 7, scope: !2521)
!2540 = !DILocation(line: 229, column: 4, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 222, column: 2)
!2542 = !DILocation(line: 233, column: 4, scope: !2541)
!2543 = !DILocation(line: 236, column: 4, scope: !2541)
!2544 = !DILocation(line: 237, column: 4, scope: !2541)
!2545 = !DILocation(line: 240, column: 8, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2541, file: !3, line: 240, column: 8)
!2547 = !DILocation(line: 240, column: 8, scope: !2541)
!2548 = !DILocation(line: 242, column: 12, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 242, column: 12)
!2550 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 241, column: 6)
!2551 = !DILocation(line: 242, column: 48, scope: !2549)
!2552 = !DILocation(line: 242, column: 12, scope: !2550)
!2553 = !DILocation(line: 244, column: 5, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2549, file: !3, line: 243, column: 3)
!2555 = !DILocation(line: 245, column: 5, scope: !2554)
!2556 = !DILocation(line: 247, column: 15, scope: !2550)
!2557 = !DILocation(line: 0, scope: !2521)
!2558 = !DILocation(line: 248, column: 8, scope: !2550)
!2559 = !DILocation(line: 250, column: 4, scope: !2541)
!2560 = !DILocation(line: 251, column: 4, scope: !2541)
!2561 = !DILocation(line: 254, column: 4, scope: !2541)
!2562 = !DILocation(line: 255, column: 2, scope: !2541)
!2563 = !DILocation(line: 257, column: 11, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 257, column: 11)
!2565 = !DILocation(line: 257, column: 40, scope: !2564)
!2566 = !DILocation(line: 257, column: 11, scope: !2521)
!2567 = !DILocation(line: 258, column: 2, scope: !2564)
!2568 = !DILocation(line: 262, column: 2, scope: !2564)
!2569 = !DILocation(line: 264, column: 1, scope: !2513)
!2570 = distinct !DISubprogram(name: "c_type_promotes_to", scope: !3, file: !3, line: 270, type: !2493, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2571)
!2571 = !{!2572}
!2572 = !DILocalVariable(name: "type", arg: 1, scope: !2570, file: !3, line: 270, type: !460)
!2573 = !DILocation(line: 0, scope: !2570)
!2574 = !DILocation(line: 272, column: 7, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 272, column: 7)
!2576 = !DILocation(line: 272, column: 35, scope: !2575)
!2577 = !DILocation(line: 272, column: 32, scope: !2575)
!2578 = !DILocation(line: 272, column: 7, scope: !2570)
!2579 = !DILocation(line: 273, column: 12, scope: !2575)
!2580 = !DILocation(line: 273, column: 5, scope: !2575)
!2581 = !DILocation(line: 275, column: 7, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 275, column: 7)
!2583 = !DILocation(line: 275, column: 7, scope: !2570)
!2584 = !DILocation(line: 278, column: 11, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 278, column: 11)
!2586 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 276, column: 5)
!2587 = !DILocation(line: 279, column: 4, scope: !2585)
!2588 = !DILocation(line: 281, column: 14, scope: !2586)
!2589 = !DILocation(line: 279, column: 8, scope: !2585)
!2590 = !DILocation(line: 279, column: 33, scope: !2585)
!2591 = !DILocation(line: 279, column: 30, scope: !2585)
!2592 = !DILocation(line: 278, column: 11, scope: !2586)
!2593 = !DILocation(line: 280, column: 9, scope: !2585)
!2594 = !DILocation(line: 280, column: 2, scope: !2585)
!2595 = !DILocation(line: 281, column: 7, scope: !2586)
!2596 = !DILocation(line: 285, column: 1, scope: !2570)
!2597 = distinct !DISubprogram(name: "c_vla_type_p", scope: !3, file: !3, line: 341, type: !2598, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2600)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!452, !1960}
!2600 = !{!2601}
!2601 = !DILocalVariable(name: "t", arg: 1, scope: !2597, file: !3, line: 341, type: !1960)
!2602 = !DILocation(line: 0, scope: !2597)
!2603 = !DILocation(line: 343, column: 7, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2597, file: !3, line: 343, column: 7)
!2605 = !DILocation(line: 343, column: 21, scope: !2604)
!2606 = !DILocation(line: 344, column: 7, scope: !2604)
!2607 = !DILocation(line: 344, column: 10, scope: !2604)
!2608 = !DILocation(line: 343, column: 7, scope: !2597)
!2609 = !DILocation(line: 346, column: 3, scope: !2597)
!2610 = !DILocation(line: 347, column: 1, scope: !2597)
!2611 = distinct !DISubprogram(name: "composite_type", scope: !3, file: !3, line: 356, type: !2612, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2614)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!460, !460, !460}
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2623, !2624, !2625, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2651, !2652, !2656, !2659, !2660, !2664}
!2615 = !DILocalVariable(name: "t1", arg: 1, scope: !2611, file: !3, line: 356, type: !460)
!2616 = !DILocalVariable(name: "t2", arg: 2, scope: !2611, file: !3, line: 356, type: !460)
!2617 = !DILocalVariable(name: "code1", scope: !2611, file: !3, line: 358, type: !134)
!2618 = !DILocalVariable(name: "code2", scope: !2611, file: !3, line: 359, type: !134)
!2619 = !DILocalVariable(name: "attributes", scope: !2611, file: !3, line: 360, type: !460)
!2620 = !DILocalVariable(name: "pointed_to_1", scope: !2621, file: !3, line: 395, type: !460)
!2621 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 394, column: 7)
!2622 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 391, column: 5)
!2623 = !DILocalVariable(name: "pointed_to_2", scope: !2621, file: !3, line: 396, type: !460)
!2624 = !DILocalVariable(name: "target", scope: !2621, file: !3, line: 397, type: !460)
!2625 = !DILocalVariable(name: "elt", scope: !2626, file: !3, line: 405, type: !460)
!2626 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 404, column: 7)
!2627 = !DILocalVariable(name: "quals", scope: !2626, file: !3, line: 406, type: !453)
!2628 = !DILocalVariable(name: "unqual_elt", scope: !2626, file: !3, line: 407, type: !460)
!2629 = !DILocalVariable(name: "d1", scope: !2626, file: !3, line: 408, type: !460)
!2630 = !DILocalVariable(name: "d2", scope: !2626, file: !3, line: 409, type: !460)
!2631 = !DILocalVariable(name: "d1_variable", scope: !2626, file: !3, line: 410, type: !452)
!2632 = !DILocalVariable(name: "d2_variable", scope: !2626, file: !3, line: 410, type: !452)
!2633 = !DILocalVariable(name: "d1_zero", scope: !2626, file: !3, line: 411, type: !452)
!2634 = !DILocalVariable(name: "d2_zero", scope: !2626, file: !3, line: 411, type: !452)
!2635 = !DILocalVariable(name: "t1_complete", scope: !2626, file: !3, line: 412, type: !452)
!2636 = !DILocalVariable(name: "t2_complete", scope: !2626, file: !3, line: 412, type: !452)
!2637 = !DILocalVariable(name: "valtype", scope: !2638, file: !3, line: 490, type: !460)
!2638 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 489, column: 7)
!2639 = !DILocalVariable(name: "p1", scope: !2638, file: !3, line: 491, type: !460)
!2640 = !DILocalVariable(name: "p2", scope: !2638, file: !3, line: 492, type: !460)
!2641 = !DILocalVariable(name: "len", scope: !2638, file: !3, line: 493, type: !453)
!2642 = !DILocalVariable(name: "newargs", scope: !2638, file: !3, line: 494, type: !460)
!2643 = !DILocalVariable(name: "n", scope: !2638, file: !3, line: 494, type: !460)
!2644 = !DILocalVariable(name: "i", scope: !2638, file: !3, line: 495, type: !453)
!2645 = !DILocalVariable(name: "memb", scope: !2646, file: !3, line: 553, type: !460)
!2646 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 552, column: 8)
!2647 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 550, column: 10)
!2648 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 533, column: 4)
!2649 = distinct !DILexicalBlock(scope: !2650, file: !3, line: 531, column: 2)
!2650 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 531, column: 2)
!2651 = !DILocalVariable(name: "mv2", scope: !2646, file: !3, line: 554, type: !460)
!2652 = !DILocalVariable(name: "mv3", scope: !2653, file: !3, line: 561, type: !460)
!2653 = distinct !DILexicalBlock(scope: !2654, file: !3, line: 560, column: 5)
!2654 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 558, column: 3)
!2655 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 558, column: 3)
!2656 = !DILocalVariable(name: "memb", scope: !2657, file: !3, line: 578, type: !460)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 577, column: 8)
!2658 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 575, column: 10)
!2659 = !DILocalVariable(name: "mv1", scope: !2657, file: !3, line: 579, type: !460)
!2660 = !DILocalVariable(name: "mv3", scope: !2661, file: !3, line: 586, type: !460)
!2661 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 585, column: 5)
!2662 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 583, column: 3)
!2663 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 583, column: 3)
!2664 = !DILabel(scope: !2648, name: "parm_done", file: !3, line: 601)
!2665 = !DILocation(line: 0, scope: !2611)
!2666 = !DILocation(line: 364, column: 10, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 364, column: 7)
!2668 = !DILocation(line: 364, column: 7, scope: !2611)
!2669 = !DILocation(line: 367, column: 13, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 367, column: 7)
!2671 = !DILocation(line: 367, column: 10, scope: !2670)
!2672 = !DILocation(line: 367, column: 7, scope: !2611)
!2673 = !DILocation(line: 369, column: 10, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 369, column: 7)
!2675 = !DILocation(line: 369, column: 7, scope: !2611)
!2676 = !DILocation(line: 372, column: 11, scope: !2611)
!2677 = !DILocation(line: 373, column: 11, scope: !2611)
!2678 = !DILocation(line: 376, column: 24, scope: !2611)
!2679 = !DILocation(line: 376, column: 16, scope: !2611)
!2680 = !DILocation(line: 383, column: 13, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 383, column: 7)
!2682 = !DILocation(line: 383, column: 39, scope: !2681)
!2683 = !DILocation(line: 383, column: 30, scope: !2681)
!2684 = !DILocation(line: 385, column: 13, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 385, column: 7)
!2686 = !DILocation(line: 385, column: 39, scope: !2685)
!2687 = !DILocation(line: 385, column: 30, scope: !2685)
!2688 = !DILocation(line: 388, column: 3, scope: !2611)
!2689 = !DILocation(line: 390, column: 3, scope: !2611)
!2690 = !DILocation(line: 395, column: 22, scope: !2621)
!2691 = !DILocation(line: 0, scope: !2621)
!2692 = !DILocation(line: 396, column: 22, scope: !2621)
!2693 = !DILocation(line: 397, column: 16, scope: !2621)
!2694 = !DILocation(line: 398, column: 7, scope: !2621)
!2695 = !DILocation(line: 399, column: 7, scope: !2621)
!2696 = !DILocation(line: 400, column: 9, scope: !2621)
!2697 = !DILocation(line: 614, column: 1, scope: !2611)
!2698 = !DILocation(line: 405, column: 29, scope: !2626)
!2699 = !DILocation(line: 405, column: 45, scope: !2626)
!2700 = !DILocation(line: 405, column: 13, scope: !2626)
!2701 = !DILocation(line: 0, scope: !2626)
!2702 = !DILocation(line: 408, column: 12, scope: !2626)
!2703 = !DILocation(line: 409, column: 12, scope: !2626)
!2704 = !DILocation(line: 415, column: 2, scope: !2626)
!2705 = !DILocation(line: 418, column: 16, scope: !2626)
!2706 = !DILocation(line: 419, column: 16, scope: !2626)
!2707 = !DILocation(line: 421, column: 15, scope: !2626)
!2708 = !DILocation(line: 421, column: 20, scope: !2626)
!2709 = !DILocation(line: 421, column: 24, scope: !2626)
!2710 = !DILocation(line: 421, column: 23, scope: !2626)
!2711 = !DILocation(line: 422, column: 15, scope: !2626)
!2712 = !DILocation(line: 422, column: 20, scope: !2626)
!2713 = !DILocation(line: 422, column: 24, scope: !2626)
!2714 = !DILocation(line: 422, column: 23, scope: !2626)
!2715 = !DILocation(line: 425, column: 10, scope: !2626)
!2716 = !DILocation(line: 425, column: 14, scope: !2626)
!2717 = !DILocation(line: 425, column: 46, scope: !2626)
!2718 = !DILocation(line: 426, column: 7, scope: !2626)
!2719 = !DILocation(line: 426, column: 10, scope: !2626)
!2720 = !DILocation(line: 426, column: 42, scope: !2626)
!2721 = !DILocation(line: 428, column: 10, scope: !2626)
!2722 = !DILocation(line: 428, column: 14, scope: !2626)
!2723 = !DILocation(line: 428, column: 46, scope: !2626)
!2724 = !DILocation(line: 429, column: 7, scope: !2626)
!2725 = !DILocation(line: 429, column: 10, scope: !2626)
!2726 = !DILocation(line: 429, column: 42, scope: !2626)
!2727 = !DILocation(line: 430, column: 16, scope: !2626)
!2728 = !DILocation(line: 430, column: 28, scope: !2626)
!2729 = !DILocation(line: 430, column: 40, scope: !2626)
!2730 = !DILocation(line: 430, column: 43, scope: !2626)
!2731 = !DILocation(line: 431, column: 16, scope: !2626)
!2732 = !DILocation(line: 431, column: 28, scope: !2626)
!2733 = !DILocation(line: 431, column: 40, scope: !2626)
!2734 = !DILocation(line: 431, column: 43, scope: !2626)
!2735 = !DILocation(line: 434, column: 13, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 434, column: 6)
!2737 = !DILocation(line: 434, column: 10, scope: !2736)
!2738 = !DILocation(line: 434, column: 28, scope: !2736)
!2739 = !DILocation(line: 434, column: 31, scope: !2736)
!2740 = !DILocation(line: 435, column: 6, scope: !2736)
!2741 = !DILocation(line: 435, column: 10, scope: !2736)
!2742 = !DILocation(line: 435, column: 22, scope: !2736)
!2743 = !DILocation(line: 435, column: 37, scope: !2736)
!2744 = !DILocation(line: 436, column: 11, scope: !2736)
!2745 = !DILocation(line: 436, column: 4, scope: !2736)
!2746 = !DILocation(line: 437, column: 13, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 437, column: 6)
!2748 = !DILocation(line: 437, column: 10, scope: !2747)
!2749 = !DILocation(line: 437, column: 28, scope: !2747)
!2750 = !DILocation(line: 437, column: 31, scope: !2747)
!2751 = !DILocation(line: 438, column: 6, scope: !2747)
!2752 = !DILocation(line: 438, column: 10, scope: !2747)
!2753 = !DILocation(line: 438, column: 22, scope: !2747)
!2754 = !DILocation(line: 438, column: 37, scope: !2747)
!2755 = !DILocation(line: 439, column: 11, scope: !2747)
!2756 = !DILocation(line: 439, column: 4, scope: !2747)
!2757 = !DILocation(line: 441, column: 28, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 441, column: 6)
!2759 = !DILocation(line: 441, column: 32, scope: !2758)
!2760 = !DILocation(line: 441, column: 49, scope: !2758)
!2761 = !DILocation(line: 441, column: 53, scope: !2758)
!2762 = !DILocation(line: 441, column: 6, scope: !2626)
!2763 = !DILocation(line: 442, column: 11, scope: !2758)
!2764 = !DILocation(line: 442, column: 4, scope: !2758)
!2765 = !DILocation(line: 443, column: 28, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 443, column: 6)
!2767 = !DILocation(line: 443, column: 32, scope: !2766)
!2768 = !DILocation(line: 443, column: 49, scope: !2766)
!2769 = !DILocation(line: 443, column: 53, scope: !2766)
!2770 = !DILocation(line: 443, column: 6, scope: !2626)
!2771 = !DILocation(line: 444, column: 11, scope: !2766)
!2772 = !DILocation(line: 444, column: 4, scope: !2766)
!2773 = !DILocation(line: 451, column: 10, scope: !2626)
!2774 = !DILocation(line: 452, column: 15, scope: !2626)
!2775 = !DILocation(line: 454, column: 11, scope: !2626)
!2776 = !DILocation(line: 453, column: 7, scope: !2626)
!2777 = !DILocation(line: 462, column: 14, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 462, column: 6)
!2779 = !DILocation(line: 463, column: 22, scope: !2778)
!2780 = !DILocation(line: 464, column: 10, scope: !2778)
!2781 = !DILocation(line: 462, column: 6, scope: !2626)
!2782 = !DILocation(line: 466, column: 23, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 465, column: 4)
!2784 = !DILocation(line: 466, column: 21, scope: !2783)
!2785 = !DILocation(line: 467, column: 28, scope: !2783)
!2786 = !DILocation(line: 467, column: 6, scope: !2783)
!2787 = !DILocation(line: 467, column: 26, scope: !2783)
!2788 = !DILocation(line: 468, column: 4, scope: !2783)
!2789 = !DILocation(line: 469, column: 7, scope: !2626)
!2790 = !DILocation(line: 470, column: 9, scope: !2626)
!2791 = !DILocation(line: 470, column: 2, scope: !2626)
!2792 = !DILocation(line: 476, column: 22, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 476, column: 11)
!2794 = !DILocation(line: 476, column: 11, scope: !2622)
!2795 = !DILocation(line: 479, column: 30, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 479, column: 8)
!2797 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 477, column: 2)
!2798 = !DILocation(line: 479, column: 8, scope: !2796)
!2799 = !DILocation(line: 479, column: 8, scope: !2797)
!2800 = !DILocation(line: 481, column: 30, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 481, column: 8)
!2802 = !DILocation(line: 481, column: 8, scope: !2801)
!2803 = !DILocation(line: 481, column: 8, scope: !2797)
!2804 = !DILocation(line: 484, column: 14, scope: !2622)
!2805 = !DILocation(line: 484, column: 7, scope: !2622)
!2806 = !DILocation(line: 490, column: 33, scope: !2638)
!2807 = !DILocation(line: 490, column: 49, scope: !2638)
!2808 = !DILocation(line: 490, column: 17, scope: !2638)
!2809 = !DILocation(line: 0, scope: !2638)
!2810 = !DILocation(line: 491, column: 12, scope: !2638)
!2811 = !DILocation(line: 492, column: 12, scope: !2638)
!2812 = !DILocation(line: 498, column: 17, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 498, column: 6)
!2814 = !DILocation(line: 498, column: 14, scope: !2813)
!2815 = !DILocation(line: 498, column: 32, scope: !2813)
!2816 = !DILocation(line: 498, column: 36, scope: !2813)
!2817 = !DILocation(line: 498, column: 6, scope: !2638)
!2818 = !DILocation(line: 499, column: 11, scope: !2813)
!2819 = !DILocation(line: 499, column: 4, scope: !2813)
!2820 = !DILocation(line: 500, column: 17, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 500, column: 6)
!2822 = !DILocation(line: 500, column: 14, scope: !2821)
!2823 = !DILocation(line: 500, column: 32, scope: !2821)
!2824 = !DILocation(line: 500, column: 36, scope: !2821)
!2825 = !DILocation(line: 500, column: 6, scope: !2638)
!2826 = !DILocation(line: 501, column: 11, scope: !2821)
!2827 = !DILocation(line: 501, column: 4, scope: !2821)
!2828 = !DILocation(line: 504, column: 26, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 504, column: 6)
!2830 = !DILocation(line: 504, column: 6, scope: !2638)
!2831 = !DILocation(line: 506, column: 11, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 505, column: 3)
!2833 = !DILocation(line: 507, column: 11, scope: !2832)
!2834 = !DILocation(line: 508, column: 13, scope: !2832)
!2835 = !DILocation(line: 508, column: 6, scope: !2832)
!2836 = !DILocation(line: 510, column: 26, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 510, column: 6)
!2838 = !DILocation(line: 510, column: 6, scope: !2638)
!2839 = !DILocation(line: 512, column: 10, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 511, column: 3)
!2841 = !DILocation(line: 513, column: 10, scope: !2840)
!2842 = !DILocation(line: 514, column: 12, scope: !2840)
!2843 = !DILocation(line: 514, column: 5, scope: !2840)
!2844 = !DILocation(line: 521, column: 38, scope: !2638)
!2845 = !DILocation(line: 523, column: 8, scope: !2638)
!2846 = !DILocation(line: 526, column: 7, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 526, column: 2)
!2848 = !DILocation(line: 0, scope: !2847)
!2849 = !DILocation(line: 526, column: 16, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 526, column: 2)
!2851 = !DILocation(line: 526, column: 2, scope: !2847)
!2852 = !DILocation(line: 531, column: 2, scope: !2650)
!2853 = !DILocation(line: 527, column: 14, scope: !2850)
!2854 = !DILocation(line: 526, column: 24, scope: !2850)
!2855 = !DILocation(line: 526, column: 2, scope: !2850)
!2856 = distinct !{!2856, !2851, !2857}
!2857 = !DILocation(line: 527, column: 14, scope: !2847)
!2858 = !DILocation(line: 536, column: 10, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 536, column: 10)
!2860 = !DILocation(line: 536, column: 26, scope: !2859)
!2861 = !DILocation(line: 0, scope: !2648)
!2862 = !DILocation(line: 536, column: 10, scope: !2648)
!2863 = !DILocation(line: 538, column: 3, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 537, column: 8)
!2865 = !DILocation(line: 538, column: 18, scope: !2864)
!2866 = !DILocation(line: 539, column: 3, scope: !2864)
!2867 = !DILocation(line: 541, column: 26, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 541, column: 10)
!2869 = !DILocation(line: 541, column: 10, scope: !2648)
!2870 = !DILocation(line: 543, column: 3, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 542, column: 8)
!2872 = !DILocation(line: 543, column: 18, scope: !2871)
!2873 = !DILocation(line: 544, column: 3, scope: !2871)
!2874 = !DILocation(line: 550, column: 10, scope: !2647)
!2875 = !DILocation(line: 550, column: 38, scope: !2647)
!2876 = !DILocation(line: 551, column: 3, scope: !2647)
!2877 = !DILocation(line: 551, column: 22, scope: !2647)
!2878 = !DILocation(line: 550, column: 10, scope: !2648)
!2879 = !DILocation(line: 0, scope: !2646)
!2880 = !DILocation(line: 555, column: 21, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2646, file: !3, line: 555, column: 7)
!2882 = !DILocation(line: 555, column: 18, scope: !2881)
!2883 = !DILocation(line: 555, column: 11, scope: !2881)
!2884 = !DILocation(line: 556, column: 10, scope: !2881)
!2885 = !DILocation(line: 556, column: 26, scope: !2881)
!2886 = !DILocation(line: 555, column: 7, scope: !2646)
!2887 = !DILocation(line: 557, column: 11, scope: !2881)
!2888 = !DILocation(line: 557, column: 5, scope: !2881)
!2889 = !DILocation(line: 558, column: 15, scope: !2655)
!2890 = !DILocation(line: 0, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 566, column: 9)
!2892 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 565, column: 11)
!2893 = !DILocation(line: 558, column: 8, scope: !2655)
!2894 = !DILocation(line: 0, scope: !2655)
!2895 = !DILocation(line: 558, column: 3, scope: !2655)
!2896 = !DILocation(line: 561, column: 18, scope: !2653)
!2897 = !DILocation(line: 0, scope: !2653)
!2898 = !DILocation(line: 562, column: 11, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 562, column: 11)
!2900 = !DILocation(line: 562, column: 25, scope: !2899)
!2901 = !DILocation(line: 562, column: 22, scope: !2899)
!2902 = !DILocation(line: 562, column: 15, scope: !2899)
!2903 = !DILocation(line: 563, column: 7, scope: !2899)
!2904 = !DILocation(line: 563, column: 23, scope: !2899)
!2905 = !DILocation(line: 562, column: 11, scope: !2653)
!2906 = !DILocation(line: 564, column: 15, scope: !2899)
!2907 = !DILocation(line: 564, column: 9, scope: !2899)
!2908 = !DILocation(line: 565, column: 11, scope: !2892)
!2909 = !DILocation(line: 565, column: 11, scope: !2653)
!2910 = !DILocation(line: 567, column: 37, scope: !2891)
!2911 = !DILocation(line: 568, column: 9, scope: !2891)
!2912 = !DILocation(line: 567, column: 21, scope: !2891)
!2913 = !DILocation(line: 567, column: 19, scope: !2891)
!2914 = !DILocation(line: 569, column: 13, scope: !2891)
!2915 = !DILocation(line: 569, column: 4, scope: !2891)
!2916 = !DILocation(line: 571, column: 4, scope: !2891)
!2917 = !DILocation(line: 559, column: 21, scope: !2654)
!2918 = !DILocation(line: 558, column: 3, scope: !2654)
!2919 = distinct !{!2919, !2895, !2920}
!2920 = !DILocation(line: 573, column: 5, scope: !2655)
!2921 = !DILocation(line: 0, scope: !2658)
!2922 = !DILocation(line: 575, column: 10, scope: !2658)
!2923 = !DILocation(line: 575, column: 38, scope: !2658)
!2924 = !DILocation(line: 576, column: 3, scope: !2658)
!2925 = !DILocation(line: 576, column: 25, scope: !2658)
!2926 = !DILocation(line: 576, column: 22, scope: !2658)
!2927 = !DILocation(line: 575, column: 10, scope: !2648)
!2928 = !DILocation(line: 0, scope: !2657)
!2929 = !DILocation(line: 580, column: 7, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 580, column: 7)
!2931 = !DILocation(line: 580, column: 21, scope: !2930)
!2932 = !DILocation(line: 580, column: 18, scope: !2930)
!2933 = !DILocation(line: 580, column: 11, scope: !2930)
!2934 = !DILocation(line: 581, column: 10, scope: !2930)
!2935 = !DILocation(line: 581, column: 26, scope: !2930)
!2936 = !DILocation(line: 580, column: 7, scope: !2657)
!2937 = !DILocation(line: 582, column: 11, scope: !2930)
!2938 = !DILocation(line: 582, column: 5, scope: !2930)
!2939 = !DILocation(line: 583, column: 15, scope: !2663)
!2940 = !DILocation(line: 0, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 591, column: 9)
!2942 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 590, column: 11)
!2943 = !DILocation(line: 583, column: 8, scope: !2663)
!2944 = !DILocation(line: 0, scope: !2663)
!2945 = !DILocation(line: 583, column: 3, scope: !2663)
!2946 = !DILocation(line: 586, column: 18, scope: !2661)
!2947 = !DILocation(line: 0, scope: !2661)
!2948 = !DILocation(line: 587, column: 11, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 587, column: 11)
!2950 = !DILocation(line: 587, column: 25, scope: !2949)
!2951 = !DILocation(line: 587, column: 22, scope: !2949)
!2952 = !DILocation(line: 587, column: 15, scope: !2949)
!2953 = !DILocation(line: 588, column: 7, scope: !2949)
!2954 = !DILocation(line: 588, column: 23, scope: !2949)
!2955 = !DILocation(line: 587, column: 11, scope: !2661)
!2956 = !DILocation(line: 589, column: 15, scope: !2949)
!2957 = !DILocation(line: 589, column: 9, scope: !2949)
!2958 = !DILocation(line: 590, column: 11, scope: !2942)
!2959 = !DILocation(line: 590, column: 11, scope: !2661)
!2960 = !DILocation(line: 592, column: 37, scope: !2941)
!2961 = !DILocation(line: 593, column: 9, scope: !2941)
!2962 = !DILocation(line: 592, column: 21, scope: !2941)
!2963 = !DILocation(line: 592, column: 19, scope: !2941)
!2964 = !DILocation(line: 594, column: 13, scope: !2941)
!2965 = !DILocation(line: 594, column: 4, scope: !2941)
!2966 = !DILocation(line: 596, column: 4, scope: !2941)
!2967 = !DILocation(line: 584, column: 21, scope: !2662)
!2968 = !DILocation(line: 583, column: 3, scope: !2662)
!2969 = distinct !{!2969, !2945, !2970}
!2970 = !DILocation(line: 598, column: 5, scope: !2663)
!2971 = !DILocation(line: 600, column: 56, scope: !2648)
!2972 = !DILocation(line: 600, column: 39, scope: !2648)
!2973 = !DILocation(line: 600, column: 23, scope: !2648)
!2974 = !DILocation(line: 600, column: 6, scope: !2648)
!2975 = !DILocation(line: 600, column: 21, scope: !2648)
!2976 = !DILocation(line: 601, column: 4, scope: !2648)
!2977 = !DILocation(line: 532, column: 12, scope: !2649)
!2978 = !DILocation(line: 532, column: 34, scope: !2649)
!2979 = !DILocation(line: 532, column: 55, scope: !2649)
!2980 = !DILocation(line: 531, column: 2, scope: !2649)
!2981 = distinct !{!2981, !2852, !2982}
!2982 = !DILocation(line: 602, column: 4, scope: !2650)
!2983 = !DILocation(line: 604, column: 38, scope: !2638)
!2984 = !DILocation(line: 605, column: 7, scope: !2638)
!2985 = !DILocation(line: 606, column: 7, scope: !2638)
!2986 = !DILocation(line: 608, column: 7, scope: !2622)
!2987 = !DILocation(line: 611, column: 14, scope: !2622)
!2988 = !DILocation(line: 611, column: 7, scope: !2622)
!2989 = distinct !DISubprogram(name: "qualify_type", scope: !3, file: !3, line: 317, type: !2612, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2990)
!2990 = !{!2991, !2992, !2993, !2995, !2996}
!2991 = !DILocalVariable(name: "type", arg: 1, scope: !2989, file: !3, line: 317, type: !460)
!2992 = !DILocalVariable(name: "like", arg: 2, scope: !2989, file: !3, line: 317, type: !460)
!2993 = !DILocalVariable(name: "as_type", scope: !2989, file: !3, line: 319, type: !2994)
!2994 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !461, line: 73, baseType: !452)
!2995 = !DILocalVariable(name: "as_like", scope: !2989, file: !3, line: 320, type: !2994)
!2996 = !DILocalVariable(name: "as_common", scope: !2989, file: !3, line: 321, type: !2994)
!2997 = !DILocation(line: 0, scope: !2989)
!2998 = !DILocation(line: 319, column: 26, scope: !2989)
!2999 = !DILocation(line: 320, column: 26, scope: !2989)
!3000 = !DILocation(line: 321, column: 3, scope: !2989)
!3001 = !DILocation(line: 325, column: 8, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 325, column: 7)
!3003 = !DILocation(line: 325, column: 7, scope: !2989)
!3004 = !DILocation(line: 327, column: 17, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 326, column: 5)
!3006 = !DILocation(line: 328, column: 7, scope: !3005)
!3007 = !DILocation(line: 330, column: 5, scope: !3005)
!3008 = !DILocation(line: 333, column: 6, scope: !2989)
!3009 = !DILocation(line: 334, column: 8, scope: !2989)
!3010 = !DILocation(line: 334, column: 6, scope: !2989)
!3011 = !DILocation(line: 335, column: 8, scope: !2989)
!3012 = !DILocation(line: 335, column: 6, scope: !2989)
!3013 = !DILocation(line: 332, column: 10, scope: !2989)
!3014 = !DILocation(line: 336, column: 1, scope: !2989)
!3015 = !DILocation(line: 332, column: 3, scope: !2989)
!3016 = distinct !DISubprogram(name: "c_build_qualified_type", scope: !3, file: !3, line: 10245, type: !3017, scopeLine: 10246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3019)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!460, !460, !453}
!3019 = !{!3020, !3021, !3022, !3025, !3026, !3029}
!3020 = !DILocalVariable(name: "type", arg: 1, scope: !3016, file: !3, line: 10245, type: !460)
!3021 = !DILocalVariable(name: "type_quals", arg: 2, scope: !3016, file: !3, line: 10245, type: !453)
!3022 = !DILocalVariable(name: "t", scope: !3023, file: !3, line: 10252, type: !460)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 10251, column: 5)
!3024 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 10250, column: 7)
!3025 = !DILocalVariable(name: "element_type", scope: !3023, file: !3, line: 10253, type: !460)
!3026 = !DILocalVariable(name: "domain", scope: !3027, file: !3, line: 10268, type: !460)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 10267, column: 2)
!3028 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 10266, column: 11)
!3029 = !DILocalVariable(name: "unqualified_canon", scope: !3030, file: !3, line: 10279, type: !460)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 10278, column: 13)
!3031 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 10276, column: 20)
!3032 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 10273, column: 15)
!3033 = !DILocation(line: 0, scope: !3016)
!3034 = !DILocation(line: 10247, column: 15, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 10247, column: 7)
!3036 = !DILocation(line: 10247, column: 12, scope: !3035)
!3037 = !DILocation(line: 10247, column: 7, scope: !3016)
!3038 = !DILocation(line: 10250, column: 7, scope: !3024)
!3039 = !DILocation(line: 10250, column: 24, scope: !3024)
!3040 = !DILocation(line: 10250, column: 7, scope: !3016)
!3041 = !DILocation(line: 10253, column: 51, scope: !3023)
!3042 = !DILocation(line: 10253, column: 27, scope: !3023)
!3043 = !DILocation(line: 0, scope: !3023)
!3044 = !DILocation(line: 10257, column: 16, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 10257, column: 7)
!3046 = !DILocation(line: 0, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 10259, column: 8)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 10258, column: 2)
!3049 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 10257, column: 7)
!3050 = !DILocation(line: 10257, column: 12, scope: !3045)
!3051 = !DILocation(line: 0, scope: !3045)
!3052 = !DILocation(line: 10257, column: 7, scope: !3045)
!3053 = !DILocation(line: 10259, column: 8, scope: !3047)
!3054 = !DILocation(line: 10259, column: 43, scope: !3047)
!3055 = !DILocation(line: 10260, column: 8, scope: !3047)
!3056 = !DILocation(line: 10260, column: 11, scope: !3047)
!3057 = !DILocation(line: 10260, column: 28, scope: !3047)
!3058 = !DILocation(line: 10260, column: 25, scope: !3047)
!3059 = !DILocation(line: 10261, column: 8, scope: !3047)
!3060 = !DILocation(line: 10261, column: 11, scope: !3047)
!3061 = !DILocation(line: 10261, column: 31, scope: !3047)
!3062 = !DILocation(line: 10261, column: 28, scope: !3047)
!3063 = !DILocation(line: 10262, column: 8, scope: !3047)
!3064 = !DILocation(line: 10262, column: 33, scope: !3047)
!3065 = !DILocation(line: 10263, column: 12, scope: !3047)
!3066 = !DILocation(line: 10262, column: 11, scope: !3047)
!3067 = !DILocation(line: 10259, column: 8, scope: !3048)
!3068 = !DILocation(line: 10257, column: 49, scope: !3049)
!3069 = !DILocation(line: 10257, column: 7, scope: !3049)
!3070 = distinct !{!3070, !3052, !3071}
!3071 = !DILocation(line: 10265, column: 2, scope: !3045)
!3072 = !DILocation(line: 10266, column: 11, scope: !3023)
!3073 = !DILocation(line: 10268, column: 25, scope: !3027)
!3074 = !DILocation(line: 0, scope: !3027)
!3075 = !DILocation(line: 10270, column: 8, scope: !3027)
!3076 = !DILocation(line: 10271, column: 4, scope: !3027)
!3077 = !DILocation(line: 10271, column: 18, scope: !3027)
!3078 = !DILocation(line: 10273, column: 15, scope: !3032)
!3079 = !DILocation(line: 10274, column: 15, scope: !3032)
!3080 = !DILocation(line: 10274, column: 19, scope: !3032)
!3081 = !DILocation(line: 10274, column: 26, scope: !3032)
!3082 = !DILocation(line: 10274, column: 29, scope: !3032)
!3083 = !DILocation(line: 10273, column: 15, scope: !3027)
!3084 = !DILocation(line: 10275, column: 13, scope: !3032)
!3085 = !DILocation(line: 10276, column: 50, scope: !3031)
!3086 = !DILocation(line: 10277, column: 20, scope: !3031)
!3087 = !DILocation(line: 10277, column: 31, scope: !3031)
!3088 = !DILocation(line: 10277, column: 34, scope: !3031)
!3089 = !DILocation(line: 10277, column: 58, scope: !3031)
!3090 = !DILocation(line: 10276, column: 20, scope: !3032)
!3091 = !DILocation(line: 10281, column: 37, scope: !3030)
!3092 = !DILocation(line: 10281, column: 45, scope: !3030)
!3093 = !DILocation(line: 10280, column: 19, scope: !3030)
!3094 = !DILocation(line: 0, scope: !3030)
!3095 = !DILocation(line: 10284, column: 19, scope: !3030)
!3096 = !DILocation(line: 10283, column: 15, scope: !3030)
!3097 = !DILocation(line: 10284, column: 17, scope: !3030)
!3098 = !DILocation(line: 10304, column: 1, scope: !3016)
!3099 = !DILocation(line: 10287, column: 13, scope: !3031)
!3100 = !DILocation(line: 10287, column: 32, scope: !3031)
!3101 = !DILocation(line: 10295, column: 19, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 10295, column: 7)
!3103 = !DILocation(line: 10296, column: 7, scope: !3102)
!3104 = !DILocation(line: 10296, column: 12, scope: !3102)
!3105 = !DILocation(line: 10297, column: 4, scope: !3102)
!3106 = !DILocation(line: 10297, column: 8, scope: !3102)
!3107 = !DILocation(line: 10295, column: 7, scope: !3016)
!3108 = !DILocation(line: 10299, column: 7, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 10298, column: 5)
!3110 = !DILocation(line: 10300, column: 18, scope: !3109)
!3111 = !DILocation(line: 10301, column: 5, scope: !3109)
!3112 = !DILocation(line: 10303, column: 10, scope: !3016)
!3113 = !DILocation(line: 10303, column: 3, scope: !3016)
!3114 = distinct !DISubprogram(name: "comptypes", scope: !3, file: !3, line: 973, type: !3115, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3117)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!453, !460, !460}
!3117 = !{!3118, !3119, !3120, !3121}
!3118 = !DILocalVariable(name: "type1", arg: 1, scope: !3114, file: !3, line: 973, type: !460)
!3119 = !DILocalVariable(name: "type2", arg: 2, scope: !3114, file: !3, line: 973, type: !460)
!3120 = !DILocalVariable(name: "tagged_tu_seen_base1", scope: !3114, file: !3, line: 975, type: !1957)
!3121 = !DILocalVariable(name: "val", scope: !3114, file: !3, line: 976, type: !453)
!3122 = !DILocation(line: 0, scope: !3114)
!3123 = !DILocation(line: 975, column: 62, scope: !3114)
!3124 = !DILocation(line: 978, column: 9, scope: !3114)
!3125 = !DILocation(line: 979, column: 3, scope: !3114)
!3126 = !DILocation(line: 981, column: 3, scope: !3114)
!3127 = distinct !DISubprogram(name: "common_type", scope: !3, file: !3, line: 947, type: !2612, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3128)
!3128 = !{!3129, !3130}
!3129 = !DILocalVariable(name: "t1", arg: 1, scope: !3127, file: !3, line: 947, type: !460)
!3130 = !DILocalVariable(name: "t2", arg: 2, scope: !3127, file: !3, line: 947, type: !460)
!3131 = !DILocation(line: 0, scope: !3127)
!3132 = !DILocation(line: 949, column: 7, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 949, column: 7)
!3134 = !DILocation(line: 949, column: 22, scope: !3133)
!3135 = !DILocation(line: 949, column: 7, scope: !3127)
!3136 = !DILocation(line: 950, column: 34, scope: !3133)
!3137 = !DILocation(line: 950, column: 10, scope: !3133)
!3138 = !DILocation(line: 950, column: 5, scope: !3133)
!3139 = !DILocation(line: 951, column: 7, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 951, column: 7)
!3141 = !DILocation(line: 951, column: 22, scope: !3140)
!3142 = !DILocation(line: 951, column: 7, scope: !3127)
!3143 = !DILocation(line: 952, column: 34, scope: !3140)
!3144 = !DILocation(line: 952, column: 10, scope: !3140)
!3145 = !DILocation(line: 952, column: 5, scope: !3140)
!3146 = !DILocation(line: 955, column: 7, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 955, column: 7)
!3148 = !DILocation(line: 955, column: 22, scope: !3147)
!3149 = !DILocation(line: 956, column: 7, scope: !3147)
!3150 = !DILocation(line: 956, column: 10, scope: !3147)
!3151 = !DILocation(line: 956, column: 25, scope: !3147)
!3152 = !DILocation(line: 955, column: 7, scope: !3127)
!3153 = !DILocation(line: 957, column: 12, scope: !3147)
!3154 = !DILocation(line: 957, column: 5, scope: !3147)
!3155 = !DILocation(line: 960, column: 7, scope: !3127)
!3156 = !DILocation(line: 962, column: 7, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 962, column: 7)
!3158 = !DILocation(line: 962, column: 22, scope: !3157)
!3159 = !DILocation(line: 962, column: 7, scope: !3127)
!3160 = !DILocation(line: 965, column: 10, scope: !3127)
!3161 = !DILocation(line: 965, column: 3, scope: !3127)
!3162 = !DILocation(line: 966, column: 1, scope: !3127)
!3163 = distinct !DISubprogram(name: "c_common_type", scope: !3, file: !3, line: 694, type: !2612, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3164)
!3164 = !{!3165, !3166, !3167, !3168, !3169, !3172, !3173, !3174, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3191}
!3165 = !DILocalVariable(name: "t1", arg: 1, scope: !3163, file: !3, line: 694, type: !460)
!3166 = !DILocalVariable(name: "t2", arg: 2, scope: !3163, file: !3, line: 694, type: !460)
!3167 = !DILocalVariable(name: "code1", scope: !3163, file: !3, line: 696, type: !134)
!3168 = !DILocalVariable(name: "code2", scope: !3163, file: !3, line: 697, type: !134)
!3169 = !DILocalVariable(name: "subtype1", scope: !3170, file: !3, line: 768, type: !460)
!3170 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 767, column: 5)
!3171 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 766, column: 7)
!3172 = !DILocalVariable(name: "subtype2", scope: !3170, file: !3, line: 769, type: !460)
!3173 = !DILocalVariable(name: "subtype", scope: !3170, file: !3, line: 770, type: !460)
!3174 = !DILocalVariable(name: "unsignedp", scope: !3175, file: !3, line: 807, type: !7)
!3175 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 806, column: 5)
!3176 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 805, column: 7)
!3177 = !DILocalVariable(name: "satp", scope: !3175, file: !3, line: 807, type: !7)
!3178 = !DILocalVariable(name: "m1", scope: !3175, file: !3, line: 808, type: !5)
!3179 = !DILocalVariable(name: "m2", scope: !3175, file: !3, line: 808, type: !5)
!3180 = !DILocalVariable(name: "fbit1", scope: !3175, file: !3, line: 809, type: !7)
!3181 = !DILocalVariable(name: "ibit1", scope: !3175, file: !3, line: 809, type: !7)
!3182 = !DILocalVariable(name: "fbit2", scope: !3175, file: !3, line: 809, type: !7)
!3183 = !DILocalVariable(name: "ibit2", scope: !3175, file: !3, line: 809, type: !7)
!3184 = !DILocalVariable(name: "max_fbit", scope: !3175, file: !3, line: 809, type: !7)
!3185 = !DILocalVariable(name: "max_ibit", scope: !3175, file: !3, line: 809, type: !7)
!3186 = !DILocalVariable(name: "mclass", scope: !3187, file: !3, line: 837, type: !415)
!3187 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 836, column: 6)
!3188 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 835, column: 8)
!3189 = distinct !DILexicalBlock(scope: !3190, file: !3, line: 832, column: 2)
!3190 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 831, column: 11)
!3191 = !DILocalVariable(name: "mclass", scope: !3192, file: !3, line: 848, type: !415)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 847, column: 6)
!3193 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 846, column: 8)
!3194 = !DILocation(line: 0, scope: !3163)
!3195 = !DILocation(line: 700, column: 13, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 700, column: 7)
!3197 = !DILocation(line: 700, column: 10, scope: !3196)
!3198 = !DILocation(line: 700, column: 7, scope: !3163)
!3199 = !DILocation(line: 702, column: 10, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 702, column: 7)
!3201 = !DILocation(line: 702, column: 7, scope: !3163)
!3202 = !DILocation(line: 705, column: 7, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 705, column: 7)
!3204 = !DILocation(line: 705, column: 23, scope: !3203)
!3205 = !DILocation(line: 705, column: 7, scope: !3163)
!3206 = !DILocation(line: 706, column: 10, scope: !3203)
!3207 = !DILocation(line: 706, column: 5, scope: !3203)
!3208 = !DILocation(line: 708, column: 7, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 708, column: 7)
!3210 = !DILocation(line: 708, column: 23, scope: !3209)
!3211 = !DILocation(line: 708, column: 7, scope: !3163)
!3212 = !DILocation(line: 709, column: 10, scope: !3209)
!3213 = !DILocation(line: 709, column: 5, scope: !3209)
!3214 = !DILocation(line: 711, column: 7, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 711, column: 7)
!3216 = !DILocation(line: 711, column: 28, scope: !3215)
!3217 = !DILocation(line: 711, column: 7, scope: !3163)
!3218 = !DILocation(line: 712, column: 10, scope: !3215)
!3219 = !DILocation(line: 712, column: 5, scope: !3215)
!3220 = !DILocation(line: 714, column: 7, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 714, column: 7)
!3222 = !DILocation(line: 714, column: 28, scope: !3221)
!3223 = !DILocation(line: 714, column: 7, scope: !3163)
!3224 = !DILocation(line: 715, column: 10, scope: !3221)
!3225 = !DILocation(line: 715, column: 5, scope: !3221)
!3226 = !DILocation(line: 719, column: 10, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 719, column: 7)
!3228 = !DILocation(line: 719, column: 7, scope: !3163)
!3229 = !DILocation(line: 721, column: 11, scope: !3163)
!3230 = !DILocation(line: 722, column: 11, scope: !3163)
!3231 = !DILocation(line: 724, column: 3, scope: !3163)
!3232 = !DILocation(line: 727, column: 3, scope: !3163)
!3233 = !DILocation(line: 734, column: 8, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 734, column: 7)
!3235 = !DILocation(line: 734, column: 34, scope: !3234)
!3236 = !DILocation(line: 734, column: 37, scope: !3234)
!3237 = !DILocation(line: 735, column: 7, scope: !3234)
!3238 = !DILocation(line: 735, column: 12, scope: !3234)
!3239 = !DILocation(line: 735, column: 38, scope: !3234)
!3240 = !DILocation(line: 735, column: 41, scope: !3234)
!3241 = !DILocation(line: 734, column: 7, scope: !3163)
!3242 = !DILocation(line: 737, column: 17, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 737, column: 11)
!3244 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 736, column: 5)
!3245 = !DILocation(line: 737, column: 41, scope: !3243)
!3246 = !DILocation(line: 737, column: 32, scope: !3243)
!3247 = !DILocation(line: 739, column: 4, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 738, column: 2)
!3249 = !DILocation(line: 740, column: 11, scope: !3248)
!3250 = !DILocation(line: 740, column: 4, scope: !3248)
!3251 = !DILocation(line: 742, column: 17, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 742, column: 11)
!3253 = !DILocation(line: 742, column: 42, scope: !3252)
!3254 = !DILocation(line: 742, column: 33, scope: !3252)
!3255 = !DILocation(line: 744, column: 4, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3252, file: !3, line: 743, column: 2)
!3257 = !DILocation(line: 745, column: 11, scope: !3256)
!3258 = !DILocation(line: 745, column: 4, scope: !3256)
!3259 = !DILocation(line: 747, column: 17, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 747, column: 11)
!3261 = !DILocation(line: 747, column: 39, scope: !3260)
!3262 = !DILocation(line: 747, column: 30, scope: !3260)
!3263 = !DILocation(line: 749, column: 4, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 748, column: 2)
!3265 = !DILocation(line: 750, column: 11, scope: !3264)
!3266 = !DILocation(line: 750, column: 4, scope: !3264)
!3267 = !DILocation(line: 757, column: 13, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 757, column: 7)
!3269 = !DILocation(line: 757, column: 7, scope: !3163)
!3270 = !DILocation(line: 760, column: 13, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 760, column: 7)
!3272 = !DILocation(line: 760, column: 7, scope: !3163)
!3273 = !DILocation(line: 766, column: 13, scope: !3171)
!3274 = !DILocation(line: 766, column: 38, scope: !3171)
!3275 = !DILocation(line: 766, column: 29, scope: !3171)
!3276 = !DILocation(line: 768, column: 23, scope: !3170)
!3277 = !DILocation(line: 768, column: 47, scope: !3170)
!3278 = !DILocation(line: 0, scope: !3170)
!3279 = !DILocation(line: 769, column: 23, scope: !3170)
!3280 = !DILocation(line: 769, column: 47, scope: !3170)
!3281 = !DILocation(line: 770, column: 22, scope: !3170)
!3282 = !DILocation(line: 772, column: 33, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 772, column: 11)
!3284 = !DILocation(line: 772, column: 36, scope: !3283)
!3285 = !DILocation(line: 772, column: 51, scope: !3283)
!3286 = !DILocation(line: 772, column: 11, scope: !3170)
!3287 = !DILocation(line: 774, column: 38, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 774, column: 16)
!3289 = !DILocation(line: 774, column: 41, scope: !3288)
!3290 = !DILocation(line: 774, column: 56, scope: !3288)
!3291 = !DILocation(line: 774, column: 16, scope: !3283)
!3292 = !DILocation(line: 777, column: 9, scope: !3288)
!3293 = !DILocation(line: 777, column: 2, scope: !3288)
!3294 = !DILocation(line: 782, column: 13, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 782, column: 7)
!3296 = !DILocation(line: 782, column: 35, scope: !3295)
!3297 = !DILocation(line: 782, column: 26, scope: !3295)
!3298 = !DILocation(line: 785, column: 13, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 785, column: 7)
!3300 = !DILocation(line: 785, column: 35, scope: !3299)
!3301 = !DILocation(line: 785, column: 26, scope: !3299)
!3302 = !DILocation(line: 791, column: 26, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 791, column: 7)
!3304 = !DILocation(line: 793, column: 11, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 793, column: 11)
!3306 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 792, column: 5)
!3307 = !DILocation(line: 793, column: 37, scope: !3305)
!3308 = !DILocation(line: 793, column: 34, scope: !3305)
!3309 = !DILocation(line: 794, column: 4, scope: !3305)
!3310 = !DILocation(line: 794, column: 7, scope: !3305)
!3311 = !DILocation(line: 794, column: 30, scope: !3305)
!3312 = !DILocation(line: 793, column: 11, scope: !3306)
!3313 = !DILocation(line: 795, column: 2, scope: !3305)
!3314 = !DILocation(line: 796, column: 42, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 796, column: 16)
!3316 = !DILocation(line: 796, column: 39, scope: !3315)
!3317 = !DILocation(line: 797, column: 9, scope: !3315)
!3318 = !DILocation(line: 797, column: 35, scope: !3315)
!3319 = !DILocation(line: 796, column: 16, scope: !3305)
!3320 = !DILocation(line: 798, column: 2, scope: !3315)
!3321 = !DILocation(line: 799, column: 42, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 799, column: 16)
!3323 = !DILocation(line: 799, column: 39, scope: !3322)
!3324 = !DILocation(line: 800, column: 9, scope: !3322)
!3325 = !DILocation(line: 800, column: 35, scope: !3322)
!3326 = !DILocation(line: 799, column: 16, scope: !3315)
!3327 = !DILocation(line: 801, column: 2, scope: !3322)
!3328 = !DILocation(line: 805, column: 13, scope: !3176)
!3329 = !DILocation(line: 805, column: 42, scope: !3176)
!3330 = !DILocation(line: 805, column: 33, scope: !3176)
!3331 = !DILocation(line: 0, scope: !3175)
!3332 = !DILocation(line: 811, column: 12, scope: !3175)
!3333 = !DILocation(line: 812, column: 12, scope: !3175)
!3334 = !DILocation(line: 815, column: 11, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 815, column: 11)
!3336 = !DILocation(line: 815, column: 32, scope: !3335)
!3337 = !DILocation(line: 815, column: 35, scope: !3335)
!3338 = !DILocation(line: 815, column: 11, scope: !3175)
!3339 = !DILocation(line: 816, column: 2, scope: !3335)
!3340 = !DILocation(line: 822, column: 12, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 822, column: 11)
!3342 = !DILocation(line: 822, column: 31, scope: !3341)
!3343 = !DILocation(line: 822, column: 34, scope: !3341)
!3344 = !DILocation(line: 823, column: 5, scope: !3341)
!3345 = !DILocation(line: 824, column: 43, scope: !3341)
!3346 = !DILocation(line: 824, column: 34, scope: !3341)
!3347 = !DILocation(line: 826, column: 4, scope: !3341)
!3348 = !DILocation(line: 826, column: 14, scope: !3341)
!3349 = !DILocation(line: 826, column: 34, scope: !3341)
!3350 = !DILocation(line: 827, column: 11, scope: !3341)
!3351 = !DILocation(line: 822, column: 11, scope: !3175)
!3352 = !DILocation(line: 828, column: 2, scope: !3341)
!3353 = !DILocation(line: 831, column: 21, scope: !3190)
!3354 = !DILocation(line: 831, column: 11, scope: !3175)
!3355 = !DILocation(line: 835, column: 34, scope: !3188)
!3356 = !DILocation(line: 835, column: 8, scope: !3189)
!3357 = !DILocation(line: 0, scope: !3187)
!3358 = !DILocation(line: 838, column: 12, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3187, file: !3, line: 838, column: 12)
!3360 = !DILocation(line: 838, column: 32, scope: !3359)
!3361 = !DILocation(line: 838, column: 12, scope: !3187)
!3362 = !DILocation(line: 840, column: 37, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 840, column: 17)
!3364 = !DILocation(line: 840, column: 17, scope: !3359)
!3365 = !DILocation(line: 843, column: 3, scope: !3363)
!3366 = !DILocation(line: 0, scope: !3359)
!3367 = !DILocation(line: 844, column: 28, scope: !3187)
!3368 = !DILocation(line: 844, column: 13, scope: !3187)
!3369 = !DILocation(line: 845, column: 6, scope: !3187)
!3370 = !DILocation(line: 846, column: 34, scope: !3193)
!3371 = !DILocation(line: 846, column: 37, scope: !3193)
!3372 = !DILocation(line: 846, column: 8, scope: !3189)
!3373 = !DILocation(line: 0, scope: !3192)
!3374 = !DILocation(line: 849, column: 12, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 849, column: 12)
!3376 = !DILocation(line: 849, column: 32, scope: !3375)
!3377 = !DILocation(line: 849, column: 12, scope: !3192)
!3378 = !DILocation(line: 851, column: 37, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 851, column: 17)
!3380 = !DILocation(line: 851, column: 17, scope: !3375)
!3381 = !DILocation(line: 854, column: 3, scope: !3379)
!3382 = !DILocation(line: 0, scope: !3375)
!3383 = !DILocation(line: 855, column: 28, scope: !3192)
!3384 = !DILocation(line: 855, column: 13, scope: !3192)
!3385 = !DILocation(line: 856, column: 6, scope: !3192)
!3386 = !DILocation(line: 859, column: 11, scope: !3175)
!3387 = !DILocation(line: 861, column: 12, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 860, column: 2)
!3389 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 859, column: 11)
!3390 = !DILocation(line: 862, column: 12, scope: !3388)
!3391 = !DILocation(line: 863, column: 2, scope: !3388)
!3392 = !DILocation(line: 868, column: 12, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 865, column: 2)
!3394 = !DILocation(line: 868, column: 36, scope: !3393)
!3395 = !DILocation(line: 868, column: 35, scope: !3393)
!3396 = !DILocation(line: 868, column: 32, scope: !3393)
!3397 = !DILocation(line: 0, scope: !3389)
!3398 = !DILocation(line: 871, column: 11, scope: !3175)
!3399 = !DILocation(line: 873, column: 12, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 872, column: 2)
!3401 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 871, column: 11)
!3402 = !DILocation(line: 874, column: 12, scope: !3400)
!3403 = !DILocation(line: 875, column: 2, scope: !3400)
!3404 = !DILocation(line: 880, column: 12, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 877, column: 2)
!3406 = !DILocation(line: 880, column: 36, scope: !3405)
!3407 = !DILocation(line: 880, column: 35, scope: !3405)
!3408 = !DILocation(line: 880, column: 32, scope: !3405)
!3409 = !DILocation(line: 0, scope: !3401)
!3410 = !DILocation(line: 883, column: 24, scope: !3175)
!3411 = !DILocation(line: 883, column: 18, scope: !3175)
!3412 = !DILocation(line: 884, column: 24, scope: !3175)
!3413 = !DILocation(line: 884, column: 18, scope: !3175)
!3414 = !DILocation(line: 885, column: 14, scope: !3175)
!3415 = !DILocation(line: 891, column: 7, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 891, column: 7)
!3417 = !DILocation(line: 891, column: 29, scope: !3416)
!3418 = !DILocation(line: 891, column: 27, scope: !3416)
!3419 = !DILocation(line: 891, column: 7, scope: !3163)
!3420 = !DILocation(line: 893, column: 32, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3416, file: !3, line: 893, column: 12)
!3422 = !DILocation(line: 893, column: 12, scope: !3416)
!3423 = !DILocation(line: 900, column: 7, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 900, column: 7)
!3425 = !DILocation(line: 900, column: 33, scope: !3424)
!3426 = !DILocation(line: 900, column: 30, scope: !3424)
!3427 = !DILocation(line: 901, column: 7, scope: !3424)
!3428 = !DILocation(line: 901, column: 10, scope: !3424)
!3429 = !DILocation(line: 901, column: 33, scope: !3424)
!3430 = !DILocation(line: 900, column: 7, scope: !3163)
!3431 = !DILocation(line: 902, column: 5, scope: !3424)
!3432 = !DILocation(line: 904, column: 33, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 904, column: 7)
!3434 = !DILocation(line: 904, column: 30, scope: !3433)
!3435 = !DILocation(line: 905, column: 7, scope: !3433)
!3436 = !DILocation(line: 905, column: 33, scope: !3433)
!3437 = !DILocation(line: 904, column: 7, scope: !3163)
!3438 = !DILocation(line: 907, column: 11, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 907, column: 11)
!3440 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 906, column: 5)
!3441 = !DILocation(line: 907, column: 30, scope: !3439)
!3442 = !DILocation(line: 907, column: 33, scope: !3439)
!3443 = !DILocation(line: 907, column: 11, scope: !3440)
!3444 = !DILocation(line: 908, column: 2, scope: !3439)
!3445 = !DILocation(line: 910, column: 2, scope: !3439)
!3446 = !DILocation(line: 913, column: 33, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 913, column: 7)
!3448 = !DILocation(line: 913, column: 30, scope: !3447)
!3449 = !DILocation(line: 914, column: 7, scope: !3447)
!3450 = !DILocation(line: 914, column: 33, scope: !3447)
!3451 = !DILocation(line: 913, column: 7, scope: !3163)
!3452 = !DILocation(line: 915, column: 5, scope: !3447)
!3453 = !DILocation(line: 917, column: 33, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 917, column: 7)
!3455 = !DILocation(line: 917, column: 30, scope: !3454)
!3456 = !DILocation(line: 918, column: 7, scope: !3454)
!3457 = !DILocation(line: 918, column: 33, scope: !3454)
!3458 = !DILocation(line: 917, column: 7, scope: !3163)
!3459 = !DILocation(line: 922, column: 11, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 922, column: 11)
!3461 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 919, column: 5)
!3462 = !DILocation(line: 922, column: 30, scope: !3460)
!3463 = !DILocation(line: 922, column: 33, scope: !3460)
!3464 = !DILocation(line: 922, column: 11, scope: !3461)
!3465 = !DILocation(line: 923, column: 2, scope: !3460)
!3466 = !DILocation(line: 925, column: 2, scope: !3460)
!3467 = !DILocation(line: 929, column: 33, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 929, column: 7)
!3469 = !DILocation(line: 929, column: 30, scope: !3468)
!3470 = !DILocation(line: 930, column: 7, scope: !3468)
!3471 = !DILocation(line: 930, column: 33, scope: !3468)
!3472 = !DILocation(line: 929, column: 7, scope: !3163)
!3473 = !DILocation(line: 931, column: 5, scope: !3468)
!3474 = !DILocation(line: 935, column: 7, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 935, column: 7)
!3476 = !DILocation(line: 0, scope: !3475)
!3477 = !DILocation(line: 939, column: 1, scope: !3163)
!3478 = distinct !DISubprogram(name: "comptypes_internal", scope: !3, file: !3, line: 1008, type: !3479, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3481)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!453, !1960, !1960, !451}
!3481 = !{!3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3492, !3493, !3494, !3495, !3496, !3497, !3500}
!3482 = !DILocalVariable(name: "type1", arg: 1, scope: !3478, file: !3, line: 1008, type: !1960)
!3483 = !DILocalVariable(name: "type2", arg: 2, scope: !3478, file: !3, line: 1008, type: !1960)
!3484 = !DILocalVariable(name: "enum_and_int_p", arg: 3, scope: !3478, file: !3, line: 1008, type: !451)
!3485 = !DILocalVariable(name: "t1", scope: !3478, file: !3, line: 1010, type: !1960)
!3486 = !DILocalVariable(name: "t2", scope: !3478, file: !3, line: 1011, type: !1960)
!3487 = !DILocalVariable(name: "attrval", scope: !3478, file: !3, line: 1012, type: !453)
!3488 = !DILocalVariable(name: "val", scope: !3478, file: !3, line: 1012, type: !453)
!3489 = !DILocalVariable(name: "d1", scope: !3490, file: !3, line: 1094, type: !460)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 1093, column: 7)
!3491 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1077, column: 5)
!3492 = !DILocalVariable(name: "d2", scope: !3490, file: !3, line: 1095, type: !460)
!3493 = !DILocalVariable(name: "d1_variable", scope: !3490, file: !3, line: 1096, type: !452)
!3494 = !DILocalVariable(name: "d2_variable", scope: !3490, file: !3, line: 1096, type: !452)
!3495 = !DILocalVariable(name: "d1_zero", scope: !3490, file: !3, line: 1097, type: !452)
!3496 = !DILocalVariable(name: "d2_zero", scope: !3490, file: !3, line: 1097, type: !452)
!3497 = !DILocalVariable(name: "a1", scope: !3498, file: !3, line: 1139, type: !460)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 1138, column: 2)
!3499 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 1137, column: 11)
!3500 = !DILocalVariable(name: "a2", scope: !3498, file: !3, line: 1140, type: !460)
!3501 = !DILocation(line: 0, scope: !3478)
!3502 = !DILocation(line: 1016, column: 10, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1016, column: 7)
!3504 = !DILocation(line: 1016, column: 20, scope: !3503)
!3505 = !DILocation(line: 1016, column: 16, scope: !3503)
!3506 = !DILocation(line: 1016, column: 27, scope: !3503)
!3507 = !DILocation(line: 1017, column: 10, scope: !3503)
!3508 = !DILocation(line: 1017, column: 25, scope: !3503)
!3509 = !DILocation(line: 1017, column: 39, scope: !3503)
!3510 = !DILocation(line: 1017, column: 42, scope: !3503)
!3511 = !DILocation(line: 1017, column: 57, scope: !3503)
!3512 = !DILocation(line: 1016, column: 7, scope: !3478)
!3513 = !DILocation(line: 1022, column: 22, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1022, column: 7)
!3515 = !DILocation(line: 1022, column: 38, scope: !3514)
!3516 = !DILocation(line: 1022, column: 41, scope: !3514)
!3517 = !DILocation(line: 1023, column: 7, scope: !3514)
!3518 = !DILocation(line: 1023, column: 10, scope: !3514)
!3519 = !DILocation(line: 1022, column: 7, scope: !3478)
!3520 = !DILocation(line: 1024, column: 10, scope: !3514)
!3521 = !DILocation(line: 1026, column: 22, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1026, column: 7)
!3523 = !DILocation(line: 1026, column: 38, scope: !3522)
!3524 = !DILocation(line: 1026, column: 41, scope: !3522)
!3525 = !DILocation(line: 1027, column: 7, scope: !3522)
!3526 = !DILocation(line: 1027, column: 10, scope: !3522)
!3527 = !DILocation(line: 1026, column: 7, scope: !3478)
!3528 = !DILocation(line: 1028, column: 10, scope: !3522)
!3529 = !DILocation(line: 1035, column: 7, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1035, column: 7)
!3531 = !DILocation(line: 1035, column: 22, scope: !3530)
!3532 = !DILocation(line: 1035, column: 39, scope: !3530)
!3533 = !DILocation(line: 0, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1041, column: 12)
!3535 = !DILocation(line: 1041, column: 12, scope: !3534)
!3536 = !DILocation(line: 1035, column: 42, scope: !3530)
!3537 = !DILocation(line: 1035, column: 57, scope: !3530)
!3538 = !DILocation(line: 1035, column: 7, scope: !3478)
!3539 = !DILocation(line: 1037, column: 36, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1036, column: 5)
!3541 = !DILocation(line: 1037, column: 57, scope: !3540)
!3542 = !DILocation(line: 1037, column: 12, scope: !3540)
!3543 = !DILocation(line: 1038, column: 26, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 1038, column: 11)
!3545 = !DILocation(line: 1038, column: 34, scope: !3544)
!3546 = !DILocation(line: 1038, column: 37, scope: !3544)
!3547 = !DILocation(line: 1038, column: 52, scope: !3544)
!3548 = !DILocation(line: 1038, column: 11, scope: !3540)
!3549 = !DILocation(line: 1039, column: 18, scope: !3544)
!3550 = !DILocation(line: 1039, column: 2, scope: !3544)
!3551 = !DILocation(line: 1041, column: 27, scope: !3534)
!3552 = !DILocation(line: 1041, column: 44, scope: !3534)
!3553 = !DILocation(line: 1041, column: 12, scope: !3530)
!3554 = !DILocation(line: 1043, column: 36, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 1042, column: 5)
!3556 = !DILocation(line: 1043, column: 57, scope: !3555)
!3557 = !DILocation(line: 1043, column: 12, scope: !3555)
!3558 = !DILocation(line: 1044, column: 26, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 1044, column: 11)
!3560 = !DILocation(line: 1044, column: 34, scope: !3559)
!3561 = !DILocation(line: 1044, column: 37, scope: !3559)
!3562 = !DILocation(line: 1044, column: 52, scope: !3559)
!3563 = !DILocation(line: 1044, column: 11, scope: !3555)
!3564 = !DILocation(line: 1045, column: 18, scope: !3559)
!3565 = !DILocation(line: 1045, column: 2, scope: !3559)
!3566 = !DILocation(line: 1048, column: 10, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1048, column: 7)
!3568 = !DILocation(line: 1048, column: 7, scope: !3478)
!3569 = !DILocation(line: 1053, column: 7, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1053, column: 7)
!3571 = !DILocation(line: 1053, column: 25, scope: !3570)
!3572 = !DILocation(line: 1053, column: 22, scope: !3570)
!3573 = !DILocation(line: 1053, column: 7, scope: !3478)
!3574 = !DILocation(line: 1058, column: 7, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1058, column: 7)
!3576 = !DILocation(line: 1058, column: 26, scope: !3575)
!3577 = !DILocation(line: 1058, column: 23, scope: !3575)
!3578 = !DILocation(line: 1058, column: 7, scope: !3478)
!3579 = !DILocation(line: 1065, column: 22, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1065, column: 7)
!3581 = !DILocation(line: 1066, column: 7, scope: !3580)
!3582 = !DILocation(line: 1066, column: 10, scope: !3580)
!3583 = !DILocation(line: 1066, column: 36, scope: !3580)
!3584 = !DILocation(line: 1066, column: 33, scope: !3580)
!3585 = !DILocation(line: 1065, column: 7, scope: !3478)
!3586 = !DILocation(line: 1070, column: 27, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1070, column: 7)
!3588 = !DILocation(line: 1070, column: 19, scope: !3587)
!3589 = !DILocation(line: 1070, column: 17, scope: !3587)
!3590 = !DILocation(line: 1070, column: 7, scope: !3478)
!3591 = !DILocation(line: 1076, column: 11, scope: !3478)
!3592 = !DILocation(line: 1076, column: 3, scope: !3478)
!3593 = !DILocation(line: 1080, column: 11, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 1080, column: 11)
!3595 = !DILocation(line: 1080, column: 29, scope: !3594)
!3596 = !DILocation(line: 1080, column: 26, scope: !3594)
!3597 = !DILocation(line: 1081, column: 4, scope: !3594)
!3598 = !DILocation(line: 1081, column: 7, scope: !3594)
!3599 = !DILocation(line: 1081, column: 38, scope: !3594)
!3600 = !DILocation(line: 1081, column: 35, scope: !3594)
!3601 = !DILocation(line: 1080, column: 11, scope: !3491)
!3602 = !DILocation(line: 1083, column: 14, scope: !3491)
!3603 = !DILocation(line: 1083, column: 32, scope: !3491)
!3604 = !DILocation(line: 1083, column: 29, scope: !3491)
!3605 = !DILocation(line: 1084, column: 13, scope: !3491)
!3606 = !DILocation(line: 1089, column: 13, scope: !3491)
!3607 = !DILocation(line: 1090, column: 7, scope: !3491)
!3608 = !DILocation(line: 1094, column: 12, scope: !3490)
!3609 = !DILocation(line: 0, scope: !3490)
!3610 = !DILocation(line: 1095, column: 12, scope: !3490)
!3611 = !DILocation(line: 1101, column: 6, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1101, column: 6)
!3613 = !DILocation(line: 1101, column: 24, scope: !3612)
!3614 = !DILocation(line: 1101, column: 21, scope: !3612)
!3615 = !DILocation(line: 1102, column: 6, scope: !3612)
!3616 = !DILocation(line: 1102, column: 21, scope: !3612)
!3617 = !DILocation(line: 1102, column: 11, scope: !3612)
!3618 = !DILocation(line: 1101, column: 6, scope: !3490)
!3619 = !DILocation(line: 1107, column: 9, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1107, column: 6)
!3621 = !DILocation(line: 1107, column: 20, scope: !3620)
!3622 = !DILocation(line: 1107, column: 14, scope: !3620)
!3623 = !DILocation(line: 1107, column: 31, scope: !3620)
!3624 = !DILocation(line: 1110, column: 13, scope: !3490)
!3625 = !DILocation(line: 1110, column: 12, scope: !3490)
!3626 = !DILocation(line: 1111, column: 13, scope: !3490)
!3627 = !DILocation(line: 1111, column: 12, scope: !3490)
!3628 = !DILocation(line: 1114, column: 10, scope: !3490)
!3629 = !DILocation(line: 1114, column: 14, scope: !3490)
!3630 = !DILocation(line: 1114, column: 46, scope: !3490)
!3631 = !DILocation(line: 1115, column: 7, scope: !3490)
!3632 = !DILocation(line: 1115, column: 10, scope: !3490)
!3633 = !DILocation(line: 1115, column: 42, scope: !3490)
!3634 = !DILocation(line: 1117, column: 10, scope: !3490)
!3635 = !DILocation(line: 1117, column: 14, scope: !3490)
!3636 = !DILocation(line: 1117, column: 46, scope: !3490)
!3637 = !DILocation(line: 1118, column: 7, scope: !3490)
!3638 = !DILocation(line: 1118, column: 10, scope: !3490)
!3639 = !DILocation(line: 1118, column: 42, scope: !3490)
!3640 = !DILocation(line: 1119, column: 16, scope: !3490)
!3641 = !DILocation(line: 1119, column: 28, scope: !3490)
!3642 = !DILocation(line: 1119, column: 40, scope: !3490)
!3643 = !DILocation(line: 1119, column: 43, scope: !3490)
!3644 = !DILocation(line: 1120, column: 16, scope: !3490)
!3645 = !DILocation(line: 1120, column: 28, scope: !3490)
!3646 = !DILocation(line: 1120, column: 40, scope: !3490)
!3647 = !DILocation(line: 1120, column: 43, scope: !3490)
!3648 = !DILocation(line: 1122, column: 6, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1122, column: 6)
!3650 = !DILocation(line: 1122, column: 18, scope: !3649)
!3651 = !DILocation(line: 1124, column: 14, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1124, column: 6)
!3653 = !DILocation(line: 1126, column: 14, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1126, column: 6)
!3655 = !DILocation(line: 1127, column: 30, scope: !3654)
!3656 = !DILocation(line: 1127, column: 51, scope: !3654)
!3657 = !DILocation(line: 1127, column: 10, scope: !3654)
!3658 = !DILocation(line: 1128, column: 6, scope: !3654)
!3659 = !DILocation(line: 1128, column: 30, scope: !3654)
!3660 = !DILocation(line: 1128, column: 51, scope: !3654)
!3661 = !DILocation(line: 1128, column: 10, scope: !3654)
!3662 = !DILocation(line: 1126, column: 6, scope: !3490)
!3663 = !DILocation(line: 1129, column: 4, scope: !3654)
!3664 = !DILocation(line: 1137, column: 24, scope: !3499)
!3665 = !DILocation(line: 1137, column: 11, scope: !3491)
!3666 = !DILocation(line: 1139, column: 14, scope: !3498)
!3667 = !DILocation(line: 0, scope: !3498)
!3668 = !DILocation(line: 1140, column: 14, scope: !3498)
!3669 = !DILocation(line: 1142, column: 10, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 1142, column: 8)
!3671 = !DILocation(line: 1143, column: 8, scope: !3670)
!3672 = !DILocation(line: 1143, column: 13, scope: !3670)
!3673 = !DILocation(line: 1142, column: 8, scope: !3498)
!3674 = !DILocation(line: 1146, column: 16, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 1146, column: 8)
!3676 = !DILocation(line: 0, scope: !3499)
!3677 = !DILocation(line: 1153, column: 14, scope: !3491)
!3678 = !DILocation(line: 1153, column: 43, scope: !3491)
!3679 = !DILocation(line: 1153, column: 40, scope: !3491)
!3680 = !DILocation(line: 1154, column: 7, scope: !3491)
!3681 = !DILocation(line: 1154, column: 30, scope: !3491)
!3682 = !DILocation(line: 1154, column: 46, scope: !3491)
!3683 = !DILocation(line: 1154, column: 10, scope: !3491)
!3684 = !DILocation(line: 1156, column: 7, scope: !3491)
!3685 = !DILocation(line: 1161, column: 18, scope: !3478)
!3686 = !DILocation(line: 1161, column: 30, scope: !3478)
!3687 = !DILocation(line: 1161, column: 23, scope: !3478)
!3688 = !DILocation(line: 1162, column: 1, scope: !3478)
!3689 = distinct !DISubprogram(name: "free_all_tagged_tu_seen_up_to", scope: !3, file: !3, line: 1270, type: !3690, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{null, !1957}
!3692 = !{!3693, !3694, !3695}
!3693 = !DILocalVariable(name: "tu_til", arg: 1, scope: !3689, file: !3, line: 1270, type: !1957)
!3694 = !DILocalVariable(name: "tu", scope: !3689, file: !3, line: 1272, type: !1957)
!3695 = !DILocalVariable(name: "tu1", scope: !3696, file: !3, line: 1275, type: !3697)
!3696 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 1274, column: 5)
!3697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!3698 = !DILocation(line: 0, scope: !3689)
!3699 = !DILocation(line: 1272, column: 43, scope: !3689)
!3700 = !DILocation(line: 1273, column: 3, scope: !3689)
!3701 = !DILocation(line: 1273, column: 13, scope: !3689)
!3702 = !DILocation(line: 0, scope: !3696)
!3703 = !DILocation(line: 1277, column: 17, scope: !3696)
!3704 = !DILocation(line: 1278, column: 7, scope: !3696)
!3705 = distinct !{!3705, !3700, !3706}
!3706 = !DILocation(line: 1279, column: 5, scope: !3689)
!3707 = !DILocation(line: 1280, column: 23, scope: !3689)
!3708 = !DILocation(line: 1281, column: 1, scope: !3689)
!3709 = distinct !DISubprogram(name: "same_translation_unit_p", scope: !3, file: !3, line: 1210, type: !3710, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3712)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!453, !1960, !1960}
!3712 = !{!3713, !3714}
!3713 = !DILocalVariable(name: "t1", arg: 1, scope: !3709, file: !3, line: 1210, type: !1960)
!3714 = !DILocalVariable(name: "t2", arg: 2, scope: !3709, file: !3, line: 1210, type: !1960)
!3715 = !DILocation(line: 0, scope: !3709)
!3716 = !DILocation(line: 1212, column: 3, scope: !3709)
!3717 = !DILocation(line: 1212, column: 10, scope: !3709)
!3718 = !DILocation(line: 1212, column: 13, scope: !3709)
!3719 = !DILocation(line: 1212, column: 16, scope: !3709)
!3720 = !DILocation(line: 1212, column: 31, scope: !3709)
!3721 = !DILocation(line: 1213, column: 13, scope: !3709)
!3722 = !DILocation(line: 1213, column: 5, scope: !3709)
!3723 = !DILocation(line: 1216, column: 7, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 1214, column: 7)
!3725 = !DILocation(line: 1216, column: 26, scope: !3724)
!3726 = !DILocation(line: 1218, column: 7, scope: !3724)
!3727 = !DILocation(line: 1218, column: 26, scope: !3724)
!3728 = !DILocation(line: 1220, column: 7, scope: !3724)
!3729 = !DILocation(line: 1220, column: 32, scope: !3724)
!3730 = !DILocation(line: 1221, column: 16, scope: !3724)
!3731 = !DILocation(line: 1222, column: 7, scope: !3724)
!3732 = distinct !{!3732, !3716, !3733}
!3733 = !DILocation(line: 1222, column: 7, scope: !3709)
!3734 = !DILocation(line: 1224, column: 3, scope: !3709)
!3735 = !DILocation(line: 1224, column: 10, scope: !3709)
!3736 = !DILocation(line: 1224, column: 13, scope: !3709)
!3737 = !DILocation(line: 1224, column: 16, scope: !3709)
!3738 = !DILocation(line: 1224, column: 31, scope: !3709)
!3739 = !DILocation(line: 1225, column: 13, scope: !3709)
!3740 = !DILocation(line: 1225, column: 5, scope: !3709)
!3741 = !DILocation(line: 1228, column: 7, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 1226, column: 7)
!3743 = !DILocation(line: 1228, column: 26, scope: !3742)
!3744 = !DILocation(line: 1230, column: 7, scope: !3742)
!3745 = !DILocation(line: 1230, column: 26, scope: !3742)
!3746 = !DILocation(line: 1232, column: 7, scope: !3742)
!3747 = !DILocation(line: 1232, column: 32, scope: !3742)
!3748 = !DILocation(line: 1233, column: 16, scope: !3742)
!3749 = !DILocation(line: 1234, column: 7, scope: !3742)
!3750 = distinct !{!3750, !3734, !3751}
!3751 = !DILocation(line: 1234, column: 7, scope: !3709)
!3752 = !DILocation(line: 1236, column: 13, scope: !3709)
!3753 = !DILocation(line: 1236, column: 3, scope: !3709)
!3754 = distinct !DISubprogram(name: "decl_constant_value", scope: !3, file: !3, line: 1706, type: !2493, scopeLine: 1707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3755)
!3755 = !{!3756}
!3756 = !DILocalVariable(name: "decl", arg: 1, scope: !3754, file: !3, line: 1706, type: !460)
!3757 = !DILocation(line: 0, scope: !3754)
!3758 = !DILocation(line: 1711, column: 7, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1711, column: 7)
!3760 = !DILocation(line: 1711, column: 29, scope: !3759)
!3761 = !DILocation(line: 1712, column: 7, scope: !3759)
!3762 = !DILocation(line: 1712, column: 10, scope: !3759)
!3763 = !DILocation(line: 1712, column: 27, scope: !3759)
!3764 = !DILocation(line: 1713, column: 7, scope: !3759)
!3765 = !DILocation(line: 1713, column: 11, scope: !3759)
!3766 = !DILocation(line: 1714, column: 7, scope: !3759)
!3767 = !DILocation(line: 1714, column: 10, scope: !3759)
!3768 = !DILocation(line: 1715, column: 7, scope: !3759)
!3769 = !DILocation(line: 1715, column: 10, scope: !3759)
!3770 = !DILocation(line: 1715, column: 30, scope: !3759)
!3771 = !DILocation(line: 1716, column: 7, scope: !3759)
!3772 = !DILocation(line: 1716, column: 10, scope: !3759)
!3773 = !DILocation(line: 1716, column: 42, scope: !3759)
!3774 = !DILocation(line: 1720, column: 7, scope: !3759)
!3775 = !DILocation(line: 1720, column: 10, scope: !3759)
!3776 = !DILocation(line: 1722, column: 7, scope: !3759)
!3777 = !DILocation(line: 1722, column: 42, scope: !3759)
!3778 = !DILocation(line: 1711, column: 7, scope: !3754)
!3779 = !DILocation(line: 1723, column: 5, scope: !3759)
!3780 = !DILocation(line: 1725, column: 1, scope: !3754)
!3781 = distinct !DISubprogram(name: "default_function_array_conversion", scope: !3, file: !3, line: 1776, type: !3782, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3784)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!1909, !585, !1909}
!3784 = !{!3785, !3786, !3787, !3788, !3789, !3790, !3793}
!3785 = !DILocalVariable(name: "loc", arg: 1, scope: !3781, file: !3, line: 1776, type: !585)
!3786 = !DILocalVariable(name: "exp", arg: 2, scope: !3781, file: !3, line: 1776, type: !1909)
!3787 = !DILocalVariable(name: "orig_exp", scope: !3781, file: !3, line: 1778, type: !460)
!3788 = !DILocalVariable(name: "type", scope: !3781, file: !3, line: 1779, type: !460)
!3789 = !DILocalVariable(name: "code", scope: !3781, file: !3, line: 1780, type: !134)
!3790 = !DILocalVariable(name: "not_lvalue", scope: !3791, file: !3, line: 1786, type: !452)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 1785, column: 7)
!3792 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 1783, column: 5)
!3793 = !DILocalVariable(name: "lvalue_array_p", scope: !3791, file: !3, line: 1787, type: !452)
!3794 = !DILocation(line: 0, scope: !3781)
!3795 = !DILocation(line: 1776, column: 66, scope: !3781)
!3796 = !DILocation(line: 1778, column: 23, scope: !3781)
!3797 = !DILocation(line: 1779, column: 15, scope: !3781)
!3798 = !DILocation(line: 1780, column: 25, scope: !3781)
!3799 = !DILocation(line: 1782, column: 3, scope: !3781)
!3800 = !DILocation(line: 0, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 1792, column: 4)
!3802 = !DILocation(line: 1789, column: 2, scope: !3791)
!3803 = !DILocation(line: 1789, column: 10, scope: !3791)
!3804 = !DILocation(line: 0, scope: !3791)
!3805 = !DILocation(line: 1789, column: 32, scope: !3791)
!3806 = !DILocation(line: 1790, column: 3, scope: !3791)
!3807 = !DILocation(line: 1790, column: 6, scope: !3791)
!3808 = !DILocation(line: 1791, column: 9, scope: !3791)
!3809 = !DILocation(line: 1791, column: 12, scope: !3791)
!3810 = !DILocation(line: 1791, column: 52, scope: !3791)
!3811 = !DILocation(line: 1793, column: 10, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 1793, column: 10)
!3813 = !DILocation(line: 1793, column: 32, scope: !3812)
!3814 = !DILocation(line: 1793, column: 10, scope: !3801)
!3815 = !DILocation(line: 1795, column: 18, scope: !3801)
!3816 = !DILocation(line: 1795, column: 16, scope: !3801)
!3817 = distinct !{!3817, !3802, !3818}
!3818 = !DILocation(line: 1796, column: 4, scope: !3791)
!3819 = !DILocation(line: 1798, column: 6, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 1798, column: 6)
!3821 = !DILocation(line: 1798, column: 6, scope: !3791)
!3822 = !DILocation(line: 1799, column: 32, scope: !3820)
!3823 = !DILocation(line: 1799, column: 4, scope: !3820)
!3824 = !DILocation(line: 1801, column: 20, scope: !3791)
!3825 = !DILocation(line: 1801, column: 31, scope: !3791)
!3826 = !DILocation(line: 1801, column: 48, scope: !3791)
!3827 = !DILocation(line: 1801, column: 34, scope: !3791)
!3828 = !DILocation(line: 1802, column: 7, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 1802, column: 6)
!3830 = !DILocation(line: 1802, column: 19, scope: !3829)
!3831 = !DILocation(line: 1808, column: 13, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1803, column: 4)
!3833 = !DILocation(line: 1808, column: 6, scope: !3832)
!3834 = !DILocation(line: 1811, column: 52, scope: !3791)
!3835 = !DILocation(line: 1811, column: 14, scope: !3791)
!3836 = !DILocation(line: 1811, column: 12, scope: !3791)
!3837 = !DILocation(line: 1812, column: 7, scope: !3792)
!3838 = !DILocation(line: 1815, column: 60, scope: !3792)
!3839 = !DILocation(line: 1815, column: 19, scope: !3792)
!3840 = !DILocation(line: 1815, column: 17, scope: !3792)
!3841 = !DILocation(line: 1816, column: 7, scope: !3792)
!3842 = !DILocation(line: 1821, column: 10, scope: !3781)
!3843 = !DILocation(line: 1821, column: 3, scope: !3781)
!3844 = !DILocation(line: 1822, column: 1, scope: !3781)
!3845 = distinct !DISubprogram(name: "lvalue_p", scope: !3, file: !3, line: 3724, type: !2598, scopeLine: 3725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3846)
!3846 = !{!3847, !3848}
!3847 = !DILocalVariable(name: "ref", arg: 1, scope: !3845, file: !3, line: 3724, type: !1960)
!3848 = !DILocalVariable(name: "code", scope: !3845, file: !3, line: 3726, type: !3849)
!3849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!3850 = !DILocation(line: 3733, column: 14, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 3729, column: 5)
!3852 = !DILocation(line: 0, scope: !3845)
!3853 = !DILocation(line: 3726, column: 31, scope: !3845)
!3854 = !DILocation(line: 3728, column: 3, scope: !3845)
!3855 = !DILocation(line: 3733, column: 24, scope: !3851)
!3856 = !DILocation(line: 0, scope: !3851)
!3857 = !DILocation(line: 3736, column: 24, scope: !3851)
!3858 = !DILocation(line: 3736, column: 14, scope: !3851)
!3859 = !DILocation(line: 3748, column: 15, scope: !3851)
!3860 = !DILocation(line: 3748, column: 43, scope: !3851)
!3861 = !DILocation(line: 3749, column: 8, scope: !3851)
!3862 = !DILocation(line: 3749, column: 39, scope: !3851)
!3863 = !DILocation(line: 3748, column: 7, scope: !3851)
!3864 = !DILocation(line: 3752, column: 14, scope: !3851)
!3865 = !DILocation(line: 3752, column: 42, scope: !3851)
!3866 = !DILocation(line: 3752, column: 7, scope: !3851)
!3867 = !DILocation(line: 3755, column: 7, scope: !3851)
!3868 = !DILocation(line: 3757, column: 1, scope: !3845)
!3869 = distinct !DISubprogram(name: "array_to_pointer_conversion", scope: !3, file: !3, line: 1729, type: !3870, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3872)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!460, !585, !460}
!3872 = !{!3873, !3874, !3875, !3876, !3877, !3878, !3879}
!3873 = !DILocalVariable(name: "loc", arg: 1, scope: !3869, file: !3, line: 1729, type: !585)
!3874 = !DILocalVariable(name: "exp", arg: 2, scope: !3869, file: !3, line: 1729, type: !460)
!3875 = !DILocalVariable(name: "orig_exp", scope: !3869, file: !3, line: 1731, type: !460)
!3876 = !DILocalVariable(name: "type", scope: !3869, file: !3, line: 1732, type: !460)
!3877 = !DILocalVariable(name: "adr", scope: !3869, file: !3, line: 1733, type: !460)
!3878 = !DILocalVariable(name: "restype", scope: !3869, file: !3, line: 1734, type: !460)
!3879 = !DILocalVariable(name: "ptrtype", scope: !3869, file: !3, line: 1735, type: !460)
!3880 = !DILocation(line: 0, scope: !3869)
!3881 = !DILocation(line: 1732, column: 15, scope: !3869)
!3882 = !DILocation(line: 1734, column: 18, scope: !3869)
!3883 = !DILocation(line: 1737, column: 3, scope: !3869)
!3884 = !DILocation(line: 1739, column: 3, scope: !3869)
!3885 = distinct !{!3885, !3884, !3884}
!3886 = !DILocation(line: 1741, column: 7, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 1741, column: 7)
!3888 = !DILocation(line: 1741, column: 7, scope: !3869)
!3889 = !DILocation(line: 1742, column: 27, scope: !3887)
!3890 = !DILocation(line: 1742, column: 5, scope: !3887)
!3891 = !DILocation(line: 1744, column: 13, scope: !3869)
!3892 = !DILocation(line: 1746, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 1746, column: 7)
!3894 = !DILocation(line: 1746, column: 23, scope: !3893)
!3895 = !DILocation(line: 1746, column: 7, scope: !3869)
!3896 = !DILocation(line: 1747, column: 30, scope: !3893)
!3897 = !DILocation(line: 1747, column: 12, scope: !3893)
!3898 = !DILocation(line: 1747, column: 5, scope: !3893)
!3899 = !DILocation(line: 1749, column: 9, scope: !3869)
!3900 = !DILocation(line: 1750, column: 10, scope: !3869)
!3901 = !DILocation(line: 1750, column: 3, scope: !3869)
!3902 = !DILocation(line: 1751, column: 1, scope: !3869)
!3903 = distinct !DISubprogram(name: "function_to_pointer_conversion", scope: !3, file: !3, line: 1755, type: !3870, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3904)
!3904 = !{!3905, !3906, !3907}
!3905 = !DILocalVariable(name: "loc", arg: 1, scope: !3903, file: !3, line: 1755, type: !585)
!3906 = !DILocalVariable(name: "exp", arg: 2, scope: !3903, file: !3, line: 1755, type: !460)
!3907 = !DILocalVariable(name: "orig_exp", scope: !3903, file: !3, line: 1757, type: !460)
!3908 = !DILocation(line: 0, scope: !3903)
!3909 = !DILocation(line: 1759, column: 3, scope: !3903)
!3910 = !DILocation(line: 1761, column: 3, scope: !3903)
!3911 = distinct !{!3911, !3910, !3910}
!3912 = !DILocation(line: 1763, column: 7, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 1763, column: 7)
!3914 = !DILocation(line: 1763, column: 7, scope: !3903)
!3915 = !DILocation(line: 1764, column: 27, scope: !3913)
!3916 = !DILocation(line: 1764, column: 5, scope: !3913)
!3917 = !DILocation(line: 1766, column: 10, scope: !3903)
!3918 = !DILocation(line: 1766, column: 3, scope: !3903)
!3919 = distinct !DISubprogram(name: "perform_integral_promotions", scope: !3, file: !3, line: 1829, type: !2493, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3920)
!3920 = !{!3921, !3922, !3923}
!3921 = !DILocalVariable(name: "exp", arg: 1, scope: !3919, file: !3, line: 1829, type: !460)
!3922 = !DILocalVariable(name: "type", scope: !3919, file: !3, line: 1831, type: !460)
!3923 = !DILocalVariable(name: "code", scope: !3919, file: !3, line: 1832, type: !134)
!3924 = !DILocation(line: 0, scope: !3919)
!3925 = !DILocation(line: 1831, column: 15, scope: !3919)
!3926 = !DILocation(line: 1832, column: 25, scope: !3919)
!3927 = !DILocation(line: 1834, column: 3, scope: !3919)
!3928 = !DILocation(line: 1838, column: 7, scope: !3919)
!3929 = !DILocation(line: 1840, column: 38, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1839, column: 5)
!3931 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1838, column: 7)
!3932 = !DILocation(line: 1843, column: 12, scope: !3930)
!3933 = !DILocation(line: 1844, column: 11, scope: !3930)
!3934 = !DILocation(line: 1844, column: 14, scope: !3930)
!3935 = !DILocation(line: 1840, column: 14, scope: !3930)
!3936 = !DILocation(line: 1846, column: 14, scope: !3930)
!3937 = !DILocation(line: 1846, column: 7, scope: !3930)
!3938 = !DILocation(line: 1851, column: 7, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1851, column: 7)
!3940 = !DILocation(line: 1851, column: 23, scope: !3939)
!3941 = !DILocation(line: 1852, column: 7, scope: !3939)
!3942 = !DILocation(line: 1852, column: 10, scope: !3939)
!3943 = !DILocation(line: 1855, column: 7, scope: !3939)
!3944 = !DILocation(line: 1855, column: 32, scope: !3939)
!3945 = !DILocation(line: 1856, column: 11, scope: !3939)
!3946 = !DILocation(line: 1855, column: 14, scope: !3939)
!3947 = !DILocation(line: 1855, column: 12, scope: !3939)
!3948 = !DILocation(line: 1851, column: 7, scope: !3919)
!3949 = !DILocation(line: 1857, column: 21, scope: !3939)
!3950 = !DILocation(line: 1857, column: 12, scope: !3939)
!3951 = !DILocation(line: 1857, column: 5, scope: !3939)
!3952 = !DILocation(line: 1859, column: 7, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 1859, column: 7)
!3954 = !DILocation(line: 1859, column: 7, scope: !3919)
!3955 = !DILocation(line: 1862, column: 11, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 1862, column: 11)
!3957 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 1860, column: 5)
!3958 = !DILocation(line: 1863, column: 4, scope: !3956)
!3959 = !DILocation(line: 1866, column: 23, scope: !3957)
!3960 = !DILocation(line: 1863, column: 7, scope: !3956)
!3961 = !DILocation(line: 1863, column: 32, scope: !3956)
!3962 = !DILocation(line: 1863, column: 29, scope: !3956)
!3963 = !DILocation(line: 1862, column: 11, scope: !3957)
!3964 = !DILocation(line: 1864, column: 18, scope: !3956)
!3965 = !DILocation(line: 1864, column: 9, scope: !3956)
!3966 = !DILocation(line: 1864, column: 2, scope: !3956)
!3967 = !DILocation(line: 1866, column: 14, scope: !3957)
!3968 = !DILocation(line: 1866, column: 7, scope: !3957)
!3969 = !DILocation(line: 1870, column: 1, scope: !3919)
!3970 = distinct !DISubprogram(name: "default_conversion", scope: !3, file: !3, line: 1878, type: !2493, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3971)
!3971 = !{!3972, !3973, !3974, !3975, !3976}
!3972 = !DILocalVariable(name: "exp", arg: 1, scope: !3970, file: !3, line: 1878, type: !460)
!3973 = !DILocalVariable(name: "orig_exp", scope: !3970, file: !3, line: 1880, type: !460)
!3974 = !DILocalVariable(name: "type", scope: !3970, file: !3, line: 1881, type: !460)
!3975 = !DILocalVariable(name: "code", scope: !3970, file: !3, line: 1882, type: !134)
!3976 = !DILocalVariable(name: "promoted_type", scope: !3970, file: !3, line: 1883, type: !460)
!3977 = !DILocation(line: 0, scope: !3970)
!3978 = !DILocation(line: 1881, column: 15, scope: !3970)
!3979 = !DILocation(line: 1882, column: 25, scope: !3970)
!3980 = !DILocation(line: 1886, column: 3, scope: !3970)
!3981 = !DILocation(line: 1887, column: 7, scope: !3970)
!3982 = !DILocation(line: 1891, column: 7, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1891, column: 7)
!3984 = !DILocation(line: 1891, column: 23, scope: !3983)
!3985 = !DILocation(line: 1891, column: 7, scope: !3970)
!3986 = !DILocation(line: 1892, column: 11, scope: !3983)
!3987 = !DILocation(line: 1892, column: 5, scope: !3983)
!3988 = !DILocation(line: 1896, column: 3, scope: !3970)
!3989 = distinct !{!3989, !3988, !3988}
!3990 = !DILocation(line: 1898, column: 7, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1898, column: 7)
!3992 = !DILocation(line: 1898, column: 7, scope: !3970)
!3993 = !DILocation(line: 1899, column: 27, scope: !3991)
!3994 = !DILocation(line: 1899, column: 5, scope: !3991)
!3995 = !DILocation(line: 1901, column: 12, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1901, column: 7)
!3997 = !DILocation(line: 1901, column: 7, scope: !3970)
!3998 = !DILocation(line: 1903, column: 7, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 1902, column: 5)
!4000 = !DILocation(line: 1904, column: 14, scope: !3999)
!4001 = !DILocation(line: 1904, column: 7, scope: !3999)
!4002 = !DILocation(line: 1907, column: 9, scope: !3970)
!4003 = !DILocation(line: 1908, column: 14, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1908, column: 7)
!4005 = !DILocation(line: 1908, column: 11, scope: !4004)
!4006 = !DILocation(line: 1908, column: 7, scope: !3970)
!4007 = !DILocation(line: 1909, column: 5, scope: !4004)
!4008 = !DILocation(line: 1911, column: 27, scope: !3970)
!4009 = !DILocation(line: 1911, column: 19, scope: !3970)
!4010 = !DILocation(line: 1912, column: 7, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1912, column: 7)
!4012 = !DILocation(line: 1912, column: 7, scope: !3970)
!4013 = !DILocation(line: 1913, column: 12, scope: !4011)
!4014 = !DILocation(line: 1913, column: 5, scope: !4011)
!4015 = !DILocation(line: 1915, column: 7, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1915, column: 7)
!4017 = !DILocation(line: 1915, column: 7, scope: !3970)
!4018 = !DILocation(line: 1916, column: 12, scope: !4016)
!4019 = !DILocation(line: 1916, column: 5, scope: !4016)
!4020 = !DILocation(line: 1919, column: 1, scope: !3970)
!4021 = distinct !DISubprogram(name: "build_component_ref", scope: !3, file: !3, line: 2021, type: !4022, scopeLine: 2022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4024)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!460, !585, !460, !460}
!4024 = !{!4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4037, !4038, !4039}
!4025 = !DILocalVariable(name: "loc", arg: 1, scope: !4021, file: !3, line: 2021, type: !585)
!4026 = !DILocalVariable(name: "datum", arg: 2, scope: !4021, file: !3, line: 2021, type: !460)
!4027 = !DILocalVariable(name: "component", arg: 3, scope: !4021, file: !3, line: 2021, type: !460)
!4028 = !DILocalVariable(name: "type", scope: !4021, file: !3, line: 2023, type: !460)
!4029 = !DILocalVariable(name: "code", scope: !4021, file: !3, line: 2024, type: !134)
!4030 = !DILocalVariable(name: "field", scope: !4021, file: !3, line: 2025, type: !460)
!4031 = !DILocalVariable(name: "ref", scope: !4021, file: !3, line: 2026, type: !460)
!4032 = !DILocalVariable(name: "datum_lvalue", scope: !4021, file: !3, line: 2027, type: !452)
!4033 = !DILocalVariable(name: "subdatum", scope: !4034, file: !3, line: 2057, type: !460)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 2056, column: 2)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 2035, column: 5)
!4036 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 2034, column: 7)
!4037 = !DILocalVariable(name: "quals", scope: !4034, file: !3, line: 2058, type: !453)
!4038 = !DILocalVariable(name: "subtype", scope: !4034, file: !3, line: 2059, type: !460)
!4039 = !DILocalVariable(name: "use_datum_quals", scope: !4034, file: !3, line: 2060, type: !452)
!4040 = !DILocation(line: 0, scope: !4021)
!4041 = !DILocation(line: 2023, column: 15, scope: !4021)
!4042 = !DILocation(line: 2024, column: 25, scope: !4021)
!4043 = !DILocation(line: 2027, column: 23, scope: !4021)
!4044 = !DILocation(line: 2029, column: 8, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 2029, column: 7)
!4046 = !DILocation(line: 2029, column: 7, scope: !4021)
!4047 = !DILocation(line: 2030, column: 12, scope: !4045)
!4048 = !DILocation(line: 2030, column: 5, scope: !4045)
!4049 = !DILocation(line: 2034, column: 27, scope: !4036)
!4050 = !DILocation(line: 2036, column: 12, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 2036, column: 11)
!4052 = !DILocation(line: 2036, column: 11, scope: !4035)
!4053 = !DILocation(line: 2038, column: 4, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 2037, column: 2)
!4055 = !DILocation(line: 2039, column: 11, scope: !4054)
!4056 = !DILocation(line: 2039, column: 4, scope: !4054)
!4057 = !DILocation(line: 2042, column: 15, scope: !4035)
!4058 = !DILocation(line: 2044, column: 12, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 2044, column: 11)
!4060 = !DILocation(line: 2044, column: 11, scope: !4035)
!4061 = !DILocation(line: 0, scope: !4034)
!4062 = !DILocation(line: 2055, column: 7, scope: !4035)
!4063 = !DILocation(line: 2046, column: 4, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 2045, column: 2)
!4065 = !DILocation(line: 2047, column: 11, scope: !4064)
!4066 = !DILocation(line: 2047, column: 4, scope: !4064)
!4067 = !DILocation(line: 2042, column: 13, scope: !4035)
!4068 = !DILocation(line: 2057, column: 20, scope: !4034)
!4069 = !DILocation(line: 2062, column: 8, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2062, column: 8)
!4071 = !DILocation(line: 2062, column: 32, scope: !4070)
!4072 = !DILocation(line: 2062, column: 29, scope: !4070)
!4073 = !DILocation(line: 2062, column: 8, scope: !4034)
!4074 = !DILocation(line: 2063, column: 6, scope: !4070)
!4075 = !DILocation(line: 2070, column: 9, scope: !4034)
!4076 = !DILocation(line: 2070, column: 12, scope: !4034)
!4077 = !DILocation(line: 2070, column: 45, scope: !4034)
!4078 = !DILocation(line: 2072, column: 12, scope: !4034)
!4079 = !DILocation(line: 2073, column: 8, scope: !4034)
!4080 = !DILocation(line: 2074, column: 15, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2073, column: 8)
!4082 = !DILocation(line: 2074, column: 12, scope: !4081)
!4083 = !DILocation(line: 2074, column: 6, scope: !4081)
!4084 = !DILocation(line: 2075, column: 38, scope: !4034)
!4085 = !DILocation(line: 2075, column: 14, scope: !4034)
!4086 = !DILocation(line: 2077, column: 10, scope: !4034)
!4087 = !DILocation(line: 2079, column: 4, scope: !4034)
!4088 = !DILocation(line: 2080, column: 8, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2080, column: 8)
!4090 = !DILocation(line: 2081, column: 8, scope: !4089)
!4091 = !DILocation(line: 2081, column: 28, scope: !4089)
!4092 = !DILocation(line: 2081, column: 31, scope: !4089)
!4093 = !DILocation(line: 2080, column: 8, scope: !4034)
!4094 = !DILocation(line: 2082, column: 6, scope: !4089)
!4095 = !DILocation(line: 2082, column: 26, scope: !4089)
!4096 = !DILocation(line: 2083, column: 8, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2083, column: 8)
!4098 = !DILocation(line: 2084, column: 8, scope: !4097)
!4099 = !DILocation(line: 2084, column: 28, scope: !4097)
!4100 = !DILocation(line: 2084, column: 31, scope: !4097)
!4101 = !DILocation(line: 2083, column: 8, scope: !4034)
!4102 = !DILocation(line: 2085, column: 6, scope: !4097)
!4103 = !DILocation(line: 2085, column: 31, scope: !4097)
!4104 = !DILocation(line: 2087, column: 8, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2087, column: 8)
!4106 = !DILocation(line: 2087, column: 8, scope: !4034)
!4107 = !DILocation(line: 2088, column: 6, scope: !4105)
!4108 = !DILocation(line: 2092, column: 12, scope: !4034)
!4109 = !DILocation(line: 2093, column: 2, scope: !4035)
!4110 = !DILocation(line: 0, scope: !4035)
!4111 = !DILocation(line: 2093, column: 2, scope: !4034)
!4112 = distinct !{!4112, !4062, !4113}
!4113 = !DILocation(line: 2094, column: 19, scope: !4035)
!4114 = !DILocation(line: 2099, column: 5, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 2098, column: 12)
!4116 = !DILocation(line: 2103, column: 10, scope: !4021)
!4117 = !DILocation(line: 2103, column: 3, scope: !4021)
!4118 = !DILocation(line: 2104, column: 1, scope: !4021)
!4119 = distinct !DISubprogram(name: "lookup_field", scope: !3, file: !3, line: 1931, type: !2612, scopeLine: 1932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4120)
!4120 = !{!4121, !4122, !4123, !4124, !4125, !4128, !4129, !4130, !4131, !4138}
!4121 = !DILocalVariable(name: "decl", arg: 1, scope: !4119, file: !3, line: 1931, type: !460)
!4122 = !DILocalVariable(name: "component", arg: 2, scope: !4119, file: !3, line: 1931, type: !460)
!4123 = !DILocalVariable(name: "type", scope: !4119, file: !3, line: 1933, type: !460)
!4124 = !DILocalVariable(name: "field", scope: !4119, file: !3, line: 1934, type: !460)
!4125 = !DILocalVariable(name: "bot", scope: !4126, file: !3, line: 1943, type: !453)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1942, column: 5)
!4127 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 1941, column: 7)
!4128 = !DILocalVariable(name: "top", scope: !4126, file: !3, line: 1943, type: !453)
!4129 = !DILocalVariable(name: "half", scope: !4126, file: !3, line: 1943, type: !453)
!4130 = !DILocalVariable(name: "field_array", scope: !4126, file: !3, line: 1944, type: !823)
!4131 = !DILocalVariable(name: "anon", scope: !4132, file: !3, line: 1963, type: !460)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 1962, column: 7)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 1960, column: 9)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 1958, column: 3)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 1955, column: 6)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 1954, column: 8)
!4137 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1950, column: 2)
!4138 = !DILocalVariable(name: "anon", scope: !4139, file: !3, line: 1999, type: !460)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 1998, column: 6)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 1995, column: 8)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 1994, column: 2)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 1993, column: 7)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 1993, column: 7)
!4144 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1992, column: 5)
!4145 = !DILocation(line: 0, scope: !4119)
!4146 = !DILocation(line: 1933, column: 15, scope: !4119)
!4147 = !DILocation(line: 1941, column: 7, scope: !4127)
!4148 = !DILocation(line: 1941, column: 33, scope: !4127)
!4149 = !DILocation(line: 1941, column: 63, scope: !4127)
!4150 = !DILocation(line: 1941, column: 36, scope: !4127)
!4151 = !DILocation(line: 1941, column: 7, scope: !4119)
!4152 = !DILocation(line: 0, scope: !4126)
!4153 = !DILocation(line: 1946, column: 15, scope: !4126)
!4154 = !DILocation(line: 1948, column: 43, scope: !4126)
!4155 = !DILocation(line: 1949, column: 7, scope: !4126)
!4156 = !DILocation(line: 1949, column: 18, scope: !4126)
!4157 = !DILocation(line: 1949, column: 24, scope: !4126)
!4158 = !DILocation(line: 1951, column: 22, scope: !4137)
!4159 = !DILocation(line: 1951, column: 27, scope: !4137)
!4160 = !DILocation(line: 1952, column: 27, scope: !4137)
!4161 = !DILocation(line: 1952, column: 12, scope: !4137)
!4162 = !DILocation(line: 1954, column: 8, scope: !4136)
!4163 = !DILocation(line: 1954, column: 26, scope: !4136)
!4164 = !DILocation(line: 1954, column: 8, scope: !4137)
!4165 = !DILocation(line: 1957, column: 8, scope: !4135)
!4166 = !DILocation(line: 0, scope: !4137)
!4167 = !DILocation(line: 1957, column: 15, scope: !4135)
!4168 = !DILocation(line: 1957, column: 44, scope: !4135)
!4169 = !DILocation(line: 1959, column: 28, scope: !4134)
!4170 = !DILocation(line: 1960, column: 9, scope: !4133)
!4171 = !DILocation(line: 1960, column: 39, scope: !4133)
!4172 = !DILocation(line: 1961, column: 9, scope: !4133)
!4173 = !DILocation(line: 1961, column: 42, scope: !4133)
!4174 = !DILocation(line: 1960, column: 9, scope: !4134)
!4175 = !DILocation(line: 1963, column: 21, scope: !4132)
!4176 = !DILocation(line: 0, scope: !4132)
!4177 = !DILocation(line: 1965, column: 13, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1965, column: 13)
!4179 = !DILocation(line: 1965, column: 13, scope: !4132)
!4180 = !DILocation(line: 1966, column: 11, scope: !4178)
!4181 = !DILocation(line: 1966, column: 4, scope: !4178)
!4182 = distinct !{!4182, !4165, !4183}
!4183 = !DILocation(line: 1968, column: 3, scope: !4135)
!4184 = !DILocation(line: 1971, column: 16, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 1971, column: 12)
!4186 = !DILocation(line: 1971, column: 12, scope: !4135)
!4187 = distinct !{!4187, !4155, !4188}
!4188 = !DILocation(line: 1984, column: 2, scope: !4126)
!4189 = !DILocation(line: 1978, column: 26, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 1978, column: 8)
!4191 = !DILocation(line: 1978, column: 8, scope: !4137)
!4192 = !DILocation(line: 1980, column: 26, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 1980, column: 8)
!4194 = !DILocation(line: 1986, column: 11, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1986, column: 11)
!4196 = !DILocation(line: 1986, column: 40, scope: !4195)
!4197 = !DILocation(line: 1986, column: 11, scope: !4126)
!4198 = !DILocation(line: 1987, column: 2, scope: !4195)
!4199 = !DILocation(line: 1988, column: 16, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 1988, column: 16)
!4201 = !DILocation(line: 1988, column: 34, scope: !4200)
!4202 = !DILocation(line: 1988, column: 16, scope: !4195)
!4203 = !DILocation(line: 1990, column: 5, scope: !4127)
!4204 = !DILocation(line: 1993, column: 20, scope: !4143)
!4205 = !DILocation(line: 1993, column: 12, scope: !4143)
!4206 = !DILocation(line: 0, scope: !4143)
!4207 = !DILocation(line: 1993, column: 7, scope: !4143)
!4208 = !DILocation(line: 1995, column: 8, scope: !4140)
!4209 = !DILocation(line: 1995, column: 26, scope: !4140)
!4210 = !DILocation(line: 1996, column: 8, scope: !4140)
!4211 = !DILocation(line: 1996, column: 12, scope: !4140)
!4212 = !DILocation(line: 1996, column: 42, scope: !4140)
!4213 = !DILocation(line: 1997, column: 5, scope: !4140)
!4214 = !DILocation(line: 1997, column: 38, scope: !4140)
!4215 = !DILocation(line: 1995, column: 8, scope: !4141)
!4216 = !DILocation(line: 1999, column: 20, scope: !4139)
!4217 = !DILocation(line: 0, scope: !4139)
!4218 = !DILocation(line: 2001, column: 12, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 2001, column: 12)
!4220 = !DILocation(line: 2001, column: 12, scope: !4139)
!4221 = !DILocation(line: 2002, column: 10, scope: !4219)
!4222 = !DILocation(line: 2002, column: 3, scope: !4219)
!4223 = !DILocation(line: 2005, column: 8, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 2005, column: 8)
!4225 = !DILocation(line: 2005, column: 26, scope: !4224)
!4226 = !DILocation(line: 2005, column: 8, scope: !4141)
!4227 = !DILocation(line: 1993, column: 55, scope: !4142)
!4228 = !DILocation(line: 1993, column: 7, scope: !4142)
!4229 = distinct !{!4229, !4207, !4230}
!4230 = !DILocation(line: 2007, column: 2, scope: !4143)
!4231 = !DILocation(line: 2009, column: 11, scope: !4144)
!4232 = !DILocation(line: 0, scope: !4127)
!4233 = !DILocation(line: 2013, column: 10, scope: !4119)
!4234 = !DILocation(line: 2013, column: 3, scope: !4119)
!4235 = !DILocation(line: 2014, column: 1, scope: !4119)
!4236 = distinct !DISubprogram(name: "build_indirect_ref", scope: !3, file: !3, line: 2113, type: !4237, scopeLine: 2114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4240)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!460, !585, !460, !4239}
!4239 = !DIDerivedType(tag: DW_TAG_typedef, name: "ref_operator", file: !378, line: 406, baseType: !377)
!4240 = !{!4241, !4242, !4243, !4244, !4245, !4246, !4247}
!4241 = !DILocalVariable(name: "loc", arg: 1, scope: !4236, file: !3, line: 2113, type: !585)
!4242 = !DILocalVariable(name: "ptr", arg: 2, scope: !4236, file: !3, line: 2113, type: !460)
!4243 = !DILocalVariable(name: "errstring", arg: 3, scope: !4236, file: !3, line: 2113, type: !4239)
!4244 = !DILocalVariable(name: "pointer", scope: !4236, file: !3, line: 2115, type: !460)
!4245 = !DILocalVariable(name: "type", scope: !4236, file: !3, line: 2116, type: !460)
!4246 = !DILocalVariable(name: "ref", scope: !4236, file: !3, line: 2117, type: !460)
!4247 = !DILocalVariable(name: "t", scope: !4248, file: !3, line: 2143, type: !460)
!4248 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2142, column: 2)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 2133, column: 11)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 2120, column: 5)
!4251 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 2119, column: 7)
!4252 = !DILocation(line: 0, scope: !4236)
!4253 = !DILocation(line: 2115, column: 18, scope: !4236)
!4254 = !DILocation(line: 2116, column: 15, scope: !4236)
!4255 = !DILocation(line: 2119, column: 7, scope: !4251)
!4256 = !DILocation(line: 2119, column: 24, scope: !4251)
!4257 = !DILocation(line: 0, scope: !4251)
!4258 = !DILocation(line: 2119, column: 7, scope: !4236)
!4259 = !DILocation(line: 2121, column: 11, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 2121, column: 11)
!4261 = !DILocation(line: 2122, column: 11, scope: !4260)
!4262 = !DILocation(line: 2122, column: 34, scope: !4260)
!4263 = !DILocation(line: 2121, column: 11, scope: !4250)
!4264 = !DILocation(line: 2127, column: 8, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 2127, column: 8)
!4266 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 2123, column: 2)
!4267 = !DILocation(line: 2127, column: 29, scope: !4265)
!4268 = !DILocation(line: 2127, column: 8, scope: !4266)
!4269 = !DILocation(line: 2128, column: 35, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 2128, column: 10)
!4271 = !DILocation(line: 2129, column: 13, scope: !4270)
!4272 = !DILocation(line: 2128, column: 10, scope: !4270)
!4273 = !DILocation(line: 2128, column: 10, scope: !4265)
!4274 = !DILocation(line: 2133, column: 11, scope: !4249)
!4275 = !DILocation(line: 2130, column: 34, scope: !4270)
!4276 = !DILocation(line: 2130, column: 8, scope: !4270)
!4277 = !DILocation(line: 2133, column: 31, scope: !4249)
!4278 = !DILocation(line: 2134, column: 4, scope: !4249)
!4279 = !DILocation(line: 0, scope: !4248)
!4280 = !DILocation(line: 2143, column: 13, scope: !4248)
!4281 = !DILocation(line: 2134, column: 8, scope: !4249)
!4282 = !DILocation(line: 2135, column: 11, scope: !4249)
!4283 = !DILocation(line: 2135, column: 8, scope: !4249)
!4284 = !DILocation(line: 2133, column: 11, scope: !4250)
!4285 = !DILocation(line: 2138, column: 4, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2136, column: 2)
!4287 = !DILocation(line: 2139, column: 4, scope: !4286)
!4288 = !DILocation(line: 2145, column: 10, scope: !4248)
!4289 = !DILocation(line: 2147, column: 9, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 2147, column: 8)
!4291 = !DILocation(line: 0, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 2152, column: 8)
!4293 = !DILocation(line: 2152, column: 8, scope: !4292)
!4294 = !DILocation(line: 2147, column: 37, scope: !4290)
!4295 = !DILocation(line: 2147, column: 54, scope: !4290)
!4296 = !DILocation(line: 2147, column: 8, scope: !4248)
!4297 = !DILocation(line: 2149, column: 8, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 2148, column: 6)
!4299 = !DILocation(line: 2150, column: 15, scope: !4298)
!4300 = !DILocation(line: 2150, column: 8, scope: !4298)
!4301 = !DILocation(line: 2152, column: 27, scope: !4292)
!4302 = !DILocation(line: 2152, column: 57, scope: !4292)
!4303 = !DILocation(line: 2152, column: 24, scope: !4292)
!4304 = !DILocation(line: 2153, column: 6, scope: !4292)
!4305 = !DILocation(line: 2162, column: 26, scope: !4248)
!4306 = !DILocation(line: 2162, column: 4, scope: !4248)
!4307 = !DILocation(line: 2162, column: 24, scope: !4248)
!4308 = !DILocation(line: 2164, column: 8, scope: !4248)
!4309 = !DILocation(line: 2164, column: 26, scope: !4248)
!4310 = !DILocation(line: 2164, column: 29, scope: !4248)
!4311 = !DILocation(line: 2164, column: 6, scope: !4248)
!4312 = !DILocation(line: 2165, column: 31, scope: !4248)
!4313 = !DILocation(line: 2165, column: 29, scope: !4248)
!4314 = !DILocation(line: 2166, column: 4, scope: !4248)
!4315 = !DILocation(line: 2167, column: 4, scope: !4248)
!4316 = !DILocation(line: 2170, column: 32, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 2170, column: 12)
!4318 = !DILocation(line: 2170, column: 12, scope: !4251)
!4319 = !DILocation(line: 2171, column: 5, scope: !4317)
!4320 = !DILocation(line: 2174, column: 12, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 2172, column: 7)
!4322 = !DILocation(line: 2177, column: 12, scope: !4321)
!4323 = !DILocation(line: 2179, column: 12, scope: !4321)
!4324 = !DILocation(line: 2182, column: 12, scope: !4321)
!4325 = !DILocation(line: 2184, column: 12, scope: !4321)
!4326 = !DILocation(line: 2187, column: 12, scope: !4321)
!4327 = !DILocation(line: 2189, column: 12, scope: !4321)
!4328 = !DILocation(line: 2190, column: 7, scope: !4321)
!4329 = !DILocation(line: 2191, column: 10, scope: !4236)
!4330 = !DILocation(line: 2191, column: 3, scope: !4236)
!4331 = !DILocation(line: 2192, column: 1, scope: !4236)
!4332 = distinct !DISubprogram(name: "build_array_ref", scope: !3, file: !3, line: 2206, type: !4022, scopeLine: 2207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4333)
!4333 = !{!4334, !4335, !4336, !4337, !4338, !4339, !4342, !4345, !4346, !4349}
!4334 = !DILocalVariable(name: "loc", arg: 1, scope: !4332, file: !3, line: 2206, type: !585)
!4335 = !DILocalVariable(name: "array", arg: 2, scope: !4332, file: !3, line: 2206, type: !460)
!4336 = !DILocalVariable(name: "index", arg: 3, scope: !4332, file: !3, line: 2206, type: !460)
!4337 = !DILocalVariable(name: "ret", scope: !4332, file: !3, line: 2208, type: !460)
!4338 = !DILocalVariable(name: "swapped", scope: !4332, file: !3, line: 2209, type: !452)
!4339 = !DILocalVariable(name: "temp", scope: !4340, file: !3, line: 2217, type: !460)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 2216, column: 5)
!4341 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2214, column: 7)
!4342 = !DILocalVariable(name: "rval", scope: !4343, file: !3, line: 2254, type: !460)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 2253, column: 5)
!4344 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2252, column: 7)
!4345 = !DILocalVariable(name: "type", scope: !4343, file: !3, line: 2254, type: !460)
!4346 = !DILocalVariable(name: "foo", scope: !4347, file: !3, line: 2281, type: !460)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 2280, column: 2)
!4348 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 2279, column: 11)
!4349 = !DILocalVariable(name: "ar", scope: !4350, file: !3, line: 2315, type: !460)
!4350 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 2314, column: 5)
!4351 = !DILocation(line: 0, scope: !4332)
!4352 = !DILocation(line: 2210, column: 7, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2210, column: 7)
!4354 = !DILocation(line: 2210, column: 28, scope: !4353)
!4355 = !DILocation(line: 2210, column: 25, scope: !4353)
!4356 = !DILocation(line: 2211, column: 7, scope: !4353)
!4357 = !DILocation(line: 2211, column: 10, scope: !4353)
!4358 = !DILocation(line: 2211, column: 28, scope: !4353)
!4359 = !DILocation(line: 2210, column: 7, scope: !4332)
!4360 = !DILocation(line: 2212, column: 5, scope: !4353)
!4361 = !DILocation(line: 2214, column: 7, scope: !4341)
!4362 = !DILocation(line: 2214, column: 37, scope: !4341)
!4363 = !DILocation(line: 2215, column: 7, scope: !4341)
!4364 = !DILocation(line: 2215, column: 40, scope: !4341)
!4365 = !DILocation(line: 2214, column: 7, scope: !4332)
!4366 = !DILocation(line: 2218, column: 11, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 2218, column: 11)
!4368 = !DILocation(line: 2218, column: 41, scope: !4367)
!4369 = !DILocation(line: 2219, column: 4, scope: !4367)
!4370 = !DILocation(line: 2219, column: 37, scope: !4367)
!4371 = !DILocation(line: 2218, column: 11, scope: !4340)
!4372 = !DILocation(line: 2221, column: 4, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 2220, column: 2)
!4374 = !DILocation(line: 2222, column: 11, scope: !4373)
!4375 = !DILocation(line: 2222, column: 4, scope: !4373)
!4376 = !DILocation(line: 0, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2230, column: 7)
!4378 = !DILocation(line: 2230, column: 8, scope: !4377)
!4379 = !DILocation(line: 2209, column: 8, scope: !4332)
!4380 = !DILocation(line: 2230, column: 7, scope: !4332)
!4381 = !DILocation(line: 2232, column: 7, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 2231, column: 5)
!4383 = !DILocation(line: 2233, column: 14, scope: !4382)
!4384 = !DILocation(line: 2233, column: 7, scope: !4382)
!4385 = !DILocation(line: 2236, column: 7, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2236, column: 7)
!4387 = !DILocation(line: 2236, column: 49, scope: !4386)
!4388 = !DILocation(line: 2236, column: 7, scope: !4332)
!4389 = !DILocation(line: 2238, column: 7, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 2237, column: 5)
!4391 = !DILocation(line: 2239, column: 14, scope: !4390)
!4392 = !DILocation(line: 2239, column: 7, scope: !4390)
!4393 = !DILocation(line: 2244, column: 8, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2244, column: 7)
!4395 = !DILocation(line: 2244, column: 7, scope: !4332)
!4396 = !DILocation(line: 2245, column: 6, scope: !4394)
!4397 = !DILocation(line: 2248, column: 11, scope: !4332)
!4398 = !DILocation(line: 2250, column: 3, scope: !4332)
!4399 = !DILocation(line: 2252, column: 7, scope: !4344)
!4400 = !DILocation(line: 2252, column: 37, scope: !4344)
!4401 = !DILocation(line: 2252, column: 7, scope: !4332)
!4402 = !DILocation(line: 2260, column: 11, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 2260, column: 11)
!4404 = !DILocation(line: 2260, column: 29, scope: !4403)
!4405 = !DILocation(line: 2261, column: 4, scope: !4403)
!4406 = !DILocation(line: 2261, column: 8, scope: !4403)
!4407 = !DILocation(line: 2262, column: 8, scope: !4403)
!4408 = !DILocation(line: 2262, column: 11, scope: !4403)
!4409 = !DILocation(line: 2262, column: 65, scope: !4403)
!4410 = !DILocation(line: 2260, column: 11, scope: !4343)
!4411 = !DILocation(line: 2264, column: 9, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 2264, column: 8)
!4413 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 2263, column: 2)
!4414 = !DILocation(line: 2264, column: 8, scope: !4413)
!4415 = !DILocation(line: 2271, column: 11, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 2271, column: 11)
!4417 = !DILocation(line: 2265, column: 13, scope: !4412)
!4418 = !DILocation(line: 2265, column: 6, scope: !4412)
!4419 = !DILocation(line: 2271, column: 29, scope: !4416)
!4420 = !DILocation(line: 2272, column: 4, scope: !4416)
!4421 = !DILocation(line: 2272, column: 7, scope: !4416)
!4422 = !DILocation(line: 2273, column: 4, scope: !4416)
!4423 = !DILocation(line: 2273, column: 8, scope: !4416)
!4424 = !DILocation(line: 2271, column: 11, scope: !4343)
!4425 = !DILocation(line: 2275, column: 9, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2275, column: 8)
!4427 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 2274, column: 2)
!4428 = !DILocation(line: 2275, column: 8, scope: !4427)
!4429 = !DILocation(line: 2276, column: 13, scope: !4426)
!4430 = !DILocation(line: 2276, column: 6, scope: !4426)
!4431 = !DILocation(line: 2279, column: 11, scope: !4348)
!4432 = !DILocation(line: 2279, column: 11, scope: !4343)
!4433 = !DILocation(line: 2282, column: 4, scope: !4347)
!4434 = !DILocation(line: 0, scope: !4347)
!4435 = !DILocation(line: 2282, column: 11, scope: !4347)
!4436 = !DILocation(line: 2282, column: 27, scope: !4347)
!4437 = !DILocation(line: 2283, column: 12, scope: !4347)
!4438 = distinct !{!4438, !4433, !4437}
!4439 = !DILocation(line: 2284, column: 24, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 2284, column: 8)
!4441 = !DILocation(line: 2284, column: 36, scope: !4440)
!4442 = !DILocation(line: 2284, column: 39, scope: !4440)
!4443 = !DILocation(line: 2284, column: 8, scope: !4347)
!4444 = !DILocation(line: 2285, column: 6, scope: !4440)
!4445 = !DILocation(line: 2287, column: 14, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 2287, column: 13)
!4447 = !DILocation(line: 2287, column: 26, scope: !4446)
!4448 = !DILocation(line: 2287, column: 30, scope: !4446)
!4449 = !DILocation(line: 2287, column: 13, scope: !4440)
!4450 = !DILocation(line: 2288, column: 6, scope: !4446)
!4451 = !DILocation(line: 2292, column: 14, scope: !4343)
!4452 = !DILocation(line: 0, scope: !4343)
!4453 = !DILocation(line: 2293, column: 14, scope: !4343)
!4454 = !DILocation(line: 2297, column: 6, scope: !4343)
!4455 = !DILocation(line: 2298, column: 8, scope: !4343)
!4456 = !DILocation(line: 2298, column: 6, scope: !4343)
!4457 = !DILocation(line: 2296, column: 7, scope: !4343)
!4458 = !DILocation(line: 2297, column: 2, scope: !4343)
!4459 = !DILocation(line: 2300, column: 6, scope: !4343)
!4460 = !DILocation(line: 2301, column: 8, scope: !4343)
!4461 = !DILocation(line: 2300, column: 2, scope: !4343)
!4462 = !DILocation(line: 2303, column: 6, scope: !4343)
!4463 = !DILocation(line: 2308, column: 8, scope: !4343)
!4464 = !DILocation(line: 2308, column: 6, scope: !4343)
!4465 = !DILocation(line: 2303, column: 2, scope: !4343)
!4466 = !DILocation(line: 2309, column: 13, scope: !4343)
!4467 = !DILocation(line: 2310, column: 7, scope: !4343)
!4468 = !DILocation(line: 2311, column: 7, scope: !4343)
!4469 = !DILocation(line: 2315, column: 17, scope: !4350)
!4470 = !DILocation(line: 0, scope: !4350)
!4471 = !DILocation(line: 2317, column: 17, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2317, column: 11)
!4473 = !DILocation(line: 2317, column: 14, scope: !4472)
!4474 = !DILocation(line: 2317, column: 11, scope: !4350)
!4475 = !DILocation(line: 2320, column: 7, scope: !4350)
!4476 = !DILocation(line: 2321, column: 7, scope: !4350)
!4477 = !DILocation(line: 2324, column: 8, scope: !4350)
!4478 = !DILocation(line: 2323, column: 14, scope: !4350)
!4479 = !DILocation(line: 2323, column: 7, scope: !4350)
!4480 = !DILocation(line: 2327, column: 1, scope: !4332)
!4481 = distinct !DISubprogram(name: "c_mark_addressable", scope: !3, file: !3, line: 3841, type: !4482, scopeLine: 3842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4484)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!452, !460}
!4484 = !{!4485, !4486}
!4485 = !DILocalVariable(name: "exp", arg: 1, scope: !4481, file: !3, line: 3841, type: !460)
!4486 = !DILocalVariable(name: "x", scope: !4481, file: !3, line: 3843, type: !460)
!4487 = !DILocation(line: 0, scope: !4481)
!4488 = !DILocation(line: 3845, column: 3, scope: !4481)
!4489 = !DILocation(line: 3846, column: 13, scope: !4481)
!4490 = !DILocation(line: 3846, column: 5, scope: !4481)
!4491 = !DILocation(line: 3849, column: 6, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 3849, column: 6)
!4493 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 3847, column: 7)
!4494 = !DILocation(line: 3849, column: 6, scope: !4493)
!4495 = !DILocation(line: 3851, column: 6, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 3850, column: 4)
!4497 = !DILocation(line: 3853, column: 6, scope: !4496)
!4498 = !DILocation(line: 3862, column: 6, scope: !4493)
!4499 = distinct !{!4499, !4488, !4500}
!4500 = !DILocation(line: 3900, column: 5, scope: !4481)
!4501 = !DILocation(line: 3867, column: 23, scope: !4493)
!4502 = !DILocation(line: 3868, column: 2, scope: !4493)
!4503 = !DILocation(line: 3874, column: 6, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 3874, column: 6)
!4505 = !DILocation(line: 3875, column: 6, scope: !4504)
!4506 = !DILocation(line: 3875, column: 9, scope: !4504)
!4507 = !DILocation(line: 3874, column: 6, scope: !4493)
!4508 = !DILocation(line: 3877, column: 10, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 3877, column: 10)
!4510 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 3876, column: 4)
!4511 = !DILocation(line: 3877, column: 26, scope: !4509)
!4512 = !DILocation(line: 3877, column: 29, scope: !4509)
!4513 = !DILocation(line: 3877, column: 45, scope: !4509)
!4514 = !DILocation(line: 3877, column: 48, scope: !4509)
!4515 = !DILocation(line: 3877, column: 10, scope: !4510)
!4516 = !DILocation(line: 3879, column: 3, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4509, file: !3, line: 3878, column: 8)
!4518 = !DILocation(line: 3881, column: 3, scope: !4517)
!4519 = !DILocation(line: 3883, column: 15, scope: !4510)
!4520 = !DILocation(line: 3883, column: 6, scope: !4510)
!4521 = !DILocation(line: 3896, column: 23, scope: !4493)
!4522 = !DILocation(line: 3884, column: 4, scope: !4510)
!4523 = !DILocation(line: 3885, column: 11, scope: !4504)
!4524 = !DILocation(line: 3887, column: 10, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 3887, column: 10)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 3886, column: 4)
!4527 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 3885, column: 11)
!4528 = !DILocation(line: 3887, column: 26, scope: !4525)
!4529 = !DILocation(line: 3887, column: 29, scope: !4525)
!4530 = !DILocation(line: 3887, column: 45, scope: !4525)
!4531 = !DILocation(line: 3887, column: 48, scope: !4525)
!4532 = !DILocation(line: 3887, column: 10, scope: !4526)
!4533 = !DILocation(line: 3888, column: 8, scope: !4525)
!4534 = !DILocation(line: 3890, column: 8, scope: !4525)
!4535 = !DILocation(line: 3896, column: 2, scope: !4493)
!4536 = !DILocation(line: 3901, column: 1, scope: !4481)
!4537 = !DILocation(line: 0, scope: !4493)
!4538 = distinct !DISubprogram(name: "build_binary_op", scope: !3, file: !3, line: 9032, type: !4539, scopeLine: 9034, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4541)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!460, !585, !134, !460, !460, !453}
!4541 = !{!4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4579, !4580, !4584, !4585, !4586, !4587, !4588, !4591, !4595, !4596, !4597, !4601, !4604, !4605, !4606, !4609, !4610, !4611, !4614, !4615, !4618, !4619, !4620, !4621, !4622, !4625, !4626, !4627, !4628}
!4542 = !DILocalVariable(name: "location", arg: 1, scope: !4538, file: !3, line: 9032, type: !585)
!4543 = !DILocalVariable(name: "code", arg: 2, scope: !4538, file: !3, line: 9032, type: !134)
!4544 = !DILocalVariable(name: "orig_op0", arg: 3, scope: !4538, file: !3, line: 9033, type: !460)
!4545 = !DILocalVariable(name: "orig_op1", arg: 4, scope: !4538, file: !3, line: 9033, type: !460)
!4546 = !DILocalVariable(name: "convert_p", arg: 5, scope: !4538, file: !3, line: 9033, type: !453)
!4547 = !DILocalVariable(name: "type0", scope: !4538, file: !3, line: 9035, type: !460)
!4548 = !DILocalVariable(name: "type1", scope: !4538, file: !3, line: 9035, type: !460)
!4549 = !DILocalVariable(name: "orig_type0", scope: !4538, file: !3, line: 9035, type: !460)
!4550 = !DILocalVariable(name: "orig_type1", scope: !4538, file: !3, line: 9035, type: !460)
!4551 = !DILocalVariable(name: "eptype", scope: !4538, file: !3, line: 9036, type: !460)
!4552 = !DILocalVariable(name: "code0", scope: !4538, file: !3, line: 9037, type: !134)
!4553 = !DILocalVariable(name: "code1", scope: !4538, file: !3, line: 9037, type: !134)
!4554 = !DILocalVariable(name: "op0", scope: !4538, file: !3, line: 9038, type: !460)
!4555 = !DILocalVariable(name: "op1", scope: !4538, file: !3, line: 9038, type: !460)
!4556 = !DILocalVariable(name: "ret", scope: !4538, file: !3, line: 9039, type: !460)
!4557 = !DILocalVariable(name: "invalid_op_diag", scope: !4538, file: !3, line: 9040, type: !458)
!4558 = !DILocalVariable(name: "op0_int_operands", scope: !4538, file: !3, line: 9041, type: !452)
!4559 = !DILocalVariable(name: "op1_int_operands", scope: !4538, file: !3, line: 9041, type: !452)
!4560 = !DILocalVariable(name: "int_const", scope: !4538, file: !3, line: 9042, type: !452)
!4561 = !DILocalVariable(name: "int_const_or_overflow", scope: !4538, file: !3, line: 9042, type: !452)
!4562 = !DILocalVariable(name: "int_operands", scope: !4538, file: !3, line: 9042, type: !452)
!4563 = !DILocalVariable(name: "resultcode", scope: !4538, file: !3, line: 9047, type: !134)
!4564 = !DILocalVariable(name: "result_type", scope: !4538, file: !3, line: 9051, type: !460)
!4565 = !DILocalVariable(name: "semantic_result_type", scope: !4538, file: !3, line: 9055, type: !460)
!4566 = !DILocalVariable(name: "converted", scope: !4538, file: !3, line: 9060, type: !453)
!4567 = !DILocalVariable(name: "build_type", scope: !4538, file: !3, line: 9064, type: !460)
!4568 = !DILocalVariable(name: "final_type", scope: !4538, file: !3, line: 9068, type: !460)
!4569 = !DILocalVariable(name: "shorten", scope: !4538, file: !3, line: 9076, type: !453)
!4570 = !DILocalVariable(name: "short_compare", scope: !4538, file: !3, line: 9081, type: !453)
!4571 = !DILocalVariable(name: "short_shift", scope: !4538, file: !3, line: 9085, type: !453)
!4572 = !DILocalVariable(name: "common", scope: !4538, file: !3, line: 9088, type: !453)
!4573 = !DILocalVariable(name: "objc_ok", scope: !4538, file: !3, line: 9091, type: !452)
!4574 = !DILocalVariable(name: "may_need_excess_precision", scope: !4538, file: !3, line: 9095, type: !452)
!4575 = !DILocalVariable(name: "tcode0", scope: !4576, file: !3, line: 9248, type: !134)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 9247, column: 2)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9241, column: 11)
!4578 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9194, column: 5)
!4579 = !DILocalVariable(name: "tcode1", scope: !4576, file: !3, line: 9248, type: !134)
!4580 = !DILocalVariable(name: "tt0", scope: !4581, file: !3, line: 9438, type: !460)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 9437, column: 2)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 9436, column: 16)
!4583 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9431, column: 11)
!4584 = !DILocalVariable(name: "tt1", scope: !4581, file: !3, line: 9439, type: !460)
!4585 = !DILocalVariable(name: "as0", scope: !4581, file: !3, line: 9440, type: !2994)
!4586 = !DILocalVariable(name: "as1", scope: !4581, file: !3, line: 9441, type: !2994)
!4587 = !DILocalVariable(name: "as_common", scope: !4581, file: !3, line: 9442, type: !2994)
!4588 = !DILocalVariable(name: "qual", scope: !4589, file: !3, line: 9479, type: !453)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 9478, column: 6)
!4590 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 9477, column: 8)
!4591 = !DILocalVariable(name: "as0", scope: !4592, file: !3, line: 9526, type: !2994)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 9525, column: 2)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 9524, column: 16)
!4594 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9519, column: 11)
!4595 = !DILocalVariable(name: "as1", scope: !4592, file: !3, line: 9527, type: !2994)
!4596 = !DILocalVariable(name: "as_common", scope: !4592, file: !3, line: 9528, type: !2994)
!4597 = !DILocalVariable(name: "qual", scope: !4598, file: !3, line: 9549, type: !453)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 9548, column: 6)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 9541, column: 13)
!4600 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 9530, column: 8)
!4601 = !DILocalVariable(name: "first_complex", scope: !4602, file: !3, line: 9606, type: !452)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 9605, column: 5)
!4603 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9600, column: 7)
!4604 = !DILocalVariable(name: "second_complex", scope: !4602, file: !3, line: 9607, type: !452)
!4605 = !DILocalVariable(name: "none_complex", scope: !4602, file: !3, line: 9608, type: !453)
!4606 = !DILocalVariable(name: "real_type", scope: !4607, file: !3, line: 9629, type: !460)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 9624, column: 2)
!4608 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 9617, column: 11)
!4609 = !DILocalVariable(name: "real", scope: !4607, file: !3, line: 9630, type: !460)
!4610 = !DILocalVariable(name: "imag", scope: !4607, file: !3, line: 9630, type: !460)
!4611 = !DILocalVariable(name: "unsigned_arg", scope: !4612, file: !3, line: 9722, type: !453)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 9721, column: 2)
!4613 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 9720, column: 11)
!4614 = !DILocalVariable(name: "arg0", scope: !4612, file: !3, line: 9723, type: !460)
!4615 = !DILocalVariable(name: "xop0", scope: !4616, file: !3, line: 9758, type: !460)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 9753, column: 2)
!4617 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 9752, column: 11)
!4618 = !DILocalVariable(name: "xop1", scope: !4616, file: !3, line: 9758, type: !460)
!4619 = !DILocalVariable(name: "xresult_type", scope: !4616, file: !3, line: 9758, type: !460)
!4620 = !DILocalVariable(name: "xresultcode", scope: !4616, file: !3, line: 9759, type: !134)
!4621 = !DILocalVariable(name: "val", scope: !4616, file: !3, line: 9760, type: !460)
!4622 = !DILocalVariable(name: "op0_maybe_const", scope: !4623, file: !3, line: 9775, type: !452)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 9774, column: 6)
!4624 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 9773, column: 8)
!4625 = !DILocalVariable(name: "op1_maybe_const", scope: !4623, file: !3, line: 9776, type: !452)
!4626 = !DILocalVariable(name: "orig_op0_folded", scope: !4623, file: !3, line: 9777, type: !460)
!4627 = !DILocalVariable(name: "orig_op1_folded", scope: !4623, file: !3, line: 9777, type: !460)
!4628 = !DILabel(scope: !4538, name: "return_build_binary_op", file: !3, line: 9863)
!4629 = !DILocation(line: 0, scope: !4538)
!4630 = !DILocation(line: 9039, column: 14, scope: !4538)
!4631 = !DILocation(line: 9097, column: 16, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9097, column: 7)
!4633 = !DILocation(line: 9098, column: 16, scope: !4632)
!4634 = !DILocation(line: 9097, column: 7, scope: !4538)
!4635 = !DILocation(line: 9103, column: 22, scope: !4538)
!4636 = !DILocation(line: 9104, column: 7, scope: !4538)
!4637 = !DILocation(line: 9105, column: 11, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9104, column: 7)
!4639 = !DILocation(line: 9105, column: 5, scope: !4638)
!4640 = !DILocation(line: 9106, column: 22, scope: !4538)
!4641 = !DILocation(line: 9107, column: 7, scope: !4538)
!4642 = !DILocation(line: 9108, column: 11, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9107, column: 7)
!4644 = !DILocation(line: 9108, column: 5, scope: !4643)
!4645 = !DILocation(line: 9109, column: 36, scope: !4538)
!4646 = !DILocation(line: 9110, column: 7, scope: !4538)
!4647 = !DILocation(line: 9112, column: 32, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 9111, column: 5)
!4649 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9110, column: 7)
!4650 = !DILocation(line: 9112, column: 53, scope: !4648)
!4651 = !DILocation(line: 9113, column: 11, scope: !4648)
!4652 = !DILocation(line: 9113, column: 14, scope: !4648)
!4653 = !DILocation(line: 9113, column: 35, scope: !4648)
!4654 = !DILocation(line: 0, scope: !4648)
!4655 = !DILocation(line: 9112, column: 31, scope: !4648)
!4656 = !DILocation(line: 9115, column: 6, scope: !4648)
!4657 = !DILocation(line: 9115, column: 10, scope: !4648)
!4658 = !DILocation(line: 9116, column: 6, scope: !4648)
!4659 = !DILocation(line: 9116, column: 10, scope: !4648)
!4660 = !DILocation(line: 9116, column: 9, scope: !4648)
!4661 = !DILocation(line: 9114, column: 19, scope: !4648)
!4662 = !DILocation(line: 9117, column: 5, scope: !4648)
!4663 = !DILocation(line: 0, scope: !4649)
!4664 = !DILocation(line: 9121, column: 7, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9121, column: 7)
!4666 = !DILocation(line: 9121, column: 7, scope: !4538)
!4667 = !DILocation(line: 9123, column: 13, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 9122, column: 5)
!4669 = !DILocation(line: 9124, column: 13, scope: !4668)
!4670 = !DILocation(line: 9125, column: 5, scope: !4668)
!4671 = !DILocation(line: 9127, column: 24, scope: !4538)
!4672 = !DILocation(line: 9128, column: 24, scope: !4538)
!4673 = !DILocation(line: 9132, column: 11, scope: !4538)
!4674 = !DILocation(line: 9133, column: 11, scope: !4538)
!4675 = !DILocation(line: 9136, column: 3, scope: !4538)
!4676 = distinct !{!4676, !4675, !4675}
!4677 = !DILocation(line: 9137, column: 3, scope: !4538)
!4678 = distinct !{!4678, !4677, !4677}
!4679 = !DILocation(line: 9142, column: 13, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9142, column: 7)
!4681 = !DILocation(line: 9142, column: 36, scope: !4680)
!4682 = !DILocation(line: 9142, column: 27, scope: !4680)
!4683 = !DILocation(line: 9143, column: 5, scope: !4680)
!4684 = !DILocation(line: 9146, column: 18, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9145, column: 7)
!4686 = !DILocation(line: 9146, column: 10, scope: !4685)
!4687 = !DILocation(line: 9146, column: 8, scope: !4685)
!4688 = !DILocation(line: 9145, column: 7, scope: !4538)
!4689 = !DILocation(line: 9148, column: 7, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 9147, column: 5)
!4691 = !DILocation(line: 9149, column: 14, scope: !4690)
!4692 = !DILocation(line: 9149, column: 7, scope: !4690)
!4693 = !DILocation(line: 9152, column: 3, scope: !4538)
!4694 = !DILocation(line: 9166, column: 7, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9153, column: 5)
!4696 = !DILocation(line: 9168, column: 7, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9168, column: 7)
!4698 = !DILocation(line: 9168, column: 23, scope: !4697)
!4699 = !DILocation(line: 9168, column: 7, scope: !4538)
!4700 = !DILocation(line: 9170, column: 13, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 9169, column: 5)
!4702 = !DILocation(line: 9171, column: 15, scope: !4701)
!4703 = !DILocation(line: 9172, column: 5, scope: !4701)
!4704 = !DILocation(line: 9173, column: 12, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 9173, column: 12)
!4706 = !DILocation(line: 9174, column: 5, scope: !4705)
!4707 = !DILocation(line: 9174, column: 18, scope: !4705)
!4708 = !DILocation(line: 9174, column: 49, scope: !4705)
!4709 = !DILocation(line: 9173, column: 12, scope: !4697)
!4710 = !DILocation(line: 9177, column: 13, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 9175, column: 5)
!4712 = !DILocation(line: 9178, column: 5, scope: !4711)
!4713 = !DILocation(line: 0, scope: !4697)
!4714 = !DILocation(line: 9179, column: 7, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9179, column: 7)
!4716 = !DILocation(line: 9179, column: 23, scope: !4715)
!4717 = !DILocation(line: 9179, column: 7, scope: !4538)
!4718 = !DILocation(line: 9181, column: 13, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 9180, column: 5)
!4720 = !DILocation(line: 9182, column: 15, scope: !4719)
!4721 = !DILocation(line: 9183, column: 5, scope: !4719)
!4722 = !DILocation(line: 9184, column: 12, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 9184, column: 12)
!4724 = !DILocation(line: 9185, column: 5, scope: !4723)
!4725 = !DILocation(line: 9185, column: 18, scope: !4723)
!4726 = !DILocation(line: 9185, column: 49, scope: !4723)
!4727 = !DILocation(line: 9184, column: 12, scope: !4715)
!4728 = !DILocation(line: 9188, column: 13, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 9186, column: 5)
!4730 = !DILocation(line: 9189, column: 5, scope: !4729)
!4731 = !DILocation(line: 0, scope: !4715)
!4732 = !DILocation(line: 9191, column: 13, scope: !4538)
!4733 = !DILocation(line: 9193, column: 3, scope: !4538)
!4734 = !DILocation(line: 9197, column: 17, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9197, column: 11)
!4736 = !DILocation(line: 9197, column: 42, scope: !4735)
!4737 = !DILocation(line: 9197, column: 33, scope: !4735)
!4738 = !DILocation(line: 9199, column: 10, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 9198, column: 2)
!4740 = !DILocation(line: 9200, column: 4, scope: !4739)
!4741 = !DILocation(line: 9202, column: 22, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 9202, column: 16)
!4743 = !DILocation(line: 9202, column: 47, scope: !4742)
!4744 = !DILocation(line: 9202, column: 38, scope: !4742)
!4745 = !DILocation(line: 9204, column: 10, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 9203, column: 2)
!4747 = !DILocation(line: 9205, column: 4, scope: !4746)
!4748 = !DILocation(line: 9214, column: 17, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9214, column: 11)
!4750 = !DILocation(line: 9214, column: 42, scope: !4749)
!4751 = !DILocation(line: 9214, column: 33, scope: !4749)
!4752 = !DILocation(line: 9215, column: 7, scope: !4749)
!4753 = !DILocation(line: 9214, column: 11, scope: !4578)
!4754 = !DILocation(line: 9217, column: 10, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 9216, column: 2)
!4756 = !DILocation(line: 9218, column: 4, scope: !4755)
!4757 = !DILocation(line: 9221, column: 47, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 9221, column: 16)
!4759 = !DILocation(line: 9221, column: 38, scope: !4758)
!4760 = !DILocation(line: 9223, column: 10, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 9222, column: 2)
!4762 = !DILocation(line: 9224, column: 4, scope: !4761)
!4763 = !DILocation(line: 9239, column: 7, scope: !4578)
!4764 = !DILocation(line: 9241, column: 34, scope: !4577)
!4765 = !DILocation(line: 9244, column: 30, scope: !4577)
!4766 = !DILocation(line: 0, scope: !4576)
!4767 = !DILocation(line: 9250, column: 30, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 9250, column: 8)
!4769 = !DILocation(line: 9251, column: 15, scope: !4768)
!4770 = !DILocation(line: 9251, column: 6, scope: !4768)
!4771 = !DILocation(line: 9252, column: 30, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 9252, column: 8)
!4773 = !DILocation(line: 9253, column: 15, scope: !4772)
!4774 = !DILocation(line: 9253, column: 6, scope: !4772)
!4775 = !DILocation(line: 9255, column: 18, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 9255, column: 8)
!4777 = !DILocation(line: 9255, column: 44, scope: !4776)
!4778 = !DILocation(line: 9255, column: 34, scope: !4776)
!4779 = !DILocation(line: 9256, column: 19, scope: !4776)
!4780 = !DILocation(line: 9256, column: 49, scope: !4776)
!4781 = !DILocation(line: 9256, column: 39, scope: !4776)
!4782 = !DILocation(line: 9264, column: 17, scope: !4776)
!4783 = !DILocation(line: 9265, column: 10, scope: !4776)
!4784 = !DILocation(line: 9265, column: 14, scope: !4776)
!4785 = !DILocation(line: 9265, column: 30, scope: !4776)
!4786 = !DILocation(line: 9266, column: 7, scope: !4776)
!4787 = !DILocation(line: 9266, column: 11, scope: !4776)
!4788 = !DILocation(line: 9266, column: 10, scope: !4776)
!4789 = !DILocation(line: 9274, column: 17, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9274, column: 11)
!4791 = !DILocation(line: 9274, column: 42, scope: !4790)
!4792 = !DILocation(line: 9274, column: 33, scope: !4790)
!4793 = !DILocation(line: 9277, column: 22, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 9277, column: 16)
!4795 = !DILocation(line: 9278, column: 18, scope: !4794)
!4796 = !DILocation(line: 9278, column: 9, scope: !4794)
!4797 = !DILocation(line: 9279, column: 13, scope: !4794)
!4798 = !DILocation(line: 9280, column: 9, scope: !4794)
!4799 = !DILocation(line: 9280, column: 13, scope: !4794)
!4800 = !DILocation(line: 9277, column: 16, scope: !4790)
!4801 = !DILocation(line: 9281, column: 2, scope: !4794)
!4802 = !DILocation(line: 9286, column: 7, scope: !4578)
!4803 = !DILocation(line: 9288, column: 17, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9288, column: 11)
!4805 = !DILocation(line: 9288, column: 41, scope: !4804)
!4806 = !DILocation(line: 9288, column: 32, scope: !4804)
!4807 = !DILocation(line: 9289, column: 7, scope: !4804)
!4808 = !DILocation(line: 9289, column: 37, scope: !4804)
!4809 = !DILocation(line: 9290, column: 4, scope: !4804)
!4810 = !DILocation(line: 9290, column: 7, scope: !4804)
!4811 = !DILocation(line: 9290, column: 37, scope: !4804)
!4812 = !DILocation(line: 9288, column: 11, scope: !4578)
!4813 = !DILocation(line: 9292, column: 22, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 9292, column: 16)
!4815 = !DILocation(line: 9292, column: 47, scope: !4814)
!4816 = !DILocation(line: 9292, column: 38, scope: !4814)
!4817 = !DILocation(line: 9298, column: 15, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 9293, column: 2)
!4819 = !DILocation(line: 9299, column: 8, scope: !4818)
!4820 = !DILocation(line: 9299, column: 12, scope: !4818)
!4821 = !DILocation(line: 9299, column: 28, scope: !4818)
!4822 = !DILocation(line: 9300, column: 5, scope: !4818)
!4823 = !DILocation(line: 9300, column: 9, scope: !4818)
!4824 = !DILocation(line: 9300, column: 8, scope: !4818)
!4825 = !DILocation(line: 9302, column: 2, scope: !4818)
!4826 = !DILocation(line: 9310, column: 34, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9310, column: 11)
!4828 = !DILocation(line: 9313, column: 30, scope: !4827)
!4829 = !DILocation(line: 9320, column: 18, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 9316, column: 2)
!4831 = !DILocation(line: 9321, column: 10, scope: !4830)
!4832 = !DILocation(line: 9322, column: 10, scope: !4830)
!4833 = !DILocation(line: 9324, column: 2, scope: !4830)
!4834 = !DILocation(line: 9325, column: 11, scope: !4578)
!4835 = !DILocation(line: 9328, column: 8, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 9326, column: 2)
!4837 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9325, column: 11)
!4838 = !DILocation(line: 9328, column: 11, scope: !4836)
!4839 = !DILocation(line: 9328, column: 32, scope: !4836)
!4840 = !DILocation(line: 9329, column: 8, scope: !4836)
!4841 = !DILocation(line: 9329, column: 19, scope: !4836)
!4842 = !DILocation(line: 9329, column: 16, scope: !4836)
!4843 = !DILocation(line: 9330, column: 12, scope: !4836)
!4844 = !DILocation(line: 9330, column: 15, scope: !4836)
!4845 = !DILocation(line: 9330, column: 36, scope: !4836)
!4846 = !DILocation(line: 0, scope: !4836)
!4847 = !DILocation(line: 9327, column: 28, scope: !4836)
!4848 = !DILocation(line: 9332, column: 10, scope: !4836)
!4849 = !DILocation(line: 9332, column: 14, scope: !4836)
!4850 = !DILocation(line: 9333, column: 10, scope: !4836)
!4851 = !DILocation(line: 9333, column: 21, scope: !4836)
!4852 = !DILocation(line: 9333, column: 18, scope: !4836)
!4853 = !DILocation(line: 9334, column: 7, scope: !4836)
!4854 = !DILocation(line: 9334, column: 11, scope: !4836)
!4855 = !DILocation(line: 9334, column: 10, scope: !4836)
!4856 = !DILocation(line: 9331, column: 16, scope: !4836)
!4857 = !DILocation(line: 9335, column: 2, scope: !4836)
!4858 = !DILocation(line: 9339, column: 8, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 9337, column: 2)
!4860 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 9336, column: 16)
!4861 = !DILocation(line: 9339, column: 11, scope: !4859)
!4862 = !DILocation(line: 9339, column: 32, scope: !4859)
!4863 = !DILocation(line: 9340, column: 8, scope: !4859)
!4864 = !DILocation(line: 9340, column: 19, scope: !4859)
!4865 = !DILocation(line: 9340, column: 16, scope: !4859)
!4866 = !DILocation(line: 9341, column: 12, scope: !4859)
!4867 = !DILocation(line: 9341, column: 15, scope: !4859)
!4868 = !DILocation(line: 9341, column: 36, scope: !4859)
!4869 = !DILocation(line: 0, scope: !4859)
!4870 = !DILocation(line: 9338, column: 28, scope: !4859)
!4871 = !DILocation(line: 9343, column: 10, scope: !4859)
!4872 = !DILocation(line: 9343, column: 14, scope: !4859)
!4873 = !DILocation(line: 9344, column: 10, scope: !4859)
!4874 = !DILocation(line: 9344, column: 21, scope: !4859)
!4875 = !DILocation(line: 9344, column: 18, scope: !4859)
!4876 = !DILocation(line: 9345, column: 7, scope: !4859)
!4877 = !DILocation(line: 9345, column: 11, scope: !4859)
!4878 = !DILocation(line: 9345, column: 10, scope: !4859)
!4879 = !DILocation(line: 9342, column: 16, scope: !4859)
!4880 = !DILocation(line: 9346, column: 2, scope: !4859)
!4881 = !DILocation(line: 9354, column: 34, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9354, column: 11)
!4883 = !DILocation(line: 9355, column: 13, scope: !4882)
!4884 = !DILocation(line: 9354, column: 11, scope: !4578)
!4885 = !DILocation(line: 9357, column: 8, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 9357, column: 8)
!4887 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 9356, column: 2)
!4888 = !DILocation(line: 9357, column: 24, scope: !4886)
!4889 = !DILocation(line: 9357, column: 8, scope: !4887)
!4890 = !DILocation(line: 9359, column: 12, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 9359, column: 12)
!4892 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 9358, column: 6)
!4893 = !DILocation(line: 9359, column: 35, scope: !4891)
!4894 = !DILocation(line: 9359, column: 12, scope: !4892)
!4895 = !DILocation(line: 9362, column: 9, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 9362, column: 9)
!4897 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 9360, column: 3)
!4898 = !DILocation(line: 9362, column: 39, scope: !4896)
!4899 = !DILocation(line: 9362, column: 9, scope: !4897)
!4900 = !DILocation(line: 9363, column: 7, scope: !4896)
!4901 = !DILocation(line: 9367, column: 10, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 9367, column: 9)
!4903 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 9366, column: 3)
!4904 = !DILocation(line: 9367, column: 9, scope: !4903)
!4905 = !DILocation(line: 9370, column: 32, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 9370, column: 9)
!4907 = !DILocation(line: 9370, column: 9, scope: !4906)
!4908 = !DILocation(line: 9370, column: 56, scope: !4906)
!4909 = !DILocation(line: 9370, column: 9, scope: !4903)
!4910 = !DILocation(line: 9373, column: 13, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 9373, column: 13)
!4912 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 9371, column: 7)
!4913 = !DILocation(line: 9373, column: 43, scope: !4911)
!4914 = !DILocation(line: 9373, column: 13, scope: !4912)
!4915 = !DILocation(line: 9374, column: 4, scope: !4911)
!4916 = !DILocation(line: 9085, column: 7, scope: !4538)
!4917 = !DILocation(line: 9383, column: 8, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 9383, column: 8)
!4919 = !DILocation(line: 9383, column: 47, scope: !4918)
!4920 = !DILocation(line: 9383, column: 44, scope: !4918)
!4921 = !DILocation(line: 9383, column: 8, scope: !4887)
!4922 = !DILocation(line: 9384, column: 12, scope: !4918)
!4923 = !DILocation(line: 9384, column: 6, scope: !4918)
!4924 = !DILocation(line: 9391, column: 34, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9391, column: 11)
!4926 = !DILocation(line: 9392, column: 13, scope: !4925)
!4927 = !DILocation(line: 9391, column: 11, scope: !4578)
!4928 = !DILocation(line: 9394, column: 8, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 9394, column: 8)
!4930 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 9393, column: 2)
!4931 = !DILocation(line: 9394, column: 24, scope: !4929)
!4932 = !DILocation(line: 9394, column: 8, scope: !4930)
!4933 = !DILocation(line: 9396, column: 12, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 9396, column: 12)
!4935 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 9395, column: 6)
!4936 = !DILocation(line: 9396, column: 35, scope: !4934)
!4937 = !DILocation(line: 9396, column: 12, scope: !4935)
!4938 = !DILocation(line: 9399, column: 9, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 9399, column: 9)
!4940 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 9397, column: 3)
!4941 = !DILocation(line: 9399, column: 39, scope: !4939)
!4942 = !DILocation(line: 9399, column: 9, scope: !4940)
!4943 = !DILocation(line: 9400, column: 7, scope: !4939)
!4944 = !DILocation(line: 9403, column: 40, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 9403, column: 17)
!4946 = !DILocation(line: 9403, column: 17, scope: !4945)
!4947 = !DILocation(line: 9403, column: 64, scope: !4945)
!4948 = !DILocation(line: 9403, column: 17, scope: !4934)
!4949 = !DILocation(line: 9406, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 9406, column: 9)
!4951 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 9404, column: 3)
!4952 = !DILocation(line: 9406, column: 39, scope: !4950)
!4953 = !DILocation(line: 9406, column: 9, scope: !4951)
!4954 = !DILocation(line: 9407, column: 7, scope: !4950)
!4955 = !DILocation(line: 9415, column: 8, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 9415, column: 8)
!4957 = !DILocation(line: 9415, column: 47, scope: !4956)
!4958 = !DILocation(line: 9415, column: 44, scope: !4956)
!4959 = !DILocation(line: 9415, column: 8, scope: !4930)
!4960 = !DILocation(line: 9416, column: 12, scope: !4956)
!4961 = !DILocation(line: 9416, column: 6, scope: !4956)
!4962 = !DILocation(line: 9424, column: 11, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 9424, column: 11)
!4964 = !DILocation(line: 9424, column: 32, scope: !4963)
!4965 = !DILocation(line: 9424, column: 35, scope: !4963)
!4966 = !DILocation(line: 9424, column: 11, scope: !4578)
!4967 = !DILocation(line: 9425, column: 2, scope: !4963)
!4968 = !DILocation(line: 9430, column: 20, scope: !4578)
!4969 = !DILocation(line: 9431, column: 34, scope: !4583)
!4970 = !DILocation(line: 9433, column: 30, scope: !4583)
!4971 = !DILocation(line: 9436, column: 22, scope: !4582)
!4972 = !DILocation(line: 9436, column: 47, scope: !4582)
!4973 = !DILocation(line: 9436, column: 38, scope: !4582)
!4974 = !DILocation(line: 9436, column: 16, scope: !4583)
!4975 = !DILocation(line: 9438, column: 15, scope: !4581)
!4976 = !DILocation(line: 0, scope: !4581)
!4977 = !DILocation(line: 9439, column: 15, scope: !4581)
!4978 = !DILocation(line: 9440, column: 23, scope: !4581)
!4979 = !DILocation(line: 9441, column: 23, scope: !4581)
!4980 = !DILocation(line: 9442, column: 4, scope: !4581)
!4981 = !DILocation(line: 9442, column: 17, scope: !4581)
!4982 = !DILocation(line: 9447, column: 8, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 9447, column: 8)
!4984 = !DILocation(line: 9447, column: 8, scope: !4581)
!4985 = !DILocation(line: 9448, column: 20, scope: !4983)
!4986 = !DILocation(line: 9448, column: 6, scope: !4983)
!4987 = !DILocation(line: 9449, column: 13, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 9449, column: 13)
!4989 = !DILocation(line: 9449, column: 13, scope: !4983)
!4990 = !DILocation(line: 9451, column: 13, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 9451, column: 13)
!4992 = !DILocation(line: 9451, column: 13, scope: !4988)
!4993 = !DILocation(line: 9453, column: 14, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 9453, column: 13)
!4995 = !DILocation(line: 9453, column: 13, scope: !4991)
!4996 = !DILocation(line: 9455, column: 8, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 9454, column: 6)
!4998 = !DILocation(line: 9457, column: 15, scope: !4997)
!4999 = !DILocation(line: 9457, column: 8, scope: !4997)
!5000 = !DILocation(line: 9459, column: 13, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 9459, column: 13)
!5002 = !DILocation(line: 9459, column: 13, scope: !4994)
!5003 = !DILocation(line: 9461, column: 12, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 9461, column: 12)
!5005 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 9460, column: 6)
!5006 = !DILocation(line: 9461, column: 21, scope: !5004)
!5007 = !DILocation(line: 9461, column: 24, scope: !5004)
!5008 = !DILocation(line: 9461, column: 40, scope: !5004)
!5009 = !DILocation(line: 9461, column: 12, scope: !5005)
!5010 = !DILocation(line: 9462, column: 3, scope: !5004)
!5011 = !DILocation(line: 9465, column: 13, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 9465, column: 13)
!5013 = !DILocation(line: 9465, column: 13, scope: !5001)
!5014 = !DILocation(line: 9467, column: 12, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 9467, column: 12)
!5016 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 9466, column: 6)
!5017 = !DILocation(line: 9467, column: 21, scope: !5015)
!5018 = !DILocation(line: 9467, column: 40, scope: !5015)
!5019 = !DILocation(line: 9467, column: 12, scope: !5016)
!5020 = !DILocation(line: 9468, column: 3, scope: !5015)
!5021 = !DILocation(line: 9473, column: 11, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 9473, column: 10)
!5023 = !DILocation(line: 9473, column: 10, scope: !5012)
!5024 = !DILocation(line: 9474, column: 8, scope: !5022)
!5025 = !DILocation(line: 0, scope: !4983)
!5026 = !DILocation(line: 9477, column: 20, scope: !4590)
!5027 = !DILocation(line: 9477, column: 8, scope: !4581)
!5028 = !DILocation(line: 9479, column: 19, scope: !4589)
!5029 = !DILocation(line: 0, scope: !4589)
!5030 = !DILocation(line: 9481, column: 33, scope: !4589)
!5031 = !DILocation(line: 9481, column: 11, scope: !4589)
!5032 = !DILocation(line: 9480, column: 22, scope: !4589)
!5033 = !DILocation(line: 9482, column: 6, scope: !4589)
!5034 = !DILocation(line: 9483, column: 2, scope: !4582)
!5035 = !DILocation(line: 9484, column: 22, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 9484, column: 16)
!5037 = !DILocation(line: 9484, column: 38, scope: !5036)
!5038 = !DILocation(line: 9484, column: 41, scope: !5036)
!5039 = !DILocation(line: 9484, column: 16, scope: !4582)
!5040 = !DILocation(line: 9486, column: 8, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 9486, column: 8)
!5042 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 9485, column: 2)
!5043 = !DILocation(line: 9486, column: 24, scope: !5041)
!5044 = !DILocation(line: 9487, column: 8, scope: !5041)
!5045 = !DILocation(line: 9487, column: 37, scope: !5041)
!5046 = !DILocation(line: 9487, column: 11, scope: !5041)
!5047 = !DILocation(line: 9486, column: 8, scope: !5042)
!5048 = !DILocation(line: 9490, column: 4, scope: !5041)
!5049 = !DILocation(line: 9488, column: 6, scope: !5041)
!5050 = !DILocation(line: 9493, column: 22, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 9493, column: 16)
!5052 = !DILocation(line: 9493, column: 38, scope: !5051)
!5053 = !DILocation(line: 9493, column: 41, scope: !5051)
!5054 = !DILocation(line: 9493, column: 16, scope: !5036)
!5055 = !DILocation(line: 9495, column: 8, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 9495, column: 8)
!5057 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 9494, column: 2)
!5058 = !DILocation(line: 9495, column: 24, scope: !5056)
!5059 = !DILocation(line: 9496, column: 8, scope: !5056)
!5060 = !DILocation(line: 9496, column: 37, scope: !5056)
!5061 = !DILocation(line: 9496, column: 11, scope: !5056)
!5062 = !DILocation(line: 9495, column: 8, scope: !5057)
!5063 = !DILocation(line: 9499, column: 4, scope: !5056)
!5064 = !DILocation(line: 9497, column: 6, scope: !5056)
!5065 = !DILocation(line: 9502, column: 22, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 9502, column: 16)
!5067 = !DILocation(line: 9502, column: 47, scope: !5066)
!5068 = !DILocation(line: 9502, column: 38, scope: !5066)
!5069 = !DILocation(line: 9505, column: 4, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 9503, column: 2)
!5071 = !DILocation(line: 9506, column: 2, scope: !5070)
!5072 = !DILocation(line: 9507, column: 22, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 9507, column: 16)
!5074 = !DILocation(line: 9507, column: 38, scope: !5073)
!5075 = !DILocation(line: 9510, column: 4, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 9508, column: 2)
!5077 = !DILocation(line: 9511, column: 2, scope: !5076)
!5078 = !DILocation(line: 9518, column: 20, scope: !4578)
!5079 = !DILocation(line: 9519, column: 34, scope: !4594)
!5080 = !DILocation(line: 9521, column: 30, scope: !4594)
!5081 = !DILocation(line: 9524, column: 22, scope: !4593)
!5082 = !DILocation(line: 9524, column: 47, scope: !4593)
!5083 = !DILocation(line: 9524, column: 38, scope: !4593)
!5084 = !DILocation(line: 9524, column: 16, scope: !4594)
!5085 = !DILocation(line: 9526, column: 23, scope: !4592)
!5086 = !DILocation(line: 0, scope: !4592)
!5087 = !DILocation(line: 9527, column: 23, scope: !4592)
!5088 = !DILocation(line: 9528, column: 4, scope: !4592)
!5089 = !DILocation(line: 9530, column: 8, scope: !4600)
!5090 = !DILocation(line: 9530, column: 8, scope: !4592)
!5091 = !DILocation(line: 9532, column: 22, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 9531, column: 6)
!5093 = !DILocation(line: 9533, column: 13, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 9533, column: 12)
!5095 = !DILocation(line: 9534, column: 9, scope: !5094)
!5096 = !DILocation(line: 9534, column: 5, scope: !5094)
!5097 = !DILocation(line: 9533, column: 12, scope: !5092)
!5098 = !DILocation(line: 9535, column: 3, scope: !5094)
!5099 = !DILocation(line: 9537, column: 17, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 9537, column: 17)
!5101 = !DILocation(line: 9537, column: 47, scope: !5100)
!5102 = !DILocation(line: 9537, column: 17, scope: !5094)
!5103 = !DILocation(line: 9538, column: 3, scope: !5100)
!5104 = !DILocation(line: 9541, column: 14, scope: !4599)
!5105 = !DILocation(line: 9541, column: 13, scope: !4600)
!5106 = !DILocation(line: 9543, column: 8, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 9542, column: 6)
!5108 = !DILocation(line: 9545, column: 15, scope: !5107)
!5109 = !DILocation(line: 9545, column: 8, scope: !5107)
!5110 = !DILocation(line: 9549, column: 19, scope: !4598)
!5111 = !DILocation(line: 0, scope: !4598)
!5112 = !DILocation(line: 9551, column: 33, scope: !4598)
!5113 = !DILocation(line: 9551, column: 11, scope: !4598)
!5114 = !DILocation(line: 9550, column: 22, scope: !4598)
!5115 = !DILocation(line: 9552, column: 8, scope: !4598)
!5116 = !DILocation(line: 9555, column: 2, scope: !4593)
!5117 = !DILocation(line: 9556, column: 22, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 9556, column: 16)
!5119 = !DILocation(line: 9556, column: 38, scope: !5118)
!5120 = !DILocation(line: 9556, column: 41, scope: !5118)
!5121 = !DILocation(line: 9556, column: 16, scope: !4593)
!5122 = !DILocation(line: 9559, column: 8, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 9559, column: 8)
!5124 = distinct !DILexicalBlock(scope: !5118, file: !3, line: 9557, column: 2)
!5125 = !DILocation(line: 9559, column: 8, scope: !5124)
!5126 = !DILocation(line: 9560, column: 6, scope: !5123)
!5127 = !DILocation(line: 9562, column: 13, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 9562, column: 13)
!5129 = !DILocation(line: 9562, column: 13, scope: !5123)
!5130 = !DILocation(line: 9563, column: 6, scope: !5128)
!5131 = !DILocation(line: 9566, column: 22, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5118, file: !3, line: 9566, column: 16)
!5133 = !DILocation(line: 9566, column: 38, scope: !5132)
!5134 = !DILocation(line: 9566, column: 41, scope: !5132)
!5135 = !DILocation(line: 9566, column: 16, scope: !5118)
!5136 = !DILocation(line: 9569, column: 4, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 9567, column: 2)
!5138 = !DILocation(line: 9571, column: 2, scope: !5137)
!5139 = !DILocation(line: 9572, column: 22, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 9572, column: 16)
!5141 = !DILocation(line: 9572, column: 47, scope: !5140)
!5142 = !DILocation(line: 9572, column: 38, scope: !5140)
!5143 = !DILocation(line: 9575, column: 4, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 9573, column: 2)
!5145 = !DILocation(line: 9576, column: 2, scope: !5144)
!5146 = !DILocation(line: 9577, column: 22, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 9577, column: 16)
!5148 = !DILocation(line: 9577, column: 38, scope: !5147)
!5149 = !DILocation(line: 9580, column: 4, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 9578, column: 2)
!5151 = !DILocation(line: 9581, column: 2, scope: !5150)
!5152 = !DILocation(line: 9585, column: 7, scope: !4578)
!5153 = !DILocation(line: 9586, column: 5, scope: !4578)
!5154 = !DILocation(line: 9047, column: 18, scope: !4538)
!5155 = !DILocation(line: 9588, column: 27, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9588, column: 7)
!5157 = !DILocation(line: 9589, column: 5, scope: !5156)
!5158 = !DILocation(line: 9591, column: 13, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9591, column: 7)
!5160 = !DILocation(line: 9591, column: 37, scope: !5159)
!5161 = !DILocation(line: 9591, column: 28, scope: !5159)
!5162 = !DILocation(line: 9592, column: 32, scope: !5159)
!5163 = !DILocation(line: 9592, column: 51, scope: !5159)
!5164 = !DILocation(line: 9592, column: 12, scope: !5159)
!5165 = !DILocation(line: 9593, column: 4, scope: !5159)
!5166 = !DILocation(line: 9593, column: 46, scope: !5159)
!5167 = !DILocation(line: 9594, column: 11, scope: !5159)
!5168 = !DILocation(line: 9593, column: 8, scope: !5159)
!5169 = !DILocation(line: 9591, column: 7, scope: !4538)
!5170 = !DILocation(line: 9596, column: 7, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 9595, column: 5)
!5172 = !DILocation(line: 9597, column: 14, scope: !5171)
!5173 = !DILocation(line: 9597, column: 7, scope: !5171)
!5174 = !DILocation(line: 9600, column: 30, scope: !4603)
!5175 = !DILocation(line: 9603, column: 30, scope: !4603)
!5176 = !DILocation(line: 9606, column: 35, scope: !4602)
!5177 = !DILocation(line: 0, scope: !4602)
!5178 = !DILocation(line: 9607, column: 36, scope: !4602)
!5179 = !DILocation(line: 9608, column: 42, scope: !4602)
!5180 = !DILocation(line: 9608, column: 45, scope: !4602)
!5181 = !DILocation(line: 9610, column: 19, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 9610, column: 11)
!5183 = !DILocation(line: 9612, column: 18, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 9611, column: 2)
!5185 = !DILocation(line: 9613, column: 23, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 9613, column: 8)
!5187 = !DILocation(line: 9613, column: 20, scope: !5186)
!5188 = !DILocation(line: 9613, column: 8, scope: !5184)
!5189 = !DILocation(line: 9614, column: 6, scope: !5186)
!5190 = !DILocation(line: 9617, column: 25, scope: !4608)
!5191 = !DILocation(line: 9618, column: 4, scope: !4608)
!5192 = !DILocation(line: 9619, column: 8, scope: !4608)
!5193 = !DILocation(line: 9622, column: 4, scope: !4608)
!5194 = !DILocation(line: 9622, column: 7, scope: !4608)
!5195 = !DILocation(line: 9622, column: 43, scope: !4608)
!5196 = !DILocation(line: 9623, column: 7, scope: !4608)
!5197 = !DILocation(line: 9623, column: 4, scope: !4608)
!5198 = !DILocation(line: 0, scope: !4607)
!5199 = !DILocation(line: 9631, column: 14, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 9631, column: 8)
!5201 = !DILocation(line: 9631, column: 37, scope: !5200)
!5202 = !DILocation(line: 9631, column: 28, scope: !5200)
!5203 = !DILocation(line: 9633, column: 8, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 9632, column: 6)
!5205 = !DILocation(line: 9634, column: 31, scope: !5204)
!5206 = !DILocation(line: 9635, column: 6, scope: !5204)
!5207 = !DILocation(line: 0, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 9636, column: 8)
!5209 = !DILocation(line: 9636, column: 8, scope: !4607)
!5210 = !DILocation(line: 9638, column: 28, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 9638, column: 12)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 9637, column: 6)
!5213 = !DILocation(line: 9638, column: 12, scope: !5212)
!5214 = !DILocation(line: 9639, column: 9, scope: !5211)
!5215 = !DILocation(line: 9639, column: 3, scope: !5211)
!5216 = !DILocation(line: 9640, column: 12, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 9640, column: 12)
!5218 = !DILocation(line: 9640, column: 28, scope: !5217)
!5219 = !DILocation(line: 9640, column: 12, scope: !5212)
!5220 = !DILocation(line: 9641, column: 9, scope: !5217)
!5221 = !DILocation(line: 9641, column: 3, scope: !5217)
!5222 = !DILocation(line: 9645, column: 28, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 9645, column: 12)
!5224 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 9644, column: 6)
!5225 = !DILocation(line: 9645, column: 12, scope: !5224)
!5226 = !DILocation(line: 9646, column: 9, scope: !5223)
!5227 = !DILocation(line: 9646, column: 3, scope: !5223)
!5228 = !DILocation(line: 9647, column: 12, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 9647, column: 12)
!5230 = !DILocation(line: 9647, column: 28, scope: !5229)
!5231 = !DILocation(line: 9647, column: 12, scope: !5224)
!5232 = !DILocation(line: 9648, column: 9, scope: !5229)
!5233 = !DILocation(line: 9648, column: 3, scope: !5229)
!5234 = !DILocation(line: 9650, column: 8, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 9650, column: 8)
!5236 = !DILocation(line: 9650, column: 24, scope: !5235)
!5237 = !DILocation(line: 9650, column: 38, scope: !5235)
!5238 = !DILocation(line: 9650, column: 41, scope: !5235)
!5239 = !DILocation(line: 9650, column: 57, scope: !5235)
!5240 = !DILocation(line: 9650, column: 8, scope: !4607)
!5241 = !DILocation(line: 9651, column: 13, scope: !5235)
!5242 = !DILocation(line: 9651, column: 6, scope: !5235)
!5243 = !DILocation(line: 9652, column: 8, scope: !4607)
!5244 = !DILocation(line: 9654, column: 14, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 9653, column: 6)
!5246 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 9652, column: 8)
!5247 = !DILocation(line: 9655, column: 31, scope: !5245)
!5248 = !DILocation(line: 9655, column: 15, scope: !5245)
!5249 = !DILocation(line: 9657, column: 31, scope: !5245)
!5250 = !DILocation(line: 9657, column: 15, scope: !5245)
!5251 = !DILocation(line: 9659, column: 8, scope: !5245)
!5252 = !DILocation(line: 9663, column: 12, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 9660, column: 3)
!5254 = !DILocation(line: 9663, column: 5, scope: !5253)
!5255 = !DILocation(line: 0, scope: !5245)
!5256 = !DILocation(line: 9667, column: 12, scope: !5253)
!5257 = !DILocation(line: 9668, column: 5, scope: !5253)
!5258 = !DILocation(line: 9670, column: 5, scope: !5253)
!5259 = !DILocation(line: 9671, column: 3, scope: !5253)
!5260 = !DILocation(line: 9675, column: 14, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 9674, column: 6)
!5262 = !DILocation(line: 9676, column: 31, scope: !5261)
!5263 = !DILocation(line: 9676, column: 15, scope: !5261)
!5264 = !DILocation(line: 9678, column: 31, scope: !5261)
!5265 = !DILocation(line: 9678, column: 15, scope: !5261)
!5266 = !DILocation(line: 9680, column: 8, scope: !5261)
!5267 = !DILocation(line: 9683, column: 12, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 9681, column: 3)
!5269 = !DILocation(line: 9683, column: 5, scope: !5268)
!5270 = !DILocation(line: 0, scope: !5261)
!5271 = !DILocation(line: 9686, column: 12, scope: !5268)
!5272 = !DILocation(line: 9687, column: 5, scope: !5268)
!5273 = !DILocation(line: 9689, column: 12, scope: !5268)
!5274 = !DILocation(line: 9690, column: 12, scope: !5268)
!5275 = !DILocation(line: 9691, column: 5, scope: !5268)
!5276 = !DILocation(line: 9693, column: 5, scope: !5268)
!5277 = !DILocation(line: 9694, column: 3, scope: !5268)
!5278 = !DILocation(line: 0, scope: !5246)
!5279 = !DILocation(line: 9696, column: 10, scope: !4607)
!5280 = !DILocation(line: 9697, column: 4, scope: !4607)
!5281 = !DILocation(line: 9711, column: 11, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 9711, column: 11)
!5283 = !DILocation(line: 9711, column: 19, scope: !5282)
!5284 = !DILocation(line: 9715, column: 17, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 9712, column: 2)
!5286 = !DILocation(line: 9715, column: 9, scope: !5285)
!5287 = !DILocation(line: 9714, column: 18, scope: !5285)
!5288 = !DILocation(line: 9716, column: 2, scope: !5285)
!5289 = !DILocation(line: 9720, column: 11, scope: !4613)
!5290 = !DILocation(line: 9720, column: 11, scope: !4602)
!5291 = !DILocation(line: 9722, column: 4, scope: !4612)
!5292 = !DILocation(line: 0, scope: !4612)
!5293 = !DILocation(line: 9723, column: 16, scope: !4612)
!5294 = !DILocation(line: 9727, column: 13, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 9727, column: 8)
!5296 = !DILocation(line: 9727, column: 20, scope: !5295)
!5297 = !DILocation(line: 9727, column: 37, scope: !5295)
!5298 = !DILocation(line: 9727, column: 34, scope: !5295)
!5299 = !DILocation(line: 9727, column: 8, scope: !4612)
!5300 = !DILocation(line: 9728, column: 21, scope: !5295)
!5301 = !DILocation(line: 9728, column: 19, scope: !5295)
!5302 = !DILocation(line: 9728, column: 6, scope: !5295)
!5303 = !DILocation(line: 9730, column: 8, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 9730, column: 8)
!5305 = !DILocation(line: 9730, column: 44, scope: !5304)
!5306 = !DILocation(line: 9730, column: 42, scope: !5304)
!5307 = !DILocation(line: 9731, column: 8, scope: !5304)
!5308 = !DILocation(line: 9731, column: 11, scope: !5304)
!5309 = !DILocation(line: 9731, column: 34, scope: !5304)
!5310 = !DILocation(line: 9734, column: 8, scope: !5304)
!5311 = !DILocation(line: 9734, column: 34, scope: !5304)
!5312 = !DILocation(line: 9734, column: 11, scope: !5304)
!5313 = !DILocation(line: 9734, column: 69, scope: !5304)
!5314 = !DILocation(line: 9736, column: 8, scope: !5304)
!5315 = !DILocation(line: 9736, column: 13, scope: !5304)
!5316 = !DILocation(line: 9736, column: 43, scope: !5304)
!5317 = !DILocation(line: 9736, column: 40, scope: !5304)
!5318 = !DILocation(line: 9741, column: 11, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 9737, column: 6)
!5320 = !DILocation(line: 9740, column: 5, scope: !5319)
!5321 = !DILocation(line: 9743, column: 12, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 9743, column: 12)
!5323 = !DILocation(line: 9743, column: 28, scope: !5322)
!5324 = !DILocation(line: 9743, column: 12, scope: !5319)
!5325 = !DILocation(line: 9744, column: 9, scope: !5322)
!5326 = !DILocation(line: 9744, column: 3, scope: !5322)
!5327 = !DILocation(line: 9747, column: 2, scope: !4613)
!5328 = !DILocation(line: 9747, column: 2, scope: !4612)
!5329 = !DILocation(line: 9752, column: 11, scope: !4617)
!5330 = !DILocation(line: 9752, column: 11, scope: !4602)
!5331 = !DILocation(line: 9758, column: 4, scope: !4616)
!5332 = !DILocation(line: 0, scope: !4616)
!5333 = !DILocation(line: 9758, column: 9, scope: !4616)
!5334 = !DILocation(line: 9758, column: 21, scope: !4616)
!5335 = !DILocation(line: 9758, column: 33, scope: !4616)
!5336 = !DILocation(line: 9759, column: 4, scope: !4616)
!5337 = !DILocation(line: 9759, column: 19, scope: !4616)
!5338 = !DILocation(line: 9761, column: 8, scope: !4616)
!5339 = !DILocation(line: 9763, column: 12, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 9763, column: 8)
!5341 = !DILocation(line: 9763, column: 8, scope: !4616)
!5342 = !DILocation(line: 9769, column: 10, scope: !4616)
!5343 = !DILocation(line: 9769, column: 22, scope: !4616)
!5344 = !DILocation(line: 9771, column: 17, scope: !4616)
!5345 = !DILocation(line: 9773, column: 8, scope: !4624)
!5346 = !DILocation(line: 9773, column: 38, scope: !4624)
!5347 = !DILocation(line: 9773, column: 8, scope: !4616)
!5348 = !DILocation(line: 0, scope: !4623)
!5349 = !DILocation(line: 9775, column: 8, scope: !4623)
!5350 = !DILocation(line: 9775, column: 13, scope: !4623)
!5351 = !DILocation(line: 9776, column: 8, scope: !4623)
!5352 = !DILocation(line: 9776, column: 13, scope: !4623)
!5353 = !DILocation(line: 9779, column: 12, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 9779, column: 12)
!5355 = !DILocation(line: 9779, column: 12, scope: !4623)
!5356 = !DILocation(line: 9790, column: 34, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 9785, column: 3)
!5358 = !DILocation(line: 9791, column: 30, scope: !5357)
!5359 = !DILocation(line: 9791, column: 11, scope: !5357)
!5360 = !DILocation(line: 9793, column: 30, scope: !5357)
!5361 = !DILocation(line: 9793, column: 11, scope: !5357)
!5362 = !DILocation(line: 9795, column: 34, scope: !5357)
!5363 = !DILocation(line: 9797, column: 9, scope: !5357)
!5364 = !DILocation(line: 9796, column: 23, scope: !5357)
!5365 = !DILocation(line: 9800, column: 9, scope: !5357)
!5366 = !DILocation(line: 9799, column: 23, scope: !5357)
!5367 = !DILocation(line: 0, scope: !5354)
!5368 = !DILocation(line: 9804, column: 12, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 9804, column: 12)
!5370 = !DILocation(line: 9804, column: 12, scope: !4623)
!5371 = !DILocation(line: 9805, column: 3, scope: !5369)
!5372 = !DILocation(line: 9808, column: 13, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 9808, column: 12)
!5374 = !DILocation(line: 9808, column: 12, scope: !4623)
!5375 = !DILocation(line: 9810, column: 10, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 9810, column: 9)
!5377 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 9809, column: 3)
!5378 = !DILocation(line: 9810, column: 26, scope: !5376)
!5379 = !DILocation(line: 9810, column: 29, scope: !5376)
!5380 = !DILocation(line: 9810, column: 45, scope: !5376)
!5381 = !DILocation(line: 9810, column: 9, scope: !5377)
!5382 = !DILocation(line: 9811, column: 38, scope: !5376)
!5383 = !DILocation(line: 9811, column: 13, scope: !5376)
!5384 = !DILocation(line: 9811, column: 7, scope: !5376)
!5385 = !DILocation(line: 9812, column: 10, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 9812, column: 9)
!5387 = !DILocation(line: 9812, column: 26, scope: !5386)
!5388 = !DILocation(line: 9812, column: 29, scope: !5386)
!5389 = !DILocation(line: 9812, column: 45, scope: !5386)
!5390 = !DILocation(line: 9812, column: 9, scope: !5377)
!5391 = !DILocation(line: 9813, column: 38, scope: !5386)
!5392 = !DILocation(line: 9813, column: 13, scope: !5386)
!5393 = !DILocation(line: 9813, column: 7, scope: !5386)
!5394 = !DILocation(line: 9815, column: 6, scope: !4624)
!5395 = !DILocation(line: 9815, column: 6, scope: !4623)
!5396 = !DILocation(line: 9816, column: 2, scope: !4617)
!5397 = !DILocation(line: 9745, column: 18, scope: !5319)
!5398 = !DILocation(line: 9181, column: 11, scope: !4719)
!5399 = !DILocation(line: 9744, column: 7, scope: !5322)
!5400 = !DILocation(line: 9817, column: 5, scope: !4603)
!5401 = !DILocation(line: 9068, column: 8, scope: !4538)
!5402 = !DILocation(line: 9060, column: 7, scope: !4538)
!5403 = !DILocation(line: 9055, column: 8, scope: !4538)
!5404 = !DILocation(line: 9170, column: 11, scope: !4701)
!5405 = !DILocation(line: 9825, column: 8, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9825, column: 7)
!5407 = !DILocation(line: 9825, column: 7, scope: !4538)
!5408 = !DILocation(line: 9827, column: 40, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 9826, column: 5)
!5410 = !DILocation(line: 9827, column: 57, scope: !5409)
!5411 = !DILocation(line: 9827, column: 7, scope: !5409)
!5412 = !DILocation(line: 9828, column: 14, scope: !5409)
!5413 = !DILocation(line: 9828, column: 7, scope: !5409)
!5414 = !DILocation(line: 9831, column: 18, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9831, column: 7)
!5416 = !DILocation(line: 9831, column: 7, scope: !4538)
!5417 = !DILocation(line: 9834, column: 17, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 9834, column: 11)
!5419 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 9832, column: 5)
!5420 = !DILocation(line: 9834, column: 40, scope: !5418)
!5421 = !DILocation(line: 9834, column: 31, scope: !5418)
!5422 = !DILocation(line: 9836, column: 4, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 9835, column: 2)
!5424 = !DILocation(line: 9837, column: 27, scope: !5423)
!5425 = !DILocation(line: 9838, column: 2, scope: !5423)
!5426 = !DILocation(line: 9841, column: 8, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9841, column: 7)
!5428 = !DILocation(line: 9841, column: 7, scope: !4538)
!5429 = !DILocation(line: 9843, column: 13, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 9842, column: 5)
!5431 = !DILocation(line: 9844, column: 13, scope: !5430)
!5432 = !DILocation(line: 9848, column: 11, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 9848, column: 11)
!5434 = !DILocation(line: 9848, column: 27, scope: !5433)
!5435 = !DILocation(line: 9848, column: 41, scope: !5433)
!5436 = !DILocation(line: 9848, column: 44, scope: !5433)
!5437 = !DILocation(line: 9848, column: 60, scope: !5433)
!5438 = !DILocation(line: 9848, column: 11, scope: !5430)
!5439 = !DILocation(line: 9849, column: 9, scope: !5433)
!5440 = !DILocation(line: 9849, column: 2, scope: !5433)
!5441 = !DILocation(line: 9853, column: 7, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9853, column: 7)
!5443 = !DILocation(line: 9853, column: 7, scope: !4538)
!5444 = !DILocation(line: 9854, column: 12, scope: !5442)
!5445 = !DILocation(line: 9855, column: 7, scope: !5442)
!5446 = !DILocation(line: 9857, column: 7, scope: !5442)
!5447 = !DILocation(line: 9859, column: 11, scope: !5442)
!5448 = !DILocation(line: 0, scope: !5442)
!5449 = !DILocation(line: 9860, column: 18, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9860, column: 7)
!5451 = !DILocation(line: 9860, column: 7, scope: !4538)
!5452 = !DILocation(line: 9861, column: 11, scope: !5450)
!5453 = !DILocation(line: 9861, column: 5, scope: !5450)
!5454 = !DILocation(line: 9114, column: 17, scope: !4648)
!5455 = !DILocation(line: 9863, column: 2, scope: !4538)
!5456 = !DILocation(line: 9864, column: 3, scope: !4538)
!5457 = !DILocation(line: 9865, column: 7, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9865, column: 7)
!5459 = !DILocation(line: 9865, column: 23, scope: !5458)
!5460 = !DILocation(line: 9865, column: 38, scope: !5458)
!5461 = !DILocation(line: 9865, column: 42, scope: !5458)
!5462 = !DILocation(line: 9865, column: 66, scope: !5458)
!5463 = !DILocation(line: 9865, column: 62, scope: !5458)
!5464 = !DILocation(line: 9866, column: 12, scope: !5458)
!5465 = !DILocation(line: 9867, column: 7, scope: !5458)
!5466 = !DILocation(line: 9868, column: 7, scope: !5458)
!5467 = !DILocation(line: 9869, column: 28, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 9869, column: 12)
!5469 = !DILocation(line: 9869, column: 43, scope: !5468)
!5470 = !DILocation(line: 9870, column: 9, scope: !5468)
!5471 = !DILocation(line: 9871, column: 11, scope: !5468)
!5472 = !DILocation(line: 9871, column: 5, scope: !5468)
!5473 = !DILocation(line: 9872, column: 7, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 9872, column: 7)
!5475 = !DILocation(line: 9872, column: 7, scope: !4538)
!5476 = !DILocation(line: 9873, column: 11, scope: !5474)
!5477 = !DILocation(line: 9873, column: 5, scope: !5474)
!5478 = !DILocation(line: 9874, column: 3, scope: !4538)
!5479 = !DILocation(line: 9875, column: 3, scope: !4538)
!5480 = !DILocation(line: 9876, column: 1, scope: !4538)
!5481 = distinct !DISubprogram(name: "build_external_ref", scope: !3, file: !3, line: 2336, type: !5482, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5484)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!460, !585, !460, !453, !823}
!5484 = !{!5485, !5486, !5487, !5488, !5489, !5490, !5491}
!5485 = !DILocalVariable(name: "loc", arg: 1, scope: !5481, file: !3, line: 2336, type: !585)
!5486 = !DILocalVariable(name: "id", arg: 2, scope: !5481, file: !3, line: 2336, type: !460)
!5487 = !DILocalVariable(name: "fun", arg: 3, scope: !5481, file: !3, line: 2336, type: !453)
!5488 = !DILocalVariable(name: "type", arg: 4, scope: !5481, file: !3, line: 2336, type: !823)
!5489 = !DILocalVariable(name: "ref", scope: !5481, file: !3, line: 2338, type: !460)
!5490 = !DILocalVariable(name: "decl", scope: !5481, file: !3, line: 2339, type: !460)
!5491 = !DILocalVariable(name: "context", scope: !5492, file: !3, line: 2409, type: !460)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 2408, column: 5)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 2403, column: 12)
!5494 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 2386, column: 7)
!5495 = !DILocation(line: 0, scope: !5481)
!5496 = !DILocation(line: 2339, column: 15, scope: !5481)
!5497 = !DILocation(line: 2343, column: 10, scope: !5481)
!5498 = !DILocation(line: 2345, column: 9, scope: !5481)
!5499 = !DILocation(line: 2346, column: 7, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 2346, column: 7)
!5501 = !DILocation(line: 2346, column: 23, scope: !5500)
!5502 = !DILocation(line: 2346, column: 20, scope: !5500)
!5503 = !DILocation(line: 2346, column: 12, scope: !5500)
!5504 = !DILocation(line: 2349, column: 15, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 2347, column: 5)
!5506 = !DILocation(line: 2349, column: 13, scope: !5505)
!5507 = !DILocation(line: 2350, column: 5, scope: !5505)
!5508 = !DILocation(line: 2351, column: 12, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 2351, column: 12)
!5510 = !DILocation(line: 2351, column: 12, scope: !5500)
!5511 = !DILocation(line: 2353, column: 11, scope: !5509)
!5512 = !DILocation(line: 2354, column: 17, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 2354, column: 12)
!5514 = !DILocation(line: 2354, column: 12, scope: !5509)
!5515 = !DILocation(line: 2357, column: 5, scope: !5513)
!5516 = !DILocation(line: 2360, column: 7, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 2359, column: 5)
!5518 = !DILocation(line: 2361, column: 14, scope: !5517)
!5519 = !DILocation(line: 2361, column: 7, scope: !5517)
!5520 = !DILocation(line: 0, scope: !5500)
!5521 = !DILocation(line: 2364, column: 7, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 2364, column: 7)
!5523 = !DILocation(line: 2364, column: 26, scope: !5522)
!5524 = !DILocation(line: 2364, column: 23, scope: !5522)
!5525 = !DILocation(line: 2364, column: 7, scope: !5481)
!5526 = !DILocation(line: 2365, column: 5, scope: !5522)
!5527 = !DILocation(line: 2367, column: 7, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 2367, column: 7)
!5529 = !DILocation(line: 2367, column: 7, scope: !5481)
!5530 = !DILocation(line: 2368, column: 5, scope: !5528)
!5531 = !DILocation(line: 2371, column: 14, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 2371, column: 7)
!5533 = !DILocation(line: 2371, column: 11, scope: !5532)
!5534 = !DILocation(line: 2371, column: 7, scope: !5481)
!5535 = !DILocation(line: 2376, column: 7, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 2376, column: 7)
!5537 = !DILocation(line: 2373, column: 23, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 2372, column: 5)
!5539 = !DILocation(line: 2374, column: 5, scope: !5538)
!5540 = !DILocation(line: 2376, column: 23, scope: !5536)
!5541 = !DILocation(line: 2376, column: 44, scope: !5536)
!5542 = !DILocation(line: 2376, column: 40, scope: !5536)
!5543 = !DILocation(line: 2378, column: 12, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 2378, column: 11)
!5545 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 2377, column: 5)
!5546 = !DILocation(line: 2378, column: 26, scope: !5544)
!5547 = !DILocation(line: 2378, column: 22, scope: !5544)
!5548 = !DILocation(line: 2379, column: 2, scope: !5544)
!5549 = !DILocation(line: 2379, column: 20, scope: !5544)
!5550 = !DILocation(line: 2380, column: 16, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 2380, column: 16)
!5552 = !DILocation(line: 2380, column: 35, scope: !5551)
!5553 = !DILocation(line: 2381, column: 9, scope: !5551)
!5554 = !DILocation(line: 2381, column: 12, scope: !5551)
!5555 = !DILocation(line: 2382, column: 9, scope: !5551)
!5556 = !DILocation(line: 2382, column: 13, scope: !5551)
!5557 = !DILocation(line: 2380, column: 16, scope: !5544)
!5558 = !DILocation(line: 2383, column: 2, scope: !5551)
!5559 = !DILocation(line: 2386, column: 7, scope: !5494)
!5560 = !DILocation(line: 2386, column: 23, scope: !5494)
!5561 = !DILocation(line: 2386, column: 7, scope: !5481)
!5562 = !DILocation(line: 2388, column: 26, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 2387, column: 5)
!5564 = !DILocation(line: 2388, column: 7, scope: !5563)
!5565 = !DILocation(line: 2390, column: 11, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2390, column: 11)
!5567 = !DILocation(line: 2391, column: 4, scope: !5566)
!5568 = !DILocation(line: 2391, column: 7, scope: !5566)
!5569 = !DILocation(line: 2391, column: 35, scope: !5566)
!5570 = !DILocation(line: 2392, column: 4, scope: !5566)
!5571 = !DILocation(line: 2392, column: 7, scope: !5566)
!5572 = !DILocation(line: 2390, column: 11, scope: !5563)
!5573 = !DILocation(line: 2394, column: 4, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 2393, column: 2)
!5575 = !DILocation(line: 2397, column: 12, scope: !5574)
!5576 = !DILocation(line: 2397, column: 4, scope: !5574)
!5577 = !DILocation(line: 2398, column: 2, scope: !5574)
!5578 = !DILocation(line: 2400, column: 13, scope: !5563)
!5579 = !DILocation(line: 2401, column: 7, scope: !5563)
!5580 = !DILocation(line: 2401, column: 27, scope: !5563)
!5581 = !DILocation(line: 2402, column: 5, scope: !5563)
!5582 = !DILocation(line: 2403, column: 12, scope: !5493)
!5583 = !DILocation(line: 2403, column: 34, scope: !5493)
!5584 = !DILocation(line: 2404, column: 5, scope: !5493)
!5585 = !DILocation(line: 2404, column: 9, scope: !5493)
!5586 = !DILocation(line: 2405, column: 5, scope: !5493)
!5587 = !DILocation(line: 2405, column: 25, scope: !5493)
!5588 = !DILocation(line: 2406, column: 9, scope: !5493)
!5589 = !DILocation(line: 2406, column: 28, scope: !5493)
!5590 = !DILocation(line: 2407, column: 9, scope: !5493)
!5591 = !DILocation(line: 2407, column: 28, scope: !5493)
!5592 = !DILocation(line: 2403, column: 12, scope: !5494)
!5593 = !DILocation(line: 2409, column: 22, scope: !5492)
!5594 = !DILocation(line: 0, scope: !5492)
!5595 = !DILocation(line: 2411, column: 19, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 2411, column: 11)
!5597 = !DILocation(line: 2411, column: 38, scope: !5596)
!5598 = !DILocation(line: 2411, column: 35, scope: !5596)
!5599 = !DILocation(line: 2411, column: 24, scope: !5596)
!5600 = !DILocation(line: 2412, column: 2, scope: !5596)
!5601 = !DILocation(line: 2412, column: 22, scope: !5596)
!5602 = !DILocation(line: 2418, column: 5, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 2417, column: 12)
!5604 = !DILocation(line: 2418, column: 8, scope: !5603)
!5605 = !DILocation(line: 2419, column: 5, scope: !5603)
!5606 = !DILocation(line: 2419, column: 8, scope: !5603)
!5607 = !DILocation(line: 2420, column: 5, scope: !5603)
!5608 = !DILocation(line: 2420, column: 8, scope: !5603)
!5609 = !DILocation(line: 2421, column: 5, scope: !5603)
!5610 = !DILocation(line: 2421, column: 37, scope: !5603)
!5611 = !DILocation(line: 2421, column: 40, scope: !5603)
!5612 = !DILocation(line: 2422, column: 5, scope: !5603)
!5613 = !DILocation(line: 2422, column: 10, scope: !5603)
!5614 = !DILocation(line: 2423, column: 5, scope: !5603)
!5615 = !DILocation(line: 2423, column: 8, scope: !5603)
!5616 = !DILocation(line: 2423, column: 27, scope: !5603)
!5617 = !DILocation(line: 2417, column: 12, scope: !5493)
!5618 = !DILocation(line: 2424, column: 5, scope: !5603)
!5619 = !DILocation(line: 2428, column: 1, scope: !5481)
!5620 = distinct !DISubprogram(name: "record_maybe_used_decl", scope: !3, file: !3, line: 2449, type: !5621, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5623)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{null, !460}
!5623 = !{!5624, !5625}
!5624 = !DILocalVariable(name: "decl", arg: 1, scope: !5620, file: !3, line: 2449, type: !460)
!5625 = !DILocalVariable(name: "t", scope: !5620, file: !3, line: 2451, type: !1963)
!5626 = !DILocation(line: 0, scope: !5620)
!5627 = !DILocation(line: 2451, column: 31, scope: !5620)
!5628 = !DILocation(line: 2452, column: 6, scope: !5620)
!5629 = !DILocation(line: 2452, column: 11, scope: !5620)
!5630 = !DILocation(line: 2453, column: 14, scope: !5620)
!5631 = !DILocation(line: 2453, column: 26, scope: !5620)
!5632 = !DILocation(line: 2453, column: 24, scope: !5620)
!5633 = !DILocation(line: 2453, column: 6, scope: !5620)
!5634 = !DILocation(line: 2453, column: 12, scope: !5620)
!5635 = !DILocation(line: 2454, column: 13, scope: !5620)
!5636 = !DILocation(line: 2454, column: 6, scope: !5620)
!5637 = !DILocation(line: 2454, column: 11, scope: !5620)
!5638 = !DILocation(line: 2455, column: 20, scope: !5620)
!5639 = !DILocation(line: 2456, column: 1, scope: !5620)
!5640 = distinct !DISubprogram(name: "pop_maybe_used", scope: !3, file: !3, line: 2464, type: !5641, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5643)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{null, !452}
!5643 = !{!5644, !5645, !5646}
!5644 = !DILocalVariable(name: "used", arg: 1, scope: !5640, file: !3, line: 2464, type: !452)
!5645 = !DILocalVariable(name: "p", scope: !5640, file: !3, line: 2466, type: !1963)
!5646 = !DILocalVariable(name: "cur_level", scope: !5640, file: !3, line: 2467, type: !453)
!5647 = !DILocation(line: 0, scope: !5640)
!5648 = !DILocation(line: 2467, column: 19, scope: !5640)
!5649 = !DILocation(line: 2467, column: 31, scope: !5640)
!5650 = !DILocation(line: 2467, column: 29, scope: !5640)
!5651 = !DILocation(line: 2468, column: 3, scope: !5640)
!5652 = !DILocation(line: 0, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 2472, column: 8)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 2471, column: 2)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 2470, column: 11)
!5656 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 2469, column: 5)
!5657 = !DILocation(line: 2468, column: 10, scope: !5640)
!5658 = !DILocation(line: 2468, column: 12, scope: !5640)
!5659 = !DILocation(line: 2468, column: 18, scope: !5640)
!5660 = !DILocation(line: 2468, column: 24, scope: !5640)
!5661 = !DILocation(line: 2473, column: 6, scope: !5653)
!5662 = !DILocation(line: 2473, column: 28, scope: !5653)
!5663 = !DILocation(line: 2477, column: 14, scope: !5656)
!5664 = distinct !{!5664, !5651, !5665}
!5665 = !DILocation(line: 2478, column: 5, scope: !5640)
!5666 = !DILocation(line: 2479, column: 13, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 2479, column: 7)
!5668 = !DILocation(line: 2475, column: 9, scope: !5653)
!5669 = !DILocation(line: 2475, column: 15, scope: !5653)
!5670 = !DILocation(line: 2479, column: 26, scope: !5667)
!5671 = !DILocation(line: 2480, column: 22, scope: !5667)
!5672 = !DILocation(line: 2480, column: 5, scope: !5667)
!5673 = !DILocation(line: 2481, column: 1, scope: !5640)
!5674 = distinct !DISubprogram(name: "c_expr_sizeof_expr", scope: !3, file: !3, line: 2486, type: !3782, scopeLine: 2487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5675)
!5675 = !{!5676, !5677, !5678, !5679, !5682}
!5676 = !DILocalVariable(name: "loc", arg: 1, scope: !5674, file: !3, line: 2486, type: !585)
!5677 = !DILocalVariable(name: "expr", arg: 2, scope: !5674, file: !3, line: 2486, type: !1909)
!5678 = !DILocalVariable(name: "ret", scope: !5674, file: !3, line: 2488, type: !1909)
!5679 = !DILocalVariable(name: "expr_const_operands", scope: !5680, file: !3, line: 2498, type: !452)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 2497, column: 5)
!5681 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 2489, column: 7)
!5682 = !DILocalVariable(name: "folded_expr", scope: !5680, file: !3, line: 2499, type: !460)
!5683 = !DILocation(line: 0, scope: !5674)
!5684 = !DILocation(line: 2486, column: 51, scope: !5674)
!5685 = !DILocation(line: 2488, column: 17, scope: !5674)
!5686 = !DILocation(line: 2489, column: 12, scope: !5681)
!5687 = !DILocation(line: 2489, column: 21, scope: !5681)
!5688 = !DILocation(line: 2489, column: 18, scope: !5681)
!5689 = !DILocation(line: 2489, column: 7, scope: !5674)
!5690 = !DILocation(line: 2491, column: 17, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 2490, column: 5)
!5692 = !DILocation(line: 2492, column: 11, scope: !5691)
!5693 = !DILocation(line: 2492, column: 25, scope: !5691)
!5694 = !DILocation(line: 2493, column: 11, scope: !5691)
!5695 = !DILocation(line: 2493, column: 25, scope: !5691)
!5696 = !DILocation(line: 2494, column: 7, scope: !5691)
!5697 = !DILocation(line: 2495, column: 5, scope: !5691)
!5698 = !DILocation(line: 0, scope: !5680)
!5699 = !DILocation(line: 2498, column: 7, scope: !5680)
!5700 = !DILocation(line: 2498, column: 12, scope: !5680)
!5701 = !DILocation(line: 2499, column: 52, scope: !5680)
!5702 = !DILocation(line: 2499, column: 26, scope: !5680)
!5703 = !DILocation(line: 2501, column: 19, scope: !5680)
!5704 = !DILocation(line: 2501, column: 11, scope: !5680)
!5705 = !DILocation(line: 2501, column: 17, scope: !5680)
!5706 = !DILocation(line: 2502, column: 11, scope: !5680)
!5707 = !DILocation(line: 2502, column: 25, scope: !5680)
!5708 = !DILocation(line: 2503, column: 11, scope: !5680)
!5709 = !DILocation(line: 2503, column: 25, scope: !5680)
!5710 = !DILocation(line: 2504, column: 25, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 2504, column: 11)
!5712 = !DILocation(line: 2504, column: 11, scope: !5711)
!5713 = !DILocation(line: 2504, column: 11, scope: !5680)
!5714 = !DILocation(line: 2507, column: 16, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 2505, column: 2)
!5716 = !DILocation(line: 2507, column: 14, scope: !5715)
!5717 = !DILocation(line: 2509, column: 48, scope: !5715)
!5718 = !DILocation(line: 2509, column: 47, scope: !5715)
!5719 = !DILocation(line: 2509, column: 4, scope: !5715)
!5720 = !DILocation(line: 2509, column: 45, scope: !5715)
!5721 = !DILocation(line: 2510, column: 4, scope: !5715)
!5722 = !DILocation(line: 2511, column: 2, scope: !5715)
!5723 = !DILocation(line: 2512, column: 23, scope: !5680)
!5724 = !DILocation(line: 2512, column: 7, scope: !5680)
!5725 = !DILocation(line: 2513, column: 5, scope: !5681)
!5726 = !DILocation(line: 2514, column: 3, scope: !5674)
!5727 = distinct !DISubprogram(name: "c_expr_sizeof_type", scope: !3, file: !3, line: 2522, type: !5728, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5787)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!1909, !585, !5730}
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5731, size: 64)
!5731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_type_name", file: !386, line: 352, size: 128, elements: !5732)
!5732 = !{!5733, !5765}
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "specs", scope: !5731, file: !386, line: 354, baseType: !5734, size: 64)
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_declspecs", file: !386, line: 208, size: 448, elements: !5736)
!5736 = !{!5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5758, !5759, !5760, !5761, !5762, !5763, !5764}
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5735, file: !386, line: 213, baseType: !460, size: 64)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !5735, file: !386, line: 216, baseType: !460, size: 64, offset: 64)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "decl_attr", scope: !5735, file: !386, line: 218, baseType: !460, size: 64, offset: 128)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5735, file: !386, line: 222, baseType: !460, size: 64, offset: 192)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "typespec_word", scope: !5735, file: !386, line: 225, baseType: !385, size: 32, offset: 256)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !5735, file: !386, line: 227, baseType: !400, size: 32, offset: 288)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "expr_const_operands", scope: !5735, file: !386, line: 230, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "declspecs_seen_p", scope: !5735, file: !386, line: 232, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "type_seen_p", scope: !5735, file: !386, line: 234, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "non_sc_seen_p", scope: !5735, file: !386, line: 241, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "typedef_p", scope: !5735, file: !386, line: 243, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "tag_defined_p", scope: !5735, file: !386, line: 247, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_signed_p", scope: !5735, file: !386, line: 250, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_p", scope: !5735, file: !386, line: 252, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "default_int_p", scope: !5735, file: !386, line: 255, baseType: !7, size: 32, offset: 352)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "long_p", scope: !5735, file: !386, line: 257, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "long_long_p", scope: !5735, file: !386, line: 259, baseType: !7, size: 1, offset: 385, flags: DIFlagBitField, extraData: i64 384)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "short_p", scope: !5735, file: !386, line: 261, baseType: !7, size: 1, offset: 386, flags: DIFlagBitField, extraData: i64 384)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "signed_p", scope: !5735, file: !386, line: 263, baseType: !7, size: 1, offset: 387, flags: DIFlagBitField, extraData: i64 384)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_p", scope: !5735, file: !386, line: 265, baseType: !7, size: 1, offset: 388, flags: DIFlagBitField, extraData: i64 384)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "complex_p", scope: !5735, file: !386, line: 267, baseType: !7, size: 1, offset: 389, flags: DIFlagBitField, extraData: i64 384)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "inline_p", scope: !5735, file: !386, line: 269, baseType: !7, size: 1, offset: 390, flags: DIFlagBitField, extraData: i64 384)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "thread_p", scope: !5735, file: !386, line: 271, baseType: !7, size: 1, offset: 391, flags: DIFlagBitField, extraData: i64 384)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "const_p", scope: !5735, file: !386, line: 273, baseType: !7, size: 1, offset: 392, flags: DIFlagBitField, extraData: i64 384)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_p", scope: !5735, file: !386, line: 275, baseType: !7, size: 1, offset: 393, flags: DIFlagBitField, extraData: i64 384)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_p", scope: !5735, file: !386, line: 277, baseType: !7, size: 1, offset: 394, flags: DIFlagBitField, extraData: i64 384)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_p", scope: !5735, file: !386, line: 279, baseType: !7, size: 1, offset: 395, flags: DIFlagBitField, extraData: i64 384)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !5735, file: !386, line: 281, baseType: !2994, size: 8, offset: 400)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !5731, file: !386, line: 356, baseType: !5766, size: 64, offset: 64)
!5766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5767, size: 64)
!5767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_declarator", file: !386, line: 319, size: 448, elements: !5768)
!5768 = !{!5769, !5770, !5771, !5772}
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !5767, file: !386, line: 321, baseType: !408, size: 32)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !5767, file: !386, line: 323, baseType: !5766, size: 64, offset: 64)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "id_loc", scope: !5767, file: !386, line: 324, baseType: !585, size: 32, offset: 128)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !5767, file: !386, line: 348, baseType: !5773, size: 256, offset: 192)
!5773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5767, file: !386, line: 325, size: 256, elements: !5774)
!5774 = !{!5775, !5776, !5777, !5785, !5786}
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5773, file: !386, line: 328, baseType: !460, size: 64)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "arg_info", scope: !5773, file: !386, line: 330, baseType: !1460, size: 64)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !5773, file: !386, line: 343, baseType: !5778, size: 256)
!5778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5773, file: !386, line: 332, size: 256, elements: !5779)
!5779 = !{!5780, !5781, !5782, !5783, !5784}
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "dimen", scope: !5778, file: !386, line: 334, baseType: !460, size: 64)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "quals", scope: !5778, file: !386, line: 336, baseType: !453, size: 32, offset: 64)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5778, file: !386, line: 338, baseType: !460, size: 64, offset: 128)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "static_p", scope: !5778, file: !386, line: 340, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "vla_unspec_p", scope: !5778, file: !386, line: 342, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_quals", scope: !5773, file: !386, line: 345, baseType: !453, size: 32)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5773, file: !386, line: 347, baseType: !460, size: 64)
!5787 = !{!5788, !5789, !5790, !5791, !5792, !5793}
!5788 = !DILocalVariable(name: "loc", arg: 1, scope: !5727, file: !3, line: 2522, type: !585)
!5789 = !DILocalVariable(name: "t", arg: 2, scope: !5727, file: !3, line: 2522, type: !5730)
!5790 = !DILocalVariable(name: "type", scope: !5727, file: !3, line: 2524, type: !460)
!5791 = !DILocalVariable(name: "ret", scope: !5727, file: !3, line: 2525, type: !1909)
!5792 = !DILocalVariable(name: "type_expr", scope: !5727, file: !3, line: 2526, type: !460)
!5793 = !DILocalVariable(name: "type_expr_const", scope: !5727, file: !3, line: 2527, type: !452)
!5794 = !DILocation(line: 0, scope: !5727)
!5795 = !DILocation(line: 2525, column: 17, scope: !5727)
!5796 = !DILocation(line: 2526, column: 3, scope: !5727)
!5797 = !DILocation(line: 2526, column: 8, scope: !5727)
!5798 = !DILocation(line: 2527, column: 3, scope: !5727)
!5799 = !DILocation(line: 2527, column: 8, scope: !5727)
!5800 = !DILocation(line: 2528, column: 10, scope: !5727)
!5801 = !DILocation(line: 2529, column: 15, scope: !5727)
!5802 = !DILocation(line: 2529, column: 7, scope: !5727)
!5803 = !DILocation(line: 2529, column: 13, scope: !5727)
!5804 = !DILocation(line: 2530, column: 7, scope: !5727)
!5805 = !DILocation(line: 2530, column: 21, scope: !5727)
!5806 = !DILocation(line: 2531, column: 7, scope: !5727)
!5807 = !DILocation(line: 2531, column: 21, scope: !5727)
!5808 = !DILocation(line: 2532, column: 8, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 2532, column: 7)
!5810 = !DILocation(line: 2532, column: 18, scope: !5809)
!5811 = !DILocation(line: 2532, column: 21, scope: !5809)
!5812 = !DILocation(line: 2532, column: 43, scope: !5809)
!5813 = !DILocation(line: 2533, column: 7, scope: !5809)
!5814 = !DILocation(line: 2533, column: 10, scope: !5809)
!5815 = !DILocation(line: 2532, column: 7, scope: !5727)
!5816 = !DILocation(line: 2542, column: 12, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 2542, column: 11)
!5818 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 2534, column: 5)
!5819 = !DILocation(line: 2542, column: 11, scope: !5818)
!5820 = !DILocation(line: 2543, column: 14, scope: !5817)
!5821 = !DILocation(line: 2543, column: 12, scope: !5817)
!5822 = !DILocation(line: 2543, column: 2, scope: !5817)
!5823 = !DILocation(line: 2544, column: 19, scope: !5818)
!5824 = !DILocation(line: 2544, column: 17, scope: !5818)
!5825 = !DILocation(line: 2546, column: 51, scope: !5818)
!5826 = !DILocation(line: 2546, column: 50, scope: !5818)
!5827 = !DILocation(line: 2546, column: 7, scope: !5818)
!5828 = !DILocation(line: 2546, column: 48, scope: !5818)
!5829 = !DILocation(line: 2547, column: 5, scope: !5818)
!5830 = !DILocation(line: 2548, column: 27, scope: !5727)
!5831 = !DILocation(line: 2548, column: 24, scope: !5727)
!5832 = !DILocation(line: 2548, column: 19, scope: !5727)
!5833 = !DILocation(line: 2549, column: 7, scope: !5727)
!5834 = !DILocation(line: 2548, column: 3, scope: !5727)
!5835 = !DILocation(line: 2551, column: 1, scope: !5727)
!5836 = distinct !DISubprogram(name: "build_function_call", scope: !3, file: !3, line: 2560, type: !4022, scopeLine: 2561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5837)
!5837 = !{!5838, !5839, !5840, !5841, !5842}
!5838 = !DILocalVariable(name: "loc", arg: 1, scope: !5836, file: !3, line: 2560, type: !585)
!5839 = !DILocalVariable(name: "function", arg: 2, scope: !5836, file: !3, line: 2560, type: !460)
!5840 = !DILocalVariable(name: "params", arg: 3, scope: !5836, file: !3, line: 2560, type: !460)
!5841 = !DILocalVariable(name: "vec", scope: !5836, file: !3, line: 2562, type: !1315)
!5842 = !DILocalVariable(name: "ret", scope: !5836, file: !3, line: 2563, type: !460)
!5843 = !DILocation(line: 0, scope: !5836)
!5844 = !DILocation(line: 2562, column: 3, scope: !5836)
!5845 = !DILocation(line: 2565, column: 9, scope: !5836)
!5846 = !DILocation(line: 2565, column: 7, scope: !5836)
!5847 = !DILocation(line: 0, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2566, column: 3)
!5849 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 2566, column: 3)
!5850 = !DILocation(line: 2566, column: 3, scope: !5836)
!5851 = !DILocation(line: 2566, column: 3, scope: !5849)
!5852 = !DILocation(line: 2567, column: 5, scope: !5848)
!5853 = !DILocation(line: 2566, column: 27, scope: !5848)
!5854 = !DILocation(line: 2566, column: 3, scope: !5848)
!5855 = distinct !{!5855, !5851, !5856}
!5856 = !DILocation(line: 2567, column: 5, scope: !5849)
!5857 = !DILocation(line: 2568, column: 9, scope: !5836)
!5858 = !DILocation(line: 2569, column: 3, scope: !5836)
!5859 = !DILocation(line: 2571, column: 1, scope: !5836)
!5860 = !DILocation(line: 2570, column: 3, scope: !5836)
!5861 = distinct !DISubprogram(name: "VEC_tree_gc_alloc", scope: !135, file: !135, line: 183, type: !5862, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5864)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{!1315, !453}
!5864 = !{!5865}
!5865 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5861, file: !135, line: 183, type: !453)
!5866 = !DILocation(line: 0, scope: !5861)
!5867 = !DILocation(line: 183, column: 1, scope: !5861)
!5868 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !135, file: !135, line: 182, type: !5869, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5872)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!823, !5871, !460}
!5871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!5872 = !{!5873, !5874, !5875}
!5873 = !DILocalVariable(name: "vec_", arg: 1, scope: !5868, file: !135, line: 182, type: !5871)
!5874 = !DILocalVariable(name: "obj_", arg: 2, scope: !5868, file: !135, line: 182, type: !460)
!5875 = !DILocalVariable(name: "slot_", scope: !5868, file: !135, line: 182, type: !823)
!5876 = !DILocation(line: 0, scope: !5868)
!5877 = !DILocation(line: 182, column: 1, scope: !5868)
!5878 = distinct !DISubprogram(name: "build_function_call_vec", scope: !3, file: !3, line: 2582, type: !5879, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5881)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!460, !585, !460, !1315, !1315}
!5881 = !{!5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5896, !5897, !5898}
!5882 = !DILocalVariable(name: "loc", arg: 1, scope: !5878, file: !3, line: 2582, type: !585)
!5883 = !DILocalVariable(name: "function", arg: 2, scope: !5878, file: !3, line: 2582, type: !460)
!5884 = !DILocalVariable(name: "params", arg: 3, scope: !5878, file: !3, line: 2582, type: !1315)
!5885 = !DILocalVariable(name: "origtypes", arg: 4, scope: !5878, file: !3, line: 2583, type: !1315)
!5886 = !DILocalVariable(name: "fntype", scope: !5878, file: !3, line: 2585, type: !460)
!5887 = !DILocalVariable(name: "fundecl", scope: !5878, file: !3, line: 2585, type: !460)
!5888 = !DILocalVariable(name: "name", scope: !5878, file: !3, line: 2586, type: !460)
!5889 = !DILocalVariable(name: "result", scope: !5878, file: !3, line: 2586, type: !460)
!5890 = !DILocalVariable(name: "tem", scope: !5878, file: !3, line: 2587, type: !460)
!5891 = !DILocalVariable(name: "nargs", scope: !5878, file: !3, line: 2588, type: !453)
!5892 = !DILocalVariable(name: "argarray", scope: !5878, file: !3, line: 2589, type: !823)
!5893 = !DILocalVariable(name: "return_type", scope: !5894, file: !3, line: 2656, type: !460)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 2655, column: 5)
!5895 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2651, column: 7)
!5896 = !DILocalVariable(name: "trap", scope: !5894, file: !3, line: 2657, type: !460)
!5897 = !DILocalVariable(name: "i", scope: !5894, file: !3, line: 2659, type: !453)
!5898 = !DILocalVariable(name: "rhs", scope: !5899, file: !3, line: 2683, type: !460)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 2682, column: 2)
!5900 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2674, column: 11)
!5901 = !DILocation(line: 0, scope: !5878)
!5902 = !DILocation(line: 2593, column: 3, scope: !5878)
!5903 = distinct !{!5903, !5902, !5902}
!5904 = !DILocation(line: 2596, column: 28, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2596, column: 7)
!5906 = !DILocation(line: 2596, column: 7, scope: !5878)
!5907 = !DILocation(line: 2602, column: 13, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 2597, column: 5)
!5909 = !DILocation(line: 2603, column: 11, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 2603, column: 11)
!5911 = !DILocation(line: 2603, column: 11, scope: !5908)
!5912 = !DILocation(line: 2606, column: 14, scope: !5908)
!5913 = !DILocation(line: 2608, column: 5, scope: !5908)
!5914 = !DILocation(line: 2609, column: 7, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2609, column: 7)
!5916 = !DILocation(line: 2609, column: 40, scope: !5915)
!5917 = !DILocation(line: 2609, column: 7, scope: !5878)
!5918 = !DILocation(line: 2610, column: 16, scope: !5915)
!5919 = !DILocation(line: 2610, column: 5, scope: !5915)
!5920 = !DILocation(line: 2614, column: 8, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2614, column: 7)
!5922 = !DILocation(line: 2614, column: 7, scope: !5878)
!5923 = !DILocation(line: 2616, column: 9, scope: !5921)
!5924 = !DILocation(line: 2615, column: 16, scope: !5921)
!5925 = !DILocation(line: 2615, column: 5, scope: !5921)
!5926 = !DILocation(line: 2618, column: 14, scope: !5878)
!5927 = !DILocation(line: 2620, column: 12, scope: !5878)
!5928 = !DILocation(line: 2622, column: 7, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2622, column: 7)
!5930 = !DILocation(line: 2622, column: 26, scope: !5929)
!5931 = !DILocation(line: 2622, column: 7, scope: !5878)
!5932 = !DILocation(line: 2623, column: 12, scope: !5929)
!5933 = !DILocation(line: 2623, column: 5, scope: !5929)
!5934 = !DILocation(line: 2625, column: 28, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2625, column: 7)
!5936 = !DILocation(line: 2626, column: 2, scope: !5935)
!5937 = !DILocation(line: 2626, column: 5, scope: !5935)
!5938 = !DILocation(line: 2626, column: 36, scope: !5935)
!5939 = !DILocation(line: 2625, column: 7, scope: !5878)
!5940 = !DILocation(line: 2628, column: 7, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 2627, column: 5)
!5942 = !DILocation(line: 2629, column: 14, scope: !5941)
!5943 = !DILocation(line: 2629, column: 7, scope: !5941)
!5944 = !DILocation(line: 2632, column: 7, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2632, column: 7)
!5946 = !DILocation(line: 2632, column: 15, scope: !5945)
!5947 = !DILocation(line: 2632, column: 18, scope: !5945)
!5948 = !DILocation(line: 2632, column: 7, scope: !5878)
!5949 = !DILocation(line: 2633, column: 41, scope: !5945)
!5950 = !DILocation(line: 2633, column: 5, scope: !5945)
!5951 = !DILocation(line: 2641, column: 30, scope: !5878)
!5952 = !DILocation(line: 2641, column: 11, scope: !5878)
!5953 = !DILocation(line: 2643, column: 13, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2643, column: 7)
!5955 = !DILocation(line: 2643, column: 7, scope: !5878)
!5956 = !DILocation(line: 2644, column: 12, scope: !5954)
!5957 = !DILocation(line: 2644, column: 5, scope: !5954)
!5958 = !DILocation(line: 2651, column: 7, scope: !5895)
!5959 = !DILocation(line: 2652, column: 7, scope: !5895)
!5960 = !DILocation(line: 2652, column: 10, scope: !5895)
!5961 = !DILocation(line: 2652, column: 55, scope: !5895)
!5962 = !DILocation(line: 2653, column: 7, scope: !5895)
!5963 = !DILocation(line: 2653, column: 10, scope: !5895)
!5964 = !DILocation(line: 2653, column: 50, scope: !5895)
!5965 = !DILocation(line: 2654, column: 7, scope: !5895)
!5966 = !DILocation(line: 2654, column: 30, scope: !5895)
!5967 = !DILocation(line: 2654, column: 11, scope: !5895)
!5968 = !DILocation(line: 2651, column: 7, scope: !5878)
!5969 = !DILocation(line: 2656, column: 26, scope: !5894)
!5970 = !DILocation(line: 0, scope: !5894)
!5971 = !DILocation(line: 2657, column: 45, scope: !5894)
!5972 = !DILocation(line: 2657, column: 19, scope: !5894)
!5973 = !DILocation(line: 2664, column: 11, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2664, column: 11)
!5975 = !DILocation(line: 2664, column: 11, scope: !5894)
!5976 = !DILocation(line: 2667, column: 2, scope: !5974)
!5977 = !DILocation(line: 2670, column: 12, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2670, column: 7)
!5979 = !DILocation(line: 0, scope: !5978)
!5980 = !DILocation(line: 2670, column: 21, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 2670, column: 7)
!5982 = !DILocation(line: 2670, column: 7, scope: !5978)
!5983 = !DILocation(line: 2671, column: 9, scope: !5981)
!5984 = !DILocation(line: 2670, column: 31, scope: !5981)
!5985 = !DILocation(line: 2670, column: 7, scope: !5981)
!5986 = distinct !{!5986, !5982, !5987}
!5987 = !DILocation(line: 2671, column: 9, scope: !5978)
!5988 = !DILocation(line: 2674, column: 11, scope: !5900)
!5989 = !DILocation(line: 2674, column: 11, scope: !5894)
!5990 = !DILocation(line: 2676, column: 8, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 2676, column: 8)
!5992 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 2675, column: 2)
!5993 = !DILocation(line: 2676, column: 33, scope: !5991)
!5994 = !DILocation(line: 2676, column: 8, scope: !5992)
!5995 = !DILocation(line: 2677, column: 6, scope: !5991)
!5996 = !DILocation(line: 2685, column: 8, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 2685, column: 8)
!5998 = !DILocation(line: 2685, column: 8, scope: !5899)
!5999 = !DILocation(line: 2687, column: 8, scope: !5997)
!6000 = !DILocation(line: 2686, column: 12, scope: !5997)
!6001 = !DILocation(line: 0, scope: !5899)
!6002 = !DILocation(line: 2686, column: 6, scope: !5997)
!6003 = !DILocation(line: 2690, column: 48, scope: !5997)
!6004 = !DILocation(line: 2690, column: 12, scope: !5997)
!6005 = !DILocation(line: 0, scope: !5997)
!6006 = !DILocation(line: 2692, column: 34, scope: !5899)
!6007 = !DILocation(line: 2692, column: 11, scope: !5899)
!6008 = !DILocation(line: 2697, column: 14, scope: !5878)
!6009 = !DILocation(line: 2701, column: 7, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2700, column: 7)
!6011 = !DILocation(line: 2701, column: 10, scope: !6010)
!6012 = !DILocation(line: 2702, column: 7, scope: !6010)
!6013 = !DILocation(line: 2702, column: 40, scope: !6010)
!6014 = !DILocation(line: 2703, column: 7, scope: !6010)
!6015 = !DILocation(line: 2703, column: 11, scope: !6010)
!6016 = !DILocation(line: 2700, column: 7, scope: !5878)
!6017 = !DILocation(line: 2704, column: 12, scope: !6010)
!6018 = !DILocation(line: 2704, column: 5, scope: !6010)
!6019 = !DILocation(line: 2707, column: 29, scope: !5878)
!6020 = !DILocation(line: 2708, column: 8, scope: !5878)
!6021 = !DILocation(line: 2707, column: 3, scope: !5878)
!6022 = !DILocation(line: 2710, column: 12, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2710, column: 7)
!6024 = !DILocation(line: 2711, column: 7, scope: !6023)
!6025 = !DILocation(line: 2711, column: 20, scope: !6023)
!6026 = !DILocation(line: 2711, column: 11, scope: !6023)
!6027 = !DILocation(line: 2710, column: 7, scope: !5878)
!6028 = !DILocation(line: 2713, column: 11, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2713, column: 11)
!6030 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 2712, column: 5)
!6031 = !DILocation(line: 0, scope: !6029)
!6032 = !DILocation(line: 2713, column: 11, scope: !6030)
!6033 = !DILocation(line: 2715, column: 4, scope: !6029)
!6034 = !DILocation(line: 2714, column: 2, scope: !6029)
!6035 = !DILocation(line: 2718, column: 11, scope: !6029)
!6036 = !DILocation(line: 2720, column: 11, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2720, column: 11)
!6038 = !DILocation(line: 2720, column: 30, scope: !6037)
!6039 = !DILocation(line: 2721, column: 4, scope: !6037)
!6040 = !DILocation(line: 2721, column: 7, scope: !6037)
!6041 = !DILocation(line: 2721, column: 44, scope: !6037)
!6042 = !DILocation(line: 2720, column: 11, scope: !6030)
!6043 = !DILocation(line: 0, scope: !6037)
!6044 = !DILocation(line: 2722, column: 2, scope: !6037)
!6045 = !DILocation(line: 0, scope: !6030)
!6046 = distinct !{!6046, !6044, !6044}
!6047 = !DILocation(line: 2725, column: 41, scope: !6023)
!6048 = !DILocation(line: 2725, column: 14, scope: !6023)
!6049 = !DILocation(line: 2728, column: 7, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2728, column: 7)
!6051 = !DILocation(line: 0, scope: !6023)
!6052 = !DILocation(line: 2728, column: 7, scope: !5878)
!6053 = !DILocation(line: 2730, column: 11, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 2730, column: 11)
!6055 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 2729, column: 5)
!6056 = !DILocation(line: 2730, column: 43, scope: !6054)
!6057 = !DILocation(line: 2730, column: 11, scope: !6055)
!6058 = !DILocation(line: 2731, column: 2, scope: !6054)
!6059 = !DILocation(line: 2735, column: 10, scope: !5878)
!6060 = !DILocation(line: 2735, column: 3, scope: !5878)
!6061 = !DILocation(line: 2736, column: 1, scope: !5878)
!6062 = distinct !DISubprogram(name: "VEC_tree_gc_free", scope: !135, file: !135, line: 183, type: !6063, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6066)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{null, !6065}
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!6066 = !{!6067}
!6067 = !DILocalVariable(name: "vec_", arg: 1, scope: !6062, file: !135, line: 183, type: !6065)
!6068 = !DILocation(line: 0, scope: !6062)
!6069 = !DILocation(line: 183, column: 1, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6062, file: !135, line: 183, column: 1)
!6071 = !DILocation(line: 183, column: 1, scope: !6062)
!6072 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !6073, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6077)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!7, !6075}
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6076, size: 64)
!6076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1320)
!6077 = !{!6078}
!6078 = !DILocalVariable(name: "vec_", arg: 1, scope: !6072, file: !135, line: 182, type: !6075)
!6079 = !DILocation(line: 0, scope: !6072)
!6080 = !DILocation(line: 182, column: 1, scope: !6072)
!6081 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !6082, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6084)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{!460, !6075, !7}
!6084 = !{!6085, !6086}
!6085 = !DILocalVariable(name: "vec_", arg: 1, scope: !6081, file: !135, line: 182, type: !6075)
!6086 = !DILocalVariable(name: "ix_", arg: 2, scope: !6081, file: !135, line: 182, type: !7)
!6087 = !DILocation(line: 0, scope: !6081)
!6088 = !DILocation(line: 182, column: 1, scope: !6081)
!6089 = distinct !DISubprogram(name: "convert_arguments", scope: !3, file: !3, line: 2758, type: !6090, scopeLine: 2760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6092)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{!453, !460, !1315, !1315, !460, !460}
!6092 = !{!6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6109, !6110, !6111, !6112, !6113, !6114, !6115, !6116, !6121, !6124, !6133}
!6093 = !DILocalVariable(name: "typelist", arg: 1, scope: !6089, file: !3, line: 2758, type: !460)
!6094 = !DILocalVariable(name: "values", arg: 2, scope: !6089, file: !3, line: 2758, type: !1315)
!6095 = !DILocalVariable(name: "origtypes", arg: 3, scope: !6089, file: !3, line: 2759, type: !1315)
!6096 = !DILocalVariable(name: "function", arg: 4, scope: !6089, file: !3, line: 2759, type: !460)
!6097 = !DILocalVariable(name: "fundecl", arg: 5, scope: !6089, file: !3, line: 2759, type: !460)
!6098 = !DILocalVariable(name: "typetail", scope: !6089, file: !3, line: 2761, type: !460)
!6099 = !DILocalVariable(name: "val", scope: !6089, file: !3, line: 2761, type: !460)
!6100 = !DILocalVariable(name: "parmnum", scope: !6089, file: !3, line: 2762, type: !7)
!6101 = !DILocalVariable(name: "error_args", scope: !6089, file: !3, line: 2763, type: !452)
!6102 = !DILocalVariable(name: "type_generic", scope: !6089, file: !3, line: 2764, type: !577)
!6103 = !DILocalVariable(name: "type_generic_remove_excess_precision", scope: !6089, file: !3, line: 2766, type: !452)
!6104 = !DILocalVariable(name: "selector", scope: !6089, file: !3, line: 2767, type: !460)
!6105 = !DILocalVariable(name: "type", scope: !6106, file: !3, line: 2809, type: !460)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 2808, column: 5)
!6107 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 2805, column: 3)
!6108 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 2805, column: 3)
!6109 = !DILocalVariable(name: "valtype", scope: !6106, file: !3, line: 2810, type: !460)
!6110 = !DILocalVariable(name: "rname", scope: !6106, file: !3, line: 2811, type: !460)
!6111 = !DILocalVariable(name: "argnum", scope: !6106, file: !3, line: 2812, type: !453)
!6112 = !DILocalVariable(name: "invalid_func_diag", scope: !6106, file: !3, line: 2813, type: !458)
!6113 = !DILocalVariable(name: "excess_precision", scope: !6106, file: !3, line: 2814, type: !452)
!6114 = !DILocalVariable(name: "npc", scope: !6106, file: !3, line: 2815, type: !452)
!6115 = !DILocalVariable(name: "parmval", scope: !6106, file: !3, line: 2816, type: !460)
!6116 = !DILocalVariable(name: "origtype", scope: !6117, file: !3, line: 2863, type: !460)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 2862, column: 6)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 2856, column: 8)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 2853, column: 2)
!6120 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 2852, column: 11)
!6121 = !DILocalVariable(name: "formal_prec", scope: !6122, file: !3, line: 2869, type: !7)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !3, line: 2868, column: 3)
!6123 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 2867, column: 12)
!6124 = !DILocalVariable(name: "would_have_been", scope: !6125, file: !3, line: 2947, type: !460)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 2946, column: 7)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 2944, column: 14)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 2904, column: 14)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 2896, column: 14)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2891, column: 14)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 2886, column: 14)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 2881, column: 14)
!6132 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 2876, column: 9)
!6133 = !DILocalVariable(name: "type1", scope: !6125, file: !3, line: 2948, type: !460)
!6134 = !DILocation(line: 0, scope: !6089)
!6135 = !DILocation(line: 2761, column: 3, scope: !6089)
!6136 = !DILocation(line: 2764, column: 29, scope: !6089)
!6137 = !DILocation(line: 2765, column: 5, scope: !6089)
!6138 = !DILocation(line: 2765, column: 42, scope: !6089)
!6139 = !DILocation(line: 2765, column: 8, scope: !6089)
!6140 = !DILocation(line: 2771, column: 7, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 2771, column: 7)
!6142 = !DILocation(line: 2771, column: 28, scope: !6141)
!6143 = !DILocation(line: 2772, column: 7, scope: !6141)
!6144 = !DILocation(line: 2772, column: 10, scope: !6141)
!6145 = !DILocation(line: 2772, column: 49, scope: !6141)
!6146 = !DILocation(line: 2771, column: 7, scope: !6089)
!6147 = !DILocation(line: 2773, column: 5, scope: !6141)
!6148 = !DILocation(line: 2776, column: 14, scope: !6089)
!6149 = !DILocation(line: 2781, column: 7, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 2781, column: 7)
!6151 = !DILocation(line: 2782, column: 7, scope: !6150)
!6152 = !DILocation(line: 2782, column: 10, scope: !6150)
!6153 = !DILocation(line: 2783, column: 7, scope: !6150)
!6154 = !DILocation(line: 2783, column: 40, scope: !6150)
!6155 = !DILocation(line: 2781, column: 7, scope: !6089)
!6156 = !DILocation(line: 2785, column: 15, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 2784, column: 5)
!6158 = !DILocation(line: 2785, column: 7, scope: !6157)
!6159 = !DILocation(line: 2798, column: 4, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 2786, column: 2)
!6161 = !DILocation(line: 0, scope: !6107)
!6162 = !DILocation(line: 0, scope: !6106)
!6163 = !DILocation(line: 0, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 2827, column: 11)
!6165 = !DILocation(line: 0, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 2841, column: 11)
!6167 = !DILocation(line: 0, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 2843, column: 2)
!6169 = !DILocation(line: 0, scope: !6117)
!6170 = !DILocation(line: 0, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 3004, column: 12)
!6172 = !DILocation(line: 0, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 2822, column: 8)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2819, column: 2)
!6175 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 2818, column: 11)
!6176 = !DILocation(line: 2805, column: 8, scope: !6108)
!6177 = !DILocation(line: 2763, column: 8, scope: !6089)
!6178 = !DILocation(line: 0, scope: !6108)
!6179 = !DILocation(line: 2805, column: 17, scope: !6108)
!6180 = !DILocation(line: 2806, column: 8, scope: !6107)
!6181 = !DILocation(line: 2805, column: 3, scope: !6108)
!6182 = !DILocation(line: 2809, column: 19, scope: !6106)
!6183 = !DILocation(line: 2809, column: 30, scope: !6106)
!6184 = !DILocation(line: 2810, column: 22, scope: !6106)
!6185 = !DILocation(line: 2812, column: 28, scope: !6106)
!6186 = !DILocation(line: 2818, column: 19, scope: !6175)
!6187 = !DILocation(line: 2818, column: 16, scope: !6175)
!6188 = !DILocation(line: 2818, column: 11, scope: !6106)
!6189 = !DILocation(line: 2820, column: 14, scope: !6174)
!6190 = !DILocation(line: 2820, column: 4, scope: !6174)
!6191 = !DILocation(line: 2822, column: 16, scope: !6173)
!6192 = !DILocation(line: 2822, column: 20, scope: !6173)
!6193 = !DILocation(line: 2822, column: 8, scope: !6174)
!6194 = !DILocation(line: 2823, column: 14, scope: !6173)
!6195 = !DILocation(line: 2823, column: 6, scope: !6173)
!6196 = !DILocation(line: 2827, column: 30, scope: !6164)
!6197 = !DILocation(line: 2827, column: 20, scope: !6164)
!6198 = !DILocation(line: 2833, column: 13, scope: !6106)
!6199 = !DILocation(line: 2841, column: 11, scope: !6166)
!6200 = !DILocation(line: 2841, column: 27, scope: !6166)
!6201 = !DILocation(line: 2842, column: 4, scope: !6166)
!6202 = !DILocation(line: 2842, column: 8, scope: !6166)
!6203 = !DILocation(line: 2842, column: 13, scope: !6166)
!6204 = !DILocation(line: 2844, column: 10, scope: !6168)
!6205 = !DILocation(line: 2844, column: 8, scope: !6168)
!6206 = !DILocation(line: 2846, column: 2, scope: !6168)
!6207 = !DILocation(line: 2847, column: 27, scope: !6106)
!6208 = !DILocation(line: 2847, column: 13, scope: !6106)
!6209 = !DILocation(line: 2848, column: 7, scope: !6106)
!6210 = distinct !{!6210, !6209, !6209}
!6211 = !DILocation(line: 2850, column: 13, scope: !6106)
!6212 = !DILocation(line: 2850, column: 11, scope: !6106)
!6213 = !DILocation(line: 2852, column: 16, scope: !6120)
!6214 = !DILocation(line: 2852, column: 11, scope: !6106)
!6215 = !DILocation(line: 2856, column: 16, scope: !6118)
!6216 = !DILocation(line: 2856, column: 13, scope: !6118)
!6217 = !DILocation(line: 2856, column: 32, scope: !6118)
!6218 = !DILocation(line: 2856, column: 36, scope: !6118)
!6219 = !DILocation(line: 2856, column: 8, scope: !6119)
!6220 = !DILocation(line: 2858, column: 8, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 2857, column: 6)
!6222 = !DILocation(line: 2859, column: 18, scope: !6221)
!6223 = !DILocation(line: 2860, column: 6, scope: !6221)
!6224 = !DILocation(line: 2867, column: 12, scope: !6123)
!6225 = !DILocation(line: 2867, column: 43, scope: !6123)
!6226 = !DILocation(line: 2867, column: 40, scope: !6123)
!6227 = !DILocation(line: 2869, column: 32, scope: !6122)
!6228 = !DILocation(line: 0, scope: !6122)
!6229 = !DILocation(line: 2871, column: 9, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 2871, column: 9)
!6231 = !DILocation(line: 2872, column: 9, scope: !6230)
!6232 = !DILocation(line: 2872, column: 12, scope: !6230)
!6233 = !DILocation(line: 2872, column: 32, scope: !6230)
!6234 = !DILocation(line: 2871, column: 9, scope: !6122)
!6235 = !DILocation(line: 2873, column: 7, scope: !6230)
!6236 = !DILocation(line: 2876, column: 9, scope: !6132)
!6237 = !DILocation(line: 2877, column: 9, scope: !6132)
!6238 = !DILocation(line: 2877, column: 12, scope: !6132)
!6239 = !DILocation(line: 2877, column: 32, scope: !6132)
!6240 = !DILocation(line: 2876, column: 9, scope: !6122)
!6241 = !DILocation(line: 2878, column: 7, scope: !6132)
!6242 = !DILocation(line: 2881, column: 31, scope: !6131)
!6243 = !DILocation(line: 2882, column: 7, scope: !6131)
!6244 = !DILocation(line: 2882, column: 10, scope: !6131)
!6245 = !DILocation(line: 2882, column: 30, scope: !6131)
!6246 = !DILocation(line: 2881, column: 14, scope: !6132)
!6247 = !DILocation(line: 2883, column: 7, scope: !6131)
!6248 = !DILocation(line: 2886, column: 31, scope: !6130)
!6249 = !DILocation(line: 2887, column: 7, scope: !6130)
!6250 = !DILocation(line: 2887, column: 10, scope: !6130)
!6251 = !DILocation(line: 2886, column: 14, scope: !6131)
!6252 = !DILocation(line: 2888, column: 7, scope: !6130)
!6253 = !DILocation(line: 2892, column: 7, scope: !6129)
!6254 = !DILocation(line: 2892, column: 10, scope: !6129)
!6255 = !DILocation(line: 2891, column: 14, scope: !6130)
!6256 = !DILocation(line: 2893, column: 7, scope: !6129)
!6257 = !DILocation(line: 2897, column: 7, scope: !6128)
!6258 = !DILocation(line: 2897, column: 10, scope: !6128)
!6259 = !DILocation(line: 2897, column: 30, scope: !6128)
!6260 = !DILocation(line: 2896, column: 14, scope: !6129)
!6261 = !DILocation(line: 2898, column: 7, scope: !6128)
!6262 = !DILocation(line: 2905, column: 7, scope: !6127)
!6263 = !DILocation(line: 2905, column: 10, scope: !6127)
!6264 = !DILocation(line: 2905, column: 30, scope: !6127)
!6265 = !DILocation(line: 2904, column: 14, scope: !6128)
!6266 = !DILocation(line: 2909, column: 28, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 2909, column: 13)
!6268 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 2906, column: 7)
!6269 = !DILocation(line: 2909, column: 25, scope: !6267)
!6270 = !DILocation(line: 2910, column: 17, scope: !6267)
!6271 = !DILocation(line: 2910, column: 14, scope: !6267)
!6272 = !DILocation(line: 2910, column: 6, scope: !6267)
!6273 = !DILocation(line: 2911, column: 4, scope: !6267)
!6274 = !DILocation(line: 2919, column: 24, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 2919, column: 19)
!6276 = !DILocation(line: 2920, column: 11, scope: !6275)
!6277 = !DILocation(line: 2920, column: 20, scope: !6275)
!6278 = !DILocation(line: 2921, column: 19, scope: !6275)
!6279 = !DILocation(line: 2921, column: 16, scope: !6275)
!6280 = !DILocation(line: 2921, column: 8, scope: !6275)
!6281 = !DILocation(line: 2922, column: 19, scope: !6275)
!6282 = !DILocation(line: 2922, column: 16, scope: !6275)
!6283 = !DILocation(line: 2923, column: 19, scope: !6275)
!6284 = !DILocation(line: 2924, column: 19, scope: !6275)
!6285 = !DILocation(line: 2925, column: 19, scope: !6275)
!6286 = !DILocation(line: 2927, column: 11, scope: !6275)
!6287 = !DILocation(line: 2927, column: 8, scope: !6275)
!6288 = !DILocation(line: 2928, column: 8, scope: !6275)
!6289 = !DILocation(line: 2930, column: 9, scope: !6275)
!6290 = !DILocation(line: 2929, column: 12, scope: !6275)
!6291 = !DILocation(line: 2932, column: 13, scope: !6275)
!6292 = !DILocation(line: 2934, column: 12, scope: !6275)
!6293 = !DILocation(line: 2936, column: 4, scope: !6275)
!6294 = !DILocation(line: 2944, column: 14, scope: !6126)
!6295 = !DILocation(line: 2944, column: 42, scope: !6126)
!6296 = !DILocation(line: 2944, column: 45, scope: !6126)
!6297 = !DILocation(line: 2945, column: 7, scope: !6126)
!6298 = !DILocation(line: 2945, column: 10, scope: !6126)
!6299 = !DILocation(line: 2944, column: 14, scope: !6127)
!6300 = !DILocation(line: 2947, column: 52, scope: !6125)
!6301 = !DILocation(line: 2947, column: 32, scope: !6125)
!6302 = !DILocation(line: 0, scope: !6125)
!6303 = !DILocation(line: 2948, column: 22, scope: !6125)
!6304 = !DILocation(line: 2950, column: 13, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 2950, column: 13)
!6306 = !DILocation(line: 2950, column: 30, scope: !6305)
!6307 = !DILocation(line: 2951, column: 6, scope: !6305)
!6308 = !DILocation(line: 2951, column: 10, scope: !6305)
!6309 = !DILocation(line: 2952, column: 13, scope: !6305)
!6310 = !DILocation(line: 2952, column: 10, scope: !6305)
!6311 = !DILocation(line: 2950, column: 13, scope: !6125)
!6312 = !DILocation(line: 2956, column: 33, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 2956, column: 18)
!6314 = !DILocation(line: 2956, column: 30, scope: !6313)
!6315 = !DILocation(line: 2956, column: 18, scope: !6305)
!6316 = !DILocation(line: 2957, column: 4, scope: !6313)
!6317 = !DILocation(line: 2961, column: 42, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 2961, column: 18)
!6319 = !DILocation(line: 2961, column: 39, scope: !6318)
!6320 = !DILocation(line: 2961, column: 18, scope: !6313)
!6321 = !DILocation(line: 2966, column: 18, scope: !6318)
!6322 = !DILocation(line: 2968, column: 18, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 2968, column: 18)
!6324 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 2966, column: 18)
!6325 = !DILocation(line: 2968, column: 34, scope: !6323)
!6326 = !DILocation(line: 2969, column: 11, scope: !6323)
!6327 = !DILocation(line: 2969, column: 14, scope: !6323)
!6328 = !DILocation(line: 2968, column: 18, scope: !6324)
!6329 = !DILocation(line: 2977, column: 18, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 2977, column: 18)
!6331 = !DILocation(line: 2977, column: 45, scope: !6330)
!6332 = !DILocation(line: 2977, column: 43, scope: !6330)
!6333 = !DILocation(line: 2978, column: 11, scope: !6330)
!6334 = !DILocation(line: 2978, column: 14, scope: !6330)
!6335 = !DILocation(line: 2977, column: 18, scope: !6323)
!6336 = !DILocation(line: 2980, column: 18, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 2980, column: 18)
!6338 = !DILocation(line: 2980, column: 18, scope: !6330)
!6339 = !DILocation(line: 2981, column: 4, scope: !6337)
!6340 = !DILocation(line: 2986, column: 4, scope: !6337)
!6341 = !DILocation(line: 2994, column: 12, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 2994, column: 12)
!6343 = !DILocation(line: 2994, column: 12, scope: !6117)
!6344 = !DILocation(line: 2995, column: 9, scope: !6342)
!6345 = !DILocation(line: 2995, column: 7, scope: !6342)
!6346 = !DILocation(line: 2995, column: 3, scope: !6342)
!6347 = !DILocation(line: 2996, column: 20, scope: !6117)
!6348 = !DILocation(line: 2998, column: 8, scope: !6117)
!6349 = !DILocation(line: 2999, column: 42, scope: !6117)
!6350 = !DILocation(line: 2999, column: 64, scope: !6117)
!6351 = !DILocation(line: 2999, column: 18, scope: !6117)
!6352 = !DILocation(line: 3004, column: 26, scope: !6171)
!6353 = !DILocation(line: 3004, column: 46, scope: !6171)
!6354 = !DILocation(line: 3004, column: 56, scope: !6171)
!6355 = !DILocation(line: 3004, column: 12, scope: !6171)
!6356 = !DILocation(line: 3005, column: 5, scope: !6171)
!6357 = !DILocation(line: 3005, column: 8, scope: !6171)
!6358 = !DILocation(line: 3006, column: 5, scope: !6171)
!6359 = !DILocation(line: 3006, column: 9, scope: !6171)
!6360 = !DILocation(line: 3006, column: 33, scope: !6171)
!6361 = !DILocation(line: 3006, column: 31, scope: !6171)
!6362 = !DILocation(line: 3004, column: 12, scope: !6117)
!6363 = !DILocation(line: 3007, column: 13, scope: !6171)
!6364 = !DILocation(line: 3007, column: 3, scope: !6171)
!6365 = !DILocation(line: 3010, column: 16, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 3010, column: 16)
!6367 = !DILocation(line: 3010, column: 36, scope: !6366)
!6368 = !DILocation(line: 3011, column: 9, scope: !6366)
!6369 = !DILocation(line: 3011, column: 13, scope: !6366)
!6370 = !DILocation(line: 3012, column: 8, scope: !6366)
!6371 = !DILocation(line: 3012, column: 6, scope: !6366)
!6372 = !DILocation(line: 3013, column: 9, scope: !6366)
!6373 = !DILocation(line: 3013, column: 13, scope: !6366)
!6374 = !DILocation(line: 3010, column: 16, scope: !6120)
!6375 = !DILocation(line: 3015, column: 8, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 3014, column: 9)
!6377 = !DILocation(line: 3016, column: 6, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 3015, column: 8)
!6379 = !DILocation(line: 3019, column: 16, scope: !6378)
!6380 = !DILocation(line: 3021, column: 16, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 3021, column: 16)
!6382 = !DILocation(line: 3021, column: 33, scope: !6381)
!6383 = !DILocation(line: 3024, column: 12, scope: !6381)
!6384 = !DILocation(line: 3024, column: 2, scope: !6381)
!6385 = !DILocation(line: 3026, column: 17, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 3025, column: 16)
!6387 = !DILocation(line: 3026, column: 3, scope: !6386)
!6388 = !DILocation(line: 3025, column: 35, scope: !6386)
!6389 = !DILocation(line: 3025, column: 16, scope: !6381)
!6390 = !DILocation(line: 3028, column: 4, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3027, column: 2)
!6392 = !DILocation(line: 3029, column: 4, scope: !6391)
!6393 = !DILocation(line: 3033, column: 32, scope: !6386)
!6394 = !DILocation(line: 3033, column: 12, scope: !6386)
!6395 = !DILocation(line: 0, scope: !6120)
!6396 = !DILocation(line: 3035, column: 7, scope: !6106)
!6397 = !DILocation(line: 3036, column: 22, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 3036, column: 11)
!6399 = !DILocation(line: 3036, column: 19, scope: !6398)
!6400 = !DILocation(line: 3036, column: 11, scope: !6106)
!6401 = !DILocation(line: 3039, column: 11, scope: !6106)
!6402 = !DILocation(line: 3040, column: 13, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 3039, column: 11)
!6404 = !DILocation(line: 3040, column: 2, scope: !6403)
!6405 = !DILocation(line: 2805, column: 3, scope: !6107)
!6406 = distinct !{!6406, !6181, !6407}
!6407 = !DILocation(line: 3041, column: 5, scope: !6108)
!6408 = !DILocation(line: 3043, column: 3, scope: !6089)
!6409 = !DILocation(line: 3045, column: 16, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 3045, column: 7)
!6411 = !DILocation(line: 3045, column: 21, scope: !6410)
!6412 = !DILocation(line: 3045, column: 24, scope: !6410)
!6413 = !DILocation(line: 3045, column: 49, scope: !6410)
!6414 = !DILocation(line: 3045, column: 46, scope: !6410)
!6415 = !DILocation(line: 3045, column: 7, scope: !6089)
!6416 = !DILocation(line: 3047, column: 17, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 3046, column: 5)
!6418 = !DILocation(line: 3047, column: 7, scope: !6417)
!6419 = !DILocation(line: 3049, column: 19, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 3049, column: 11)
!6421 = !DILocation(line: 3049, column: 23, scope: !6420)
!6422 = !DILocation(line: 3049, column: 11, scope: !6417)
!6423 = !DILocation(line: 3050, column: 10, scope: !6420)
!6424 = !DILocation(line: 3050, column: 2, scope: !6420)
!6425 = !DILocation(line: 3054, column: 10, scope: !6089)
!6426 = !DILocation(line: 3054, column: 3, scope: !6089)
!6427 = !DILocation(line: 3055, column: 1, scope: !6089)
!6428 = distinct !DISubprogram(name: "VEC_tree_base_address", scope: !135, file: !135, line: 182, type: !6429, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6431)
!6429 = !DISubroutineType(types: !6430)
!6430 = !{!823, !5871}
!6431 = !{!6432}
!6432 = !DILocalVariable(name: "vec_", arg: 1, scope: !6428, file: !135, line: 182, type: !5871)
!6433 = !DILocation(line: 0, scope: !6428)
!6434 = !DILocation(line: 182, column: 1, scope: !6428)
!6435 = distinct !DISubprogram(name: "parser_build_unary_op", scope: !3, file: !3, line: 3066, type: !6436, scopeLine: 3067, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6438)
!6436 = !DISubroutineType(types: !6437)
!6437 = !{!1909, !585, !134, !1909}
!6438 = !{!6439, !6440, !6441, !6442}
!6439 = !DILocalVariable(name: "loc", arg: 1, scope: !6435, file: !3, line: 3066, type: !585)
!6440 = !DILocalVariable(name: "code", arg: 2, scope: !6435, file: !3, line: 3066, type: !134)
!6441 = !DILocalVariable(name: "arg", arg: 3, scope: !6435, file: !3, line: 3066, type: !1909)
!6442 = !DILocalVariable(name: "result", scope: !6435, file: !3, line: 3068, type: !1909)
!6443 = !DILocation(line: 0, scope: !6435)
!6444 = !DILocation(line: 3066, column: 75, scope: !6435)
!6445 = !DILocation(line: 3068, column: 17, scope: !6435)
!6446 = !DILocation(line: 3070, column: 49, scope: !6435)
!6447 = !DILocation(line: 3070, column: 18, scope: !6435)
!6448 = !DILocation(line: 3070, column: 10, scope: !6435)
!6449 = !DILocation(line: 3070, column: 16, scope: !6435)
!6450 = !DILocation(line: 3071, column: 10, scope: !6435)
!6451 = !DILocation(line: 3071, column: 24, scope: !6435)
!6452 = !DILocation(line: 3072, column: 10, scope: !6435)
!6453 = !DILocation(line: 3072, column: 24, scope: !6435)
!6454 = !DILocation(line: 3074, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 3074, column: 7)
!6456 = !DILocation(line: 3074, column: 38, scope: !6455)
!6457 = !DILocation(line: 3074, column: 42, scope: !6455)
!6458 = !DILocation(line: 3074, column: 7, scope: !6435)
!6459 = !DILocation(line: 3075, column: 5, scope: !6455)
!6460 = !DILocation(line: 3077, column: 3, scope: !6435)
!6461 = distinct !DISubprogram(name: "build_unary_op", scope: !3, file: !3, line: 3285, type: !6462, scopeLine: 3287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6464)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{!460, !585, !134, !460, !453}
!6464 = !{!6465, !6466, !6467, !6468, !6469, !6470, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6482, !6485, !6486, !6488, !6491, !6494, !6497, !6498}
!6465 = !DILocalVariable(name: "location", arg: 1, scope: !6461, file: !3, line: 3285, type: !585)
!6466 = !DILocalVariable(name: "code", arg: 2, scope: !6461, file: !3, line: 3286, type: !134)
!6467 = !DILocalVariable(name: "xarg", arg: 3, scope: !6461, file: !3, line: 3286, type: !460)
!6468 = !DILocalVariable(name: "flag", arg: 4, scope: !6461, file: !3, line: 3286, type: !453)
!6469 = !DILocalVariable(name: "arg", scope: !6461, file: !3, line: 3289, type: !460)
!6470 = !DILocalVariable(name: "argtype", scope: !6461, file: !3, line: 3290, type: !460)
!6471 = !DILocalVariable(name: "typecode", scope: !6461, file: !3, line: 3291, type: !134)
!6472 = !DILocalVariable(name: "val", scope: !6461, file: !3, line: 3292, type: !460)
!6473 = !DILocalVariable(name: "ret", scope: !6461, file: !3, line: 3293, type: !460)
!6474 = !DILocalVariable(name: "eptype", scope: !6461, file: !3, line: 3294, type: !460)
!6475 = !DILocalVariable(name: "noconvert", scope: !6461, file: !3, line: 3295, type: !453)
!6476 = !DILocalVariable(name: "invalid_op_diag", scope: !6461, file: !3, line: 3296, type: !458)
!6477 = !DILocalVariable(name: "int_operands", scope: !6461, file: !3, line: 3297, type: !452)
!6478 = !DILocalVariable(name: "inner", scope: !6479, file: !3, line: 3449, type: !460)
!6479 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 3448, column: 2)
!6480 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3447, column: 11)
!6481 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3326, column: 5)
!6482 = !DILocalVariable(name: "real", scope: !6483, file: !3, line: 3484, type: !460)
!6483 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 3483, column: 2)
!6484 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3482, column: 11)
!6485 = !DILocalVariable(name: "imag", scope: !6483, file: !3, line: 3484, type: !460)
!6486 = !DILocalVariable(name: "inc", scope: !6487, file: !3, line: 3514, type: !460)
!6487 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3513, column: 7)
!6488 = !DILocalVariable(name: "op0", scope: !6489, file: !3, line: 3623, type: !460)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 3622, column: 2)
!6490 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3621, column: 11)
!6491 = !DILocalVariable(name: "inner", scope: !6492, file: !3, line: 3644, type: !460)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 3643, column: 2)
!6493 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3642, column: 11)
!6494 = !DILocalVariable(name: "op0", scope: !6495, file: !3, line: 3681, type: !460)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 3680, column: 2)
!6496 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3678, column: 11)
!6497 = !DILocalVariable(name: "op1", scope: !6495, file: !3, line: 3682, type: !460)
!6498 = !DILabel(scope: !6461, name: "return_build_unary_op", file: !3, line: 3706)
!6499 = !DILocation(line: 0, scope: !6461)
!6500 = !DILocation(line: 3293, column: 14, scope: !6461)
!6501 = !DILocation(line: 3299, column: 18, scope: !6461)
!6502 = !DILocation(line: 3300, column: 7, scope: !6461)
!6503 = !DILocation(line: 3301, column: 11, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3300, column: 7)
!6505 = !DILocation(line: 3301, column: 5, scope: !6504)
!6506 = !DILocation(line: 3303, column: 12, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3303, column: 7)
!6508 = !DILocation(line: 3303, column: 7, scope: !6461)
!6509 = !DILocation(line: 3304, column: 11, scope: !6507)
!6510 = !DILocation(line: 3304, column: 5, scope: !6507)
!6511 = !DILocation(line: 3306, column: 14, scope: !6461)
!6512 = !DILocation(line: 3307, column: 7, scope: !6461)
!6513 = !DILocation(line: 3308, column: 12, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3307, column: 7)
!6515 = !DILocation(line: 3308, column: 5, scope: !6514)
!6516 = !DILocation(line: 3310, column: 5, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3309, column: 7)
!6518 = !DILocation(line: 3313, column: 18, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3312, column: 7)
!6520 = !DILocation(line: 3313, column: 42, scope: !6519)
!6521 = !DILocation(line: 3313, column: 10, scope: !6519)
!6522 = !DILocation(line: 3313, column: 8, scope: !6519)
!6523 = !DILocation(line: 3312, column: 7, scope: !6461)
!6524 = !DILocation(line: 3315, column: 7, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 3314, column: 5)
!6526 = !DILocation(line: 3316, column: 14, scope: !6525)
!6527 = !DILocation(line: 3316, column: 7, scope: !6525)
!6528 = !DILocation(line: 3319, column: 7, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3319, column: 7)
!6530 = !DILocation(line: 3319, column: 23, scope: !6529)
!6531 = !DILocation(line: 3319, column: 7, scope: !6461)
!6532 = !DILocation(line: 3321, column: 16, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 3320, column: 5)
!6534 = !DILocation(line: 3322, column: 13, scope: !6533)
!6535 = !DILocation(line: 3323, column: 5, scope: !6533)
!6536 = !DILocation(line: 3325, column: 3, scope: !6461)
!6537 = !DILocation(line: 3331, column: 38, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3331, column: 11)
!6539 = !DILocation(line: 3335, column: 4, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 3334, column: 2)
!6541 = !DILocation(line: 3336, column: 11, scope: !6540)
!6542 = !DILocation(line: 3336, column: 4, scope: !6540)
!6543 = !DILocation(line: 3338, column: 17, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 3338, column: 16)
!6545 = !DILocation(line: 3338, column: 16, scope: !6538)
!6546 = !DILocation(line: 3339, column: 8, scope: !6544)
!6547 = !DILocation(line: 3339, column: 2, scope: !6544)
!6548 = !DILocation(line: 3340, column: 13, scope: !6481)
!6549 = !DILocation(line: 3341, column: 7, scope: !6481)
!6550 = !DILocation(line: 3344, column: 38, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3344, column: 11)
!6552 = !DILocation(line: 3348, column: 4, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 3347, column: 2)
!6554 = !DILocation(line: 3349, column: 11, scope: !6553)
!6555 = !DILocation(line: 3349, column: 4, scope: !6553)
!6556 = !DILocation(line: 3351, column: 17, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 3351, column: 16)
!6558 = !DILocation(line: 3351, column: 16, scope: !6551)
!6559 = !DILocation(line: 3352, column: 8, scope: !6557)
!6560 = !DILocation(line: 3352, column: 2, scope: !6557)
!6561 = !DILocation(line: 3358, column: 4, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3357, column: 11)
!6563 = !DILocation(line: 3359, column: 12, scope: !6562)
!6564 = !DILocation(line: 3357, column: 11, scope: !6481)
!6565 = !DILocation(line: 3361, column: 9, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 3361, column: 8)
!6567 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 3360, column: 2)
!6568 = !DILocation(line: 3361, column: 8, scope: !6567)
!6569 = !DILocation(line: 3362, column: 12, scope: !6566)
!6570 = !DILocation(line: 3362, column: 6, scope: !6566)
!6571 = !DILocation(line: 3364, column: 25, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 3364, column: 16)
!6573 = !DILocation(line: 3364, column: 16, scope: !6562)
!6574 = !DILocation(line: 3367, column: 4, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 3365, column: 2)
!6576 = !DILocation(line: 3369, column: 9, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 3369, column: 8)
!6578 = !DILocation(line: 3369, column: 8, scope: !6575)
!6579 = !DILocation(line: 3370, column: 12, scope: !6577)
!6580 = !DILocation(line: 3370, column: 6, scope: !6577)
!6581 = !DILocation(line: 3374, column: 4, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 3373, column: 2)
!6583 = !DILocation(line: 3375, column: 11, scope: !6582)
!6584 = !DILocation(line: 3375, column: 4, scope: !6582)
!6585 = !DILocation(line: 3380, column: 38, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3380, column: 11)
!6587 = !DILocation(line: 3382, column: 4, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 3381, column: 2)
!6589 = !DILocation(line: 3383, column: 11, scope: !6588)
!6590 = !DILocation(line: 3383, column: 4, scope: !6588)
!6591 = !DILocation(line: 3385, column: 17, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 3385, column: 16)
!6593 = !DILocation(line: 3385, column: 16, scope: !6586)
!6594 = !DILocation(line: 3386, column: 8, scope: !6592)
!6595 = !DILocation(line: 3386, column: 2, scope: !6592)
!6596 = !DILocation(line: 3391, column: 38, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3391, column: 11)
!6598 = !DILocation(line: 3394, column: 4, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 3393, column: 2)
!6600 = !DILocation(line: 3395, column: 11, scope: !6599)
!6601 = !DILocation(line: 3395, column: 4, scope: !6599)
!6602 = !DILocation(line: 3397, column: 17, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 3397, column: 16)
!6604 = !DILocation(line: 3397, column: 16, scope: !6597)
!6605 = !DILocation(line: 3398, column: 8, scope: !6603)
!6606 = !DILocation(line: 3398, column: 2, scope: !6603)
!6607 = !DILocation(line: 3402, column: 36, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3402, column: 11)
!6609 = !DILocation(line: 3406, column: 4, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 3405, column: 2)
!6611 = !DILocation(line: 3408, column: 11, scope: !6610)
!6612 = !DILocation(line: 3408, column: 4, scope: !6610)
!6613 = !DILocation(line: 3410, column: 13, scope: !6481)
!6614 = !DILocation(line: 3411, column: 13, scope: !6481)
!6615 = !DILocation(line: 3413, column: 11, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3413, column: 11)
!6617 = !DILocation(line: 3413, column: 24, scope: !6616)
!6618 = !DILocation(line: 3413, column: 27, scope: !6616)
!6619 = !DILocation(line: 3413, column: 11, scope: !6481)
!6620 = !DILocation(line: 3414, column: 13, scope: !6616)
!6621 = !DILocation(line: 3418, column: 11, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3418, column: 11)
!6623 = !DILocation(line: 3418, column: 27, scope: !6622)
!6624 = !DILocation(line: 3418, column: 11, scope: !6481)
!6625 = !DILocation(line: 3419, column: 8, scope: !6622)
!6626 = !DILocation(line: 3419, column: 2, scope: !6622)
!6627 = !DILocation(line: 3420, column: 16, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 3420, column: 16)
!6629 = !DILocation(line: 3420, column: 44, scope: !6628)
!6630 = !DILocation(line: 3420, column: 16, scope: !6622)
!6631 = !DILocation(line: 3421, column: 8, scope: !6628)
!6632 = !DILocation(line: 3421, column: 2, scope: !6628)
!6633 = !DILocation(line: 0, scope: !6622)
!6634 = !DILocation(line: 3425, column: 11, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3425, column: 11)
!6636 = !DILocation(line: 3425, column: 18, scope: !6635)
!6637 = !DILocation(line: 3425, column: 21, scope: !6635)
!6638 = !DILocation(line: 3425, column: 40, scope: !6635)
!6639 = !DILocation(line: 3425, column: 11, scope: !6481)
!6640 = !DILocation(line: 3426, column: 11, scope: !6635)
!6641 = !DILocation(line: 3426, column: 2, scope: !6635)
!6642 = !DILocation(line: 3430, column: 11, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3430, column: 11)
!6644 = !DILocation(line: 3430, column: 27, scope: !6643)
!6645 = !DILocation(line: 3430, column: 11, scope: !6481)
!6646 = !DILocation(line: 3431, column: 8, scope: !6643)
!6647 = !DILocation(line: 3431, column: 2, scope: !6643)
!6648 = !DILocation(line: 3432, column: 16, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 3432, column: 16)
!6650 = !DILocation(line: 3432, column: 44, scope: !6649)
!6651 = !DILocation(line: 3432, column: 16, scope: !6643)
!6652 = !DILocation(line: 3433, column: 8, scope: !6649)
!6653 = !DILocation(line: 3433, column: 2, scope: !6649)
!6654 = !DILocation(line: 0, scope: !6649)
!6655 = !DILocation(line: 3437, column: 5, scope: !6649)
!6656 = !DILocation(line: 3436, column: 8, scope: !6649)
!6657 = !DILocation(line: 0, scope: !6643)
!6658 = !DILocation(line: 3438, column: 11, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3438, column: 11)
!6660 = !DILocation(line: 3438, column: 18, scope: !6659)
!6661 = !DILocation(line: 3438, column: 21, scope: !6659)
!6662 = !DILocation(line: 3438, column: 40, scope: !6659)
!6663 = !DILocation(line: 3438, column: 11, scope: !6481)
!6664 = !DILocation(line: 3439, column: 11, scope: !6659)
!6665 = !DILocation(line: 3439, column: 2, scope: !6659)
!6666 = !DILocation(line: 3447, column: 11, scope: !6480)
!6667 = !DILocation(line: 3447, column: 27, scope: !6480)
!6668 = !DILocation(line: 3447, column: 11, scope: !6481)
!6669 = !DILocation(line: 3450, column: 12, scope: !6479)
!6670 = !DILocation(line: 3449, column: 17, scope: !6479)
!6671 = !DILocation(line: 0, scope: !6479)
!6672 = !DILocation(line: 3451, column: 17, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 3451, column: 8)
!6674 = !DILocation(line: 3451, column: 14, scope: !6673)
!6675 = !DILocation(line: 3451, column: 8, scope: !6479)
!6676 = !DILocation(line: 3452, column: 6, scope: !6673)
!6677 = !DILocation(line: 3453, column: 10, scope: !6479)
!6678 = !DILocation(line: 3455, column: 4, scope: !6479)
!6679 = !DILocation(line: 3456, column: 4, scope: !6479)
!6680 = !DILocation(line: 3456, column: 39, scope: !6479)
!6681 = !DILocation(line: 3457, column: 4, scope: !6479)
!6682 = !DILocation(line: 3461, column: 40, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3461, column: 11)
!6684 = !DILocation(line: 3462, column: 15, scope: !6683)
!6685 = !DILocation(line: 3462, column: 7, scope: !6683)
!6686 = !DILocation(line: 3461, column: 34, scope: !6683)
!6687 = !DILocation(line: 3461, column: 12, scope: !6683)
!6688 = !DILocation(line: 3461, column: 11, scope: !6481)
!6689 = !DILocation(line: 3465, column: 9, scope: !6683)
!6690 = !DILocation(line: 3465, column: 2, scope: !6683)
!6691 = !DILocation(line: 3467, column: 11, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3467, column: 11)
!6693 = !DILocation(line: 3467, column: 27, scope: !6692)
!6694 = !DILocation(line: 3467, column: 30, scope: !6692)
!6695 = !DILocation(line: 3467, column: 58, scope: !6692)
!6696 = !DILocation(line: 3467, column: 11, scope: !6481)
!6697 = !DILocation(line: 3469, column: 34, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 3469, column: 8)
!6699 = distinct !DILexicalBlock(scope: !6692, file: !3, line: 3468, column: 2)
!6700 = !DILocation(line: 3470, column: 6, scope: !6698)
!6701 = !DILocation(line: 3473, column: 6, scope: !6698)
!6702 = !DILocation(line: 3478, column: 13, scope: !6481)
!6703 = !DILocation(line: 3482, column: 11, scope: !6481)
!6704 = !DILocation(line: 3486, column: 4, scope: !6483)
!6705 = !DILocation(line: 3489, column: 10, scope: !6483)
!6706 = !DILocation(line: 3490, column: 27, scope: !6483)
!6707 = !DILocation(line: 3490, column: 11, scope: !6483)
!6708 = !DILocation(line: 0, scope: !6483)
!6709 = !DILocation(line: 3491, column: 27, scope: !6483)
!6710 = !DILocation(line: 3491, column: 11, scope: !6483)
!6711 = !DILocation(line: 3492, column: 27, scope: !6483)
!6712 = !DILocation(line: 3492, column: 11, scope: !6483)
!6713 = !DILocation(line: 3493, column: 16, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 3493, column: 8)
!6715 = !DILocation(line: 3493, column: 13, scope: !6714)
!6716 = !DILocation(line: 3493, column: 40, scope: !6714)
!6717 = !DILocation(line: 3493, column: 32, scope: !6714)
!6718 = !DILocation(line: 3494, column: 6, scope: !6714)
!6719 = !DILocation(line: 3495, column: 10, scope: !6483)
!6720 = !DILocation(line: 3497, column: 4, scope: !6483)
!6721 = !DILocation(line: 3505, column: 34, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 3505, column: 8)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 3504, column: 2)
!6724 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3502, column: 11)
!6725 = !DILocation(line: 3506, column: 6, scope: !6722)
!6726 = !DILocation(line: 3508, column: 6, scope: !6722)
!6727 = !DILocation(line: 3510, column: 11, scope: !6723)
!6728 = !DILocation(line: 3510, column: 4, scope: !6723)
!6729 = !DILocation(line: 3516, column: 12, scope: !6487)
!6730 = !DILocation(line: 3520, column: 15, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3520, column: 6)
!6732 = !DILocation(line: 3520, column: 6, scope: !6487)
!6733 = !DILocation(line: 3524, column: 11, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 3524, column: 10)
!6735 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 3521, column: 4)
!6736 = !DILocation(line: 3533, column: 15, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 3533, column: 15)
!6738 = !DILocation(line: 3533, column: 47, scope: !6737)
!6739 = !DILocation(line: 3524, column: 10, scope: !6735)
!6740 = !DILocation(line: 3526, column: 33, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 3526, column: 7)
!6742 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 3525, column: 8)
!6743 = !DILocation(line: 3527, column: 5, scope: !6741)
!6744 = !DILocation(line: 3530, column: 5, scope: !6741)
!6745 = !DILocation(line: 3534, column: 8, scope: !6737)
!6746 = !DILocation(line: 3534, column: 43, scope: !6737)
!6747 = !DILocation(line: 3533, column: 15, scope: !6734)
!6748 = !DILocation(line: 3536, column: 33, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 3536, column: 7)
!6750 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 3535, column: 8)
!6751 = !DILocation(line: 3537, column: 24, scope: !6749)
!6752 = !DILocation(line: 3537, column: 5, scope: !6749)
!6753 = !DILocation(line: 3540, column: 24, scope: !6749)
!6754 = !DILocation(line: 3540, column: 5, scope: !6749)
!6755 = !DILocation(line: 3544, column: 29, scope: !6735)
!6756 = !DILocation(line: 3544, column: 12, scope: !6735)
!6757 = !DILocation(line: 0, scope: !6487)
!6758 = !DILocation(line: 3545, column: 40, scope: !6735)
!6759 = !DILocation(line: 3545, column: 12, scope: !6735)
!6760 = !DILocation(line: 3546, column: 4, scope: !6735)
!6761 = !DILocation(line: 3547, column: 11, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 3547, column: 11)
!6763 = !DILocation(line: 3547, column: 11, scope: !6731)
!6764 = !DILocation(line: 3554, column: 10, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3548, column: 4)
!6766 = !DILocation(line: 0, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 3558, column: 15)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3556, column: 15)
!6769 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 3554, column: 10)
!6770 = !DILocation(line: 0, scope: !6768)
!6771 = !DILocation(line: 0, scope: !6769)
!6772 = !DILocation(line: 3563, column: 12, scope: !6765)
!6773 = !DILocation(line: 3564, column: 12, scope: !6765)
!6774 = !DILocation(line: 3565, column: 4, scope: !6765)
!6775 = !DILocation(line: 3568, column: 12, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3567, column: 4)
!6777 = !DILocation(line: 3569, column: 12, scope: !6776)
!6778 = !DILocation(line: 0, scope: !6731)
!6779 = !DILocation(line: 3573, column: 6, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3573, column: 6)
!6781 = !DILocation(line: 3573, column: 6, scope: !6487)
!6782 = !DILocation(line: 3576, column: 15, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 3574, column: 4)
!6784 = !DILocation(line: 3577, column: 18, scope: !6783)
!6785 = !DILocation(line: 3577, column: 10, scope: !6783)
!6786 = !DILocation(line: 3576, column: 9, scope: !6783)
!6787 = !DILocation(line: 3575, column: 6, scope: !6783)
!6788 = !DILocation(line: 3579, column: 13, scope: !6783)
!6789 = !DILocation(line: 3579, column: 6, scope: !6783)
!6790 = !DILocation(line: 3581, column: 11, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 3581, column: 11)
!6792 = !DILocation(line: 3581, column: 11, scope: !6780)
!6793 = !DILocation(line: 3583, column: 15, scope: !6791)
!6794 = !DILocation(line: 3584, column: 18, scope: !6791)
!6795 = !DILocation(line: 3584, column: 10, scope: !6791)
!6796 = !DILocation(line: 3583, column: 9, scope: !6791)
!6797 = !DILocation(line: 3582, column: 4, scope: !6791)
!6798 = !DILocation(line: 3587, column: 6, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3587, column: 6)
!6800 = !DILocation(line: 3587, column: 34, scope: !6799)
!6801 = !DILocation(line: 3587, column: 6, scope: !6487)
!6802 = !DILocation(line: 3588, column: 10, scope: !6799)
!6803 = !DILocation(line: 3588, column: 4, scope: !6799)
!6804 = !DILocation(line: 3590, column: 10, scope: !6799)
!6805 = !DILocation(line: 0, scope: !6799)
!6806 = !DILocation(line: 3591, column: 2, scope: !6487)
!6807 = !DILocation(line: 3591, column: 26, scope: !6487)
!6808 = !DILocation(line: 3592, column: 6, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3592, column: 6)
!6810 = !DILocation(line: 3592, column: 22, scope: !6809)
!6811 = !DILocation(line: 3592, column: 6, scope: !6487)
!6812 = !DILocation(line: 3593, column: 26, scope: !6809)
!6813 = !DILocation(line: 3593, column: 4, scope: !6809)
!6814 = !DILocation(line: 3604, column: 11, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3604, column: 11)
!6816 = !DILocation(line: 3605, column: 4, scope: !6815)
!6817 = !DILocation(line: 3605, column: 7, scope: !6815)
!6818 = !DILocation(line: 3605, column: 36, scope: !6815)
!6819 = !DILocation(line: 3606, column: 4, scope: !6815)
!6820 = !DILocation(line: 3606, column: 8, scope: !6815)
!6821 = !DILocation(line: 3606, column: 24, scope: !6815)
!6822 = !DILocation(line: 3607, column: 12, scope: !6815)
!6823 = !DILocation(line: 3607, column: 8, scope: !6815)
!6824 = !DILocation(line: 3608, column: 2, scope: !6815)
!6825 = !DILocation(line: 3611, column: 11, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3611, column: 11)
!6827 = !DILocation(line: 3611, column: 27, scope: !6826)
!6828 = !DILocation(line: 3611, column: 11, scope: !6481)
!6829 = !DILocation(line: 3614, column: 18, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 3614, column: 8)
!6831 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 3612, column: 2)
!6832 = !DILocation(line: 3614, column: 8, scope: !6830)
!6833 = !DILocation(line: 0, scope: !6831)
!6834 = !DILocation(line: 3614, column: 8, scope: !6831)
!6835 = !DILocation(line: 3615, column: 13, scope: !6830)
!6836 = !DILocation(line: 3615, column: 6, scope: !6830)
!6837 = !DILocation(line: 3621, column: 27, scope: !6490)
!6838 = !DILocation(line: 3621, column: 11, scope: !6481)
!6839 = !DILocation(line: 3623, column: 15, scope: !6489)
!6840 = !DILocation(line: 0, scope: !6489)
!6841 = !DILocation(line: 3624, column: 9, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 3624, column: 8)
!6843 = !DILocation(line: 3624, column: 8, scope: !6489)
!6844 = !DILocation(line: 3625, column: 13, scope: !6842)
!6845 = !DILocation(line: 3625, column: 6, scope: !6842)
!6846 = !DILocation(line: 3627, column: 8, scope: !6489)
!6847 = !DILocation(line: 3627, column: 36, scope: !6489)
!6848 = !DILocation(line: 3628, column: 10, scope: !6489)
!6849 = !DILocation(line: 3631, column: 7, scope: !6489)
!6850 = !DILocation(line: 3626, column: 11, scope: !6489)
!6851 = !DILocation(line: 3626, column: 4, scope: !6489)
!6852 = !DILocation(line: 3636, column: 25, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 3636, column: 16)
!6854 = !DILocation(line: 3636, column: 46, scope: !6853)
!6855 = !DILocation(line: 3636, column: 42, scope: !6853)
!6856 = !DILocation(line: 3637, column: 13, scope: !6853)
!6857 = !DILocation(line: 3636, column: 16, scope: !6490)
!6858 = !DILocation(line: 3642, column: 11, scope: !6493)
!6859 = !DILocation(line: 3638, column: 9, scope: !6853)
!6860 = !DILocation(line: 3638, column: 2, scope: !6853)
!6861 = !DILocation(line: 3642, column: 27, scope: !6493)
!6862 = !DILocation(line: 3642, column: 11, scope: !6481)
!6863 = !DILocation(line: 3645, column: 12, scope: !6492)
!6864 = !DILocation(line: 3644, column: 17, scope: !6492)
!6865 = !DILocation(line: 0, scope: !6492)
!6866 = !DILocation(line: 3646, column: 10, scope: !6492)
!6867 = !DILocation(line: 3648, column: 4, scope: !6492)
!6868 = !DILocation(line: 3650, column: 8, scope: !6492)
!6869 = !DILocation(line: 3649, column: 4, scope: !6492)
!6870 = !DILocation(line: 3650, column: 6, scope: !6492)
!6871 = !DILocation(line: 3655, column: 17, scope: !6481)
!6872 = !DILocation(line: 3661, column: 12, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3661, column: 11)
!6874 = !DILocation(line: 3661, column: 25, scope: !6873)
!6875 = !DILocation(line: 3661, column: 28, scope: !6873)
!6876 = !DILocation(line: 3662, column: 4, scope: !6873)
!6877 = !DILocation(line: 3662, column: 8, scope: !6873)
!6878 = !DILocation(line: 3662, column: 28, scope: !6873)
!6879 = !DILocation(line: 3662, column: 31, scope: !6873)
!6880 = !DILocation(line: 3661, column: 11, scope: !6481)
!6881 = !DILocation(line: 3663, column: 14, scope: !6873)
!6882 = !DILocation(line: 3663, column: 4, scope: !6873)
!6883 = !DILocation(line: 0, scope: !6481)
!6884 = !DILocation(line: 3667, column: 12, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3667, column: 11)
!6886 = !DILocation(line: 3667, column: 11, scope: !6481)
!6887 = !DILocation(line: 3668, column: 9, scope: !6885)
!6888 = !DILocation(line: 3668, column: 2, scope: !6885)
!6889 = !DILocation(line: 3670, column: 7, scope: !6481)
!6890 = !DILocation(line: 3673, column: 17, scope: !6481)
!6891 = !DILocation(line: 3677, column: 13, scope: !6481)
!6892 = !DILocation(line: 3678, column: 11, scope: !6496)
!6893 = !DILocation(line: 3678, column: 15, scope: !6496)
!6894 = !DILocation(line: 3678, column: 18, scope: !6496)
!6895 = !DILocation(line: 3678, column: 34, scope: !6496)
!6896 = !DILocation(line: 3679, column: 11, scope: !6496)
!6897 = !DILocation(line: 3679, column: 14, scope: !6496)
!6898 = !DILocation(line: 3678, column: 11, scope: !6481)
!6899 = !DILocation(line: 3681, column: 43, scope: !6495)
!6900 = !DILocation(line: 3682, column: 12, scope: !6495)
!6901 = !DILocation(line: 3681, column: 15, scope: !6495)
!6902 = !DILocation(line: 0, scope: !6495)
!6903 = !DILocation(line: 3684, column: 47, scope: !6495)
!6904 = !DILocation(line: 3684, column: 10, scope: !6495)
!6905 = !DILocation(line: 3685, column: 10, scope: !6495)
!6906 = !DILocation(line: 3689, column: 13, scope: !6481)
!6907 = !DILocation(line: 3692, column: 7, scope: !6481)
!6908 = !DILocation(line: 3695, column: 7, scope: !6481)
!6909 = !DILocation(line: 3696, column: 5, scope: !6481)
!6910 = !DILocation(line: 3699, column: 15, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3698, column: 7)
!6912 = !DILocation(line: 3700, column: 7, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3700, column: 7)
!6914 = !DILocation(line: 3700, column: 23, scope: !6913)
!6915 = !DILocation(line: 3700, column: 7, scope: !6461)
!6916 = !DILocation(line: 3701, column: 12, scope: !6913)
!6917 = !DILocation(line: 3702, column: 7, scope: !6913)
!6918 = !DILocation(line: 3703, column: 7, scope: !6913)
!6919 = !DILocation(line: 3705, column: 11, scope: !6913)
!6920 = !DILocation(line: 3706, column: 2, scope: !6461)
!6921 = !DILocation(line: 3707, column: 3, scope: !6461)
!6922 = !DILocation(line: 3708, column: 7, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3708, column: 7)
!6924 = !DILocation(line: 3708, column: 23, scope: !6923)
!6925 = !DILocation(line: 3708, column: 38, scope: !6923)
!6926 = !DILocation(line: 3708, column: 42, scope: !6923)
!6927 = !DILocation(line: 3709, column: 7, scope: !6923)
!6928 = !DILocation(line: 3709, column: 12, scope: !6923)
!6929 = !DILocation(line: 3709, column: 29, scope: !6923)
!6930 = !DILocation(line: 3709, column: 44, scope: !6923)
!6931 = !DILocation(line: 3709, column: 48, scope: !6923)
!6932 = !DILocation(line: 3708, column: 7, scope: !6461)
!6933 = !DILocation(line: 3710, column: 11, scope: !6923)
!6934 = !DILocation(line: 3710, column: 5, scope: !6923)
!6935 = !DILocation(line: 3711, column: 28, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 3711, column: 12)
!6937 = !DILocation(line: 3711, column: 43, scope: !6936)
!6938 = !DILocation(line: 3712, column: 11, scope: !6936)
!6939 = !DILocation(line: 3712, column: 5, scope: !6936)
!6940 = !DILocation(line: 0, scope: !6923)
!6941 = !DILocation(line: 3713, column: 7, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3713, column: 7)
!6943 = !DILocation(line: 3713, column: 7, scope: !6461)
!6944 = !DILocation(line: 3714, column: 11, scope: !6942)
!6945 = !DILocation(line: 3714, column: 5, scope: !6942)
!6946 = !DILocation(line: 3715, column: 3, scope: !6461)
!6947 = !DILocation(line: 3716, column: 3, scope: !6461)
!6948 = !DILocation(line: 3717, column: 1, scope: !6461)
!6949 = distinct !DISubprogram(name: "parser_build_binary_op", scope: !3, file: !3, line: 3089, type: !6950, scopeLine: 3091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6952)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!1909, !585, !134, !1909, !1909}
!6952 = !{!6953, !6954, !6955, !6956, !6957, !6958, !6959, !6960, !6961}
!6953 = !DILocalVariable(name: "location", arg: 1, scope: !6949, file: !3, line: 3089, type: !585)
!6954 = !DILocalVariable(name: "code", arg: 2, scope: !6949, file: !3, line: 3089, type: !134)
!6955 = !DILocalVariable(name: "arg1", arg: 3, scope: !6949, file: !3, line: 3090, type: !1909)
!6956 = !DILocalVariable(name: "arg2", arg: 4, scope: !6949, file: !3, line: 3090, type: !1909)
!6957 = !DILocalVariable(name: "result", scope: !6949, file: !3, line: 3092, type: !1909)
!6958 = !DILocalVariable(name: "code1", scope: !6949, file: !3, line: 3094, type: !134)
!6959 = !DILocalVariable(name: "code2", scope: !6949, file: !3, line: 3095, type: !134)
!6960 = !DILocalVariable(name: "type1", scope: !6949, file: !3, line: 3096, type: !460)
!6961 = !DILocalVariable(name: "type2", scope: !6949, file: !3, line: 3099, type: !460)
!6962 = !DILocation(line: 0, scope: !6949)
!6963 = !DILocation(line: 3090, column: 18, scope: !6949)
!6964 = !DILocation(line: 3090, column: 38, scope: !6949)
!6965 = !DILocation(line: 3092, column: 17, scope: !6949)
!6966 = !DILocation(line: 3094, column: 31, scope: !6949)
!6967 = !DILocation(line: 3095, column: 31, scope: !6949)
!6968 = !DILocation(line: 3096, column: 22, scope: !6949)
!6969 = !DILocation(line: 3096, column: 17, scope: !6949)
!6970 = !DILocation(line: 3098, column: 19, scope: !6949)
!6971 = !DILocation(line: 3099, column: 22, scope: !6949)
!6972 = !DILocation(line: 3099, column: 17, scope: !6949)
!6973 = !DILocation(line: 3104, column: 24, scope: !6949)
!6974 = !DILocation(line: 3101, column: 19, scope: !6949)
!6975 = !DILocation(line: 3104, column: 12, scope: !6949)
!6976 = !DILocation(line: 3103, column: 18, scope: !6949)
!6977 = !DILocation(line: 3103, column: 10, scope: !6949)
!6978 = !DILocation(line: 3103, column: 16, scope: !6949)
!6979 = !DILocation(line: 3105, column: 10, scope: !6949)
!6980 = !DILocation(line: 3105, column: 24, scope: !6949)
!6981 = !DILocation(line: 3106, column: 10, scope: !6949)
!6982 = !DILocation(line: 3106, column: 24, scope: !6949)
!6983 = !DILocation(line: 3108, column: 7, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3108, column: 7)
!6985 = !DILocation(line: 3108, column: 32, scope: !6984)
!6986 = !DILocation(line: 3108, column: 7, scope: !6949)
!6987 = !DILocation(line: 3111, column: 16, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3111, column: 7)
!6989 = !DILocation(line: 3111, column: 7, scope: !6949)
!6990 = !DILocation(line: 3112, column: 5, scope: !6988)
!6991 = !DILocation(line: 3116, column: 7, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3116, column: 7)
!6993 = !DILocation(line: 3116, column: 7, scope: !6949)
!6994 = !DILocation(line: 3117, column: 5, scope: !6992)
!6995 = !DILocation(line: 3119, column: 7, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3119, column: 7)
!6997 = !DILocation(line: 3119, column: 7, scope: !6949)
!6998 = !DILocation(line: 3120, column: 28, scope: !6996)
!6999 = !DILocation(line: 3120, column: 50, scope: !6996)
!7000 = !DILocation(line: 3120, column: 5, scope: !6996)
!7001 = !DILocation(line: 3125, column: 23, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3125, column: 7)
!7003 = !DILocation(line: 3127, column: 18, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 3127, column: 11)
!7005 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 3126, column: 5)
!7006 = !DILocation(line: 3127, column: 32, scope: !7004)
!7007 = !DILocation(line: 3127, column: 36, scope: !7004)
!7008 = !DILocation(line: 3128, column: 4, scope: !7004)
!7009 = !DILocation(line: 3128, column: 14, scope: !7004)
!7010 = !DILocation(line: 3128, column: 28, scope: !7004)
!7011 = !DILocation(line: 3128, column: 32, scope: !7004)
!7012 = !DILocation(line: 3127, column: 11, scope: !7005)
!7013 = !DILocation(line: 3129, column: 2, scope: !7004)
!7014 = !DILocation(line: 3132, column: 12, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 3132, column: 12)
!7016 = !DILocation(line: 3132, column: 35, scope: !7015)
!7017 = !DILocation(line: 3133, column: 5, scope: !7015)
!7018 = !DILocation(line: 3133, column: 15, scope: !7015)
!7019 = !DILocation(line: 3133, column: 38, scope: !7015)
!7020 = !DILocation(line: 3133, column: 29, scope: !7015)
!7021 = !DILocation(line: 3134, column: 5, scope: !7015)
!7022 = !DILocation(line: 3137, column: 7, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3137, column: 7)
!7024 = !DILocation(line: 3138, column: 7, scope: !7023)
!7025 = !DILocation(line: 3138, column: 11, scope: !7023)
!7026 = !DILocation(line: 3139, column: 7, scope: !7023)
!7027 = !DILocation(line: 3139, column: 11, scope: !7023)
!7028 = !DILocation(line: 3137, column: 7, scope: !6949)
!7029 = !DILocation(line: 3140, column: 5, scope: !7023)
!7030 = !DILocation(line: 3143, column: 7, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3143, column: 7)
!7032 = !DILocation(line: 3144, column: 7, scope: !7031)
!7033 = !DILocation(line: 3144, column: 10, scope: !7031)
!7034 = !DILocation(line: 3144, column: 33, scope: !7031)
!7035 = !DILocation(line: 3145, column: 7, scope: !7031)
!7036 = !DILocation(line: 3145, column: 10, scope: !7031)
!7037 = !DILocation(line: 3145, column: 28, scope: !7031)
!7038 = !DILocation(line: 3146, column: 7, scope: !7031)
!7039 = !DILocation(line: 3146, column: 10, scope: !7031)
!7040 = !DILocation(line: 3146, column: 28, scope: !7031)
!7041 = !DILocation(line: 3147, column: 7, scope: !7031)
!7042 = !DILocation(line: 3147, column: 10, scope: !7031)
!7043 = !DILocation(line: 3147, column: 39, scope: !7031)
!7044 = !DILocation(line: 3147, column: 36, scope: !7031)
!7045 = !DILocation(line: 3143, column: 7, scope: !6949)
!7046 = !DILocation(line: 3148, column: 5, scope: !7031)
!7047 = !DILocation(line: 3153, column: 1, scope: !6949)
!7048 = distinct !DISubprogram(name: "remove_c_maybe_const_expr", scope: !3, file: !3, line: 159, type: !2493, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7049)
!7049 = !{!7050}
!7050 = !DILocalVariable(name: "expr", arg: 1, scope: !7048, file: !3, line: 159, type: !460)
!7051 = !DILocation(line: 0, scope: !7048)
!7052 = !DILocation(line: 161, column: 7, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 161, column: 7)
!7054 = !DILocation(line: 161, column: 24, scope: !7053)
!7055 = !DILocation(line: 161, column: 7, scope: !7048)
!7056 = !DILocation(line: 162, column: 12, scope: !7053)
!7057 = !DILocation(line: 162, column: 5, scope: !7053)
!7058 = !DILocation(line: 0, scope: !7053)
!7059 = !DILocation(line: 165, column: 1, scope: !7048)
!7060 = distinct !DISubprogram(name: "c_objc_common_truthvalue_conversion", scope: !3, file: !3, line: 9883, type: !3870, scopeLine: 9884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7061)
!7061 = !{!7062, !7063, !7064, !7065}
!7062 = !DILocalVariable(name: "location", arg: 1, scope: !7060, file: !3, line: 9883, type: !585)
!7063 = !DILocalVariable(name: "expr", arg: 2, scope: !7060, file: !3, line: 9883, type: !460)
!7064 = !DILocalVariable(name: "int_const", scope: !7060, file: !3, line: 9885, type: !452)
!7065 = !DILocalVariable(name: "int_operands", scope: !7060, file: !3, line: 9885, type: !452)
!7066 = !DILocation(line: 0, scope: !7060)
!7067 = !DILocation(line: 9887, column: 11, scope: !7060)
!7068 = !DILocation(line: 9887, column: 3, scope: !7060)
!7069 = !DILocation(line: 9890, column: 7, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 9888, column: 5)
!7071 = !DILocation(line: 9891, column: 14, scope: !7070)
!7072 = !DILocation(line: 9891, column: 7, scope: !7070)
!7073 = !DILocation(line: 9894, column: 7, scope: !7070)
!7074 = !DILocation(line: 9895, column: 14, scope: !7070)
!7075 = !DILocation(line: 9895, column: 7, scope: !7070)
!7076 = !DILocation(line: 9898, column: 7, scope: !7070)
!7077 = !DILocation(line: 9899, column: 14, scope: !7070)
!7078 = !DILocation(line: 9899, column: 7, scope: !7070)
!7079 = !DILocation(line: 9902, column: 7, scope: !7070)
!7080 = !DILocation(line: 9908, column: 16, scope: !7060)
!7081 = !DILocation(line: 9908, column: 33, scope: !7060)
!7082 = !DILocation(line: 9908, column: 48, scope: !7060)
!7083 = !DILocation(line: 9909, column: 18, scope: !7060)
!7084 = !DILocation(line: 9910, column: 7, scope: !7060)
!7085 = !DILocation(line: 9911, column: 12, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 9910, column: 7)
!7087 = !DILocation(line: 9911, column: 5, scope: !7086)
!7088 = !DILocation(line: 9915, column: 10, scope: !7060)
!7089 = !DILocation(line: 9917, column: 7, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 9917, column: 7)
!7091 = !DILocation(line: 9917, column: 24, scope: !7090)
!7092 = !DILocation(line: 9917, column: 39, scope: !7090)
!7093 = !DILocation(line: 9917, column: 59, scope: !7090)
!7094 = !DILocation(line: 9919, column: 11, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 9919, column: 11)
!7096 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 9918, column: 5)
!7097 = !DILocation(line: 9919, column: 11, scope: !7096)
!7098 = !DILocation(line: 9922, column: 9, scope: !7095)
!7099 = !DILocation(line: 9922, column: 2, scope: !7095)
!7100 = !DILocation(line: 9924, column: 39, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 9924, column: 7)
!7102 = !DILocation(line: 9925, column: 12, scope: !7101)
!7103 = !DILocation(line: 9925, column: 5, scope: !7101)
!7104 = !DILocation(line: 9927, column: 1, scope: !7060)
!7105 = distinct !DISubprogram(name: "lvalue_or_else", scope: !3, file: !3, line: 3826, type: !7106, scopeLine: 3827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7108)
!7106 = !DISubroutineType(types: !7107)
!7107 = !{!453, !1960, !437}
!7108 = !{!7109, !7110, !7111}
!7109 = !DILocalVariable(name: "ref", arg: 1, scope: !7105, file: !3, line: 3826, type: !1960)
!7110 = !DILocalVariable(name: "use", arg: 2, scope: !7105, file: !3, line: 3826, type: !437)
!7111 = !DILocalVariable(name: "win", scope: !7105, file: !3, line: 3828, type: !453)
!7112 = !DILocation(line: 0, scope: !7105)
!7113 = !DILocation(line: 3828, column: 13, scope: !7105)
!7114 = !DILocation(line: 3830, column: 8, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 3830, column: 7)
!7116 = !DILocation(line: 3830, column: 7, scope: !7105)
!7117 = !DILocation(line: 3831, column: 5, scope: !7115)
!7118 = !DILocation(line: 3833, column: 3, scope: !7105)
!7119 = distinct !DISubprogram(name: "c_size_in_bytes", scope: !3, file: !3, line: 1684, type: !7120, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7122)
!7120 = !DISubroutineType(types: !7121)
!7121 = !{!460, !1960}
!7122 = !{!7123, !7124}
!7123 = !DILocalVariable(name: "type", arg: 1, scope: !7119, file: !3, line: 1684, type: !1960)
!7124 = !DILocalVariable(name: "code", scope: !7119, file: !3, line: 1686, type: !134)
!7125 = !DILocation(line: 0, scope: !7119)
!7126 = !DILocation(line: 1686, column: 25, scope: !7119)
!7127 = !DILocation(line: 1688, column: 29, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 1688, column: 7)
!7129 = !DILocation(line: 1689, column: 12, scope: !7128)
!7130 = !DILocation(line: 1689, column: 5, scope: !7128)
!7131 = !DILocation(line: 1691, column: 8, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 1691, column: 7)
!7133 = !DILocation(line: 1691, column: 7, scope: !7119)
!7134 = !DILocation(line: 1693, column: 7, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 1692, column: 5)
!7136 = !DILocation(line: 1694, column: 14, scope: !7135)
!7137 = !DILocation(line: 1694, column: 7, scope: !7135)
!7138 = !DILocation(line: 1698, column: 26, scope: !7119)
!7139 = !DILocation(line: 1698, column: 57, scope: !7119)
!7140 = !DILocation(line: 1699, column: 5, scope: !7119)
!7141 = !DILocation(line: 1698, column: 10, scope: !7119)
!7142 = !DILocation(line: 1698, column: 3, scope: !7119)
!7143 = !DILocation(line: 1701, column: 1, scope: !7119)
!7144 = distinct !DISubprogram(name: "readonly_error", scope: !3, file: !3, line: 3762, type: !7145, scopeLine: 3763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7147)
!7145 = !DISubroutineType(types: !7146)
!7146 = !{null, !460, !437}
!7147 = !{!7148, !7149}
!7148 = !DILocalVariable(name: "arg", arg: 1, scope: !7144, file: !3, line: 3762, type: !460)
!7149 = !DILocalVariable(name: "use", arg: 2, scope: !7144, file: !3, line: 3762, type: !437)
!7150 = !DILocation(line: 3775, column: 2, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 3774, column: 11)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 3773, column: 5)
!7153 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 3772, column: 7)
!7154 = !DILocation(line: 0, scope: !7144)
!7155 = !DILocation(line: 3772, column: 7, scope: !7153)
!7156 = !DILocation(line: 3772, column: 23, scope: !7153)
!7157 = !DILocation(line: 3772, column: 7, scope: !7144)
!7158 = !DILocation(line: 3774, column: 11, scope: !7151)
!7159 = !DILocation(line: 3774, column: 11, scope: !7152)
!7160 = !DILocation(line: 3783, column: 12, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 3783, column: 12)
!7162 = !DILocation(line: 3777, column: 9, scope: !7151)
!7163 = !DILocation(line: 3764, column: 3, scope: !7144)
!7164 = !DILocation(line: 3781, column: 9, scope: !7151)
!7165 = !DILocation(line: 3777, column: 2, scope: !7151)
!7166 = !DILocation(line: 3783, column: 28, scope: !7161)
!7167 = !DILocation(line: 3783, column: 12, scope: !7153)
!7168 = !DILocation(line: 3784, column: 12, scope: !7161)
!7169 = !DILocation(line: 3784, column: 5, scope: !7161)
!7170 = !DILocation(line: 3790, column: 12, scope: !7161)
!7171 = !DILocation(line: 3790, column: 5, scope: !7161)
!7172 = !DILocation(line: 3795, column: 1, scope: !7144)
!7173 = distinct !DISubprogram(name: "readonly_warning", scope: !3, file: !3, line: 3801, type: !7145, scopeLine: 3802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7174)
!7174 = !{!7175, !7176}
!7175 = !DILocalVariable(name: "arg", arg: 1, scope: !7173, file: !3, line: 3801, type: !460)
!7176 = !DILocalVariable(name: "use", arg: 2, scope: !7173, file: !3, line: 3801, type: !437)
!7177 = !DILocation(line: 0, scope: !7173)
!7178 = !DILocation(line: 3803, column: 3, scope: !7173)
!7179 = !DILocation(line: 3806, column: 7, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 3804, column: 5)
!7181 = !DILocation(line: 3807, column: 7, scope: !7180)
!7182 = !DILocation(line: 3809, column: 7, scope: !7180)
!7183 = !DILocation(line: 3810, column: 7, scope: !7180)
!7184 = !DILocation(line: 3812, column: 7, scope: !7180)
!7185 = !DILocation(line: 3813, column: 7, scope: !7180)
!7186 = !DILocation(line: 3815, column: 7, scope: !7180)
!7187 = !DILocation(line: 3816, column: 5, scope: !7180)
!7188 = !DILocation(line: 3817, column: 3, scope: !7173)
!7189 = distinct !DISubprogram(name: "note_integer_operands", scope: !3, file: !3, line: 137, type: !2493, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7190)
!7190 = !{!7191, !7192}
!7191 = !DILocalVariable(name: "expr", arg: 1, scope: !7189, file: !3, line: 137, type: !460)
!7192 = !DILocalVariable(name: "ret", scope: !7189, file: !3, line: 139, type: !460)
!7193 = !DILocation(line: 0, scope: !7189)
!7194 = !DILocation(line: 140, column: 7, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 140, column: 7)
!7196 = !DILocation(line: 140, column: 24, scope: !7195)
!7197 = !DILocation(line: 140, column: 39, scope: !7195)
!7198 = !DILocation(line: 140, column: 42, scope: !7195)
!7199 = !DILocation(line: 140, column: 7, scope: !7189)
!7200 = !DILocation(line: 142, column: 13, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 141, column: 5)
!7202 = !DILocation(line: 143, column: 7, scope: !7201)
!7203 = !DILocation(line: 143, column: 27, scope: !7201)
!7204 = !DILocation(line: 144, column: 5, scope: !7201)
!7205 = !DILocation(line: 147, column: 13, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 146, column: 5)
!7207 = !DILocation(line: 148, column: 7, scope: !7206)
!7208 = !DILocation(line: 148, column: 45, scope: !7206)
!7209 = !DILocation(line: 0, scope: !7195)
!7210 = !DILocation(line: 150, column: 3, scope: !7189)
!7211 = distinct !DISubprogram(name: "build_conditional_expr", scope: !3, file: !3, line: 3938, type: !7212, scopeLine: 3941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7214)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!460, !585, !460, !452, !460, !460, !460, !460}
!7214 = !{!7215, !7216, !7217, !7218, !7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7240, !7241, !7247, !7248, !7251, !7254, !7255, !7259, !7260, !7261}
!7215 = !DILocalVariable(name: "colon_loc", arg: 1, scope: !7211, file: !3, line: 3938, type: !585)
!7216 = !DILocalVariable(name: "ifexp", arg: 2, scope: !7211, file: !3, line: 3938, type: !460)
!7217 = !DILocalVariable(name: "ifexp_bcp", arg: 3, scope: !7211, file: !3, line: 3938, type: !452)
!7218 = !DILocalVariable(name: "op1", arg: 4, scope: !7211, file: !3, line: 3939, type: !460)
!7219 = !DILocalVariable(name: "op1_original_type", arg: 5, scope: !7211, file: !3, line: 3939, type: !460)
!7220 = !DILocalVariable(name: "op2", arg: 6, scope: !7211, file: !3, line: 3939, type: !460)
!7221 = !DILocalVariable(name: "op2_original_type", arg: 7, scope: !7211, file: !3, line: 3940, type: !460)
!7222 = !DILocalVariable(name: "type1", scope: !7211, file: !3, line: 3942, type: !460)
!7223 = !DILocalVariable(name: "type2", scope: !7211, file: !3, line: 3943, type: !460)
!7224 = !DILocalVariable(name: "code1", scope: !7211, file: !3, line: 3944, type: !134)
!7225 = !DILocalVariable(name: "code2", scope: !7211, file: !3, line: 3945, type: !134)
!7226 = !DILocalVariable(name: "result_type", scope: !7211, file: !3, line: 3946, type: !460)
!7227 = !DILocalVariable(name: "semantic_result_type", scope: !7211, file: !3, line: 3947, type: !460)
!7228 = !DILocalVariable(name: "orig_op1", scope: !7211, file: !3, line: 3948, type: !460)
!7229 = !DILocalVariable(name: "orig_op2", scope: !7211, file: !3, line: 3948, type: !460)
!7230 = !DILocalVariable(name: "int_const", scope: !7211, file: !3, line: 3949, type: !452)
!7231 = !DILocalVariable(name: "op1_int_operands", scope: !7211, file: !3, line: 3949, type: !452)
!7232 = !DILocalVariable(name: "op2_int_operands", scope: !7211, file: !3, line: 3949, type: !452)
!7233 = !DILocalVariable(name: "int_operands", scope: !7211, file: !3, line: 3949, type: !452)
!7234 = !DILocalVariable(name: "ifexp_int_operands", scope: !7211, file: !3, line: 3950, type: !452)
!7235 = !DILocalVariable(name: "ret", scope: !7211, file: !3, line: 3951, type: !460)
!7236 = !DILocalVariable(name: "objc_ok", scope: !7211, file: !3, line: 3952, type: !452)
!7237 = !DILocalVariable(name: "t1", scope: !7238, file: !3, line: 4015, type: !460)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 4014, column: 5)
!7239 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4013, column: 7)
!7240 = !DILocalVariable(name: "t2", scope: !7238, file: !3, line: 4016, type: !460)
!7241 = !DILocalVariable(name: "unsigned_op1", scope: !7242, file: !3, line: 4050, type: !453)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 4049, column: 2)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 4048, column: 11)
!7244 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 4040, column: 5)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 4036, column: 12)
!7246 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4029, column: 7)
!7247 = !DILocalVariable(name: "unsigned_op2", scope: !7242, file: !3, line: 4051, type: !453)
!7248 = !DILocalVariable(name: "ovf", scope: !7249, file: !3, line: 4055, type: !452)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 4054, column: 6)
!7250 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 4053, column: 8)
!7251 = !DILocalVariable(name: "op1_maybe_const", scope: !7252, file: !3, line: 4064, type: !452)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 4063, column: 3)
!7253 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 4060, column: 12)
!7254 = !DILocalVariable(name: "op2_maybe_const", scope: !7252, file: !3, line: 4065, type: !452)
!7255 = !DILocalVariable(name: "as1", scope: !7256, file: !3, line: 4118, type: !2994)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4117, column: 5)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !3, line: 4116, column: 12)
!7258 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 4109, column: 12)
!7259 = !DILocalVariable(name: "as2", scope: !7256, file: !3, line: 4119, type: !2994)
!7260 = !DILocalVariable(name: "as_common", scope: !7256, file: !3, line: 4120, type: !2994)
!7261 = !DILocalVariable(name: "qual", scope: !7262, file: !3, line: 4154, type: !453)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 4153, column: 2)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 4143, column: 16)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4134, column: 16)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 4128, column: 16)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 4126, column: 16)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 4124, column: 16)
!7268 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 4122, column: 11)
!7269 = !DILocation(line: 0, scope: !7211)
!7270 = !DILocation(line: 3954, column: 22, scope: !7211)
!7271 = !DILocation(line: 3955, column: 7, scope: !7211)
!7272 = !DILocation(line: 3956, column: 11, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3955, column: 7)
!7274 = !DILocation(line: 3956, column: 5, scope: !7273)
!7275 = !DILocation(line: 3957, column: 22, scope: !7211)
!7276 = !DILocation(line: 3958, column: 7, scope: !7211)
!7277 = !DILocation(line: 3959, column: 11, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3958, column: 7)
!7279 = !DILocation(line: 3959, column: 5, scope: !7278)
!7280 = !DILocation(line: 3960, column: 24, scope: !7211)
!7281 = !DILocation(line: 3961, column: 7, scope: !7211)
!7282 = !DILocation(line: 3962, column: 13, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3961, column: 7)
!7284 = !DILocation(line: 3962, column: 5, scope: !7283)
!7285 = !DILocation(line: 3966, column: 7, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3966, column: 7)
!7287 = !DILocation(line: 3966, column: 35, scope: !7286)
!7288 = !DILocation(line: 3966, column: 7, scope: !7211)
!7289 = !DILocation(line: 3967, column: 11, scope: !7286)
!7290 = !DILocation(line: 3967, column: 5, scope: !7286)
!7291 = !DILocation(line: 3968, column: 7, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3968, column: 7)
!7293 = !DILocation(line: 3968, column: 35, scope: !7292)
!7294 = !DILocation(line: 3968, column: 7, scope: !7211)
!7295 = !DILocation(line: 3969, column: 11, scope: !7292)
!7296 = !DILocation(line: 3969, column: 5, scope: !7292)
!7297 = !DILocation(line: 3971, column: 7, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3971, column: 7)
!7299 = !DILocation(line: 3971, column: 25, scope: !7298)
!7300 = !DILocation(line: 3972, column: 7, scope: !7298)
!7301 = !DILocation(line: 3972, column: 10, scope: !7298)
!7302 = !DILocation(line: 3972, column: 38, scope: !7298)
!7303 = !DILocation(line: 3973, column: 7, scope: !7298)
!7304 = !DILocation(line: 3973, column: 10, scope: !7298)
!7305 = !DILocation(line: 3973, column: 38, scope: !7298)
!7306 = !DILocation(line: 3971, column: 7, scope: !7211)
!7307 = !DILocation(line: 3974, column: 12, scope: !7298)
!7308 = !DILocation(line: 3974, column: 5, scope: !7298)
!7309 = !DILocation(line: 3977, column: 11, scope: !7211)
!7310 = !DILocation(line: 3979, column: 11, scope: !7211)
!7311 = !DILocation(line: 3983, column: 13, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3983, column: 7)
!7313 = !DILocation(line: 3983, column: 36, scope: !7312)
!7314 = !DILocation(line: 3983, column: 27, scope: !7312)
!7315 = !DILocation(line: 3985, column: 7, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 3984, column: 5)
!7317 = !DILocation(line: 3986, column: 14, scope: !7316)
!7318 = !DILocation(line: 3986, column: 7, scope: !7316)
!7319 = !DILocation(line: 3989, column: 13, scope: !7211)
!7320 = !DILocation(line: 3991, column: 8, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 3991, column: 7)
!7322 = !DILocation(line: 3991, column: 24, scope: !7321)
!7323 = !DILocation(line: 3992, column: 8, scope: !7321)
!7324 = !DILocation(line: 3992, column: 11, scope: !7321)
!7325 = !DILocation(line: 3992, column: 27, scope: !7321)
!7326 = !DILocation(line: 3993, column: 7, scope: !7321)
!7327 = !DILocation(line: 3993, column: 33, scope: !7321)
!7328 = !DILocation(line: 3995, column: 33, scope: !7321)
!7329 = !DILocation(line: 3998, column: 30, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 3997, column: 5)
!7331 = !DILocation(line: 3999, column: 11, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 3999, column: 11)
!7333 = !DILocation(line: 3999, column: 27, scope: !7332)
!7334 = !DILocation(line: 3999, column: 11, scope: !7330)
!7335 = !DILocation(line: 4001, column: 10, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 4000, column: 2)
!7337 = !DILocation(line: 4002, column: 12, scope: !7336)
!7338 = !DILocation(line: 4003, column: 4, scope: !7336)
!7339 = !DILocation(line: 4005, column: 11, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 4005, column: 11)
!7341 = !DILocation(line: 4005, column: 27, scope: !7340)
!7342 = !DILocation(line: 4005, column: 11, scope: !7330)
!7343 = !DILocation(line: 4007, column: 10, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 4006, column: 2)
!7345 = !DILocation(line: 4008, column: 12, scope: !7344)
!7346 = !DILocation(line: 4009, column: 4, scope: !7344)
!7347 = !DILocation(line: 4013, column: 7, scope: !7239)
!7348 = !DILocation(line: 4013, column: 7, scope: !7211)
!7349 = !DILocation(line: 4015, column: 17, scope: !7238)
!7350 = !DILocation(line: 4015, column: 57, scope: !7238)
!7351 = !DILocation(line: 0, scope: !7238)
!7352 = !DILocation(line: 4016, column: 17, scope: !7238)
!7353 = !DILocation(line: 4016, column: 57, scope: !7238)
!7354 = !DILocation(line: 4018, column: 11, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 4018, column: 11)
!7356 = !DILocation(line: 4018, column: 26, scope: !7355)
!7357 = !DILocation(line: 4019, column: 4, scope: !7355)
!7358 = !DILocation(line: 4019, column: 7, scope: !7355)
!7359 = !DILocation(line: 4019, column: 22, scope: !7355)
!7360 = !DILocation(line: 4020, column: 4, scope: !7355)
!7361 = !DILocation(line: 4020, column: 7, scope: !7355)
!7362 = !DILocation(line: 4020, column: 33, scope: !7355)
!7363 = !DILocation(line: 4020, column: 30, scope: !7355)
!7364 = !DILocation(line: 4018, column: 11, scope: !7238)
!7365 = !DILocation(line: 4021, column: 2, scope: !7355)
!7366 = !DILocation(line: 4029, column: 7, scope: !7246)
!7367 = !DILocation(line: 4029, column: 36, scope: !7246)
!7368 = !DILocation(line: 4029, column: 33, scope: !7246)
!7369 = !DILocation(line: 4029, column: 7, scope: !7211)
!7370 = !DILocation(line: 4031, column: 17, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 4031, column: 11)
!7372 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 4030, column: 5)
!7373 = !DILocation(line: 4031, column: 11, scope: !7372)
!7374 = !DILocation(line: 4036, column: 35, scope: !7245)
!7375 = !DILocation(line: 4038, column: 31, scope: !7245)
!7376 = !DILocation(line: 4041, column: 21, scope: !7244)
!7377 = !DILocation(line: 4048, column: 11, scope: !7243)
!7378 = !DILocation(line: 4048, column: 41, scope: !7243)
!7379 = !DILocation(line: 4048, column: 11, scope: !7244)
!7380 = !DILocation(line: 4050, column: 23, scope: !7242)
!7381 = !DILocation(line: 0, scope: !7242)
!7382 = !DILocation(line: 4051, column: 23, scope: !7242)
!7383 = !DILocation(line: 4053, column: 21, scope: !7250)
!7384 = !DILocation(line: 4053, column: 8, scope: !7242)
!7385 = !DILocation(line: 0, scope: !7249)
!7386 = !DILocation(line: 4055, column: 8, scope: !7249)
!7387 = !DILocation(line: 4060, column: 13, scope: !7253)
!7388 = !DILocation(line: 4060, column: 12, scope: !7249)
!7389 = !DILocation(line: 0, scope: !7252)
!7390 = !DILocation(line: 4064, column: 5, scope: !7252)
!7391 = !DILocation(line: 4064, column: 10, scope: !7252)
!7392 = !DILocation(line: 4065, column: 5, scope: !7252)
!7393 = !DILocation(line: 4065, column: 10, scope: !7252)
!7394 = !DILocation(line: 4076, column: 20, scope: !7252)
!7395 = !DILocation(line: 4076, column: 17, scope: !7252)
!7396 = !DILocation(line: 4076, column: 7, scope: !7252)
!7397 = !DILocation(line: 4077, column: 30, scope: !7252)
!7398 = !DILocation(line: 4077, column: 11, scope: !7252)
!7399 = !DILocation(line: 4080, column: 20, scope: !7252)
!7400 = !DILocation(line: 4080, column: 17, scope: !7252)
!7401 = !DILocation(line: 4080, column: 7, scope: !7252)
!7402 = !DILocation(line: 4083, column: 20, scope: !7252)
!7403 = !DILocation(line: 4083, column: 17, scope: !7252)
!7404 = !DILocation(line: 4083, column: 7, scope: !7252)
!7405 = !DILocation(line: 4084, column: 30, scope: !7252)
!7406 = !DILocation(line: 4084, column: 11, scope: !7252)
!7407 = !DILocation(line: 4087, column: 20, scope: !7252)
!7408 = !DILocation(line: 4087, column: 17, scope: !7252)
!7409 = !DILocation(line: 4087, column: 7, scope: !7252)
!7410 = !DILocation(line: 4089, column: 9, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 4089, column: 9)
!7412 = !DILocation(line: 4089, column: 9, scope: !7252)
!7413 = !DILocation(line: 4091, column: 14, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 4091, column: 13)
!7415 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 4090, column: 7)
!7416 = !DILocation(line: 4092, column: 7, scope: !7414)
!7417 = !DILocation(line: 4092, column: 10, scope: !7414)
!7418 = !DILocation(line: 4093, column: 6, scope: !7414)
!7419 = !DILocation(line: 4093, column: 10, scope: !7414)
!7420 = !DILocation(line: 4094, column: 10, scope: !7414)
!7421 = !DILocation(line: 4094, column: 13, scope: !7414)
!7422 = !DILocation(line: 4091, column: 13, scope: !7415)
!7423 = !DILocation(line: 4097, column: 4, scope: !7414)
!7424 = !DILocation(line: 4101, column: 10, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 4101, column: 9)
!7426 = !DILocation(line: 4101, column: 26, scope: !7425)
!7427 = !DILocation(line: 4101, column: 29, scope: !7425)
!7428 = !DILocation(line: 4101, column: 45, scope: !7425)
!7429 = !DILocation(line: 4101, column: 9, scope: !7252)
!7430 = !DILocation(line: 4102, column: 38, scope: !7425)
!7431 = !DILocation(line: 4102, column: 13, scope: !7425)
!7432 = !DILocation(line: 4102, column: 7, scope: !7425)
!7433 = !DILocation(line: 4103, column: 10, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 4103, column: 9)
!7435 = !DILocation(line: 4103, column: 26, scope: !7434)
!7436 = !DILocation(line: 4103, column: 29, scope: !7434)
!7437 = !DILocation(line: 4103, column: 45, scope: !7434)
!7438 = !DILocation(line: 4103, column: 9, scope: !7252)
!7439 = !DILocation(line: 4104, column: 38, scope: !7434)
!7440 = !DILocation(line: 4104, column: 13, scope: !7434)
!7441 = !DILocation(line: 4104, column: 7, scope: !7434)
!7442 = !DILocation(line: 4105, column: 3, scope: !7253)
!7443 = !DILocation(line: 4106, column: 6, scope: !7250)
!7444 = !DILocation(line: 4106, column: 6, scope: !7249)
!7445 = !DILocation(line: 4109, column: 18, scope: !7258)
!7446 = !DILocation(line: 4109, column: 40, scope: !7258)
!7447 = !DILocation(line: 4109, column: 31, scope: !7258)
!7448 = !DILocation(line: 4109, column: 12, scope: !7245)
!7449 = !DILocation(line: 4111, column: 17, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 4111, column: 11)
!7451 = distinct !DILexicalBlock(scope: !7258, file: !3, line: 4110, column: 5)
!7452 = !DILocation(line: 4111, column: 39, scope: !7450)
!7453 = !DILocation(line: 4111, column: 30, scope: !7450)
!7454 = !DILocation(line: 4111, column: 11, scope: !7451)
!7455 = !DILocation(line: 4112, column: 2, scope: !7450)
!7456 = !DILocation(line: 4114, column: 21, scope: !7451)
!7457 = !DILocation(line: 4115, column: 5, scope: !7451)
!7458 = !DILocation(line: 4116, column: 18, scope: !7257)
!7459 = !DILocation(line: 4116, column: 43, scope: !7257)
!7460 = !DILocation(line: 4116, column: 34, scope: !7257)
!7461 = !DILocation(line: 4118, column: 26, scope: !7256)
!7462 = !DILocation(line: 0, scope: !7256)
!7463 = !DILocation(line: 4119, column: 26, scope: !7256)
!7464 = !DILocation(line: 4120, column: 7, scope: !7256)
!7465 = !DILocation(line: 4122, column: 11, scope: !7268)
!7466 = !DILocation(line: 4122, column: 11, scope: !7256)
!7467 = !DILocation(line: 4123, column: 16, scope: !7268)
!7468 = !DILocation(line: 4123, column: 2, scope: !7268)
!7469 = !DILocation(line: 4124, column: 16, scope: !7267)
!7470 = !DILocation(line: 4124, column: 16, scope: !7268)
!7471 = !DILocation(line: 4126, column: 16, scope: !7266)
!7472 = !DILocation(line: 4126, column: 16, scope: !7267)
!7473 = !DILocation(line: 4128, column: 17, scope: !7265)
!7474 = !DILocation(line: 4128, column: 16, scope: !7266)
!7475 = !DILocation(line: 4130, column: 4, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4129, column: 2)
!7477 = !DILocation(line: 4132, column: 11, scope: !7476)
!7478 = !DILocation(line: 4132, column: 4, scope: !7476)
!7479 = !DILocation(line: 4134, column: 16, scope: !7264)
!7480 = !DILocation(line: 0, scope: !7264)
!7481 = !DILocation(line: 4134, column: 16, scope: !7265)
!7482 = !DILocation(line: 4136, column: 38, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 4136, column: 8)
!7484 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 4135, column: 2)
!7485 = !DILocation(line: 4136, column: 8, scope: !7484)
!7486 = !DILocation(line: 4137, column: 6, scope: !7483)
!7487 = !DILocation(line: 4140, column: 52, scope: !7484)
!7488 = !DILocation(line: 4141, column: 10, scope: !7484)
!7489 = !DILocation(line: 4140, column: 38, scope: !7484)
!7490 = !DILocation(line: 4140, column: 18, scope: !7484)
!7491 = !DILocation(line: 4142, column: 2, scope: !7484)
!7492 = !DILocation(line: 4143, column: 16, scope: !7263)
!7493 = !DILocation(line: 4143, column: 16, scope: !7264)
!7494 = !DILocation(line: 4145, column: 38, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 4145, column: 8)
!7496 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 4144, column: 2)
!7497 = !DILocation(line: 4145, column: 8, scope: !7496)
!7498 = !DILocation(line: 4146, column: 6, scope: !7495)
!7499 = !DILocation(line: 4149, column: 52, scope: !7496)
!7500 = !DILocation(line: 4150, column: 10, scope: !7496)
!7501 = !DILocation(line: 4149, column: 38, scope: !7496)
!7502 = !DILocation(line: 4149, column: 18, scope: !7496)
!7503 = !DILocation(line: 4151, column: 2, scope: !7496)
!7504 = !DILocation(line: 4154, column: 15, scope: !7262)
!7505 = !DILocation(line: 0, scope: !7262)
!7506 = !DILocation(line: 4156, column: 9, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 4156, column: 8)
!7508 = !DILocation(line: 4156, column: 8, scope: !7262)
!7509 = !DILocation(line: 4157, column: 6, scope: !7507)
!7510 = !DILocation(line: 4160, column: 29, scope: !7262)
!7511 = !DILocation(line: 4160, column: 7, scope: !7262)
!7512 = !DILocation(line: 4159, column: 18, scope: !7262)
!7513 = !DILocation(line: 4162, column: 5, scope: !7257)
!7514 = !DILocation(line: 4163, column: 43, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 4163, column: 12)
!7516 = !DILocation(line: 4163, column: 34, scope: !7515)
!7517 = !DILocation(line: 4165, column: 12, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 4165, column: 11)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 4164, column: 5)
!7520 = !DILocation(line: 4165, column: 11, scope: !7519)
!7521 = !DILocation(line: 4166, column: 2, scope: !7518)
!7522 = !DILocation(line: 4170, column: 10, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 4169, column: 2)
!7524 = !DILocation(line: 4174, column: 43, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 4174, column: 12)
!7526 = !DILocation(line: 4174, column: 34, scope: !7525)
!7527 = !DILocation(line: 4176, column: 12, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 4176, column: 11)
!7529 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 4175, column: 5)
!7530 = !DILocation(line: 4176, column: 11, scope: !7529)
!7531 = !DILocation(line: 4177, column: 2, scope: !7528)
!7532 = !DILocation(line: 4181, column: 10, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 4180, column: 2)
!7534 = !DILocation(line: 0, scope: !7246)
!7535 = !DILocation(line: 4186, column: 8, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4186, column: 7)
!7537 = !DILocation(line: 4186, column: 7, scope: !7211)
!7538 = !DILocation(line: 4188, column: 11, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 4188, column: 11)
!7540 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 4187, column: 5)
!7541 = !DILocation(line: 4188, column: 11, scope: !7540)
!7542 = !DILocation(line: 4189, column: 16, scope: !7539)
!7543 = !DILocation(line: 4195, column: 5, scope: !7540)
!7544 = !DILocation(line: 4192, column: 4, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 4191, column: 2)
!7546 = !DILocation(line: 4193, column: 11, scope: !7545)
!7547 = !DILocation(line: 4193, column: 4, scope: !7545)
!7548 = !DILocation(line: 4199, column: 7, scope: !7211)
!7549 = !DILocation(line: 4203, column: 9, scope: !7211)
!7550 = !DILocation(line: 4204, column: 9, scope: !7211)
!7551 = !DILocation(line: 4206, column: 7, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4206, column: 7)
!7553 = !DILocation(line: 4206, column: 29, scope: !7552)
!7554 = !DILocation(line: 4206, column: 26, scope: !7552)
!7555 = !DILocation(line: 4206, column: 17, scope: !7552)
!7556 = !DILocation(line: 4209, column: 32, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 4207, column: 5)
!7558 = !DILocation(line: 4209, column: 13, scope: !7557)
!7559 = !DILocation(line: 4210, column: 5, scope: !7557)
!7560 = !DILocation(line: 4211, column: 29, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4211, column: 7)
!7562 = !DILocation(line: 4211, column: 26, scope: !7561)
!7563 = !DILocation(line: 4211, column: 17, scope: !7561)
!7564 = !DILocation(line: 4214, column: 32, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 4212, column: 5)
!7566 = !DILocation(line: 4214, column: 13, scope: !7565)
!7567 = !DILocation(line: 4215, column: 5, scope: !7565)
!7568 = !DILocation(line: 4217, column: 13, scope: !7211)
!7569 = !DILocation(line: 4217, column: 10, scope: !7211)
!7570 = !DILocation(line: 4219, column: 7, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4219, column: 7)
!7572 = !DILocation(line: 4219, column: 7, scope: !7211)
!7573 = !DILocation(line: 4221, column: 30, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 4220, column: 5)
!7575 = !DILocation(line: 4221, column: 27, scope: !7574)
!7576 = !DILocation(line: 4222, column: 7, scope: !7574)
!7577 = !DILocation(line: 4222, column: 10, scope: !7574)
!7578 = !DILocation(line: 4222, column: 31, scope: !7574)
!7579 = !DILocation(line: 4223, column: 7, scope: !7574)
!7580 = !DILocation(line: 4223, column: 11, scope: !7574)
!7581 = !DILocation(line: 4224, column: 6, scope: !7574)
!7582 = !DILocation(line: 4224, column: 19, scope: !7574)
!7583 = !DILocation(line: 4224, column: 16, scope: !7574)
!7584 = !DILocation(line: 4225, column: 10, scope: !7574)
!7585 = !DILocation(line: 4225, column: 13, scope: !7574)
!7586 = !DILocation(line: 4225, column: 34, scope: !7574)
!7587 = !DILocation(line: 4226, column: 10, scope: !7574)
!7588 = !DILocation(line: 4227, column: 5, scope: !7574)
!7589 = !DILocation(line: 4228, column: 7, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4228, column: 7)
!7591 = !DILocation(line: 4228, column: 17, scope: !7590)
!7592 = !DILocation(line: 4228, column: 21, scope: !7590)
!7593 = !DILocation(line: 4228, column: 31, scope: !7590)
!7594 = !DILocation(line: 4228, column: 34, scope: !7590)
!7595 = !DILocation(line: 4228, column: 52, scope: !7590)
!7596 = !DILocation(line: 4228, column: 7, scope: !7211)
!7597 = !DILocation(line: 4229, column: 11, scope: !7590)
!7598 = !DILocation(line: 4229, column: 5, scope: !7590)
!7599 = !DILocation(line: 4232, column: 13, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 4231, column: 5)
!7601 = !DILocation(line: 4233, column: 11, scope: !7600)
!7602 = !DILocation(line: 4234, column: 8, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 4233, column: 11)
!7604 = !DILocation(line: 4234, column: 2, scope: !7603)
!7605 = !DILocation(line: 0, scope: !7590)
!7606 = !DILocation(line: 4236, column: 7, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 4236, column: 7)
!7608 = !DILocation(line: 4236, column: 7, scope: !7211)
!7609 = !DILocation(line: 4237, column: 11, scope: !7607)
!7610 = !DILocation(line: 4237, column: 5, scope: !7607)
!7611 = !DILocation(line: 4239, column: 3, scope: !7211)
!7612 = !DILocation(line: 4240, column: 3, scope: !7211)
!7613 = !DILocation(line: 4241, column: 1, scope: !7211)
!7614 = distinct !DISubprogram(name: "comp_target_types", scope: !3, file: !3, line: 1170, type: !7615, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7617)
!7615 = !DISubroutineType(types: !7616)
!7616 = !{!453, !585, !460, !460}
!7617 = !{!7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627}
!7618 = !DILocalVariable(name: "location", arg: 1, scope: !7614, file: !3, line: 1170, type: !585)
!7619 = !DILocalVariable(name: "ttl", arg: 2, scope: !7614, file: !3, line: 1170, type: !460)
!7620 = !DILocalVariable(name: "ttr", arg: 3, scope: !7614, file: !3, line: 1170, type: !460)
!7621 = !DILocalVariable(name: "val", scope: !7614, file: !3, line: 1172, type: !453)
!7622 = !DILocalVariable(name: "mvl", scope: !7614, file: !3, line: 1173, type: !460)
!7623 = !DILocalVariable(name: "mvr", scope: !7614, file: !3, line: 1174, type: !460)
!7624 = !DILocalVariable(name: "asl", scope: !7614, file: !3, line: 1175, type: !2994)
!7625 = !DILocalVariable(name: "asr", scope: !7614, file: !3, line: 1176, type: !2994)
!7626 = !DILocalVariable(name: "as_common", scope: !7614, file: !3, line: 1177, type: !2994)
!7627 = !DILocalVariable(name: "enum_and_int_p", scope: !7614, file: !3, line: 1178, type: !452)
!7628 = !DILocation(line: 0, scope: !7614)
!7629 = !DILocation(line: 1173, column: 14, scope: !7614)
!7630 = !DILocation(line: 1174, column: 14, scope: !7614)
!7631 = !DILocation(line: 1175, column: 22, scope: !7614)
!7632 = !DILocation(line: 1176, column: 22, scope: !7614)
!7633 = !DILocation(line: 1177, column: 3, scope: !7614)
!7634 = !DILocation(line: 1178, column: 3, scope: !7614)
!7635 = !DILocation(line: 1181, column: 8, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1181, column: 7)
!7637 = !DILocation(line: 1181, column: 7, scope: !7614)
!7638 = !DILocation(line: 1186, column: 7, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1186, column: 7)
!7640 = !DILocation(line: 1186, column: 23, scope: !7639)
!7641 = !DILocation(line: 1186, column: 7, scope: !7614)
!7642 = !DILocation(line: 1187, column: 11, scope: !7639)
!7643 = !DILocation(line: 1187, column: 5, scope: !7639)
!7644 = !DILocation(line: 1188, column: 7, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1188, column: 7)
!7646 = !DILocation(line: 1188, column: 23, scope: !7645)
!7647 = !DILocation(line: 1188, column: 7, scope: !7614)
!7648 = !DILocation(line: 1189, column: 11, scope: !7645)
!7649 = !DILocation(line: 1189, column: 5, scope: !7645)
!7650 = !DILocation(line: 1190, column: 18, scope: !7614)
!7651 = !DILocation(line: 1191, column: 9, scope: !7614)
!7652 = !DILocation(line: 1193, column: 7, scope: !7614)
!7653 = !DILocation(line: 1194, column: 5, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1193, column: 7)
!7655 = !DILocation(line: 1196, column: 16, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1196, column: 7)
!7657 = !DILocation(line: 1196, column: 19, scope: !7656)
!7658 = !DILocation(line: 1196, column: 37, scope: !7656)
!7659 = !DILocation(line: 1196, column: 34, scope: !7656)
!7660 = !DILocation(line: 1197, column: 5, scope: !7656)
!7661 = !DILocation(line: 1201, column: 1, scope: !7614)
!7662 = distinct !DISubprogram(name: "common_pointer_type", scope: !3, file: !3, line: 623, type: !2612, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7663)
!7663 = !{!7664, !7665, !7666, !7667, !7668, !7669, !7670, !7671, !7672, !7673, !7674, !7675, !7676, !7677}
!7664 = !DILocalVariable(name: "t1", arg: 1, scope: !7662, file: !3, line: 623, type: !460)
!7665 = !DILocalVariable(name: "t2", arg: 2, scope: !7662, file: !3, line: 623, type: !460)
!7666 = !DILocalVariable(name: "attributes", scope: !7662, file: !3, line: 625, type: !460)
!7667 = !DILocalVariable(name: "pointed_to_1", scope: !7662, file: !3, line: 626, type: !460)
!7668 = !DILocalVariable(name: "mv1", scope: !7662, file: !3, line: 626, type: !460)
!7669 = !DILocalVariable(name: "pointed_to_2", scope: !7662, file: !3, line: 627, type: !460)
!7670 = !DILocalVariable(name: "mv2", scope: !7662, file: !3, line: 627, type: !460)
!7671 = !DILocalVariable(name: "target", scope: !7662, file: !3, line: 628, type: !460)
!7672 = !DILocalVariable(name: "target_quals", scope: !7662, file: !3, line: 629, type: !7)
!7673 = !DILocalVariable(name: "as1", scope: !7662, file: !3, line: 630, type: !2994)
!7674 = !DILocalVariable(name: "as2", scope: !7662, file: !3, line: 630, type: !2994)
!7675 = !DILocalVariable(name: "as_common", scope: !7662, file: !3, line: 630, type: !2994)
!7676 = !DILocalVariable(name: "quals1", scope: !7662, file: !3, line: 631, type: !453)
!7677 = !DILocalVariable(name: "quals2", scope: !7662, file: !3, line: 631, type: !453)
!7678 = !DILocation(line: 0, scope: !7662)
!7679 = !DILocation(line: 630, column: 3, scope: !7662)
!7680 = !DILocation(line: 635, column: 10, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 635, column: 7)
!7682 = !DILocation(line: 635, column: 7, scope: !7662)
!7683 = !DILocation(line: 638, column: 13, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 638, column: 7)
!7685 = !DILocation(line: 638, column: 10, scope: !7684)
!7686 = !DILocation(line: 638, column: 7, scope: !7662)
!7687 = !DILocation(line: 640, column: 10, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 640, column: 7)
!7689 = !DILocation(line: 640, column: 7, scope: !7662)
!7690 = !DILocation(line: 643, column: 3, scope: !7662)
!7691 = !DILocation(line: 647, column: 24, scope: !7662)
!7692 = !DILocation(line: 647, column: 16, scope: !7662)
!7693 = !DILocation(line: 652, column: 24, scope: !7662)
!7694 = !DILocation(line: 653, column: 24, scope: !7662)
!7695 = !DILocation(line: 654, column: 7, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 654, column: 7)
!7697 = !DILocation(line: 654, column: 23, scope: !7696)
!7698 = !DILocation(line: 654, column: 7, scope: !7662)
!7699 = !DILocation(line: 655, column: 11, scope: !7696)
!7700 = !DILocation(line: 655, column: 5, scope: !7696)
!7701 = !DILocation(line: 656, column: 7, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 656, column: 7)
!7703 = !DILocation(line: 656, column: 23, scope: !7702)
!7704 = !DILocation(line: 656, column: 7, scope: !7662)
!7705 = !DILocation(line: 657, column: 11, scope: !7702)
!7706 = !DILocation(line: 657, column: 5, scope: !7702)
!7707 = !DILocation(line: 658, column: 12, scope: !7662)
!7708 = !DILocation(line: 663, column: 12, scope: !7662)
!7709 = !DILocation(line: 664, column: 12, scope: !7662)
!7710 = !DILocation(line: 666, column: 32, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 666, column: 7)
!7712 = !DILocation(line: 666, column: 7, scope: !7662)
!7713 = !DILocation(line: 674, column: 9, scope: !7662)
!7714 = !DILocation(line: 675, column: 9, scope: !7662)
!7715 = !DILocation(line: 676, column: 8, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 676, column: 7)
!7717 = !DILocation(line: 676, column: 7, scope: !7662)
!7718 = !DILocation(line: 677, column: 5, scope: !7716)
!7719 = !DILocation(line: 679, column: 19, scope: !7662)
!7720 = !DILocation(line: 679, column: 16, scope: !7662)
!7721 = !DILocation(line: 681, column: 28, scope: !7662)
!7722 = !DILocation(line: 681, column: 8, scope: !7662)
!7723 = !DILocation(line: 682, column: 10, scope: !7662)
!7724 = !DILocation(line: 682, column: 3, scope: !7662)
!7725 = !DILocation(line: 683, column: 1, scope: !7662)
!7726 = distinct !DISubprogram(name: "null_pointer_constant_p", scope: !3, file: !3, line: 117, type: !2598, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7727)
!7727 = !{!7728, !7729}
!7728 = !DILocalVariable(name: "expr", arg: 1, scope: !7726, file: !3, line: 117, type: !1960)
!7729 = !DILocalVariable(name: "type", scope: !7726, file: !3, line: 121, type: !460)
!7730 = !DILocation(line: 0, scope: !7726)
!7731 = !DILocation(line: 121, column: 15, scope: !7726)
!7732 = !DILocation(line: 122, column: 11, scope: !7726)
!7733 = !DILocation(line: 122, column: 28, scope: !7726)
!7734 = !DILocation(line: 123, column: 4, scope: !7726)
!7735 = !DILocation(line: 123, column: 8, scope: !7726)
!7736 = !DILocation(line: 124, column: 4, scope: !7726)
!7737 = !DILocation(line: 124, column: 7, scope: !7726)
!7738 = !DILocation(line: 125, column: 4, scope: !7726)
!7739 = !DILocation(line: 125, column: 8, scope: !7726)
!7740 = !DILocation(line: 126, column: 8, scope: !7726)
!7741 = !DILocation(line: 126, column: 29, scope: !7726)
!7742 = !DILocation(line: 127, column: 5, scope: !7726)
!7743 = !DILocation(line: 127, column: 8, scope: !7726)
!7744 = !DILocation(line: 128, column: 5, scope: !7726)
!7745 = !DILocation(line: 128, column: 8, scope: !7726)
!7746 = !DILocation(line: 128, column: 38, scope: !7726)
!7747 = !DILocation(line: 122, column: 3, scope: !7726)
!7748 = distinct !DISubprogram(name: "addr_space_superset", scope: !3, file: !3, line: 292, type: !7749, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7752)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!452, !2994, !2994, !7751}
!7751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!7752 = !{!7753, !7754, !7755}
!7753 = !DILocalVariable(name: "as1", arg: 1, scope: !7748, file: !3, line: 292, type: !2994)
!7754 = !DILocalVariable(name: "as2", arg: 2, scope: !7748, file: !3, line: 292, type: !2994)
!7755 = !DILocalVariable(name: "common", arg: 3, scope: !7748, file: !3, line: 292, type: !7751)
!7756 = !DILocation(line: 0, scope: !7748)
!7757 = !DILocation(line: 294, column: 11, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 294, column: 7)
!7759 = !DILocation(line: 294, column: 7, scope: !7748)
!7760 = !DILocation(line: 296, column: 15, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 295, column: 5)
!7762 = !DILocation(line: 297, column: 7, scope: !7761)
!7763 = !DILocation(line: 299, column: 31, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 299, column: 12)
!7765 = !DILocation(line: 299, column: 12, scope: !7764)
!7766 = !DILocation(line: 299, column: 12, scope: !7758)
!7767 = !DILocation(line: 301, column: 15, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 300, column: 5)
!7769 = !DILocation(line: 302, column: 7, scope: !7768)
!7770 = !DILocation(line: 304, column: 31, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 304, column: 12)
!7772 = !DILocation(line: 304, column: 12, scope: !7771)
!7773 = !DILocation(line: 304, column: 12, scope: !7764)
!7774 = !DILocation(line: 306, column: 15, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 305, column: 5)
!7776 = !DILocation(line: 307, column: 7, scope: !7775)
!7777 = !DILocation(line: 0, scope: !7758)
!7778 = !DILocation(line: 311, column: 1, scope: !7748)
!7779 = distinct !DISubprogram(name: "ep_convert_and_check", scope: !3, file: !3, line: 3911, type: !7780, scopeLine: 3912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7782)
!7780 = !DISubroutineType(types: !7781)
!7781 = !{!460, !460, !460, !460}
!7782 = !{!7783, !7784, !7785}
!7783 = !DILocalVariable(name: "type", arg: 1, scope: !7779, file: !3, line: 3911, type: !460)
!7784 = !DILocalVariable(name: "expr", arg: 2, scope: !7779, file: !3, line: 3911, type: !460)
!7785 = !DILocalVariable(name: "semantic_type", arg: 3, scope: !7779, file: !3, line: 3911, type: !460)
!7786 = !DILocation(line: 0, scope: !7779)
!7787 = !DILocation(line: 3913, column: 7, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 3913, column: 7)
!7789 = !DILocation(line: 3913, column: 24, scope: !7788)
!7790 = !DILocation(line: 3913, column: 7, scope: !7779)
!7791 = !DILocation(line: 3916, column: 8, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 3916, column: 7)
!7793 = !DILocation(line: 3916, column: 7, scope: !7779)
!7794 = !DILocation(line: 3917, column: 12, scope: !7792)
!7795 = !DILocation(line: 3917, column: 5, scope: !7792)
!7796 = !DILocation(line: 3919, column: 7, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 3919, column: 7)
!7798 = !DILocation(line: 3919, column: 36, scope: !7797)
!7799 = !DILocation(line: 3920, column: 7, scope: !7797)
!7800 = !DILocation(line: 3920, column: 27, scope: !7797)
!7801 = !DILocation(line: 3919, column: 7, scope: !7779)
!7802 = !DILocation(line: 3924, column: 14, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 3921, column: 5)
!7804 = !DILocation(line: 3925, column: 5, scope: !7803)
!7805 = !DILocation(line: 3928, column: 10, scope: !7779)
!7806 = !DILocation(line: 3928, column: 3, scope: !7779)
!7807 = !DILocation(line: 3929, column: 1, scope: !7779)
!7808 = distinct !DISubprogram(name: "build_compound_expr", scope: !3, file: !3, line: 4249, type: !4022, scopeLine: 4250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7809)
!7809 = !{!7810, !7811, !7812, !7813, !7814, !7815, !7816}
!7810 = !DILocalVariable(name: "loc", arg: 1, scope: !7808, file: !3, line: 4249, type: !585)
!7811 = !DILocalVariable(name: "expr1", arg: 2, scope: !7808, file: !3, line: 4249, type: !460)
!7812 = !DILocalVariable(name: "expr2", arg: 3, scope: !7808, file: !3, line: 4249, type: !460)
!7813 = !DILocalVariable(name: "expr1_int_operands", scope: !7808, file: !3, line: 4251, type: !452)
!7814 = !DILocalVariable(name: "expr2_int_operands", scope: !7808, file: !3, line: 4251, type: !452)
!7815 = !DILocalVariable(name: "eptype", scope: !7808, file: !3, line: 4252, type: !460)
!7816 = !DILocalVariable(name: "ret", scope: !7808, file: !3, line: 4253, type: !460)
!7817 = !DILocation(line: 0, scope: !7808)
!7818 = !DILocation(line: 4255, column: 24, scope: !7808)
!7819 = !DILocation(line: 4256, column: 7, scope: !7808)
!7820 = !DILocation(line: 4257, column: 13, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4256, column: 7)
!7822 = !DILocation(line: 4257, column: 5, scope: !7821)
!7823 = !DILocation(line: 4258, column: 24, scope: !7808)
!7824 = !DILocation(line: 4259, column: 7, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4259, column: 7)
!7826 = !DILocation(line: 4259, column: 7, scope: !7808)
!7827 = !DILocation(line: 4260, column: 13, scope: !7825)
!7828 = !DILocation(line: 4260, column: 5, scope: !7825)
!7829 = !DILocation(line: 4262, column: 7, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4262, column: 7)
!7831 = !DILocation(line: 4262, column: 25, scope: !7830)
!7832 = !DILocation(line: 4262, column: 7, scope: !7808)
!7833 = !DILocation(line: 4263, column: 13, scope: !7830)
!7834 = !DILocation(line: 4263, column: 5, scope: !7830)
!7835 = !DILocation(line: 4264, column: 7, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4264, column: 7)
!7837 = !DILocation(line: 4264, column: 25, scope: !7836)
!7838 = !DILocation(line: 4264, column: 7, scope: !7808)
!7839 = !DILocation(line: 4266, column: 16, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 4265, column: 5)
!7841 = !DILocation(line: 4267, column: 15, scope: !7840)
!7842 = !DILocation(line: 4268, column: 5, scope: !7840)
!7843 = !DILocation(line: 4270, column: 8, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4270, column: 7)
!7845 = !DILocation(line: 0, scope: !7844)
!7846 = !DILocation(line: 4270, column: 7, scope: !7808)
!7847 = !DILocation(line: 4275, column: 11, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 4271, column: 5)
!7849 = !DILocation(line: 4277, column: 8, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 4277, column: 8)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 4276, column: 2)
!7852 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 4275, column: 11)
!7853 = !DILocation(line: 4278, column: 8, scope: !7850)
!7854 = !DILocation(line: 4278, column: 11, scope: !7850)
!7855 = !DILocation(line: 4277, column: 8, scope: !7851)
!7856 = !DILocation(line: 4281, column: 6, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 4280, column: 13)
!7858 = !DILocation(line: 4281, column: 27, scope: !7857)
!7859 = !DILocation(line: 4282, column: 6, scope: !7857)
!7860 = !DILocation(line: 4282, column: 9, scope: !7857)
!7861 = !DILocation(line: 4280, column: 13, scope: !7850)
!7862 = !DILocation(line: 4285, column: 6, scope: !7857)
!7863 = !DILocation(line: 4294, column: 12, scope: !7844)
!7864 = !DILocation(line: 4295, column: 5, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 4294, column: 12)
!7866 = !DILocation(line: 4297, column: 16, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4297, column: 7)
!7868 = !DILocation(line: 4297, column: 13, scope: !7867)
!7869 = !DILocation(line: 4297, column: 7, scope: !7808)
!7870 = !DILocation(line: 4298, column: 5, scope: !7867)
!7871 = !DILocation(line: 4300, column: 9, scope: !7808)
!7872 = !DILocation(line: 4302, column: 7, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4302, column: 7)
!7874 = !DILocation(line: 4303, column: 7, scope: !7873)
!7875 = !DILocation(line: 4304, column: 10, scope: !7873)
!7876 = !DILocation(line: 4305, column: 11, scope: !7873)
!7877 = !DILocation(line: 4305, column: 5, scope: !7873)
!7878 = !DILocation(line: 4307, column: 7, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4307, column: 7)
!7880 = !DILocation(line: 4307, column: 7, scope: !7808)
!7881 = !DILocation(line: 4308, column: 11, scope: !7879)
!7882 = !DILocation(line: 4308, column: 5, scope: !7879)
!7883 = !DILocation(line: 4310, column: 3, scope: !7808)
!7884 = !DILocation(line: 4311, column: 3, scope: !7808)
!7885 = !DILocation(line: 4312, column: 1, scope: !7808)
!7886 = distinct !DISubprogram(name: "build_c_cast", scope: !3, file: !3, line: 4408, type: !4022, scopeLine: 4409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7887)
!7887 = !{!7888, !7889, !7890, !7891, !7892, !7896, !7899, !7900, !7902, !7903, !7906, !7909, !7910}
!7888 = !DILocalVariable(name: "loc", arg: 1, scope: !7886, file: !3, line: 4408, type: !585)
!7889 = !DILocalVariable(name: "type", arg: 2, scope: !7886, file: !3, line: 4408, type: !460)
!7890 = !DILocalVariable(name: "expr", arg: 3, scope: !7886, file: !3, line: 4408, type: !460)
!7891 = !DILocalVariable(name: "value", scope: !7886, file: !3, line: 4410, type: !460)
!7892 = !DILocalVariable(name: "field", scope: !7893, file: !3, line: 4456, type: !460)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 4455, column: 5)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 4454, column: 12)
!7895 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4447, column: 7)
!7896 = !DILocalVariable(name: "t", scope: !7897, file: !3, line: 4466, type: !460)
!7897 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 4465, column: 2)
!7898 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 4464, column: 11)
!7899 = !DILocalVariable(name: "maybe_const", scope: !7897, file: !3, line: 4467, type: !452)
!7900 = !DILocalVariable(name: "otype", scope: !7901, file: !3, line: 4484, type: !460)
!7901 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 4483, column: 5)
!7902 = !DILocalVariable(name: "ovalue", scope: !7901, file: !3, line: 4484, type: !460)
!7903 = !DILocalVariable(name: "t", scope: !7904, file: !3, line: 4488, type: !460)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 4487, column: 2)
!7905 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4486, column: 11)
!7906 = !DILocalVariable(name: "as_to", scope: !7907, file: !3, line: 4507, type: !2994)
!7907 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 4506, column: 2)
!7908 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4503, column: 11)
!7909 = !DILocalVariable(name: "as_from", scope: !7907, file: !3, line: 4508, type: !2994)
!7910 = !DILocalVariable(name: "as_common", scope: !7907, file: !3, line: 4509, type: !2994)
!7911 = !DILocation(line: 0, scope: !7886)
!7912 = !DILocation(line: 4412, column: 7, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4412, column: 7)
!7914 = !DILocation(line: 4412, column: 24, scope: !7913)
!7915 = !DILocation(line: 4412, column: 7, scope: !7886)
!7916 = !DILocation(line: 4413, column: 12, scope: !7913)
!7917 = !DILocation(line: 4413, column: 5, scope: !7913)
!7918 = !DILocation(line: 4417, column: 15, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4417, column: 7)
!7920 = !DILocation(line: 4417, column: 12, scope: !7919)
!7921 = !DILocation(line: 4417, column: 39, scope: !7919)
!7922 = !DILocation(line: 4417, column: 31, scope: !7919)
!7923 = !DILocation(line: 4418, column: 5, scope: !7919)
!7924 = !DILocation(line: 4423, column: 7, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4423, column: 7)
!7926 = !DILocation(line: 4423, column: 33, scope: !7925)
!7927 = !DILocation(line: 4423, column: 56, scope: !7925)
!7928 = !DILocation(line: 4423, column: 36, scope: !7925)
!7929 = !DILocation(line: 4423, column: 7, scope: !7886)
!7930 = !DILocation(line: 4424, column: 12, scope: !7925)
!7931 = !DILocation(line: 4424, column: 5, scope: !7925)
!7932 = !DILocation(line: 4426, column: 10, scope: !7886)
!7933 = !DILocation(line: 4428, column: 7, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4428, column: 7)
!7935 = !DILocation(line: 4428, column: 24, scope: !7934)
!7936 = !DILocation(line: 4428, column: 7, scope: !7886)
!7937 = !DILocation(line: 4430, column: 7, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 4429, column: 5)
!7939 = !DILocation(line: 4431, column: 14, scope: !7938)
!7940 = !DILocation(line: 4431, column: 7, scope: !7938)
!7941 = !DILocation(line: 4434, column: 24, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4434, column: 7)
!7943 = !DILocation(line: 4434, column: 7, scope: !7886)
!7944 = !DILocation(line: 4436, column: 7, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 4435, column: 5)
!7946 = !DILocation(line: 4437, column: 14, scope: !7945)
!7947 = !DILocation(line: 4437, column: 7, scope: !7945)
!7948 = !DILocation(line: 4440, column: 8, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4440, column: 7)
!7950 = !DILocation(line: 4440, column: 7, scope: !7886)
!7951 = !DILocation(line: 4442, column: 15, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 4441, column: 5)
!7953 = !DILocation(line: 4443, column: 20, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 4443, column: 11)
!7955 = !DILocation(line: 4443, column: 17, scope: !7954)
!7956 = !DILocation(line: 4443, column: 11, scope: !7952)
!7957 = !DILocation(line: 0, scope: !7895)
!7958 = !DILocation(line: 4444, column: 2, scope: !7954)
!7959 = !DILocation(line: 4447, column: 15, scope: !7895)
!7960 = !DILocation(line: 4447, column: 12, scope: !7895)
!7961 = !DILocation(line: 4447, column: 7, scope: !7886)
!7962 = !DILocation(line: 4449, column: 28, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 4449, column: 11)
!7964 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 4448, column: 5)
!7965 = !DILocation(line: 4450, column: 4, scope: !7963)
!7966 = !DILocation(line: 4450, column: 24, scope: !7963)
!7967 = !DILocation(line: 4449, column: 11, scope: !7964)
!7968 = !DILocation(line: 4451, column: 2, scope: !7963)
!7969 = !DILocation(line: 4454, column: 29, scope: !7894)
!7970 = !DILocation(line: 4454, column: 12, scope: !7895)
!7971 = !DILocation(line: 4458, column: 20, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 4458, column: 7)
!7973 = !DILocation(line: 4458, column: 12, scope: !7972)
!7974 = !DILocation(line: 0, scope: !7972)
!7975 = !DILocation(line: 0, scope: !7893)
!7976 = !DILocation(line: 4458, column: 7, scope: !7972)
!7977 = !DILocation(line: 4459, column: 6, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 4459, column: 6)
!7979 = distinct !DILexicalBlock(scope: !7972, file: !3, line: 4458, column: 7)
!7980 = !DILocation(line: 4459, column: 27, scope: !7978)
!7981 = !DILocation(line: 4459, column: 24, scope: !7978)
!7982 = !DILocation(line: 4460, column: 6, scope: !7978)
!7983 = !DILocation(line: 4460, column: 20, scope: !7978)
!7984 = !DILocation(line: 4461, column: 6, scope: !7978)
!7985 = !DILocation(line: 4460, column: 9, scope: !7978)
!7986 = !DILocation(line: 4459, column: 6, scope: !7979)
!7987 = !DILocation(line: 4458, column: 55, scope: !7979)
!7988 = !DILocation(line: 4458, column: 7, scope: !7979)
!7989 = distinct !{!7989, !7976, !7990}
!7990 = !DILocation(line: 4462, column: 4, scope: !7972)
!7991 = !DILocation(line: 0, scope: !7897)
!7992 = !DILocation(line: 4467, column: 4, scope: !7897)
!7993 = !DILocation(line: 4467, column: 9, scope: !7897)
!7994 = !DILocation(line: 4469, column: 4, scope: !7897)
!7995 = !DILocation(line: 4470, column: 8, scope: !7897)
!7996 = !DILocation(line: 4471, column: 8, scope: !7897)
!7997 = !DILocation(line: 4472, column: 9, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 4472, column: 8)
!7999 = !DILocation(line: 4472, column: 8, scope: !7897)
!8000 = !DILocation(line: 4473, column: 10, scope: !7998)
!8001 = !DILocation(line: 4473, column: 6, scope: !7998)
!8002 = !DILocation(line: 4474, column: 8, scope: !7897)
!8003 = !DILocation(line: 4476, column: 24, scope: !7897)
!8004 = !DILocation(line: 4476, column: 4, scope: !7897)
!8005 = !DILocation(line: 4476, column: 22, scope: !7897)
!8006 = !DILocation(line: 4478, column: 2, scope: !7898)
!8007 = !DILocation(line: 4479, column: 7, scope: !7893)
!8008 = !DILocation(line: 4480, column: 14, scope: !7893)
!8009 = !DILocation(line: 4480, column: 7, scope: !7893)
!8010 = !DILocation(line: 4486, column: 19, scope: !7905)
!8011 = !DILocation(line: 4486, column: 16, scope: !7905)
!8012 = !DILocation(line: 4486, column: 11, scope: !7901)
!8013 = !DILocation(line: 4488, column: 13, scope: !7904)
!8014 = !DILocation(line: 0, scope: !7904)
!8015 = !DILocation(line: 4489, column: 4, scope: !7904)
!8016 = !DILocation(line: 0, scope: !7901)
!8017 = !DILocation(line: 4496, column: 11, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4496, column: 11)
!8019 = !DILocation(line: 4497, column: 4, scope: !8018)
!8020 = !DILocation(line: 4497, column: 24, scope: !8018)
!8021 = !DILocation(line: 4498, column: 4, scope: !8018)
!8022 = !DILocation(line: 4498, column: 7, scope: !8018)
!8023 = !DILocation(line: 4498, column: 25, scope: !8018)
!8024 = !DILocation(line: 4496, column: 11, scope: !7901)
!8025 = !DILocation(line: 4499, column: 2, scope: !8018)
!8026 = !DILocation(line: 4503, column: 11, scope: !7908)
!8027 = !DILocation(line: 4503, column: 28, scope: !7908)
!8028 = !DILocation(line: 4504, column: 4, scope: !7908)
!8029 = !DILocation(line: 4504, column: 7, scope: !7908)
!8030 = !DILocation(line: 4504, column: 25, scope: !7908)
!8031 = !DILocation(line: 4505, column: 4, scope: !7908)
!8032 = !DILocation(line: 4505, column: 8, scope: !7908)
!8033 = !DILocation(line: 4503, column: 11, scope: !7901)
!8034 = !DILocation(line: 4507, column: 25, scope: !7907)
!8035 = !DILocation(line: 0, scope: !7907)
!8036 = !DILocation(line: 4508, column: 27, scope: !7907)
!8037 = !DILocation(line: 4509, column: 4, scope: !7907)
!8038 = !DILocation(line: 4511, column: 9, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 4511, column: 8)
!8040 = !DILocation(line: 4511, column: 8, scope: !7907)
!8041 = !DILocation(line: 4513, column: 12, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4513, column: 12)
!8043 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 4512, column: 6)
!8044 = !DILocation(line: 4513, column: 12, scope: !8043)
!8045 = !DILocation(line: 4516, column: 8, scope: !8042)
!8046 = !DILocation(line: 4514, column: 3, scope: !8042)
!8047 = !DILocation(line: 4518, column: 17, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 4518, column: 17)
!8049 = !DILocation(line: 4518, column: 17, scope: !8042)
!8050 = !DILocation(line: 4521, column: 8, scope: !8048)
!8051 = !DILocation(line: 4519, column: 3, scope: !8048)
!8052 = !DILocation(line: 4526, column: 8, scope: !8048)
!8053 = !DILocation(line: 4527, column: 8, scope: !8048)
!8054 = !DILocation(line: 4524, column: 3, scope: !8048)
!8055 = !DILocation(line: 4529, column: 2, scope: !7908)
!8056 = !DILocation(line: 4529, column: 2, scope: !7907)
!8057 = !DILocation(line: 4546, column: 11, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4546, column: 11)
!8059 = !DILocation(line: 4546, column: 28, scope: !8058)
!8060 = !DILocation(line: 4547, column: 4, scope: !8058)
!8061 = !DILocation(line: 4547, column: 7, scope: !8058)
!8062 = !DILocation(line: 4547, column: 25, scope: !8058)
!8063 = !DILocation(line: 4548, column: 4, scope: !8058)
!8064 = !DILocation(line: 4548, column: 7, scope: !8058)
!8065 = !DILocation(line: 4548, column: 32, scope: !8058)
!8066 = !DILocation(line: 4548, column: 29, scope: !8058)
!8067 = !DILocation(line: 4546, column: 11, scope: !7901)
!8068 = !DILocation(line: 4554, column: 2, scope: !8058)
!8069 = !DILocation(line: 4557, column: 11, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4557, column: 11)
!8071 = !DILocation(line: 4557, column: 29, scope: !8070)
!8072 = !DILocation(line: 4558, column: 4, scope: !8070)
!8073 = !DILocation(line: 4558, column: 7, scope: !8070)
!8074 = !DILocation(line: 4558, column: 27, scope: !8070)
!8075 = !DILocation(line: 4558, column: 24, scope: !8070)
!8076 = !DILocation(line: 4557, column: 11, scope: !7901)
!8077 = !DILocation(line: 4559, column: 2, scope: !8070)
!8078 = !DILocation(line: 4563, column: 11, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4563, column: 11)
!8080 = !DILocation(line: 4563, column: 28, scope: !8079)
!8081 = !DILocation(line: 4564, column: 4, scope: !8079)
!8082 = !DILocation(line: 4564, column: 7, scope: !8079)
!8083 = !DILocation(line: 4564, column: 25, scope: !8079)
!8084 = !DILocation(line: 4565, column: 4, scope: !8079)
!8085 = !DILocation(line: 4565, column: 7, scope: !8079)
!8086 = !DILocation(line: 4565, column: 32, scope: !8079)
!8087 = !DILocation(line: 4565, column: 29, scope: !8079)
!8088 = !DILocation(line: 4567, column: 4, scope: !8079)
!8089 = !DILocation(line: 4567, column: 8, scope: !8079)
!8090 = !DILocation(line: 4563, column: 11, scope: !7901)
!8091 = !DILocation(line: 4568, column: 2, scope: !8079)
!8092 = !DILocation(line: 4572, column: 11, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4572, column: 11)
!8094 = !DILocation(line: 4572, column: 32, scope: !8093)
!8095 = !DILocation(line: 4572, column: 11, scope: !7901)
!8096 = !DILocation(line: 4573, column: 9, scope: !8093)
!8097 = !DILocation(line: 4578, column: 11, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4578, column: 11)
!8099 = !DILocation(line: 4579, column: 4, scope: !8098)
!8100 = !DILocation(line: 4579, column: 7, scope: !8098)
!8101 = !DILocation(line: 4579, column: 24, scope: !8098)
!8102 = !DILocation(line: 4580, column: 4, scope: !8098)
!8103 = !DILocation(line: 4580, column: 7, scope: !8098)
!8104 = !DILocation(line: 4580, column: 25, scope: !8098)
!8105 = !DILocation(line: 4581, column: 4, scope: !8098)
!8106 = !DILocation(line: 4581, column: 7, scope: !8098)
!8107 = !DILocation(line: 4581, column: 37, scope: !8098)
!8108 = !DILocation(line: 4582, column: 4, scope: !8098)
!8109 = !DILocation(line: 4582, column: 7, scope: !8098)
!8110 = !DILocation(line: 4582, column: 36, scope: !8098)
!8111 = !DILocation(line: 4578, column: 11, scope: !7901)
!8112 = !DILocation(line: 4583, column: 2, scope: !8098)
!8113 = !DILocation(line: 4586, column: 11, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4586, column: 11)
!8115 = !DILocation(line: 4587, column: 4, scope: !8114)
!8116 = !DILocation(line: 4587, column: 7, scope: !8114)
!8117 = !DILocation(line: 4587, column: 24, scope: !8114)
!8118 = !DILocation(line: 4588, column: 4, scope: !8114)
!8119 = !DILocation(line: 4588, column: 7, scope: !8114)
!8120 = !DILocation(line: 4588, column: 25, scope: !8114)
!8121 = !DILocation(line: 4589, column: 4, scope: !8114)
!8122 = !DILocation(line: 4589, column: 7, scope: !8114)
!8123 = !DILocation(line: 4589, column: 36, scope: !8114)
!8124 = !DILocation(line: 4590, column: 4, scope: !8114)
!8125 = !DILocation(line: 4590, column: 7, scope: !8114)
!8126 = !DILocation(line: 4590, column: 37, scope: !8114)
!8127 = !DILocation(line: 4591, column: 4, scope: !8114)
!8128 = !DILocation(line: 4591, column: 8, scope: !8114)
!8129 = !DILocation(line: 4586, column: 11, scope: !7901)
!8130 = !DILocation(line: 4592, column: 2, scope: !8114)
!8131 = !DILocation(line: 4596, column: 15, scope: !7901)
!8132 = !DILocation(line: 4599, column: 11, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 4599, column: 11)
!8134 = !DILocation(line: 4599, column: 29, scope: !8133)
!8135 = !DILocation(line: 4599, column: 44, scope: !8133)
!8136 = !DILocation(line: 4599, column: 48, scope: !8133)
!8137 = !DILocation(line: 4599, column: 11, scope: !7901)
!8138 = !DILocation(line: 4601, column: 8, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 4601, column: 8)
!8140 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 4600, column: 2)
!8141 = !DILocation(line: 4601, column: 34, scope: !8139)
!8142 = !DILocation(line: 4601, column: 37, scope: !8139)
!8143 = !DILocation(line: 4601, column: 8, scope: !8140)
!8144 = !DILocation(line: 4603, column: 13, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 4603, column: 12)
!8146 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 4602, column: 6)
!8147 = !DILocation(line: 4603, column: 12, scope: !8146)
!8148 = !DILocation(line: 4606, column: 13, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 4604, column: 3)
!8150 = !DILocation(line: 4607, column: 29, scope: !8149)
!8151 = !DILocation(line: 4607, column: 5, scope: !8149)
!8152 = !DILocation(line: 4607, column: 27, scope: !8149)
!8153 = !DILocation(line: 4608, column: 3, scope: !8149)
!8154 = !DILocation(line: 4610, column: 13, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 4610, column: 13)
!8156 = !DILocation(line: 4610, column: 13, scope: !8139)
!8157 = !DILocation(line: 4612, column: 34, scope: !8155)
!8158 = !DILocation(line: 4613, column: 6, scope: !8155)
!8159 = !DILocation(line: 4614, column: 6, scope: !8155)
!8160 = !DILocation(line: 4612, column: 14, scope: !8155)
!8161 = !DILocation(line: 4612, column: 6, scope: !8155)
!8162 = !DILocation(line: 4415, column: 9, scope: !7886)
!8163 = !DILocation(line: 4619, column: 13, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4619, column: 7)
!8165 = !DILocation(line: 4619, column: 7, scope: !7886)
!8166 = !DILocation(line: 4620, column: 13, scope: !8164)
!8167 = !DILocation(line: 4620, column: 5, scope: !8164)
!8168 = !DILocation(line: 4627, column: 7, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4627, column: 7)
!8170 = !DILocation(line: 4627, column: 25, scope: !8169)
!8171 = !DILocation(line: 4628, column: 7, scope: !8169)
!8172 = !DILocation(line: 4628, column: 28, scope: !8169)
!8173 = !DILocation(line: 4629, column: 7, scope: !8169)
!8174 = !DILocation(line: 4629, column: 29, scope: !8169)
!8175 = !DILocation(line: 4630, column: 4, scope: !8169)
!8176 = !DILocation(line: 4630, column: 10, scope: !8169)
!8177 = !DILocation(line: 4630, column: 27, scope: !8169)
!8178 = !DILocation(line: 4631, column: 3, scope: !8169)
!8179 = !DILocation(line: 4631, column: 6, scope: !8169)
!8180 = !DILocation(line: 4632, column: 9, scope: !8169)
!8181 = !DILocation(line: 4632, column: 29, scope: !8169)
!8182 = !DILocation(line: 4633, column: 9, scope: !8169)
!8183 = !DILocation(line: 4633, column: 29, scope: !8169)
!8184 = !DILocation(line: 4627, column: 7, scope: !7886)
!8185 = !DILocation(line: 4634, column: 15, scope: !8169)
!8186 = !DILocation(line: 4634, column: 7, scope: !8169)
!8187 = !DILocation(line: 4636, column: 7, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4636, column: 7)
!8189 = !DILocation(line: 4636, column: 7, scope: !7886)
!8190 = !DILocation(line: 4637, column: 5, scope: !8188)
!8191 = !DILocation(line: 4639, column: 1, scope: !7886)
!8192 = distinct !DISubprogram(name: "digest_init", scope: !3, file: !3, line: 5730, type: !8193, scopeLine: 5733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8195)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!460, !585, !460, !460, !460, !452, !452, !453}
!8195 = !{!8196, !8197, !8198, !8199, !8200, !8201, !8202, !8203, !8204, !8205, !8206, !8207, !8210, !8211, !8212, !8213, !8214, !8217, !8218, !8221, !8226, !8227, !8228}
!8196 = !DILocalVariable(name: "init_loc", arg: 1, scope: !8192, file: !3, line: 5730, type: !585)
!8197 = !DILocalVariable(name: "type", arg: 2, scope: !8192, file: !3, line: 5730, type: !460)
!8198 = !DILocalVariable(name: "init", arg: 3, scope: !8192, file: !3, line: 5730, type: !460)
!8199 = !DILocalVariable(name: "origtype", arg: 4, scope: !8192, file: !3, line: 5730, type: !460)
!8200 = !DILocalVariable(name: "null_pointer_constant", arg: 5, scope: !8192, file: !3, line: 5731, type: !452)
!8201 = !DILocalVariable(name: "strict_string", arg: 6, scope: !8192, file: !3, line: 5731, type: !452)
!8202 = !DILocalVariable(name: "require_constant", arg: 7, scope: !8192, file: !3, line: 5732, type: !453)
!8203 = !DILocalVariable(name: "code", scope: !8192, file: !3, line: 5734, type: !134)
!8204 = !DILocalVariable(name: "inside_init", scope: !8192, file: !3, line: 5735, type: !460)
!8205 = !DILocalVariable(name: "semantic_type", scope: !8192, file: !3, line: 5736, type: !460)
!8206 = !DILocalVariable(name: "maybe_const", scope: !8192, file: !3, line: 5737, type: !452)
!8207 = !DILocalVariable(name: "typ1", scope: !8208, file: !3, line: 5761, type: !460)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 5760, column: 5)
!8209 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 5758, column: 7)
!8210 = !DILocalVariable(name: "char_array", scope: !8208, file: !3, line: 5765, type: !452)
!8211 = !DILocalVariable(name: "wchar_array", scope: !8208, file: !3, line: 5768, type: !452)
!8212 = !DILocalVariable(name: "char16_array", scope: !8208, file: !3, line: 5769, type: !452)
!8213 = !DILocalVariable(name: "char32_array", scope: !8208, file: !3, line: 5770, type: !452)
!8214 = !DILocalVariable(name: "expr", scope: !8215, file: !3, line: 5774, type: !1909)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 5773, column: 2)
!8216 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 5772, column: 11)
!8217 = !DILocalVariable(name: "typ2", scope: !8215, file: !3, line: 5775, type: !460)
!8218 = !DILocalVariable(name: "len", scope: !8219, file: !3, line: 5818, type: !514)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 5817, column: 6)
!8220 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 5814, column: 8)
!8221 = !DILocalVariable(name: "ix", scope: !8222, file: !3, line: 5862, type: !514)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 5861, column: 2)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 5860, column: 11)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 5854, column: 5)
!8225 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 5850, column: 7)
!8226 = !DILocalVariable(name: "value", scope: !8222, file: !3, line: 5863, type: !460)
!8227 = !DILocalVariable(name: "constant_p", scope: !8222, file: !3, line: 5864, type: !452)
!8228 = !DILocalVariable(name: "decl", scope: !8229, file: !3, line: 5928, type: !460)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 5923, column: 2)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 5920, column: 11)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 5898, column: 5)
!8232 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 5887, column: 7)
!8233 = !DILocation(line: 0, scope: !8192)
!8234 = !DILocation(line: 5734, column: 25, scope: !8192)
!8235 = !DILocation(line: 5737, column: 3, scope: !8192)
!8236 = !DILocation(line: 5737, column: 8, scope: !8192)
!8237 = !DILocation(line: 5739, column: 15, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 5739, column: 7)
!8239 = !DILocation(line: 5739, column: 12, scope: !8238)
!8240 = !DILocation(line: 5740, column: 11, scope: !8238)
!8241 = !DILocation(line: 5740, column: 7, scope: !8238)
!8242 = !DILocation(line: 5741, column: 15, scope: !8238)
!8243 = !DILocation(line: 5742, column: 10, scope: !8238)
!8244 = !DILocation(line: 5742, column: 27, scope: !8238)
!8245 = !DILocation(line: 5739, column: 7, scope: !8192)
!8246 = !DILocation(line: 5745, column: 3, scope: !8192)
!8247 = !DILocation(line: 5743, column: 5, scope: !8238)
!8248 = distinct !{!8248, !8246, !8246}
!8249 = !DILocation(line: 5747, column: 31, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 5747, column: 7)
!8251 = !DILocation(line: 5747, column: 7, scope: !8192)
!8252 = !DILocation(line: 5749, column: 23, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 5748, column: 5)
!8254 = !DILocation(line: 5750, column: 21, scope: !8253)
!8255 = !DILocation(line: 5751, column: 5, scope: !8253)
!8256 = !DILocation(line: 5752, column: 44, scope: !8192)
!8257 = !DILocation(line: 5752, column: 17, scope: !8192)
!8258 = !DILocation(line: 5753, column: 17, scope: !8192)
!8259 = !DILocation(line: 5758, column: 12, scope: !8209)
!8260 = !DILocation(line: 5758, column: 29, scope: !8209)
!8261 = !DILocation(line: 5758, column: 26, scope: !8209)
!8262 = !DILocation(line: 5759, column: 10, scope: !8209)
!8263 = !DILocation(line: 5759, column: 34, scope: !8209)
!8264 = !DILocation(line: 5758, column: 7, scope: !8192)
!8265 = !DILocation(line: 5761, column: 19, scope: !8208)
!8266 = !DILocation(line: 0, scope: !8208)
!8267 = !DILocation(line: 5765, column: 34, scope: !8208)
!8268 = !DILocation(line: 5765, column: 31, scope: !8208)
!8269 = !DILocation(line: 5766, column: 16, scope: !8208)
!8270 = !DILocation(line: 5766, column: 13, scope: !8208)
!8271 = !DILocation(line: 5766, column: 5, scope: !8208)
!8272 = !DILocation(line: 5767, column: 16, scope: !8208)
!8273 = !DILocation(line: 5767, column: 13, scope: !8208)
!8274 = !DILocation(line: 5767, column: 5, scope: !8208)
!8275 = !DILocation(line: 5768, column: 45, scope: !8208)
!8276 = !DILocation(line: 5768, column: 28, scope: !8208)
!8277 = !DILocation(line: 5769, column: 46, scope: !8208)
!8278 = !DILocation(line: 5769, column: 29, scope: !8208)
!8279 = !DILocation(line: 5770, column: 46, scope: !8208)
!8280 = !DILocation(line: 5770, column: 29, scope: !8208)
!8281 = !DILocation(line: 5772, column: 22, scope: !8216)
!8282 = !DILocation(line: 5774, column: 4, scope: !8215)
!8283 = !DILocation(line: 5775, column: 16, scope: !8215)
!8284 = !DILocation(line: 0, scope: !8215)
!8285 = !DILocation(line: 5776, column: 9, scope: !8215)
!8286 = !DILocation(line: 5776, column: 15, scope: !8215)
!8287 = !DILocation(line: 5777, column: 26, scope: !8215)
!8288 = !DILocation(line: 5777, column: 9, scope: !8215)
!8289 = !DILocation(line: 5777, column: 23, scope: !8215)
!8290 = !DILocation(line: 5778, column: 9, scope: !8215)
!8291 = !DILocation(line: 5778, column: 23, scope: !8215)
!8292 = !DILocation(line: 5779, column: 4, scope: !8215)
!8293 = !DILocation(line: 5781, column: 8, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 5781, column: 8)
!8295 = !DILocation(line: 5781, column: 27, scope: !8294)
!8296 = !DILocation(line: 5781, column: 31, scope: !8294)
!8297 = !DILocation(line: 5781, column: 8, scope: !8215)
!8298 = !DILocation(line: 5782, column: 6, scope: !8294)
!8299 = !DILocation(line: 5785, column: 19, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 5785, column: 8)
!8301 = !DILocation(line: 5786, column: 5, scope: !8300)
!8302 = !DILocation(line: 5785, column: 8, scope: !8300)
!8303 = !DILocation(line: 5785, column: 8, scope: !8215)
!8304 = !DILocation(line: 0, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 5789, column: 8)
!8306 = !DILocation(line: 5789, column: 8, scope: !8215)
!8307 = !DILocation(line: 5791, column: 17, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 5791, column: 12)
!8309 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 5790, column: 6)
!8310 = !DILocation(line: 5791, column: 12, scope: !8309)
!8311 = !DILocation(line: 5793, column: 5, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 5792, column: 3)
!8313 = !DILocation(line: 5794, column: 12, scope: !8312)
!8314 = !DILocation(line: 5794, column: 5, scope: !8312)
!8315 = !DILocation(line: 5799, column: 17, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 5799, column: 12)
!8317 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 5798, column: 6)
!8318 = !DILocation(line: 5799, column: 12, scope: !8317)
!8319 = !DILocation(line: 5801, column: 5, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 5800, column: 3)
!8321 = !DILocation(line: 5803, column: 12, scope: !8320)
!8322 = !DILocation(line: 5803, column: 5, scope: !8320)
!8323 = !DILocation(line: 5805, column: 18, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 5805, column: 17)
!8325 = !DILocation(line: 5805, column: 17, scope: !8316)
!8326 = !DILocation(line: 5807, column: 5, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 5806, column: 3)
!8328 = !DILocation(line: 5809, column: 12, scope: !8327)
!8329 = !DILocation(line: 5809, column: 5, scope: !8327)
!8330 = !DILocation(line: 5813, column: 28, scope: !8215)
!8331 = !DILocation(line: 5814, column: 8, scope: !8220)
!8332 = !DILocation(line: 5814, column: 27, scope: !8220)
!8333 = !DILocation(line: 5815, column: 8, scope: !8220)
!8334 = !DILocation(line: 5815, column: 11, scope: !8220)
!8335 = !DILocation(line: 5815, column: 28, scope: !8220)
!8336 = !DILocation(line: 5816, column: 8, scope: !8220)
!8337 = !DILocation(line: 5816, column: 11, scope: !8220)
!8338 = !DILocation(line: 5816, column: 40, scope: !8220)
!8339 = !DILocation(line: 5814, column: 8, scope: !8215)
!8340 = !DILocation(line: 5818, column: 37, scope: !8219)
!8341 = !DILocation(line: 0, scope: !8219)
!8342 = !DILocation(line: 5823, column: 34, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 5823, column: 12)
!8344 = !DILocation(line: 5825, column: 10, scope: !8343)
!8345 = !DILocation(line: 5826, column: 10, scope: !8343)
!8346 = !DILocation(line: 5825, column: 9, scope: !8343)
!8347 = !DILocation(line: 5825, column: 7, scope: !8343)
!8348 = !DILocation(line: 5823, column: 16, scope: !8343)
!8349 = !DILocation(line: 5823, column: 14, scope: !8343)
!8350 = !DILocation(line: 5823, column: 12, scope: !8219)
!8351 = !DILocation(line: 5827, column: 3, scope: !8343)
!8352 = !DILocation(line: 5830, column: 17, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 5830, column: 17)
!8354 = !DILocation(line: 5831, column: 10, scope: !8353)
!8355 = !DILocation(line: 5831, column: 35, scope: !8353)
!8356 = !DILocation(line: 5831, column: 17, scope: !8353)
!8357 = !DILocation(line: 5831, column: 15, scope: !8353)
!8358 = !DILocation(line: 5830, column: 17, scope: !8343)
!8359 = !DILocation(line: 5832, column: 3, scope: !8353)
!8360 = !DILocation(line: 5838, column: 2, scope: !8216)
!8361 = !DILocation(line: 5839, column: 16, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 5839, column: 16)
!8363 = !DILocation(line: 5839, column: 16, scope: !8216)
!8364 = !DILocation(line: 5841, column: 4, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 5840, column: 2)
!8366 = !DILocation(line: 5843, column: 11, scope: !8365)
!8367 = !DILocation(line: 5843, column: 4, scope: !8365)
!8368 = !DILocation(line: 5850, column: 12, scope: !8225)
!8369 = !DILocation(line: 5851, column: 7, scope: !8225)
!8370 = !DILocation(line: 5851, column: 10, scope: !8225)
!8371 = !DILocation(line: 5851, column: 46, scope: !8225)
!8372 = !DILocation(line: 5852, column: 7, scope: !8225)
!8373 = !DILocation(line: 5852, column: 10, scope: !8225)
!8374 = !DILocation(line: 5853, column: 7, scope: !8225)
!8375 = !DILocation(line: 5853, column: 10, scope: !8225)
!8376 = !DILocation(line: 5850, column: 7, scope: !8192)
!8377 = !DILocation(line: 5855, column: 35, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 5855, column: 11)
!8379 = !DILocation(line: 5856, column: 4, scope: !8378)
!8380 = !DILocation(line: 5856, column: 18, scope: !8378)
!8381 = !DILocation(line: 5857, column: 4, scope: !8378)
!8382 = !DILocation(line: 5856, column: 7, scope: !8378)
!8383 = !DILocation(line: 5855, column: 11, scope: !8224)
!8384 = !DILocation(line: 5860, column: 11, scope: !8223)
!8385 = !DILocation(line: 5860, column: 35, scope: !8223)
!8386 = !DILocation(line: 5860, column: 11, scope: !8224)
!8387 = !DILocation(line: 0, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 5868, column: 4)
!8389 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 5868, column: 4)
!8390 = !DILocation(line: 5868, column: 4, scope: !8389)
!8391 = !DILocation(line: 0, scope: !8389)
!8392 = !DILocation(line: 0, scope: !8222)
!8393 = !DILocation(line: 5868, column: 4, scope: !8388)
!8394 = !DILocation(line: 5869, column: 11, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 5869, column: 10)
!8396 = !DILocation(line: 5869, column: 10, scope: !8388)
!8397 = distinct !{!8397, !8390, !8398}
!8398 = !DILocation(line: 5873, column: 8, scope: !8389)
!8399 = !DILocation(line: 5875, column: 8, scope: !8222)
!8400 = !DILocation(line: 5877, column: 9, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 5875, column: 8)
!8402 = !DILocation(line: 5876, column: 13, scope: !8401)
!8403 = !DILocation(line: 5876, column: 6, scope: !8401)
!8404 = !DILocation(line: 5881, column: 7, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 5881, column: 7)
!8406 = !DILocation(line: 5881, column: 7, scope: !8192)
!8407 = !DILocation(line: 5882, column: 5, scope: !8405)
!8408 = !DILocation(line: 5887, column: 7, scope: !8232)
!8409 = !DILocation(line: 5887, column: 19, scope: !8232)
!8410 = !DILocation(line: 5887, column: 22, scope: !8232)
!8411 = !DILocation(line: 5887, column: 46, scope: !8232)
!8412 = !DILocation(line: 5888, column: 7, scope: !8232)
!8413 = !DILocation(line: 5888, column: 22, scope: !8232)
!8414 = !DILocation(line: 5889, column: 8, scope: !8232)
!8415 = !DILocation(line: 5888, column: 11, scope: !8232)
!8416 = !DILocation(line: 5890, column: 4, scope: !8232)
!8417 = !DILocation(line: 5891, column: 8, scope: !8232)
!8418 = !DILocation(line: 5891, column: 22, scope: !8232)
!8419 = !DILocation(line: 5891, column: 11, scope: !8232)
!8420 = !DILocation(line: 5892, column: 4, scope: !8232)
!8421 = !DILocation(line: 5893, column: 8, scope: !8232)
!8422 = !DILocation(line: 5893, column: 22, scope: !8232)
!8423 = !DILocation(line: 5893, column: 11, scope: !8232)
!8424 = !DILocation(line: 5894, column: 4, scope: !8232)
!8425 = !DILocation(line: 5895, column: 8, scope: !8232)
!8426 = !DILocation(line: 5895, column: 11, scope: !8232)
!8427 = !DILocation(line: 5895, column: 47, scope: !8232)
!8428 = !DILocation(line: 5896, column: 8, scope: !8232)
!8429 = !DILocation(line: 5896, column: 22, scope: !8232)
!8430 = !DILocation(line: 5897, column: 8, scope: !8232)
!8431 = !DILocation(line: 5896, column: 11, scope: !8232)
!8432 = !DILocation(line: 5887, column: 7, scope: !8192)
!8433 = !DILocation(line: 5899, column: 16, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 5899, column: 11)
!8435 = !DILocation(line: 5899, column: 11, scope: !8231)
!8436 = !DILocation(line: 5901, column: 8, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 5901, column: 8)
!8438 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 5900, column: 2)
!8439 = !DILocation(line: 5901, column: 44, scope: !8437)
!8440 = !DILocation(line: 5901, column: 8, scope: !8438)
!8441 = !DILocation(line: 5903, column: 12, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 5903, column: 12)
!8443 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 5902, column: 6)
!8444 = !DILocation(line: 5903, column: 36, scope: !8442)
!8445 = !DILocation(line: 5904, column: 5, scope: !8442)
!8446 = !DILocation(line: 5904, column: 32, scope: !8442)
!8447 = !DILocation(line: 5903, column: 12, scope: !8443)
!8448 = !DILocation(line: 5905, column: 17, scope: !8442)
!8449 = !DILocation(line: 5912, column: 6, scope: !8443)
!8450 = !DILocation(line: 5909, column: 5, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 5908, column: 3)
!8452 = !DILocation(line: 5910, column: 12, scope: !8451)
!8453 = !DILocation(line: 5910, column: 5, scope: !8451)
!8454 = !DILocation(line: 5915, column: 11, scope: !8231)
!8455 = !DILocation(line: 5918, column: 16, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 5915, column: 11)
!8457 = !DILocation(line: 5918, column: 2, scope: !8456)
!8458 = !DILocation(line: 0, scope: !8231)
!8459 = !DILocation(line: 5920, column: 11, scope: !8230)
!8460 = !DILocation(line: 5921, column: 4, scope: !8230)
!8461 = !DILocation(line: 5921, column: 13, scope: !8230)
!8462 = !DILocation(line: 5921, column: 32, scope: !8230)
!8463 = !DILocation(line: 5921, column: 28, scope: !8230)
!8464 = !DILocation(line: 5922, column: 7, scope: !8230)
!8465 = !DILocation(line: 5922, column: 31, scope: !8230)
!8466 = !DILocation(line: 5920, column: 11, scope: !8231)
!8467 = !DILocation(line: 5928, column: 16, scope: !8229)
!8468 = !DILocation(line: 5929, column: 18, scope: !8229)
!8469 = !DILocation(line: 5930, column: 2, scope: !8229)
!8470 = !DILocation(line: 5932, column: 30, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 5932, column: 11)
!8472 = !DILocation(line: 5932, column: 33, scope: !8471)
!8473 = !DILocation(line: 5932, column: 57, scope: !8471)
!8474 = !DILocation(line: 5933, column: 4, scope: !8471)
!8475 = !DILocation(line: 5933, column: 31, scope: !8471)
!8476 = !DILocation(line: 5932, column: 11, scope: !8231)
!8477 = !DILocation(line: 5935, column: 4, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 5934, column: 2)
!8479 = !DILocation(line: 5936, column: 11, scope: !8478)
!8480 = !DILocation(line: 5936, column: 4, scope: !8478)
!8481 = !DILocation(line: 5942, column: 11, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 5942, column: 11)
!8483 = !DILocation(line: 5942, column: 31, scope: !8482)
!8484 = !DILocation(line: 5942, column: 28, scope: !8482)
!8485 = !DILocation(line: 5943, column: 7, scope: !8482)
!8486 = !DILocation(line: 5943, column: 31, scope: !8482)
!8487 = !DILocation(line: 5942, column: 11, scope: !8231)
!8488 = !DILocation(line: 5947, column: 13, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 5944, column: 2)
!8490 = !DILocation(line: 5946, column: 8, scope: !8489)
!8491 = !DILocation(line: 5948, column: 23, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 5948, column: 8)
!8493 = !DILocation(line: 5948, column: 20, scope: !8492)
!8494 = !DILocation(line: 5948, column: 8, scope: !8489)
!8495 = !DILocation(line: 5949, column: 6, scope: !8492)
!8496 = !DILocation(line: 5951, column: 6, scope: !8492)
!8497 = !DILocation(line: 5953, column: 8, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 5953, column: 8)
!8499 = !DILocation(line: 5954, column: 20, scope: !8498)
!8500 = !DILocation(line: 5953, column: 8, scope: !8489)
!8501 = !DILocation(line: 5955, column: 2, scope: !8489)
!8502 = !DILocation(line: 5957, column: 9, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 5956, column: 16)
!8504 = !DILocation(line: 5958, column: 8, scope: !8503)
!8505 = !DILocation(line: 5957, column: 13, scope: !8503)
!8506 = !DILocation(line: 5956, column: 16, scope: !8482)
!8507 = !DILocation(line: 5960, column: 4, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 5959, column: 2)
!8509 = !DILocation(line: 5961, column: 18, scope: !8508)
!8510 = !DILocation(line: 5962, column: 2, scope: !8508)
!8511 = !DILocation(line: 5963, column: 37, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 5963, column: 16)
!8513 = !DILocation(line: 5963, column: 33, scope: !8512)
!8514 = !DILocation(line: 5964, column: 2, scope: !8512)
!8515 = !DILocation(line: 5968, column: 11, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 5968, column: 11)
!8517 = !DILocation(line: 5968, column: 47, scope: !8516)
!8518 = !DILocation(line: 5968, column: 11, scope: !8231)
!8519 = !DILocation(line: 5969, column: 16, scope: !8516)
!8520 = !DILocation(line: 5969, column: 2, scope: !8516)
!8521 = !DILocation(line: 5978, column: 28, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 5978, column: 7)
!8523 = !DILocation(line: 5982, column: 11, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 5982, column: 11)
!8525 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 5981, column: 5)
!8526 = !DILocation(line: 5982, column: 40, scope: !8524)
!8527 = !DILocation(line: 5983, column: 4, scope: !8524)
!8528 = !DILocation(line: 5983, column: 8, scope: !8524)
!8529 = !DILocation(line: 5983, column: 25, scope: !8524)
!8530 = !DILocation(line: 5984, column: 8, scope: !8524)
!8531 = !DILocation(line: 5984, column: 28, scope: !8524)
!8532 = !DILocation(line: 5982, column: 11, scope: !8525)
!8533 = !DILocation(line: 5985, column: 23, scope: !8524)
!8534 = !DILocation(line: 5985, column: 2, scope: !8524)
!8535 = !DILocation(line: 5986, column: 11, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 5986, column: 11)
!8537 = !DILocation(line: 5986, column: 11, scope: !8525)
!8538 = !DILocation(line: 5987, column: 16, scope: !8536)
!8539 = !DILocation(line: 5987, column: 2, scope: !8536)
!8540 = !DILocation(line: 0, scope: !8525)
!8541 = !DILocation(line: 5990, column: 4, scope: !8525)
!8542 = !DILocation(line: 5995, column: 26, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 5995, column: 11)
!8544 = !DILocation(line: 5995, column: 23, scope: !8543)
!8545 = !DILocation(line: 5997, column: 33, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 5997, column: 16)
!8547 = !DILocation(line: 5995, column: 11, scope: !8525)
!8548 = !DILocation(line: 5997, column: 37, scope: !8546)
!8549 = !DILocation(line: 5997, column: 16, scope: !8543)
!8550 = !DILocation(line: 5999, column: 4, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 5998, column: 2)
!8552 = !DILocation(line: 6000, column: 18, scope: !8551)
!8553 = !DILocation(line: 6001, column: 2, scope: !8551)
!8554 = !DILocation(line: 6003, column: 9, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 6002, column: 16)
!8556 = !DILocation(line: 6004, column: 8, scope: !8555)
!8557 = !DILocation(line: 6003, column: 13, scope: !8555)
!8558 = !DILocation(line: 6002, column: 16, scope: !8546)
!8559 = !DILocation(line: 6006, column: 4, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 6005, column: 2)
!8561 = !DILocation(line: 6007, column: 18, scope: !8560)
!8562 = !DILocation(line: 6008, column: 2, scope: !8560)
!8563 = !DILocation(line: 6009, column: 37, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 6009, column: 16)
!8565 = !DILocation(line: 6009, column: 33, scope: !8564)
!8566 = !DILocation(line: 6010, column: 2, scope: !8564)
!8567 = !DILocation(line: 6018, column: 7, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 6018, column: 7)
!8569 = !DILocation(line: 6018, column: 30, scope: !8568)
!8570 = !DILocation(line: 6018, column: 33, scope: !8568)
!8571 = !DILocation(line: 6018, column: 62, scope: !8568)
!8572 = !DILocation(line: 6018, column: 7, scope: !8192)
!8573 = !DILocation(line: 6020, column: 7, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 6019, column: 5)
!8575 = !DILocation(line: 6021, column: 14, scope: !8574)
!8576 = !DILocation(line: 6021, column: 7, scope: !8574)
!8577 = !DILocation(line: 6024, column: 3, scope: !8192)
!8578 = !DILocation(line: 6025, column: 10, scope: !8192)
!8579 = !DILocation(line: 6025, column: 3, scope: !8192)
!8580 = !DILocation(line: 6026, column: 1, scope: !8192)
!8581 = distinct !DISubprogram(name: "handle_warn_cast_qual", scope: !3, file: !3, line: 4321, type: !8582, scopeLine: 4322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8584)
!8582 = !DISubroutineType(types: !8583)
!8583 = !{null, !460, !460}
!8584 = !{!8585, !8586, !8587, !8588, !8589, !8590, !8591}
!8585 = !DILocalVariable(name: "type", arg: 1, scope: !8581, file: !3, line: 4321, type: !460)
!8586 = !DILocalVariable(name: "otype", arg: 2, scope: !8581, file: !3, line: 4321, type: !460)
!8587 = !DILocalVariable(name: "in_type", scope: !8581, file: !3, line: 4323, type: !460)
!8588 = !DILocalVariable(name: "in_otype", scope: !8581, file: !3, line: 4324, type: !460)
!8589 = !DILocalVariable(name: "added", scope: !8581, file: !3, line: 4325, type: !453)
!8590 = !DILocalVariable(name: "discarded", scope: !8581, file: !3, line: 4326, type: !453)
!8591 = !DILocalVariable(name: "is_const", scope: !8581, file: !3, line: 4327, type: !452)
!8592 = !DILocation(line: 0, scope: !8581)
!8593 = !DILocation(line: 4333, column: 3, scope: !8581)
!8594 = !DILocation(line: 4326, column: 7, scope: !8581)
!8595 = !DILocation(line: 4335, column: 18, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4334, column: 5)
!8597 = !DILocation(line: 4336, column: 17, scope: !8596)
!8598 = !DILocation(line: 4342, column: 11, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 4342, column: 11)
!8600 = !DILocation(line: 4342, column: 32, scope: !8599)
!8601 = !DILocation(line: 4343, column: 4, scope: !8599)
!8602 = !DILocation(line: 0, scope: !8599)
!8603 = !DILocation(line: 4348, column: 12, scope: !8599)
!8604 = !DILocation(line: 4343, column: 7, scope: !8599)
!8605 = !DILocation(line: 4343, column: 27, scope: !8599)
!8606 = !DILocation(line: 4342, column: 11, scope: !8596)
!8607 = !DILocation(line: 4344, column: 12, scope: !8599)
!8608 = !DILocation(line: 4345, column: 8, scope: !8599)
!8609 = !DILocation(line: 4345, column: 7, scope: !8599)
!8610 = !DILocation(line: 4345, column: 5, scope: !8599)
!8611 = !DILocation(line: 4344, column: 8, scope: !8599)
!8612 = !DILocation(line: 4344, column: 2, scope: !8599)
!8613 = !DILocation(line: 4347, column: 16, scope: !8599)
!8614 = !DILocation(line: 4348, column: 11, scope: !8599)
!8615 = !DILocation(line: 4348, column: 9, scope: !8599)
!8616 = !DILocation(line: 4347, column: 12, scope: !8599)
!8617 = !DILocation(line: 4350, column: 10, scope: !8581)
!8618 = !DILocation(line: 4350, column: 30, scope: !8581)
!8619 = !DILocation(line: 4351, column: 27, scope: !8581)
!8620 = !DILocation(line: 4351, column: 3, scope: !8581)
!8621 = distinct !{!8621, !8593, !8622}
!8622 = !DILocation(line: 4351, column: 42, scope: !8581)
!8623 = !DILocation(line: 4353, column: 7, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4353, column: 7)
!8625 = !DILocation(line: 4353, column: 7, scope: !8581)
!8626 = !DILocation(line: 4354, column: 5, scope: !8624)
!8627 = !DILocation(line: 4356, column: 7, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4356, column: 7)
!8629 = !DILocation(line: 4356, column: 7, scope: !8581)
!8630 = !DILocation(line: 4359, column: 5, scope: !8628)
!8631 = !DILocation(line: 4362, column: 13, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4362, column: 7)
!8633 = !DILocation(line: 4378, column: 7, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4378, column: 7)
!8635 = !DILocation(line: 4378, column: 38, scope: !8634)
!8636 = !DILocation(line: 4378, column: 35, scope: !8634)
!8637 = !DILocation(line: 4378, column: 7, scope: !8581)
!8638 = !DILocation(line: 4380, column: 7, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4380, column: 7)
!8640 = !DILocation(line: 4380, column: 36, scope: !8639)
!8641 = !DILocation(line: 4380, column: 7, scope: !8581)
!8642 = !DILocation(line: 4385, column: 14, scope: !8581)
!8643 = !DILocation(line: 4386, column: 3, scope: !8581)
!8644 = !DILocation(line: 4388, column: 17, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4387, column: 5)
!8646 = !DILocation(line: 4389, column: 18, scope: !8645)
!8647 = !DILocation(line: 4390, column: 12, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 4390, column: 11)
!8649 = !DILocation(line: 4390, column: 36, scope: !8648)
!8650 = !DILocation(line: 4390, column: 34, scope: !8648)
!8651 = !DILocation(line: 4390, column: 33, scope: !8648)
!8652 = !DILocation(line: 4390, column: 59, scope: !8648)
!8653 = !DILocation(line: 4391, column: 8, scope: !8648)
!8654 = !DILocation(line: 4391, column: 4, scope: !8648)
!8655 = !DILocation(line: 4393, column: 4, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 4392, column: 2)
!8657 = !DILocation(line: 4396, column: 4, scope: !8656)
!8658 = !DILocation(line: 4398, column: 11, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 4398, column: 11)
!8660 = !DILocation(line: 4398, column: 11, scope: !8645)
!8661 = !DILocation(line: 4399, column: 13, scope: !8659)
!8662 = !DILocation(line: 4399, column: 2, scope: !8659)
!8663 = !DILocation(line: 4401, column: 30, scope: !8581)
!8664 = !DILocation(line: 4400, column: 5, scope: !8645)
!8665 = distinct !{!8665, !8643, !8666}
!8666 = !DILocation(line: 4401, column: 45, scope: !8581)
!8667 = !DILocation(line: 0, scope: !8645)
!8668 = !DILocation(line: 4402, column: 1, scope: !8581)
!8669 = distinct !DISubprogram(name: "c_cast_expr", scope: !3, file: !3, line: 4645, type: !8670, scopeLine: 4646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8672)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{!460, !585, !5730, !460}
!8672 = !{!8673, !8674, !8675, !8676, !8677, !8678, !8679, !8680}
!8673 = !DILocalVariable(name: "loc", arg: 1, scope: !8669, file: !3, line: 4645, type: !585)
!8674 = !DILocalVariable(name: "type_name", arg: 2, scope: !8669, file: !3, line: 4645, type: !5730)
!8675 = !DILocalVariable(name: "expr", arg: 3, scope: !8669, file: !3, line: 4645, type: !460)
!8676 = !DILocalVariable(name: "type", scope: !8669, file: !3, line: 4647, type: !460)
!8677 = !DILocalVariable(name: "type_expr", scope: !8669, file: !3, line: 4648, type: !460)
!8678 = !DILocalVariable(name: "type_expr_const", scope: !8669, file: !3, line: 4649, type: !452)
!8679 = !DILocalVariable(name: "ret", scope: !8669, file: !3, line: 4650, type: !460)
!8680 = !DILocalVariable(name: "saved_wsp", scope: !8669, file: !3, line: 4651, type: !453)
!8681 = !DILocation(line: 0, scope: !8669)
!8682 = !DILocation(line: 4648, column: 3, scope: !8669)
!8683 = !DILocation(line: 4648, column: 8, scope: !8669)
!8684 = !DILocation(line: 4649, column: 3, scope: !8669)
!8685 = !DILocation(line: 4649, column: 8, scope: !8669)
!8686 = !DILocation(line: 4651, column: 19, scope: !8669)
!8687 = !DILocation(line: 4655, column: 7, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4655, column: 7)
!8689 = !DILocation(line: 4655, column: 24, scope: !8688)
!8690 = !DILocation(line: 4655, column: 7, scope: !8669)
!8691 = !DILocation(line: 4656, column: 28, scope: !8688)
!8692 = !DILocation(line: 4656, column: 5, scope: !8688)
!8693 = !DILocation(line: 4657, column: 10, scope: !8669)
!8694 = !DILocation(line: 4658, column: 26, scope: !8669)
!8695 = !DILocation(line: 4660, column: 9, scope: !8669)
!8696 = !DILocation(line: 4661, column: 7, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4661, column: 7)
!8698 = !DILocation(line: 4661, column: 7, scope: !8669)
!8699 = !DILocation(line: 4663, column: 13, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 4662, column: 5)
!8701 = !DILocation(line: 4664, column: 45, scope: !8700)
!8702 = !DILocation(line: 4664, column: 44, scope: !8700)
!8703 = !DILocation(line: 4664, column: 7, scope: !8700)
!8704 = !DILocation(line: 4664, column: 42, scope: !8700)
!8705 = !DILocation(line: 4665, column: 7, scope: !8700)
!8706 = !DILocation(line: 4666, column: 5, scope: !8700)
!8707 = !DILocation(line: 4668, column: 7, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4668, column: 7)
!8709 = !DILocation(line: 4668, column: 33, scope: !8708)
!8710 = !DILocation(line: 4668, column: 37, scope: !8708)
!8711 = !DILocation(line: 4668, column: 7, scope: !8669)
!8712 = !DILocation(line: 4669, column: 5, scope: !8708)
!8713 = !DILocation(line: 4672, column: 7, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4672, column: 7)
!8715 = !DILocation(line: 4672, column: 23, scope: !8714)
!8716 = !DILocation(line: 4672, column: 37, scope: !8714)
!8717 = !DILocation(line: 4672, column: 44, scope: !8714)
!8718 = !DILocation(line: 4672, column: 26, scope: !8714)
!8719 = !DILocation(line: 4672, column: 7, scope: !8669)
!8720 = !DILocation(line: 4673, column: 5, scope: !8714)
!8721 = !DILocation(line: 4677, column: 1, scope: !8669)
!8722 = !DILocation(line: 4676, column: 3, scope: !8669)
!8723 = distinct !DISubprogram(name: "build_modify_expr", scope: !3, file: !3, line: 4692, type: !8724, scopeLine: 4695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8726)
!8724 = !DISubroutineType(types: !8725)
!8725 = !{!460, !585, !460, !460, !134, !585, !460, !460}
!8726 = !{!8727, !8728, !8729, !8730, !8731, !8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740, !8743}
!8727 = !DILocalVariable(name: "location", arg: 1, scope: !8723, file: !3, line: 4692, type: !585)
!8728 = !DILocalVariable(name: "lhs", arg: 2, scope: !8723, file: !3, line: 4692, type: !460)
!8729 = !DILocalVariable(name: "lhs_origtype", arg: 3, scope: !8723, file: !3, line: 4692, type: !460)
!8730 = !DILocalVariable(name: "modifycode", arg: 4, scope: !8723, file: !3, line: 4693, type: !134)
!8731 = !DILocalVariable(name: "rhs_loc", arg: 5, scope: !8723, file: !3, line: 4694, type: !585)
!8732 = !DILocalVariable(name: "rhs", arg: 6, scope: !8723, file: !3, line: 4694, type: !460)
!8733 = !DILocalVariable(name: "rhs_origtype", arg: 7, scope: !8723, file: !3, line: 4694, type: !460)
!8734 = !DILocalVariable(name: "result", scope: !8723, file: !3, line: 4696, type: !460)
!8735 = !DILocalVariable(name: "newrhs", scope: !8723, file: !3, line: 4697, type: !460)
!8736 = !DILocalVariable(name: "rhs_semantic_type", scope: !8723, file: !3, line: 4698, type: !460)
!8737 = !DILocalVariable(name: "lhstype", scope: !8723, file: !3, line: 4699, type: !460)
!8738 = !DILocalVariable(name: "olhstype", scope: !8723, file: !3, line: 4700, type: !460)
!8739 = !DILocalVariable(name: "npc", scope: !8723, file: !3, line: 4701, type: !452)
!8740 = !DILocalVariable(name: "inner", scope: !8741, file: !3, line: 4723, type: !460)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 4722, column: 5)
!8742 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4721, column: 7)
!8743 = !DILocalVariable(name: "checktype", scope: !8744, file: !3, line: 4793, type: !460)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 4792, column: 5)
!8745 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4788, column: 7)
!8746 = !DILocation(line: 0, scope: !8723)
!8747 = !DILocation(line: 4699, column: 18, scope: !8723)
!8748 = !DILocation(line: 4704, column: 9, scope: !8723)
!8749 = !DILocation(line: 4707, column: 7, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4707, column: 7)
!8751 = !DILocation(line: 4707, column: 23, scope: !8750)
!8752 = !DILocation(line: 4707, column: 37, scope: !8750)
!8753 = !DILocation(line: 4707, column: 40, scope: !8750)
!8754 = !DILocation(line: 4707, column: 56, scope: !8750)
!8755 = !DILocation(line: 4707, column: 7, scope: !8723)
!8756 = !DILocation(line: 4708, column: 12, scope: !8750)
!8757 = !DILocation(line: 4708, column: 5, scope: !8750)
!8758 = !DILocation(line: 4710, column: 8, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4710, column: 7)
!8760 = !DILocation(line: 4710, column: 7, scope: !8723)
!8761 = !DILocation(line: 4711, column: 12, scope: !8759)
!8762 = !DILocation(line: 4711, column: 5, scope: !8759)
!8763 = !DILocation(line: 4713, column: 7, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4713, column: 7)
!8765 = !DILocation(line: 4713, column: 23, scope: !8764)
!8766 = !DILocation(line: 4713, column: 7, scope: !8723)
!8767 = !DILocation(line: 4715, column: 27, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 4714, column: 5)
!8769 = !DILocation(line: 4716, column: 13, scope: !8768)
!8770 = !DILocation(line: 4717, column: 5, scope: !8768)
!8771 = !DILocation(line: 4721, column: 7, scope: !8742)
!8772 = !DILocation(line: 4721, column: 23, scope: !8742)
!8773 = !DILocation(line: 4721, column: 7, scope: !8723)
!8774 = !DILocation(line: 4723, column: 49, scope: !8741)
!8775 = !DILocation(line: 4723, column: 20, scope: !8741)
!8776 = !DILocation(line: 0, scope: !8741)
!8777 = !DILocation(line: 4726, column: 20, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 4726, column: 11)
!8779 = !DILocation(line: 4726, column: 17, scope: !8778)
!8780 = !DILocation(line: 4726, column: 11, scope: !8741)
!8781 = !DILocation(line: 4727, column: 2, scope: !8778)
!8782 = !DILocation(line: 4728, column: 16, scope: !8741)
!8783 = !DILocation(line: 4730, column: 7, scope: !8741)
!8784 = !DILocation(line: 4731, column: 7, scope: !8741)
!8785 = !DILocation(line: 4731, column: 45, scope: !8741)
!8786 = !DILocation(line: 4732, column: 7, scope: !8741)
!8787 = !DILocation(line: 4733, column: 7, scope: !8741)
!8788 = !DILocation(line: 4739, column: 18, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4739, column: 7)
!8790 = !DILocation(line: 4739, column: 7, scope: !8723)
!8791 = !DILocation(line: 4741, column: 13, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 4740, column: 5)
!8793 = !DILocation(line: 4742, column: 13, scope: !8792)
!8794 = !DILocation(line: 4743, column: 16, scope: !8792)
!8795 = !DILocation(line: 4749, column: 5, scope: !8792)
!8796 = !DILocation(line: 4753, column: 7, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4753, column: 7)
!8798 = !DILocation(line: 4754, column: 7, scope: !8797)
!8799 = !DILocation(line: 4754, column: 32, scope: !8797)
!8800 = !DILocation(line: 4755, column: 5, scope: !8797)
!8801 = !DILocation(line: 4755, column: 28, scope: !8797)
!8802 = !DILocation(line: 4756, column: 4, scope: !8797)
!8803 = !DILocation(line: 4756, column: 7, scope: !8797)
!8804 = !DILocation(line: 4753, column: 7, scope: !8723)
!8805 = !DILocation(line: 4758, column: 7, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 4757, column: 5)
!8807 = !DILocation(line: 4759, column: 14, scope: !8806)
!8808 = !DILocation(line: 4759, column: 7, scope: !8806)
!8809 = !DILocation(line: 4761, column: 12, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 4761, column: 12)
!8811 = !DILocation(line: 4761, column: 12, scope: !8797)
!8812 = !DILocation(line: 4762, column: 5, scope: !8810)
!8813 = !DILocation(line: 4769, column: 7, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4769, column: 7)
!8815 = !DILocation(line: 4769, column: 23, scope: !8814)
!8816 = !DILocation(line: 4770, column: 7, scope: !8814)
!8817 = !DILocation(line: 4770, column: 11, scope: !8814)
!8818 = !DILocation(line: 4770, column: 31, scope: !8814)
!8819 = !DILocation(line: 4771, column: 4, scope: !8814)
!8820 = !DILocation(line: 4771, column: 27, scope: !8814)
!8821 = !DILocation(line: 4772, column: 4, scope: !8814)
!8822 = !DILocation(line: 4772, column: 27, scope: !8814)
!8823 = !DILocation(line: 4773, column: 4, scope: !8814)
!8824 = !DILocation(line: 4773, column: 27, scope: !8814)
!8825 = !DILocation(line: 4769, column: 7, scope: !8723)
!8826 = !DILocation(line: 4774, column: 15, scope: !8814)
!8827 = !DILocation(line: 4774, column: 5, scope: !8814)
!8828 = !DILocation(line: 4779, column: 18, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4779, column: 7)
!8830 = !DILocation(line: 4779, column: 15, scope: !8829)
!8831 = !DILocation(line: 4779, column: 7, scope: !8723)
!8832 = !DILocation(line: 4781, column: 13, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 4780, column: 5)
!8834 = !DILocation(line: 4782, column: 7, scope: !8833)
!8835 = !DILocation(line: 4782, column: 23, scope: !8833)
!8836 = !DILocation(line: 4783, column: 5, scope: !8833)
!8837 = !DILocation(line: 4788, column: 7, scope: !8745)
!8838 = !DILocation(line: 4789, column: 23, scope: !8745)
!8839 = !DILocation(line: 4789, column: 7, scope: !8745)
!8840 = !DILocation(line: 4790, column: 23, scope: !8745)
!8841 = !DILocation(line: 4791, column: 10, scope: !8745)
!8842 = !DILocation(line: 4791, column: 35, scope: !8745)
!8843 = !DILocation(line: 4788, column: 7, scope: !8723)
!8844 = !DILocation(line: 4793, column: 38, scope: !8744)
!8845 = !DILocation(line: 4793, column: 25, scope: !8744)
!8846 = !DILocation(line: 4795, column: 6, scope: !8744)
!8847 = !DILocation(line: 0, scope: !8744)
!8848 = !DILocation(line: 4796, column: 24, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 4796, column: 11)
!8850 = !DILocation(line: 4796, column: 21, scope: !8849)
!8851 = !DILocation(line: 4797, column: 4, scope: !8849)
!8852 = !DILocation(line: 4797, column: 7, scope: !8849)
!8853 = !DILocation(line: 4797, column: 40, scope: !8849)
!8854 = !DILocation(line: 4797, column: 37, scope: !8849)
!8855 = !DILocation(line: 4796, column: 11, scope: !8744)
!8856 = !DILocation(line: 4798, column: 2, scope: !8849)
!8857 = !DILocation(line: 4806, column: 9, scope: !8723)
!8858 = !DILocation(line: 4807, column: 12, scope: !8723)
!8859 = !DILocation(line: 4808, column: 7, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4808, column: 7)
!8861 = !DILocation(line: 4808, column: 7, scope: !8723)
!8862 = !DILocation(line: 4809, column: 14, scope: !8860)
!8863 = !DILocation(line: 4809, column: 5, scope: !8860)
!8864 = !DILocation(line: 4810, column: 12, scope: !8723)
!8865 = !DILocation(line: 4812, column: 7, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4812, column: 7)
!8867 = !DILocation(line: 4812, column: 26, scope: !8866)
!8868 = !DILocation(line: 4812, column: 7, scope: !8723)
!8869 = !DILocation(line: 4813, column: 12, scope: !8866)
!8870 = !DILocation(line: 4813, column: 5, scope: !8866)
!8871 = !DILocation(line: 4816, column: 7, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4816, column: 7)
!8873 = !DILocation(line: 4816, column: 28, scope: !8872)
!8874 = !DILocation(line: 4816, column: 25, scope: !8872)
!8875 = !DILocation(line: 4818, column: 16, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 4817, column: 5)
!8877 = !DILocation(line: 4819, column: 11, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 4819, column: 11)
!8879 = !DILocation(line: 4819, column: 11, scope: !8876)
!8880 = !DILocation(line: 4821, column: 4, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 4820, column: 2)
!8882 = !DILocation(line: 4822, column: 4, scope: !8881)
!8883 = !DILocation(line: 4828, column: 12, scope: !8723)
!8884 = !DILocation(line: 4829, column: 3, scope: !8723)
!8885 = !DILocation(line: 4829, column: 30, scope: !8723)
!8886 = !DILocation(line: 4830, column: 3, scope: !8723)
!8887 = !DILocation(line: 4837, column: 19, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 4837, column: 7)
!8889 = !DILocation(line: 4837, column: 16, scope: !8888)
!8890 = !DILocation(line: 4837, column: 7, scope: !8723)
!8891 = !DILocation(line: 4840, column: 12, scope: !8723)
!8892 = !DILocation(line: 4842, column: 3, scope: !8723)
!8893 = !DILocation(line: 4843, column: 3, scope: !8723)
!8894 = !DILocation(line: 4844, column: 1, scope: !8723)
!8895 = distinct !DISubprogram(name: "convert_for_assignment", scope: !3, file: !3, line: 4862, type: !8896, scopeLine: 4866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8898)
!8896 = !DISubroutineType(types: !8897)
!8897 = !{!460, !585, !460, !460, !460, !444, !452, !460, !460, !453}
!8898 = !{!8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908, !8909, !8910, !8911, !8912, !8913, !8914, !8917, !8920, !8923, !8928, !8929, !8932, !8933, !8937, !8940, !8941, !8946, !8947, !8950, !8951, !8952, !8953, !8954, !8955, !8956, !8957, !8963}
!8899 = !DILocalVariable(name: "location", arg: 1, scope: !8895, file: !3, line: 4862, type: !585)
!8900 = !DILocalVariable(name: "type", arg: 2, scope: !8895, file: !3, line: 4862, type: !460)
!8901 = !DILocalVariable(name: "rhs", arg: 3, scope: !8895, file: !3, line: 4862, type: !460)
!8902 = !DILocalVariable(name: "origtype", arg: 4, scope: !8895, file: !3, line: 4863, type: !460)
!8903 = !DILocalVariable(name: "errtype", arg: 5, scope: !8895, file: !3, line: 4863, type: !444)
!8904 = !DILocalVariable(name: "null_pointer_constant", arg: 6, scope: !8895, file: !3, line: 4864, type: !452)
!8905 = !DILocalVariable(name: "fundecl", arg: 7, scope: !8895, file: !3, line: 4864, type: !460)
!8906 = !DILocalVariable(name: "function", arg: 8, scope: !8895, file: !3, line: 4865, type: !460)
!8907 = !DILocalVariable(name: "parmnum", arg: 9, scope: !8895, file: !3, line: 4865, type: !453)
!8908 = !DILocalVariable(name: "codel", scope: !8895, file: !3, line: 4867, type: !134)
!8909 = !DILocalVariable(name: "orig_rhs", scope: !8895, file: !3, line: 4868, type: !460)
!8910 = !DILocalVariable(name: "rhstype", scope: !8895, file: !3, line: 4869, type: !460)
!8911 = !DILocalVariable(name: "coder", scope: !8895, file: !3, line: 4870, type: !134)
!8912 = !DILocalVariable(name: "rname", scope: !8895, file: !3, line: 4871, type: !460)
!8913 = !DILocalVariable(name: "objc_ok", scope: !8895, file: !3, line: 4872, type: !452)
!8914 = !DILocalVariable(name: "selector", scope: !8915, file: !3, line: 4876, type: !460)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 4875, column: 5)
!8916 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4874, column: 7)
!8917 = !DILocalVariable(name: "parmno", scope: !8918, file: !3, line: 4932, type: !453)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 4931, column: 5)
!8919 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4930, column: 7)
!8920 = !DILocalVariable(name: "checktype", scope: !8921, file: !3, line: 4958, type: !460)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 4957, column: 5)
!8922 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4956, column: 7)
!8923 = !DILocalVariable(name: "ret", scope: !8924, file: !3, line: 5036, type: !460)
!8924 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 5035, column: 5)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 5027, column: 12)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 5023, column: 12)
!8927 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4994, column: 7)
!8928 = !DILocalVariable(name: "save", scope: !8924, file: !3, line: 5037, type: !452)
!8929 = !DILocalVariable(name: "memb", scope: !8930, file: !3, line: 5058, type: !460)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 5057, column: 5)
!8931 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 5054, column: 7)
!8932 = !DILocalVariable(name: "marginal_memb", scope: !8930, file: !3, line: 5058, type: !460)
!8933 = !DILocalVariable(name: "memb_type", scope: !8934, file: !3, line: 5062, type: !460)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 5061, column: 2)
!8935 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 5060, column: 7)
!8936 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 5060, column: 7)
!8937 = !DILocalVariable(name: "ttl", scope: !8938, file: !3, line: 5073, type: !460)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 5072, column: 6)
!8939 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 5071, column: 8)
!8940 = !DILocalVariable(name: "ttr", scope: !8938, file: !3, line: 5074, type: !460)
!8941 = !DILocalVariable(name: "ttl", scope: !8942, file: !3, line: 5113, type: !460)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 5110, column: 6)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 5109, column: 8)
!8944 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 5108, column: 2)
!8945 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 5107, column: 11)
!8946 = !DILocalVariable(name: "ttr", scope: !8942, file: !3, line: 5114, type: !460)
!8947 = !DILocalVariable(name: "ttl", scope: !8948, file: !3, line: 5169, type: !460)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 5168, column: 5)
!8949 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 5166, column: 12)
!8950 = !DILocalVariable(name: "ttr", scope: !8948, file: !3, line: 5170, type: !460)
!8951 = !DILocalVariable(name: "mvl", scope: !8948, file: !3, line: 5171, type: !460)
!8952 = !DILocalVariable(name: "mvr", scope: !8948, file: !3, line: 5172, type: !460)
!8953 = !DILocalVariable(name: "is_opaque_pointer", scope: !8948, file: !3, line: 5173, type: !452)
!8954 = !DILocalVariable(name: "target_cmp", scope: !8948, file: !3, line: 5174, type: !453)
!8955 = !DILocalVariable(name: "asl", scope: !8948, file: !3, line: 5175, type: !2994)
!8956 = !DILocalVariable(name: "asr", scope: !8948, file: !3, line: 5176, type: !2994)
!8957 = !DILocalVariable(name: "ret", scope: !8958, file: !3, line: 5398, type: !460)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 5397, column: 5)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 5396, column: 12)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 5383, column: 12)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 5365, column: 12)
!8962 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 5358, column: 12)
!8963 = !DILocalVariable(name: "save", scope: !8958, file: !3, line: 5399, type: !452)
!8964 = !DILocation(line: 0, scope: !8895)
!8965 = !DILocation(line: 4867, column: 26, scope: !8895)
!8966 = !DILocation(line: 4874, column: 15, scope: !8916)
!8967 = !DILocation(line: 4874, column: 7, scope: !8895)
!8968 = !DILocation(line: 4879, column: 11, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 4879, column: 11)
!8970 = !DILocation(line: 4879, column: 32, scope: !8969)
!8971 = !DILocation(line: 4880, column: 4, scope: !8969)
!8972 = !DILocation(line: 4880, column: 7, scope: !8969)
!8973 = !DILocation(line: 4880, column: 46, scope: !8969)
!8974 = !DILocation(line: 4879, column: 11, scope: !8915)
!8975 = !DILocation(line: 4881, column: 2, scope: !8969)
!8976 = !DILocation(line: 4884, column: 18, scope: !8915)
!8977 = !DILocation(line: 0, scope: !8915)
!8978 = !DILocation(line: 4886, column: 11, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 4886, column: 11)
!8980 = !DILocation(line: 4886, column: 31, scope: !8979)
!8981 = !DILocation(line: 4886, column: 20, scope: !8979)
!8982 = !DILocation(line: 4921, column: 7, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4921, column: 7)
!8984 = !DILocation(line: 4921, column: 23, scope: !8983)
!8985 = !DILocation(line: 4921, column: 7, scope: !8895)
!8986 = !DILocation(line: 4922, column: 11, scope: !8983)
!8987 = !DILocation(line: 4922, column: 5, scope: !8983)
!8988 = !DILocation(line: 4924, column: 13, scope: !8895)
!8989 = !DILocation(line: 4925, column: 11, scope: !8895)
!8990 = !DILocation(line: 4927, column: 13, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4927, column: 7)
!8992 = !DILocation(line: 4927, column: 7, scope: !8895)
!8993 = !DILocation(line: 4928, column: 12, scope: !8991)
!8994 = !DILocation(line: 4928, column: 5, scope: !8991)
!8995 = !DILocation(line: 4930, column: 7, scope: !8919)
!8996 = !DILocation(line: 4930, column: 7, scope: !8895)
!8997 = !DILocation(line: 4934, column: 7, scope: !8918)
!8998 = !DILocation(line: 0, scope: !8918)
!8999 = !DILocation(line: 4942, column: 4, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 4935, column: 2)
!9001 = !DILocation(line: 4946, column: 4, scope: !9000)
!9002 = !DILocation(line: 4950, column: 4, scope: !9000)
!9003 = !DILocation(line: 0, scope: !9000)
!9004 = !DILocation(line: 4953, column: 17, scope: !8918)
!9005 = !DILocation(line: 4954, column: 5, scope: !8918)
!9006 = !DILocation(line: 4956, column: 7, scope: !8922)
!9007 = !DILocation(line: 4956, column: 7, scope: !8895)
!9008 = !DILocation(line: 4958, column: 33, scope: !8921)
!9009 = !DILocation(line: 4958, column: 24, scope: !8921)
!9010 = !DILocation(line: 0, scope: !8921)
!9011 = !DILocation(line: 4959, column: 24, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 4959, column: 11)
!9013 = !DILocation(line: 4959, column: 21, scope: !9012)
!9014 = !DILocation(line: 4960, column: 4, scope: !9012)
!9015 = !DILocation(line: 4960, column: 7, scope: !9012)
!9016 = !DILocation(line: 4960, column: 24, scope: !9012)
!9017 = !DILocation(line: 4961, column: 4, scope: !9012)
!9018 = !DILocation(line: 4961, column: 7, scope: !9012)
!9019 = !DILocation(line: 4961, column: 40, scope: !9012)
!9020 = !DILocation(line: 4961, column: 37, scope: !9012)
!9021 = !DILocation(line: 4959, column: 11, scope: !8921)
!9022 = !DILocation(line: 4963, column: 4, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 4963, column: 4)
!9024 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 4962, column: 2)
!9025 = !DILocation(line: 4963, column: 4, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 4963, column: 4)
!9027 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 4963, column: 4)
!9028 = !DILocation(line: 4963, column: 4, scope: !9027)
!9029 = !DILocation(line: 4975, column: 7, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4975, column: 7)
!9031 = !DILocation(line: 4975, column: 35, scope: !9030)
!9032 = !DILocation(line: 4975, column: 32, scope: !9030)
!9033 = !DILocation(line: 4975, column: 7, scope: !8895)
!9034 = !DILocation(line: 4978, column: 13, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4978, column: 7)
!9036 = !DILocation(line: 4978, column: 7, scope: !8895)
!9037 = !DILocation(line: 4985, column: 7, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9035, file: !3, line: 4979, column: 5)
!9039 = !DILocation(line: 4986, column: 14, scope: !9038)
!9040 = !DILocation(line: 4986, column: 7, scope: !9038)
!9041 = !DILocation(line: 4988, column: 9, scope: !8895)
!9042 = !DILocation(line: 4989, column: 14, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 4989, column: 7)
!9044 = !DILocation(line: 4989, column: 11, scope: !9043)
!9045 = !DILocation(line: 4989, column: 7, scope: !8895)
!9046 = !DILocation(line: 4990, column: 5, scope: !9043)
!9047 = !DILocation(line: 4995, column: 7, scope: !8927)
!9048 = !DILocation(line: 4995, column: 21, scope: !8927)
!9049 = !DILocation(line: 4995, column: 39, scope: !8927)
!9050 = !DILocation(line: 4995, column: 10, scope: !8927)
!9051 = !DILocation(line: 4995, column: 56, scope: !8927)
!9052 = !DILocation(line: 4994, column: 7, scope: !8895)
!9053 = !DILocation(line: 4997, column: 12, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 4997, column: 11)
!9055 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 4996, column: 5)
!9056 = !DILocation(line: 4997, column: 11, scope: !9055)
!9057 = !DILocation(line: 4999, column: 4, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 4998, column: 2)
!9059 = !DILocation(line: 5000, column: 11, scope: !9058)
!9060 = !DILocation(line: 5000, column: 4, scope: !9058)
!9061 = !DILocation(line: 5002, column: 12, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 5002, column: 11)
!9063 = !DILocation(line: 5002, column: 11, scope: !9055)
!9064 = !DILocation(line: 5003, column: 9, scope: !9062)
!9065 = !DILocation(line: 5003, column: 2, scope: !9062)
!9066 = !DILocation(line: 5004, column: 13, scope: !9055)
!9067 = !DILocation(line: 5005, column: 7, scope: !9055)
!9068 = !DILocation(line: 5012, column: 11, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 5012, column: 11)
!9070 = !DILocation(line: 5012, column: 42, scope: !9069)
!9071 = !DILocation(line: 5012, column: 39, scope: !9069)
!9072 = !DILocation(line: 5012, column: 11, scope: !9055)
!9073 = !DILocation(line: 5014, column: 10, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 5013, column: 2)
!9075 = !DILocation(line: 5015, column: 4, scope: !9074)
!9076 = !DILocation(line: 5016, column: 2, scope: !9074)
!9077 = !DILocation(line: 0, scope: !9055)
!9078 = !DILocation(line: 5018, column: 13, scope: !9055)
!9079 = !DILocation(line: 5019, column: 7, scope: !9055)
!9080 = !DILocation(line: 5020, column: 7, scope: !9055)
!9081 = !DILocation(line: 5023, column: 18, scope: !8926)
!9082 = !DILocation(line: 5023, column: 42, scope: !8926)
!9083 = !DILocation(line: 5023, column: 33, scope: !8926)
!9084 = !DILocation(line: 5024, column: 5, scope: !8926)
!9085 = !DILocation(line: 5024, column: 42, scope: !8926)
!9086 = !DILocation(line: 5024, column: 8, scope: !8926)
!9087 = !DILocation(line: 5023, column: 12, scope: !8927)
!9088 = !DILocation(line: 5025, column: 12, scope: !8926)
!9089 = !DILocation(line: 5025, column: 5, scope: !8926)
!9090 = !DILocation(line: 5027, column: 35, scope: !8925)
!9091 = !DILocation(line: 5031, column: 31, scope: !8925)
!9092 = !DILocation(line: 5037, column: 19, scope: !8924)
!9093 = !DILocation(line: 0, scope: !8924)
!9094 = !DILocation(line: 5038, column: 17, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 5038, column: 11)
!9096 = !DILocation(line: 5038, column: 11, scope: !8924)
!9097 = !DILocation(line: 5039, column: 20, scope: !9095)
!9098 = !DILocation(line: 5039, column: 2, scope: !9095)
!9099 = !DILocation(line: 5040, column: 13, scope: !8924)
!9100 = !DILocation(line: 5041, column: 11, scope: !8924)
!9101 = !DILocation(line: 5042, column: 20, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 5041, column: 11)
!9103 = !DILocation(line: 5042, column: 2, scope: !9102)
!9104 = !DILocation(line: 5047, column: 29, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 5047, column: 7)
!9106 = !DILocation(line: 5048, column: 16, scope: !9105)
!9107 = !DILocation(line: 5049, column: 7, scope: !9105)
!9108 = !DILocation(line: 5049, column: 10, scope: !9105)
!9109 = !DILocation(line: 5047, column: 7, scope: !8895)
!9110 = !DILocation(line: 5050, column: 12, scope: !9105)
!9111 = !DILocation(line: 5050, column: 5, scope: !9105)
!9112 = !DILocation(line: 5054, column: 29, scope: !8931)
!9113 = !DILocation(line: 5055, column: 10, scope: !8931)
!9114 = !DILocation(line: 5056, column: 7, scope: !8931)
!9115 = !DILocation(line: 0, scope: !8930)
!9116 = !DILocation(line: 5060, column: 19, scope: !8936)
!9117 = !DILocation(line: 0, scope: !8939)
!9118 = !DILocation(line: 0, scope: !8938)
!9119 = !DILocation(line: 0, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 5100, column: 8)
!9121 = !DILocation(line: 0, scope: !8934)
!9122 = !DILocation(line: 5060, column: 12, scope: !8936)
!9123 = !DILocation(line: 5058, column: 18, scope: !8930)
!9124 = !DILocation(line: 4988, column: 7, scope: !8895)
!9125 = !DILocation(line: 0, scope: !8936)
!9126 = !DILocation(line: 5060, column: 7, scope: !8936)
!9127 = !DILocation(line: 5062, column: 21, scope: !8934)
!9128 = !DILocation(line: 5064, column: 19, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 5064, column: 8)
!9130 = !DILocation(line: 5065, column: 5, scope: !9129)
!9131 = !DILocation(line: 5064, column: 8, scope: !9129)
!9132 = !DILocation(line: 5064, column: 8, scope: !8934)
!9133 = !DILocation(line: 5068, column: 8, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 5068, column: 8)
!9135 = !DILocation(line: 5068, column: 30, scope: !9134)
!9136 = !DILocation(line: 5068, column: 8, scope: !8934)
!9137 = !DILocation(line: 5071, column: 8, scope: !8934)
!9138 = !DILocation(line: 5073, column: 19, scope: !8938)
!9139 = !DILocation(line: 5074, column: 19, scope: !8938)
!9140 = !DILocation(line: 5080, column: 12, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 5080, column: 12)
!9142 = !DILocation(line: 5080, column: 30, scope: !9141)
!9143 = !DILocation(line: 5080, column: 33, scope: !9141)
!9144 = !DILocation(line: 5081, column: 5, scope: !9141)
!9145 = !DILocation(line: 5081, column: 8, scope: !9141)
!9146 = !DILocation(line: 5080, column: 12, scope: !8938)
!9147 = !DILocation(line: 5084, column: 9, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 5084, column: 9)
!9149 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 5082, column: 3)
!9150 = !DILocation(line: 5084, column: 29, scope: !9148)
!9151 = !DILocation(line: 5084, column: 26, scope: !9148)
!9152 = !DILocation(line: 5085, column: 9, scope: !9148)
!9153 = !DILocation(line: 5085, column: 30, scope: !9148)
!9154 = !DILocation(line: 5086, column: 7, scope: !9148)
!9155 = !DILocation(line: 5086, column: 26, scope: !9148)
!9156 = !DILocation(line: 5084, column: 9, scope: !9149)
!9157 = !DILocation(line: 5087, column: 27, scope: !9148)
!9158 = !DILocation(line: 5088, column: 9, scope: !9148)
!9159 = !DILocation(line: 5085, column: 13, scope: !9148)
!9160 = !DILocation(line: 5089, column: 27, scope: !9148)
!9161 = !DILocation(line: 5090, column: 9, scope: !9148)
!9162 = !DILocation(line: 5094, column: 10, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 5094, column: 9)
!9164 = !DILocation(line: 5094, column: 9, scope: !9149)
!9165 = !DILocation(line: 5096, column: 3, scope: !9149)
!9166 = !DILocation(line: 5102, column: 14, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 5101, column: 6)
!9168 = !DILocation(line: 5100, column: 8, scope: !8934)
!9169 = !DILocation(line: 5060, column: 53, scope: !8935)
!9170 = !DILocation(line: 5060, column: 7, scope: !8935)
!9171 = distinct !{!9171, !9126, !9172}
!9172 = !DILocation(line: 5105, column: 2, scope: !8936)
!9173 = !DILocation(line: 5107, column: 11, scope: !8945)
!9174 = !DILocation(line: 5107, column: 19, scope: !8945)
!9175 = !DILocation(line: 5107, column: 16, scope: !8945)
!9176 = !DILocation(line: 5109, column: 8, scope: !8944)
!9177 = !DILocation(line: 5113, column: 19, scope: !8942)
!9178 = !DILocation(line: 0, scope: !8942)
!9179 = !DILocation(line: 5114, column: 19, scope: !8942)
!9180 = !DILocation(line: 5118, column: 12, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 5118, column: 12)
!9182 = !DILocation(line: 5118, column: 28, scope: !9181)
!9183 = !DILocation(line: 5119, column: 5, scope: !9181)
!9184 = !DILocation(line: 0, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 5141, column: 17)
!9186 = !DILocation(line: 5142, column: 13, scope: !9185)
!9187 = !DILocation(line: 5119, column: 8, scope: !9181)
!9188 = !DILocation(line: 5119, column: 24, scope: !9181)
!9189 = !DILocation(line: 5118, column: 12, scope: !8942)
!9190 = !DILocation(line: 5126, column: 9, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 5126, column: 9)
!9192 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 5120, column: 3)
!9193 = !DILocation(line: 5127, column: 12, scope: !9191)
!9194 = !DILocation(line: 5127, column: 11, scope: !9191)
!9195 = !DILocation(line: 5127, column: 9, scope: !9191)
!9196 = !DILocation(line: 5126, column: 9, scope: !9192)
!9197 = !DILocation(line: 5128, column: 7, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 5128, column: 7)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 5128, column: 7)
!9200 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 5128, column: 7)
!9201 = !DILocation(line: 5128, column: 7, scope: !9199)
!9202 = !DILocation(line: 5141, column: 17, scope: !9185)
!9203 = !DILocation(line: 5142, column: 12, scope: !9185)
!9204 = !DILocation(line: 5142, column: 10, scope: !9185)
!9205 = !DILocation(line: 5141, column: 17, scope: !9181)
!9206 = !DILocation(line: 5143, column: 3, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 5143, column: 3)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 5143, column: 3)
!9209 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 5143, column: 3)
!9210 = !DILocation(line: 5143, column: 3, scope: !9208)
!9211 = !DILocation(line: 5156, column: 9, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 5156, column: 8)
!9213 = !DILocation(line: 5156, column: 17, scope: !9212)
!9214 = !DILocation(line: 5156, column: 21, scope: !9212)
!9215 = !DILocation(line: 5156, column: 8, scope: !8944)
!9216 = !DILocation(line: 5157, column: 6, scope: !9212)
!9217 = !DILocation(line: 5160, column: 38, scope: !8944)
!9218 = !DILocation(line: 5160, column: 10, scope: !8944)
!9219 = !DILocation(line: 5161, column: 11, scope: !8944)
!9220 = !DILocation(line: 5161, column: 4, scope: !8944)
!9221 = !DILocation(line: 5166, column: 35, scope: !8949)
!9222 = !DILocation(line: 5167, column: 15, scope: !8949)
!9223 = !DILocation(line: 5166, column: 12, scope: !8931)
!9224 = !DILocation(line: 5169, column: 18, scope: !8948)
!9225 = !DILocation(line: 0, scope: !8948)
!9226 = !DILocation(line: 5170, column: 18, scope: !8948)
!9227 = !DILocation(line: 5178, column: 11, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 5178, column: 11)
!9229 = !DILocation(line: 5178, column: 27, scope: !9228)
!9230 = !DILocation(line: 5178, column: 11, scope: !8948)
!9231 = !DILocation(line: 5179, column: 8, scope: !9228)
!9232 = !DILocation(line: 5179, column: 2, scope: !9228)
!9233 = !DILocation(line: 5180, column: 11, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 5180, column: 11)
!9235 = !DILocation(line: 5180, column: 27, scope: !9234)
!9236 = !DILocation(line: 5180, column: 11, scope: !8948)
!9237 = !DILocation(line: 5181, column: 8, scope: !9234)
!9238 = !DILocation(line: 5181, column: 2, scope: !9234)
!9239 = !DILocation(line: 5183, column: 27, scope: !8948)
!9240 = !DILocation(line: 5192, column: 11, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 5192, column: 11)
!9242 = !DILocation(line: 5192, column: 39, scope: !9241)
!9243 = !DILocation(line: 5192, column: 36, scope: !9241)
!9244 = !DILocation(line: 5192, column: 29, scope: !9241)
!9245 = !DILocation(line: 5192, column: 61, scope: !9241)
!9246 = !DILocation(line: 5192, column: 11, scope: !8948)
!9247 = !DILocation(line: 5193, column: 2, scope: !9241)
!9248 = !DILocation(line: 5199, column: 13, scope: !8948)
!9249 = !DILocation(line: 5198, column: 13, scope: !8948)
!9250 = !DILocation(line: 5200, column: 12, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 5200, column: 11)
!9252 = !DILocation(line: 5201, column: 4, scope: !9251)
!9253 = !DILocation(line: 5201, column: 7, scope: !9251)
!9254 = !DILocation(line: 5201, column: 14, scope: !9251)
!9255 = !DILocation(line: 5201, column: 11, scope: !9251)
!9256 = !DILocation(line: 5201, column: 18, scope: !9251)
!9257 = !DILocation(line: 5201, column: 41, scope: !9251)
!9258 = !DILocation(line: 5201, column: 22, scope: !9251)
!9259 = !DILocation(line: 5200, column: 11, scope: !8948)
!9260 = !DILocation(line: 5203, column: 4, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 5202, column: 2)
!9262 = !DILocation(line: 5206, column: 8, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 5204, column: 6)
!9264 = !DILocation(line: 5208, column: 8, scope: !9263)
!9265 = !DILocation(line: 5210, column: 8, scope: !9263)
!9266 = !DILocation(line: 5212, column: 8, scope: !9263)
!9267 = !DILocation(line: 5214, column: 8, scope: !9263)
!9268 = !DILocation(line: 5216, column: 8, scope: !9263)
!9269 = !DILocation(line: 5218, column: 8, scope: !9263)
!9270 = !DILocation(line: 5220, column: 8, scope: !9263)
!9271 = !DILocation(line: 5222, column: 8, scope: !9263)
!9272 = !DILocation(line: 5223, column: 6, scope: !9263)
!9273 = !DILocation(line: 5224, column: 11, scope: !9261)
!9274 = !DILocation(line: 5224, column: 4, scope: !9261)
!9275 = !DILocation(line: 5229, column: 11, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 5229, column: 11)
!9277 = !DILocation(line: 5230, column: 4, scope: !9276)
!9278 = !DILocation(line: 5230, column: 7, scope: !9276)
!9279 = !DILocation(line: 5229, column: 11, scope: !8948)
!9280 = !DILocation(line: 5232, column: 4, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 5231, column: 2)
!9282 = !DILocation(line: 5235, column: 6, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 5233, column: 4)
!9284 = !DILocation(line: 5239, column: 6, scope: !9283)
!9285 = !DILocation(line: 5241, column: 6, scope: !9283)
!9286 = !DILocation(line: 5244, column: 6, scope: !9283)
!9287 = !DILocation(line: 5246, column: 6, scope: !9283)
!9288 = !DILocation(line: 5249, column: 6, scope: !9283)
!9289 = !DILocation(line: 5251, column: 6, scope: !9283)
!9290 = !DILocation(line: 5254, column: 6, scope: !9283)
!9291 = !DILocation(line: 5256, column: 6, scope: !9283)
!9292 = !DILocation(line: 5257, column: 4, scope: !9283)
!9293 = !DILocation(line: 5263, column: 11, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 5263, column: 11)
!9295 = !DILocation(line: 5263, column: 29, scope: !9294)
!9296 = !DILocation(line: 5263, column: 32, scope: !9294)
!9297 = !DILocation(line: 5264, column: 4, scope: !9294)
!9298 = !DILocation(line: 5264, column: 21, scope: !9294)
!9299 = !DILocation(line: 5264, column: 19, scope: !9294)
!9300 = !DILocation(line: 5265, column: 7, scope: !9294)
!9301 = !DILocation(line: 5265, column: 4, scope: !9294)
!9302 = !DILocation(line: 5266, column: 8, scope: !9294)
!9303 = !DILocation(line: 5267, column: 11, scope: !9294)
!9304 = !DILocation(line: 5267, column: 8, scope: !9294)
!9305 = !DILocation(line: 5263, column: 11, scope: !8948)
!9306 = !DILocation(line: 5269, column: 8, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 5269, column: 8)
!9308 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 5268, column: 2)
!9309 = !DILocation(line: 5270, column: 8, scope: !9307)
!9310 = !DILocation(line: 5287, column: 13, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 5287, column: 13)
!9312 = !DILocation(line: 5270, column: 13, scope: !9307)
!9313 = !DILocation(line: 5270, column: 31, scope: !9307)
!9314 = !DILocation(line: 5272, column: 6, scope: !9307)
!9315 = !DILocation(line: 5270, column: 34, scope: !9307)
!9316 = !DILocation(line: 5270, column: 50, scope: !9307)
!9317 = !DILocation(line: 5271, column: 5, scope: !9307)
!9318 = !DILocation(line: 5273, column: 10, scope: !9307)
!9319 = !DILocation(line: 5273, column: 6, scope: !9307)
!9320 = !DILocation(line: 5274, column: 25, scope: !9307)
!9321 = !DILocation(line: 5269, column: 8, scope: !9308)
!9322 = !DILocation(line: 5275, column: 6, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 5275, column: 6)
!9324 = !DILocation(line: 5275, column: 6, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 5275, column: 6)
!9326 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 5275, column: 6)
!9327 = !DILocation(line: 5275, column: 6, scope: !9326)
!9328 = !DILocation(line: 5287, column: 29, scope: !9311)
!9329 = !DILocation(line: 5288, column: 6, scope: !9311)
!9330 = !DILocation(line: 5324, column: 13, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 5324, column: 13)
!9332 = !DILocation(line: 5288, column: 9, scope: !9311)
!9333 = !DILocation(line: 5288, column: 25, scope: !9311)
!9334 = !DILocation(line: 5287, column: 13, scope: !9307)
!9335 = !DILocation(line: 5290, column: 12, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 5290, column: 12)
!9337 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 5289, column: 6)
!9338 = !DILocation(line: 5291, column: 8, scope: !9336)
!9339 = !DILocation(line: 5291, column: 7, scope: !9336)
!9340 = !DILocation(line: 5291, column: 5, scope: !9336)
!9341 = !DILocation(line: 5290, column: 12, scope: !9337)
!9342 = !DILocation(line: 5296, column: 10, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 5296, column: 9)
!9344 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 5292, column: 3)
!9345 = !DILocation(line: 5296, column: 9, scope: !9344)
!9346 = !DILocation(line: 5297, column: 7, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 5297, column: 7)
!9348 = !DILocation(line: 5297, column: 7, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 5297, column: 7)
!9350 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 5297, column: 7)
!9351 = !DILocation(line: 5297, column: 7, scope: !9350)
!9352 = !DILocation(line: 5309, column: 17, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 5309, column: 17)
!9354 = !DILocation(line: 5309, column: 35, scope: !9353)
!9355 = !DILocation(line: 5309, column: 38, scope: !9353)
!9356 = !DILocation(line: 5310, column: 13, scope: !9353)
!9357 = !DILocation(line: 5310, column: 10, scope: !9353)
!9358 = !DILocation(line: 5313, column: 17, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 5313, column: 17)
!9360 = !DILocation(line: 5314, column: 3, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 5314, column: 3)
!9362 = !DILocation(line: 5314, column: 3, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 5314, column: 3)
!9364 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 5314, column: 3)
!9365 = !DILocation(line: 5314, column: 3, scope: !9364)
!9366 = !DILocation(line: 5324, column: 29, scope: !9331)
!9367 = !DILocation(line: 5325, column: 6, scope: !9331)
!9368 = !DILocation(line: 5324, column: 13, scope: !9311)
!9369 = !DILocation(line: 5331, column: 12, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 5331, column: 12)
!9371 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 5326, column: 6)
!9372 = !DILocation(line: 5332, column: 8, scope: !9370)
!9373 = !DILocation(line: 5332, column: 7, scope: !9370)
!9374 = !DILocation(line: 5332, column: 5, scope: !9370)
!9375 = !DILocation(line: 5331, column: 12, scope: !9371)
!9376 = !DILocation(line: 5333, column: 3, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 5333, column: 3)
!9378 = !DILocation(line: 5333, column: 3, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 5333, column: 3)
!9380 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 5333, column: 3)
!9381 = !DILocation(line: 5333, column: 3, scope: !9380)
!9382 = !DILocation(line: 5347, column: 7, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 5347, column: 6)
!9384 = !DILocation(line: 5347, column: 6, scope: !9294)
!9385 = !DILocation(line: 5348, column: 4, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 5348, column: 4)
!9387 = !DILocation(line: 5348, column: 4, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 5348, column: 4)
!9389 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 5348, column: 4)
!9390 = !DILocation(line: 5348, column: 4, scope: !9389)
!9391 = !DILocation(line: 5356, column: 14, scope: !8948)
!9392 = !DILocation(line: 5356, column: 7, scope: !8948)
!9393 = !DILocation(line: 5358, column: 18, scope: !8962)
!9394 = !DILocation(line: 5358, column: 43, scope: !8962)
!9395 = !DILocation(line: 5358, column: 34, scope: !8962)
!9396 = !DILocation(line: 5362, column: 7, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 5359, column: 5)
!9398 = !DILocation(line: 5363, column: 14, scope: !9397)
!9399 = !DILocation(line: 5363, column: 7, scope: !9397)
!9400 = !DILocation(line: 5365, column: 43, scope: !8961)
!9401 = !DILocation(line: 5365, column: 34, scope: !8961)
!9402 = !DILocation(line: 5370, column: 12, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !3, line: 5370, column: 11)
!9404 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 5366, column: 5)
!9405 = !DILocation(line: 5370, column: 11, scope: !9404)
!9406 = !DILocation(line: 5371, column: 2, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 5371, column: 2)
!9408 = !DILocation(line: 5371, column: 2, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 5371, column: 2)
!9410 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 5371, column: 2)
!9411 = !DILocation(line: 5371, column: 2, scope: !9410)
!9412 = !DILocation(line: 5381, column: 14, scope: !9404)
!9413 = !DILocation(line: 5381, column: 7, scope: !9404)
!9414 = !DILocation(line: 5383, column: 18, scope: !8960)
!9415 = !DILocation(line: 5383, column: 43, scope: !8960)
!9416 = !DILocation(line: 5383, column: 34, scope: !8960)
!9417 = !DILocation(line: 5383, column: 12, scope: !8961)
!9418 = !DILocation(line: 5385, column: 7, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 5385, column: 7)
!9420 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 5384, column: 5)
!9421 = !DILocation(line: 5385, column: 7, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 5385, column: 7)
!9423 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 5385, column: 7)
!9424 = !DILocation(line: 5385, column: 7, scope: !9423)
!9425 = !DILocation(line: 5394, column: 14, scope: !9420)
!9426 = !DILocation(line: 5394, column: 7, scope: !9420)
!9427 = !DILocation(line: 5396, column: 18, scope: !8959)
!9428 = !DILocation(line: 5396, column: 43, scope: !8959)
!9429 = !DILocation(line: 5396, column: 34, scope: !8959)
!9430 = !DILocation(line: 5396, column: 12, scope: !8960)
!9431 = !DILocation(line: 5399, column: 19, scope: !8958)
!9432 = !DILocation(line: 0, scope: !8958)
!9433 = !DILocation(line: 5400, column: 25, scope: !8958)
!9434 = !DILocation(line: 5401, column: 13, scope: !8958)
!9435 = !DILocation(line: 5402, column: 25, scope: !8958)
!9436 = !DILocation(line: 5406, column: 3, scope: !8895)
!9437 = !DILocation(line: 5409, column: 7, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 5407, column: 5)
!9439 = !DILocation(line: 5410, column: 16, scope: !9438)
!9440 = !DILocation(line: 5410, column: 24, scope: !9438)
!9441 = !DILocation(line: 5410, column: 28, scope: !9438)
!9442 = !DILocation(line: 5410, column: 15, scope: !9438)
!9443 = !DILocation(line: 5410, column: 7, scope: !9438)
!9444 = !DILocation(line: 5413, column: 7, scope: !9438)
!9445 = !DILocation(line: 5415, column: 7, scope: !9438)
!9446 = !DILocation(line: 5417, column: 7, scope: !9438)
!9447 = !DILocation(line: 5419, column: 7, scope: !9438)
!9448 = !DILocation(line: 5422, column: 7, scope: !9438)
!9449 = !DILocation(line: 5424, column: 7, scope: !9438)
!9450 = !DILocation(line: 5427, column: 7, scope: !9438)
!9451 = !DILocation(line: 5429, column: 7, scope: !9438)
!9452 = !DILocation(line: 5430, column: 5, scope: !9438)
!9453 = !DILocation(line: 5432, column: 10, scope: !8895)
!9454 = !DILocation(line: 5432, column: 3, scope: !8895)
!9455 = !DILocation(line: 5433, column: 1, scope: !8895)
!9456 = distinct !DISubprogram(name: "store_init_value", scope: !3, file: !3, line: 5467, type: !9457, scopeLine: 5468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9459)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{null, !585, !460, !460, !460}
!9459 = !{!9460, !9461, !9462, !9463, !9464, !9465, !9466, !9467, !9470}
!9460 = !DILocalVariable(name: "init_loc", arg: 1, scope: !9456, file: !3, line: 5467, type: !585)
!9461 = !DILocalVariable(name: "decl", arg: 2, scope: !9456, file: !3, line: 5467, type: !460)
!9462 = !DILocalVariable(name: "init", arg: 3, scope: !9456, file: !3, line: 5467, type: !460)
!9463 = !DILocalVariable(name: "origtype", arg: 4, scope: !9456, file: !3, line: 5467, type: !460)
!9464 = !DILocalVariable(name: "value", scope: !9456, file: !3, line: 5469, type: !460)
!9465 = !DILocalVariable(name: "type", scope: !9456, file: !3, line: 5469, type: !460)
!9466 = !DILocalVariable(name: "npc", scope: !9456, file: !3, line: 5470, type: !452)
!9467 = !DILocalVariable(name: "inside_init", scope: !9468, file: !3, line: 5504, type: !460)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 5503, column: 5)
!9469 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 5500, column: 7)
!9470 = !DILocalVariable(name: "cldecl", scope: !9471, file: !3, line: 5511, type: !460)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 5510, column: 2)
!9472 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 5509, column: 11)
!9473 = !DILocation(line: 0, scope: !9456)
!9474 = !DILocation(line: 5474, column: 10, scope: !9456)
!9475 = !DILocation(line: 5475, column: 7, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 5475, column: 7)
!9477 = !DILocation(line: 5475, column: 24, scope: !9476)
!9478 = !DILocation(line: 5475, column: 7, scope: !9456)
!9479 = !DILocation(line: 5480, column: 7, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 5480, column: 7)
!9481 = !DILocation(line: 5480, column: 7, scope: !9456)
!9482 = !DILocation(line: 5481, column: 11, scope: !9480)
!9483 = !DILocation(line: 5481, column: 5, scope: !9480)
!9484 = !DILocation(line: 5483, column: 22, scope: !9456)
!9485 = !DILocation(line: 5482, column: 11, scope: !9456)
!9486 = !DILocation(line: 5487, column: 8, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 5487, column: 7)
!9488 = !DILocation(line: 5488, column: 7, scope: !9487)
!9489 = !DILocation(line: 5488, column: 10, scope: !9487)
!9490 = !DILocation(line: 5488, column: 46, scope: !9487)
!9491 = !DILocation(line: 5488, column: 50, scope: !9487)
!9492 = !DILocation(line: 5487, column: 7, scope: !9456)
!9493 = !DILocation(line: 5489, column: 5, scope: !9487)
!9494 = !DILocation(line: 5492, column: 3, scope: !9456)
!9495 = !DILocation(line: 5492, column: 23, scope: !9456)
!9496 = !DILocation(line: 5495, column: 3, scope: !9456)
!9497 = distinct !{!9497, !9496, !9496}
!9498 = !DILocation(line: 5496, column: 7, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 5496, column: 7)
!9500 = !DILocation(line: 5496, column: 7, scope: !9456)
!9501 = !DILocation(line: 5497, column: 5, scope: !9499)
!9502 = !DILocation(line: 5500, column: 7, scope: !9469)
!9503 = !DILocation(line: 5500, column: 24, scope: !9469)
!9504 = !DILocation(line: 5501, column: 7, scope: !9469)
!9505 = !DILocation(line: 5501, column: 10, scope: !9469)
!9506 = !DILocation(line: 5501, column: 29, scope: !9469)
!9507 = !DILocation(line: 5502, column: 19, scope: !9469)
!9508 = !DILocation(line: 5502, column: 16, scope: !9469)
!9509 = !DILocation(line: 5502, column: 7, scope: !9469)
!9510 = !DILocation(line: 5506, column: 7, scope: !9468)
!9511 = !DILocation(line: 0, scope: !9468)
!9512 = distinct !{!9512, !9510, !9510}
!9513 = !DILocation(line: 5507, column: 21, scope: !9468)
!9514 = !DILocation(line: 5509, column: 11, scope: !9472)
!9515 = !DILocation(line: 5509, column: 35, scope: !9472)
!9516 = !DILocation(line: 5509, column: 11, scope: !9468)
!9517 = !DILocation(line: 5511, column: 18, scope: !9471)
!9518 = !DILocation(line: 0, scope: !9471)
!9519 = !DILocation(line: 5513, column: 8, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 5513, column: 8)
!9521 = !DILocation(line: 5513, column: 8, scope: !9471)
!9522 = !DILocation(line: 5518, column: 41, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 5514, column: 6)
!9524 = !DILocation(line: 5518, column: 15, scope: !9523)
!9525 = !DILocation(line: 5519, column: 25, scope: !9523)
!9526 = !DILocation(line: 5520, column: 29, scope: !9523)
!9527 = !DILocation(line: 5520, column: 8, scope: !9523)
!9528 = !DILocation(line: 5520, column: 27, scope: !9523)
!9529 = !DILocation(line: 5521, column: 8, scope: !9523)
!9530 = !DILocation(line: 5522, column: 8, scope: !9523)
!9531 = !DILocation(line: 5523, column: 6, scope: !9523)
!9532 = !DILocation(line: 5526, column: 1, scope: !9456)
!9533 = distinct !DISubprogram(name: "error_init", scope: !3, file: !3, line: 5655, type: !9534, scopeLine: 5656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9536)
!9534 = !DISubroutineType(types: !9535)
!9535 = !{null, !458}
!9536 = !{!9537, !9538}
!9537 = !DILocalVariable(name: "msgid", arg: 1, scope: !9533, file: !3, line: 5655, type: !458)
!9538 = !DILocalVariable(name: "ofwhat", scope: !9533, file: !3, line: 5657, type: !455)
!9539 = !DILocation(line: 0, scope: !9533)
!9540 = !DILocation(line: 5659, column: 3, scope: !9533)
!9541 = !DILocation(line: 5660, column: 37, scope: !9533)
!9542 = !DILocation(line: 5660, column: 12, scope: !9533)
!9543 = !DILocation(line: 5661, column: 7, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 5661, column: 7)
!9545 = !DILocation(line: 5661, column: 7, scope: !9533)
!9546 = !DILocation(line: 5662, column: 5, scope: !9544)
!9547 = !DILocation(line: 5663, column: 1, scope: !9533)
!9548 = distinct !DISubprogram(name: "print_spelling", scope: !3, file: !3, line: 5627, type: !9549, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9551)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!455, !455}
!9551 = !{!9552, !9553, !9554, !9555}
!9552 = !DILocalVariable(name: "buffer", arg: 1, scope: !9548, file: !3, line: 5627, type: !455)
!9553 = !DILocalVariable(name: "d", scope: !9548, file: !3, line: 5629, type: !455)
!9554 = !DILocalVariable(name: "p", scope: !9548, file: !3, line: 5630, type: !1936)
!9555 = !DILocalVariable(name: "s", scope: !9556, file: !3, line: 5640, type: !458)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !3, line: 5639, column: 7)
!9557 = distinct !DILexicalBlock(scope: !9558, file: !3, line: 5633, column: 9)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 5632, column: 3)
!9559 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 5632, column: 3)
!9560 = !DILocation(line: 0, scope: !9548)
!9561 = !DILocation(line: 5632, column: 12, scope: !9559)
!9562 = !DILocation(line: 5632, column: 8, scope: !9559)
!9563 = !DILocation(line: 0, scope: !9559)
!9564 = !DILocation(line: 5632, column: 31, scope: !9558)
!9565 = !DILocation(line: 5632, column: 29, scope: !9558)
!9566 = !DILocation(line: 5632, column: 3, scope: !9559)
!9567 = !DILocation(line: 5633, column: 12, scope: !9557)
!9568 = !DILocation(line: 5633, column: 17, scope: !9557)
!9569 = !DILocation(line: 5633, column: 9, scope: !9558)
!9570 = !DILocation(line: 5635, column: 57, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9557, file: !3, line: 5634, column: 7)
!9572 = !DILocation(line: 5635, column: 2, scope: !9571)
!9573 = !DILocation(line: 5636, column: 7, scope: !9571)
!9574 = !DILocation(line: 5636, column: 4, scope: !9571)
!9575 = !DILocation(line: 5637, column: 7, scope: !9571)
!9576 = !DILocation(line: 5641, column: 14, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 5641, column: 6)
!9578 = !DILocation(line: 5641, column: 6, scope: !9556)
!9579 = !DILocation(line: 5642, column: 6, scope: !9577)
!9580 = !DILocation(line: 5642, column: 9, scope: !9577)
!9581 = !DILocation(line: 5642, column: 4, scope: !9577)
!9582 = !DILocation(line: 5643, column: 14, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 5643, column: 2)
!9584 = !DILocation(line: 5643, column: 16, scope: !9583)
!9585 = !DILocation(line: 0, scope: !9556)
!9586 = !DILocation(line: 5643, column: 7, scope: !9583)
!9587 = !DILocation(line: 0, scope: !9583)
!9588 = !DILocation(line: 5643, column: 25, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 5643, column: 2)
!9590 = !DILocation(line: 5643, column: 23, scope: !9589)
!9591 = !DILocation(line: 5643, column: 2, scope: !9583)
!9592 = !DILocation(line: 5643, column: 27, scope: !9589)
!9593 = !DILocation(line: 5643, column: 33, scope: !9589)
!9594 = !DILocation(line: 5643, column: 2, scope: !9589)
!9595 = distinct !{!9595, !9591, !9596}
!9596 = !DILocation(line: 5644, column: 4, scope: !9583)
!9597 = !DILocation(line: 5632, column: 42, scope: !9558)
!9598 = !DILocation(line: 0, scope: !9557)
!9599 = !DILocation(line: 5632, column: 3, scope: !9558)
!9600 = distinct !{!9600, !9566, !9601}
!9601 = !DILocation(line: 5645, column: 7, scope: !9559)
!9602 = !DILocation(line: 5646, column: 8, scope: !9548)
!9603 = !DILocation(line: 5647, column: 3, scope: !9548)
!9604 = distinct !DISubprogram(name: "spelling_length", scope: !3, file: !3, line: 5608, type: !2066, scopeLine: 5609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9605)
!9605 = !{!9606, !9607}
!9606 = !DILocalVariable(name: "size", scope: !9604, file: !3, line: 5610, type: !453)
!9607 = !DILocalVariable(name: "p", scope: !9604, file: !3, line: 5611, type: !1936)
!9608 = !DILocation(line: 0, scope: !9604)
!9609 = !DILocation(line: 5613, column: 12, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 5613, column: 3)
!9611 = !DILocation(line: 5613, column: 8, scope: !9610)
!9612 = !DILocation(line: 0, scope: !9610)
!9613 = !DILocation(line: 5613, column: 31, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 5613, column: 3)
!9615 = !DILocation(line: 5613, column: 29, scope: !9614)
!9616 = !DILocation(line: 5613, column: 3, scope: !9610)
!9617 = !DILocation(line: 5615, column: 14, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 5615, column: 11)
!9619 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 5614, column: 5)
!9620 = !DILocation(line: 5615, column: 19, scope: !9618)
!9621 = !DILocation(line: 5615, column: 11, scope: !9619)
!9622 = !DILocation(line: 5616, column: 7, scope: !9618)
!9623 = !DILocation(line: 5616, column: 2, scope: !9618)
!9624 = !DILocation(line: 5618, column: 21, scope: !9618)
!9625 = !DILocation(line: 5618, column: 23, scope: !9618)
!9626 = !DILocation(line: 5618, column: 10, scope: !9618)
!9627 = !DILocation(line: 5618, column: 7, scope: !9618)
!9628 = !DILocation(line: 0, scope: !9618)
!9629 = !DILocation(line: 5613, column: 42, scope: !9614)
!9630 = !DILocation(line: 5613, column: 3, scope: !9614)
!9631 = distinct !{!9631, !9616, !9632}
!9632 = !DILocation(line: 5619, column: 5, scope: !9610)
!9633 = !DILocation(line: 5621, column: 3, scope: !9604)
!9634 = distinct !DISubprogram(name: "pedwarn_init", scope: !3, file: !3, line: 5671, type: !9635, scopeLine: 5672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9637)
!9635 = !DISubroutineType(types: !9636)
!9636 = !{null, !585, !453, !458}
!9637 = !{!9638, !9639, !9640, !9641}
!9638 = !DILocalVariable(name: "location", arg: 1, scope: !9634, file: !3, line: 5671, type: !585)
!9639 = !DILocalVariable(name: "opt", arg: 2, scope: !9634, file: !3, line: 5671, type: !453)
!9640 = !DILocalVariable(name: "msgid", arg: 3, scope: !9634, file: !3, line: 5671, type: !458)
!9641 = !DILocalVariable(name: "ofwhat", scope: !9634, file: !3, line: 5673, type: !455)
!9642 = !DILocation(line: 0, scope: !9634)
!9643 = !DILocation(line: 5675, column: 3, scope: !9634)
!9644 = !DILocation(line: 5676, column: 37, scope: !9634)
!9645 = !DILocation(line: 5676, column: 12, scope: !9634)
!9646 = !DILocation(line: 5677, column: 7, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 5677, column: 7)
!9648 = !DILocation(line: 5677, column: 7, scope: !9634)
!9649 = !DILocation(line: 5678, column: 5, scope: !9647)
!9650 = !DILocation(line: 5679, column: 1, scope: !9634)
!9651 = distinct !DISubprogram(name: "maybe_warn_string_init", scope: !3, file: !3, line: 5703, type: !9652, scopeLine: 5704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9654)
!9652 = !DISubroutineType(types: !9653)
!9653 = !{null, !460, !1909}
!9654 = !{!9655, !9656}
!9655 = !DILocalVariable(name: "type", arg: 1, scope: !9651, file: !3, line: 5703, type: !460)
!9656 = !DILocalVariable(name: "expr", arg: 2, scope: !9651, file: !3, line: 5703, type: !1909)
!9657 = !DILocation(line: 0, scope: !9651)
!9658 = !DILocation(line: 5703, column: 50, scope: !9651)
!9659 = !DILocation(line: 5705, column: 7, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 5705, column: 7)
!9661 = !DILocation(line: 5706, column: 7, scope: !9660)
!9662 = !DILocation(line: 5706, column: 10, scope: !9660)
!9663 = !DILocation(line: 5706, column: 27, scope: !9660)
!9664 = !DILocation(line: 5707, column: 7, scope: !9660)
!9665 = !DILocation(line: 5707, column: 10, scope: !9660)
!9666 = !DILocation(line: 5707, column: 33, scope: !9660)
!9667 = !DILocation(line: 5708, column: 7, scope: !9660)
!9668 = !DILocation(line: 5708, column: 15, scope: !9660)
!9669 = !DILocation(line: 5708, column: 29, scope: !9660)
!9670 = !DILocation(line: 5705, column: 7, scope: !9651)
!9671 = !DILocation(line: 5709, column: 19, scope: !9660)
!9672 = !DILocation(line: 5709, column: 5, scope: !9660)
!9673 = !DILocation(line: 5711, column: 1, scope: !9651)
!9674 = distinct !DISubprogram(name: "start_init", scope: !3, file: !3, line: 6194, type: !9675, scopeLine: 6195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9677)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{null, !460, !460, !453}
!9677 = !{!9678, !9679, !9680, !9681, !9682}
!9678 = !DILocalVariable(name: "decl", arg: 1, scope: !9674, file: !3, line: 6194, type: !460)
!9679 = !DILocalVariable(name: "asmspec_tree", arg: 2, scope: !9674, file: !3, line: 6194, type: !460)
!9680 = !DILocalVariable(name: "top_level", arg: 3, scope: !9674, file: !3, line: 6194, type: !453)
!9681 = !DILocalVariable(name: "locus", scope: !9674, file: !3, line: 6196, type: !458)
!9682 = !DILocalVariable(name: "p", scope: !9674, file: !3, line: 6197, type: !1877)
!9683 = !DILocation(line: 0, scope: !9674)
!9684 = !DILocation(line: 6197, column: 33, scope: !9674)
!9685 = !DILocation(line: 6199, column: 13, scope: !9674)
!9686 = !DILocation(line: 6199, column: 6, scope: !9674)
!9687 = !DILocation(line: 6199, column: 11, scope: !9674)
!9688 = !DILocation(line: 6200, column: 31, scope: !9674)
!9689 = !DILocation(line: 6200, column: 6, scope: !9674)
!9690 = !DILocation(line: 6200, column: 29, scope: !9674)
!9691 = !DILocation(line: 6201, column: 34, scope: !9674)
!9692 = !DILocation(line: 6201, column: 6, scope: !9674)
!9693 = !DILocation(line: 6201, column: 32, scope: !9674)
!9694 = !DILocation(line: 6202, column: 26, scope: !9674)
!9695 = !DILocation(line: 6202, column: 6, scope: !9674)
!9696 = !DILocation(line: 6202, column: 24, scope: !9674)
!9697 = !DILocation(line: 6203, column: 32, scope: !9674)
!9698 = !DILocation(line: 6203, column: 6, scope: !9674)
!9699 = !DILocation(line: 6203, column: 30, scope: !9674)
!9700 = !DILocation(line: 6204, column: 17, scope: !9674)
!9701 = !DILocation(line: 6204, column: 6, scope: !9674)
!9702 = !DILocation(line: 6204, column: 15, scope: !9674)
!9703 = !DILocation(line: 6205, column: 17, scope: !9674)
!9704 = !DILocation(line: 6205, column: 6, scope: !9674)
!9705 = !DILocation(line: 6205, column: 15, scope: !9674)
!9706 = !DILocation(line: 6206, column: 22, scope: !9674)
!9707 = !DILocation(line: 6206, column: 6, scope: !9674)
!9708 = !DILocation(line: 6206, column: 20, scope: !9674)
!9709 = !DILocation(line: 6207, column: 22, scope: !9674)
!9710 = !DILocation(line: 6207, column: 6, scope: !9674)
!9711 = !DILocation(line: 6207, column: 20, scope: !9674)
!9712 = !DILocation(line: 6208, column: 18, scope: !9674)
!9713 = !DILocation(line: 6208, column: 6, scope: !9674)
!9714 = !DILocation(line: 6208, column: 16, scope: !9674)
!9715 = !DILocation(line: 6209, column: 13, scope: !9674)
!9716 = !DILocation(line: 6209, column: 11, scope: !9674)
!9717 = !DILocation(line: 6210, column: 21, scope: !9674)
!9718 = !DILocation(line: 6212, column: 20, scope: !9674)
!9719 = !DILocation(line: 6213, column: 26, scope: !9674)
!9720 = !DILocation(line: 6214, column: 25, scope: !9674)
!9721 = !DILocation(line: 6216, column: 12, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 6216, column: 7)
!9723 = !DILocation(line: 6216, column: 28, scope: !9722)
!9724 = !DILocation(line: 6216, column: 25, scope: !9722)
!9725 = !DILocation(line: 6216, column: 17, scope: !9722)
!9726 = !DILocation(line: 6218, column: 32, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 6217, column: 5)
!9728 = !DILocation(line: 6218, column: 30, scope: !9727)
!9729 = !DILocation(line: 6220, column: 6, scope: !9727)
!9730 = !DILocation(line: 6220, column: 25, scope: !9727)
!9731 = !DILocation(line: 6220, column: 29, scope: !9727)
!9732 = !DILocation(line: 6220, column: 42, scope: !9727)
!9733 = !DILocation(line: 6220, column: 38, scope: !9727)
!9734 = !DILocation(line: 6223, column: 9, scope: !9727)
!9735 = !DILocation(line: 6223, column: 38, scope: !9727)
!9736 = !DILocation(line: 6224, column: 9, scope: !9727)
!9737 = !DILocation(line: 6224, column: 41, scope: !9727)
!9738 = !DILocation(line: 6225, column: 9, scope: !9727)
!9739 = !DILocation(line: 6225, column: 41, scope: !9727)
!9740 = !DILocation(line: 6226, column: 9, scope: !9727)
!9741 = !DILocation(line: 6226, column: 41, scope: !9727)
!9742 = !DILocation(line: 6220, column: 2, scope: !9727)
!9743 = !DILocation(line: 6227, column: 37, scope: !9727)
!9744 = !DILocation(line: 6227, column: 15, scope: !9727)
!9745 = !DILocation(line: 6228, column: 5, scope: !9727)
!9746 = !DILocation(line: 6231, column: 30, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 6230, column: 5)
!9748 = !DILocation(line: 6232, column: 33, scope: !9747)
!9749 = !DILocation(line: 0, scope: !9722)
!9750 = !DILocation(line: 6236, column: 21, scope: !9674)
!9751 = !DILocation(line: 6237, column: 27, scope: !9674)
!9752 = !DILocation(line: 6239, column: 28, scope: !9674)
!9753 = !DILocation(line: 6241, column: 17, scope: !9674)
!9754 = !DILocation(line: 6242, column: 17, scope: !9674)
!9755 = !DILocation(line: 6243, column: 3, scope: !9674)
!9756 = !DILocation(line: 6245, column: 7, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 6245, column: 7)
!9758 = !DILocation(line: 6245, column: 7, scope: !9674)
!9759 = !DILocation(line: 6246, column: 5, scope: !9757)
!9760 = !DILocation(line: 6247, column: 1, scope: !9674)
!9761 = distinct !DISubprogram(name: "push_string", scope: !3, file: !3, line: 5580, type: !9534, scopeLine: 5581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9762)
!9762 = !{!9763, !9764}
!9763 = !DILocalVariable(name: "string", arg: 1, scope: !9761, file: !3, line: 5580, type: !458)
!9764 = !DILocalVariable(name: "depth", scope: !9765, file: !3, line: 5582, type: !453)
!9765 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 5582, column: 3)
!9766 = !DILocation(line: 0, scope: !9761)
!9767 = !DILocation(line: 5582, column: 3, scope: !9765)
!9768 = !DILocation(line: 0, scope: !9765)
!9769 = !DILocation(line: 5582, column: 3, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 5582, column: 3)
!9771 = !DILocation(line: 5582, column: 3, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 5582, column: 3)
!9773 = !DILocation(line: 5583, column: 1, scope: !9761)
!9774 = distinct !DISubprogram(name: "finish_init", scope: !3, file: !3, line: 6250, type: !9775, scopeLine: 6251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9777)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{null}
!9777 = !{!9778, !9779}
!9778 = !DILocalVariable(name: "p", scope: !9774, file: !3, line: 6252, type: !1877)
!9779 = !DILocalVariable(name: "q", scope: !9780, file: !3, line: 6257, type: !1883)
!9780 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 6256, column: 5)
!9781 = !DILocation(line: 6252, column: 33, scope: !9774)
!9782 = !DILocation(line: 0, scope: !9774)
!9783 = !DILocation(line: 6255, column: 3, scope: !9774)
!9784 = !DILocation(line: 6255, column: 10, scope: !9774)
!9785 = !DILocation(line: 0, scope: !9780)
!9786 = !DILocation(line: 6258, column: 30, scope: !9780)
!9787 = !DILocation(line: 6258, column: 25, scope: !9780)
!9788 = !DILocation(line: 6259, column: 13, scope: !9780)
!9789 = !DILocation(line: 6259, column: 7, scope: !9780)
!9790 = distinct !{!9790, !9783, !9791}
!9791 = !DILocation(line: 6260, column: 5, scope: !9774)
!9792 = !DILocation(line: 6262, column: 3, scope: !9774)
!9793 = !DILocation(line: 6265, column: 9, scope: !9774)
!9794 = !DILocation(line: 6265, column: 3, scope: !9774)
!9795 = !DILocation(line: 6267, column: 25, scope: !9774)
!9796 = !DILocation(line: 6267, column: 20, scope: !9774)
!9797 = !DILocation(line: 6268, column: 31, scope: !9774)
!9798 = !DILocation(line: 6268, column: 28, scope: !9774)
!9799 = !DILocation(line: 6268, column: 26, scope: !9774)
!9800 = !DILocation(line: 6269, column: 34, scope: !9774)
!9801 = !DILocation(line: 6269, column: 31, scope: !9774)
!9802 = !DILocation(line: 6269, column: 29, scope: !9774)
!9803 = !DILocation(line: 6270, column: 26, scope: !9774)
!9804 = !DILocation(line: 6270, column: 21, scope: !9774)
!9805 = !DILocation(line: 6271, column: 32, scope: !9774)
!9806 = !DILocation(line: 6271, column: 27, scope: !9774)
!9807 = !DILocation(line: 6272, column: 29, scope: !9774)
!9808 = !DILocation(line: 6272, column: 24, scope: !9774)
!9809 = !DILocation(line: 6273, column: 17, scope: !9774)
!9810 = !DILocation(line: 6273, column: 12, scope: !9774)
!9811 = !DILocation(line: 6274, column: 22, scope: !9774)
!9812 = !DILocation(line: 6274, column: 17, scope: !9774)
!9813 = !DILocation(line: 6275, column: 22, scope: !9774)
!9814 = !DILocation(line: 6275, column: 17, scope: !9774)
!9815 = !DILocation(line: 6276, column: 30, scope: !9774)
!9816 = !DILocation(line: 6276, column: 27, scope: !9774)
!9817 = !DILocation(line: 6276, column: 25, scope: !9774)
!9818 = !DILocation(line: 6277, column: 26, scope: !9774)
!9819 = !DILocation(line: 6277, column: 21, scope: !9774)
!9820 = !DILocation(line: 6278, column: 9, scope: !9774)
!9821 = !DILocation(line: 6278, column: 3, scope: !9774)
!9822 = !DILocation(line: 6279, column: 1, scope: !9774)
!9823 = distinct !DISubprogram(name: "really_start_incremental_init", scope: !3, file: !3, line: 6289, type: !5621, scopeLine: 6290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9824)
!9824 = !{!9825, !9826}
!9825 = !DILocalVariable(name: "type", arg: 1, scope: !9823, file: !3, line: 6289, type: !460)
!9826 = !DILocalVariable(name: "p", scope: !9823, file: !3, line: 6291, type: !1883)
!9827 = !DILocation(line: 0, scope: !9823)
!9828 = !DILocation(line: 6291, column: 33, scope: !9823)
!9829 = !DILocation(line: 6293, column: 12, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 6293, column: 7)
!9831 = !DILocation(line: 6293, column: 7, scope: !9823)
!9832 = !DILocation(line: 6294, column: 12, scope: !9830)
!9833 = !DILocation(line: 6294, column: 5, scope: !9830)
!9834 = !DILocation(line: 6296, column: 7, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 6296, column: 7)
!9836 = !DILocation(line: 6296, column: 24, scope: !9835)
!9837 = !DILocation(line: 6297, column: 7, scope: !9835)
!9838 = !DILocation(line: 6297, column: 10, scope: !9835)
!9839 = !DILocation(line: 6296, column: 7, scope: !9823)
!9840 = !DILocation(line: 6298, column: 5, scope: !9835)
!9841 = !DILocation(line: 6300, column: 13, scope: !9823)
!9842 = !DILocation(line: 6300, column: 6, scope: !9823)
!9843 = !DILocation(line: 6300, column: 11, scope: !9823)
!9844 = !DILocation(line: 6301, column: 15, scope: !9823)
!9845 = !DILocation(line: 6301, column: 6, scope: !9823)
!9846 = !DILocation(line: 6301, column: 13, scope: !9823)
!9847 = !DILocation(line: 6302, column: 14, scope: !9823)
!9848 = !DILocation(line: 6302, column: 6, scope: !9823)
!9849 = !DILocation(line: 6302, column: 12, scope: !9823)
!9850 = !DILocation(line: 6303, column: 18, scope: !9823)
!9851 = !DILocation(line: 6303, column: 6, scope: !9823)
!9852 = !DILocation(line: 6303, column: 16, scope: !9823)
!9853 = !DILocation(line: 6304, column: 23, scope: !9823)
!9854 = !DILocation(line: 6304, column: 6, scope: !9823)
!9855 = !DILocation(line: 6304, column: 21, scope: !9823)
!9856 = !DILocation(line: 6305, column: 24, scope: !9823)
!9857 = !DILocation(line: 6305, column: 6, scope: !9823)
!9858 = !DILocation(line: 6305, column: 22, scope: !9823)
!9859 = !DILocation(line: 6306, column: 18, scope: !9823)
!9860 = !DILocation(line: 6306, column: 6, scope: !9823)
!9861 = !DILocation(line: 6306, column: 16, scope: !9823)
!9862 = !DILocation(line: 6307, column: 17, scope: !9823)
!9863 = !DILocation(line: 6307, column: 6, scope: !9823)
!9864 = !DILocation(line: 6307, column: 15, scope: !9823)
!9865 = !DILocation(line: 6308, column: 17, scope: !9823)
!9866 = !DILocation(line: 6308, column: 6, scope: !9823)
!9867 = !DILocation(line: 6308, column: 15, scope: !9823)
!9868 = !DILocation(line: 6309, column: 15, scope: !9823)
!9869 = !DILocation(line: 6309, column: 6, scope: !9823)
!9870 = !DILocation(line: 6309, column: 13, scope: !9823)
!9871 = !DILocation(line: 6310, column: 17, scope: !9823)
!9872 = !DILocation(line: 6310, column: 6, scope: !9823)
!9873 = !DILocation(line: 6310, column: 15, scope: !9823)
!9874 = !DILocation(line: 6311, column: 18, scope: !9823)
!9875 = !DILocation(line: 6311, column: 6, scope: !9823)
!9876 = !DILocation(line: 6311, column: 16, scope: !9823)
!9877 = !DILocation(line: 6312, column: 21, scope: !9823)
!9878 = !DILocation(line: 6312, column: 6, scope: !9823)
!9879 = !DILocation(line: 6312, column: 19, scope: !9823)
!9880 = !DILocation(line: 6313, column: 14, scope: !9823)
!9881 = !DILocation(line: 6313, column: 6, scope: !9823)
!9882 = !DILocation(line: 6313, column: 12, scope: !9823)
!9883 = !DILocation(line: 6314, column: 6, scope: !9823)
!9884 = !DILocation(line: 6314, column: 24, scope: !9823)
!9885 = !DILocation(line: 6314, column: 30, scope: !9823)
!9886 = !DILocation(line: 6315, column: 24, scope: !9823)
!9887 = !DILocation(line: 6315, column: 38, scope: !9823)
!9888 = !DILocation(line: 6316, column: 24, scope: !9823)
!9889 = !DILocation(line: 6316, column: 38, scope: !9823)
!9890 = !DILocation(line: 6317, column: 6, scope: !9823)
!9891 = !DILocation(line: 6317, column: 15, scope: !9823)
!9892 = !DILocation(line: 6318, column: 6, scope: !9823)
!9893 = !DILocation(line: 6318, column: 18, scope: !9823)
!9894 = !DILocation(line: 6319, column: 6, scope: !9823)
!9895 = !DILocation(line: 6319, column: 12, scope: !9823)
!9896 = !DILocation(line: 6320, column: 20, scope: !9823)
!9897 = !DILocation(line: 6320, column: 6, scope: !9823)
!9898 = !DILocation(line: 6320, column: 18, scope: !9823)
!9899 = !DILocation(line: 6321, column: 19, scope: !9823)
!9900 = !DILocation(line: 6321, column: 6, scope: !9823)
!9901 = !DILocation(line: 6321, column: 17, scope: !9823)
!9902 = !DILocation(line: 6322, column: 6, scope: !9823)
!9903 = !DILocation(line: 6322, column: 11, scope: !9823)
!9904 = !DILocation(line: 6323, column: 21, scope: !9823)
!9905 = !DILocation(line: 6325, column: 24, scope: !9823)
!9906 = !DILocation(line: 6326, column: 22, scope: !9823)
!9907 = !DILocation(line: 6327, column: 24, scope: !9823)
!9908 = !DILocation(line: 6328, column: 23, scope: !9823)
!9909 = !DILocation(line: 6328, column: 21, scope: !9823)
!9910 = !DILocation(line: 6329, column: 24, scope: !9823)
!9911 = !DILocation(line: 6330, column: 28, scope: !9823)
!9912 = !DILocation(line: 6331, column: 20, scope: !9823)
!9913 = !DILocation(line: 6332, column: 27, scope: !9823)
!9914 = !DILocation(line: 6333, column: 26, scope: !9823)
!9915 = !DILocation(line: 6334, column: 20, scope: !9823)
!9916 = !DILocation(line: 6335, column: 24, scope: !9823)
!9917 = !DILocation(line: 6337, column: 7, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 6337, column: 7)
!9919 = !DILocation(line: 6337, column: 36, scope: !9918)
!9920 = !DILocation(line: 6338, column: 7, scope: !9918)
!9921 = !DILocation(line: 6338, column: 39, scope: !9918)
!9922 = !DILocation(line: 6337, column: 7, scope: !9823)
!9923 = !DILocation(line: 6340, column: 28, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 6339, column: 5)
!9925 = !DILocation(line: 6342, column: 7, scope: !9924)
!9926 = !DILocation(line: 0, scope: !9924)
!9927 = !DILocation(line: 6342, column: 33, scope: !9924)
!9928 = !DILocation(line: 6342, column: 38, scope: !9924)
!9929 = !DILocation(line: 6342, column: 41, scope: !9924)
!9930 = !DILocation(line: 6343, column: 7, scope: !9924)
!9931 = !DILocation(line: 6343, column: 10, scope: !9924)
!9932 = !DILocation(line: 6343, column: 41, scope: !9924)
!9933 = !DILocation(line: 6344, column: 23, scope: !9924)
!9934 = distinct !{!9934, !9925, !9933}
!9935 = !DILocation(line: 6346, column: 35, scope: !9924)
!9936 = !DILocation(line: 6347, column: 31, scope: !9924)
!9937 = !DILocation(line: 6347, column: 29, scope: !9924)
!9938 = !DILocation(line: 6348, column: 5, scope: !9924)
!9939 = !DILocation(line: 6349, column: 41, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 6349, column: 12)
!9941 = !DILocation(line: 6349, column: 12, scope: !9918)
!9942 = !DILocation(line: 6351, column: 11, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 6351, column: 11)
!9944 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 6350, column: 5)
!9945 = !DILocation(line: 6351, column: 11, scope: !9944)
!9946 = !DILocation(line: 6354, column: 8, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 6352, column: 2)
!9948 = !DILocation(line: 6354, column: 6, scope: !9947)
!9949 = !DILocation(line: 6357, column: 30, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 6357, column: 8)
!9951 = !DILocation(line: 6358, column: 8, scope: !9950)
!9952 = !DILocation(line: 6358, column: 11, scope: !9950)
!9953 = !DILocation(line: 6357, column: 8, scope: !9947)
!9954 = !DILocation(line: 6359, column: 30, scope: !9950)
!9955 = !DILocation(line: 6359, column: 28, scope: !9950)
!9956 = !DILocation(line: 6359, column: 6, scope: !9950)
!9957 = !DILocation(line: 6364, column: 8, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 6364, column: 8)
!9959 = !DILocation(line: 6365, column: 8, scope: !9958)
!9960 = !DILocation(line: 6365, column: 11, scope: !9958)
!9961 = !DILocation(line: 6365, column: 45, scope: !9958)
!9962 = !DILocation(line: 6364, column: 8, scope: !9947)
!9963 = !DILocation(line: 6366, column: 30, scope: !9958)
!9964 = !DILocation(line: 6366, column: 28, scope: !9958)
!9965 = !DILocation(line: 6366, column: 6, scope: !9958)
!9966 = !DILocation(line: 6369, column: 17, scope: !9947)
!9967 = !DILocation(line: 6370, column: 10, scope: !9947)
!9968 = !DILocation(line: 6369, column: 8, scope: !9947)
!9969 = !DILocation(line: 6369, column: 6, scope: !9947)
!9970 = !DILocation(line: 6371, column: 2, scope: !9947)
!9971 = !DILocation(line: 6374, column: 24, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 6373, column: 2)
!9973 = !DILocation(line: 6374, column: 22, scope: !9972)
!9974 = !DILocation(line: 6375, column: 26, scope: !9972)
!9975 = !DILocation(line: 6378, column: 36, scope: !9944)
!9976 = !DILocation(line: 6378, column: 34, scope: !9944)
!9977 = !DILocation(line: 6379, column: 5, scope: !9944)
!9978 = !DILocation(line: 6380, column: 41, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 6380, column: 12)
!9980 = !DILocation(line: 6380, column: 12, scope: !9940)
!9981 = !DILocation(line: 6384, column: 28, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 6381, column: 5)
!9983 = !DILocation(line: 6384, column: 68, scope: !9982)
!9984 = !DILocation(line: 6384, column: 2, scope: !9982)
!9985 = !DILocation(line: 6383, column: 29, scope: !9982)
!9986 = !DILocation(line: 6385, column: 27, scope: !9982)
!9987 = !DILocation(line: 6385, column: 25, scope: !9982)
!9988 = !DILocation(line: 6386, column: 34, scope: !9982)
!9989 = !DILocation(line: 6387, column: 5, scope: !9982)
!9990 = !DILocation(line: 6391, column: 26, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 6389, column: 5)
!9992 = !DILocation(line: 6392, column: 35, scope: !9991)
!9993 = !DILocation(line: 6394, column: 1, scope: !9823)
!9994 = distinct !DISubprogram(name: "push_init_level", scope: !3, file: !3, line: 6402, type: !9995, scopeLine: 6403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9997)
!9995 = !DISubroutineType(types: !9996)
!9996 = !{null, !453}
!9997 = !{!9998, !9999, !10000}
!9998 = !DILocalVariable(name: "implicit", arg: 1, scope: !9994, file: !3, line: 6402, type: !453)
!9999 = !DILocalVariable(name: "p", scope: !9994, file: !3, line: 6404, type: !1883)
!10000 = !DILocalVariable(name: "value", scope: !9994, file: !3, line: 6405, type: !460)
!10001 = !DILocation(line: 0, scope: !9994)
!10002 = !DILocation(line: 6413, column: 7, scope: !9994)
!10003 = !DILocation(line: 6415, column: 7, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 6414, column: 5)
!10005 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6413, column: 7)
!10006 = !DILocation(line: 6415, column: 14, scope: !10004)
!10007 = !DILocation(line: 6415, column: 33, scope: !10004)
!10008 = !DILocation(line: 6417, column: 9, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 6417, column: 8)
!10010 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 6416, column: 2)
!10011 = !DILocation(line: 6417, column: 38, scope: !10009)
!10012 = !DILocation(line: 6418, column: 9, scope: !10009)
!10013 = !DILocation(line: 6418, column: 41, scope: !10009)
!10014 = !DILocation(line: 6419, column: 8, scope: !10009)
!10015 = !DILocation(line: 6419, column: 11, scope: !10009)
!10016 = !DILocation(line: 6419, column: 30, scope: !10009)
!10017 = !DILocation(line: 6417, column: 8, scope: !10010)
!10018 = !DILocation(line: 6420, column: 28, scope: !10009)
!10019 = !DILocation(line: 6420, column: 6, scope: !10009)
!10020 = !DILocation(line: 6421, column: 42, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 6421, column: 13)
!10022 = !DILocation(line: 6422, column: 9, scope: !10021)
!10023 = !DILocation(line: 6422, column: 6, scope: !10021)
!10024 = !DILocation(line: 6424, column: 12, scope: !10021)
!10025 = !DILocation(line: 6423, column: 9, scope: !10021)
!10026 = !DILocation(line: 6421, column: 13, scope: !10009)
!10027 = !DILocation(line: 6425, column: 28, scope: !10021)
!10028 = !DILocation(line: 6425, column: 6, scope: !10021)
!10029 = distinct !{!10029, !10003, !10030}
!10030 = !DILocation(line: 6428, column: 2, scope: !10004)
!10031 = !DILocation(line: 6433, column: 7, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6433, column: 7)
!10033 = !DILocation(line: 6433, column: 7, scope: !9994)
!10034 = !DILocation(line: 6435, column: 12, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 6435, column: 11)
!10036 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 6434, column: 5)
!10037 = !DILocation(line: 6435, column: 41, scope: !10035)
!10038 = !DILocation(line: 6436, column: 5, scope: !10035)
!10039 = !DILocation(line: 6436, column: 37, scope: !10035)
!10040 = !DILocation(line: 6437, column: 4, scope: !10035)
!10041 = !DILocation(line: 6437, column: 7, scope: !10035)
!10042 = !DILocation(line: 6435, column: 11, scope: !10036)
!10043 = !DILocation(line: 6438, column: 10, scope: !10035)
!10044 = !DILocation(line: 6438, column: 2, scope: !10035)
!10045 = !DILocation(line: 6439, column: 45, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 6439, column: 16)
!10047 = !DILocation(line: 6439, column: 16, scope: !10035)
!10048 = !DILocation(line: 6440, column: 28, scope: !10046)
!10049 = !DILocation(line: 6440, column: 10, scope: !10046)
!10050 = !DILocation(line: 6440, column: 2, scope: !10046)
!10051 = !DILocation(line: 6443, column: 7, scope: !9994)
!10052 = !DILocation(line: 6444, column: 13, scope: !9994)
!10053 = !DILocation(line: 6444, column: 6, scope: !9994)
!10054 = !DILocation(line: 6444, column: 11, scope: !9994)
!10055 = !DILocation(line: 6445, column: 15, scope: !9994)
!10056 = !DILocation(line: 6445, column: 6, scope: !9994)
!10057 = !DILocation(line: 6445, column: 13, scope: !9994)
!10058 = !DILocation(line: 6446, column: 14, scope: !9994)
!10059 = !DILocation(line: 6446, column: 6, scope: !9994)
!10060 = !DILocation(line: 6446, column: 12, scope: !9994)
!10061 = !DILocation(line: 6447, column: 18, scope: !9994)
!10062 = !DILocation(line: 6447, column: 6, scope: !9994)
!10063 = !DILocation(line: 6447, column: 16, scope: !9994)
!10064 = !DILocation(line: 6448, column: 23, scope: !9994)
!10065 = !DILocation(line: 6448, column: 6, scope: !9994)
!10066 = !DILocation(line: 6448, column: 21, scope: !9994)
!10067 = !DILocation(line: 6449, column: 24, scope: !9994)
!10068 = !DILocation(line: 6449, column: 6, scope: !9994)
!10069 = !DILocation(line: 6449, column: 22, scope: !9994)
!10070 = !DILocation(line: 6450, column: 18, scope: !9994)
!10071 = !DILocation(line: 6450, column: 6, scope: !9994)
!10072 = !DILocation(line: 6450, column: 16, scope: !9994)
!10073 = !DILocation(line: 6451, column: 17, scope: !9994)
!10074 = !DILocation(line: 6451, column: 6, scope: !9994)
!10075 = !DILocation(line: 6451, column: 15, scope: !9994)
!10076 = !DILocation(line: 6452, column: 17, scope: !9994)
!10077 = !DILocation(line: 6452, column: 6, scope: !9994)
!10078 = !DILocation(line: 6452, column: 15, scope: !9994)
!10079 = !DILocation(line: 6453, column: 15, scope: !9994)
!10080 = !DILocation(line: 6453, column: 6, scope: !9994)
!10081 = !DILocation(line: 6453, column: 13, scope: !9994)
!10082 = !DILocation(line: 6454, column: 17, scope: !9994)
!10083 = !DILocation(line: 6454, column: 6, scope: !9994)
!10084 = !DILocation(line: 6454, column: 15, scope: !9994)
!10085 = !DILocation(line: 6455, column: 18, scope: !9994)
!10086 = !DILocation(line: 6455, column: 6, scope: !9994)
!10087 = !DILocation(line: 6455, column: 16, scope: !9994)
!10088 = !DILocation(line: 6456, column: 21, scope: !9994)
!10089 = !DILocation(line: 6456, column: 6, scope: !9994)
!10090 = !DILocation(line: 6456, column: 19, scope: !9994)
!10091 = !DILocation(line: 6457, column: 14, scope: !9994)
!10092 = !DILocation(line: 6457, column: 6, scope: !9994)
!10093 = !DILocation(line: 6457, column: 12, scope: !9994)
!10094 = !DILocation(line: 6458, column: 6, scope: !9994)
!10095 = !DILocation(line: 6458, column: 24, scope: !9994)
!10096 = !DILocation(line: 6458, column: 30, scope: !9994)
!10097 = !DILocation(line: 6459, column: 24, scope: !9994)
!10098 = !DILocation(line: 6459, column: 38, scope: !9994)
!10099 = !DILocation(line: 6460, column: 24, scope: !9994)
!10100 = !DILocation(line: 6460, column: 38, scope: !9994)
!10101 = !DILocation(line: 6461, column: 17, scope: !9994)
!10102 = !DILocation(line: 6461, column: 6, scope: !9994)
!10103 = !DILocation(line: 6461, column: 15, scope: !9994)
!10104 = !DILocation(line: 6462, column: 6, scope: !9994)
!10105 = !DILocation(line: 6462, column: 12, scope: !9994)
!10106 = !DILocation(line: 6463, column: 20, scope: !9994)
!10107 = !DILocation(line: 6463, column: 6, scope: !9994)
!10108 = !DILocation(line: 6463, column: 18, scope: !9994)
!10109 = !DILocation(line: 6464, column: 19, scope: !9994)
!10110 = !DILocation(line: 6464, column: 6, scope: !9994)
!10111 = !DILocation(line: 6464, column: 17, scope: !9994)
!10112 = !DILocation(line: 6465, column: 13, scope: !9994)
!10113 = !DILocation(line: 6465, column: 11, scope: !9994)
!10114 = !DILocation(line: 6466, column: 6, scope: !9994)
!10115 = !DILocation(line: 6466, column: 18, scope: !9994)
!10116 = !DILocation(line: 6467, column: 21, scope: !9994)
!10117 = !DILocation(line: 6469, column: 24, scope: !9994)
!10118 = !DILocation(line: 6470, column: 22, scope: !9994)
!10119 = !DILocation(line: 6471, column: 24, scope: !9994)
!10120 = !DILocation(line: 6472, column: 23, scope: !9994)
!10121 = !DILocation(line: 6472, column: 21, scope: !9994)
!10122 = !DILocation(line: 6473, column: 24, scope: !9994)
!10123 = !DILocation(line: 6474, column: 27, scope: !9994)
!10124 = !DILocation(line: 6475, column: 26, scope: !9994)
!10125 = !DILocation(line: 6476, column: 28, scope: !9994)
!10126 = !DILocation(line: 6477, column: 8, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6477, column: 7)
!10128 = !DILocation(line: 6477, column: 7, scope: !9994)
!10129 = !DILocation(line: 6479, column: 24, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 6478, column: 5)
!10131 = !DILocation(line: 6479, column: 22, scope: !10130)
!10132 = !DILocation(line: 6480, column: 31, scope: !10130)
!10133 = !DILocation(line: 6481, column: 24, scope: !10130)
!10134 = !DILocation(line: 6482, column: 28, scope: !10130)
!10135 = !DILocation(line: 6483, column: 5, scope: !10130)
!10136 = !DILocation(line: 6487, column: 7, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6487, column: 7)
!10138 = !DILocation(line: 6487, column: 24, scope: !10137)
!10139 = !DILocation(line: 6487, column: 7, scope: !9994)
!10140 = !DILocation(line: 6489, column: 12, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 6489, column: 12)
!10142 = !DILocation(line: 6489, column: 41, scope: !10141)
!10143 = !DILocation(line: 6490, column: 5, scope: !10141)
!10144 = !DILocation(line: 6490, column: 37, scope: !10141)
!10145 = !DILocation(line: 6489, column: 12, scope: !10137)
!10146 = !DILocation(line: 6493, column: 11, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 6493, column: 11)
!10148 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 6491, column: 5)
!10149 = !DILocation(line: 6493, column: 30, scope: !10147)
!10150 = !DILocation(line: 6493, column: 11, scope: !10148)
!10151 = !DILocation(line: 6494, column: 19, scope: !10147)
!10152 = !DILocation(line: 6494, column: 2, scope: !10147)
!10153 = !DILocation(line: 6497, column: 23, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10147, file: !3, line: 6496, column: 2)
!10155 = !DILocation(line: 6497, column: 21, scope: !10154)
!10156 = !DILocation(line: 6498, column: 4, scope: !10154)
!10157 = !DILocation(line: 6499, column: 21, scope: !10154)
!10158 = !DILocation(line: 6502, column: 41, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 6502, column: 12)
!10160 = !DILocation(line: 6502, column: 12, scope: !10141)
!10161 = !DILocation(line: 6504, column: 26, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 6503, column: 5)
!10163 = !DILocation(line: 6504, column: 24, scope: !10162)
!10164 = !DILocation(line: 6505, column: 40, scope: !10162)
!10165 = !DILocation(line: 6505, column: 26, scope: !10162)
!10166 = !DILocation(line: 6505, column: 7, scope: !10162)
!10167 = !DILocation(line: 6506, column: 24, scope: !10162)
!10168 = !DILocation(line: 6507, column: 5, scope: !10162)
!10169 = !DILocation(line: 6509, column: 7, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6509, column: 7)
!10171 = !DILocation(line: 6509, column: 24, scope: !10170)
!10172 = !DILocation(line: 6509, column: 7, scope: !9994)
!10173 = !DILocation(line: 6511, column: 7, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 6510, column: 5)
!10175 = !DILocation(line: 6512, column: 26, scope: !10174)
!10176 = !DILocation(line: 6513, column: 35, scope: !10174)
!10177 = !DILocation(line: 6514, column: 7, scope: !10174)
!10178 = !DILocation(line: 6517, column: 7, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6517, column: 7)
!10180 = !DILocation(line: 6517, column: 13, scope: !10179)
!10181 = !DILocation(line: 6517, column: 16, scope: !10179)
!10182 = !DILocation(line: 6517, column: 34, scope: !10179)
!10183 = !DILocation(line: 6517, column: 7, scope: !9994)
!10184 = !DILocation(line: 6519, column: 30, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 6518, column: 5)
!10186 = !DILocation(line: 6519, column: 28, scope: !10185)
!10187 = !DILocation(line: 6520, column: 28, scope: !10185)
!10188 = !DILocation(line: 6520, column: 26, scope: !10185)
!10189 = !DILocation(line: 6521, column: 30, scope: !10185)
!10190 = !DILocation(line: 6521, column: 28, scope: !10185)
!10191 = !DILocation(line: 6522, column: 30, scope: !10185)
!10192 = !DILocation(line: 6522, column: 28, scope: !10185)
!10193 = !DILocation(line: 6523, column: 12, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 6523, column: 11)
!10195 = !DILocation(line: 6524, column: 4, scope: !10194)
!10196 = !DILocation(line: 6524, column: 8, scope: !10194)
!10197 = !DILocation(line: 6524, column: 37, scope: !10194)
!10198 = !DILocation(line: 6525, column: 8, scope: !10194)
!10199 = !DILocation(line: 6525, column: 40, scope: !10194)
!10200 = !DILocation(line: 6523, column: 11, scope: !10185)
!10201 = !DILocation(line: 6526, column: 2, scope: !10194)
!10202 = !DILocation(line: 6529, column: 16, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6529, column: 7)
!10204 = !DILocation(line: 6529, column: 24, scope: !10203)
!10205 = !DILocation(line: 6529, column: 21, scope: !10203)
!10206 = !DILocation(line: 6529, column: 48, scope: !10203)
!10207 = !DILocation(line: 6531, column: 32, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 6530, column: 5)
!10209 = !DILocation(line: 6532, column: 7, scope: !10208)
!10210 = !DILocation(line: 6533, column: 5, scope: !10208)
!10211 = !DILocation(line: 6535, column: 7, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 6535, column: 7)
!10213 = !DILocation(line: 6535, column: 36, scope: !10212)
!10214 = !DILocation(line: 6536, column: 5, scope: !10212)
!10215 = !DILocation(line: 6536, column: 37, scope: !10212)
!10216 = !DILocation(line: 6535, column: 7, scope: !9994)
!10217 = !DILocation(line: 6538, column: 28, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 6537, column: 5)
!10219 = !DILocation(line: 6540, column: 7, scope: !10218)
!10220 = !DILocation(line: 0, scope: !10218)
!10221 = !DILocation(line: 6540, column: 33, scope: !10218)
!10222 = !DILocation(line: 6540, column: 38, scope: !10218)
!10223 = !DILocation(line: 6540, column: 41, scope: !10218)
!10224 = !DILocation(line: 6541, column: 7, scope: !10218)
!10225 = !DILocation(line: 6541, column: 10, scope: !10218)
!10226 = !DILocation(line: 6541, column: 41, scope: !10218)
!10227 = !DILocation(line: 6542, column: 23, scope: !10218)
!10228 = distinct !{!10228, !10219, !10227}
!10229 = !DILocation(line: 6544, column: 35, scope: !10218)
!10230 = !DILocation(line: 6545, column: 31, scope: !10218)
!10231 = !DILocation(line: 6545, column: 29, scope: !10218)
!10232 = !DILocation(line: 6546, column: 5, scope: !10218)
!10233 = !DILocation(line: 6547, column: 41, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 6547, column: 12)
!10235 = !DILocation(line: 6547, column: 12, scope: !10212)
!10236 = !DILocation(line: 6551, column: 28, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 6548, column: 5)
!10238 = !DILocation(line: 6551, column: 68, scope: !10237)
!10239 = !DILocation(line: 6551, column: 2, scope: !10237)
!10240 = !DILocation(line: 6550, column: 29, scope: !10237)
!10241 = !DILocation(line: 6552, column: 36, scope: !10237)
!10242 = !DILocation(line: 6552, column: 49, scope: !10237)
!10243 = !DILocation(line: 6552, column: 27, scope: !10237)
!10244 = !DILocation(line: 6552, column: 25, scope: !10237)
!10245 = !DILocation(line: 6553, column: 36, scope: !10237)
!10246 = !DILocation(line: 6553, column: 34, scope: !10237)
!10247 = !DILocation(line: 6554, column: 5, scope: !10237)
!10248 = !DILocation(line: 6555, column: 41, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 6555, column: 12)
!10250 = !DILocation(line: 6555, column: 12, scope: !10234)
!10251 = !DILocation(line: 6557, column: 11, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !3, line: 6557, column: 11)
!10253 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 6556, column: 5)
!10254 = !DILocation(line: 6557, column: 11, scope: !10253)
!10255 = !DILocation(line: 6560, column: 8, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 6558, column: 2)
!10257 = !DILocation(line: 6560, column: 6, scope: !10256)
!10258 = !DILocation(line: 6563, column: 30, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 6563, column: 8)
!10260 = !DILocation(line: 6564, column: 8, scope: !10259)
!10261 = !DILocation(line: 6564, column: 11, scope: !10259)
!10262 = !DILocation(line: 6563, column: 8, scope: !10256)
!10263 = !DILocation(line: 6565, column: 30, scope: !10259)
!10264 = !DILocation(line: 6565, column: 28, scope: !10259)
!10265 = !DILocation(line: 6565, column: 6, scope: !10259)
!10266 = !DILocation(line: 6570, column: 8, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 6570, column: 8)
!10268 = !DILocation(line: 6571, column: 8, scope: !10267)
!10269 = !DILocation(line: 6571, column: 11, scope: !10267)
!10270 = !DILocation(line: 6571, column: 45, scope: !10267)
!10271 = !DILocation(line: 6570, column: 8, scope: !10256)
!10272 = !DILocation(line: 6572, column: 30, scope: !10267)
!10273 = !DILocation(line: 6572, column: 28, scope: !10267)
!10274 = !DILocation(line: 6572, column: 6, scope: !10267)
!10275 = !DILocation(line: 6575, column: 17, scope: !10256)
!10276 = !DILocation(line: 6576, column: 10, scope: !10256)
!10277 = !DILocation(line: 6575, column: 8, scope: !10256)
!10278 = !DILocation(line: 6575, column: 6, scope: !10256)
!10279 = !DILocation(line: 6577, column: 2, scope: !10256)
!10280 = !DILocation(line: 6579, column: 22, scope: !10252)
!10281 = !DILocation(line: 6579, column: 20, scope: !10252)
!10282 = !DILocation(line: 6581, column: 36, scope: !10253)
!10283 = !DILocation(line: 6581, column: 34, scope: !10253)
!10284 = !DILocation(line: 6582, column: 17, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10253, file: !3, line: 6582, column: 11)
!10286 = !DILocation(line: 6582, column: 20, scope: !10285)
!10287 = !DILocation(line: 6582, column: 38, scope: !10285)
!10288 = !DILocation(line: 6582, column: 11, scope: !10253)
!10289 = !DILocation(line: 6587, column: 4, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 6583, column: 2)
!10291 = !DILocation(line: 6588, column: 2, scope: !10290)
!10292 = !DILocation(line: 6592, column: 31, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 6592, column: 11)
!10294 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 6591, column: 5)
!10295 = !DILocation(line: 6592, column: 28, scope: !10293)
!10296 = !DILocation(line: 6592, column: 11, scope: !10294)
!10297 = !DILocation(line: 6593, column: 2, scope: !10293)
!10298 = !DILocation(line: 6594, column: 28, scope: !10294)
!10299 = !DILocation(line: 6594, column: 26, scope: !10294)
!10300 = !DILocation(line: 6595, column: 35, scope: !10294)
!10301 = !DILocation(line: 6597, column: 1, scope: !9994)
!10302 = distinct !DISubprogram(name: "process_init_element", scope: !3, file: !3, line: 7751, type: !10303, scopeLine: 7752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10305)
!10303 = !DISubroutineType(types: !10304)
!10304 = !{null, !1909, !452}
!10305 = !{!10306, !10307, !10308, !10309, !10310, !10311, !10316, !10320, !10321, !10324, !10325, !10328, !10329, !10332, !10335, !10336}
!10306 = !DILocalVariable(name: "value", arg: 1, scope: !10302, file: !3, line: 7751, type: !1909)
!10307 = !DILocalVariable(name: "implicit", arg: 2, scope: !10302, file: !3, line: 7751, type: !452)
!10308 = !DILocalVariable(name: "orig_value", scope: !10302, file: !3, line: 7753, type: !460)
!10309 = !DILocalVariable(name: "string_flag", scope: !10302, file: !3, line: 7754, type: !453)
!10310 = !DILocalVariable(name: "strict_string", scope: !10302, file: !3, line: 7755, type: !452)
!10311 = !DILocalVariable(name: "semantic_type", scope: !10312, file: !3, line: 7812, type: !460)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 7811, column: 2)
!10313 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 7808, column: 11)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !3, line: 7805, column: 5)
!10315 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 7804, column: 7)
!10316 = !DILocalVariable(name: "fieldtype", scope: !10317, file: !3, line: 7829, type: !460)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 7828, column: 2)
!10318 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 7827, column: 11)
!10319 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 7826, column: 5)
!10320 = !DILocalVariable(name: "fieldcode", scope: !10317, file: !3, line: 7830, type: !134)
!10321 = !DILocalVariable(name: "fieldtype", scope: !10322, file: !3, line: 7914, type: !460)
!10322 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 7913, column: 2)
!10323 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 7912, column: 16)
!10324 = !DILocalVariable(name: "fieldcode", scope: !10322, file: !3, line: 7915, type: !134)
!10325 = !DILocalVariable(name: "elttype", scope: !10326, file: !3, line: 7983, type: !460)
!10326 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 7982, column: 2)
!10327 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 7981, column: 16)
!10328 = !DILocalVariable(name: "eltcode", scope: !10326, file: !3, line: 7984, type: !134)
!10329 = !DILocalVariable(name: "elttype", scope: !10330, file: !3, line: 8035, type: !460)
!10330 = distinct !DILexicalBlock(scope: !10331, file: !3, line: 8034, column: 2)
!10331 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 8033, column: 16)
!10332 = !DILocalVariable(name: "p", scope: !10333, file: !3, line: 8089, type: !1915)
!10333 = distinct !DILexicalBlock(scope: !10334, file: !3, line: 8088, column: 2)
!10334 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 8087, column: 11)
!10335 = !DILocalVariable(name: "range_stack", scope: !10333, file: !3, line: 8089, type: !1915)
!10336 = !DILocalVariable(name: "finish", scope: !10333, file: !3, line: 8090, type: !453)
!10337 = !DILocation(line: 7751, column: 37, scope: !10302)
!10338 = !DILocation(line: 0, scope: !10302)
!10339 = !DILocation(line: 7753, column: 27, scope: !10302)
!10340 = !DILocation(line: 7754, column: 32, scope: !10302)
!10341 = !DILocation(line: 7754, column: 37, scope: !10302)
!10342 = !DILocation(line: 7754, column: 40, scope: !10302)
!10343 = !DILocation(line: 7754, column: 63, scope: !10302)
!10344 = !DILocation(line: 7755, column: 30, scope: !10302)
!10345 = !DILocation(line: 7755, column: 44, scope: !10302)
!10346 = !DILocation(line: 7755, column: 24, scope: !10302)
!10347 = !DILocation(line: 7757, column: 20, scope: !10302)
!10348 = !DILocation(line: 7758, column: 24, scope: !10302)
!10349 = !DILocation(line: 7763, column: 10, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 7762, column: 7)
!10351 = !DILocation(line: 7763, column: 7, scope: !10350)
!10352 = !DILocation(line: 7764, column: 10, scope: !10350)
!10353 = !DILocation(line: 7764, column: 39, scope: !10350)
!10354 = !DILocation(line: 7765, column: 7, scope: !10350)
!10355 = !DILocation(line: 7765, column: 10, scope: !10350)
!10356 = !DILocation(line: 7766, column: 7, scope: !10350)
!10357 = !DILocation(line: 7766, column: 25, scope: !10350)
!10358 = !DILocation(line: 7766, column: 10, scope: !10350)
!10359 = !DILocation(line: 7762, column: 7, scope: !10302)
!10360 = !DILocation(line: 7768, column: 11, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 7768, column: 11)
!10362 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 7767, column: 5)
!10363 = !DILocation(line: 7768, column: 48, scope: !10361)
!10364 = !DILocation(line: 7768, column: 11, scope: !10362)
!10365 = !DILocation(line: 7769, column: 2, scope: !10361)
!10366 = !DILocation(line: 7770, column: 7, scope: !10362)
!10367 = !DILocation(line: 7770, column: 26, scope: !10362)
!10368 = !DILocation(line: 7770, column: 46, scope: !10362)
!10369 = !DILocation(line: 7771, column: 7, scope: !10362)
!10370 = !DILocation(line: 7774, column: 7, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 7774, column: 7)
!10372 = !DILocation(line: 7774, column: 44, scope: !10371)
!10373 = !DILocation(line: 7774, column: 50, scope: !10371)
!10374 = !DILocation(line: 7774, column: 7, scope: !10302)
!10375 = !DILocation(line: 7776, column: 7, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 7775, column: 5)
!10377 = !DILocation(line: 7777, column: 7, scope: !10376)
!10378 = !DILocation(line: 7782, column: 7, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 7782, column: 7)
!10380 = !DILocation(line: 7782, column: 24, scope: !10379)
!10381 = !DILocation(line: 7782, column: 7, scope: !10302)
!10382 = !DILocation(line: 7787, column: 3, scope: !10302)
!10383 = !DILocation(line: 7787, column: 10, scope: !10302)
!10384 = !DILocation(line: 7787, column: 29, scope: !10302)
!10385 = !DILocation(line: 7789, column: 12, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 7789, column: 11)
!10387 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 7788, column: 5)
!10388 = !DILocation(line: 7789, column: 41, scope: !10386)
!10389 = !DILocation(line: 7790, column: 5, scope: !10386)
!10390 = !DILocation(line: 7790, column: 37, scope: !10386)
!10391 = !DILocation(line: 7791, column: 4, scope: !10386)
!10392 = !DILocation(line: 7791, column: 7, scope: !10386)
!10393 = !DILocation(line: 7791, column: 26, scope: !10386)
!10394 = !DILocation(line: 7789, column: 11, scope: !10387)
!10395 = !DILocation(line: 7792, column: 24, scope: !10386)
!10396 = !DILocation(line: 7792, column: 2, scope: !10386)
!10397 = !DILocation(line: 7794, column: 10, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 7793, column: 16)
!10399 = !DILocation(line: 7795, column: 13, scope: !10398)
!10400 = !DILocation(line: 7795, column: 35, scope: !10398)
!10401 = !DILocation(line: 7796, column: 6, scope: !10398)
!10402 = !DILocation(line: 7797, column: 12, scope: !10398)
!10403 = !DILocation(line: 7796, column: 9, scope: !10398)
!10404 = !DILocation(line: 7793, column: 16, scope: !10386)
!10405 = !DILocation(line: 7798, column: 24, scope: !10398)
!10406 = !DILocation(line: 7798, column: 2, scope: !10398)
!10407 = distinct !{!10407, !10382, !10408}
!10408 = !DILocation(line: 7801, column: 5, scope: !10302)
!10409 = !DILocation(line: 7804, column: 7, scope: !10315)
!10410 = !DILocation(line: 7804, column: 7, scope: !10302)
!10411 = !DILocation(line: 7808, column: 11, scope: !10313)
!10412 = !DILocation(line: 7808, column: 35, scope: !10313)
!10413 = !DILocation(line: 7809, column: 8, scope: !10313)
!10414 = !DILocation(line: 7809, column: 4, scope: !10313)
!10415 = !DILocation(line: 7810, column: 7, scope: !10313)
!10416 = !DILocation(line: 0, scope: !10312)
!10417 = !DILocation(line: 7813, column: 32, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 7813, column: 8)
!10419 = !DILocation(line: 7813, column: 8, scope: !10312)
!10420 = !DILocation(line: 7815, column: 24, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 7814, column: 6)
!10422 = !DILocation(line: 7816, column: 22, scope: !10421)
!10423 = !DILocation(line: 7816, column: 20, scope: !10421)
!10424 = !DILocation(line: 7817, column: 6, scope: !10421)
!10425 = !DILocation(line: 7818, column: 37, scope: !10312)
!10426 = !DILocation(line: 7818, column: 18, scope: !10312)
!10427 = !DILocation(line: 7818, column: 16, scope: !10312)
!10428 = !DILocation(line: 7819, column: 8, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 7819, column: 8)
!10430 = !DILocation(line: 7819, column: 8, scope: !10312)
!10431 = !DILocation(line: 7820, column: 20, scope: !10429)
!10432 = !DILocation(line: 7820, column: 18, scope: !10429)
!10433 = !DILocation(line: 7820, column: 6, scope: !10429)
!10434 = !DILocation(line: 0, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 8078, column: 8)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 8077, column: 2)
!10437 = distinct !DILexicalBlock(scope: !10331, file: !3, line: 8069, column: 16)
!10438 = !DILocation(line: 0, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 7939, column: 8)
!10440 = !DILocation(line: 7825, column: 3, scope: !10302)
!10441 = !DILocation(line: 7827, column: 11, scope: !10318)
!10442 = !DILocation(line: 7827, column: 40, scope: !10318)
!10443 = !DILocation(line: 7827, column: 11, scope: !10319)
!10444 = !DILocation(line: 7832, column: 8, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 7832, column: 8)
!10446 = !DILocation(line: 7832, column: 27, scope: !10445)
!10447 = !DILocation(line: 7832, column: 8, scope: !10317)
!10448 = !DILocation(line: 7834, column: 22, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 7833, column: 6)
!10450 = !DILocation(line: 7834, column: 8, scope: !10449)
!10451 = !DILocation(line: 7836, column: 8, scope: !10449)
!10452 = !DILocation(line: 7839, column: 16, scope: !10317)
!10453 = !DILocation(line: 0, scope: !10317)
!10454 = !DILocation(line: 7840, column: 21, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 7840, column: 8)
!10456 = !DILocation(line: 7840, column: 18, scope: !10455)
!10457 = !DILocation(line: 7840, column: 8, scope: !10317)
!10458 = !DILocation(line: 7841, column: 18, scope: !10455)
!10459 = !DILocation(line: 7841, column: 6, scope: !10455)
!10460 = !DILocation(line: 7842, column: 16, scope: !10317)
!10461 = !DILocation(line: 7845, column: 18, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 7845, column: 8)
!10463 = !DILocation(line: 7846, column: 12, scope: !10462)
!10464 = !DILocation(line: 7846, column: 8, scope: !10462)
!10465 = !DILocation(line: 7847, column: 11, scope: !10462)
!10466 = !DILocation(line: 7847, column: 33, scope: !10462)
!10467 = !DILocation(line: 7848, column: 8, scope: !10462)
!10468 = !DILocation(line: 7848, column: 11, scope: !10462)
!10469 = !DILocation(line: 7848, column: 43, scope: !10462)
!10470 = !DILocation(line: 7845, column: 8, scope: !10317)
!10471 = !DILocation(line: 7850, column: 8, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 7849, column: 6)
!10473 = !DILocation(line: 7851, column: 8, scope: !10472)
!10474 = !DILocation(line: 7855, column: 14, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 7855, column: 8)
!10476 = !DILocation(line: 7855, column: 20, scope: !10475)
!10477 = !DILocation(line: 7856, column: 21, scope: !10475)
!10478 = !DILocation(line: 7856, column: 8, scope: !10475)
!10479 = !DILocation(line: 7857, column: 11, scope: !10475)
!10480 = !DILocation(line: 7858, column: 8, scope: !10475)
!10481 = !DILocation(line: 7855, column: 8, scope: !10317)
!10482 = !DILocation(line: 7859, column: 18, scope: !10475)
!10483 = !DILocation(line: 7859, column: 6, scope: !10475)
!10484 = !DILocation(line: 7862, column: 25, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 7862, column: 13)
!10486 = !DILocation(line: 7863, column: 6, scope: !10485)
!10487 = !DILocation(line: 7863, column: 21, scope: !10485)
!10488 = !DILocation(line: 7864, column: 6, scope: !10485)
!10489 = !DILocation(line: 7864, column: 9, scope: !10485)
!10490 = !DILocation(line: 7864, column: 53, scope: !10485)
!10491 = !DILocation(line: 7865, column: 35, scope: !10485)
!10492 = !DILocation(line: 7865, column: 6, scope: !10485)
!10493 = !DILocation(line: 7868, column: 8, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10485, file: !3, line: 7867, column: 6)
!10495 = !DILocation(line: 7869, column: 8, scope: !10494)
!10496 = distinct !{!10496, !10440, !10497}
!10497 = !DILocation(line: 8136, column: 5, scope: !10302)
!10498 = !DILocation(line: 7872, column: 14, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 7872, column: 8)
!10500 = !DILocation(line: 7872, column: 8, scope: !10499)
!10501 = !DILocation(line: 7872, column: 8, scope: !10317)
!10502 = !DILocation(line: 7874, column: 8, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 7873, column: 6)
!10504 = !DILocation(line: 7875, column: 48, scope: !10503)
!10505 = !DILocation(line: 7877, column: 8, scope: !10503)
!10506 = !DILocation(line: 7875, column: 8, scope: !10503)
!10507 = !DILocation(line: 7878, column: 8, scope: !10503)
!10508 = !DILocation(line: 7879, column: 6, scope: !10503)
!10509 = !DILocation(line: 7885, column: 12, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 7885, column: 12)
!10511 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 7883, column: 6)
!10512 = !DILocation(line: 7885, column: 12, scope: !10511)
!10513 = !DILocation(line: 7887, column: 23, scope: !10510)
!10514 = !DILocation(line: 7888, column: 9, scope: !10510)
!10515 = !DILocation(line: 7889, column: 9, scope: !10510)
!10516 = !DILocation(line: 7887, column: 7, scope: !10510)
!10517 = !DILocation(line: 7887, column: 5, scope: !10510)
!10518 = !DILocation(line: 7893, column: 43, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 7893, column: 12)
!10520 = !DILocation(line: 7886, column: 3, scope: !10510)
!10521 = !DILocation(line: 7893, column: 12, scope: !10519)
!10522 = !DILocation(line: 7893, column: 40, scope: !10519)
!10523 = !DILocation(line: 7893, column: 12, scope: !10511)
!10524 = !DILocation(line: 7897, column: 5, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 7894, column: 3)
!10526 = !DILocation(line: 0, scope: !10525)
!10527 = !DILocation(line: 7897, column: 40, scope: !10525)
!10528 = !DILocation(line: 7898, column: 5, scope: !10525)
!10529 = !DILocation(line: 7898, column: 8, scope: !10525)
!10530 = !DILocation(line: 7899, column: 5, scope: !10525)
!10531 = !DILocation(line: 7899, column: 8, scope: !10525)
!10532 = !DILocation(line: 7899, column: 48, scope: !10525)
!10533 = distinct !{!10533, !10524, !10534}
!10534 = !DILocation(line: 7901, column: 9, scope: !10525)
!10535 = !DILocation(line: 7907, column: 4, scope: !10317)
!10536 = !DILocation(line: 7907, column: 30, scope: !10317)
!10537 = !DILocation(line: 7908, column: 4, scope: !10317)
!10538 = !DILocation(line: 7908, column: 7, scope: !10317)
!10539 = !DILocation(line: 7909, column: 4, scope: !10317)
!10540 = !DILocation(line: 7909, column: 7, scope: !10317)
!10541 = !DILocation(line: 7909, column: 38, scope: !10317)
!10542 = distinct !{!10542, !10535, !10543}
!10543 = !DILocation(line: 7910, column: 27, scope: !10317)
!10544 = !DILocation(line: 7912, column: 45, scope: !10323)
!10545 = !DILocation(line: 7912, column: 16, scope: !10318)
!10546 = !DILocation(line: 7917, column: 8, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 7917, column: 8)
!10548 = !DILocation(line: 7917, column: 27, scope: !10547)
!10549 = !DILocation(line: 7917, column: 8, scope: !10322)
!10550 = !DILocation(line: 7919, column: 22, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 7918, column: 6)
!10552 = !DILocation(line: 7919, column: 8, scope: !10551)
!10553 = !DILocation(line: 7921, column: 8, scope: !10551)
!10554 = !DILocation(line: 7924, column: 16, scope: !10322)
!10555 = !DILocation(line: 0, scope: !10322)
!10556 = !DILocation(line: 7925, column: 21, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 7925, column: 8)
!10558 = !DILocation(line: 7925, column: 18, scope: !10557)
!10559 = !DILocation(line: 7925, column: 8, scope: !10322)
!10560 = !DILocation(line: 7926, column: 18, scope: !10557)
!10561 = !DILocation(line: 7926, column: 6, scope: !10557)
!10562 = !DILocation(line: 7927, column: 16, scope: !10322)
!10563 = !DILocation(line: 7939, column: 9, scope: !10439)
!10564 = !DILocation(line: 7939, column: 30, scope: !10439)
!10565 = !DILocation(line: 7939, column: 26, scope: !10439)
!10566 = !DILocation(line: 7940, column: 19, scope: !10439)
!10567 = !DILocation(line: 7940, column: 13, scope: !10439)
!10568 = !DILocation(line: 7940, column: 25, scope: !10439)
!10569 = !DILocation(line: 7940, column: 29, scope: !10439)
!10570 = !DILocation(line: 7941, column: 8, scope: !10439)
!10571 = !DILocation(line: 7941, column: 29, scope: !10439)
!10572 = !DILocation(line: 7941, column: 11, scope: !10439)
!10573 = !DILocation(line: 7939, column: 8, scope: !10322)
!10574 = !DILocation(line: 7942, column: 6, scope: !10439)
!10575 = !DILocation(line: 7946, column: 14, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 7946, column: 8)
!10577 = !DILocation(line: 7946, column: 20, scope: !10576)
!10578 = !DILocation(line: 7947, column: 21, scope: !10576)
!10579 = !DILocation(line: 7947, column: 8, scope: !10576)
!10580 = !DILocation(line: 7948, column: 11, scope: !10576)
!10581 = !DILocation(line: 7949, column: 8, scope: !10576)
!10582 = !DILocation(line: 7946, column: 8, scope: !10322)
!10583 = !DILocation(line: 7950, column: 18, scope: !10576)
!10584 = !DILocation(line: 7950, column: 6, scope: !10576)
!10585 = !DILocation(line: 7953, column: 25, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 7953, column: 13)
!10587 = !DILocation(line: 7954, column: 6, scope: !10586)
!10588 = !DILocation(line: 7954, column: 24, scope: !10586)
!10589 = !DILocation(line: 7954, column: 21, scope: !10586)
!10590 = !DILocation(line: 7955, column: 6, scope: !10586)
!10591 = !DILocation(line: 7955, column: 9, scope: !10586)
!10592 = !DILocation(line: 7955, column: 53, scope: !10586)
!10593 = !DILocation(line: 7956, column: 35, scope: !10586)
!10594 = !DILocation(line: 7956, column: 6, scope: !10586)
!10595 = !DILocation(line: 7959, column: 8, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 7958, column: 6)
!10597 = !DILocation(line: 7960, column: 8, scope: !10596)
!10598 = !DILocation(line: 7963, column: 14, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 7963, column: 8)
!10600 = !DILocation(line: 7963, column: 8, scope: !10599)
!10601 = !DILocation(line: 0, scope: !10599)
!10602 = !DILocation(line: 7963, column: 8, scope: !10322)
!10603 = !DILocation(line: 7965, column: 8, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 7964, column: 6)
!10605 = !DILocation(line: 7966, column: 35, scope: !10604)
!10606 = !DILocation(line: 7966, column: 48, scope: !10604)
!10607 = !DILocation(line: 7968, column: 8, scope: !10604)
!10608 = !DILocation(line: 7966, column: 8, scope: !10604)
!10609 = !DILocation(line: 7969, column: 8, scope: !10604)
!10610 = !DILocation(line: 7970, column: 6, scope: !10604)
!10611 = !DILocation(line: 7975, column: 32, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 7974, column: 6)
!10613 = !DILocation(line: 7975, column: 30, scope: !10612)
!10614 = !DILocation(line: 7976, column: 38, scope: !10612)
!10615 = !DILocation(line: 7976, column: 36, scope: !10612)
!10616 = !DILocation(line: 7979, column: 23, scope: !10322)
!10617 = !DILocation(line: 7980, column: 2, scope: !10323)
!10618 = !DILocation(line: 7981, column: 45, scope: !10327)
!10619 = !DILocation(line: 7981, column: 16, scope: !10323)
!10620 = !DILocation(line: 7983, column: 19, scope: !10326)
!10621 = !DILocation(line: 0, scope: !10326)
!10622 = !DILocation(line: 7984, column: 29, scope: !10326)
!10623 = !DILocation(line: 7987, column: 14, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 7987, column: 8)
!10625 = !DILocation(line: 7987, column: 20, scope: !10624)
!10626 = !DILocation(line: 7988, column: 19, scope: !10624)
!10627 = !DILocation(line: 7988, column: 8, scope: !10624)
!10628 = !DILocation(line: 7989, column: 11, scope: !10624)
!10629 = !DILocation(line: 7990, column: 8, scope: !10624)
!10630 = !DILocation(line: 7987, column: 8, scope: !10326)
!10631 = !DILocation(line: 7991, column: 18, scope: !10624)
!10632 = !DILocation(line: 7991, column: 6, scope: !10624)
!10633 = !DILocation(line: 7994, column: 25, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 7994, column: 13)
!10635 = !DILocation(line: 7995, column: 6, scope: !10634)
!10636 = !DILocation(line: 7995, column: 24, scope: !10634)
!10637 = !DILocation(line: 7995, column: 21, scope: !10634)
!10638 = !DILocation(line: 7996, column: 6, scope: !10634)
!10639 = !DILocation(line: 7996, column: 9, scope: !10634)
!10640 = !DILocation(line: 7996, column: 53, scope: !10634)
!10641 = !DILocation(line: 7997, column: 33, scope: !10634)
!10642 = !DILocation(line: 7997, column: 6, scope: !10634)
!10643 = !DILocation(line: 8000, column: 8, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10634, file: !3, line: 7999, column: 6)
!10645 = !DILocation(line: 8001, column: 8, scope: !10644)
!10646 = !DILocation(line: 8004, column: 8, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 8004, column: 8)
!10648 = !DILocation(line: 8004, column: 30, scope: !10647)
!10649 = !DILocation(line: 8005, column: 8, scope: !10647)
!10650 = !DILocation(line: 8005, column: 52, scope: !10647)
!10651 = !DILocation(line: 8005, column: 12, scope: !10647)
!10652 = !DILocation(line: 8006, column: 5, scope: !10647)
!10653 = !DILocation(line: 8006, column: 27, scope: !10647)
!10654 = !DILocation(line: 8006, column: 8, scope: !10647)
!10655 = !DILocation(line: 8004, column: 8, scope: !10326)
!10656 = !DILocation(line: 8008, column: 22, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 8007, column: 6)
!10658 = !DILocation(line: 8008, column: 8, scope: !10657)
!10659 = !DILocation(line: 8010, column: 8, scope: !10657)
!10660 = !DILocation(line: 8014, column: 14, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 8014, column: 8)
!10662 = !DILocation(line: 8014, column: 8, scope: !10661)
!10663 = !DILocation(line: 8014, column: 8, scope: !10326)
!10664 = !DILocation(line: 8016, column: 41, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 8015, column: 6)
!10666 = !DILocation(line: 8016, column: 27, scope: !10665)
!10667 = !DILocation(line: 8016, column: 8, scope: !10665)
!10668 = !DILocation(line: 8017, column: 35, scope: !10665)
!10669 = !DILocation(line: 8017, column: 48, scope: !10665)
!10670 = !DILocation(line: 8019, column: 8, scope: !10665)
!10671 = !DILocation(line: 8017, column: 8, scope: !10665)
!10672 = !DILocation(line: 8020, column: 8, scope: !10665)
!10673 = !DILocation(line: 8021, column: 6, scope: !10665)
!10674 = !DILocation(line: 8024, column: 24, scope: !10326)
!10675 = !DILocation(line: 8025, column: 10, scope: !10326)
!10676 = !DILocation(line: 8025, column: 29, scope: !10326)
!10677 = !DILocation(line: 8024, column: 8, scope: !10326)
!10678 = !DILocation(line: 8024, column: 6, scope: !10326)
!10679 = !DILocation(line: 8027, column: 15, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 8027, column: 8)
!10681 = !DILocation(line: 8027, column: 9, scope: !10680)
!10682 = !DILocation(line: 8027, column: 8, scope: !10326)
!10683 = !DILocation(line: 8031, column: 33, scope: !10680)
!10684 = !DILocation(line: 8031, column: 6, scope: !10680)
!10685 = !DILocation(line: 8033, column: 45, scope: !10331)
!10686 = !DILocation(line: 8033, column: 16, scope: !10327)
!10687 = !DILocation(line: 8035, column: 19, scope: !10330)
!10688 = !DILocation(line: 0, scope: !10330)
!10689 = !DILocation(line: 8039, column: 25, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10330, file: !3, line: 8039, column: 8)
!10691 = !DILocation(line: 8039, column: 48, scope: !10690)
!10692 = !DILocation(line: 8039, column: 8, scope: !10690)
!10693 = !DILocation(line: 8039, column: 8, scope: !10330)
!10694 = !DILocation(line: 8041, column: 22, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10690, file: !3, line: 8040, column: 6)
!10696 = !DILocation(line: 8041, column: 8, scope: !10695)
!10697 = !DILocation(line: 8043, column: 8, scope: !10695)
!10698 = !DILocation(line: 8047, column: 14, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10330, file: !3, line: 8047, column: 8)
!10700 = !DILocation(line: 8047, column: 8, scope: !10699)
!10701 = !DILocation(line: 8047, column: 8, scope: !10330)
!10702 = !DILocation(line: 8049, column: 12, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 8049, column: 12)
!10704 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 8048, column: 6)
!10705 = !DILocation(line: 8049, column: 36, scope: !10703)
!10706 = !DILocation(line: 8049, column: 12, scope: !10704)
!10707 = !DILocation(line: 8050, column: 13, scope: !10703)
!10708 = !DILocation(line: 8050, column: 3, scope: !10703)
!10709 = !DILocation(line: 8051, column: 48, scope: !10704)
!10710 = !DILocation(line: 8053, column: 8, scope: !10704)
!10711 = !DILocation(line: 8051, column: 8, scope: !10704)
!10712 = !DILocation(line: 8054, column: 6, scope: !10704)
!10713 = !DILocation(line: 8057, column: 24, scope: !10330)
!10714 = !DILocation(line: 8058, column: 21, scope: !10330)
!10715 = !DILocation(line: 8058, column: 40, scope: !10330)
!10716 = !DILocation(line: 8057, column: 8, scope: !10330)
!10717 = !DILocation(line: 8057, column: 6, scope: !10330)
!10718 = !DILocation(line: 8060, column: 15, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10330, file: !3, line: 8060, column: 8)
!10720 = !DILocation(line: 8060, column: 9, scope: !10719)
!10721 = !DILocation(line: 8060, column: 8, scope: !10330)
!10722 = !DILocation(line: 8064, column: 33, scope: !10719)
!10723 = !DILocation(line: 8064, column: 6, scope: !10719)
!10724 = !DILocation(line: 8069, column: 36, scope: !10437)
!10725 = !DILocation(line: 8069, column: 33, scope: !10437)
!10726 = !DILocation(line: 8070, column: 12, scope: !10437)
!10727 = !DILocation(line: 8070, column: 31, scope: !10437)
!10728 = !DILocation(line: 8070, column: 9, scope: !10437)
!10729 = !DILocation(line: 8072, column: 18, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 8071, column: 2)
!10731 = !DILocation(line: 8072, column: 4, scope: !10730)
!10732 = !DILocation(line: 8074, column: 4, scope: !10730)
!10733 = !DILocation(line: 8078, column: 14, scope: !10435)
!10734 = !DILocation(line: 8078, column: 8, scope: !10435)
!10735 = !DILocation(line: 8078, column: 8, scope: !10436)
!10736 = !DILocation(line: 8079, column: 46, scope: !10435)
!10737 = !DILocation(line: 8079, column: 6, scope: !10435)
!10738 = !DILocation(line: 8082, column: 23, scope: !10436)
!10739 = !DILocation(line: 8087, column: 11, scope: !10334)
!10740 = !DILocation(line: 8087, column: 11, scope: !10319)
!10741 = !DILocation(line: 0, scope: !10333)
!10742 = !DILocation(line: 8093, column: 28, scope: !10333)
!10743 = !DILocation(line: 8094, column: 4, scope: !10333)
!10744 = !DILocation(line: 8094, column: 11, scope: !10333)
!10745 = !DILocation(line: 8094, column: 45, scope: !10333)
!10746 = !DILocation(line: 8094, column: 29, scope: !10333)
!10747 = !DILocation(line: 8099, column: 4, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 8099, column: 4)
!10749 = !DILocation(line: 8096, column: 8, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 8095, column: 6)
!10751 = !DILocation(line: 8097, column: 30, scope: !10750)
!10752 = !DILocation(line: 8097, column: 8, scope: !10750)
!10753 = distinct !{!10753, !10743, !10754}
!10754 = !DILocation(line: 8098, column: 6, scope: !10333)
!10755 = !DILocation(line: 0, scope: !10748)
!10756 = !DILocation(line: 8100, column: 13, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 8099, column: 4)
!10758 = !DILocation(line: 8100, column: 10, scope: !10757)
!10759 = !DILocation(line: 8100, column: 23, scope: !10757)
!10760 = !DILocation(line: 8100, column: 49, scope: !10757)
!10761 = !DILocation(line: 8100, column: 26, scope: !10757)
!10762 = !DILocation(line: 8103, column: 8, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 8102, column: 6)
!10764 = !DILocation(line: 8104, column: 30, scope: !10763)
!10765 = !DILocation(line: 8104, column: 8, scope: !10763)
!10766 = !DILocation(line: 8101, column: 16, scope: !10757)
!10767 = !DILocation(line: 8099, column: 4, scope: !10757)
!10768 = distinct !{!10768, !10747, !10769}
!10769 = !DILocation(line: 8105, column: 6, scope: !10748)
!10770 = !DILocation(line: 8107, column: 31, scope: !10333)
!10771 = !DILocation(line: 8108, column: 24, scope: !10333)
!10772 = !DILocation(line: 8108, column: 31, scope: !10333)
!10773 = !DILocation(line: 8107, column: 15, scope: !10333)
!10774 = !DILocation(line: 8107, column: 13, scope: !10333)
!10775 = !DILocation(line: 8109, column: 41, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 8109, column: 8)
!10777 = !DILocation(line: 8109, column: 8, scope: !10776)
!10778 = !DILocation(line: 8109, column: 52, scope: !10776)
!10779 = !DILocation(line: 8109, column: 59, scope: !10776)
!10780 = !DILocation(line: 8109, column: 56, scope: !10776)
!10781 = !DILocation(line: 8109, column: 8, scope: !10333)
!10782 = !DILocation(line: 8112, column: 4, scope: !10333)
!10783 = !DILocation(line: 8114, column: 31, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 8113, column: 6)
!10785 = !DILocation(line: 8114, column: 26, scope: !10784)
!10786 = !DILocation(line: 8115, column: 32, scope: !10784)
!10787 = !DILocation(line: 8115, column: 27, scope: !10784)
!10788 = !DILocation(line: 8116, column: 12, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 8116, column: 12)
!10790 = !DILocation(line: 8116, column: 19, scope: !10789)
!10791 = !DILocation(line: 8116, column: 25, scope: !10789)
!10792 = !DILocation(line: 8116, column: 22, scope: !10789)
!10793 = !DILocation(line: 8116, column: 35, scope: !10789)
!10794 = !DILocation(line: 8116, column: 53, scope: !10789)
!10795 = !DILocation(line: 8116, column: 47, scope: !10789)
!10796 = !DILocation(line: 8116, column: 12, scope: !10784)
!10797 = !DILocation(line: 8119, column: 8, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 8117, column: 3)
!10799 = !DILocation(line: 8119, column: 13, scope: !10798)
!10800 = !DILocation(line: 8120, column: 3, scope: !10798)
!10801 = !DILocation(line: 8121, column: 15, scope: !10784)
!10802 = !DILocation(line: 8122, column: 13, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 8122, column: 12)
!10804 = !DILocation(line: 8122, column: 12, scope: !10784)
!10805 = !DILocation(line: 8124, column: 8, scope: !10784)
!10806 = !DILocation(line: 8125, column: 19, scope: !10784)
!10807 = !DILocation(line: 8125, column: 11, scope: !10784)
!10808 = !DILocation(line: 8125, column: 17, scope: !10784)
!10809 = !DILocation(line: 8126, column: 15, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 8126, column: 12)
!10811 = !DILocation(line: 8126, column: 12, scope: !10810)
!10812 = !DILocation(line: 8126, column: 25, scope: !10810)
!10813 = !DILocation(line: 8126, column: 51, scope: !10810)
!10814 = !DILocation(line: 8126, column: 28, scope: !10810)
!10815 = !DILocation(line: 8126, column: 12, scope: !10784)
!10816 = !DILocation(line: 8127, column: 17, scope: !10810)
!10817 = !DILocation(line: 8127, column: 12, scope: !10810)
!10818 = !DILocation(line: 8127, column: 3, scope: !10810)
!10819 = distinct !{!10819, !10782, !10820}
!10820 = !DILocation(line: 8128, column: 6, scope: !10333)
!10821 = !DILocation(line: 8130, column: 9, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 8130, column: 8)
!10823 = !DILocation(line: 8130, column: 8, scope: !10333)
!10824 = !DILocation(line: 8131, column: 30, scope: !10822)
!10825 = !DILocation(line: 8131, column: 6, scope: !10822)
!10826 = !DILocation(line: 8138, column: 27, scope: !10302)
!10827 = !DILocation(line: 8139, column: 1, scope: !10302)
!10828 = distinct !DISubprogram(name: "pop_init_level", scope: !3, file: !3, line: 6611, type: !10829, scopeLine: 6612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10831)
!10829 = !DISubroutineType(types: !10830)
!10830 = !{!1909, !453}
!10831 = !{!10832, !10833, !10834}
!10832 = !DILocalVariable(name: "implicit", arg: 1, scope: !10828, file: !3, line: 6611, type: !453)
!10833 = !DILocalVariable(name: "p", scope: !10828, file: !3, line: 6613, type: !1883)
!10834 = !DILocalVariable(name: "ret", scope: !10828, file: !3, line: 6614, type: !1909)
!10835 = !DILocation(line: 0, scope: !10828)
!10836 = !DILocation(line: 6614, column: 17, scope: !10828)
!10837 = !DILocation(line: 6615, column: 7, scope: !10828)
!10838 = !DILocation(line: 6615, column: 13, scope: !10828)
!10839 = !DILocation(line: 6616, column: 7, scope: !10828)
!10840 = !DILocation(line: 6616, column: 21, scope: !10828)
!10841 = !DILocation(line: 6617, column: 7, scope: !10828)
!10842 = !DILocation(line: 6617, column: 21, scope: !10828)
!10843 = !DILocation(line: 6619, column: 16, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 6619, column: 7)
!10845 = !DILocation(line: 6619, column: 7, scope: !10828)
!10846 = !DILocation(line: 6623, column: 7, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 6620, column: 5)
!10848 = !DILocation(line: 6623, column: 14, scope: !10847)
!10849 = !DILocation(line: 6623, column: 33, scope: !10847)
!10850 = !DILocation(line: 6624, column: 24, scope: !10847)
!10851 = !DILocation(line: 6624, column: 2, scope: !10847)
!10852 = distinct !{!10852, !10846, !10853}
!10853 = !DILocation(line: 6624, column: 48, scope: !10847)
!10854 = !DILocation(line: 6626, column: 7, scope: !10847)
!10855 = !DILocation(line: 6630, column: 27, scope: !10828)
!10856 = !DILocation(line: 6631, column: 3, scope: !10828)
!10857 = !DILocation(line: 6633, column: 7, scope: !10828)
!10858 = !DILocation(line: 6637, column: 7, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 6637, column: 7)
!10860 = !DILocation(line: 6637, column: 27, scope: !10859)
!10861 = !DILocation(line: 6637, column: 24, scope: !10859)
!10862 = !DILocation(line: 6638, column: 10, scope: !10859)
!10863 = !DILocation(line: 6638, column: 39, scope: !10859)
!10864 = !DILocation(line: 6639, column: 7, scope: !10859)
!10865 = !DILocation(line: 6639, column: 10, scope: !10859)
!10866 = !DILocation(line: 6640, column: 7, scope: !10859)
!10867 = !DILocation(line: 6640, column: 11, scope: !10859)
!10868 = !DILocation(line: 6637, column: 7, scope: !10828)
!10869 = !DILocation(line: 6644, column: 26, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 6644, column: 11)
!10871 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 6641, column: 5)
!10872 = !DILocation(line: 6644, column: 11, scope: !10870)
!10873 = !DILocation(line: 6644, column: 11, scope: !10871)
!10874 = !DILocation(line: 6645, column: 19, scope: !10870)
!10875 = !DILocation(line: 6645, column: 2, scope: !10870)
!10876 = !DILocation(line: 6648, column: 4, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 6647, column: 2)
!10878 = !DILocation(line: 6650, column: 8, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 6650, column: 8)
!10880 = !DILocation(line: 6650, column: 26, scope: !10879)
!10881 = !DILocation(line: 6650, column: 8, scope: !10877)
!10882 = !DILocation(line: 6651, column: 6, scope: !10879)
!10883 = !DILocation(line: 6653, column: 20, scope: !10879)
!10884 = !DILocation(line: 6653, column: 6, scope: !10879)
!10885 = !DILocation(line: 6659, column: 8, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 6659, column: 8)
!10887 = !DILocation(line: 6659, column: 40, scope: !10886)
!10888 = !DILocation(line: 6659, column: 8, scope: !10877)
!10889 = !DILocation(line: 6666, column: 10, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 6665, column: 7)
!10891 = !DILocation(line: 6660, column: 23, scope: !10886)
!10892 = !DILocation(line: 6660, column: 6, scope: !10886)
!10893 = !DILocation(line: 6665, column: 7, scope: !10890)
!10894 = !DILocation(line: 6666, column: 7, scope: !10890)
!10895 = !DILocation(line: 6667, column: 10, scope: !10890)
!10896 = !DILocation(line: 6667, column: 39, scope: !10890)
!10897 = !DILocation(line: 6668, column: 10, scope: !10890)
!10898 = !DILocation(line: 6668, column: 7, scope: !10890)
!10899 = !DILocation(line: 6671, column: 2, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 6669, column: 5)
!10901 = !DILocation(line: 6671, column: 9, scope: !10900)
!10902 = !DILocation(line: 6672, column: 9, scope: !10900)
!10903 = !DILocation(line: 6672, column: 14, scope: !10900)
!10904 = !DILocation(line: 6673, column: 6, scope: !10900)
!10905 = !DILocation(line: 6673, column: 24, scope: !10900)
!10906 = !DILocation(line: 6673, column: 9, scope: !10900)
!10907 = !DILocation(line: 0, scope: !10900)
!10908 = !DILocation(line: 6674, column: 34, scope: !10900)
!10909 = !DILocation(line: 6674, column: 32, scope: !10900)
!10910 = distinct !{!10910, !10899, !10908}
!10911 = !DILocation(line: 6678, column: 6, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 6678, column: 6)
!10913 = !DILocation(line: 6678, column: 38, scope: !10912)
!10914 = !DILocation(line: 6678, column: 34, scope: !10912)
!10915 = !DILocation(line: 6680, column: 6, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 6679, column: 4)
!10917 = !DILocation(line: 6681, column: 6, scope: !10916)
!10918 = !DILocation(line: 6683, column: 6, scope: !10916)
!10919 = !DILocation(line: 6684, column: 4, scope: !10916)
!10920 = !DILocation(line: 6688, column: 28, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 6688, column: 7)
!10922 = !DILocation(line: 6688, column: 7, scope: !10921)
!10923 = !DILocation(line: 6688, column: 7, scope: !10828)
!10924 = !DILocation(line: 6691, column: 14, scope: !10921)
!10925 = !DILocation(line: 6732, column: 11, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 6732, column: 7)
!10927 = !DILocation(line: 6691, column: 5, scope: !10921)
!10928 = !DILocation(line: 6692, column: 12, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 6692, column: 12)
!10930 = !DILocation(line: 6692, column: 29, scope: !10929)
!10931 = !DILocation(line: 6692, column: 12, scope: !10921)
!10932 = !DILocation(line: 6694, column: 12, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 6694, column: 12)
!10934 = !DILocation(line: 6694, column: 41, scope: !10933)
!10935 = !DILocation(line: 6695, column: 5, scope: !10933)
!10936 = !DILocation(line: 6695, column: 37, scope: !10933)
!10937 = !DILocation(line: 6696, column: 5, scope: !10933)
!10938 = !DILocation(line: 6696, column: 37, scope: !10933)
!10939 = !DILocation(line: 6697, column: 5, scope: !10933)
!10940 = !DILocation(line: 6697, column: 37, scope: !10933)
!10941 = !DILocation(line: 6694, column: 12, scope: !10929)
!10942 = !DILocation(line: 6701, column: 11, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 6701, column: 11)
!10944 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 6698, column: 5)
!10945 = !DILocation(line: 6701, column: 11, scope: !10944)
!10946 = !DILocation(line: 6703, column: 9, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 6703, column: 8)
!10948 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 6702, column: 2)
!10949 = !DILocation(line: 6703, column: 8, scope: !10948)
!10950 = !DILocation(line: 6704, column: 6, scope: !10947)
!10951 = !DILocation(line: 6705, column: 16, scope: !10948)
!10952 = !DILocation(line: 6705, column: 14, scope: !10948)
!10953 = !DILocation(line: 6706, column: 2, scope: !10948)
!10954 = !DILocation(line: 6707, column: 16, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 6707, column: 16)
!10956 = !DILocation(line: 6707, column: 66, scope: !10955)
!10957 = !DILocation(line: 6707, column: 16, scope: !10943)
!10958 = !DILocation(line: 6709, column: 4, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 6708, column: 2)
!10960 = !DILocation(line: 6710, column: 16, scope: !10959)
!10961 = !DILocation(line: 6710, column: 68, scope: !10959)
!10962 = !DILocation(line: 6710, column: 14, scope: !10959)
!10963 = !DILocation(line: 6711, column: 2, scope: !10959)
!10964 = !DILocation(line: 6713, column: 14, scope: !10955)
!10965 = !DILocation(line: 6713, column: 66, scope: !10955)
!10966 = !DILocation(line: 6713, column: 12, scope: !10955)
!10967 = !DILocation(line: 6717, column: 11, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 6717, column: 11)
!10969 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 6716, column: 5)
!10970 = !DILocation(line: 6717, column: 11, scope: !10969)
!10971 = !DILocation(line: 6718, column: 14, scope: !10968)
!10972 = !DILocation(line: 6718, column: 12, scope: !10968)
!10973 = !DILocation(line: 6718, column: 2, scope: !10968)
!10974 = !DILocation(line: 6722, column: 7, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 6720, column: 2)
!10976 = !DILocation(line: 6721, column: 16, scope: !10975)
!10977 = !DILocation(line: 6721, column: 14, scope: !10975)
!10978 = !DILocation(line: 6723, column: 8, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 6723, column: 8)
!10980 = !DILocation(line: 6723, column: 8, scope: !10975)
!10981 = !DILocation(line: 6724, column: 32, scope: !10979)
!10982 = !DILocation(line: 6724, column: 6, scope: !10979)
!10983 = !DILocation(line: 6725, column: 8, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 6725, column: 8)
!10985 = !DILocation(line: 6725, column: 32, scope: !10984)
!10986 = !DILocation(line: 6725, column: 29, scope: !10984)
!10987 = !DILocation(line: 6726, column: 30, scope: !10984)
!10988 = !DILocation(line: 6726, column: 6, scope: !10984)
!10989 = !DILocation(line: 6727, column: 8, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 6727, column: 8)
!10991 = !DILocation(line: 6727, column: 8, scope: !10975)
!10992 = !DILocation(line: 6728, column: 40, scope: !10990)
!10993 = !DILocation(line: 6728, column: 6, scope: !10990)
!10994 = !DILocation(line: 6732, column: 7, scope: !10926)
!10995 = !DILocation(line: 6732, column: 17, scope: !10926)
!10996 = !DILocation(line: 6732, column: 20, scope: !10926)
!10997 = !DILocation(line: 6732, column: 42, scope: !10926)
!10998 = !DILocation(line: 6732, column: 7, scope: !10828)
!10999 = !DILocation(line: 6734, column: 11, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 6734, column: 11)
!11001 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 6733, column: 5)
!11002 = !DILocation(line: 6734, column: 11, scope: !11001)
!11003 = !DILocation(line: 6735, column: 20, scope: !11000)
!11004 = !DILocation(line: 6735, column: 2, scope: !11000)
!11005 = !DILocation(line: 6736, column: 20, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 6736, column: 16)
!11007 = !DILocation(line: 6736, column: 34, scope: !11006)
!11008 = !DILocation(line: 6736, column: 16, scope: !11000)
!11009 = !DILocation(line: 6737, column: 20, scope: !11006)
!11010 = !DILocation(line: 6737, column: 2, scope: !11006)
!11011 = !DILocation(line: 6740, column: 25, scope: !10828)
!11012 = !DILocation(line: 6740, column: 20, scope: !10828)
!11013 = !DILocation(line: 6741, column: 27, scope: !10828)
!11014 = !DILocation(line: 6741, column: 22, scope: !10828)
!11015 = !DILocation(line: 6742, column: 26, scope: !10828)
!11016 = !DILocation(line: 6742, column: 21, scope: !10828)
!11017 = !DILocation(line: 6743, column: 30, scope: !10828)
!11018 = !DILocation(line: 6743, column: 25, scope: !10828)
!11019 = !DILocation(line: 6744, column: 35, scope: !10828)
!11020 = !DILocation(line: 6744, column: 30, scope: !10828)
!11021 = !DILocation(line: 6745, column: 36, scope: !10828)
!11022 = !DILocation(line: 6745, column: 31, scope: !10828)
!11023 = !DILocation(line: 6746, column: 30, scope: !10828)
!11024 = !DILocation(line: 6746, column: 25, scope: !10828)
!11025 = !DILocation(line: 6747, column: 29, scope: !10828)
!11026 = !DILocation(line: 6747, column: 24, scope: !10828)
!11027 = !DILocation(line: 6748, column: 29, scope: !10828)
!11028 = !DILocation(line: 6748, column: 26, scope: !10828)
!11029 = !DILocation(line: 6748, column: 24, scope: !10828)
!11030 = !DILocation(line: 6749, column: 27, scope: !10828)
!11031 = !DILocation(line: 6749, column: 24, scope: !10828)
!11032 = !DILocation(line: 6749, column: 22, scope: !10828)
!11033 = !DILocation(line: 6750, column: 29, scope: !10828)
!11034 = !DILocation(line: 6750, column: 26, scope: !10828)
!11035 = !DILocation(line: 6750, column: 24, scope: !10828)
!11036 = !DILocation(line: 6751, column: 30, scope: !10828)
!11037 = !DILocation(line: 6751, column: 27, scope: !10828)
!11038 = !DILocation(line: 6751, column: 25, scope: !10828)
!11039 = !DILocation(line: 6752, column: 32, scope: !10828)
!11040 = !DILocation(line: 6752, column: 29, scope: !10828)
!11041 = !DILocation(line: 6752, column: 27, scope: !10828)
!11042 = !DILocation(line: 6753, column: 31, scope: !10828)
!11043 = !DILocation(line: 6753, column: 28, scope: !10828)
!11044 = !DILocation(line: 6753, column: 26, scope: !10828)
!11045 = !DILocation(line: 6754, column: 33, scope: !10828)
!11046 = !DILocation(line: 6754, column: 28, scope: !10828)
!11047 = !DILocation(line: 6755, column: 26, scope: !10828)
!11048 = !DILocation(line: 6755, column: 21, scope: !10828)
!11049 = !DILocation(line: 6756, column: 11, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 6756, column: 7)
!11051 = !DILocation(line: 6756, column: 8, scope: !11050)
!11052 = !DILocation(line: 6756, column: 7, scope: !10828)
!11053 = !DILocation(line: 6757, column: 34, scope: !11050)
!11054 = !DILocation(line: 6757, column: 29, scope: !11050)
!11055 = !DILocation(line: 6757, column: 5, scope: !11050)
!11056 = !DILocation(line: 6758, column: 3, scope: !10828)
!11057 = !DILocation(line: 6760, column: 26, scope: !10828)
!11058 = !DILocation(line: 6760, column: 21, scope: !10828)
!11059 = !DILocation(line: 6761, column: 9, scope: !10828)
!11060 = !DILocation(line: 6761, column: 3, scope: !10828)
!11061 = !DILocation(line: 6763, column: 17, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 6763, column: 7)
!11063 = !DILocation(line: 6763, column: 25, scope: !11062)
!11064 = !DILocation(line: 6763, column: 43, scope: !11062)
!11065 = !DILocation(line: 6763, column: 22, scope: !11062)
!11066 = !DILocation(line: 6764, column: 17, scope: !11062)
!11067 = !DILocation(line: 6764, column: 15, scope: !11062)
!11068 = !DILocation(line: 6764, column: 5, scope: !11062)
!11069 = !DILocation(line: 6766, column: 1, scope: !10828)
!11070 = distinct !DISubprogram(name: "find_init_member", scope: !3, file: !3, line: 7323, type: !2493, scopeLine: 7324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11071)
!11071 = !{!11072, !11073, !11074}
!11072 = !DILocalVariable(name: "field", arg: 1, scope: !11070, file: !3, line: 7323, type: !460)
!11073 = !DILocalVariable(name: "p", scope: !11070, file: !3, line: 7325, type: !1896)
!11074 = !DILocalVariable(name: "bitpos", scope: !11075, file: !3, line: 7346, type: !460)
!11075 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 7345, column: 5)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 7344, column: 12)
!11077 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 7327, column: 7)
!11078 = !DILocation(line: 0, scope: !11070)
!11079 = !DILocation(line: 7327, column: 7, scope: !11077)
!11080 = !DILocation(line: 7327, column: 36, scope: !11077)
!11081 = !DILocation(line: 7327, column: 7, scope: !11070)
!11082 = !DILocation(line: 7329, column: 11, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 7329, column: 11)
!11084 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 7328, column: 5)
!11085 = !DILocation(line: 7330, column: 4, scope: !11083)
!11086 = !DILocation(line: 7330, column: 31, scope: !11083)
!11087 = !DILocation(line: 7330, column: 7, scope: !11083)
!11088 = !DILocation(line: 7329, column: 11, scope: !11084)
!11089 = !DILocation(line: 7331, column: 2, scope: !11083)
!11090 = !DILocation(line: 7334, column: 7, scope: !11084)
!11091 = !DILocation(line: 0, scope: !11084)
!11092 = !DILocation(line: 7336, column: 35, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !3, line: 7336, column: 8)
!11094 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 7335, column: 2)
!11095 = !DILocation(line: 7336, column: 8, scope: !11093)
!11096 = !DILocation(line: 7336, column: 8, scope: !11094)
!11097 = !DILocation(line: 7337, column: 13, scope: !11093)
!11098 = !DILocation(line: 7337, column: 6, scope: !11093)
!11099 = !DILocation(line: 7338, column: 33, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 7338, column: 13)
!11101 = !DILocation(line: 7338, column: 13, scope: !11100)
!11102 = !DILocation(line: 7338, column: 13, scope: !11093)
!11103 = !DILocation(line: 7339, column: 13, scope: !11100)
!11104 = !DILocation(line: 7341, column: 16, scope: !11100)
!11105 = !DILocation(line: 7341, column: 6, scope: !11100)
!11106 = distinct !{!11106, !11090, !11107}
!11107 = !DILocation(line: 7342, column: 2, scope: !11084)
!11108 = !DILocation(line: 7344, column: 41, scope: !11076)
!11109 = !DILocation(line: 7344, column: 12, scope: !11077)
!11110 = !DILocation(line: 7346, column: 21, scope: !11075)
!11111 = !DILocation(line: 0, scope: !11075)
!11112 = !DILocation(line: 7348, column: 11, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 7348, column: 11)
!11114 = !DILocation(line: 7349, column: 4, scope: !11113)
!11115 = !DILocation(line: 7349, column: 9, scope: !11113)
!11116 = !DILocation(line: 7350, column: 8, scope: !11113)
!11117 = !DILocation(line: 7351, column: 7, scope: !11113)
!11118 = !DILocation(line: 7350, column: 11, scope: !11113)
!11119 = !DILocation(line: 7348, column: 11, scope: !11075)
!11120 = !DILocation(line: 7352, column: 2, scope: !11113)
!11121 = !DILocation(line: 7355, column: 7, scope: !11075)
!11122 = !DILocation(line: 7357, column: 20, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 7357, column: 8)
!11124 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 7356, column: 2)
!11125 = !DILocation(line: 7357, column: 14, scope: !11123)
!11126 = !DILocation(line: 7357, column: 8, scope: !11124)
!11127 = !DILocation(line: 7358, column: 16, scope: !11123)
!11128 = !DILocation(line: 7358, column: 6, scope: !11123)
!11129 = !DILocation(line: 7359, column: 38, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 7359, column: 13)
!11131 = !DILocation(line: 7359, column: 13, scope: !11130)
!11132 = !DILocation(line: 7359, column: 13, scope: !11123)
!11133 = !DILocation(line: 7360, column: 13, scope: !11130)
!11134 = !DILocation(line: 7360, column: 6, scope: !11130)
!11135 = !DILocation(line: 7362, column: 13, scope: !11130)
!11136 = distinct !{!11136, !11121, !11137}
!11137 = !DILocation(line: 7363, column: 2, scope: !11075)
!11138 = !DILocation(line: 7365, column: 41, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11076, file: !3, line: 7365, column: 12)
!11140 = !DILocation(line: 7365, column: 12, scope: !11076)
!11141 = !DILocation(line: 7367, column: 12, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 7367, column: 11)
!11143 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 7366, column: 5)
!11144 = !DILocation(line: 7368, column: 4, scope: !11142)
!11145 = !DILocation(line: 7368, column: 8, scope: !11142)
!11146 = !DILocation(line: 7368, column: 58, scope: !11142)
!11147 = !DILocation(line: 7369, column: 8, scope: !11142)
!11148 = !DILocation(line: 7367, column: 11, scope: !11143)
!11149 = !DILocation(line: 7370, column: 9, scope: !11142)
!11150 = !DILocation(line: 7370, column: 59, scope: !11142)
!11151 = !DILocation(line: 7370, column: 2, scope: !11142)
!11152 = !DILocation(line: 7372, column: 3, scope: !11070)
!11153 = !DILocation(line: 7373, column: 1, scope: !11070)
!11154 = distinct !DISubprogram(name: "push_member_name", scope: !3, file: !3, line: 5588, type: !5621, scopeLine: 5589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11155)
!11155 = !{!11156, !11157, !11159}
!11156 = !DILocalVariable(name: "decl", arg: 1, scope: !11154, file: !3, line: 5588, type: !460)
!11157 = !DILocalVariable(name: "string", scope: !11154, file: !3, line: 5590, type: !11158)
!11158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !458)
!11159 = !DILocalVariable(name: "depth", scope: !11160, file: !3, line: 5594, type: !453)
!11160 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 5594, column: 3)
!11161 = !DILocation(line: 0, scope: !11154)
!11162 = !DILocation(line: 5591, column: 8, scope: !11154)
!11163 = !DILocation(line: 5592, column: 32, scope: !11154)
!11164 = !DILocation(line: 5592, column: 10, scope: !11154)
!11165 = !DILocation(line: 5594, column: 3, scope: !11160)
!11166 = !DILocation(line: 0, scope: !11160)
!11167 = !DILocation(line: 5594, column: 3, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11160, file: !3, line: 5594, column: 3)
!11169 = !DILocation(line: 5594, column: 3, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 5594, column: 3)
!11171 = !DILocation(line: 5595, column: 1, scope: !11154)
!11172 = distinct !DISubprogram(name: "push_array_bounds", scope: !3, file: !3, line: 5600, type: !11173, scopeLine: 5601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11175)
!11173 = !DISubroutineType(types: !11174)
!11174 = !{null, !514}
!11175 = !{!11176, !11177}
!11176 = !DILocalVariable(name: "bounds", arg: 1, scope: !11172, file: !3, line: 5600, type: !514)
!11177 = !DILocalVariable(name: "depth", scope: !11178, file: !3, line: 5602, type: !453)
!11178 = distinct !DILexicalBlock(scope: !11172, file: !3, line: 5602, column: 3)
!11179 = !DILocation(line: 0, scope: !11172)
!11180 = !DILocation(line: 5602, column: 3, scope: !11178)
!11181 = !DILocation(line: 0, scope: !11178)
!11182 = !DILocation(line: 5602, column: 3, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11178, file: !3, line: 5602, column: 3)
!11184 = !DILocation(line: 5602, column: 3, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 5602, column: 3)
!11186 = !DILocation(line: 5603, column: 1, scope: !11172)
!11187 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !135, file: !135, line: 1537, type: !11188, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11192)
!11188 = !DISubroutineType(types: !11189)
!11189 = !{!7, !11190}
!11190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11191, size: 64)
!11191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1660)
!11192 = !{!11193}
!11193 = !DILocalVariable(name: "vec_", arg: 1, scope: !11187, file: !135, line: 1537, type: !11190)
!11194 = !DILocation(line: 0, scope: !11187)
!11195 = !DILocation(line: 1537, column: 1, scope: !11187)
!11196 = distinct !DISubprogram(name: "set_nonincremental_init", scope: !3, file: !3, line: 7213, type: !9775, scopeLine: 7214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11197)
!11197 = !{!11198, !11199, !11200}
!11198 = !DILocalVariable(name: "ix", scope: !11196, file: !3, line: 7215, type: !514)
!11199 = !DILocalVariable(name: "index", scope: !11196, file: !3, line: 7216, type: !460)
!11200 = !DILocalVariable(name: "value", scope: !11196, file: !3, line: 7216, type: !460)
!11201 = !DILocation(line: 7218, column: 7, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 7218, column: 7)
!11203 = !DILocation(line: 7218, column: 36, scope: !11202)
!11204 = !DILocation(line: 7219, column: 7, scope: !11202)
!11205 = !DILocation(line: 7219, column: 39, scope: !11202)
!11206 = !DILocation(line: 7218, column: 7, scope: !11196)
!11207 = !DILocation(line: 0, scope: !11196)
!11208 = !DILocation(line: 7222, column: 3, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 7222, column: 3)
!11210 = !DILocation(line: 0, scope: !11209)
!11211 = !DILocation(line: 7222, column: 3, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 7222, column: 3)
!11213 = !DILocation(line: 7223, column: 5, scope: !11212)
!11214 = distinct !{!11214, !11208, !11215}
!11215 = !DILocation(line: 7223, column: 53, scope: !11209)
!11216 = !DILocation(line: 7224, column: 24, scope: !11196)
!11217 = !DILocation(line: 7225, column: 7, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 7225, column: 7)
!11219 = !DILocation(line: 7225, column: 36, scope: !11218)
!11220 = !DILocation(line: 7225, column: 7, scope: !11196)
!11221 = !DILocation(line: 7227, column: 37, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 7226, column: 5)
!11223 = !DILocation(line: 7229, column: 7, scope: !11222)
!11224 = !DILocation(line: 0, scope: !11222)
!11225 = !DILocation(line: 7229, column: 42, scope: !11222)
!11226 = !DILocation(line: 7230, column: 7, scope: !11222)
!11227 = !DILocation(line: 7230, column: 10, scope: !11222)
!11228 = !DILocation(line: 7231, column: 7, scope: !11222)
!11229 = !DILocation(line: 7231, column: 10, scope: !11222)
!11230 = !DILocation(line: 7231, column: 50, scope: !11222)
!11231 = !DILocation(line: 7232, column: 32, scope: !11222)
!11232 = distinct !{!11232, !11223, !11231}
!11233 = !DILocation(line: 7235, column: 41, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 7235, column: 12)
!11235 = !DILocation(line: 7235, column: 12, scope: !11218)
!11236 = !DILocation(line: 7237, column: 11, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 7237, column: 11)
!11238 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 7236, column: 5)
!11239 = !DILocation(line: 7237, column: 11, scope: !11238)
!11240 = !DILocation(line: 7239, column: 17, scope: !11237)
!11241 = !DILocation(line: 7240, column: 10, scope: !11237)
!11242 = !DILocation(line: 7239, column: 8, scope: !11237)
!11243 = !DILocation(line: 7239, column: 6, scope: !11237)
!11244 = !DILocation(line: 7238, column: 2, scope: !11237)
!11245 = !DILocation(line: 7242, column: 31, scope: !11237)
!11246 = !DILocation(line: 7242, column: 29, scope: !11237)
!11247 = !DILocation(line: 7244, column: 27, scope: !11196)
!11248 = !DILocation(line: 7245, column: 1, scope: !11196)
!11249 = distinct !DISubprogram(name: "warning_init", scope: !3, file: !3, line: 5688, type: !11250, scopeLine: 5689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11252)
!11250 = !DISubroutineType(types: !11251)
!11251 = !{null, !453, !458}
!11252 = !{!11253, !11254, !11255}
!11253 = !DILocalVariable(name: "opt", arg: 1, scope: !11249, file: !3, line: 5688, type: !453)
!11254 = !DILocalVariable(name: "msgid", arg: 2, scope: !11249, file: !3, line: 5688, type: !458)
!11255 = !DILocalVariable(name: "ofwhat", scope: !11249, file: !3, line: 5690, type: !455)
!11256 = !DILocation(line: 0, scope: !11249)
!11257 = !DILocation(line: 5692, column: 3, scope: !11249)
!11258 = !DILocation(line: 5693, column: 37, scope: !11249)
!11259 = !DILocation(line: 5693, column: 12, scope: !11249)
!11260 = !DILocation(line: 5694, column: 7, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 5694, column: 7)
!11262 = !DILocation(line: 5694, column: 7, scope: !11249)
!11263 = !DILocation(line: 5695, column: 5, scope: !11261)
!11264 = !DILocation(line: 5696, column: 1, scope: !11249)
!11265 = distinct !DISubprogram(name: "set_nonincremental_init_from_string", scope: !3, file: !3, line: 7250, type: !5621, scopeLine: 7251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11266)
!11266 = !{!11267, !11268, !11269, !11270, !11271, !11273, !11274, !11275, !11276, !11277, !11278}
!11267 = !DILocalVariable(name: "str", arg: 1, scope: !11265, file: !3, line: 7250, type: !460)
!11268 = !DILocalVariable(name: "value", scope: !11265, file: !3, line: 7252, type: !460)
!11269 = !DILocalVariable(name: "purpose", scope: !11265, file: !3, line: 7252, type: !460)
!11270 = !DILocalVariable(name: "type", scope: !11265, file: !3, line: 7252, type: !460)
!11271 = !DILocalVariable(name: "val", scope: !11265, file: !3, line: 7253, type: !11272)
!11272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 128, elements: !706)
!11273 = !DILocalVariable(name: "p", scope: !11265, file: !3, line: 7254, type: !458)
!11274 = !DILocalVariable(name: "end", scope: !11265, file: !3, line: 7254, type: !458)
!11275 = !DILocalVariable(name: "byte", scope: !11265, file: !3, line: 7255, type: !453)
!11276 = !DILocalVariable(name: "wchar_bytes", scope: !11265, file: !3, line: 7255, type: !453)
!11277 = !DILocalVariable(name: "charwidth", scope: !11265, file: !3, line: 7255, type: !453)
!11278 = !DILocalVariable(name: "bitpos", scope: !11265, file: !3, line: 7255, type: !453)
!11279 = !DILocation(line: 0, scope: !11265)
!11280 = !DILocation(line: 7253, column: 3, scope: !11265)
!11281 = !DILocation(line: 7253, column: 17, scope: !11265)
!11282 = !DILocation(line: 7257, column: 3, scope: !11265)
!11283 = !DILocation(line: 7261, column: 10, scope: !11265)
!11284 = !DILocation(line: 7259, column: 17, scope: !11265)
!11285 = !DILocation(line: 7259, column: 62, scope: !11265)
!11286 = !DILocation(line: 7260, column: 15, scope: !11265)
!11287 = !DILocation(line: 7262, column: 7, scope: !11265)
!11288 = !DILocation(line: 7263, column: 13, scope: !11265)
!11289 = !DILocation(line: 7263, column: 11, scope: !11265)
!11290 = !DILocation(line: 7265, column: 18, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 7265, column: 3)
!11292 = !DILocation(line: 0, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 7269, column: 11)
!11294 = distinct !DILexicalBlock(scope: !11295, file: !3, line: 7268, column: 5)
!11295 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 7265, column: 3)
!11296 = !DILocation(line: 0, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 7275, column: 2)
!11298 = !DILocation(line: 0, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 7290, column: 11)
!11300 = !DILocation(line: 0, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11299, file: !3, line: 7291, column: 2)
!11302 = !DILocation(line: 0, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 7293, column: 8)
!11304 = !DILocation(line: 0, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 7301, column: 13)
!11306 = !DILocation(line: 0, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 7306, column: 13)
!11308 = !DILocation(line: 0, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 7295, column: 12)
!11310 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 7294, column: 6)
!11311 = !DILocation(line: 0, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 7296, column: 3)
!11313 = !DILocation(line: 7265, column: 8, scope: !11291)
!11314 = !DILocation(line: 0, scope: !11291)
!11315 = !DILocation(line: 7266, column: 10, scope: !11295)
!11316 = !DILocation(line: 7266, column: 16, scope: !11295)
!11317 = !DILocation(line: 7266, column: 37, scope: !11295)
!11318 = !DILocation(line: 7266, column: 20, scope: !11295)
!11319 = !DILocation(line: 7266, column: 19, scope: !11295)
!11320 = !DILocation(line: 7265, column: 3, scope: !11291)
!11321 = !DILocation(line: 7271, column: 31, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 7270, column: 2)
!11323 = !DILocation(line: 7271, column: 29, scope: !11322)
!11324 = !DILocation(line: 7271, column: 13, scope: !11322)
!11325 = !DILocation(line: 7271, column: 11, scope: !11322)
!11326 = !DILocation(line: 7272, column: 11, scope: !11322)
!11327 = !DILocation(line: 7290, column: 12, scope: !11299)
!11328 = !DILocation(line: 7290, column: 11, scope: !11294)
!11329 = !DILocation(line: 7293, column: 8, scope: !11301)
!11330 = !DILocation(line: 7301, column: 13, scope: !11303)
!11331 = !DILocation(line: 7306, column: 13, scope: !11305)
!11332 = !DILocation(line: 7308, column: 6, scope: !11307)
!11333 = !DILocation(line: 7303, column: 12, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 7302, column: 6)
!11335 = !DILocation(line: 7304, column: 3, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 7303, column: 12)
!11337 = !DILocation(line: 7295, column: 19, scope: !11309)
!11338 = !DILocation(line: 7295, column: 12, scope: !11310)
!11339 = !DILocation(line: 7297, column: 12, scope: !11312)
!11340 = !DILocation(line: 7298, column: 12, scope: !11312)
!11341 = !DILocation(line: 7299, column: 3, scope: !11312)
!11342 = !DILocation(line: 7312, column: 49, scope: !11294)
!11343 = !DILocation(line: 7312, column: 41, scope: !11294)
!11344 = !DILocation(line: 7312, column: 15, scope: !11294)
!11345 = !DILocation(line: 7313, column: 7, scope: !11294)
!11346 = !DILocation(line: 7267, column: 18, scope: !11295)
!11347 = !DILocation(line: 7265, column: 3, scope: !11295)
!11348 = distinct !{!11348, !11320, !11349}
!11349 = !DILocation(line: 7314, column: 5, scope: !11291)
!11350 = !DILocation(line: 7316, column: 27, scope: !11265)
!11351 = !DILocation(line: 7276, column: 11, scope: !11297)
!11352 = !DILocation(line: 7277, column: 11, scope: !11297)
!11353 = !DILocation(line: 7278, column: 9, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 7278, column: 4)
!11355 = !DILocation(line: 0, scope: !11354)
!11356 = !DILocation(line: 7278, column: 24, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 7278, column: 4)
!11358 = !DILocation(line: 7278, column: 4, scope: !11354)
!11359 = !DILocation(line: 7283, column: 17, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 7280, column: 12)
!11361 = distinct !DILexicalBlock(scope: !11357, file: !3, line: 7279, column: 6)
!11362 = !DILocation(line: 7285, column: 51, scope: !11361)
!11363 = !DILocation(line: 7285, column: 49, scope: !11361)
!11364 = !DILocation(line: 7285, column: 7, scope: !11361)
!11365 = !DILocation(line: 7286, column: 17, scope: !11361)
!11366 = !DILocation(line: 7286, column: 6, scope: !11361)
!11367 = !DILocation(line: 7284, column: 19, scope: !11361)
!11368 = !DILocation(line: 7284, column: 8, scope: !11361)
!11369 = !DILocation(line: 7285, column: 3, scope: !11361)
!11370 = !DILocation(line: 7278, column: 43, scope: !11357)
!11371 = !DILocation(line: 7278, column: 4, scope: !11357)
!11372 = distinct !{!11372, !11358, !11373}
!11373 = !DILocation(line: 7287, column: 6, scope: !11354)
!11374 = !DILocation(line: 7295, column: 12, scope: !11309)
!11375 = !DILocation(line: 7303, column: 12, scope: !11336)
!11376 = !DILocation(line: 7303, column: 19, scope: !11336)
!11377 = !DILocation(line: 7304, column: 10, scope: !11336)
!11378 = !DILocation(line: 7306, column: 13, scope: !11307)
!11379 = !DILocation(line: 7306, column: 20, scope: !11307)
!11380 = !DILocation(line: 7308, column: 13, scope: !11307)
!11381 = !DILocation(line: 7317, column: 1, scope: !11265)
!11382 = distinct !DISubprogram(name: "output_pending_init_elements", scope: !3, file: !3, line: 7605, type: !9995, scopeLine: 7606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11383)
!11383 = !{!11384, !11385, !11386, !11387, !11392, !11393}
!11384 = !DILocalVariable(name: "all", arg: 1, scope: !11382, file: !3, line: 7605, type: !453)
!11385 = !DILocalVariable(name: "elt", scope: !11382, file: !3, line: 7607, type: !1896)
!11386 = !DILocalVariable(name: "next", scope: !11382, file: !3, line: 7608, type: !460)
!11387 = !DILocalVariable(name: "ctor_unfilled_bitpos", scope: !11388, file: !3, line: 7665, type: !460)
!11388 = distinct !DILexicalBlock(scope: !11389, file: !3, line: 7664, column: 2)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 7662, column: 16)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 7620, column: 11)
!11391 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 7619, column: 5)
!11392 = !DILocalVariable(name: "elt_bitpos", scope: !11388, file: !3, line: 7665, type: !460)
!11393 = !DILabel(scope: !11382, name: "retry", file: !3, line: 7610)
!11394 = !DILocation(line: 0, scope: !11382)
!11395 = !DILocation(line: 7607, column: 27, scope: !11382)
!11396 = !DILocation(line: 0, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 7721, column: 7)
!11398 = !DILocation(line: 7608, column: 3, scope: !11382)
!11399 = !DILocation(line: 7607, column: 21, scope: !11382)
!11400 = !DILocation(line: 7610, column: 2, scope: !11382)
!11401 = !DILocation(line: 7618, column: 3, scope: !11382)
!11402 = !DILocation(line: 7617, column: 8, scope: !11382)
!11403 = !DILocation(line: 7620, column: 11, scope: !11390)
!11404 = !DILocation(line: 7620, column: 40, scope: !11390)
!11405 = !DILocation(line: 7620, column: 11, scope: !11391)
!11406 = !DILocation(line: 7622, column: 33, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 7622, column: 8)
!11408 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 7621, column: 2)
!11409 = !DILocation(line: 7623, column: 7, scope: !11407)
!11410 = !DILocation(line: 7622, column: 8, scope: !11407)
!11411 = !DILocation(line: 7622, column: 8, scope: !11408)
!11412 = !DILocation(line: 7624, column: 32, scope: !11407)
!11413 = !DILocation(line: 7624, column: 44, scope: !11407)
!11414 = !DILocation(line: 7625, column: 6, scope: !11407)
!11415 = !DILocation(line: 7626, column: 6, scope: !11407)
!11416 = !DILocation(line: 7624, column: 6, scope: !11407)
!11417 = !DILocation(line: 7627, column: 30, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 7627, column: 13)
!11419 = !DILocation(line: 7628, column: 14, scope: !11418)
!11420 = !DILocation(line: 7627, column: 13, scope: !11418)
!11421 = !DILocation(line: 7627, column: 13, scope: !11407)
!11422 = !DILocation(line: 7631, column: 17, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 7631, column: 12)
!11424 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 7629, column: 6)
!11425 = !DILocation(line: 7631, column: 12, scope: !11423)
!11426 = !DILocation(line: 7631, column: 12, scope: !11424)
!11427 = !DILocation(line: 7640, column: 6, scope: !11424)
!11428 = !DILocation(line: 7637, column: 17, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 7634, column: 3)
!11430 = !DILocation(line: 7638, column: 5, scope: !11429)
!11431 = !DILocation(line: 7644, column: 17, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !3, line: 7644, column: 12)
!11433 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 7642, column: 6)
!11434 = !DILocation(line: 7644, column: 12, scope: !11432)
!11435 = !DILocation(line: 7644, column: 12, scope: !11433)
!11436 = !DILocation(line: 7650, column: 5, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 7647, column: 3)
!11438 = !DILocation(line: 7645, column: 3, scope: !11432)
!11439 = !DILocation(line: 7650, column: 17, scope: !11437)
!11440 = !DILocation(line: 7650, column: 12, scope: !11437)
!11441 = !DILocation(line: 7650, column: 24, scope: !11437)
!11442 = !DILocation(line: 7650, column: 40, scope: !11437)
!11443 = !DILocation(line: 7650, column: 46, scope: !11437)
!11444 = !DILocation(line: 0, scope: !11437)
!11445 = distinct !{!11445, !11436, !11446}
!11446 = !DILocation(line: 7651, column: 18, scope: !11437)
!11447 = !DILocation(line: 7653, column: 13, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 7653, column: 9)
!11449 = !DILocation(line: 7653, column: 33, scope: !11448)
!11450 = !DILocation(line: 7654, column: 17, scope: !11448)
!11451 = !DILocation(line: 7653, column: 16, scope: !11448)
!11452 = !DILocation(line: 7653, column: 9, scope: !11437)
!11453 = !DILocation(line: 7656, column: 21, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 7655, column: 7)
!11455 = !DILocation(line: 7657, column: 9, scope: !11454)
!11456 = !DILocation(line: 7662, column: 45, scope: !11389)
!11457 = !DILocation(line: 7663, column: 9, scope: !11389)
!11458 = !DILocation(line: 7663, column: 41, scope: !11389)
!11459 = !DILocation(line: 7662, column: 16, scope: !11390)
!11460 = !DILocation(line: 7668, column: 8, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11388, file: !3, line: 7668, column: 8)
!11462 = !DILocation(line: 7668, column: 36, scope: !11461)
!11463 = !DILocation(line: 7668, column: 8, scope: !11388)
!11464 = !DILocation(line: 7671, column: 27, scope: !11388)
!11465 = !DILocation(line: 0, scope: !11388)
!11466 = !DILocation(line: 7672, column: 36, scope: !11388)
!11467 = !DILocation(line: 7672, column: 17, scope: !11388)
!11468 = !DILocation(line: 7675, column: 8, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11388, file: !3, line: 7675, column: 8)
!11470 = !DILocation(line: 7675, column: 8, scope: !11388)
!11471 = !DILocation(line: 7677, column: 43, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 7676, column: 6)
!11473 = !DILocation(line: 7677, column: 36, scope: !11472)
!11474 = !DILocation(line: 7678, column: 34, scope: !11472)
!11475 = !DILocation(line: 7678, column: 46, scope: !11472)
!11476 = !DILocation(line: 7679, column: 8, scope: !11472)
!11477 = !DILocation(line: 7680, column: 13, scope: !11472)
!11478 = !DILocation(line: 7678, column: 8, scope: !11472)
!11479 = !DILocation(line: 7681, column: 6, scope: !11472)
!11480 = !DILocation(line: 7682, column: 13, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 7682, column: 13)
!11482 = !DILocation(line: 7682, column: 13, scope: !11469)
!11483 = !DILocation(line: 7685, column: 17, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 7685, column: 12)
!11485 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 7683, column: 6)
!11486 = !DILocation(line: 7685, column: 12, scope: !11484)
!11487 = !DILocation(line: 7685, column: 12, scope: !11485)
!11488 = !DILocation(line: 7694, column: 6, scope: !11485)
!11489 = !DILocation(line: 7691, column: 17, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 7688, column: 3)
!11491 = !DILocation(line: 7692, column: 5, scope: !11490)
!11492 = !DILocation(line: 7698, column: 17, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 7698, column: 12)
!11494 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 7696, column: 6)
!11495 = !DILocation(line: 7698, column: 12, scope: !11493)
!11496 = !DILocation(line: 7698, column: 12, scope: !11494)
!11497 = !DILocation(line: 7704, column: 5, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11493, file: !3, line: 7701, column: 3)
!11499 = !DILocation(line: 7699, column: 3, scope: !11493)
!11500 = !DILocation(line: 7704, column: 17, scope: !11498)
!11501 = !DILocation(line: 7704, column: 12, scope: !11498)
!11502 = !DILocation(line: 7704, column: 24, scope: !11498)
!11503 = !DILocation(line: 7704, column: 40, scope: !11498)
!11504 = !DILocation(line: 7704, column: 46, scope: !11498)
!11505 = !DILocation(line: 0, scope: !11498)
!11506 = distinct !{!11506, !11497, !11507}
!11507 = !DILocation(line: 7705, column: 18, scope: !11498)
!11508 = !DILocation(line: 7708, column: 9, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 7707, column: 9)
!11510 = !DILocation(line: 7709, column: 28, scope: !11509)
!11511 = !DILocation(line: 7709, column: 9, scope: !11509)
!11512 = !DILocation(line: 7708, column: 13, scope: !11509)
!11513 = !DILocation(line: 7707, column: 9, scope: !11498)
!11514 = !DILocation(line: 7711, column: 21, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 7710, column: 7)
!11516 = !DILocation(line: 7712, column: 9, scope: !11515)
!11517 = distinct !{!11517, !11401, !11518}
!11518 = !DILocation(line: 7717, column: 5, scope: !11382)
!11519 = !DILocation(line: 7721, column: 9, scope: !11397)
!11520 = !DILocation(line: 7721, column: 21, scope: !11397)
!11521 = !DILocation(line: 7721, column: 13, scope: !11397)
!11522 = !DILocation(line: 7735, column: 1, scope: !11382)
!11523 = !DILocation(line: 7726, column: 7, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 7726, column: 7)
!11525 = !DILocation(line: 7726, column: 36, scope: !11524)
!11526 = !DILocation(line: 7727, column: 7, scope: !11524)
!11527 = !DILocation(line: 7727, column: 39, scope: !11524)
!11528 = !DILocation(line: 7726, column: 7, scope: !11382)
!11529 = !DILocation(line: 7728, column: 33, scope: !11524)
!11530 = !DILocation(line: 7728, column: 5, scope: !11524)
!11531 = !DILocation(line: 7729, column: 41, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 7729, column: 12)
!11533 = !DILocation(line: 7729, column: 12, scope: !11524)
!11534 = !DILocation(line: 7730, column: 32, scope: !11532)
!11535 = !DILocation(line: 7730, column: 5, scope: !11532)
!11536 = !DILocation(line: 7734, column: 3, scope: !11382)
!11537 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !135, file: !135, line: 1537, type: !11538, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11542)
!11538 = !DISubroutineType(types: !11539)
!11539 = !{!11540, !11541, !7}
!11540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!11541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!11542 = !{!11543, !11544}
!11543 = !DILocalVariable(name: "vec_", arg: 1, scope: !11537, file: !135, line: 1537, type: !11541)
!11544 = !DILocalVariable(name: "ix_", arg: 2, scope: !11537, file: !135, line: 1537, type: !7)
!11545 = !DILocation(line: 0, scope: !11537)
!11546 = !DILocation(line: 1537, column: 1, scope: !11537)
!11547 = distinct !DISubprogram(name: "set_init_index", scope: !3, file: !3, line: 6858, type: !8582, scopeLine: 6859, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11548)
!11548 = !{!11549, !11550}
!11549 = !DILocalVariable(name: "first", arg: 1, scope: !11547, file: !3, line: 6858, type: !460)
!11550 = !DILocalVariable(name: "last", arg: 2, scope: !11547, file: !3, line: 6858, type: !460)
!11551 = !DILocation(line: 0, scope: !11547)
!11552 = !DILocation(line: 6860, column: 7, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 6860, column: 7)
!11554 = !DILocation(line: 6860, column: 7, scope: !11547)
!11555 = !DILocation(line: 6863, column: 24, scope: !11547)
!11556 = !DILocation(line: 6865, column: 8, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 6865, column: 7)
!11558 = !DILocation(line: 6866, column: 7, scope: !11557)
!11559 = !DILocation(line: 6866, column: 11, scope: !11557)
!11560 = !DILocation(line: 6866, column: 16, scope: !11557)
!11561 = !DILocation(line: 6866, column: 20, scope: !11557)
!11562 = !DILocation(line: 6865, column: 7, scope: !11547)
!11563 = !DILocation(line: 6868, column: 7, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 6867, column: 5)
!11565 = !DILocation(line: 6869, column: 7, scope: !11564)
!11566 = !DILocation(line: 6872, column: 7, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 6872, column: 7)
!11568 = !DILocation(line: 6872, column: 25, scope: !11567)
!11569 = !DILocation(line: 6872, column: 7, scope: !11547)
!11570 = !DILocation(line: 6874, column: 15, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11567, file: !3, line: 6873, column: 5)
!11572 = !DILocation(line: 6875, column: 11, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 6875, column: 11)
!11574 = !DILocation(line: 6875, column: 29, scope: !11573)
!11575 = !DILocation(line: 6875, column: 11, scope: !11571)
!11576 = !DILocation(line: 6876, column: 16, scope: !11573)
!11577 = !DILocation(line: 6876, column: 2, scope: !11573)
!11578 = !DILocation(line: 6881, column: 12, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 6881, column: 7)
!11580 = !DILocation(line: 6881, column: 15, scope: !11579)
!11581 = !DILocation(line: 6881, column: 32, scope: !11579)
!11582 = !DILocation(line: 6881, column: 7, scope: !11547)
!11583 = !DILocation(line: 6883, column: 14, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11579, file: !3, line: 6882, column: 5)
!11585 = !DILocation(line: 6884, column: 11, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11584, file: !3, line: 6884, column: 11)
!11587 = !DILocation(line: 6884, column: 28, scope: !11586)
!11588 = !DILocation(line: 6884, column: 11, scope: !11584)
!11589 = !DILocation(line: 6885, column: 16, scope: !11586)
!11590 = !DILocation(line: 6885, column: 2, scope: !11586)
!11591 = !DILocation(line: 6890, column: 7, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 6890, column: 7)
!11593 = !DILocation(line: 6890, column: 25, scope: !11592)
!11594 = !DILocation(line: 6890, column: 7, scope: !11547)
!11595 = !DILocation(line: 6891, column: 5, scope: !11592)
!11596 = !DILocation(line: 6892, column: 17, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 6892, column: 12)
!11598 = !DILocation(line: 6892, column: 22, scope: !11597)
!11599 = !DILocation(line: 6892, column: 25, scope: !11597)
!11600 = !DILocation(line: 6892, column: 42, scope: !11597)
!11601 = !DILocation(line: 6892, column: 12, scope: !11592)
!11602 = !DILocation(line: 6893, column: 5, scope: !11597)
!11603 = !DILocation(line: 6894, column: 12, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 6894, column: 12)
!11605 = !DILocation(line: 6894, column: 41, scope: !11604)
!11606 = !DILocation(line: 6894, column: 12, scope: !11597)
!11607 = !DILocation(line: 6895, column: 5, scope: !11604)
!11608 = !DILocation(line: 6896, column: 12, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11604, file: !3, line: 6896, column: 12)
!11610 = !DILocation(line: 6896, column: 37, scope: !11609)
!11611 = !DILocation(line: 6896, column: 12, scope: !11604)
!11612 = !DILocation(line: 6897, column: 5, scope: !11609)
!11613 = !DILocation(line: 6898, column: 12, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11609, file: !3, line: 6898, column: 12)
!11615 = !DILocation(line: 6899, column: 5, scope: !11614)
!11616 = !DILocation(line: 6899, column: 8, scope: !11614)
!11617 = !DILocation(line: 6898, column: 12, scope: !11609)
!11618 = !DILocation(line: 6900, column: 5, scope: !11614)
!11619 = !DILocation(line: 6903, column: 7, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11614, file: !3, line: 6902, column: 5)
!11621 = !DILocation(line: 6904, column: 11, scope: !11620)
!11622 = !DILocation(line: 6905, column: 2, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 6904, column: 11)
!11624 = !DILocation(line: 6906, column: 36, scope: !11620)
!11625 = !DILocation(line: 6906, column: 27, scope: !11620)
!11626 = !DILocation(line: 6906, column: 25, scope: !11620)
!11627 = !DILocation(line: 6908, column: 11, scope: !11620)
!11628 = !DILocation(line: 6910, column: 8, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !3, line: 6910, column: 8)
!11630 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 6909, column: 2)
!11631 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 6908, column: 11)
!11632 = !DILocation(line: 6910, column: 8, scope: !11630)
!11633 = !DILocation(line: 6912, column: 13, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 6912, column: 13)
!11635 = !DILocation(line: 6912, column: 13, scope: !11629)
!11636 = !DILocation(line: 6914, column: 8, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11634, file: !3, line: 6913, column: 6)
!11638 = !DILocation(line: 6916, column: 6, scope: !11637)
!11639 = !DILocation(line: 6919, column: 24, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11634, file: !3, line: 6918, column: 6)
!11641 = !DILocation(line: 6919, column: 15, scope: !11640)
!11642 = !DILocation(line: 6920, column: 12, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 6920, column: 12)
!11644 = !DILocation(line: 6920, column: 34, scope: !11643)
!11645 = !DILocation(line: 6921, column: 5, scope: !11643)
!11646 = !DILocation(line: 6921, column: 8, scope: !11643)
!11647 = !DILocation(line: 6920, column: 12, scope: !11640)
!11648 = !DILocation(line: 6923, column: 5, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 6922, column: 3)
!11650 = !DILocation(line: 6925, column: 3, scope: !11649)
!11651 = !DILocation(line: 6929, column: 23, scope: !11620)
!11652 = !DILocation(line: 6930, column: 28, scope: !11620)
!11653 = !DILocation(line: 6931, column: 11, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 6931, column: 11)
!11655 = !DILocation(line: 6931, column: 38, scope: !11654)
!11656 = !DILocation(line: 6931, column: 35, scope: !11654)
!11657 = !DILocation(line: 6932, column: 2, scope: !11654)
!11658 = !DILocation(line: 6934, column: 1, scope: !11547)
!11659 = distinct !DISubprogram(name: "set_designator", scope: !3, file: !3, line: 6772, type: !2141, scopeLine: 6773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11660)
!11660 = !{!11661, !11662, !11663}
!11661 = !DILocalVariable(name: "array", arg: 1, scope: !11659, file: !3, line: 6772, type: !453)
!11662 = !DILocalVariable(name: "subtype", scope: !11659, file: !3, line: 6774, type: !460)
!11663 = !DILocalVariable(name: "subcode", scope: !11659, file: !3, line: 6775, type: !134)
!11664 = !DILocation(line: 0, scope: !11659)
!11665 = !DILocation(line: 6779, column: 7, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 6779, column: 7)
!11667 = !DILocation(line: 6779, column: 24, scope: !11666)
!11668 = !DILocation(line: 6784, column: 7, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 6784, column: 7)
!11670 = !DILocation(line: 6779, column: 7, scope: !11659)
!11671 = !DILocation(line: 6787, column: 8, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 6787, column: 7)
!11673 = !DILocation(line: 6787, column: 7, scope: !11659)
!11674 = !DILocation(line: 6789, column: 7, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 6788, column: 5)
!11676 = !DILocation(line: 6793, column: 7, scope: !11675)
!11677 = !DILocation(line: 6793, column: 14, scope: !11675)
!11678 = !DILocation(line: 6793, column: 33, scope: !11675)
!11679 = !DILocation(line: 6794, column: 24, scope: !11675)
!11680 = !DILocation(line: 6794, column: 2, scope: !11675)
!11681 = distinct !{!11681, !11676, !11682}
!11682 = !DILocation(line: 6794, column: 48, scope: !11675)
!11683 = !DILocation(line: 6795, column: 30, scope: !11675)
!11684 = !DILocation(line: 6796, column: 7, scope: !11675)
!11685 = !DILocation(line: 6799, column: 11, scope: !11659)
!11686 = !DILocation(line: 6799, column: 3, scope: !11659)
!11687 = !DILocation(line: 6803, column: 17, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 6800, column: 5)
!11689 = !DILocation(line: 6804, column: 22, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 6804, column: 11)
!11691 = !DILocation(line: 6804, column: 19, scope: !11690)
!11692 = !DILocation(line: 6804, column: 11, scope: !11688)
!11693 = !DILocation(line: 6805, column: 12, scope: !11690)
!11694 = !DILocation(line: 6805, column: 2, scope: !11690)
!11695 = !DILocation(line: 6808, column: 17, scope: !11688)
!11696 = !DILocation(line: 6809, column: 7, scope: !11688)
!11697 = !DILocation(line: 6811, column: 7, scope: !11688)
!11698 = !DILocation(line: 6812, column: 5, scope: !11688)
!11699 = !DILocation(line: 6814, column: 13, scope: !11659)
!11700 = !DILocation(line: 6815, column: 7, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11659, file: !3, line: 6815, column: 7)
!11702 = !DILocation(line: 6815, column: 24, scope: !11701)
!11703 = !DILocation(line: 6815, column: 13, scope: !11701)
!11704 = !DILocation(line: 6817, column: 7, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 6816, column: 5)
!11706 = !DILocation(line: 6818, column: 7, scope: !11705)
!11707 = !DILocation(line: 6820, column: 19, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 6820, column: 12)
!11709 = !DILocation(line: 6822, column: 7, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 6821, column: 5)
!11711 = !DILocation(line: 6823, column: 7, scope: !11710)
!11712 = !DILocation(line: 6826, column: 26, scope: !11659)
!11713 = !DILocation(line: 6827, column: 3, scope: !11659)
!11714 = !DILocation(line: 6828, column: 3, scope: !11659)
!11715 = !DILocation(line: 6829, column: 1, scope: !11659)
!11716 = distinct !DISubprogram(name: "push_range_stack", scope: !3, file: !3, line: 6836, type: !5621, scopeLine: 6837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11717)
!11717 = !{!11718, !11719}
!11718 = !DILocalVariable(name: "range_end", arg: 1, scope: !11716, file: !3, line: 6836, type: !460)
!11719 = !DILocalVariable(name: "p", scope: !11716, file: !3, line: 6838, type: !1915)
!11720 = !DILocation(line: 0, scope: !11716)
!11721 = !DILocation(line: 6840, column: 7, scope: !11716)
!11722 = !DILocation(line: 6841, column: 13, scope: !11716)
!11723 = !DILocation(line: 6841, column: 6, scope: !11716)
!11724 = !DILocation(line: 6841, column: 11, scope: !11716)
!11725 = !DILocation(line: 6842, column: 6, scope: !11716)
!11726 = !DILocation(line: 6842, column: 11, scope: !11716)
!11727 = !DILocation(line: 6843, column: 15, scope: !11716)
!11728 = !DILocation(line: 6843, column: 6, scope: !11716)
!11729 = !DILocation(line: 6843, column: 13, scope: !11716)
!11730 = !DILocation(line: 6844, column: 20, scope: !11716)
!11731 = !DILocation(line: 6844, column: 6, scope: !11716)
!11732 = !DILocation(line: 6844, column: 18, scope: !11716)
!11733 = !DILocation(line: 6845, column: 6, scope: !11716)
!11734 = !DILocation(line: 6845, column: 12, scope: !11716)
!11735 = !DILocation(line: 6846, column: 14, scope: !11716)
!11736 = !DILocation(line: 6846, column: 6, scope: !11716)
!11737 = !DILocation(line: 6846, column: 12, scope: !11716)
!11738 = !DILocation(line: 6847, column: 6, scope: !11716)
!11739 = !DILocation(line: 6847, column: 16, scope: !11716)
!11740 = !DILocation(line: 6848, column: 7, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 6848, column: 7)
!11742 = !DILocation(line: 6848, column: 7, scope: !11716)
!11743 = !DILocation(line: 6849, column: 35, scope: !11741)
!11744 = !DILocation(line: 6849, column: 5, scope: !11741)
!11745 = !DILocation(line: 6850, column: 27, scope: !11716)
!11746 = !DILocation(line: 6851, column: 1, scope: !11716)
!11747 = distinct !DISubprogram(name: "set_init_label", scope: !3, file: !3, line: 6939, type: !5621, scopeLine: 6940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11748)
!11748 = !{!11749, !11750}
!11749 = !DILocalVariable(name: "fieldname", arg: 1, scope: !11747, file: !3, line: 6939, type: !460)
!11750 = !DILocalVariable(name: "tail", scope: !11747, file: !3, line: 6941, type: !460)
!11751 = !DILocation(line: 0, scope: !11747)
!11752 = !DILocation(line: 6943, column: 7, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11747, file: !3, line: 6943, column: 7)
!11754 = !DILocation(line: 6943, column: 7, scope: !11747)
!11755 = !DILocation(line: 6946, column: 24, scope: !11747)
!11756 = !DILocation(line: 6948, column: 7, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11747, file: !3, line: 6948, column: 7)
!11758 = !DILocation(line: 6948, column: 36, scope: !11757)
!11759 = !DILocation(line: 6949, column: 7, scope: !11757)
!11760 = !DILocation(line: 6949, column: 39, scope: !11757)
!11761 = !DILocation(line: 6948, column: 7, scope: !11747)
!11762 = !DILocation(line: 6951, column: 7, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 6950, column: 5)
!11764 = !DILocation(line: 6952, column: 7, scope: !11763)
!11765 = !DILocation(line: 6955, column: 15, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11747, file: !3, line: 6955, column: 3)
!11767 = !DILocation(line: 6955, column: 8, scope: !11766)
!11768 = !DILocation(line: 0, scope: !11766)
!11769 = !DILocation(line: 6955, column: 3, scope: !11766)
!11770 = !DILocation(line: 6958, column: 11, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !3, line: 6958, column: 11)
!11772 = distinct !DILexicalBlock(scope: !11773, file: !3, line: 6957, column: 5)
!11773 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 6955, column: 3)
!11774 = !DILocation(line: 6958, column: 28, scope: !11771)
!11775 = !DILocation(line: 6958, column: 11, scope: !11772)
!11776 = !DILocation(line: 6956, column: 15, scope: !11773)
!11777 = !DILocation(line: 6955, column: 3, scope: !11773)
!11778 = distinct !{!11778, !11769, !11779}
!11779 = !DILocation(line: 6960, column: 5, scope: !11766)
!11780 = !DILocation(line: 6966, column: 26, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 6965, column: 5)
!11782 = distinct !DILexicalBlock(scope: !11747, file: !3, line: 6962, column: 7)
!11783 = !DILocation(line: 6967, column: 23, scope: !11781)
!11784 = !DILocation(line: 6968, column: 28, scope: !11781)
!11785 = !DILocation(line: 6969, column: 11, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 6969, column: 11)
!11787 = !DILocation(line: 6969, column: 11, scope: !11781)
!11788 = !DILocation(line: 6963, column: 5, scope: !11782)
!11789 = !DILocation(line: 6970, column: 2, scope: !11786)
!11790 = !DILocation(line: 6972, column: 1, scope: !11747)
!11791 = distinct !DISubprogram(name: "output_init_element", scope: !3, file: !3, line: 7395, type: !11792, scopeLine: 7397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11794)
!11792 = !DISubroutineType(types: !11793)
!11793 = !{null, !460, !460, !452, !460, !460, !453, !452}
!11794 = !{!11795, !11796, !11797, !11798, !11799, !11800, !11801, !11802, !11803, !11804, !11805, !11806, !11809, !11812, !11820}
!11795 = !DILocalVariable(name: "value", arg: 1, scope: !11791, file: !3, line: 7395, type: !460)
!11796 = !DILocalVariable(name: "origtype", arg: 2, scope: !11791, file: !3, line: 7395, type: !460)
!11797 = !DILocalVariable(name: "strict_string", arg: 3, scope: !11791, file: !3, line: 7395, type: !452)
!11798 = !DILocalVariable(name: "type", arg: 4, scope: !11791, file: !3, line: 7395, type: !460)
!11799 = !DILocalVariable(name: "field", arg: 5, scope: !11791, file: !3, line: 7396, type: !460)
!11800 = !DILocalVariable(name: "pending", arg: 6, scope: !11791, file: !3, line: 7396, type: !453)
!11801 = !DILocalVariable(name: "implicit", arg: 7, scope: !11791, file: !3, line: 7396, type: !452)
!11802 = !DILocalVariable(name: "semantic_type", scope: !11791, file: !3, line: 7398, type: !460)
!11803 = !DILocalVariable(name: "celt", scope: !11791, file: !3, line: 7399, type: !11540)
!11804 = !DILocalVariable(name: "maybe_const", scope: !11791, file: !3, line: 7400, type: !452)
!11805 = !DILocalVariable(name: "npc", scope: !11791, file: !3, line: 7401, type: !452)
!11806 = !DILocalVariable(name: "decl", scope: !11807, file: !3, line: 7424, type: !460)
!11807 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 7420, column: 5)
!11808 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7418, column: 7)
!11809 = !DILocalVariable(name: "checktype", scope: !11810, file: !3, line: 7475, type: !460)
!11810 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 7474, column: 5)
!11811 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7467, column: 7)
!11812 = !DILocalVariable(name: "bitpos", scope: !11813, file: !3, line: 7531, type: !460)
!11813 = distinct !DILexicalBlock(scope: !11814, file: !3, line: 7530, column: 6)
!11814 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 7527, column: 8)
!11815 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 7526, column: 2)
!11816 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 7525, column: 11)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 7521, column: 5)
!11818 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 7518, column: 12)
!11819 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7507, column: 7)
!11820 = !DILocalVariable(name: "unfillpos", scope: !11813, file: !3, line: 7531, type: !460)
!11821 = !DILocation(line: 0, scope: !11791)
!11822 = !DILocation(line: 7400, column: 3, scope: !11791)
!11823 = !DILocation(line: 7400, column: 8, scope: !11791)
!11824 = !DILocation(line: 7403, column: 15, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7403, column: 7)
!11826 = !DILocation(line: 7403, column: 12, scope: !11825)
!11827 = !DILocation(line: 7403, column: 40, scope: !11825)
!11828 = !DILocation(line: 7403, column: 31, scope: !11825)
!11829 = !DILocation(line: 7405, column: 29, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 7404, column: 5)
!11831 = !DILocation(line: 7406, column: 7, scope: !11830)
!11832 = !DILocation(line: 7408, column: 7, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7408, column: 7)
!11834 = !DILocation(line: 7408, column: 37, scope: !11833)
!11835 = !DILocation(line: 7409, column: 7, scope: !11833)
!11836 = !DILocation(line: 7409, column: 11, scope: !11833)
!11837 = !DILocation(line: 7409, column: 29, scope: !11833)
!11838 = !DILocation(line: 7410, column: 4, scope: !11833)
!11839 = !DILocation(line: 7410, column: 25, scope: !11833)
!11840 = !DILocation(line: 7411, column: 7, scope: !11833)
!11841 = !DILocation(line: 7412, column: 5, scope: !11833)
!11842 = !DILocation(line: 7412, column: 8, scope: !11833)
!11843 = !DILocation(line: 7412, column: 25, scope: !11833)
!11844 = !DILocation(line: 7413, column: 5, scope: !11833)
!11845 = !DILocation(line: 7413, column: 8, scope: !11833)
!11846 = !DILocation(line: 7414, column: 7, scope: !11833)
!11847 = !DILocation(line: 7414, column: 22, scope: !11833)
!11848 = !DILocation(line: 7415, column: 8, scope: !11833)
!11849 = !DILocation(line: 7414, column: 11, scope: !11833)
!11850 = !DILocation(line: 7408, column: 7, scope: !11791)
!11851 = !DILocation(line: 7416, column: 42, scope: !11833)
!11852 = !DILocation(line: 7416, column: 13, scope: !11833)
!11853 = !DILocation(line: 7416, column: 5, scope: !11833)
!11854 = !DILocation(line: 7418, column: 7, scope: !11808)
!11855 = !DILocation(line: 7418, column: 25, scope: !11808)
!11856 = !DILocation(line: 7419, column: 10, scope: !11808)
!11857 = !DILocation(line: 7419, column: 7, scope: !11808)
!11858 = !DILocation(line: 7419, column: 37, scope: !11808)
!11859 = !DILocation(line: 7419, column: 52, scope: !11808)
!11860 = !DILocation(line: 7424, column: 19, scope: !11807)
!11861 = !DILocation(line: 7425, column: 15, scope: !11807)
!11862 = !DILocation(line: 7426, column: 5, scope: !11807)
!11863 = !DILocation(line: 7428, column: 9, scope: !11791)
!11864 = !DILocation(line: 7429, column: 7, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7429, column: 7)
!11866 = !DILocation(line: 7429, column: 25, scope: !11865)
!11867 = !DILocation(line: 7429, column: 7, scope: !11791)
!11868 = !DILocation(line: 7431, column: 23, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 7430, column: 5)
!11870 = !DILocation(line: 7432, column: 15, scope: !11869)
!11871 = !DILocation(line: 7433, column: 5, scope: !11869)
!11872 = !DILocation(line: 7434, column: 32, scope: !11791)
!11873 = !DILocation(line: 7434, column: 11, scope: !11791)
!11874 = !DILocation(line: 7436, column: 16, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7436, column: 7)
!11876 = !DILocation(line: 7436, column: 13, scope: !11875)
!11877 = !DILocation(line: 7436, column: 7, scope: !11791)
!11878 = !DILocation(line: 7437, column: 27, scope: !11875)
!11879 = !DILocation(line: 7437, column: 5, scope: !11875)
!11880 = !DILocation(line: 7438, column: 13, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 7438, column: 12)
!11882 = !DILocation(line: 7438, column: 12, scope: !11875)
!11883 = !DILocation(line: 7439, column: 26, scope: !11881)
!11884 = !DILocation(line: 7439, column: 5, scope: !11881)
!11885 = !DILocation(line: 7440, column: 50, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11881, file: !3, line: 7440, column: 12)
!11887 = !DILocation(line: 7440, column: 13, scope: !11886)
!11888 = !DILocation(line: 7441, column: 5, scope: !11886)
!11889 = !DILocation(line: 7441, column: 10, scope: !11886)
!11890 = !DILocation(line: 7441, column: 39, scope: !11886)
!11891 = !DILocation(line: 7442, column: 3, scope: !11886)
!11892 = !DILocation(line: 7442, column: 35, scope: !11886)
!11893 = !DILocation(line: 7443, column: 9, scope: !11886)
!11894 = !DILocation(line: 7443, column: 12, scope: !11886)
!11895 = !DILocation(line: 7444, column: 9, scope: !11886)
!11896 = !DILocation(line: 7444, column: 12, scope: !11886)
!11897 = !DILocation(line: 7444, column: 30, scope: !11886)
!11898 = !DILocation(line: 7440, column: 12, scope: !11881)
!11899 = !DILocation(line: 7445, column: 24, scope: !11886)
!11900 = !DILocation(line: 7445, column: 5, scope: !11886)
!11901 = !DILocation(line: 7446, column: 8, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7446, column: 7)
!11903 = !DILocation(line: 7446, column: 7, scope: !11791)
!11904 = !DILocation(line: 7447, column: 26, scope: !11902)
!11905 = !DILocation(line: 7447, column: 5, scope: !11902)
!11906 = !DILocation(line: 7449, column: 45, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7449, column: 7)
!11908 = !DILocation(line: 7449, column: 8, scope: !11907)
!11909 = !DILocation(line: 7449, column: 7, scope: !11791)
!11910 = !DILocation(line: 7451, column: 11, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 7451, column: 11)
!11912 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 7450, column: 5)
!11913 = !DILocation(line: 7451, column: 11, scope: !11912)
!11914 = !DILocation(line: 7453, column: 4, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 7452, column: 2)
!11916 = !DILocation(line: 7454, column: 12, scope: !11915)
!11917 = !DILocation(line: 7455, column: 2, scope: !11915)
!11918 = !DILocation(line: 7456, column: 16, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 7456, column: 16)
!11920 = !DILocation(line: 7456, column: 16, scope: !11911)
!11921 = !DILocation(line: 7457, column: 11, scope: !11919)
!11922 = !DILocation(line: 7457, column: 2, scope: !11919)
!11923 = !DILocation(line: 7460, column: 13, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 7460, column: 12)
!11925 = !DILocation(line: 7461, column: 5, scope: !11924)
!11926 = !DILocation(line: 7461, column: 9, scope: !11924)
!11927 = !DILocation(line: 7461, column: 35, scope: !11924)
!11928 = !DILocation(line: 7461, column: 32, scope: !11924)
!11929 = !DILocation(line: 7462, column: 19, scope: !11924)
!11930 = !DILocation(line: 7462, column: 5, scope: !11924)
!11931 = !DILocation(line: 7467, column: 7, scope: !11811)
!11932 = !DILocation(line: 7468, column: 16, scope: !11811)
!11933 = !DILocation(line: 7468, column: 7, scope: !11811)
!11934 = !DILocation(line: 7469, column: 10, scope: !11811)
!11935 = !DILocation(line: 7469, column: 28, scope: !11811)
!11936 = !DILocation(line: 7470, column: 7, scope: !11811)
!11937 = !DILocation(line: 7470, column: 10, scope: !11811)
!11938 = !DILocation(line: 7470, column: 38, scope: !11811)
!11939 = !DILocation(line: 7471, column: 7, scope: !11811)
!11940 = !DILocation(line: 7471, column: 11, scope: !11811)
!11941 = !DILocation(line: 7472, column: 7, scope: !11811)
!11942 = !DILocation(line: 7472, column: 4, scope: !11811)
!11943 = !DILocation(line: 7473, column: 7, scope: !11811)
!11944 = !DILocation(line: 7473, column: 10, scope: !11811)
!11945 = !DILocation(line: 7473, column: 50, scope: !11811)
!11946 = !DILocation(line: 7467, column: 7, scope: !11791)
!11947 = !DILocation(line: 7475, column: 33, scope: !11810)
!11948 = !DILocation(line: 7475, column: 24, scope: !11810)
!11949 = !DILocation(line: 7475, column: 59, scope: !11810)
!11950 = !DILocation(line: 0, scope: !11810)
!11951 = !DILocation(line: 7476, column: 24, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 7476, column: 11)
!11953 = !DILocation(line: 7476, column: 21, scope: !11952)
!11954 = !DILocation(line: 7477, column: 4, scope: !11952)
!11955 = !DILocation(line: 7477, column: 8, scope: !11952)
!11956 = !DILocation(line: 7478, column: 8, scope: !11952)
!11957 = !DILocation(line: 7476, column: 11, scope: !11810)
!11958 = !DILocation(line: 7479, column: 2, scope: !11952)
!11959 = !DILocation(line: 7485, column: 7, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7485, column: 7)
!11961 = !DILocation(line: 7486, column: 7, scope: !11960)
!11962 = !DILocation(line: 7486, column: 11, scope: !11960)
!11963 = !DILocation(line: 7486, column: 32, scope: !11960)
!11964 = !DILocation(line: 7486, column: 29, scope: !11960)
!11965 = !DILocation(line: 7487, column: 4, scope: !11960)
!11966 = !DILocation(line: 7487, column: 8, scope: !11960)
!11967 = !DILocation(line: 7488, column: 8, scope: !11960)
!11968 = !DILocation(line: 7488, column: 11, scope: !11960)
!11969 = !DILocation(line: 7489, column: 8, scope: !11960)
!11970 = !DILocation(line: 7489, column: 12, scope: !11960)
!11971 = !DILocation(line: 7489, column: 41, scope: !11960)
!11972 = !DILocation(line: 7490, column: 5, scope: !11960)
!11973 = !DILocation(line: 7490, column: 8, scope: !11960)
!11974 = !DILocation(line: 7485, column: 7, scope: !11791)
!11975 = !DILocation(line: 7493, column: 7, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7493, column: 7)
!11977 = !DILocation(line: 7493, column: 7, scope: !11791)
!11978 = !DILocation(line: 7494, column: 13, scope: !11976)
!11979 = !DILocation(line: 7494, column: 5, scope: !11976)
!11980 = !DILocation(line: 7495, column: 24, scope: !11791)
!11981 = !DILocation(line: 7496, column: 31, scope: !11791)
!11982 = !DILocation(line: 7495, column: 11, scope: !11791)
!11983 = !DILocation(line: 7497, column: 16, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7497, column: 7)
!11985 = !DILocation(line: 7497, column: 13, scope: !11984)
!11986 = !DILocation(line: 7497, column: 7, scope: !11791)
!11987 = !DILocation(line: 7499, column: 29, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 7498, column: 5)
!11989 = !DILocation(line: 7500, column: 7, scope: !11988)
!11990 = !DILocation(line: 7502, column: 7, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7502, column: 7)
!11992 = !DILocation(line: 7502, column: 33, scope: !11991)
!11993 = !DILocation(line: 7502, column: 30, scope: !11991)
!11994 = !DILocation(line: 7503, column: 5, scope: !11991)
!11995 = !DILocation(line: 7507, column: 7, scope: !11819)
!11996 = !DILocation(line: 7507, column: 36, scope: !11819)
!11997 = !DILocation(line: 7508, column: 7, scope: !11819)
!11998 = !DILocation(line: 7508, column: 12, scope: !11819)
!11999 = !DILocation(line: 7509, column: 4, scope: !11819)
!12000 = !DILocation(line: 7509, column: 35, scope: !11819)
!12001 = !DILocation(line: 7509, column: 8, scope: !11819)
!12002 = !DILocation(line: 7507, column: 7, scope: !11791)
!12003 = !DILocation(line: 7511, column: 11, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 7511, column: 11)
!12005 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 7510, column: 5)
!12006 = !DILocation(line: 7518, column: 12, scope: !11818)
!12007 = !DILocation(line: 7512, column: 4, scope: !12004)
!12008 = !DILocation(line: 7512, column: 31, scope: !12004)
!12009 = !DILocation(line: 7512, column: 7, scope: !12004)
!12010 = !DILocation(line: 7511, column: 11, scope: !12005)
!12011 = !DILocation(line: 7513, column: 2, scope: !12004)
!12012 = !DILocation(line: 7515, column: 7, scope: !12005)
!12013 = !DILocation(line: 7516, column: 7, scope: !12005)
!12014 = !DILocation(line: 7518, column: 41, scope: !11818)
!12015 = !DILocation(line: 7519, column: 5, scope: !11818)
!12016 = !DILocation(line: 7519, column: 10, scope: !11818)
!12017 = !DILocation(line: 7520, column: 21, scope: !11818)
!12018 = !DILocation(line: 7520, column: 18, scope: !11818)
!12019 = !DILocation(line: 7520, column: 9, scope: !11818)
!12020 = !DILocation(line: 7525, column: 11, scope: !11817)
!12021 = !DILocation(line: 7527, column: 9, scope: !11814)
!12022 = !DILocation(line: 7527, column: 8, scope: !11815)
!12023 = !DILocation(line: 7528, column: 6, scope: !11814)
!12024 = !DILocation(line: 7533, column: 17, scope: !11813)
!12025 = !DILocation(line: 0, scope: !11813)
!12026 = !DILocation(line: 7534, column: 34, scope: !11813)
!12027 = !DILocation(line: 7534, column: 20, scope: !11813)
!12028 = !DILocation(line: 7536, column: 12, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !11813, file: !3, line: 7536, column: 12)
!12030 = !DILocation(line: 7536, column: 12, scope: !11813)
!12031 = !DILocation(line: 7537, column: 3, scope: !12029)
!12032 = !DILocation(line: 7541, column: 7, scope: !11817)
!12033 = !DILocation(line: 7542, column: 7, scope: !11817)
!12034 = !DILocation(line: 7544, column: 41, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 7544, column: 12)
!12036 = !DILocation(line: 7545, column: 5, scope: !12035)
!12037 = !DILocation(line: 7545, column: 9, scope: !12035)
!12038 = !DILocation(line: 7544, column: 12, scope: !11818)
!12039 = !DILocation(line: 7547, column: 12, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 7547, column: 11)
!12041 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 7546, column: 5)
!12042 = !DILocation(line: 7547, column: 11, scope: !12041)
!12043 = !DILocation(line: 7549, column: 8, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !3, line: 7549, column: 8)
!12045 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 7548, column: 2)
!12046 = !DILocation(line: 7549, column: 8, scope: !12045)
!12047 = !DILocation(line: 7551, column: 6, scope: !12044)
!12048 = !DILocation(line: 7553, column: 13, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 7553, column: 13)
!12050 = !DILocation(line: 7553, column: 13, scope: !12044)
!12051 = !DILocation(line: 7554, column: 6, scope: !12049)
!12052 = !DILocation(line: 7558, column: 28, scope: !12041)
!12053 = !DILocation(line: 7559, column: 5, scope: !12041)
!12054 = !DILocation(line: 7564, column: 10, scope: !11791)
!12055 = !DILocation(line: 7565, column: 9, scope: !11791)
!12056 = !DILocation(line: 7565, column: 15, scope: !11791)
!12057 = !DILocation(line: 7566, column: 9, scope: !11791)
!12058 = !DILocation(line: 7566, column: 15, scope: !11791)
!12059 = !DILocation(line: 7569, column: 7, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7569, column: 7)
!12061 = !DILocation(line: 7569, column: 36, scope: !12060)
!12062 = !DILocation(line: 7569, column: 7, scope: !11791)
!12063 = !DILocation(line: 7571, column: 25, scope: !12060)
!12064 = !DILocation(line: 7571, column: 52, scope: !12060)
!12065 = !DILocation(line: 7572, column: 4, scope: !12060)
!12066 = !DILocation(line: 7571, column: 9, scope: !12060)
!12067 = !DILocation(line: 7571, column: 7, scope: !12060)
!12068 = !DILocation(line: 7570, column: 5, scope: !12060)
!12069 = !DILocation(line: 7573, column: 41, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 7573, column: 12)
!12071 = !DILocation(line: 7573, column: 12, scope: !12060)
!12072 = !DILocation(line: 0, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 7574, column: 5)
!12074 = !DILocation(line: 7579, column: 7, scope: !12073)
!12075 = !DILocation(line: 7579, column: 42, scope: !12073)
!12076 = !DILocation(line: 7580, column: 7, scope: !12073)
!12077 = !DILocation(line: 7580, column: 10, scope: !12073)
!12078 = !DILocation(line: 7581, column: 7, scope: !12073)
!12079 = !DILocation(line: 7581, column: 10, scope: !12073)
!12080 = !DILocation(line: 7581, column: 50, scope: !12073)
!12081 = distinct !{!12081, !12074, !12082}
!12082 = !DILocation(line: 7583, column: 4, scope: !12073)
!12083 = !DILocation(line: 7585, column: 41, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 7585, column: 12)
!12085 = !DILocation(line: 7585, column: 12, scope: !12070)
!12086 = !DILocation(line: 7586, column: 33, scope: !12084)
!12087 = !DILocation(line: 7586, column: 5, scope: !12084)
!12088 = !DILocation(line: 7589, column: 7, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 7589, column: 7)
!12090 = !DILocation(line: 7589, column: 7, scope: !11791)
!12091 = !DILocation(line: 7590, column: 5, scope: !12089)
!12092 = !DILocation(line: 7591, column: 1, scope: !11791)
!12093 = distinct !DISubprogram(name: "build_asm_stmt", scope: !3, file: !3, line: 8145, type: !2612, scopeLine: 8146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12094)
!12094 = !{!12095, !12096}
!12095 = !DILocalVariable(name: "cv_qualifier", arg: 1, scope: !12093, file: !3, line: 8145, type: !460)
!12096 = !DILocalVariable(name: "args", arg: 2, scope: !12093, file: !3, line: 8145, type: !460)
!12097 = !DILocation(line: 0, scope: !12093)
!12098 = !DILocation(line: 8147, column: 8, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 8147, column: 7)
!12100 = !DILocation(line: 8147, column: 33, scope: !12099)
!12101 = !DILocation(line: 8147, column: 30, scope: !12099)
!12102 = !DILocation(line: 8148, column: 27, scope: !12099)
!12103 = !DILocation(line: 8148, column: 5, scope: !12099)
!12104 = !DILocation(line: 8149, column: 10, scope: !12093)
!12105 = !DILocation(line: 8149, column: 3, scope: !12093)
!12106 = distinct !DISubprogram(name: "build_asm_expr", scope: !3, file: !3, line: 8158, type: !12107, scopeLine: 8160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12109)
!12107 = !DISubroutineType(types: !12108)
!12108 = !{!460, !585, !460, !460, !460, !460, !460, !452}
!12109 = !{!12110, !12111, !12112, !12113, !12114, !12115, !12116, !12117, !12118, !12119, !12120, !12121, !12122, !12123, !12124, !12125, !12126, !12127, !12131}
!12110 = !DILocalVariable(name: "loc", arg: 1, scope: !12106, file: !3, line: 8158, type: !585)
!12111 = !DILocalVariable(name: "string", arg: 2, scope: !12106, file: !3, line: 8158, type: !460)
!12112 = !DILocalVariable(name: "outputs", arg: 3, scope: !12106, file: !3, line: 8158, type: !460)
!12113 = !DILocalVariable(name: "inputs", arg: 4, scope: !12106, file: !3, line: 8158, type: !460)
!12114 = !DILocalVariable(name: "clobbers", arg: 5, scope: !12106, file: !3, line: 8159, type: !460)
!12115 = !DILocalVariable(name: "labels", arg: 6, scope: !12106, file: !3, line: 8159, type: !460)
!12116 = !DILocalVariable(name: "simple", arg: 7, scope: !12106, file: !3, line: 8159, type: !452)
!12117 = !DILocalVariable(name: "tail", scope: !12106, file: !3, line: 8161, type: !460)
!12118 = !DILocalVariable(name: "args", scope: !12106, file: !3, line: 8162, type: !460)
!12119 = !DILocalVariable(name: "i", scope: !12106, file: !3, line: 8163, type: !453)
!12120 = !DILocalVariable(name: "constraint", scope: !12106, file: !3, line: 8164, type: !458)
!12121 = !DILocalVariable(name: "oconstraints", scope: !12106, file: !3, line: 8165, type: !1950)
!12122 = !DILocalVariable(name: "allows_mem", scope: !12106, file: !3, line: 8166, type: !452)
!12123 = !DILocalVariable(name: "allows_reg", scope: !12106, file: !3, line: 8166, type: !452)
!12124 = !DILocalVariable(name: "is_inout", scope: !12106, file: !3, line: 8166, type: !452)
!12125 = !DILocalVariable(name: "ninputs", scope: !12106, file: !3, line: 8167, type: !453)
!12126 = !DILocalVariable(name: "noutputs", scope: !12106, file: !3, line: 8167, type: !453)
!12127 = !DILocalVariable(name: "output", scope: !12128, file: !3, line: 8178, type: !460)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 8177, column: 5)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 8176, column: 3)
!12130 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 8176, column: 3)
!12131 = !DILocalVariable(name: "input", scope: !12132, file: !3, line: 8218, type: !460)
!12132 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 8217, column: 5)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 8216, column: 3)
!12134 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 8216, column: 3)
!12135 = !DILocation(line: 0, scope: !12106)
!12136 = !DILocation(line: 8164, column: 3, scope: !12106)
!12137 = !DILocation(line: 8166, column: 3, scope: !12106)
!12138 = !DILocation(line: 8169, column: 13, scope: !12106)
!12139 = !DILocation(line: 8170, column: 14, scope: !12106)
!12140 = !DILocation(line: 8171, column: 34, scope: !12106)
!12141 = !DILocation(line: 8173, column: 12, scope: !12106)
!12142 = !DILocation(line: 8176, column: 8, scope: !12130)
!12143 = !DILocation(line: 0, scope: !12130)
!12144 = !DILocation(line: 8176, column: 3, scope: !12130)
!12145 = !DILocation(line: 8216, column: 3, scope: !12134)
!12146 = !DILocation(line: 8178, column: 21, scope: !12128)
!12147 = !DILocation(line: 0, scope: !12128)
!12148 = !DILocation(line: 8186, column: 7, scope: !12128)
!12149 = !DILocation(line: 8188, column: 12, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 8188, column: 11)
!12151 = !DILocation(line: 8189, column: 11, scope: !12150)
!12152 = !DILocation(line: 8188, column: 11, scope: !12128)
!12153 = !DILocation(line: 8191, column: 18, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 8191, column: 11)
!12155 = !DILocation(line: 8192, column: 4, scope: !12154)
!12156 = !DILocation(line: 8192, column: 8, scope: !12154)
!12157 = !DILocation(line: 8193, column: 8, scope: !12154)
!12158 = !DILocation(line: 8193, column: 11, scope: !12154)
!12159 = !DILocation(line: 8194, column: 8, scope: !12154)
!12160 = !DILocation(line: 8194, column: 44, scope: !12154)
!12161 = !DILocation(line: 8195, column: 6, scope: !12154)
!12162 = !DILocation(line: 8195, column: 40, scope: !12154)
!12163 = !DILocation(line: 8196, column: 5, scope: !12154)
!12164 = !DILocation(line: 8196, column: 8, scope: !12154)
!12165 = !DILocation(line: 8191, column: 11, scope: !12128)
!12166 = !DILocation(line: 8197, column: 2, scope: !12154)
!12167 = !DILocation(line: 8199, column: 20, scope: !12128)
!12168 = !DILocation(line: 8199, column: 18, scope: !12128)
!12169 = !DILocation(line: 8200, column: 25, scope: !12128)
!12170 = !DILocation(line: 8200, column: 7, scope: !12128)
!12171 = !DILocation(line: 8200, column: 23, scope: !12128)
!12172 = !DILocation(line: 8202, column: 11, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 8202, column: 11)
!12174 = !DILocation(line: 8202, column: 11, scope: !12128)
!12175 = !DILocation(line: 8207, column: 9, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 8207, column: 8)
!12177 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 8204, column: 2)
!12178 = !DILocation(line: 8207, column: 20, scope: !12176)
!12179 = !DILocation(line: 8207, column: 24, scope: !12176)
!12180 = !DILocation(line: 8208, column: 15, scope: !12176)
!12181 = !DILocation(line: 8207, column: 8, scope: !12177)
!12182 = !DILocation(line: 8211, column: 11, scope: !12173)
!12183 = !DILocation(line: 8213, column: 25, scope: !12128)
!12184 = !DILocation(line: 8176, column: 37, scope: !12129)
!12185 = !DILocation(line: 8176, column: 49, scope: !12129)
!12186 = !DILocation(line: 8176, column: 3, scope: !12129)
!12187 = distinct !{!12187, !12144, !12188}
!12188 = !DILocation(line: 8214, column: 5, scope: !12130)
!12189 = !DILocation(line: 0, scope: !12134)
!12190 = !DILocation(line: 8220, column: 20, scope: !12132)
!12191 = !DILocation(line: 8220, column: 18, scope: !12132)
!12192 = !DILocation(line: 8221, column: 15, scope: !12132)
!12193 = !DILocation(line: 0, scope: !12132)
!12194 = !DILocation(line: 8223, column: 11, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12132, file: !3, line: 8223, column: 11)
!12196 = !DILocation(line: 8223, column: 11, scope: !12132)
!12197 = !DILocation(line: 8228, column: 9, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12199, file: !3, line: 8228, column: 8)
!12199 = distinct !DILexicalBlock(scope: !12195, file: !3, line: 8225, column: 2)
!12200 = !DILocation(line: 8228, column: 20, scope: !12198)
!12201 = !DILocation(line: 8228, column: 23, scope: !12198)
!12202 = !DILocation(line: 8228, column: 8, scope: !12199)
!12203 = !DILocation(line: 8232, column: 8, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12198, file: !3, line: 8229, column: 6)
!12205 = !DILocation(line: 8233, column: 13, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12204, file: !3, line: 8233, column: 12)
!12207 = !DILocation(line: 8234, column: 11, scope: !12206)
!12208 = !DILocation(line: 8233, column: 12, scope: !12204)
!12209 = !DILocation(line: 8235, column: 4, scope: !12204)
!12210 = !DILocation(line: 8238, column: 10, scope: !12195)
!12211 = !DILocation(line: 8240, column: 25, scope: !12132)
!12212 = !DILocation(line: 8216, column: 36, scope: !12133)
!12213 = !DILocation(line: 8216, column: 48, scope: !12133)
!12214 = !DILocation(line: 8216, column: 3, scope: !12133)
!12215 = distinct !{!12215, !12145, !12216}
!12216 = !DILocation(line: 8241, column: 5, scope: !12134)
!12217 = !DILocation(line: 8245, column: 3, scope: !12106)
!12218 = !DILocation(line: 8247, column: 10, scope: !12106)
!12219 = !DILocation(line: 8251, column: 3, scope: !12106)
!12220 = !DILocation(line: 8251, column: 22, scope: !12106)
!12221 = !DILocation(line: 8252, column: 37, scope: !12106)
!12222 = !DILocation(line: 8252, column: 25, scope: !12106)
!12223 = !DILocation(line: 8255, column: 1, scope: !12106)
!12224 = !DILocation(line: 8254, column: 3, scope: !12106)
!12225 = distinct !DISubprogram(name: "c_finish_goto_label", scope: !3, file: !3, line: 8261, type: !3870, scopeLine: 8262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12226)
!12226 = !{!12227, !12228, !12229, !12230}
!12227 = !DILocalVariable(name: "loc", arg: 1, scope: !12225, file: !3, line: 8261, type: !585)
!12228 = !DILocalVariable(name: "label", arg: 2, scope: !12225, file: !3, line: 8261, type: !460)
!12229 = !DILocalVariable(name: "decl", scope: !12225, file: !3, line: 8263, type: !460)
!12230 = !DILocalVariable(name: "t", scope: !12231, file: !3, line: 8268, type: !460)
!12231 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 8267, column: 3)
!12232 = !DILocation(line: 0, scope: !12225)
!12233 = !DILocation(line: 8263, column: 15, scope: !12225)
!12234 = !DILocation(line: 8264, column: 8, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 8264, column: 7)
!12236 = !DILocation(line: 8264, column: 7, scope: !12225)
!12237 = !DILocation(line: 8266, column: 3, scope: !12225)
!12238 = !DILocation(line: 8266, column: 20, scope: !12225)
!12239 = !DILocation(line: 8268, column: 14, scope: !12231)
!12240 = !DILocation(line: 0, scope: !12231)
!12241 = !DILocation(line: 8269, column: 5, scope: !12231)
!12242 = !DILocation(line: 8270, column: 12, scope: !12231)
!12243 = !DILocation(line: 8272, column: 1, scope: !12225)
!12244 = distinct !DISubprogram(name: "c_finish_goto_ptr", scope: !3, file: !3, line: 8278, type: !3870, scopeLine: 8279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12245)
!12245 = !{!12246, !12247, !12248}
!12246 = !DILocalVariable(name: "loc", arg: 1, scope: !12244, file: !3, line: 8278, type: !585)
!12247 = !DILocalVariable(name: "expr", arg: 2, scope: !12244, file: !3, line: 8278, type: !460)
!12248 = !DILocalVariable(name: "t", scope: !12244, file: !3, line: 8280, type: !460)
!12249 = !DILocation(line: 0, scope: !12244)
!12250 = !DILocation(line: 8281, column: 3, scope: !12244)
!12251 = !DILocation(line: 8282, column: 10, scope: !12244)
!12252 = !DILocation(line: 8283, column: 19, scope: !12244)
!12253 = !DILocation(line: 8283, column: 10, scope: !12244)
!12254 = !DILocation(line: 8284, column: 7, scope: !12244)
!12255 = !DILocation(line: 8285, column: 3, scope: !12244)
!12256 = !DILocation(line: 8286, column: 10, scope: !12244)
!12257 = !DILocation(line: 8286, column: 3, scope: !12244)
!12258 = distinct !DISubprogram(name: "c_finish_return", scope: !3, file: !3, line: 8295, type: !4022, scopeLine: 8296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12259)
!12259 = !{!12260, !12261, !12262, !12263, !12264, !12265, !12266, !12267, !12270, !12274, !12275, !12276}
!12260 = !DILocalVariable(name: "loc", arg: 1, scope: !12258, file: !3, line: 8295, type: !585)
!12261 = !DILocalVariable(name: "retval", arg: 2, scope: !12258, file: !3, line: 8295, type: !460)
!12262 = !DILocalVariable(name: "origtype", arg: 3, scope: !12258, file: !3, line: 8295, type: !460)
!12263 = !DILocalVariable(name: "valtype", scope: !12258, file: !3, line: 8297, type: !460)
!12264 = !DILocalVariable(name: "ret_stmt", scope: !12258, file: !3, line: 8297, type: !460)
!12265 = !DILocalVariable(name: "no_warning", scope: !12258, file: !3, line: 8298, type: !452)
!12266 = !DILocalVariable(name: "npc", scope: !12258, file: !3, line: 8299, type: !452)
!12267 = !DILocalVariable(name: "semantic_type", scope: !12268, file: !3, line: 8307, type: !460)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 8306, column: 5)
!12269 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 8305, column: 7)
!12270 = !DILocalVariable(name: "t", scope: !12271, file: !3, line: 8343, type: !460)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 8342, column: 5)
!12272 = distinct !DILexicalBlock(scope: !12273, file: !3, line: 8331, column: 12)
!12273 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 8319, column: 7)
!12274 = !DILocalVariable(name: "res", scope: !12271, file: !3, line: 8346, type: !460)
!12275 = !DILocalVariable(name: "inner", scope: !12271, file: !3, line: 8347, type: !460)
!12276 = !DILocalVariable(name: "op1", scope: !12277, file: !3, line: 8373, type: !460)
!12277 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 8372, column: 8)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 8360, column: 6)
!12279 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 8358, column: 2)
!12280 = !DILocation(line: 0, scope: !12258)
!12281 = !DILocation(line: 8297, column: 18, scope: !12258)
!12282 = !DILocation(line: 8301, column: 7, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 8301, column: 7)
!12284 = !DILocation(line: 8301, column: 7, scope: !12258)
!12285 = !DILocation(line: 8302, column: 5, scope: !12283)
!12286 = !DILocation(line: 8305, column: 7, scope: !12269)
!12287 = !DILocation(line: 8305, column: 7, scope: !12258)
!12288 = !DILocation(line: 0, scope: !12268)
!12289 = !DILocation(line: 8308, column: 13, scope: !12268)
!12290 = !DILocation(line: 8309, column: 11, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12268, file: !3, line: 8309, column: 11)
!12292 = !DILocation(line: 8309, column: 30, scope: !12291)
!12293 = !DILocation(line: 8309, column: 11, scope: !12268)
!12294 = !DILocation(line: 8311, column: 20, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 8310, column: 2)
!12296 = !DILocation(line: 8312, column: 13, scope: !12295)
!12297 = !DILocation(line: 8313, column: 2, scope: !12295)
!12298 = !DILocation(line: 8314, column: 16, scope: !12268)
!12299 = !DILocation(line: 8315, column: 11, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12268, file: !3, line: 8315, column: 11)
!12301 = !DILocation(line: 8315, column: 11, scope: !12268)
!12302 = !DILocation(line: 8316, column: 11, scope: !12300)
!12303 = !DILocation(line: 8316, column: 2, scope: !12300)
!12304 = !DILocation(line: 8319, column: 8, scope: !12273)
!12305 = !DILocation(line: 8319, column: 7, scope: !12258)
!12306 = !DILocation(line: 8321, column: 37, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12273, file: !3, line: 8320, column: 5)
!12308 = !DILocation(line: 8322, column: 12, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12307, file: !3, line: 8322, column: 11)
!12310 = !DILocation(line: 8322, column: 32, scope: !12309)
!12311 = !DILocation(line: 8322, column: 29, scope: !12309)
!12312 = !DILocation(line: 8323, column: 15, scope: !12309)
!12313 = !DILocation(line: 8323, column: 23, scope: !12309)
!12314 = !DILocation(line: 8323, column: 43, scope: !12309)
!12315 = !DILocation(line: 8322, column: 11, scope: !12307)
!12316 = !DILocation(line: 8325, column: 22, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12309, file: !3, line: 8324, column: 2)
!12318 = !DILocation(line: 8325, column: 4, scope: !12317)
!12319 = !DILocation(line: 8329, column: 2, scope: !12317)
!12320 = !DILocation(line: 8331, column: 20, scope: !12272)
!12321 = !DILocation(line: 8331, column: 25, scope: !12272)
!12322 = !DILocation(line: 8331, column: 28, scope: !12272)
!12323 = !DILocation(line: 8331, column: 48, scope: !12272)
!12324 = !DILocation(line: 8331, column: 12, scope: !12273)
!12325 = !DILocation(line: 8333, column: 37, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 8332, column: 5)
!12327 = !DILocation(line: 8334, column: 11, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 8334, column: 11)
!12329 = !DILocation(line: 8334, column: 42, scope: !12328)
!12330 = !DILocation(line: 8334, column: 11, scope: !12326)
!12331 = !DILocation(line: 8335, column: 2, scope: !12328)
!12332 = !DILocation(line: 8338, column: 2, scope: !12328)
!12333 = !DILocation(line: 8343, column: 16, scope: !12271)
!12334 = !DILocation(line: 0, scope: !12271)
!12335 = !DILocation(line: 8346, column: 18, scope: !12271)
!12336 = !DILocation(line: 8349, column: 38, scope: !12271)
!12337 = !DILocation(line: 8350, column: 16, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 8350, column: 11)
!12339 = !DILocation(line: 8350, column: 13, scope: !12338)
!12340 = !DILocation(line: 8350, column: 11, scope: !12271)
!12341 = !DILocation(line: 8353, column: 28, scope: !12271)
!12342 = !DILocation(line: 8353, column: 19, scope: !12271)
!12343 = !DILocation(line: 8357, column: 7, scope: !12271)
!12344 = !DILocation(line: 8359, column: 12, scope: !12279)
!12345 = !DILocation(line: 8359, column: 4, scope: !12279)
!12346 = !DILocation(line: 8365, column: 16, scope: !12278)
!12347 = !DILocation(line: 8366, column: 8, scope: !12278)
!12348 = distinct !{!12348, !12343, !12349}
!12349 = !DILocation(line: 8407, column: 2, scope: !12271)
!12350 = !DILocation(line: 8373, column: 14, scope: !12277)
!12351 = !DILocation(line: 8375, column: 3, scope: !12277)
!12352 = !DILocation(line: 0, scope: !12277)
!12353 = !DILocation(line: 8375, column: 11, scope: !12277)
!12354 = !DILocation(line: 8376, column: 14, scope: !12277)
!12355 = !DILocation(line: 8377, column: 7, scope: !12277)
!12356 = !DILocation(line: 8378, column: 11, scope: !12277)
!12357 = distinct !{!12357, !12351, !12356}
!12358 = !DILocation(line: 8380, column: 7, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 8380, column: 7)
!12360 = !DILocation(line: 8380, column: 7, scope: !12277)
!12361 = !DILocation(line: 8383, column: 11, scope: !12277)
!12362 = !DILocation(line: 8384, column: 3, scope: !12277)
!12363 = !DILocation(line: 8390, column: 8, scope: !12278)
!12364 = !DILocation(line: 0, scope: !12278)
!12365 = !DILocation(line: 8390, column: 15, scope: !12278)
!12366 = !DILocation(line: 8391, column: 29, scope: !12278)
!12367 = !DILocation(line: 8391, column: 8, scope: !12278)
!12368 = distinct !{!12368, !12363, !12369}
!12369 = !DILocation(line: 8392, column: 11, scope: !12278)
!12370 = !DILocation(line: 8394, column: 12, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 8394, column: 12)
!12372 = !DILocation(line: 8395, column: 5, scope: !12371)
!12373 = !DILocation(line: 8395, column: 9, scope: !12371)
!12374 = !DILocation(line: 8396, column: 5, scope: !12371)
!12375 = !DILocation(line: 8396, column: 9, scope: !12371)
!12376 = !DILocation(line: 8397, column: 5, scope: !12371)
!12377 = !DILocation(line: 8397, column: 8, scope: !12371)
!12378 = !DILocation(line: 8397, column: 32, scope: !12371)
!12379 = !DILocation(line: 8397, column: 29, scope: !12371)
!12380 = !DILocation(line: 8394, column: 12, scope: !12278)
!12381 = !DILocation(line: 8398, column: 3, scope: !12371)
!12382 = !DILocation(line: 8409, column: 16, scope: !12271)
!12383 = !DILocation(line: 8410, column: 7, scope: !12271)
!12384 = !DILocation(line: 8412, column: 11, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 8412, column: 11)
!12386 = !DILocation(line: 8412, column: 11, scope: !12271)
!12387 = !DILocation(line: 8413, column: 2, scope: !12385)
!12388 = !DILocation(line: 8316, column: 9, scope: !12300)
!12389 = !DILocation(line: 8416, column: 14, scope: !12258)
!12390 = !DILocation(line: 8417, column: 3, scope: !12258)
!12391 = !DILocation(line: 8417, column: 30, scope: !12258)
!12392 = !DILocation(line: 8418, column: 10, scope: !12258)
!12393 = !DILocation(line: 8418, column: 3, scope: !12258)
!12394 = !DILocation(line: 8419, column: 1, scope: !12258)
!12395 = distinct !DISubprogram(name: "c_start_case", scope: !3, file: !3, line: 8457, type: !12396, scopeLine: 8460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12398)
!12396 = !DISubroutineType(types: !12397)
!12397 = !{!460, !585, !585, !460}
!12398 = !{!12399, !12400, !12401, !12402, !12403, !12404}
!12399 = !DILocalVariable(name: "switch_loc", arg: 1, scope: !12395, file: !3, line: 8457, type: !585)
!12400 = !DILocalVariable(name: "switch_cond_loc", arg: 2, scope: !12395, file: !3, line: 8458, type: !585)
!12401 = !DILocalVariable(name: "exp", arg: 3, scope: !12395, file: !3, line: 8459, type: !460)
!12402 = !DILocalVariable(name: "orig_type", scope: !12395, file: !3, line: 8461, type: !460)
!12403 = !DILocalVariable(name: "cs", scope: !12395, file: !3, line: 8462, type: !1409)
!12404 = !DILocalVariable(name: "type", scope: !12405, file: !3, line: 8479, type: !460)
!12405 = distinct !DILexicalBlock(scope: !12406, file: !3, line: 8478, column: 2)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 8468, column: 11)
!12407 = distinct !DILexicalBlock(scope: !12408, file: !3, line: 8465, column: 5)
!12408 = distinct !DILexicalBlock(scope: !12395, file: !3, line: 8464, column: 7)
!12409 = !DILocation(line: 0, scope: !12395)
!12410 = !DILocation(line: 8461, column: 20, scope: !12395)
!12411 = !DILocation(line: 8464, column: 11, scope: !12408)
!12412 = !DILocation(line: 8464, column: 7, scope: !12395)
!12413 = !DILocation(line: 8466, column: 19, scope: !12407)
!12414 = !DILocation(line: 8468, column: 12, scope: !12406)
!12415 = !DILocation(line: 8468, column: 11, scope: !12407)
!12416 = !DILocation(line: 8470, column: 18, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 8470, column: 8)
!12418 = distinct !DILexicalBlock(scope: !12406, file: !3, line: 8469, column: 2)
!12419 = !DILocation(line: 8470, column: 8, scope: !12418)
!12420 = !DILocation(line: 8472, column: 8, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 8471, column: 6)
!12422 = !DILocation(line: 8473, column: 20, scope: !12421)
!12423 = !DILocation(line: 8474, column: 6, scope: !12421)
!12424 = !DILocation(line: 0, scope: !12407)
!12425 = !DILocation(line: 8475, column: 10, scope: !12418)
!12426 = !DILocation(line: 8476, column: 2, scope: !12418)
!12427 = !DILocation(line: 8479, column: 16, scope: !12405)
!12428 = !DILocation(line: 0, scope: !12405)
!12429 = !DILocation(line: 8481, column: 9, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 8481, column: 8)
!12431 = !DILocation(line: 8482, column: 8, scope: !12430)
!12432 = !DILocation(line: 8482, column: 20, scope: !12430)
!12433 = !DILocation(line: 8482, column: 17, scope: !12430)
!12434 = !DILocation(line: 8483, column: 16, scope: !12430)
!12435 = !DILocation(line: 8483, column: 13, scope: !12430)
!12436 = !DILocation(line: 8483, column: 5, scope: !12430)
!12437 = !DILocation(line: 8484, column: 6, scope: !12430)
!12438 = !DILocation(line: 8488, column: 10, scope: !12405)
!12439 = !DILocation(line: 8489, column: 10, scope: !12405)
!12440 = !DILocation(line: 8491, column: 8, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 8491, column: 8)
!12442 = !DILocation(line: 8491, column: 8, scope: !12405)
!12443 = !DILocation(line: 8492, column: 6, scope: !12441)
!12444 = !DILocation(line: 8497, column: 8, scope: !12395)
!12445 = !DILocation(line: 8498, column: 21, scope: !12395)
!12446 = !DILocation(line: 8498, column: 7, scope: !12395)
!12447 = !DILocation(line: 8498, column: 19, scope: !12395)
!12448 = !DILocation(line: 8499, column: 3, scope: !12395)
!12449 = !DILocation(line: 8500, column: 7, scope: !12395)
!12450 = !DILocation(line: 8500, column: 17, scope: !12395)
!12451 = !DILocation(line: 8501, column: 15, scope: !12395)
!12452 = !DILocation(line: 8501, column: 7, scope: !12395)
!12453 = !DILocation(line: 8501, column: 13, scope: !12395)
!12454 = !DILocation(line: 8502, column: 18, scope: !12395)
!12455 = !DILocation(line: 8502, column: 7, scope: !12395)
!12456 = !DILocation(line: 8502, column: 16, scope: !12395)
!12457 = !DILocation(line: 8503, column: 14, scope: !12395)
!12458 = !DILocation(line: 8503, column: 7, scope: !12395)
!12459 = !DILocation(line: 8503, column: 12, scope: !12395)
!12460 = !DILocation(line: 8504, column: 18, scope: !12395)
!12461 = !DILocation(line: 8506, column: 24, scope: !12395)
!12462 = !DILocation(line: 8506, column: 10, scope: !12395)
!12463 = !DILocation(line: 8506, column: 3, scope: !12395)
!12464 = distinct !DISubprogram(name: "do_case", scope: !3, file: !3, line: 8512, type: !4022, scopeLine: 8513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12465)
!12465 = !{!12466, !12467, !12468, !12469}
!12466 = !DILocalVariable(name: "loc", arg: 1, scope: !12464, file: !3, line: 8512, type: !585)
!12467 = !DILocalVariable(name: "low_value", arg: 2, scope: !12464, file: !3, line: 8512, type: !460)
!12468 = !DILocalVariable(name: "high_value", arg: 3, scope: !12464, file: !3, line: 8512, type: !460)
!12469 = !DILocalVariable(name: "label", scope: !12464, file: !3, line: 8514, type: !460)
!12470 = !DILocation(line: 0, scope: !12464)
!12471 = !DILocation(line: 8516, column: 7, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 8516, column: 7)
!12473 = !DILocation(line: 8516, column: 17, scope: !12472)
!12474 = !DILocation(line: 8516, column: 20, scope: !12472)
!12475 = !DILocation(line: 8516, column: 42, scope: !12472)
!12476 = !DILocation(line: 8516, column: 7, scope: !12464)
!12477 = !DILocation(line: 8518, column: 19, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 8517, column: 5)
!12479 = !DILocation(line: 8519, column: 11, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 8519, column: 11)
!12481 = !DILocation(line: 8519, column: 33, scope: !12480)
!12482 = !DILocation(line: 8519, column: 11, scope: !12478)
!12483 = !DILocation(line: 8520, column: 11, scope: !12480)
!12484 = !DILocation(line: 8520, column: 2, scope: !12480)
!12485 = !DILocation(line: 8524, column: 7, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 8524, column: 7)
!12487 = !DILocation(line: 8524, column: 18, scope: !12486)
!12488 = !DILocation(line: 8524, column: 21, scope: !12486)
!12489 = !DILocation(line: 8524, column: 44, scope: !12486)
!12490 = !DILocation(line: 8524, column: 7, scope: !12464)
!12491 = !DILocation(line: 8526, column: 20, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 8525, column: 5)
!12493 = !DILocation(line: 8527, column: 11, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 8527, column: 11)
!12495 = !DILocation(line: 8527, column: 34, scope: !12494)
!12496 = !DILocation(line: 8527, column: 11, scope: !12492)
!12497 = !DILocation(line: 8528, column: 11, scope: !12494)
!12498 = !DILocation(line: 8528, column: 2, scope: !12494)
!12499 = !DILocation(line: 8532, column: 7, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 8532, column: 7)
!12501 = !DILocation(line: 8532, column: 22, scope: !12500)
!12502 = !DILocation(line: 8532, column: 7, scope: !12464)
!12503 = !DILocation(line: 8534, column: 11, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !3, line: 8534, column: 11)
!12505 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 8533, column: 5)
!12506 = !DILocation(line: 8534, column: 11, scope: !12505)
!12507 = !DILocation(line: 8535, column: 2, scope: !12504)
!12508 = !DILocation(line: 8537, column: 2, scope: !12504)
!12509 = !DILocation(line: 8541, column: 53, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 8541, column: 7)
!12511 = !DILocation(line: 8542, column: 9, scope: !12510)
!12512 = !DILocation(line: 8541, column: 7, scope: !12510)
!12513 = !DILocation(line: 8541, column: 7, scope: !12464)
!12514 = !DILocation(line: 8546, column: 34, scope: !12464)
!12515 = !DILocation(line: 8546, column: 50, scope: !12464)
!12516 = !DILocation(line: 8547, column: 8, scope: !12464)
!12517 = !DILocation(line: 8548, column: 24, scope: !12464)
!12518 = !DILocation(line: 8546, column: 11, scope: !12464)
!12519 = !DILocation(line: 8550, column: 16, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 8550, column: 7)
!12521 = !DILocation(line: 8550, column: 13, scope: !12520)
!12522 = !DILocation(line: 8550, column: 7, scope: !12464)
!12523 = !DILocation(line: 8552, column: 3, scope: !12464)
!12524 = !DILocation(line: 8553, column: 1, scope: !12464)
!12525 = distinct !DISubprogram(name: "c_finish_case", scope: !3, file: !3, line: 8558, type: !5621, scopeLine: 8559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12526)
!12526 = !{!12527, !12528, !12529}
!12527 = !DILocalVariable(name: "body", arg: 1, scope: !12525, file: !3, line: 8558, type: !460)
!12528 = !DILocalVariable(name: "cs", scope: !12525, file: !3, line: 8560, type: !1409)
!12529 = !DILocalVariable(name: "switch_location", scope: !12525, file: !3, line: 8561, type: !585)
!12530 = !DILocation(line: 0, scope: !12525)
!12531 = !DILocation(line: 8560, column: 25, scope: !12525)
!12532 = !DILocation(line: 8563, column: 3, scope: !12525)
!12533 = !DILocation(line: 8563, column: 33, scope: !12525)
!12534 = !DILocation(line: 8566, column: 21, scope: !12525)
!12535 = !DILocation(line: 8567, column: 29, scope: !12525)
!12536 = !DILocation(line: 8568, column: 4, scope: !12525)
!12537 = !DILocation(line: 8569, column: 4, scope: !12525)
!12538 = !DILocation(line: 8567, column: 3, scope: !12525)
!12539 = !DILocation(line: 8572, column: 24, scope: !12525)
!12540 = !DILocation(line: 8572, column: 18, scope: !12525)
!12541 = !DILocation(line: 8573, column: 26, scope: !12525)
!12542 = !DILocation(line: 8573, column: 3, scope: !12525)
!12543 = !DILocation(line: 8574, column: 34, scope: !12525)
!12544 = !DILocation(line: 8574, column: 3, scope: !12525)
!12545 = !DILocation(line: 8575, column: 3, scope: !12525)
!12546 = !DILocation(line: 8576, column: 1, scope: !12525)
!12547 = distinct !DISubprogram(name: "c_finish_if_stmt", scope: !3, file: !3, line: 8584, type: !12548, scopeLine: 8586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12550)
!12548 = !DISubroutineType(types: !12549)
!12549 = !{null, !585, !460, !460, !460, !452}
!12550 = !{!12551, !12552, !12553, !12554, !12555, !12556, !12557, !12560}
!12551 = !DILocalVariable(name: "if_locus", arg: 1, scope: !12547, file: !3, line: 8584, type: !585)
!12552 = !DILocalVariable(name: "cond", arg: 2, scope: !12547, file: !3, line: 8584, type: !460)
!12553 = !DILocalVariable(name: "then_block", arg: 3, scope: !12547, file: !3, line: 8584, type: !460)
!12554 = !DILocalVariable(name: "else_block", arg: 4, scope: !12547, file: !3, line: 8585, type: !460)
!12555 = !DILocalVariable(name: "nested_if", arg: 5, scope: !12547, file: !3, line: 8585, type: !452)
!12556 = !DILocalVariable(name: "stmt", scope: !12547, file: !3, line: 8587, type: !460)
!12557 = !DILocalVariable(name: "inner_if", scope: !12558, file: !3, line: 8592, type: !460)
!12558 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 8591, column: 5)
!12559 = distinct !DILexicalBlock(scope: !12547, file: !3, line: 8590, column: 7)
!12560 = !DILabel(scope: !12558, name: "found", file: !3, line: 8616)
!12561 = !DILocation(line: 0, scope: !12547)
!12562 = !DILocation(line: 8590, column: 7, scope: !12559)
!12563 = !DILocation(line: 8590, column: 27, scope: !12559)
!12564 = !DILocation(line: 8590, column: 24, scope: !12559)
!12565 = !DILocation(line: 8590, column: 51, scope: !12559)
!12566 = !DILocation(line: 8598, column: 7, scope: !12558)
!12567 = !DILocation(line: 8592, column: 12, scope: !12558)
!12568 = !DILocation(line: 0, scope: !12558)
!12569 = !DILocation(line: 8599, column: 10, scope: !12558)
!12570 = !DILocation(line: 8599, column: 2, scope: !12558)
!12571 = !DILocation(line: 8604, column: 17, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12558, file: !3, line: 8600, column: 4)
!12573 = !DILocation(line: 8605, column: 6, scope: !12572)
!12574 = !DILocation(line: 8607, column: 17, scope: !12572)
!12575 = !DILocation(line: 8608, column: 6, scope: !12572)
!12576 = !DILocation(line: 8611, column: 17, scope: !12572)
!12577 = !DILocation(line: 8612, column: 6, scope: !12572)
!12578 = !DILocation(line: 8614, column: 6, scope: !12572)
!12579 = !DILocation(line: 8615, column: 4, scope: !12572)
!12580 = distinct !{!12580, !12566, !12581}
!12581 = !DILocation(line: 8615, column: 4, scope: !12558)
!12582 = !DILocation(line: 8616, column: 5, scope: !12558)
!12583 = !DILocation(line: 8618, column: 11, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12558, file: !3, line: 8618, column: 11)
!12585 = !DILocation(line: 8618, column: 11, scope: !12558)
!12586 = !DILocation(line: 8619, column: 3, scope: !12584)
!12587 = !DILocation(line: 8623, column: 10, scope: !12547)
!12588 = !DILocation(line: 8624, column: 3, scope: !12547)
!12589 = !DILocation(line: 8625, column: 3, scope: !12547)
!12590 = !DILocation(line: 8626, column: 1, scope: !12547)
!12591 = distinct !DISubprogram(name: "c_finish_loop", scope: !3, file: !3, line: 8635, type: !12592, scopeLine: 8637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12594)
!12592 = !DISubroutineType(types: !12593)
!12593 = !{null, !585, !460, !460, !460, !460, !460, !452}
!12594 = !{!12595, !12596, !12597, !12598, !12599, !12600, !12601, !12602, !12603, !12604, !12605}
!12595 = !DILocalVariable(name: "start_locus", arg: 1, scope: !12591, file: !3, line: 8635, type: !585)
!12596 = !DILocalVariable(name: "cond", arg: 2, scope: !12591, file: !3, line: 8635, type: !460)
!12597 = !DILocalVariable(name: "incr", arg: 3, scope: !12591, file: !3, line: 8635, type: !460)
!12598 = !DILocalVariable(name: "body", arg: 4, scope: !12591, file: !3, line: 8635, type: !460)
!12599 = !DILocalVariable(name: "blab", arg: 5, scope: !12591, file: !3, line: 8636, type: !460)
!12600 = !DILocalVariable(name: "clab", arg: 6, scope: !12591, file: !3, line: 8636, type: !460)
!12601 = !DILocalVariable(name: "cond_is_first", arg: 7, scope: !12591, file: !3, line: 8636, type: !452)
!12602 = !DILocalVariable(name: "entry", scope: !12591, file: !3, line: 8638, type: !460)
!12603 = !DILocalVariable(name: "exit", scope: !12591, file: !3, line: 8638, type: !460)
!12604 = !DILocalVariable(name: "t", scope: !12591, file: !3, line: 8638, type: !460)
!12605 = !DILocalVariable(name: "top", scope: !12606, file: !3, line: 8652, type: !460)
!12606 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 8651, column: 5)
!12607 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8641, column: 7)
!12608 = !DILocation(line: 0, scope: !12591)
!12609 = !DILocation(line: 8641, column: 7, scope: !12607)
!12610 = !DILocation(line: 8641, column: 12, scope: !12607)
!12611 = !DILocation(line: 8641, column: 15, scope: !12607)
!12612 = !DILocation(line: 8641, column: 7, scope: !12591)
!12613 = !DILocation(line: 8643, column: 11, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12615, file: !3, line: 8643, column: 11)
!12615 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 8642, column: 5)
!12616 = !DILocation(line: 8643, column: 11, scope: !12615)
!12617 = !DILocation(line: 8645, column: 8, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 8644, column: 2)
!12619 = !DILocation(line: 8646, column: 4, scope: !12618)
!12620 = !DILocation(line: 8647, column: 4, scope: !12618)
!12621 = !DILocation(line: 8648, column: 2, scope: !12618)
!12622 = !DILocation(line: 8652, column: 18, scope: !12606)
!12623 = !DILocation(line: 0, scope: !12606)
!12624 = !DILocation(line: 8657, column: 31, scope: !12606)
!12625 = !DILocation(line: 8657, column: 14, scope: !12606)
!12626 = !DILocation(line: 8659, column: 16, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 8659, column: 11)
!12628 = !DILocation(line: 8659, column: 20, scope: !12627)
!12629 = !DILocation(line: 8659, column: 11, scope: !12606)
!12630 = !DILocation(line: 8664, column: 8, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 8664, column: 8)
!12632 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 8660, column: 2)
!12633 = !DILocation(line: 8664, column: 8, scope: !12632)
!12634 = !DILocation(line: 8666, column: 12, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 8666, column: 12)
!12636 = distinct !DILexicalBlock(scope: !12631, file: !3, line: 8665, column: 6)
!12637 = !DILocation(line: 8666, column: 21, scope: !12635)
!12638 = !DILocation(line: 8666, column: 17, scope: !12635)
!12639 = !DILocation(line: 0, scope: !12635)
!12640 = !DILocation(line: 8668, column: 13, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 8667, column: 3)
!12642 = !DILocation(line: 8669, column: 26, scope: !12641)
!12643 = !DILocation(line: 8669, column: 9, scope: !12641)
!12644 = !DILocation(line: 8670, column: 3, scope: !12641)
!12645 = !DILocation(line: 8672, column: 7, scope: !12635)
!12646 = !DILocation(line: 8673, column: 8, scope: !12636)
!12647 = !DILocation(line: 8674, column: 8, scope: !12636)
!12648 = !DILocation(line: 8675, column: 6, scope: !12636)
!12649 = !DILocation(line: 8677, column: 8, scope: !12632)
!12650 = !DILocation(line: 8678, column: 8, scope: !12632)
!12651 = !DILocation(line: 8679, column: 13, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 8678, column: 8)
!12653 = !DILocation(line: 8679, column: 6, scope: !12652)
!12654 = !DILocation(line: 8682, column: 13, scope: !12652)
!12655 = !DILocation(line: 8686, column: 7, scope: !12606)
!12656 = !DILocation(line: 8638, column: 8, scope: !12591)
!12657 = !DILocation(line: 8689, column: 7, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8689, column: 7)
!12659 = !DILocation(line: 8689, column: 7, scope: !12591)
!12660 = !DILocation(line: 8690, column: 5, scope: !12658)
!12661 = !DILocation(line: 8691, column: 7, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8691, column: 7)
!12663 = !DILocation(line: 8691, column: 7, scope: !12591)
!12664 = !DILocation(line: 8692, column: 15, scope: !12662)
!12665 = !DILocation(line: 8692, column: 5, scope: !12662)
!12666 = !DILocation(line: 8693, column: 7, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8693, column: 7)
!12668 = !DILocation(line: 8693, column: 7, scope: !12591)
!12669 = !DILocation(line: 8694, column: 5, scope: !12667)
!12670 = !DILocation(line: 8695, column: 7, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8695, column: 7)
!12672 = !DILocation(line: 8695, column: 7, scope: !12591)
!12673 = !DILocation(line: 8696, column: 5, scope: !12671)
!12674 = !DILocation(line: 8697, column: 7, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8697, column: 7)
!12676 = !DILocation(line: 8697, column: 7, scope: !12591)
!12677 = !DILocation(line: 8698, column: 5, scope: !12675)
!12678 = !DILocation(line: 8699, column: 7, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 8699, column: 7)
!12680 = !DILocation(line: 8699, column: 7, scope: !12591)
!12681 = !DILocation(line: 8700, column: 15, scope: !12679)
!12682 = !DILocation(line: 8700, column: 5, scope: !12679)
!12683 = !DILocation(line: 8701, column: 1, scope: !12591)
!12684 = distinct !DISubprogram(name: "c_finish_bc_stmt", scope: !3, file: !3, line: 8704, type: !12685, scopeLine: 8705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12687)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{!460, !585, !823, !452}
!12687 = !{!12688, !12689, !12690, !12691, !12692}
!12688 = !DILocalVariable(name: "loc", arg: 1, scope: !12684, file: !3, line: 8704, type: !585)
!12689 = !DILocalVariable(name: "label_p", arg: 2, scope: !12684, file: !3, line: 8704, type: !823)
!12690 = !DILocalVariable(name: "is_break", arg: 3, scope: !12684, file: !3, line: 8704, type: !452)
!12691 = !DILocalVariable(name: "skip", scope: !12684, file: !3, line: 8706, type: !452)
!12692 = !DILocalVariable(name: "label", scope: !12684, file: !3, line: 8707, type: !460)
!12693 = !DILocation(line: 0, scope: !12684)
!12694 = !DILocation(line: 8707, column: 16, scope: !12684)
!12695 = !DILocation(line: 8716, column: 31, scope: !12684)
!12696 = !DILocation(line: 8716, column: 11, scope: !12684)
!12697 = !DILocation(line: 8716, column: 10, scope: !12684)
!12698 = !DILocation(line: 8718, column: 8, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12684, file: !3, line: 8718, column: 7)
!12700 = !DILocation(line: 8718, column: 7, scope: !12684)
!12701 = !DILocation(line: 8720, column: 11, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12699, file: !3, line: 8719, column: 5)
!12703 = !DILocation(line: 8721, column: 21, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12702, file: !3, line: 8720, column: 11)
!12705 = !DILocation(line: 8721, column: 11, scope: !12704)
!12706 = !DILocation(line: 8721, column: 2, scope: !12704)
!12707 = !DILocation(line: 8723, column: 12, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12699, file: !3, line: 8723, column: 12)
!12709 = !DILocation(line: 8723, column: 30, scope: !12708)
!12710 = !DILocation(line: 8723, column: 12, scope: !12699)
!12711 = !DILocation(line: 8725, column: 16, scope: !12708)
!12712 = !DILocation(line: 8725, column: 8, scope: !12708)
!12713 = !DILocation(line: 8728, column: 11, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 8728, column: 11)
!12715 = distinct !DILexicalBlock(scope: !12708, file: !3, line: 8726, column: 5)
!12716 = !DILocation(line: 8728, column: 11, scope: !12715)
!12717 = !DILocation(line: 8729, column: 2, scope: !12714)
!12718 = !DILocation(line: 8731, column: 2, scope: !12714)
!12719 = !DILocation(line: 8735, column: 7, scope: !12715)
!12720 = !DILocation(line: 8736, column: 7, scope: !12715)
!12721 = !DILocation(line: 8737, column: 7, scope: !12715)
!12722 = !DILocation(line: 8740, column: 7, scope: !12715)
!12723 = !DILocation(line: 8707, column: 8, scope: !12684)
!12724 = !DILocation(line: 8743, column: 7, scope: !12684)
!12725 = !DILocation(line: 8746, column: 8, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12684, file: !3, line: 8746, column: 7)
!12727 = !DILocation(line: 8746, column: 7, scope: !12684)
!12728 = !DILocation(line: 8747, column: 15, scope: !12726)
!12729 = !DILocation(line: 8747, column: 5, scope: !12726)
!12730 = !DILocation(line: 8749, column: 20, scope: !12684)
!12731 = !DILocation(line: 8749, column: 10, scope: !12684)
!12732 = !DILocation(line: 8749, column: 3, scope: !12684)
!12733 = !DILocation(line: 8750, column: 1, scope: !12684)
!12734 = distinct !DISubprogram(name: "c_process_expr_stmt", scope: !3, file: !3, line: 8773, type: !3870, scopeLine: 8774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12735)
!12735 = !{!12736, !12737}
!12736 = !DILocalVariable(name: "loc", arg: 1, scope: !12734, file: !3, line: 8773, type: !585)
!12737 = !DILocalVariable(name: "expr", arg: 2, scope: !12734, file: !3, line: 8773, type: !460)
!12738 = !DILocation(line: 0, scope: !12734)
!12739 = !DILocation(line: 8775, column: 8, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 8775, column: 7)
!12741 = !DILocation(line: 8775, column: 7, scope: !12734)
!12742 = !DILocation(line: 8778, column: 10, scope: !12734)
!12743 = !DILocation(line: 8780, column: 7, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 8780, column: 7)
!12745 = !DILocation(line: 8780, column: 7, scope: !12734)
!12746 = !DILocation(line: 8781, column: 5, scope: !12744)
!12747 = !DILocation(line: 8783, column: 7, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 8783, column: 7)
!12749 = !DILocation(line: 8783, column: 27, scope: !12748)
!12750 = !DILocation(line: 8783, column: 24, scope: !12748)
!12751 = !DILocation(line: 8784, column: 7, scope: !12748)
!12752 = !DILocation(line: 8784, column: 11, scope: !12748)
!12753 = !DILocation(line: 8785, column: 7, scope: !12748)
!12754 = !DILocation(line: 8785, column: 39, scope: !12748)
!12755 = !DILocation(line: 8783, column: 7, scope: !12734)
!12756 = !DILocation(line: 8786, column: 5, scope: !12748)
!12757 = !DILocation(line: 8791, column: 8, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 8791, column: 7)
!12759 = !DILocation(line: 8792, column: 10, scope: !12758)
!12760 = !DILocation(line: 8792, column: 7, scope: !12758)
!12761 = !DILocation(line: 8793, column: 5, scope: !12758)
!12762 = !DILocation(line: 8797, column: 7, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 8797, column: 7)
!12764 = !DILocation(line: 8797, column: 21, scope: !12763)
!12765 = !DILocation(line: 8797, column: 24, scope: !12763)
!12766 = !DILocation(line: 8797, column: 7, scope: !12734)
!12767 = !DILocation(line: 8799, column: 14, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 8798, column: 5)
!12769 = !DILocation(line: 8800, column: 7, scope: !12768)
!12770 = !DILocation(line: 8801, column: 5, scope: !12768)
!12771 = !DILocation(line: 8804, column: 1, scope: !12734)
!12772 = distinct !DISubprogram(name: "emit_side_effect_warnings", scope: !3, file: !3, line: 8755, type: !12773, scopeLine: 8756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12775)
!12773 = !DISubroutineType(types: !12774)
!12774 = !{null, !585, !460}
!12775 = !{!12776, !12777}
!12776 = !DILocalVariable(name: "loc", arg: 1, scope: !12772, file: !3, line: 8755, type: !585)
!12777 = !DILocalVariable(name: "expr", arg: 2, scope: !12772, file: !3, line: 8755, type: !460)
!12778 = !DILocation(line: 0, scope: !12772)
!12779 = !DILocation(line: 8757, column: 15, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 8757, column: 7)
!12781 = !DILocation(line: 8757, column: 12, scope: !12780)
!12782 = !DILocation(line: 8757, column: 7, scope: !12772)
!12783 = !DILocation(line: 8759, column: 13, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12780, file: !3, line: 8759, column: 12)
!12785 = !DILocation(line: 8759, column: 12, scope: !12780)
!12786 = !DILocation(line: 8761, column: 12, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12788, file: !3, line: 8761, column: 11)
!12788 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 8760, column: 5)
!12789 = !DILocation(line: 8761, column: 43, scope: !12787)
!12790 = !DILocation(line: 8761, column: 47, scope: !12787)
!12791 = !DILocation(line: 8761, column: 11, scope: !12788)
!12792 = !DILocation(line: 8762, column: 2, scope: !12787)
!12793 = !DILocation(line: 8765, column: 5, scope: !12784)
!12794 = !DILocation(line: 8766, column: 1, scope: !12772)
!12795 = distinct !DISubprogram(name: "c_finish_expr_stmt", scope: !3, file: !3, line: 8810, type: !3870, scopeLine: 8811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12796)
!12796 = !{!12797, !12798}
!12797 = !DILocalVariable(name: "loc", arg: 1, scope: !12795, file: !3, line: 8810, type: !585)
!12798 = !DILocalVariable(name: "expr", arg: 2, scope: !12795, file: !3, line: 8810, type: !460)
!12799 = !DILocation(line: 0, scope: !12795)
!12800 = !DILocation(line: 8812, column: 7, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 8812, column: 7)
!12802 = !DILocation(line: 8812, column: 7, scope: !12795)
!12803 = !DILocation(line: 8813, column: 22, scope: !12801)
!12804 = !DILocation(line: 8813, column: 12, scope: !12801)
!12805 = !DILocation(line: 8813, column: 5, scope: !12801)
!12806 = !DILocation(line: 0, scope: !12801)
!12807 = !DILocation(line: 8816, column: 1, scope: !12795)
!12808 = distinct !DISubprogram(name: "c_begin_stmt_expr", scope: !3, file: !3, line: 8822, type: !12809, scopeLine: 8823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12811)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{!460}
!12811 = !{!12812}
!12812 = !DILocalVariable(name: "ret", scope: !12808, file: !3, line: 8824, type: !460)
!12813 = !DILocation(line: 8829, column: 3, scope: !12808)
!12814 = !DILocation(line: 8830, column: 9, scope: !12808)
!12815 = !DILocation(line: 0, scope: !12808)
!12816 = !DILocation(line: 8832, column: 31, scope: !12808)
!12817 = !DILocation(line: 8832, column: 46, scope: !12808)
!12818 = !DILocation(line: 8834, column: 28, scope: !12808)
!12819 = !DILocation(line: 8832, column: 3, scope: !12808)
!12820 = !DILocation(line: 8837, column: 3, scope: !12808)
!12821 = !DILocation(line: 8837, column: 34, scope: !12808)
!12822 = !DILocation(line: 8839, column: 3, scope: !12808)
!12823 = distinct !DISubprogram(name: "c_begin_compound_stmt", scope: !3, file: !3, line: 8951, type: !12824, scopeLine: 8952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12826)
!12824 = !DISubroutineType(types: !12825)
!12825 = !{!460, !452}
!12826 = !{!12827, !12828}
!12827 = !DILocalVariable(name: "do_scope", arg: 1, scope: !12823, file: !3, line: 8951, type: !452)
!12828 = !DILocalVariable(name: "stmt", scope: !12823, file: !3, line: 8953, type: !460)
!12829 = !DILocation(line: 0, scope: !12823)
!12830 = !DILocation(line: 8953, column: 15, scope: !12823)
!12831 = !DILocation(line: 8954, column: 7, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12823, file: !3, line: 8954, column: 7)
!12833 = !DILocation(line: 8954, column: 7, scope: !12823)
!12834 = !DILocation(line: 8955, column: 5, scope: !12832)
!12835 = !DILocation(line: 8956, column: 3, scope: !12823)
!12836 = distinct !DISubprogram(name: "c_finish_stmt_expr", scope: !3, file: !3, line: 8846, type: !3870, scopeLine: 8847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12837)
!12837 = !{!12838, !12839, !12840, !12841, !12842, !12843, !12844, !12845, !12854, !12860, !12861, !12863}
!12838 = !DILocalVariable(name: "loc", arg: 1, scope: !12836, file: !3, line: 8846, type: !585)
!12839 = !DILocalVariable(name: "body", arg: 2, scope: !12836, file: !3, line: 8846, type: !460)
!12840 = !DILocalVariable(name: "last", scope: !12836, file: !3, line: 8848, type: !460)
!12841 = !DILocalVariable(name: "type", scope: !12836, file: !3, line: 8848, type: !460)
!12842 = !DILocalVariable(name: "tmp", scope: !12836, file: !3, line: 8848, type: !460)
!12843 = !DILocalVariable(name: "val", scope: !12836, file: !3, line: 8848, type: !460)
!12844 = !DILocalVariable(name: "last_p", scope: !12836, file: !3, line: 8849, type: !823)
!12845 = !DILocalVariable(name: "i", scope: !12846, file: !3, line: 8865, type: !12848)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !3, line: 8864, column: 5)
!12847 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 8863, column: 7)
!12848 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree_stmt_iterator", file: !12849, line: 35, baseType: !12850)
!12849 = !DIFile(filename: "./tree-iterator.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!12850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12849, line: 32, size: 128, elements: !12851)
!12851 = !{!12852, !12853}
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !12850, file: !12849, line: 33, baseType: !1643, size: 64)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !12850, file: !12849, line: 34, baseType: !460, size: 64, offset: 64)
!12854 = !DILocalVariable(name: "tloc", scope: !12855, file: !3, line: 8877, type: !585)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 8876, column: 6)
!12856 = distinct !DILexicalBlock(scope: !12857, file: !3, line: 8875, column: 4)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 8875, column: 4)
!12858 = distinct !DILexicalBlock(scope: !12859, file: !3, line: 8874, column: 2)
!12859 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 8873, column: 11)
!12860 = !DILocalVariable(name: "t", scope: !12855, file: !3, line: 8878, type: !460)
!12861 = !DILocalVariable(name: "t", scope: !12862, file: !3, line: 8941, type: !460)
!12862 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 8940, column: 3)
!12863 = !DILabel(scope: !12836, name: "continue_searching", file: !3, line: 8862)
!12864 = !DILocation(line: 0, scope: !12836)
!12865 = !DILocation(line: 8851, column: 10, scope: !12836)
!12866 = !DILocation(line: 8853, column: 29, scope: !12836)
!12867 = !DILocation(line: 8853, column: 44, scope: !12836)
!12868 = !DILocation(line: 8855, column: 26, scope: !12836)
!12869 = !DILocation(line: 8853, column: 3, scope: !12836)
!12870 = !DILocation(line: 8859, column: 13, scope: !12836)
!12871 = !DILocation(line: 0, scope: !12846)
!12872 = !DILocation(line: 0, scope: !12857)
!12873 = !DILocation(line: 0, scope: !12856)
!12874 = !DILocation(line: 0, scope: !12859)
!12875 = !DILocation(line: 8860, column: 3, scope: !12836)
!12876 = !DILocation(line: 8862, column: 2, scope: !12836)
!12877 = !DILocation(line: 8863, column: 7, scope: !12847)
!12878 = !DILocation(line: 8863, column: 24, scope: !12847)
!12879 = !DILocation(line: 8863, column: 7, scope: !12836)
!12880 = !DILocation(line: 8865, column: 7, scope: !12846)
!12881 = !DILocation(line: 8868, column: 12, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 8868, column: 11)
!12883 = !DILocation(line: 8868, column: 11, scope: !12846)
!12884 = !DILocation(line: 8873, column: 11, scope: !12859)
!12885 = !DILocation(line: 8873, column: 11, scope: !12846)
!12886 = !DILocation(line: 8875, column: 13, scope: !12857)
!12887 = !DILocation(line: 8875, column: 9, scope: !12857)
!12888 = !DILocation(line: 8875, column: 32, scope: !12856)
!12889 = !DILocation(line: 8875, column: 31, scope: !12856)
!12890 = !DILocation(line: 8875, column: 4, scope: !12857)
!12891 = !DILocation(line: 8878, column: 17, scope: !12855)
!12892 = !DILocation(line: 0, scope: !12855)
!12893 = !DILocation(line: 8880, column: 15, scope: !12855)
!12894 = !DILocation(line: 8880, column: 39, scope: !12855)
!12895 = !DILocation(line: 8881, column: 8, scope: !12855)
!12896 = !DILocation(line: 8875, column: 58, scope: !12856)
!12897 = !DILocation(line: 8875, column: 4, scope: !12856)
!12898 = distinct !{!12898, !12890, !12899}
!12899 = !DILocation(line: 8882, column: 6, scope: !12857)
!12900 = !DILocation(line: 8885, column: 6, scope: !12859)
!12901 = !DILocation(line: 8886, column: 16, scope: !12846)
!12902 = !DILocation(line: 8887, column: 14, scope: !12846)
!12903 = !DILocation(line: 8888, column: 5, scope: !12847)
!12904 = !DILocation(line: 0, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 8892, column: 7)
!12906 = !DILocation(line: 8892, column: 7, scope: !12905)
!12907 = !DILocation(line: 8892, column: 24, scope: !12905)
!12908 = !DILocation(line: 8893, column: 7, scope: !12905)
!12909 = !DILocation(line: 8893, column: 27, scope: !12905)
!12910 = !DILocation(line: 8892, column: 7, scope: !12836)
!12911 = !DILocation(line: 8895, column: 17, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 8894, column: 5)
!12913 = !DILocation(line: 8897, column: 7, scope: !12912)
!12914 = !DILocation(line: 8900, column: 15, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 8900, column: 7)
!12916 = !DILocation(line: 8900, column: 12, scope: !12915)
!12917 = !DILocation(line: 8900, column: 7, scope: !12836)
!12918 = !DILocation(line: 8905, column: 15, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 8905, column: 7)
!12920 = !DILocation(line: 8905, column: 12, scope: !12919)
!12921 = !DILocation(line: 8906, column: 7, scope: !12919)
!12922 = !DILocation(line: 8906, column: 10, scope: !12919)
!12923 = !DILocation(line: 8906, column: 32, scope: !12919)
!12924 = !DILocation(line: 8905, column: 7, scope: !12836)
!12925 = !DILocation(line: 8910, column: 14, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12919, file: !3, line: 8907, column: 5)
!12927 = !DILocation(line: 8913, column: 7, scope: !12926)
!12928 = !DILocation(line: 8913, column: 30, scope: !12926)
!12929 = !DILocation(line: 8914, column: 7, scope: !12926)
!12930 = !DILocation(line: 8918, column: 10, scope: !12836)
!12931 = !DILocation(line: 8922, column: 8, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 8922, column: 7)
!12933 = !DILocation(line: 8922, column: 13, scope: !12932)
!12934 = !DILocation(line: 8922, column: 16, scope: !12932)
!12935 = !DILocation(line: 8922, column: 7, scope: !12836)
!12936 = !DILocation(line: 8928, column: 9, scope: !12836)
!12937 = !DILocation(line: 8933, column: 7, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 8933, column: 7)
!12939 = !DILocation(line: 8933, column: 23, scope: !12938)
!12940 = !DILocation(line: 8934, column: 7, scope: !12938)
!12941 = !DILocation(line: 8934, column: 10, scope: !12938)
!12942 = !DILocation(line: 8934, column: 29, scope: !12938)
!12943 = !DILocation(line: 8934, column: 26, scope: !12938)
!12944 = !DILocation(line: 8933, column: 7, scope: !12836)
!12945 = !DILocation(line: 8935, column: 5, scope: !12938)
!12946 = !DILocation(line: 8937, column: 13, scope: !12836)
!12947 = !DILocation(line: 8937, column: 11, scope: !12836)
!12948 = !DILocation(line: 8938, column: 3, scope: !12836)
!12949 = !DILocation(line: 8941, column: 14, scope: !12862)
!12950 = !DILocation(line: 0, scope: !12862)
!12951 = !DILocation(line: 8942, column: 5, scope: !12862)
!12952 = !DILocation(line: 8945, column: 1, scope: !12836)
!12953 = distinct !DISubprogram(name: "c_end_compound_stmt", scope: !3, file: !3, line: 8964, type: !12954, scopeLine: 8965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12956)
!12954 = !DISubroutineType(types: !12955)
!12955 = !{!460, !585, !460, !452}
!12956 = !{!12957, !12958, !12959, !12960}
!12957 = !DILocalVariable(name: "loc", arg: 1, scope: !12953, file: !3, line: 8964, type: !585)
!12958 = !DILocalVariable(name: "stmt", arg: 2, scope: !12953, file: !3, line: 8964, type: !460)
!12959 = !DILocalVariable(name: "do_scope", arg: 3, scope: !12953, file: !3, line: 8964, type: !452)
!12960 = !DILocalVariable(name: "block", scope: !12953, file: !3, line: 8966, type: !460)
!12961 = !DILocation(line: 0, scope: !12953)
!12962 = !DILocation(line: 8968, column: 7, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 8968, column: 7)
!12964 = !DILocation(line: 8968, column: 7, scope: !12953)
!12965 = !DILocation(line: 8970, column: 11, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12967, file: !3, line: 8970, column: 11)
!12967 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 8969, column: 5)
!12968 = !DILocation(line: 8970, column: 11, scope: !12967)
!12969 = !DILocation(line: 8971, column: 2, scope: !12966)
!12970 = !DILocation(line: 8972, column: 15, scope: !12967)
!12971 = !DILocation(line: 8973, column: 5, scope: !12967)
!12972 = !DILocation(line: 8975, column: 10, scope: !12953)
!12973 = !DILocation(line: 8976, column: 10, scope: !12953)
!12974 = !DILocation(line: 8983, column: 7, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 8983, column: 7)
!12976 = !DILocation(line: 8984, column: 7, scope: !12975)
!12977 = !DILocation(line: 8984, column: 10, scope: !12975)
!12978 = !DILocation(line: 8985, column: 7, scope: !12975)
!12979 = !DILocation(line: 8985, column: 10, scope: !12975)
!12980 = !DILocation(line: 8985, column: 27, scope: !12975)
!12981 = !DILocation(line: 8983, column: 7, scope: !12953)
!12982 = !DILocation(line: 8987, column: 14, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 8986, column: 5)
!12984 = !DILocation(line: 8988, column: 7, scope: !12983)
!12985 = !DILocation(line: 8988, column: 32, scope: !12983)
!12986 = !DILocation(line: 8989, column: 7, scope: !12983)
!12987 = !DILocation(line: 8990, column: 5, scope: !12983)
!12988 = !DILocation(line: 8992, column: 3, scope: !12953)
!12989 = distinct !DISubprogram(name: "tsi_start", scope: !12849, file: !12849, line: 38, type: !12990, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !12992)
!12990 = !DISubroutineType(types: !12991)
!12991 = !{!12848, !460}
!12992 = !{!12993, !12994}
!12993 = !DILocalVariable(name: "t", arg: 1, scope: !12989, file: !12849, line: 38, type: !460)
!12994 = !DILocalVariable(name: "i", scope: !12989, file: !12849, line: 40, type: !12848)
!12995 = !DILocation(line: 0, scope: !12989)
!12996 = !DILocation(line: 42, column: 11, scope: !12989)
!12997 = !DILocation(line: 45, column: 3, scope: !12989)
!12998 = distinct !DISubprogram(name: "tsi_one_before_end_p", scope: !12849, file: !12849, line: 66, type: !12999, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13001)
!12999 = !DISubroutineType(types: !13000)
!13000 = !{!452, !12848}
!13001 = !{!13002}
!13002 = !DILocalVariable(name: "i", arg: 1, scope: !12998, file: !12849, line: 66, type: !12848)
!13003 = !DILocation(line: 68, column: 16, scope: !12998)
!13004 = !DILocation(line: 68, column: 24, scope: !12998)
!13005 = !DILocation(line: 68, column: 34, scope: !12998)
!13006 = !DILocation(line: 68, column: 39, scope: !12998)
!13007 = !DILocation(line: 68, column: 3, scope: !12998)
!13008 = distinct !DISubprogram(name: "tsi_stmt", scope: !12849, file: !12849, line: 90, type: !13009, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13011)
!13009 = !DISubroutineType(types: !13010)
!13010 = !{!460, !12848}
!13011 = !{!13012}
!13012 = !DILocalVariable(name: "i", arg: 1, scope: !13008, file: !12849, line: 90, type: !12848)
!13013 = !DILocation(line: 92, column: 17, scope: !13008)
!13014 = !DILocation(line: 92, column: 3, scope: !13008)
!13015 = distinct !DISubprogram(name: "tsi_next", scope: !12849, file: !12849, line: 72, type: !13016, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13019)
!13016 = !DISubroutineType(types: !13017)
!13017 = !{null, !13018}
!13018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12848, size: 64)
!13019 = !{!13020}
!13020 = !DILocalVariable(name: "i", arg: 1, scope: !13015, file: !12849, line: 72, type: !13018)
!13021 = !DILocation(line: 0, scope: !13015)
!13022 = !DILocation(line: 74, column: 15, scope: !13015)
!13023 = !DILocation(line: 74, column: 20, scope: !13015)
!13024 = !DILocation(line: 74, column: 10, scope: !13015)
!13025 = !DILocation(line: 75, column: 1, scope: !13015)
!13026 = distinct !DISubprogram(name: "tsi_last", scope: !12849, file: !12849, line: 49, type: !12990, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13027)
!13027 = !{!13028, !13029}
!13028 = !DILocalVariable(name: "t", arg: 1, scope: !13026, file: !12849, line: 49, type: !460)
!13029 = !DILocalVariable(name: "i", scope: !13026, file: !12849, line: 51, type: !12848)
!13030 = !DILocation(line: 0, scope: !13026)
!13031 = !DILocation(line: 53, column: 11, scope: !13026)
!13032 = !DILocation(line: 56, column: 3, scope: !13026)
!13033 = distinct !DISubprogram(name: "tsi_stmt_ptr", scope: !12849, file: !12849, line: 84, type: !13034, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13036)
!13034 = !DISubroutineType(types: !13035)
!13035 = !{!823, !12848}
!13036 = !{!13037}
!13037 = !DILocalVariable(name: "i", arg: 1, scope: !13033, file: !12849, line: 84, type: !12848)
!13038 = !DILocation(line: 86, column: 18, scope: !13033)
!13039 = !DILocation(line: 86, column: 3, scope: !13033)
!13040 = distinct !DISubprogram(name: "push_cleanup", scope: !3, file: !3, line: 9000, type: !13041, scopeLine: 9001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13043)
!13041 = !DISubroutineType(types: !13042)
!13042 = !{null, !460, !460, !452}
!13043 = !{!13044, !13045, !13046, !13047, !13048, !13049, !13050}
!13044 = !DILocalVariable(name: "decl", arg: 1, scope: !13040, file: !3, line: 9000, type: !460)
!13045 = !DILocalVariable(name: "cleanup", arg: 2, scope: !13040, file: !3, line: 9000, type: !460)
!13046 = !DILocalVariable(name: "eh_only", arg: 3, scope: !13040, file: !3, line: 9000, type: !452)
!13047 = !DILocalVariable(name: "code", scope: !13040, file: !3, line: 9002, type: !134)
!13048 = !DILocalVariable(name: "stmt", scope: !13040, file: !3, line: 9003, type: !460)
!13049 = !DILocalVariable(name: "list", scope: !13040, file: !3, line: 9003, type: !460)
!13050 = !DILocalVariable(name: "stmt_expr", scope: !13040, file: !3, line: 9004, type: !452)
!13051 = !DILocation(line: 0, scope: !13040)
!13052 = !DILocation(line: 9006, column: 10, scope: !13040)
!13053 = !DILocation(line: 9007, column: 22, scope: !13040)
!13054 = !DILocation(line: 9007, column: 10, scope: !13040)
!13055 = !DILocation(line: 9008, column: 3, scope: !13040)
!13056 = !DILocation(line: 9009, column: 15, scope: !13040)
!13057 = !DILocation(line: 9010, column: 10, scope: !13040)
!13058 = !DILocation(line: 9011, column: 3, scope: !13040)
!13059 = !DILocation(line: 9011, column: 26, scope: !13040)
!13060 = !DILocation(line: 9012, column: 3, scope: !13040)
!13061 = !DILocation(line: 9012, column: 35, scope: !13040)
!13062 = !DILocation(line: 9013, column: 1, scope: !13040)
!13063 = distinct !DISubprogram(name: "pointer_diff", scope: !3, file: !3, line: 3159, type: !4022, scopeLine: 3160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13064)
!13064 = !{!13065, !13066, !13067, !13068, !13069, !13070, !13071, !13072, !13073, !13074, !13075, !13076, !13077, !13078, !13079, !13082}
!13065 = !DILocalVariable(name: "loc", arg: 1, scope: !13063, file: !3, line: 3159, type: !585)
!13066 = !DILocalVariable(name: "op0", arg: 2, scope: !13063, file: !3, line: 3159, type: !460)
!13067 = !DILocalVariable(name: "op1", arg: 3, scope: !13063, file: !3, line: 3159, type: !460)
!13068 = !DILocalVariable(name: "restype", scope: !13063, file: !3, line: 3161, type: !460)
!13069 = !DILocalVariable(name: "result", scope: !13063, file: !3, line: 3162, type: !460)
!13070 = !DILocalVariable(name: "inttype", scope: !13063, file: !3, line: 3162, type: !460)
!13071 = !DILocalVariable(name: "as0", scope: !13063, file: !3, line: 3164, type: !2994)
!13072 = !DILocalVariable(name: "as1", scope: !13063, file: !3, line: 3165, type: !2994)
!13073 = !DILocalVariable(name: "target_type", scope: !13063, file: !3, line: 3166, type: !460)
!13074 = !DILocalVariable(name: "con0", scope: !13063, file: !3, line: 3167, type: !460)
!13075 = !DILocalVariable(name: "con1", scope: !13063, file: !3, line: 3167, type: !460)
!13076 = !DILocalVariable(name: "lit0", scope: !13063, file: !3, line: 3167, type: !460)
!13077 = !DILocalVariable(name: "lit1", scope: !13063, file: !3, line: 3167, type: !460)
!13078 = !DILocalVariable(name: "orig_op1", scope: !13063, file: !3, line: 3168, type: !460)
!13079 = !DILocalVariable(name: "as_common", scope: !13080, file: !3, line: 3175, type: !2994)
!13080 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 3174, column: 5)
!13081 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3173, column: 7)
!13082 = !DILocalVariable(name: "common_type", scope: !13080, file: !3, line: 3176, type: !460)
!13083 = !DILocation(line: 0, scope: !13063)
!13084 = !DILocation(line: 3161, column: 18, scope: !13063)
!13085 = !DILocation(line: 3164, column: 22, scope: !13063)
!13086 = !DILocation(line: 3165, column: 22, scope: !13063)
!13087 = !DILocation(line: 3166, column: 22, scope: !13063)
!13088 = !DILocation(line: 3173, column: 7, scope: !13081)
!13089 = !DILocation(line: 3173, column: 14, scope: !13081)
!13090 = !DILocation(line: 3173, column: 11, scope: !13081)
!13091 = !DILocation(line: 3173, column: 7, scope: !13063)
!13092 = !DILocation(line: 0, scope: !13080)
!13093 = !DILocation(line: 3175, column: 7, scope: !13080)
!13094 = !DILocation(line: 3181, column: 12, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13080, file: !3, line: 3181, column: 11)
!13096 = !DILocation(line: 3181, column: 11, scope: !13080)
!13097 = !DILocation(line: 3182, column: 2, scope: !13095)
!13098 = !DILocation(line: 3184, column: 42, scope: !13080)
!13099 = !DILocation(line: 3184, column: 59, scope: !13080)
!13100 = !DILocation(line: 3184, column: 21, scope: !13080)
!13101 = !DILocation(line: 3185, column: 13, scope: !13080)
!13102 = !DILocation(line: 3186, column: 13, scope: !13080)
!13103 = !DILocation(line: 3187, column: 5, scope: !13081)
!13104 = !DILocation(line: 3187, column: 5, scope: !13080)
!13105 = !DILocation(line: 3192, column: 7, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3192, column: 7)
!13107 = !DILocation(line: 3192, column: 34, scope: !13106)
!13108 = !DILocation(line: 3192, column: 32, scope: !13106)
!13109 = !DILocation(line: 3192, column: 7, scope: !13063)
!13110 = !DILocation(line: 3193, column: 32, scope: !13106)
!13111 = !DILocation(line: 3193, column: 15, scope: !13106)
!13112 = !DILocation(line: 3193, column: 5, scope: !13106)
!13113 = !DILocation(line: 0, scope: !13106)
!13114 = !DILocation(line: 3199, column: 7, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3199, column: 7)
!13116 = !DILocation(line: 3199, column: 31, scope: !13115)
!13117 = !DILocation(line: 3199, column: 7, scope: !13063)
!13118 = !DILocation(line: 3200, column: 19, scope: !13115)
!13119 = !DILocation(line: 3200, column: 5, scope: !13115)
!13120 = !DILocation(line: 3202, column: 7, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3202, column: 7)
!13122 = !DILocation(line: 3202, column: 31, scope: !13121)
!13123 = !DILocation(line: 3202, column: 7, scope: !13063)
!13124 = !DILocation(line: 3203, column: 19, scope: !13121)
!13125 = !DILocation(line: 3203, column: 5, scope: !13121)
!13126 = !DILocation(line: 3214, column: 7, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3214, column: 7)
!13128 = !DILocation(line: 3215, column: 7, scope: !13127)
!13129 = !DILocation(line: 3215, column: 11, scope: !13127)
!13130 = !DILocation(line: 3216, column: 7, scope: !13127)
!13131 = !DILocation(line: 3216, column: 4, scope: !13127)
!13132 = !DILocation(line: 3214, column: 7, scope: !13063)
!13133 = !DILocation(line: 3217, column: 5, scope: !13127)
!13134 = !DILocation(line: 0, scope: !13127)
!13135 = !DILocation(line: 3220, column: 7, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3220, column: 7)
!13137 = !DILocation(line: 3221, column: 7, scope: !13136)
!13138 = !DILocation(line: 3221, column: 11, scope: !13136)
!13139 = !DILocation(line: 3222, column: 7, scope: !13136)
!13140 = !DILocation(line: 3222, column: 4, scope: !13136)
!13141 = !DILocation(line: 3220, column: 7, scope: !13063)
!13142 = !DILocation(line: 3223, column: 5, scope: !13136)
!13143 = !DILocation(line: 0, scope: !13136)
!13144 = !DILocation(line: 3227, column: 7, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3227, column: 7)
!13146 = !DILocation(line: 3227, column: 24, scope: !13145)
!13147 = !DILocation(line: 3227, column: 7, scope: !13063)
!13148 = !DILocation(line: 3229, column: 14, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13145, file: !3, line: 3228, column: 5)
!13150 = !DILocation(line: 3230, column: 14, scope: !13149)
!13151 = !DILocation(line: 3231, column: 5, scope: !13149)
!13152 = !DILocation(line: 0, scope: !13145)
!13153 = !DILocation(line: 3235, column: 7, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3235, column: 7)
!13155 = !DILocation(line: 3235, column: 24, scope: !13154)
!13156 = !DILocation(line: 3235, column: 7, scope: !13063)
!13157 = !DILocation(line: 3237, column: 14, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13154, file: !3, line: 3236, column: 5)
!13159 = !DILocation(line: 3238, column: 14, scope: !13158)
!13160 = !DILocation(line: 3239, column: 5, scope: !13158)
!13161 = !DILocation(line: 0, scope: !13154)
!13162 = !DILocation(line: 3243, column: 7, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3243, column: 7)
!13164 = !DILocation(line: 3243, column: 7, scope: !13063)
!13165 = !DILocation(line: 3256, column: 17, scope: !13063)
!13166 = !DILocation(line: 3257, column: 5, scope: !13063)
!13167 = !DILocation(line: 3255, column: 9, scope: !13063)
!13168 = !DILocation(line: 3259, column: 8, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 3259, column: 7)
!13170 = !DILocation(line: 3259, column: 7, scope: !13063)
!13171 = !DILocation(line: 3260, column: 5, scope: !13169)
!13172 = !DILocation(line: 3263, column: 9, scope: !13063)
!13173 = !DILocation(line: 3266, column: 12, scope: !13063)
!13174 = !DILocation(line: 3270, column: 10, scope: !13063)
!13175 = !DILocation(line: 3270, column: 3, scope: !13063)
!13176 = distinct !DISubprogram(name: "c_expr_to_decl", scope: !3, file: !3, line: 9934, type: !13177, scopeLine: 9935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13179)
!13177 = !DISubroutineType(types: !13178)
!13178 = !{!460, !460, !451, !451}
!13179 = !{!13180, !13181, !13182, !13183}
!13180 = !DILocalVariable(name: "expr", arg: 1, scope: !13176, file: !3, line: 9934, type: !460)
!13181 = !DILocalVariable(name: "tc", arg: 2, scope: !13176, file: !3, line: 9934, type: !451)
!13182 = !DILocalVariable(name: "se", arg: 3, scope: !13176, file: !3, line: 9934, type: !451)
!13183 = !DILocalVariable(name: "decl", scope: !13184, file: !3, line: 9938, type: !460)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !3, line: 9937, column: 5)
!13185 = distinct !DILexicalBlock(scope: !13176, file: !3, line: 9936, column: 7)
!13186 = !DILocation(line: 0, scope: !13176)
!13187 = !DILocation(line: 9936, column: 7, scope: !13185)
!13188 = !DILocation(line: 9936, column: 24, scope: !13185)
!13189 = !DILocation(line: 9936, column: 7, scope: !13176)
!13190 = !DILocation(line: 9938, column: 19, scope: !13184)
!13191 = !DILocation(line: 0, scope: !13184)
!13192 = !DILocation(line: 9941, column: 12, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 9941, column: 11)
!13194 = !DILocation(line: 9941, column: 11, scope: !13184)
!13195 = !DILocation(line: 9942, column: 6, scope: !13193)
!13196 = !DILocation(line: 9942, column: 2, scope: !13193)
!13197 = !DILocation(line: 0, scope: !13185)
!13198 = !DILocation(line: 9947, column: 1, scope: !13176)
!13199 = distinct !DISubprogram(name: "c_begin_omp_parallel", scope: !3, file: !3, line: 9952, type: !12809, scopeLine: 9953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13200)
!13200 = !{!13201}
!13201 = !DILocalVariable(name: "block", scope: !13199, file: !3, line: 9954, type: !460)
!13202 = !DILocation(line: 9956, column: 3, scope: !13199)
!13203 = !DILocation(line: 9957, column: 11, scope: !13199)
!13204 = !DILocation(line: 0, scope: !13199)
!13205 = !DILocation(line: 9959, column: 3, scope: !13199)
!13206 = distinct !DISubprogram(name: "c_finish_omp_parallel", scope: !3, file: !3, line: 9966, type: !4022, scopeLine: 9967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13207)
!13207 = !{!13208, !13209, !13210, !13211}
!13208 = !DILocalVariable(name: "loc", arg: 1, scope: !13206, file: !3, line: 9966, type: !585)
!13209 = !DILocalVariable(name: "clauses", arg: 2, scope: !13206, file: !3, line: 9966, type: !460)
!13210 = !DILocalVariable(name: "block", arg: 3, scope: !13206, file: !3, line: 9966, type: !460)
!13211 = !DILocalVariable(name: "stmt", scope: !13206, file: !3, line: 9968, type: !460)
!13212 = !DILocation(line: 0, scope: !13206)
!13213 = !DILocation(line: 9970, column: 11, scope: !13206)
!13214 = !DILocation(line: 9972, column: 10, scope: !13206)
!13215 = !DILocation(line: 9973, column: 22, scope: !13206)
!13216 = !DILocation(line: 9973, column: 3, scope: !13206)
!13217 = !DILocation(line: 9973, column: 20, scope: !13206)
!13218 = !DILocation(line: 9974, column: 3, scope: !13206)
!13219 = !DILocation(line: 9974, column: 31, scope: !13206)
!13220 = !DILocation(line: 9975, column: 28, scope: !13206)
!13221 = !DILocation(line: 9976, column: 3, scope: !13206)
!13222 = !DILocation(line: 9978, column: 10, scope: !13206)
!13223 = !DILocation(line: 9978, column: 3, scope: !13206)
!13224 = distinct !DISubprogram(name: "c_begin_omp_task", scope: !3, file: !3, line: 9984, type: !12809, scopeLine: 9985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13225)
!13225 = !{!13226}
!13226 = !DILocalVariable(name: "block", scope: !13224, file: !3, line: 9986, type: !460)
!13227 = !DILocation(line: 9988, column: 3, scope: !13224)
!13228 = !DILocation(line: 9989, column: 11, scope: !13224)
!13229 = !DILocation(line: 0, scope: !13224)
!13230 = !DILocation(line: 9991, column: 3, scope: !13224)
!13231 = distinct !DISubprogram(name: "c_finish_omp_task", scope: !3, file: !3, line: 9998, type: !4022, scopeLine: 9999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13232)
!13232 = !{!13233, !13234, !13235, !13236}
!13233 = !DILocalVariable(name: "loc", arg: 1, scope: !13231, file: !3, line: 9998, type: !585)
!13234 = !DILocalVariable(name: "clauses", arg: 2, scope: !13231, file: !3, line: 9998, type: !460)
!13235 = !DILocalVariable(name: "block", arg: 3, scope: !13231, file: !3, line: 9998, type: !460)
!13236 = !DILocalVariable(name: "stmt", scope: !13231, file: !3, line: 10000, type: !460)
!13237 = !DILocation(line: 0, scope: !13231)
!13238 = !DILocation(line: 10002, column: 11, scope: !13231)
!13239 = !DILocation(line: 10004, column: 10, scope: !13231)
!13240 = !DILocation(line: 10005, column: 22, scope: !13231)
!13241 = !DILocation(line: 10005, column: 3, scope: !13231)
!13242 = !DILocation(line: 10005, column: 20, scope: !13231)
!13243 = !DILocation(line: 10006, column: 3, scope: !13231)
!13244 = !DILocation(line: 10006, column: 27, scope: !13231)
!13245 = !DILocation(line: 10007, column: 24, scope: !13231)
!13246 = !DILocation(line: 10008, column: 3, scope: !13231)
!13247 = !DILocation(line: 10010, column: 10, scope: !13231)
!13248 = !DILocation(line: 10010, column: 3, scope: !13231)
!13249 = distinct !DISubprogram(name: "c_finish_omp_clauses", scope: !3, file: !3, line: 10017, type: !2493, scopeLine: 10018, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13250)
!13250 = !{!13251, !13252, !13254, !13255, !13256, !13257, !13258, !13259, !13260, !13264, !13265, !13266, !13271, !13272, !13277}
!13251 = !DILocalVariable(name: "clauses", arg: 1, scope: !13249, file: !3, line: 10017, type: !460)
!13252 = !DILocalVariable(name: "generic_head", scope: !13249, file: !3, line: 10019, type: !13253)
!13253 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !692, line: 84, baseType: !691)
!13254 = !DILocalVariable(name: "firstprivate_head", scope: !13249, file: !3, line: 10019, type: !13253)
!13255 = !DILocalVariable(name: "lastprivate_head", scope: !13249, file: !3, line: 10019, type: !13253)
!13256 = !DILocalVariable(name: "c", scope: !13249, file: !3, line: 10020, type: !460)
!13257 = !DILocalVariable(name: "t", scope: !13249, file: !3, line: 10020, type: !460)
!13258 = !DILocalVariable(name: "pc", scope: !13249, file: !3, line: 10020, type: !823)
!13259 = !DILocalVariable(name: "name", scope: !13249, file: !3, line: 10021, type: !458)
!13260 = !DILocalVariable(name: "remove", scope: !13261, file: !3, line: 10030, type: !452)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !3, line: 10029, column: 5)
!13262 = distinct !DILexicalBlock(scope: !13263, file: !3, line: 10028, column: 3)
!13263 = distinct !DILexicalBlock(scope: !13249, file: !3, line: 10028, column: 3)
!13264 = !DILocalVariable(name: "need_complete", scope: !13261, file: !3, line: 10031, type: !452)
!13265 = !DILocalVariable(name: "need_implicitly_determined", scope: !13261, file: !3, line: 10032, type: !452)
!13266 = !DILocalVariable(name: "r_code", scope: !13267, file: !3, line: 10060, type: !134)
!13267 = distinct !DILexicalBlock(scope: !13268, file: !3, line: 10059, column: 6)
!13268 = distinct !DILexicalBlock(scope: !13269, file: !3, line: 10058, column: 13)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 10051, column: 8)
!13270 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 10035, column: 2)
!13271 = !DILocalVariable(name: "r_name", scope: !13267, file: !3, line: 10061, type: !458)
!13272 = !DILocalVariable(name: "share_name", scope: !13273, file: !3, line: 10204, type: !458)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !3, line: 10203, column: 6)
!13274 = distinct !DILexicalBlock(scope: !13275, file: !3, line: 10202, column: 8)
!13275 = distinct !DILexicalBlock(scope: !13276, file: !3, line: 10192, column: 2)
!13276 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 10191, column: 11)
!13277 = !DILabel(scope: !13270, name: "check_dup_generic", file: !3, line: 10112)
!13278 = !DILocation(line: 0, scope: !13249)
!13279 = !DILocation(line: 10019, column: 3, scope: !13249)
!13280 = !DILocation(line: 10023, column: 3, scope: !13249)
!13281 = !DILocation(line: 10024, column: 3, scope: !13249)
!13282 = !DILocation(line: 10025, column: 3, scope: !13249)
!13283 = !DILocation(line: 10026, column: 3, scope: !13249)
!13284 = !DILocation(line: 10028, column: 8, scope: !13263)
!13285 = !DILocation(line: 0, scope: !13263)
!13286 = !DILocation(line: 10028, column: 11, scope: !13263)
!13287 = !DILocation(line: 10028, column: 3, scope: !13263)
!13288 = !DILocation(line: 0, scope: !13261)
!13289 = !DILocation(line: 10034, column: 15, scope: !13261)
!13290 = !DILocation(line: 10034, column: 7, scope: !13261)
!13291 = !DILocation(line: 10045, column: 4, scope: !13270)
!13292 = !DILocation(line: 10050, column: 8, scope: !13270)
!13293 = !DILocation(line: 10051, column: 8, scope: !13269)
!13294 = !DILocation(line: 10052, column: 8, scope: !13269)
!13295 = !DILocation(line: 10052, column: 11, scope: !13269)
!13296 = !DILocation(line: 10051, column: 8, scope: !13270)
!13297 = !DILocation(line: 10054, column: 18, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13269, file: !3, line: 10053, column: 6)
!13299 = !DILocation(line: 10054, column: 8, scope: !13298)
!13300 = !DILocation(line: 10057, column: 6, scope: !13298)
!13301 = !DILocation(line: 10058, column: 13, scope: !13268)
!13302 = !DILocation(line: 10058, column: 13, scope: !13269)
!13303 = !DILocation(line: 10060, column: 32, scope: !13267)
!13304 = !DILocation(line: 0, scope: !13267)
!13305 = !DILocation(line: 10063, column: 8, scope: !13267)
!13306 = !DILocation(line: 10071, column: 5, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 10064, column: 3)
!13308 = !DILocation(line: 10074, column: 5, scope: !13307)
!13309 = !DILocation(line: 10077, column: 5, scope: !13307)
!13310 = !DILocation(line: 10080, column: 5, scope: !13307)
!13311 = !DILocation(line: 10083, column: 5, scope: !13307)
!13312 = !DILocation(line: 10085, column: 5, scope: !13307)
!13313 = !DILocation(line: 10086, column: 3, scope: !13307)
!13314 = !DILocation(line: 10087, column: 12, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 10087, column: 12)
!13316 = !DILocation(line: 10087, column: 12, scope: !13267)
!13317 = !DILocation(line: 10089, column: 15, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13315, file: !3, line: 10088, column: 3)
!13319 = !DILocation(line: 10089, column: 5, scope: !13318)
!13320 = !DILocation(line: 10093, column: 3, scope: !13318)
!13321 = !DILocation(line: 10099, column: 4, scope: !13270)
!13322 = !DILocation(line: 10103, column: 8, scope: !13270)
!13323 = !DILocation(line: 10104, column: 8, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 10104, column: 8)
!13325 = !DILocation(line: 10104, column: 22, scope: !13324)
!13326 = !DILocation(line: 10104, column: 34, scope: !13324)
!13327 = !DILocation(line: 10104, column: 38, scope: !13324)
!13328 = !DILocation(line: 10104, column: 8, scope: !13270)
!13329 = !DILocation(line: 10106, column: 18, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13324, file: !3, line: 10105, column: 6)
!13331 = !DILocation(line: 10106, column: 8, scope: !13330)
!13332 = !DILocation(line: 10109, column: 6, scope: !13330)
!13333 = !DILocation(line: 0, scope: !13270)
!13334 = !DILocation(line: 10112, column: 2, scope: !13270)
!13335 = !DILocation(line: 10113, column: 8, scope: !13270)
!13336 = !DILocation(line: 10114, column: 8, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 10114, column: 8)
!13338 = !DILocation(line: 10114, column: 22, scope: !13337)
!13339 = !DILocation(line: 10114, column: 34, scope: !13337)
!13340 = !DILocation(line: 10114, column: 51, scope: !13337)
!13341 = !DILocation(line: 10114, column: 8, scope: !13270)
!13342 = !DILocation(line: 10116, column: 18, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 10115, column: 6)
!13344 = !DILocation(line: 10116, column: 8, scope: !13343)
!13345 = !DILocation(line: 10119, column: 6, scope: !13343)
!13346 = !DILocation(line: 10120, column: 42, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 10120, column: 13)
!13348 = !DILocation(line: 10120, column: 13, scope: !13347)
!13349 = !DILocation(line: 10121, column: 6, scope: !13347)
!13350 = !DILocation(line: 10121, column: 43, scope: !13347)
!13351 = !DILocation(line: 10121, column: 9, scope: !13347)
!13352 = !DILocation(line: 10122, column: 6, scope: !13347)
!13353 = !DILocation(line: 10122, column: 42, scope: !13347)
!13354 = !DILocation(line: 10122, column: 9, scope: !13347)
!13355 = !DILocation(line: 10120, column: 13, scope: !13337)
!13356 = !DILocation(line: 10124, column: 18, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13347, file: !3, line: 10123, column: 6)
!13358 = !DILocation(line: 10124, column: 8, scope: !13357)
!13359 = !DILocation(line: 10127, column: 6, scope: !13357)
!13360 = !DILocation(line: 10129, column: 37, scope: !13347)
!13361 = !DILocation(line: 10129, column: 6, scope: !13347)
!13362 = !DILocation(line: 10134, column: 8, scope: !13270)
!13363 = !DILocation(line: 10137, column: 8, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 10137, column: 8)
!13365 = !DILocation(line: 10137, column: 22, scope: !13364)
!13366 = !DILocation(line: 10137, column: 34, scope: !13364)
!13367 = !DILocation(line: 10137, column: 51, scope: !13364)
!13368 = !DILocation(line: 10137, column: 8, scope: !13270)
!13369 = !DILocation(line: 10139, column: 18, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 10138, column: 6)
!13371 = !DILocation(line: 10139, column: 8, scope: !13370)
!13372 = !DILocation(line: 10142, column: 6, scope: !13370)
!13373 = !DILocation(line: 10143, column: 42, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 10143, column: 13)
!13375 = !DILocation(line: 10143, column: 13, scope: !13374)
!13376 = !DILocation(line: 10144, column: 6, scope: !13374)
!13377 = !DILocation(line: 10144, column: 43, scope: !13374)
!13378 = !DILocation(line: 10144, column: 9, scope: !13374)
!13379 = !DILocation(line: 10143, column: 13, scope: !13364)
!13380 = !DILocation(line: 10146, column: 18, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 10145, column: 6)
!13382 = !DILocation(line: 10146, column: 8, scope: !13381)
!13383 = !DILocation(line: 10149, column: 6, scope: !13381)
!13384 = !DILocation(line: 10151, column: 42, scope: !13374)
!13385 = !DILocation(line: 10151, column: 6, scope: !13374)
!13386 = !DILocation(line: 10156, column: 8, scope: !13270)
!13387 = !DILocation(line: 10159, column: 8, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 10159, column: 8)
!13389 = !DILocation(line: 10159, column: 22, scope: !13388)
!13390 = !DILocation(line: 10159, column: 34, scope: !13388)
!13391 = !DILocation(line: 10159, column: 51, scope: !13388)
!13392 = !DILocation(line: 10159, column: 8, scope: !13270)
!13393 = !DILocation(line: 10161, column: 18, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13388, file: !3, line: 10160, column: 6)
!13395 = !DILocation(line: 10161, column: 8, scope: !13394)
!13396 = !DILocation(line: 10164, column: 6, scope: !13394)
!13397 = !DILocation(line: 10165, column: 42, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13388, file: !3, line: 10165, column: 13)
!13399 = !DILocation(line: 10165, column: 13, scope: !13398)
!13400 = !DILocation(line: 10166, column: 6, scope: !13398)
!13401 = !DILocation(line: 10166, column: 42, scope: !13398)
!13402 = !DILocation(line: 10166, column: 9, scope: !13398)
!13403 = !DILocation(line: 10165, column: 13, scope: !13388)
!13404 = !DILocation(line: 10168, column: 18, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13398, file: !3, line: 10167, column: 6)
!13406 = !DILocation(line: 10168, column: 8, scope: !13405)
!13407 = !DILocation(line: 10171, column: 6, scope: !13405)
!13408 = !DILocation(line: 10173, column: 41, scope: !13398)
!13409 = !DILocation(line: 10173, column: 6, scope: !13398)
!13410 = !DILocation(line: 10184, column: 10, scope: !13270)
!13411 = !DILocation(line: 10185, column: 4, scope: !13270)
!13412 = !DILocation(line: 10188, column: 4, scope: !13270)
!13413 = !DILocation(line: 10189, column: 2, scope: !13270)
!13414 = !DILocation(line: 10191, column: 12, scope: !13276)
!13415 = !DILocation(line: 10191, column: 11, scope: !13261)
!13416 = !DILocation(line: 10193, column: 8, scope: !13275)
!13417 = !DILocation(line: 10195, column: 8, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13275, file: !3, line: 10195, column: 8)
!13419 = !DILocation(line: 10195, column: 8, scope: !13275)
!13420 = !DILocation(line: 10197, column: 12, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13418, file: !3, line: 10196, column: 6)
!13422 = !DILocation(line: 10198, column: 17, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 10198, column: 12)
!13424 = !DILocation(line: 10198, column: 14, scope: !13423)
!13425 = !DILocation(line: 10198, column: 12, scope: !13421)
!13426 = !DILocation(line: 10200, column: 6, scope: !13421)
!13427 = !DILocation(line: 0, scope: !13275)
!13428 = !DILocation(line: 10202, column: 8, scope: !13274)
!13429 = !DILocation(line: 10202, column: 8, scope: !13275)
!13430 = !DILocation(line: 0, scope: !13273)
!13431 = !DILocation(line: 10206, column: 12, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13273, file: !3, line: 10206, column: 12)
!13433 = !DILocation(line: 10206, column: 26, scope: !13432)
!13434 = !DILocation(line: 10206, column: 38, scope: !13432)
!13435 = !DILocation(line: 10206, column: 41, scope: !13432)
!13436 = !DILocation(line: 10206, column: 12, scope: !13273)
!13437 = !DILocation(line: 10208, column: 21, scope: !13432)
!13438 = !DILocation(line: 10208, column: 13, scope: !13432)
!13439 = !DILocation(line: 10214, column: 5, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 10209, column: 3)
!13441 = !DILocation(line: 10217, column: 5, scope: !13440)
!13442 = !DILocation(line: 10219, column: 5, scope: !13440)
!13443 = !DILocation(line: 10220, column: 3, scope: !13440)
!13444 = !DILocation(line: 10221, column: 12, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13273, file: !3, line: 10221, column: 12)
!13446 = !DILocation(line: 10221, column: 12, scope: !13273)
!13447 = !DILocation(line: 10223, column: 15, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 10222, column: 3)
!13449 = !DILocation(line: 10223, column: 5, scope: !13448)
!13450 = !DILocation(line: 10227, column: 3, scope: !13448)
!13451 = !DILocation(line: 10231, column: 11, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 10231, column: 11)
!13453 = !DILocation(line: 0, scope: !13452)
!13454 = !DILocation(line: 10231, column: 11, scope: !13261)
!13455 = !DILocation(line: 10232, column: 8, scope: !13452)
!13456 = !DILocation(line: 10232, column: 6, scope: !13452)
!13457 = !DILocation(line: 10232, column: 2, scope: !13452)
!13458 = !DILocation(line: 10028, column: 3, scope: !13262)
!13459 = distinct !{!13459, !13287, !13460}
!13460 = !DILocation(line: 10235, column: 5, scope: !13263)
!13461 = !DILocation(line: 10237, column: 3, scope: !13249)
!13462 = !DILocation(line: 10238, column: 10, scope: !13249)
!13463 = !DILocation(line: 10239, column: 1, scope: !13249)
!13464 = !DILocation(line: 10238, column: 3, scope: !13249)
!13465 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !692, file: !692, line: 165, type: !13466, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13468)
!13466 = !DISubroutineType(types: !13467)
!13467 = !{null, !1338, !711}
!13468 = !{!13469, !13470}
!13469 = !DILocalVariable(name: "head", arg: 1, scope: !13465, file: !692, line: 165, type: !1338)
!13470 = !DILocalVariable(name: "obstack", arg: 2, scope: !13465, file: !692, line: 165, type: !711)
!13471 = !DILocation(line: 0, scope: !13465)
!13472 = !DILocation(line: 167, column: 23, scope: !13465)
!13473 = !DILocation(line: 167, column: 31, scope: !13465)
!13474 = !DILocation(line: 167, column: 9, scope: !13465)
!13475 = !DILocation(line: 167, column: 15, scope: !13465)
!13476 = !DILocation(line: 168, column: 9, scope: !13465)
!13477 = !DILocation(line: 168, column: 17, scope: !13465)
!13478 = !DILocation(line: 172, column: 1, scope: !13465)
!13479 = distinct !DISubprogram(name: "c_build_va_arg", scope: !3, file: !3, line: 10309, type: !4022, scopeLine: 10310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13480)
!13480 = !{!13481, !13482, !13483}
!13481 = !DILocalVariable(name: "loc", arg: 1, scope: !13479, file: !3, line: 10309, type: !585)
!13482 = !DILocalVariable(name: "expr", arg: 2, scope: !13479, file: !3, line: 10309, type: !460)
!13483 = !DILocalVariable(name: "type", arg: 3, scope: !13479, file: !3, line: 10309, type: !460)
!13484 = !DILocation(line: 0, scope: !13479)
!13485 = !DILocation(line: 10311, column: 7, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 10311, column: 7)
!13487 = !DILocation(line: 10311, column: 23, scope: !13486)
!13488 = !DILocation(line: 10311, column: 26, scope: !13486)
!13489 = !DILocation(line: 10311, column: 43, scope: !13486)
!13490 = !DILocation(line: 10311, column: 7, scope: !13479)
!13491 = !DILocation(line: 10312, column: 5, scope: !13486)
!13492 = !DILocation(line: 10314, column: 10, scope: !13479)
!13493 = !DILocation(line: 10314, column: 3, scope: !13479)
!13494 = distinct !DISubprogram(name: "function_types_compatible_p", scope: !3, file: !3, line: 1516, type: !3479, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13495)
!13495 = !{!13496, !13497, !13498, !13499, !13500, !13501, !13502, !13503, !13504}
!13496 = !DILocalVariable(name: "f1", arg: 1, scope: !13494, file: !3, line: 1516, type: !1960)
!13497 = !DILocalVariable(name: "f2", arg: 2, scope: !13494, file: !3, line: 1516, type: !1960)
!13498 = !DILocalVariable(name: "enum_and_int_p", arg: 3, scope: !13494, file: !3, line: 1517, type: !451)
!13499 = !DILocalVariable(name: "args1", scope: !13494, file: !3, line: 1519, type: !460)
!13500 = !DILocalVariable(name: "args2", scope: !13494, file: !3, line: 1519, type: !460)
!13501 = !DILocalVariable(name: "val", scope: !13494, file: !3, line: 1521, type: !453)
!13502 = !DILocalVariable(name: "val1", scope: !13494, file: !3, line: 1522, type: !453)
!13503 = !DILocalVariable(name: "ret1", scope: !13494, file: !3, line: 1523, type: !460)
!13504 = !DILocalVariable(name: "ret2", scope: !13494, file: !3, line: 1523, type: !460)
!13505 = !DILocation(line: 0, scope: !13494)
!13506 = !DILocation(line: 1525, column: 10, scope: !13494)
!13507 = !DILocation(line: 1526, column: 10, scope: !13494)
!13508 = !DILocation(line: 1530, column: 7, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1530, column: 7)
!13510 = !DILocation(line: 1530, column: 31, scope: !13509)
!13511 = !DILocation(line: 1530, column: 28, scope: !13509)
!13512 = !DILocation(line: 1530, column: 7, scope: !13494)
!13513 = !DILocation(line: 1531, column: 14, scope: !13509)
!13514 = !DILocation(line: 1531, column: 5, scope: !13509)
!13515 = !DILocation(line: 1532, column: 7, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1532, column: 7)
!13517 = !DILocation(line: 1532, column: 7, scope: !13494)
!13518 = !DILocation(line: 1533, column: 34, scope: !13516)
!13519 = !DILocation(line: 1534, column: 6, scope: !13516)
!13520 = !DILocation(line: 1533, column: 12, scope: !13516)
!13521 = !DILocation(line: 1533, column: 5, scope: !13516)
!13522 = !DILocation(line: 1535, column: 7, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1535, column: 7)
!13524 = !DILocation(line: 1535, column: 7, scope: !13494)
!13525 = !DILocation(line: 1536, column: 34, scope: !13523)
!13526 = !DILocation(line: 1537, column: 6, scope: !13523)
!13527 = !DILocation(line: 1536, column: 12, scope: !13523)
!13528 = !DILocation(line: 1536, column: 5, scope: !13523)
!13529 = !DILocation(line: 1538, column: 9, scope: !13494)
!13530 = !DILocation(line: 1539, column: 11, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1539, column: 7)
!13532 = !DILocation(line: 1539, column: 7, scope: !13494)
!13533 = !DILocation(line: 1542, column: 11, scope: !13494)
!13534 = !DILocation(line: 1543, column: 11, scope: !13494)
!13535 = !DILocation(line: 1548, column: 13, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1548, column: 7)
!13537 = !DILocation(line: 1548, column: 7, scope: !13494)
!13538 = !DILocation(line: 1550, column: 12, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1550, column: 11)
!13540 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 1549, column: 5)
!13541 = !DILocation(line: 1550, column: 11, scope: !13540)
!13542 = !DILocation(line: 1555, column: 11, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1555, column: 11)
!13544 = !DILocation(line: 1556, column: 4, scope: !13543)
!13545 = !DILocation(line: 1556, column: 12, scope: !13543)
!13546 = !DILocation(line: 1556, column: 9, scope: !13543)
!13547 = !DILocation(line: 1555, column: 11, scope: !13540)
!13548 = !DILocation(line: 1561, column: 13, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 1561, column: 7)
!13550 = !DILocation(line: 1561, column: 7, scope: !13494)
!13551 = !DILocation(line: 1563, column: 12, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13553, file: !3, line: 1563, column: 11)
!13553 = distinct !DILexicalBlock(scope: !13549, file: !3, line: 1562, column: 5)
!13554 = !DILocation(line: 1563, column: 11, scope: !13553)
!13555 = !DILocation(line: 1565, column: 11, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13553, file: !3, line: 1565, column: 11)
!13557 = !DILocation(line: 1566, column: 4, scope: !13556)
!13558 = !DILocation(line: 1566, column: 12, scope: !13556)
!13559 = !DILocation(line: 1566, column: 9, scope: !13556)
!13560 = !DILocation(line: 1565, column: 11, scope: !13553)
!13561 = !DILocation(line: 1573, column: 10, scope: !13494)
!13562 = !DILocation(line: 1574, column: 15, scope: !13494)
!13563 = !DILocation(line: 1574, column: 10, scope: !13494)
!13564 = !DILocation(line: 1574, column: 3, scope: !13494)
!13565 = !DILocation(line: 1575, column: 1, scope: !13494)
!13566 = distinct !DISubprogram(name: "tagged_types_tu_compatible_p", scope: !3, file: !3, line: 1290, type: !3479, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13567)
!13567 = !{!13568, !13569, !13570, !13571, !13572, !13573, !13574, !13576, !13579, !13580, !13581, !13583, !13587, !13591, !13596, !13598}
!13568 = !DILocalVariable(name: "t1", arg: 1, scope: !13566, file: !3, line: 1290, type: !1960)
!13569 = !DILocalVariable(name: "t2", arg: 2, scope: !13566, file: !3, line: 1290, type: !1960)
!13570 = !DILocalVariable(name: "enum_and_int_p", arg: 3, scope: !13566, file: !3, line: 1291, type: !451)
!13571 = !DILocalVariable(name: "s1", scope: !13566, file: !3, line: 1293, type: !460)
!13572 = !DILocalVariable(name: "s2", scope: !13566, file: !3, line: 1293, type: !460)
!13573 = !DILocalVariable(name: "needs_warning", scope: !13566, file: !3, line: 1294, type: !452)
!13574 = !DILocalVariable(name: "tts_i", scope: !13575, file: !3, line: 1324, type: !1957)
!13575 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 1323, column: 3)
!13576 = !DILocalVariable(name: "tu", scope: !13577, file: !3, line: 1334, type: !1953)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 1333, column: 7)
!13578 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 1331, column: 5)
!13579 = !DILocalVariable(name: "tv1", scope: !13577, file: !3, line: 1336, type: !460)
!13580 = !DILocalVariable(name: "tv2", scope: !13577, file: !3, line: 1337, type: !460)
!13581 = !DILocalVariable(name: "tu", scope: !13582, file: !3, line: 1386, type: !1953)
!13582 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 1385, column: 7)
!13583 = !DILocalVariable(name: "result", scope: !13584, file: !3, line: 1397, type: !453)
!13584 = distinct !DILexicalBlock(scope: !13585, file: !3, line: 1396, column: 4)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 1394, column: 2)
!13586 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 1394, column: 2)
!13587 = !DILocalVariable(name: "ok", scope: !13588, file: !3, line: 1430, type: !452)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !3, line: 1429, column: 4)
!13589 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 1428, column: 2)
!13590 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 1428, column: 2)
!13591 = !DILocalVariable(name: "result", scope: !13592, file: !3, line: 1435, type: !453)
!13592 = distinct !DILexicalBlock(scope: !13593, file: !3, line: 1434, column: 3)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 1433, column: 12)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 1432, column: 6)
!13595 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1432, column: 6)
!13596 = !DILocalVariable(name: "tu", scope: !13597, file: !3, line: 1470, type: !1953)
!13597 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 1469, column: 7)
!13598 = !DILocalVariable(name: "result", scope: !13599, file: !3, line: 1476, type: !453)
!13599 = distinct !DILexicalBlock(scope: !13600, file: !3, line: 1475, column: 4)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !3, line: 1472, column: 2)
!13601 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 1472, column: 2)
!13602 = !DILocation(line: 0, scope: !13566)
!13603 = !DILocation(line: 1302, column: 3, scope: !13566)
!13604 = !DILocation(line: 1302, column: 10, scope: !13566)
!13605 = !DILocation(line: 1303, column: 3, scope: !13566)
!13606 = !DILocation(line: 1303, column: 6, scope: !13566)
!13607 = !DILocation(line: 1303, column: 33, scope: !13566)
!13608 = !DILocation(line: 1304, column: 3, scope: !13566)
!13609 = !DILocation(line: 1304, column: 6, scope: !13566)
!13610 = distinct !{!13610, !13603, !13611}
!13611 = !DILocation(line: 1305, column: 10, scope: !13566)
!13612 = !DILocation(line: 1307, column: 3, scope: !13566)
!13613 = !DILocation(line: 1307, column: 10, scope: !13566)
!13614 = !DILocation(line: 1308, column: 3, scope: !13566)
!13615 = !DILocation(line: 1308, column: 6, scope: !13566)
!13616 = !DILocation(line: 1308, column: 33, scope: !13566)
!13617 = !DILocation(line: 1309, column: 3, scope: !13566)
!13618 = !DILocation(line: 1309, column: 6, scope: !13566)
!13619 = distinct !{!13619, !13612, !13620}
!13620 = !DILocation(line: 1310, column: 10, scope: !13566)
!13621 = !DILocation(line: 1313, column: 7, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 1313, column: 7)
!13623 = !DILocation(line: 1313, column: 19, scope: !13622)
!13624 = !DILocation(line: 1313, column: 37, scope: !13622)
!13625 = !DILocation(line: 1313, column: 7, scope: !13566)
!13626 = !DILocation(line: 1319, column: 7, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 1319, column: 7)
!13628 = !DILocation(line: 1319, column: 22, scope: !13627)
!13629 = !DILocation(line: 1320, column: 7, scope: !13627)
!13630 = !DILocation(line: 1320, column: 10, scope: !13627)
!13631 = !DILocation(line: 1320, column: 25, scope: !13627)
!13632 = !DILocation(line: 1319, column: 7, scope: !13566)
!13633 = !DILocation(line: 1325, column: 10, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 1325, column: 5)
!13635 = !DILocation(line: 0, scope: !13634)
!13636 = !DILocation(line: 0, scope: !13575)
!13637 = !DILocation(line: 1325, column: 45, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13634, file: !3, line: 1325, column: 5)
!13639 = !DILocation(line: 1325, column: 5, scope: !13634)
!13640 = !DILocation(line: 1326, column: 18, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13638, file: !3, line: 1326, column: 11)
!13642 = !DILocation(line: 1326, column: 21, scope: !13641)
!13643 = !DILocation(line: 1326, column: 27, scope: !13641)
!13644 = !DILocation(line: 1326, column: 37, scope: !13641)
!13645 = !DILocation(line: 1326, column: 40, scope: !13641)
!13646 = !DILocation(line: 1326, column: 11, scope: !13638)
!13647 = !DILocation(line: 1327, column: 16, scope: !13641)
!13648 = !DILocation(line: 1327, column: 2, scope: !13641)
!13649 = !DILocation(line: 1325, column: 69, scope: !13638)
!13650 = !DILocation(line: 1325, column: 5, scope: !13638)
!13651 = distinct !{!13651, !13639, !13652}
!13652 = !DILocation(line: 1327, column: 16, scope: !13634)
!13653 = !DILocation(line: 1330, column: 11, scope: !13566)
!13654 = !DILocation(line: 1330, column: 3, scope: !13566)
!13655 = !DILocation(line: 1334, column: 36, scope: !13577)
!13656 = !DILocation(line: 0, scope: !13577)
!13657 = !DILocation(line: 1336, column: 13, scope: !13577)
!13658 = !DILocation(line: 1337, column: 13, scope: !13577)
!13659 = !DILocation(line: 1339, column: 10, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1339, column: 6)
!13661 = !DILocation(line: 1339, column: 6, scope: !13577)
!13662 = !DILocation(line: 1344, column: 2, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1344, column: 2)
!13664 = !DILocation(line: 1344, column: 8, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13663, file: !3, line: 1344, column: 2)
!13666 = !DILocation(line: 1344, column: 12, scope: !13665)
!13667 = !DILocation(line: 1346, column: 10, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13669, file: !3, line: 1346, column: 10)
!13669 = distinct !DILexicalBlock(scope: !13665, file: !3, line: 1345, column: 4)
!13670 = !DILocation(line: 1346, column: 32, scope: !13668)
!13671 = !DILocation(line: 1346, column: 29, scope: !13668)
!13672 = !DILocation(line: 1346, column: 10, scope: !13669)
!13673 = !DILocation(line: 1348, column: 28, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13669, file: !3, line: 1348, column: 10)
!13675 = !DILocation(line: 1348, column: 46, scope: !13674)
!13676 = !DILocation(line: 1348, column: 10, scope: !13674)
!13677 = !DILocation(line: 1348, column: 64, scope: !13674)
!13678 = !DILocation(line: 1348, column: 10, scope: !13669)
!13679 = !DILocation(line: 1350, column: 7, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 1349, column: 8)
!13681 = !DILocation(line: 1350, column: 11, scope: !13680)
!13682 = !DILocation(line: 1351, column: 3, scope: !13680)
!13683 = !DILocation(line: 1344, column: 26, scope: !13665)
!13684 = !DILocation(line: 1344, column: 50, scope: !13665)
!13685 = !DILocation(line: 1344, column: 2, scope: !13665)
!13686 = distinct !{!13686, !13662, !13687}
!13687 = !DILocation(line: 1353, column: 4, scope: !13663)
!13688 = !DILocation(line: 1355, column: 10, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1355, column: 6)
!13690 = !DILocation(line: 1355, column: 30, scope: !13689)
!13691 = !DILocation(line: 1355, column: 23, scope: !13689)
!13692 = !DILocation(line: 1359, column: 23, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1359, column: 6)
!13694 = !DILocation(line: 1361, column: 10, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13693, file: !3, line: 1360, column: 4)
!13696 = !DILocation(line: 1361, column: 14, scope: !13695)
!13697 = !DILocation(line: 1362, column: 6, scope: !13695)
!13698 = !DILocation(line: 1365, column: 19, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1365, column: 6)
!13700 = !DILocation(line: 1365, column: 6, scope: !13699)
!13701 = !DILocation(line: 1365, column: 53, scope: !13699)
!13702 = !DILocation(line: 1365, column: 40, scope: !13699)
!13703 = !DILocation(line: 1365, column: 37, scope: !13699)
!13704 = !DILocation(line: 1365, column: 6, scope: !13577)
!13705 = !DILocation(line: 1367, column: 10, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13699, file: !3, line: 1366, column: 4)
!13707 = !DILocation(line: 1367, column: 14, scope: !13706)
!13708 = !DILocation(line: 1368, column: 6, scope: !13706)
!13709 = !DILocation(line: 1371, column: 7, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1371, column: 2)
!13711 = !DILocation(line: 0, scope: !13710)
!13712 = !DILocation(line: 1371, column: 2, scope: !13710)
!13713 = !DILocation(line: 1373, column: 27, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13715, file: !3, line: 1372, column: 4)
!13715 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 1371, column: 2)
!13716 = !DILocation(line: 1373, column: 46, scope: !13714)
!13717 = !DILocation(line: 1373, column: 11, scope: !13714)
!13718 = !DILocation(line: 1374, column: 13, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 1374, column: 10)
!13720 = !DILocation(line: 1375, column: 3, scope: !13719)
!13721 = !DILocation(line: 1375, column: 24, scope: !13719)
!13722 = !DILocation(line: 1375, column: 41, scope: !13719)
!13723 = !DILocation(line: 1375, column: 6, scope: !13719)
!13724 = !DILocation(line: 1375, column: 58, scope: !13719)
!13725 = !DILocation(line: 1374, column: 10, scope: !13714)
!13726 = !DILocation(line: 1377, column: 7, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 1376, column: 8)
!13728 = !DILocation(line: 1377, column: 11, scope: !13727)
!13729 = !DILocation(line: 1378, column: 3, scope: !13727)
!13730 = !DILocation(line: 1371, column: 39, scope: !13715)
!13731 = !DILocation(line: 1371, column: 2, scope: !13715)
!13732 = distinct !{!13732, !13712, !13733}
!13733 = !DILocation(line: 1380, column: 4, scope: !13710)
!13734 = !DILocation(line: 1386, column: 36, scope: !13582)
!13735 = !DILocation(line: 0, scope: !13582)
!13736 = !DILocation(line: 1387, column: 19, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 1387, column: 6)
!13738 = !DILocation(line: 1387, column: 6, scope: !13737)
!13739 = !DILocation(line: 1387, column: 53, scope: !13737)
!13740 = !DILocation(line: 1387, column: 40, scope: !13737)
!13741 = !DILocation(line: 1387, column: 37, scope: !13737)
!13742 = !DILocation(line: 1387, column: 6, scope: !13582)
!13743 = !DILocation(line: 1389, column: 10, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13737, file: !3, line: 1388, column: 4)
!13745 = !DILocation(line: 1389, column: 14, scope: !13744)
!13746 = !DILocation(line: 1390, column: 6, scope: !13744)
!13747 = !DILocation(line: 0, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13749, file: !3, line: 1407, column: 8)
!13749 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 1406, column: 10)
!13750 = !DILocation(line: 1394, column: 7, scope: !13586)
!13751 = !DILocation(line: 1294, column: 8, scope: !13566)
!13752 = !DILocation(line: 0, scope: !13586)
!13753 = !DILocation(line: 1394, column: 53, scope: !13585)
!13754 = !DILocation(line: 1394, column: 56, scope: !13585)
!13755 = !DILocation(line: 1394, column: 2, scope: !13586)
!13756 = !DILocation(line: 1399, column: 10, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 1399, column: 10)
!13758 = !DILocation(line: 1399, column: 28, scope: !13757)
!13759 = !DILocation(line: 1399, column: 25, scope: !13757)
!13760 = !DILocation(line: 1399, column: 10, scope: !13584)
!13761 = !DILocation(line: 1401, column: 35, scope: !13584)
!13762 = !DILocation(line: 1401, column: 51, scope: !13584)
!13763 = !DILocation(line: 1401, column: 15, scope: !13584)
!13764 = !DILocation(line: 0, scope: !13584)
!13765 = !DILocation(line: 1404, column: 22, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 1404, column: 10)
!13767 = !DILocation(line: 1404, column: 26, scope: !13766)
!13768 = !DILocation(line: 1404, column: 10, scope: !13584)
!13769 = !DILocation(line: 1406, column: 10, scope: !13584)
!13770 = !DILocation(line: 1408, column: 11, scope: !13748)
!13771 = !DILocation(line: 1409, column: 3, scope: !13748)
!13772 = !DILocation(line: 1412, column: 8, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 1411, column: 10)
!13774 = !DILocation(line: 1414, column: 10, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 1414, column: 10)
!13776 = !DILocation(line: 1414, column: 25, scope: !13775)
!13777 = !DILocation(line: 1415, column: 3, scope: !13775)
!13778 = !DILocation(line: 1415, column: 24, scope: !13775)
!13779 = !DILocation(line: 1416, column: 10, scope: !13775)
!13780 = !DILocation(line: 1415, column: 6, scope: !13775)
!13781 = !DILocation(line: 1416, column: 38, scope: !13775)
!13782 = !DILocation(line: 1414, column: 10, scope: !13584)
!13783 = !DILocation(line: 1418, column: 11, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13775, file: !3, line: 1417, column: 8)
!13785 = !DILocation(line: 1419, column: 3, scope: !13784)
!13786 = !DILocation(line: 1395, column: 12, scope: !13585)
!13787 = !DILocation(line: 1395, column: 34, scope: !13585)
!13788 = !DILocation(line: 1394, column: 2, scope: !13585)
!13789 = distinct !{!13789, !13755, !13790}
!13790 = !DILocation(line: 1421, column: 4, scope: !13586)
!13791 = !DILocation(line: 1422, column: 10, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 1422, column: 6)
!13793 = !DILocation(line: 1424, column: 16, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13792, file: !3, line: 1423, column: 4)
!13795 = !DILocation(line: 1424, column: 14, scope: !13794)
!13796 = !DILocation(line: 1425, column: 6, scope: !13794)
!13797 = !DILocation(line: 1428, column: 7, scope: !13590)
!13798 = !DILocation(line: 0, scope: !13590)
!13799 = !DILocation(line: 1428, column: 2, scope: !13590)
!13800 = !DILocation(line: 0, scope: !13588)
!13801 = !DILocation(line: 0, scope: !13593)
!13802 = !DILocation(line: 0, scope: !13592)
!13803 = !DILocation(line: 0, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 1450, column: 9)
!13805 = !DILocation(line: 1432, column: 11, scope: !13595)
!13806 = !DILocation(line: 1430, column: 11, scope: !13588)
!13807 = !DILocation(line: 0, scope: !13595)
!13808 = !DILocation(line: 1432, column: 6, scope: !13595)
!13809 = !DILocation(line: 1433, column: 12, scope: !13593)
!13810 = !DILocation(line: 1433, column: 30, scope: !13593)
!13811 = !DILocation(line: 1433, column: 27, scope: !13593)
!13812 = !DILocation(line: 1433, column: 12, scope: !13594)
!13813 = !DILocation(line: 1437, column: 34, scope: !13592)
!13814 = !DILocation(line: 1437, column: 50, scope: !13592)
!13815 = !DILocation(line: 1437, column: 14, scope: !13592)
!13816 = !DILocation(line: 1440, column: 21, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 1440, column: 9)
!13818 = !DILocation(line: 1440, column: 25, scope: !13817)
!13819 = !DILocation(line: 1440, column: 9, scope: !13592)
!13820 = !DILocation(line: 1442, column: 9, scope: !13592)
!13821 = !DILocation(line: 1444, column: 17, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !3, line: 1443, column: 7)
!13823 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 1442, column: 9)
!13824 = !DILocation(line: 1445, column: 9, scope: !13822)
!13825 = !DILocation(line: 1448, column: 7, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 1447, column: 9)
!13827 = !DILocation(line: 1450, column: 9, scope: !13804)
!13828 = !DILocation(line: 1450, column: 24, scope: !13804)
!13829 = !DILocation(line: 1451, column: 9, scope: !13804)
!13830 = !DILocation(line: 1451, column: 30, scope: !13804)
!13831 = !DILocation(line: 1452, column: 9, scope: !13804)
!13832 = !DILocation(line: 1451, column: 12, scope: !13804)
!13833 = !DILocation(line: 1452, column: 37, scope: !13804)
!13834 = !DILocation(line: 1450, column: 9, scope: !13592)
!13835 = !DILocation(line: 1456, column: 5, scope: !13592)
!13836 = !DILocation(line: 1432, column: 43, scope: !13594)
!13837 = !DILocation(line: 1432, column: 6, scope: !13594)
!13838 = distinct !{!13838, !13808, !13839}
!13839 = !DILocation(line: 1457, column: 3, scope: !13595)
!13840 = !DILocation(line: 1458, column: 11, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1458, column: 10)
!13842 = !DILocation(line: 1458, column: 10, scope: !13588)
!13843 = !DILocation(line: 1460, column: 11, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13841, file: !3, line: 1459, column: 8)
!13845 = !DILocation(line: 1461, column: 3, scope: !13844)
!13846 = !DILocation(line: 1428, column: 39, scope: !13589)
!13847 = !DILocation(line: 1428, column: 2, scope: !13589)
!13848 = distinct !{!13848, !13799, !13849}
!13849 = !DILocation(line: 1463, column: 4, scope: !13590)
!13850 = !DILocation(line: 1464, column: 12, scope: !13582)
!13851 = !DILocation(line: 1464, column: 10, scope: !13582)
!13852 = !DILocation(line: 1465, column: 2, scope: !13582)
!13853 = !DILocation(line: 1470, column: 36, scope: !13597)
!13854 = !DILocation(line: 0, scope: !13597)
!13855 = !DILocation(line: 1472, column: 12, scope: !13601)
!13856 = !DILocation(line: 1472, column: 35, scope: !13601)
!13857 = !DILocation(line: 1472, column: 7, scope: !13601)
!13858 = !DILocation(line: 0, scope: !13601)
!13859 = !DILocation(line: 1473, column: 7, scope: !13600)
!13860 = !DILocation(line: 1473, column: 10, scope: !13600)
!13861 = !DILocation(line: 1472, column: 2, scope: !13601)
!13862 = !DILocation(line: 1477, column: 10, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 1477, column: 10)
!13864 = !DILocation(line: 1477, column: 28, scope: !13863)
!13865 = !DILocation(line: 1477, column: 25, scope: !13863)
!13866 = !DILocation(line: 1478, column: 3, scope: !13863)
!13867 = !DILocation(line: 1478, column: 6, scope: !13863)
!13868 = !DILocation(line: 1478, column: 24, scope: !13863)
!13869 = !DILocation(line: 1478, column: 21, scope: !13863)
!13870 = !DILocation(line: 1477, column: 10, scope: !13599)
!13871 = !DILocation(line: 1480, column: 35, scope: !13599)
!13872 = !DILocation(line: 1480, column: 51, scope: !13599)
!13873 = !DILocation(line: 1480, column: 15, scope: !13599)
!13874 = !DILocation(line: 0, scope: !13599)
!13875 = !DILocation(line: 1482, column: 10, scope: !13599)
!13876 = !DILocation(line: 1485, column: 8, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 1484, column: 10)
!13878 = !DILocation(line: 1487, column: 10, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 1487, column: 10)
!13880 = !DILocation(line: 1487, column: 25, scope: !13879)
!13881 = !DILocation(line: 1488, column: 3, scope: !13879)
!13882 = !DILocation(line: 1488, column: 24, scope: !13879)
!13883 = !DILocation(line: 1489, column: 10, scope: !13879)
!13884 = !DILocation(line: 1488, column: 6, scope: !13879)
!13885 = !DILocation(line: 1489, column: 38, scope: !13879)
!13886 = !DILocation(line: 1487, column: 10, scope: !13599)
!13887 = !DILocation(line: 1491, column: 4, scope: !13600)
!13888 = !DILocation(line: 1474, column: 12, scope: !13600)
!13889 = !DILocation(line: 1474, column: 34, scope: !13600)
!13890 = !DILocation(line: 1472, column: 2, scope: !13600)
!13891 = distinct !{!13891, !13861, !13892}
!13892 = !DILocation(line: 1491, column: 4, scope: !13601)
!13893 = !DILocation(line: 1492, column: 9, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 1492, column: 6)
!13895 = !DILocation(line: 1493, column: 8, scope: !13894)
!13896 = !DILocation(line: 1493, column: 12, scope: !13894)
!13897 = !DILocation(line: 1493, column: 4, scope: !13894)
!13898 = !DILocation(line: 1495, column: 14, scope: !13894)
!13899 = !DILocation(line: 1495, column: 8, scope: !13894)
!13900 = !DILocation(line: 1495, column: 12, scope: !13894)
!13901 = !DILocation(line: 1496, column: 13, scope: !13597)
!13902 = !DILocation(line: 1500, column: 7, scope: !13578)
!13903 = !DILocation(line: 1503, column: 5, scope: !13566)
!13904 = !DILocation(line: 1505, column: 1, scope: !13566)
!13905 = distinct !DISubprogram(name: "type_lists_compatible_p", scope: !3, file: !3, line: 1582, type: !3479, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !13906)
!13906 = !{!13907, !13908, !13909, !13910, !13911, !13912, !13914, !13915, !13916, !13917, !13925, !13929, !13932}
!13907 = !DILocalVariable(name: "args1", arg: 1, scope: !13905, file: !3, line: 1582, type: !1960)
!13908 = !DILocalVariable(name: "args2", arg: 2, scope: !13905, file: !3, line: 1582, type: !1960)
!13909 = !DILocalVariable(name: "enum_and_int_p", arg: 3, scope: !13905, file: !3, line: 1583, type: !451)
!13910 = !DILocalVariable(name: "val", scope: !13905, file: !3, line: 1586, type: !453)
!13911 = !DILocalVariable(name: "newval", scope: !13905, file: !3, line: 1587, type: !453)
!13912 = !DILocalVariable(name: "a1", scope: !13913, file: !3, line: 1591, type: !460)
!13913 = distinct !DILexicalBlock(scope: !13905, file: !3, line: 1590, column: 5)
!13914 = !DILocalVariable(name: "mv1", scope: !13913, file: !3, line: 1591, type: !460)
!13915 = !DILocalVariable(name: "a2", scope: !13913, file: !3, line: 1591, type: !460)
!13916 = !DILocalVariable(name: "mv2", scope: !13913, file: !3, line: 1591, type: !460)
!13917 = !DILocalVariable(name: "memb", scope: !13918, file: !3, line: 1633, type: !460)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !3, line: 1632, column: 6)
!13919 = distinct !DILexicalBlock(scope: !13920, file: !3, line: 1626, column: 8)
!13920 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 1623, column: 2)
!13921 = distinct !DILexicalBlock(scope: !13922, file: !3, line: 1622, column: 16)
!13922 = distinct !DILexicalBlock(scope: !13923, file: !3, line: 1619, column: 16)
!13923 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 1613, column: 16)
!13924 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 1608, column: 11)
!13925 = !DILocalVariable(name: "mv3", scope: !13926, file: !3, line: 1637, type: !460)
!13926 = distinct !DILexicalBlock(scope: !13927, file: !3, line: 1636, column: 3)
!13927 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 1634, column: 8)
!13928 = distinct !DILexicalBlock(scope: !13918, file: !3, line: 1634, column: 8)
!13929 = !DILocalVariable(name: "memb", scope: !13930, file: !3, line: 1654, type: !460)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !3, line: 1653, column: 6)
!13931 = distinct !DILexicalBlock(scope: !13919, file: !3, line: 1647, column: 13)
!13932 = !DILocalVariable(name: "mv3", scope: !13933, file: !3, line: 1658, type: !460)
!13933 = distinct !DILexicalBlock(scope: !13934, file: !3, line: 1657, column: 3)
!13934 = distinct !DILexicalBlock(scope: !13935, file: !3, line: 1655, column: 8)
!13935 = distinct !DILexicalBlock(scope: !13930, file: !3, line: 1655, column: 8)
!13936 = !DILocation(line: 0, scope: !13905)
!13937 = !DILocation(line: 1589, column: 3, scope: !13905)
!13938 = !DILocation(line: 1587, column: 7, scope: !13905)
!13939 = !DILocation(line: 1586, column: 7, scope: !13905)
!13940 = !DILocation(line: 1592, column: 17, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 1592, column: 11)
!13942 = !DILocation(line: 1592, column: 31, scope: !13941)
!13943 = !DILocation(line: 1592, column: 22, scope: !13941)
!13944 = !DILocation(line: 1596, column: 22, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 1596, column: 11)
!13946 = !DILocation(line: 1598, column: 18, scope: !13913)
!13947 = !DILocation(line: 0, scope: !13913)
!13948 = !DILocation(line: 1599, column: 18, scope: !13913)
!13949 = !DILocation(line: 1600, column: 11, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 1600, column: 11)
!13951 = !DILocation(line: 1600, column: 25, scope: !13950)
!13952 = !DILocation(line: 1600, column: 22, scope: !13950)
!13953 = !DILocation(line: 1600, column: 15, scope: !13950)
!13954 = !DILocation(line: 1600, column: 44, scope: !13950)
!13955 = !DILocation(line: 1600, column: 60, scope: !13950)
!13956 = !DILocation(line: 1600, column: 11, scope: !13913)
!13957 = !DILocation(line: 1601, column: 8, scope: !13950)
!13958 = !DILocation(line: 1601, column: 2, scope: !13950)
!13959 = !DILocation(line: 1602, column: 11, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 1602, column: 11)
!13961 = !DILocation(line: 1602, column: 22, scope: !13960)
!13962 = !DILocation(line: 1602, column: 15, scope: !13960)
!13963 = !DILocation(line: 1602, column: 44, scope: !13960)
!13964 = !DILocation(line: 1602, column: 60, scope: !13960)
!13965 = !DILocation(line: 1602, column: 11, scope: !13913)
!13966 = !DILocation(line: 1603, column: 8, scope: !13960)
!13967 = !DILocation(line: 1603, column: 2, scope: !13960)
!13968 = !DILocation(line: 1608, column: 14, scope: !13924)
!13969 = !DILocation(line: 1608, column: 11, scope: !13913)
!13970 = !DILocation(line: 1610, column: 8, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13972, file: !3, line: 1610, column: 8)
!13972 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 1609, column: 2)
!13973 = !DILocation(line: 1610, column: 32, scope: !13971)
!13974 = !DILocation(line: 1610, column: 8, scope: !13972)
!13975 = !DILocation(line: 1613, column: 19, scope: !13923)
!13976 = !DILocation(line: 1613, column: 16, scope: !13924)
!13977 = !DILocation(line: 1615, column: 8, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13979, file: !3, line: 1615, column: 8)
!13979 = distinct !DILexicalBlock(scope: !13923, file: !3, line: 1614, column: 2)
!13980 = !DILocation(line: 1615, column: 32, scope: !13978)
!13981 = !DILocation(line: 1615, column: 8, scope: !13979)
!13982 = !DILocation(line: 1619, column: 16, scope: !13922)
!13983 = !DILocation(line: 1619, column: 31, scope: !13922)
!13984 = !DILocation(line: 1620, column: 9, scope: !13922)
!13985 = !DILocation(line: 1620, column: 12, scope: !13922)
!13986 = !DILocation(line: 1620, column: 27, scope: !13922)
!13987 = !DILocation(line: 1619, column: 16, scope: !13923)
!13988 = !DILocation(line: 1622, column: 27, scope: !13921)
!13989 = !DILocation(line: 1622, column: 25, scope: !13921)
!13990 = !DILocation(line: 1622, column: 16, scope: !13922)
!13991 = !DILocation(line: 1626, column: 8, scope: !13919)
!13992 = !DILocation(line: 1626, column: 23, scope: !13919)
!13993 = !DILocation(line: 1627, column: 8, scope: !13919)
!13994 = !DILocation(line: 1627, column: 12, scope: !13919)
!13995 = !DILocation(line: 1627, column: 27, scope: !13919)
!13996 = !DILocation(line: 1628, column: 5, scope: !13919)
!13997 = !DILocation(line: 1628, column: 8, scope: !13919)
!13998 = !DILocation(line: 1629, column: 8, scope: !13919)
!13999 = !DILocation(line: 1629, column: 11, scope: !13919)
!14000 = !DILocation(line: 1629, column: 38, scope: !13919)
!14001 = !DILocation(line: 1630, column: 8, scope: !13919)
!14002 = !DILocation(line: 1631, column: 10, scope: !13919)
!14003 = !DILocation(line: 1630, column: 11, scope: !13919)
!14004 = !DILocation(line: 1626, column: 8, scope: !13920)
!14005 = !DILocation(line: 1634, column: 20, scope: !13928)
!14006 = !DILocation(line: 1634, column: 13, scope: !13928)
!14007 = !DILocation(line: 0, scope: !13928)
!14008 = !DILocation(line: 0, scope: !13918)
!14009 = !DILocation(line: 1634, column: 8, scope: !13928)
!14010 = !DILocation(line: 1637, column: 16, scope: !13926)
!14011 = !DILocation(line: 0, scope: !13926)
!14012 = !DILocation(line: 1638, column: 9, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !13926, file: !3, line: 1638, column: 9)
!14014 = !DILocation(line: 1638, column: 23, scope: !14013)
!14015 = !DILocation(line: 1638, column: 20, scope: !14013)
!14016 = !DILocation(line: 1638, column: 13, scope: !14013)
!14017 = !DILocation(line: 1639, column: 12, scope: !14013)
!14018 = !DILocation(line: 1639, column: 28, scope: !14013)
!14019 = !DILocation(line: 1638, column: 9, scope: !13926)
!14020 = !DILocation(line: 1640, column: 13, scope: !14013)
!14021 = !DILocation(line: 1640, column: 7, scope: !14013)
!14022 = !DILocation(line: 1641, column: 9, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !13926, file: !3, line: 1641, column: 9)
!14024 = !DILocation(line: 1635, column: 19, scope: !13927)
!14025 = !DILocation(line: 1634, column: 8, scope: !13927)
!14026 = distinct !{!14026, !14009, !14027}
!14027 = !DILocation(line: 1643, column: 3, scope: !13928)
!14028 = !DILocation(line: 1644, column: 12, scope: !13918)
!14029 = !DILocation(line: 1647, column: 13, scope: !13931)
!14030 = !DILocation(line: 1647, column: 28, scope: !13931)
!14031 = !DILocation(line: 1648, column: 6, scope: !13931)
!14032 = !DILocation(line: 1648, column: 10, scope: !13931)
!14033 = !DILocation(line: 1648, column: 25, scope: !13931)
!14034 = !DILocation(line: 1649, column: 10, scope: !13931)
!14035 = !DILocation(line: 1649, column: 13, scope: !13931)
!14036 = !DILocation(line: 1650, column: 6, scope: !13931)
!14037 = !DILocation(line: 1650, column: 9, scope: !13931)
!14038 = !DILocation(line: 1650, column: 36, scope: !13931)
!14039 = !DILocation(line: 1651, column: 6, scope: !13931)
!14040 = !DILocation(line: 1652, column: 8, scope: !13931)
!14041 = !DILocation(line: 1651, column: 9, scope: !13931)
!14042 = !DILocation(line: 1647, column: 13, scope: !13919)
!14043 = !DILocation(line: 1655, column: 20, scope: !13935)
!14044 = !DILocation(line: 1655, column: 13, scope: !13935)
!14045 = !DILocation(line: 0, scope: !13935)
!14046 = !DILocation(line: 0, scope: !13930)
!14047 = !DILocation(line: 1655, column: 8, scope: !13935)
!14048 = !DILocation(line: 1658, column: 16, scope: !13933)
!14049 = !DILocation(line: 0, scope: !13933)
!14050 = !DILocation(line: 1659, column: 9, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !13933, file: !3, line: 1659, column: 9)
!14052 = !DILocation(line: 1659, column: 23, scope: !14051)
!14053 = !DILocation(line: 1659, column: 20, scope: !14051)
!14054 = !DILocation(line: 1659, column: 13, scope: !14051)
!14055 = !DILocation(line: 1660, column: 12, scope: !14051)
!14056 = !DILocation(line: 1660, column: 28, scope: !14051)
!14057 = !DILocation(line: 1659, column: 9, scope: !13933)
!14058 = !DILocation(line: 1661, column: 13, scope: !14051)
!14059 = !DILocation(line: 1661, column: 7, scope: !14051)
!14060 = !DILocation(line: 1662, column: 9, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !13933, file: !3, line: 1662, column: 9)
!14062 = !DILocation(line: 1656, column: 19, scope: !13934)
!14063 = !DILocation(line: 1655, column: 8, scope: !13934)
!14064 = distinct !{!14064, !14047, !14065}
!14065 = !DILocation(line: 1664, column: 3, scope: !13935)
!14066 = !DILocation(line: 1665, column: 12, scope: !13930)
!14067 = !DILocation(line: 1673, column: 18, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 1673, column: 11)
!14069 = !DILocation(line: 1673, column: 11, scope: !13913)
!14070 = !DILocation(line: 1676, column: 15, scope: !13913)
!14071 = !DILocation(line: 1677, column: 15, scope: !13913)
!14072 = !DILocation(line: 1678, column: 5, scope: !13905)
!14073 = distinct !{!14073, !13937, !14072}
!14074 = !DILocation(line: 1679, column: 1, scope: !13905)
!14075 = distinct !DISubprogram(name: "alloc_tagged_tu_seen_cache", scope: !3, file: !3, line: 1242, type: !14076, scopeLine: 1243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14078)
!14076 = !DISubroutineType(types: !14077)
!14077 = !{!1953, !1960, !1960}
!14078 = !{!14079, !14080, !14081}
!14079 = !DILocalVariable(name: "t1", arg: 1, scope: !14075, file: !3, line: 1242, type: !1960)
!14080 = !DILocalVariable(name: "t2", arg: 2, scope: !14075, file: !3, line: 1242, type: !1960)
!14081 = !DILocalVariable(name: "tu", scope: !14075, file: !3, line: 1244, type: !1953)
!14082 = !DILocation(line: 0, scope: !14075)
!14083 = !DILocation(line: 1244, column: 37, scope: !14075)
!14084 = !DILocation(line: 1245, column: 14, scope: !14075)
!14085 = !DILocation(line: 1245, column: 12, scope: !14075)
!14086 = !DILocation(line: 1246, column: 7, scope: !14075)
!14087 = !DILocation(line: 1246, column: 10, scope: !14075)
!14088 = !DILocation(line: 1247, column: 7, scope: !14075)
!14089 = !DILocation(line: 1247, column: 10, scope: !14075)
!14090 = !DILocation(line: 1249, column: 23, scope: !14075)
!14091 = !DILocation(line: 1263, column: 7, scope: !14075)
!14092 = !DILocation(line: 1263, column: 11, scope: !14075)
!14093 = !DILocation(line: 1264, column: 3, scope: !14075)
!14094 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !135, file: !135, line: 182, type: !14095, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14097)
!14095 = !DISubroutineType(types: !14096)
!14096 = !{!453, !6075, !7, !823}
!14097 = !{!14098, !14099, !14100}
!14098 = !DILocalVariable(name: "vec_", arg: 1, scope: !14094, file: !135, line: 182, type: !6075)
!14099 = !DILocalVariable(name: "ix_", arg: 2, scope: !14094, file: !135, line: 182, type: !7)
!14100 = !DILocalVariable(name: "ptr", arg: 3, scope: !14094, file: !135, line: 182, type: !823)
!14101 = !DILocation(line: 0, scope: !14094)
!14102 = !DILocation(line: 182, column: 1, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14094, file: !135, line: 182, column: 1)
!14104 = !DILocation(line: 182, column: 1, scope: !14094)
!14105 = !DILocation(line: 182, column: 1, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14103, file: !135, line: 182, column: 1)
!14107 = !DILocation(line: 182, column: 1, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14103, file: !135, line: 182, column: 1)
!14109 = !DILocation(line: 0, scope: !14103)
!14110 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !135, file: !135, line: 182, type: !14111, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14113)
!14111 = !DISubroutineType(types: !14112)
!14112 = !{!460, !5871, !7, !460}
!14113 = !{!14114, !14115, !14116, !14117}
!14114 = !DILocalVariable(name: "vec_", arg: 1, scope: !14110, file: !135, line: 182, type: !5871)
!14115 = !DILocalVariable(name: "ix_", arg: 2, scope: !14110, file: !135, line: 182, type: !7)
!14116 = !DILocalVariable(name: "obj_", arg: 3, scope: !14110, file: !135, line: 182, type: !460)
!14117 = !DILocalVariable(name: "old_obj_", scope: !14110, file: !135, line: 182, type: !460)
!14118 = !DILocation(line: 0, scope: !14110)
!14119 = !DILocation(line: 182, column: 1, scope: !14110)
!14120 = distinct !DISubprogram(name: "comptypes_check_enum_int", scope: !3, file: !3, line: 988, type: !14121, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14123)
!14121 = !DISubroutineType(types: !14122)
!14122 = !{!453, !460, !460, !451}
!14123 = !{!14124, !14125, !14126, !14127, !14128}
!14124 = !DILocalVariable(name: "type1", arg: 1, scope: !14120, file: !3, line: 988, type: !460)
!14125 = !DILocalVariable(name: "type2", arg: 2, scope: !14120, file: !3, line: 988, type: !460)
!14126 = !DILocalVariable(name: "enum_and_int_p", arg: 3, scope: !14120, file: !3, line: 988, type: !451)
!14127 = !DILocalVariable(name: "tagged_tu_seen_base1", scope: !14120, file: !3, line: 990, type: !1957)
!14128 = !DILocalVariable(name: "val", scope: !14120, file: !3, line: 991, type: !453)
!14129 = !DILocation(line: 0, scope: !14120)
!14130 = !DILocation(line: 990, column: 62, scope: !14120)
!14131 = !DILocation(line: 993, column: 9, scope: !14120)
!14132 = !DILocation(line: 994, column: 3, scope: !14120)
!14133 = !DILocation(line: 996, column: 3, scope: !14120)
!14134 = distinct !DISubprogram(name: "valid_compound_expr_initializer", scope: !3, file: !3, line: 5442, type: !2612, scopeLine: 5443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14135)
!14135 = !{!14136, !14137}
!14136 = !DILocalVariable(name: "value", arg: 1, scope: !14134, file: !3, line: 5442, type: !460)
!14137 = !DILocalVariable(name: "endtype", arg: 2, scope: !14134, file: !3, line: 5442, type: !460)
!14138 = !DILocation(line: 5449, column: 14, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !3, line: 5445, column: 5)
!14140 = distinct !DILexicalBlock(scope: !14134, file: !3, line: 5444, column: 7)
!14141 = !DILocation(line: 0, scope: !14134)
!14142 = !DILocation(line: 5444, column: 7, scope: !14140)
!14143 = !DILocation(line: 5444, column: 25, scope: !14140)
!14144 = !DILocation(line: 5444, column: 7, scope: !14134)
!14145 = !DILocation(line: 5446, column: 44, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 5446, column: 11)
!14147 = !DILocation(line: 5446, column: 11, scope: !14146)
!14148 = !DILocation(line: 5447, column: 7, scope: !14146)
!14149 = !DILocation(line: 5447, column: 4, scope: !14146)
!14150 = !DILocation(line: 5446, column: 11, scope: !14139)
!14151 = !DILocation(line: 5456, column: 1, scope: !14134)
!14152 = !DILocation(line: 5449, column: 47, scope: !14139)
!14153 = !DILocation(line: 5452, column: 13, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14140, file: !3, line: 5452, column: 12)
!14155 = !DILocation(line: 5453, column: 12, scope: !14154)
!14156 = !DILocation(line: 5452, column: 12, scope: !14140)
!14157 = distinct !DISubprogram(name: "add_pending_init", scope: !3, file: !3, line: 6985, type: !14158, scopeLine: 6986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14160)
!14158 = !DISubroutineType(types: !14159)
!14159 = !{null, !460, !460, !460, !452}
!14160 = !{!14161, !14162, !14163, !14164, !14165, !14166, !14168, !14169, !14172, !14174, !14182}
!14161 = !DILocalVariable(name: "purpose", arg: 1, scope: !14157, file: !3, line: 6985, type: !460)
!14162 = !DILocalVariable(name: "value", arg: 2, scope: !14157, file: !3, line: 6985, type: !460)
!14163 = !DILocalVariable(name: "origtype", arg: 3, scope: !14157, file: !3, line: 6985, type: !460)
!14164 = !DILocalVariable(name: "implicit", arg: 4, scope: !14157, file: !3, line: 6985, type: !452)
!14165 = !DILocalVariable(name: "p", scope: !14157, file: !3, line: 6987, type: !1896)
!14166 = !DILocalVariable(name: "q", scope: !14157, file: !3, line: 6987, type: !14167)
!14167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!14168 = !DILocalVariable(name: "r", scope: !14157, file: !3, line: 6987, type: !1896)
!14169 = !DILocalVariable(name: "bitpos", scope: !14170, file: !3, line: 7018, type: !460)
!14170 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 7017, column: 5)
!14171 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 6992, column: 7)
!14172 = !DILocalVariable(name: "s", scope: !14173, file: !3, line: 7057, type: !1896)
!14173 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 7056, column: 5)
!14174 = !DILocalVariable(name: "t", scope: !14175, file: !3, line: 7092, type: !1896)
!14175 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 7090, column: 3)
!14176 = distinct !DILexicalBlock(scope: !14177, file: !3, line: 7065, column: 12)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !3, line: 7064, column: 6)
!14178 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 7063, column: 13)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 7061, column: 8)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 7060, column: 2)
!14181 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 7059, column: 11)
!14182 = !DILocalVariable(name: "t", scope: !14183, file: !3, line: 7165, type: !1896)
!14183 = distinct !DILexicalBlock(scope: !14184, file: !3, line: 7163, column: 3)
!14184 = distinct !DILexicalBlock(scope: !14185, file: !3, line: 7138, column: 12)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !3, line: 7137, column: 6)
!14186 = distinct !DILexicalBlock(scope: !14187, file: !3, line: 7136, column: 13)
!14187 = distinct !DILexicalBlock(scope: !14188, file: !3, line: 7133, column: 8)
!14188 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 7132, column: 2)
!14189 = !DILocation(line: 0, scope: !14157)
!14190 = !DILocation(line: 6992, column: 7, scope: !14171)
!14191 = !DILocation(line: 6992, column: 36, scope: !14171)
!14192 = !DILocation(line: 6992, column: 7, scope: !14157)
!14193 = !DILocation(line: 6994, column: 7, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 6993, column: 5)
!14195 = !DILocation(line: 6994, column: 14, scope: !14194)
!14196 = !DILocation(line: 6994, column: 17, scope: !14194)
!14197 = !DILocation(line: 6997, column: 37, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14199, file: !3, line: 6997, column: 8)
!14199 = distinct !DILexicalBlock(scope: !14194, file: !3, line: 6995, column: 2)
!14200 = !DILocation(line: 6997, column: 8, scope: !14198)
!14201 = !DILocation(line: 6997, column: 8, scope: !14199)
!14202 = !DILocation(line: 6998, column: 14, scope: !14198)
!14203 = !DILocation(line: 6998, column: 6, scope: !14198)
!14204 = !DILocation(line: 6999, column: 33, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14198, file: !3, line: 6999, column: 13)
!14206 = !DILocation(line: 6999, column: 13, scope: !14205)
!14207 = !DILocation(line: 6999, column: 13, scope: !14198)
!14208 = !DILocation(line: 7000, column: 14, scope: !14205)
!14209 = !DILocation(line: 7003, column: 13, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14211, file: !3, line: 7003, column: 12)
!14211 = distinct !DILexicalBlock(scope: !14205, file: !3, line: 7002, column: 6)
!14212 = !DILocation(line: 7003, column: 12, scope: !14211)
!14213 = !DILocation(line: 7005, column: 9, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !3, line: 7005, column: 9)
!14215 = distinct !DILexicalBlock(scope: !14210, file: !3, line: 7004, column: 3)
!14216 = !DILocation(line: 7005, column: 9, scope: !14215)
!14217 = !DILocation(line: 7006, column: 7, scope: !14214)
!14218 = !DILocation(line: 7007, column: 14, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14214, file: !3, line: 7007, column: 14)
!14220 = !DILocation(line: 7007, column: 14, scope: !14214)
!14221 = !DILocation(line: 7008, column: 7, scope: !14219)
!14222 = !DILocation(line: 7010, column: 11, scope: !14211)
!14223 = !DILocation(line: 7010, column: 17, scope: !14211)
!14224 = !DILocation(line: 7011, column: 11, scope: !14211)
!14225 = !DILocation(line: 7011, column: 20, scope: !14211)
!14226 = !DILocation(line: 7012, column: 8, scope: !14211)
!14227 = !DILocation(line: 0, scope: !14198)
!14228 = distinct !{!14228, !14193, !14229}
!14229 = !DILocation(line: 7014, column: 2, scope: !14194)
!14230 = !DILocation(line: 7020, column: 16, scope: !14170)
!14231 = !DILocation(line: 0, scope: !14170)
!14232 = !DILocation(line: 7021, column: 7, scope: !14170)
!14233 = !DILocation(line: 7021, column: 14, scope: !14170)
!14234 = !DILocation(line: 7021, column: 17, scope: !14170)
!14235 = !DILocation(line: 7024, column: 50, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 7024, column: 8)
!14237 = distinct !DILexicalBlock(scope: !14170, file: !3, line: 7022, column: 2)
!14238 = !DILocation(line: 7024, column: 33, scope: !14236)
!14239 = !DILocation(line: 7024, column: 8, scope: !14236)
!14240 = !DILocation(line: 7024, column: 8, scope: !14237)
!14241 = !DILocation(line: 7025, column: 14, scope: !14236)
!14242 = !DILocation(line: 7025, column: 6, scope: !14236)
!14243 = !DILocation(line: 7026, column: 16, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14236, file: !3, line: 7026, column: 13)
!14245 = !DILocation(line: 7026, column: 24, scope: !14244)
!14246 = !DILocation(line: 7026, column: 13, scope: !14236)
!14247 = !DILocation(line: 7027, column: 14, scope: !14244)
!14248 = !DILocation(line: 7030, column: 13, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 7030, column: 12)
!14250 = distinct !DILexicalBlock(scope: !14244, file: !3, line: 7029, column: 6)
!14251 = !DILocation(line: 7030, column: 12, scope: !14250)
!14252 = !DILocation(line: 7032, column: 9, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !3, line: 7032, column: 9)
!14254 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 7031, column: 3)
!14255 = !DILocation(line: 7032, column: 9, scope: !14254)
!14256 = !DILocation(line: 7033, column: 7, scope: !14253)
!14257 = !DILocation(line: 7034, column: 14, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 7034, column: 14)
!14259 = !DILocation(line: 7034, column: 14, scope: !14253)
!14260 = !DILocation(line: 7035, column: 7, scope: !14258)
!14261 = !DILocation(line: 7037, column: 11, scope: !14250)
!14262 = !DILocation(line: 7037, column: 17, scope: !14250)
!14263 = !DILocation(line: 7038, column: 11, scope: !14250)
!14264 = !DILocation(line: 7038, column: 20, scope: !14250)
!14265 = !DILocation(line: 7039, column: 8, scope: !14250)
!14266 = !DILocation(line: 0, scope: !14236)
!14267 = distinct !{!14267, !14232, !14268}
!14268 = !DILocation(line: 7041, column: 2, scope: !14170)
!14269 = !DILocation(line: 7044, column: 7, scope: !14157)
!14270 = !DILocation(line: 6989, column: 5, scope: !14157)
!14271 = !DILocation(line: 7045, column: 6, scope: !14157)
!14272 = !DILocation(line: 7045, column: 14, scope: !14157)
!14273 = !DILocation(line: 7046, column: 6, scope: !14157)
!14274 = !DILocation(line: 7046, column: 12, scope: !14157)
!14275 = !DILocation(line: 7047, column: 6, scope: !14157)
!14276 = !DILocation(line: 7047, column: 15, scope: !14157)
!14277 = !DILocation(line: 7049, column: 6, scope: !14157)
!14278 = !DILocation(line: 7050, column: 6, scope: !14157)
!14279 = !DILocation(line: 7050, column: 13, scope: !14157)
!14280 = !DILocation(line: 7051, column: 6, scope: !14157)
!14281 = !DILocation(line: 7051, column: 11, scope: !14157)
!14282 = !DILocation(line: 7052, column: 6, scope: !14157)
!14283 = !DILocation(line: 7052, column: 12, scope: !14157)
!14284 = !DILocation(line: 7053, column: 6, scope: !14157)
!14285 = !DILocation(line: 7053, column: 14, scope: !14157)
!14286 = !DILocation(line: 7055, column: 3, scope: !14157)
!14287 = !DILocation(line: 7059, column: 19, scope: !14181)
!14288 = !DILocation(line: 7059, column: 13, scope: !14181)
!14289 = !DILocation(line: 0, scope: !14181)
!14290 = !DILocation(line: 7059, column: 11, scope: !14173)
!14291 = !DILocation(line: 7061, column: 8, scope: !14180)
!14292 = !DILocation(line: 7130, column: 2, scope: !14180)
!14293 = !DILocation(line: 7063, column: 24, scope: !14178)
!14294 = !DILocation(line: 7063, column: 13, scope: !14179)
!14295 = !DILocation(line: 7065, column: 15, scope: !14176)
!14296 = !DILocation(line: 7065, column: 23, scope: !14176)
!14297 = !DILocation(line: 0, scope: !14176)
!14298 = !DILocation(line: 7065, column: 12, scope: !14177)
!14299 = !DILocation(line: 7068, column: 13, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 7066, column: 3)
!14301 = !DILocation(line: 7069, column: 9, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14300, file: !3, line: 7069, column: 9)
!14303 = !DILocation(line: 7069, column: 9, scope: !14300)
!14304 = !DILocation(line: 7070, column: 16, scope: !14302)
!14305 = !DILocation(line: 7070, column: 23, scope: !14302)
!14306 = !DILocation(line: 7070, column: 7, scope: !14302)
!14307 = !DILocation(line: 7071, column: 14, scope: !14300)
!14308 = !DILocation(line: 7073, column: 16, scope: !14300)
!14309 = !DILocation(line: 7074, column: 16, scope: !14300)
!14310 = !DILocation(line: 7076, column: 12, scope: !14300)
!14311 = !DILocation(line: 0, scope: !14173)
!14312 = !DILocation(line: 7077, column: 15, scope: !14300)
!14313 = !DILocation(line: 7078, column: 8, scope: !14300)
!14314 = !DILocation(line: 7078, column: 15, scope: !14300)
!14315 = !DILocation(line: 7079, column: 9, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14300, file: !3, line: 7079, column: 9)
!14317 = !DILocation(line: 7079, column: 9, scope: !14300)
!14318 = !DILocation(line: 7081, column: 16, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14320, file: !3, line: 7081, column: 13)
!14320 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 7080, column: 7)
!14321 = !DILocation(line: 7081, column: 21, scope: !14319)
!14322 = !DILocation(line: 7081, column: 13, scope: !14320)
!14323 = !DILocation(line: 7082, column: 12, scope: !14319)
!14324 = !DILocation(line: 7082, column: 4, scope: !14319)
!14325 = !DILocation(line: 7084, column: 7, scope: !14319)
!14326 = !DILocation(line: 7084, column: 13, scope: !14319)
!14327 = !DILocation(line: 7087, column: 32, scope: !14316)
!14328 = !DILocation(line: 0, scope: !14175)
!14329 = !DILocation(line: 7094, column: 19, scope: !14175)
!14330 = !DILocation(line: 7094, column: 14, scope: !14175)
!14331 = !DILocation(line: 7095, column: 9, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14175, file: !3, line: 7095, column: 9)
!14333 = !DILocation(line: 7095, column: 9, scope: !14175)
!14334 = !DILocation(line: 7096, column: 17, scope: !14332)
!14335 = !DILocation(line: 7096, column: 24, scope: !14332)
!14336 = !DILocation(line: 7096, column: 7, scope: !14332)
!14337 = !DILocation(line: 7097, column: 8, scope: !14175)
!14338 = !DILocation(line: 7097, column: 13, scope: !14175)
!14339 = !DILocation(line: 7099, column: 18, scope: !14175)
!14340 = !DILocation(line: 7099, column: 13, scope: !14175)
!14341 = !DILocation(line: 7100, column: 9, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14175, file: !3, line: 7100, column: 9)
!14343 = !DILocation(line: 7100, column: 9, scope: !14175)
!14344 = !DILocation(line: 7101, column: 16, scope: !14342)
!14345 = !DILocation(line: 7101, column: 23, scope: !14342)
!14346 = !DILocation(line: 7101, column: 7, scope: !14342)
!14347 = !DILocation(line: 7102, column: 14, scope: !14175)
!14348 = !DILocation(line: 7104, column: 21, scope: !14175)
!14349 = !DILocation(line: 7104, column: 29, scope: !14175)
!14350 = !DILocation(line: 7104, column: 16, scope: !14175)
!14351 = !DILocation(line: 7105, column: 23, scope: !14175)
!14352 = !DILocation(line: 7105, column: 31, scope: !14175)
!14353 = !DILocation(line: 7105, column: 18, scope: !14175)
!14354 = !DILocation(line: 7105, column: 16, scope: !14175)
!14355 = !DILocation(line: 7106, column: 16, scope: !14175)
!14356 = !DILocation(line: 7108, column: 12, scope: !14175)
!14357 = !DILocation(line: 7109, column: 15, scope: !14175)
!14358 = !DILocation(line: 7110, column: 8, scope: !14175)
!14359 = !DILocation(line: 7110, column: 15, scope: !14175)
!14360 = !DILocation(line: 7111, column: 8, scope: !14175)
!14361 = !DILocation(line: 7111, column: 15, scope: !14175)
!14362 = !DILocation(line: 7112, column: 9, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14175, file: !3, line: 7112, column: 9)
!14364 = !DILocation(line: 7112, column: 9, scope: !14175)
!14365 = !DILocation(line: 7114, column: 16, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !3, line: 7114, column: 13)
!14367 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 7113, column: 7)
!14368 = !DILocation(line: 7114, column: 21, scope: !14366)
!14369 = !DILocation(line: 7114, column: 13, scope: !14367)
!14370 = !DILocation(line: 7115, column: 12, scope: !14366)
!14371 = !DILocation(line: 7115, column: 4, scope: !14366)
!14372 = !DILocation(line: 7117, column: 7, scope: !14366)
!14373 = !DILocation(line: 7117, column: 13, scope: !14366)
!14374 = !DILocation(line: 7120, column: 32, scope: !14363)
!14375 = !DILocation(line: 7127, column: 19, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14178, file: !3, line: 7125, column: 6)
!14377 = !DILocation(line: 7128, column: 8, scope: !14376)
!14378 = !DILocation(line: 7133, column: 8, scope: !14188)
!14379 = !DILocation(line: 7136, column: 24, scope: !14186)
!14380 = !DILocation(line: 7136, column: 13, scope: !14187)
!14381 = !DILocation(line: 7138, column: 15, scope: !14184)
!14382 = !DILocation(line: 7138, column: 23, scope: !14184)
!14383 = !DILocation(line: 0, scope: !14184)
!14384 = !DILocation(line: 7138, column: 12, scope: !14185)
!14385 = !DILocation(line: 7141, column: 8, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14184, file: !3, line: 7139, column: 3)
!14387 = !DILocation(line: 7141, column: 14, scope: !14386)
!14388 = !DILocation(line: 7142, column: 9, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 7142, column: 9)
!14390 = !DILocation(line: 7142, column: 9, scope: !14386)
!14391 = !DILocation(line: 7143, column: 17, scope: !14389)
!14392 = !DILocation(line: 7143, column: 24, scope: !14389)
!14393 = !DILocation(line: 7143, column: 7, scope: !14389)
!14394 = !DILocation(line: 7144, column: 13, scope: !14386)
!14395 = !DILocation(line: 7146, column: 16, scope: !14386)
!14396 = !DILocation(line: 7147, column: 16, scope: !14386)
!14397 = !DILocation(line: 7149, column: 12, scope: !14386)
!14398 = !DILocation(line: 7150, column: 15, scope: !14386)
!14399 = !DILocation(line: 7151, column: 8, scope: !14386)
!14400 = !DILocation(line: 7151, column: 15, scope: !14386)
!14401 = !DILocation(line: 7152, column: 9, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 7152, column: 9)
!14403 = !DILocation(line: 7152, column: 9, scope: !14386)
!14404 = !DILocation(line: 7154, column: 16, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14406, file: !3, line: 7154, column: 13)
!14406 = distinct !DILexicalBlock(scope: !14402, file: !3, line: 7153, column: 7)
!14407 = !DILocation(line: 7154, column: 21, scope: !14405)
!14408 = !DILocation(line: 7154, column: 13, scope: !14406)
!14409 = !DILocation(line: 7155, column: 12, scope: !14405)
!14410 = !DILocation(line: 7155, column: 4, scope: !14405)
!14411 = !DILocation(line: 7157, column: 7, scope: !14405)
!14412 = !DILocation(line: 7157, column: 13, scope: !14405)
!14413 = !DILocation(line: 7160, column: 32, scope: !14402)
!14414 = !DILocation(line: 0, scope: !14183)
!14415 = !DILocation(line: 7167, column: 18, scope: !14183)
!14416 = !DILocation(line: 7167, column: 13, scope: !14183)
!14417 = !DILocation(line: 7168, column: 9, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 7168, column: 9)
!14419 = !DILocation(line: 7168, column: 9, scope: !14183)
!14420 = !DILocation(line: 7169, column: 16, scope: !14418)
!14421 = !DILocation(line: 7169, column: 23, scope: !14418)
!14422 = !DILocation(line: 7169, column: 7, scope: !14418)
!14423 = !DILocation(line: 7170, column: 14, scope: !14183)
!14424 = !DILocation(line: 7172, column: 19, scope: !14183)
!14425 = !DILocation(line: 7172, column: 8, scope: !14183)
!14426 = !DILocation(line: 7172, column: 14, scope: !14183)
!14427 = !DILocation(line: 7173, column: 9, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 7173, column: 9)
!14429 = !DILocation(line: 7173, column: 9, scope: !14183)
!14430 = !DILocation(line: 7174, column: 17, scope: !14428)
!14431 = !DILocation(line: 7174, column: 24, scope: !14428)
!14432 = !DILocation(line: 7174, column: 7, scope: !14428)
!14433 = !DILocation(line: 7175, column: 8, scope: !14183)
!14434 = !DILocation(line: 7175, column: 13, scope: !14183)
!14435 = !DILocation(line: 7177, column: 22, scope: !14183)
!14436 = !DILocation(line: 7177, column: 30, scope: !14183)
!14437 = !DILocation(line: 7177, column: 16, scope: !14183)
!14438 = !DILocation(line: 7178, column: 23, scope: !14183)
!14439 = !DILocation(line: 7178, column: 31, scope: !14183)
!14440 = !DILocation(line: 7178, column: 18, scope: !14183)
!14441 = !DILocation(line: 7178, column: 16, scope: !14183)
!14442 = !DILocation(line: 7179, column: 16, scope: !14183)
!14443 = !DILocation(line: 7181, column: 12, scope: !14183)
!14444 = !DILocation(line: 7182, column: 15, scope: !14183)
!14445 = !DILocation(line: 7183, column: 8, scope: !14183)
!14446 = !DILocation(line: 7183, column: 15, scope: !14183)
!14447 = !DILocation(line: 7184, column: 8, scope: !14183)
!14448 = !DILocation(line: 7184, column: 15, scope: !14183)
!14449 = !DILocation(line: 7185, column: 9, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 7185, column: 9)
!14451 = !DILocation(line: 7185, column: 9, scope: !14183)
!14452 = !DILocation(line: 7187, column: 16, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 7187, column: 13)
!14454 = distinct !DILexicalBlock(scope: !14450, file: !3, line: 7186, column: 7)
!14455 = !DILocation(line: 7187, column: 21, scope: !14453)
!14456 = !DILocation(line: 7187, column: 13, scope: !14454)
!14457 = !DILocation(line: 7188, column: 12, scope: !14453)
!14458 = !DILocation(line: 7188, column: 4, scope: !14453)
!14459 = !DILocation(line: 7190, column: 7, scope: !14453)
!14460 = !DILocation(line: 7190, column: 13, scope: !14453)
!14461 = !DILocation(line: 7193, column: 32, scope: !14450)
!14462 = !DILocation(line: 7200, column: 19, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14186, file: !3, line: 7198, column: 6)
!14464 = !DILocation(line: 7201, column: 8, scope: !14463)
!14465 = !DILocation(line: 7206, column: 14, scope: !14173)
!14466 = !DILocation(line: 7207, column: 5, scope: !14157)
!14467 = distinct !{!14467, !14286, !14466}
!14468 = !DILocation(line: 7208, column: 1, scope: !14157)
!14469 = distinct !DISubprogram(name: "VEC_constructor_elt_base_last", scope: !135, file: !135, line: 1537, type: !14470, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14472)
!14470 = !DISubroutineType(types: !14471)
!14471 = !{!11540, !11541}
!14472 = !{!14473}
!14473 = !DILocalVariable(name: "vec_", arg: 1, scope: !14469, file: !135, line: 1537, type: !11541)
!14474 = !DILocation(line: 0, scope: !14469)
!14475 = !DILocation(line: 1537, column: 1, scope: !14469)
!14476 = distinct !DISubprogram(name: "VEC_constructor_elt_gc_safe_push", scope: !135, file: !135, line: 1538, type: !14477, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14482)
!14477 = !DISubroutineType(types: !14478)
!14478 = !{!11540, !14479, !14480}
!14479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!14480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14481, size: 64)
!14481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!14482 = !{!14483, !14484}
!14483 = !DILocalVariable(name: "vec_", arg: 1, scope: !14476, file: !135, line: 1538, type: !14479)
!14484 = !DILocalVariable(name: "obj_", arg: 2, scope: !14476, file: !135, line: 1538, type: !14480)
!14485 = !DILocation(line: 0, scope: !14476)
!14486 = !DILocation(line: 1538, column: 1, scope: !14476)
!14487 = distinct !DISubprogram(name: "VEC_constructor_elt_gc_reserve", scope: !135, file: !135, line: 1538, type: !14488, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14490)
!14488 = !DISubroutineType(types: !14489)
!14489 = !{!453, !14479, !453}
!14490 = !{!14491, !14492, !14493}
!14491 = !DILocalVariable(name: "vec_", arg: 1, scope: !14487, file: !135, line: 1538, type: !14479)
!14492 = !DILocalVariable(name: "alloc_", arg: 2, scope: !14487, file: !135, line: 1538, type: !453)
!14493 = !DILocalVariable(name: "extend", scope: !14487, file: !135, line: 1538, type: !453)
!14494 = !DILocation(line: 0, scope: !14487)
!14495 = !DILocation(line: 1538, column: 1, scope: !14487)
!14496 = !DILocation(line: 1538, column: 1, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14487, file: !135, line: 1538, column: 1)
!14498 = distinct !DISubprogram(name: "VEC_constructor_elt_base_quick_push", scope: !135, file: !135, line: 1537, type: !14499, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14501)
!14499 = !DISubroutineType(types: !14500)
!14500 = !{!11540, !11541, !14480}
!14501 = !{!14502, !14503, !14504}
!14502 = !DILocalVariable(name: "vec_", arg: 1, scope: !14498, file: !135, line: 1537, type: !11541)
!14503 = !DILocalVariable(name: "obj_", arg: 2, scope: !14498, file: !135, line: 1537, type: !14480)
!14504 = !DILocalVariable(name: "slot_", scope: !14498, file: !135, line: 1537, type: !11540)
!14505 = !DILocation(line: 0, scope: !14498)
!14506 = !DILocation(line: 1537, column: 1, scope: !14498)
!14507 = distinct !DISubprogram(name: "VEC_constructor_elt_base_space", scope: !135, file: !135, line: 1537, type: !14508, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !14510)
!14508 = !DISubroutineType(types: !14509)
!14509 = !{!453, !11541, !453}
!14510 = !{!14511, !14512}
!14511 = !DILocalVariable(name: "vec_", arg: 1, scope: !14507, file: !135, line: 1537, type: !11541)
!14512 = !DILocalVariable(name: "alloc_", arg: 2, scope: !14507, file: !135, line: 1537, type: !453)
!14513 = !DILocation(line: 0, scope: !14507)
!14514 = !DILocation(line: 1537, column: 1, scope: !14507)
