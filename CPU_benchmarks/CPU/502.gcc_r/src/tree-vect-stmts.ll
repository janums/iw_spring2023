; ModuleID = 'tree-vect-stmts.bc'
source_filename = "tree-vect-stmts.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.processor_costs = type { i32, i32, i32, i32, [5 x i32], i32, [5 x i32], i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [3 x i32], [3 x i32], i32, [2 x i32], [2 x i32], i32, [3 x i32], [3 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x %struct.stringop_algs], [2 x %struct.stringop_algs], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.stringop_algs = type { i32, [4 x %struct.stringop_strategy] }
%struct.stringop_strategy = type { i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.VEC_vec_void_p_heap = type { %struct.VEC_vec_void_p_base }
%struct.VEC_vec_void_p_base = type { i32, i32, [1 x i8*] }
%struct.insn_data = type { i8*, %union.anon.2, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%union.anon.2 = type { i8* }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.optab_handlers = type { i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct._loop_vec_info = type { %struct.loop*, %struct.basic_block_def**, %union.tree_node*, %union.tree_node*, i32, i8, i32, %struct.data_reference*, i32, i32, %struct.VEC_data_reference_p_heap*, %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap*, %struct.VEC_gimple_heap*, i32, %struct.VEC_gimple_heap*, %struct.VEC_slp_instance_heap*, i32 }
%struct.data_reference = type { %union.gimple_statement_d*, %union.tree_node*, i8*, i8, %struct.innermost_loop_behavior, %struct.indices, %struct.dr_alias, %struct.access_matrix* }
%struct.innermost_loop_behavior = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.indices = type { %union.tree_node*, %struct.VEC_tree_heap* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.dr_alias = type { %struct.ptr_info_def*, %struct.bitmap_head_def* }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.access_matrix = type { %struct.VEC_loop_p_heap*, i32, %struct.VEC_tree_heap*, %struct.VEC_lambda_vector_gc* }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.VEC_lambda_vector_gc = type { %struct.VEC_lambda_vector_base }
%struct.VEC_lambda_vector_base = type { i32, i32, [1 x i32*] }
%struct.VEC_data_reference_p_heap = type { %struct.VEC_data_reference_p_base }
%struct.VEC_data_reference_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.VEC_ddr_p_heap = type { %struct.VEC_ddr_p_base }
%struct.VEC_ddr_p_base = type { i32, i32, [1 x %struct.data_dependence_relation*] }
%struct.data_dependence_relation = type { %struct.data_reference*, %struct.data_reference*, %union.tree_node*, %struct.VEC_subscript_p_heap*, %struct.VEC_loop_p_heap*, %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap*, i32, i8, i8, i8 }
%struct.VEC_subscript_p_heap = type { %struct.VEC_subscript_p_base }
%struct.VEC_subscript_p_base = type { i32, i32, [1 x %struct.subscript*] }
%struct.subscript = type { %struct.conflict_function*, %struct.conflict_function*, %union.tree_node*, %union.tree_node* }
%struct.conflict_function = type { i32, [2 x %struct.VEC_tree_heap*] }
%struct.VEC_lambda_vector_heap = type { %struct.VEC_lambda_vector_base }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.VEC_slp_instance_heap = type { %struct.VEC_slp_instance_base }
%struct.VEC_slp_instance_base = type { i32, i32, [1 x %struct._slp_instance*] }
%struct._slp_instance = type { %struct._slp_tree*, i32, i32, %struct.anon.0, %struct.VEC_int_heap*, %struct.VEC_slp_tree_heap*, %union.gimple_statement_d* }
%struct._slp_tree = type { %struct._slp_tree*, %struct._slp_tree*, %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap*, i32, %struct.anon }
%struct.anon = type { i32, i32 }
%struct.anon.0 = type { i32, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_slp_tree_heap = type { %struct.VEC_slp_tree_base }
%struct.VEC_slp_tree_base = type { i32, i32, [1 x %struct._slp_tree*] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct._stmt_vec_info = type { i32, %union.gimple_statement_d*, %struct._loop_vec_info*, i32, i8, %union.tree_node*, %union.gimple_statement_d*, %struct.data_reference*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8, %union.gimple_statement_d*, %struct.VEC_dr_p_heap*, i32, %union.gimple_statement_d*, %union.gimple_statement_d*, i32, i32, i32, %union.gimple_statement_d*, i8, %struct.anon.1, i32, %struct._bb_vec_info* }
%struct.VEC_dr_p_heap = type { %struct.VEC_dr_p_base }
%struct.VEC_dr_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.anon.1 = type { i32, i32 }
%struct._bb_vec_info = type { %struct.basic_block_def*, %struct.VEC_gimple_heap*, %struct.VEC_slp_instance_heap*, %struct.VEC_data_reference_p_heap*, %struct.VEC_ddr_p_heap* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@vect_dump = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [41 x i8] c"=== vect_mark_stmts_to_be_vectorized ===\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"init: phi relevant? \00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"init: stmt relevant? \00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"worklist: examine stmt: \00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"unsupported use of reduction.\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"unsupported use of nested cycle.\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"unsupported use of double reduction.\00", align 1
@ix86_cost = external dso_local local_unnamed_addr global %struct.processor_costs*, align 8
@.str.7 = private unnamed_addr constant [18 x i8] c"tree-vect-stmts.c\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.9 = private unnamed_addr constant [62 x i8] c"vect_model_simple_cost: inside_cost = %d, outside_cost = %d .\00", align 1
@.str.10 = private unnamed_addr constant [49 x i8] c"vect_model_store_cost: strided group_size = %d .\00", align 1
@.str.11 = private unnamed_addr constant [61 x i8] c"vect_model_store_cost: inside_cost = %d, outside_cost = %d .\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"vect_model_load_cost: strided group_size = %d .\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"vect_model_load_cost: aligned.\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"vect_model_load_cost: unaligned supported by hardware.\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.15 = private unnamed_addr constant [52 x i8] c"vect_model_load_cost: unaligned software pipelined.\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"vect_model_load_cost: inside_cost = %d, outside_cost = %d .\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"cst_\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"created new init_stmt: \00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"vect_get_vec_def_for_operand: \00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"def =  \00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"  def_stmt =  \00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"Create vector_cst. nunits = %d\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"Create vector_inv.\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"add new stmt: \00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"value used after loop.\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"==> examining statement: \00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"not vectorized: stmt has volatile operands\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"irrelevant.\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"get vectype for scalar type:  \00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"not SLPed: unsupported data-type \00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"vectype:  \00", align 1
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.32 = private unnamed_addr constant [35 x i8] c"not vectorized: relevant stmt not \00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"supported: \00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"not vectorized: live stmt not \00", align 1
@.str.35 = private unnamed_addr constant [74 x i8] c"not vectorized: the size of group of strided accesses is not a power of 2\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"stmt not supported.\00", align 1
@.str.37 = private unnamed_addr constant [46 x i8] c"Record the vdef for outer-loop vectorization.\00", align 1
@stmt_vec_info_vec = external dso_local global %struct.VEC_vec_void_p_heap*, align 8
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.38 = private unnamed_addr constant [35 x i8] c"get vectype with %d units of type \00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"vectype: \00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"mode not supported by target.\00", align 1
@.str.41 = private unnamed_addr constant [29 x i8] c"vect_is_simple_use: operand \00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"non-associatable copy.\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"not ssa-name.\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"no def_stmt.\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"def_stmt: \00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"Unsupported pattern.\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"type of def: %d.\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"unsupported defining stmt: \00", align 1
@.str.49 = private unnamed_addr constant [39 x i8] c"Unordered widening operation detected.\00", align 1
@insn_data = external dso_local local_unnamed_addr constant [0 x %struct.insn_data], align 8
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.50 = private unnamed_addr constant [37 x i8] c"vec_stmt_relevant_p: stmt has vdefs.\00", align 1
@.str.51 = private unnamed_addr constant [39 x i8] c"vec_stmt_relevant_p: used out of loop.\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.53 = private unnamed_addr constant [27 x i8] c"mark relevant %d, live %d.\00", align 1
@.str.54 = private unnamed_addr constant [48 x i8] c"last stmt in pattern. don't mark relevant/live.\00", align 1
@.str.55 = private unnamed_addr constant [30 x i8] c"already marked relevant/live.\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"./tree-vectorizer.h\00", align 1
@.str.57 = private unnamed_addr constant [41 x i8] c"not vectorized: unsupported use in stmt.\00", align 1
@.str.58 = private unnamed_addr constant [25 x i8] c"def_stmt is out of loop.\00", align 1
@.str.59 = private unnamed_addr constant [48 x i8] c"reduc-stmt defining reduc-phi in the same nest.\00", align 1
@.str.60 = private unnamed_addr constant [46 x i8] c"outer-loop def-stmt defining inner-loop stmt.\00", align 1
@.str.61 = private unnamed_addr constant [46 x i8] c"inner-loop def-stmt defining outer-loop stmt.\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.62 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.63 = private unnamed_addr constant [16 x i8] c"use not simple.\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.64 = private unnamed_addr constant [31 x i8] c"=== vectorizable_promotion ===\00", align 1
@.str.65 = private unnamed_addr constant [50 x i8] c"transform type promotion operation. ncopies = %d.\00", align 1
@.str.66 = private unnamed_addr constant [30 x i8] c"=== vectorizable_demotion ===\00", align 1
@.str.67 = private unnamed_addr constant [49 x i8] c"transform type demotion operation. ncopies = %d.\00", align 1
@.str.68 = private unnamed_addr constant [36 x i8] c"conversion not supported by target.\00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"transform conversion.\00", align 1
@.str.70 = private unnamed_addr constant [38 x i8] c"num. args = %d (not unary/binary op).\00", align 1
@.str.71 = private unnamed_addr constant [34 x i8] c"vector/vector shift/rotate found.\00", align 1
@.str.72 = private unnamed_addr constant [34 x i8] c"vector/scalar shift/rotate found.\00", align 1
@.str.73 = private unnamed_addr constant [42 x i8] c"operand mode requires invariant argument.\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"no optab.\00", align 1
@.str.75 = private unnamed_addr constant [28 x i8] c"op not supported by target.\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"proceeding using word mode.\00", align 1
@.str.77 = private unnamed_addr constant [37 x i8] c"not worthwhile without SIMD support.\00", align 1
@.str.78 = private unnamed_addr constant [31 x i8] c"=== vectorizable_operation ===\00", align 1
@.str.79 = private unnamed_addr constant [34 x i8] c"transform binary/unary operation.\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"operand 1 using scalar mode.\00", align 1
@.str.81 = private unnamed_addr constant [32 x i8] c"=== vectorizable_assignment ===\00", align 1
@.str.82 = private unnamed_addr constant [22 x i8] c"transform assignment.\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"multiple types in nested loop.\00", align 1
@optab_table = external dso_local local_unnamed_addr global [159 x %struct.optab_d], align 16
@.str.84 = private unnamed_addr constant [36 x i8] c"Aligned load, but unsupported type.\00", align 1
@.str.85 = private unnamed_addr constant [33 x i8] c"???  operands of different types\00", align 1
@.str.86 = private unnamed_addr constant [16 x i8] c"transform load.\00", align 1
@.str.87 = private unnamed_addr constant [23 x i8] c"argument types differ.\00", align 1
@.str.88 = private unnamed_addr constant [30 x i8] c"function is not vectorizable.\00", align 1
@.str.89 = private unnamed_addr constant [26 x i8] c"=== vectorizable_call ===\00", align 1
@.str.90 = private unnamed_addr constant [21 x i8] c"transform operation.\00", align 1
@.str.91 = private unnamed_addr constant [30 x i8] c"transform store. ncopies = %d\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !3929 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !3942, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !3943, metadata !DIExpression()), !dbg !3944
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3945
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !3946
  ret i32 %call, !dbg !3947
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !3948 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3952
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !3953
  ret i32 %call, !dbg !3954
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3955 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !4009, metadata !DIExpression()), !dbg !4010
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !4011
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !4011
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !4011
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !4011
  %cmp = icmp uge i8* %0, %1, !dbg !4011
  %conv1 = zext i1 %cmp to i64, !dbg !4011
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4011
  %tobool = icmp eq i64 %expval, 0, !dbg !4011
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4011

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !4011
  br label %cond.end, !dbg !4011

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4011
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !4011
  %2 = load i8, i8* %0, align 1, !dbg !4011
  %conv3 = zext i8 %2 to i32, !dbg !4011
  br label %cond.end, !dbg !4011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !4011
  ret i32 %cond, !dbg !4012
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !4013 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !4015, metadata !DIExpression()), !dbg !4016
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !4017
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !4017
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !4017
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !4017
  %cmp = icmp uge i8* %0, %1, !dbg !4017
  %conv1 = zext i1 %cmp to i64, !dbg !4017
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4017
  %tobool = icmp eq i64 %expval, 0, !dbg !4017
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4017

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !4017
  br label %cond.end, !dbg !4017

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4017
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !4017
  %2 = load i8, i8* %0, align 1, !dbg !4017
  %conv3 = zext i8 %2 to i32, !dbg !4017
  br label %cond.end, !dbg !4017

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !4017
  ret i32 %cond, !dbg !4018
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !4019 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !4020
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !4020
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !4020
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !4020
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !4020
  %cmp = icmp uge i8* %1, %2, !dbg !4020
  %conv1 = zext i1 %cmp to i64, !dbg !4020
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4020
  %tobool = icmp eq i64 %expval, 0, !dbg !4020
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4020

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !4020
  br label %cond.end, !dbg !4020

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !4020
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !4020
  %3 = load i8, i8* %1, align 1, !dbg !4020
  %conv3 = zext i8 %3 to i32, !dbg !4020
  br label %cond.end, !dbg !4020

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !4020
  ret i32 %cond, !dbg !4021
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !4022 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4026, metadata !DIExpression()), !dbg !4027
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4028
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !4029
  ret i32 %call, !dbg !4030
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4031 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4035, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4036, metadata !DIExpression()), !dbg !4037
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !4038
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !4038
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !4038
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !4038
  %cmp = icmp uge i8* %0, %1, !dbg !4038
  %conv1 = zext i1 %cmp to i64, !dbg !4038
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4038
  %tobool = icmp eq i64 %expval, 0, !dbg !4038
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4038

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !4038
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !4038
  br label %cond.end, !dbg !4038

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !4038
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4038
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !4038
  store i8 %conv2, i8* %0, align 1, !dbg !4038
  %conv6 = and i32 %__c, 255, !dbg !4038
  br label %cond.end, !dbg !4038

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !4038
  ret i32 %cond, !dbg !4039
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4040 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4042, metadata !DIExpression()), !dbg !4044
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4043, metadata !DIExpression()), !dbg !4044
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !4045
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !4045
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !4045
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !4045
  %cmp = icmp uge i8* %0, %1, !dbg !4045
  %conv1 = zext i1 %cmp to i64, !dbg !4045
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4045
  %tobool = icmp eq i64 %expval, 0, !dbg !4045
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4045

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !4045
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !4045
  br label %cond.end, !dbg !4045

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !4045
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4045
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !4045
  store i8 %conv2, i8* %0, align 1, !dbg !4045
  %conv6 = and i32 %__c, 255, !dbg !4045
  br label %cond.end, !dbg !4045

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !4045
  ret i32 %cond, !dbg !4046
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !4047 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4049, metadata !DIExpression()), !dbg !4050
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4051
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !4051
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !4051
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !4051
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !4051
  %cmp = icmp uge i8* %1, %2, !dbg !4051
  %conv1 = zext i1 %cmp to i64, !dbg !4051
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4051
  %tobool = icmp eq i64 %expval, 0, !dbg !4051
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4051

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !4051
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !4051
  br label %cond.end, !dbg !4051

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !4051
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !4051
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !4051
  store i8 %conv4, i8* %1, align 1, !dbg !4051
  %conv6 = and i32 %__c, 255, !dbg !4051
  br label %cond.end, !dbg !4051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !4051
  ret i32 %cond, !dbg !4052
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4053 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !4059, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata i64* %__n, metadata !4060, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4061, metadata !DIExpression()), !dbg !4062
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !4063
  ret i64 %call, !dbg !4064
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4065 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4067, metadata !DIExpression()), !dbg !4068
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !4069
  %0 = load i32, i32* %_flags, align 8, !dbg !4069
  %and = lshr i32 %0, 4, !dbg !4069
  %and.lobit = and i32 %and, 1, !dbg !4069
  ret i32 %and.lobit, !dbg !4070
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4071 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4073, metadata !DIExpression()), !dbg !4074
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !4075
  %0 = load i32, i32* %_flags, align 8, !dbg !4075
  %and = lshr i32 %0, 5, !dbg !4075
  %and.lobit = and i32 %and, 1, !dbg !4075
  ret i32 %and.lobit, !dbg !4076
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !4077 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4080, metadata !DIExpression()), !dbg !4081
  %__c.off = add i32 %__c, 128, !dbg !4082
  %0 = icmp ult i32 %__c.off, 384, !dbg !4082
  br i1 %0, label %cond.true, label %cond.end, !dbg !4082

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !4083
  %1 = load i32*, i32** %call, align 8, !dbg !4084
  %idxprom = sext i32 %__c to i64, !dbg !4085
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !4085
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4085
  br label %cond.end, !dbg !4086

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !4086
  ret i32 %cond, !dbg !4087
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !4088 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4090, metadata !DIExpression()), !dbg !4091
  %__c.off = add i32 %__c, 128, !dbg !4092
  %0 = icmp ult i32 %__c.off, 384, !dbg !4092
  br i1 %0, label %cond.true, label %cond.end, !dbg !4092

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !4093
  %1 = load i32*, i32** %call, align 8, !dbg !4094
  %idxprom = sext i32 %__c to i64, !dbg !4095
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !4095
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4095
  br label %cond.end, !dbg !4096

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !4096
  ret i32 %cond, !dbg !4097
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !4098 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4103, metadata !DIExpression()), !dbg !4104
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !4105
  %conv = trunc i64 %call to i32, !dbg !4106
  ret i32 %conv, !dbg !4107
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !4108 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4112, metadata !DIExpression()), !dbg !4113
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !4114
  ret i64 %call, !dbg !4115
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !4116 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4121, metadata !DIExpression()), !dbg !4122
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !4123
  ret i64 %call, !dbg !4124
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !4125 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !4131, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i8* %__base, metadata !4132, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !4133, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i64 %__size, metadata !4134, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !4135, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i64 0, metadata !4136, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !4137, metadata !DIExpression()), !dbg !4141
  br label %while.cond, !dbg !4142

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !4143
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !4141
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !4137, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !4136, metadata !DIExpression()), !dbg !4141
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !4144
  br i1 %cmp, label %while.body, label %cleanup, !dbg !4142

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !4145
  %div = lshr i64 %add, 1, !dbg !4147
  call void @llvm.dbg.value(metadata i64 %div, metadata !4138, metadata !DIExpression()), !dbg !4141
  %mul = mul i64 %div, %__size, !dbg !4148
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !4149
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !4139, metadata !DIExpression()), !dbg !4141
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %call, metadata !4140, metadata !DIExpression()), !dbg !4141
  %cmp1 = icmp slt i32 %call, 0, !dbg !4151
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !4153

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !4154
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !4156

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !4157
  call void @llvm.dbg.value(metadata i64 %add4, metadata !4136, metadata !DIExpression()), !dbg !4141
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !4141
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !4141
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !4137, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !4136, metadata !DIExpression()), !dbg !4141
  br label %while.cond, !dbg !4142, !llvm.loop !4158

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !4141
  ret i8* %retval.0, !dbg !4160
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !4161 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4167, metadata !DIExpression()), !dbg !4168
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !4169
  ret double %call, !dbg !4170
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4171 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !4180, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !4181, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i32 %base, metadata !4182, metadata !DIExpression()), !dbg !4183
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !4184
  ret i64 %call, !dbg !4185
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4186 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !4192, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !4193, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.value(metadata i32 %base, metadata !4194, metadata !DIExpression()), !dbg !4195
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !4196
  ret i64 %call, !dbg !4197
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4198 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !4209, metadata !DIExpression()), !dbg !4212
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !4210, metadata !DIExpression()), !dbg !4212
  call void @llvm.dbg.value(metadata i32 %base, metadata !4211, metadata !DIExpression()), !dbg !4212
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !4213
  ret i64 %call, !dbg !4214
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4215 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !4219, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !4220, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %base, metadata !4221, metadata !DIExpression()), !dbg !4222
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !4223
  ret i64 %call, !dbg !4224
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4225 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4265, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4266, metadata !DIExpression()), !dbg !4267
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !4268
  ret i32 %call, !dbg !4269
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4270 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4272, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4273, metadata !DIExpression()), !dbg !4274
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !4275
  ret i32 %call, !dbg !4276
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4277 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4281, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4282, metadata !DIExpression()), !dbg !4283
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !4284
  ret i32 %call, !dbg !4285
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !4286 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4290, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !4291, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4292, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !4293, metadata !DIExpression()), !dbg !4294
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !4295
  ret i32 %call, !dbg !4296
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !4297 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4301, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !4302, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !4303, metadata !DIExpression()), !dbg !4304
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !4303, metadata !DIExpression(DW_OP_deref)), !dbg !4304
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !4305
  ret i32 %call, !dbg !4306
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !4307 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4311, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4312, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !4313, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !4314, metadata !DIExpression()), !dbg !4315
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !4314, metadata !DIExpression(DW_OP_deref)), !dbg !4315
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !4316
  ret i32 %call, !dbg !4317
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4318 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4342, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4343, metadata !DIExpression()), !dbg !4344
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !4345
  ret i32 %call, !dbg !4346
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4347 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4349, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4350, metadata !DIExpression()), !dbg !4351
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !4352
  ret i32 %call, !dbg !4353
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4354 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4358, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4359, metadata !DIExpression()), !dbg !4360
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !4361
  ret i32 %call, !dbg !4362
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !4363 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4367, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !4368, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4369, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !4370, metadata !DIExpression()), !dbg !4371
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !4372
  ret i32 %call, !dbg !4373
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vect_mark_stmts_to_be_vectorized(%struct._loop_vec_info* %loop_vinfo) local_unnamed_addr #5 !dbg !4374 {
entry:
  %worklist = alloca %struct.VEC_gimple_heap*, align 8
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %live_p = alloca i8, align 1
  %relevant = alloca i32, align 4
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp19 = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !4378, metadata !DIExpression()), !dbg !4412
  %0 = bitcast %struct.VEC_gimple_heap** %worklist to i8*, !dbg !4413
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4413
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !4414
  %1 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !4414
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !4380, metadata !DIExpression()), !dbg !4412
  %bbs2 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 1, !dbg !4415
  %2 = load %struct.basic_block_def**, %struct.basic_block_def*** %bbs2, align 8, !dbg !4415
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %2, metadata !4381, metadata !DIExpression()), !dbg !4412
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 6, !dbg !4416
  %3 = load i32, i32* %num_nodes, align 4, !dbg !4416
  call void @llvm.dbg.value(metadata i32 %3, metadata !4382, metadata !DIExpression()), !dbg !4412
  %4 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !4417
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4417
  call void @llvm.dbg.value(metadata i8* %live_p, metadata !4389, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %live_p) #7, !dbg !4418
  %5 = bitcast i32* %relevant to i8*, !dbg !4419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7, !dbg !4419
  %call = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4420
  %tobool = icmp eq i8 %call, 0, !dbg !4420
  br i1 %tobool, label %if.end, label %if.then, !dbg !4422

if.then:                                          ; preds = %entry
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4423
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0)) #6, !dbg !4424
  br label %if.end, !dbg !4424

if.end:                                           ; preds = %entry, %if.then
  %call4 = tail call fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 64) #8, !dbg !4425
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call4, metadata !4379, metadata !DIExpression()), !dbg !4412
  store %struct.VEC_gimple_heap* %call4, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !4426
  call void @llvm.dbg.value(metadata i32 0, metadata !4385, metadata !DIExpression()), !dbg !4412
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4427
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp19 to i8*, !dbg !4432
  %wide.trip.count = zext i32 %3 to i64, !dbg !4434
  br label %for.cond, !dbg !4435

for.cond:                                         ; preds = %for.inc37, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc37 ], [ 0, %if.end ], !dbg !4436
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4385, metadata !DIExpression()), !dbg !4412
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4434
  br i1 %exitcond, label %while.cond.preheader, label %for.body, !dbg !4437

while.cond.preheader:                             ; preds = %for.cond
  %9 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4438
  br label %while.cond, !dbg !4439

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %2, i64 %indvars.iv, !dbg !4440
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4440
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %10, metadata !4387, metadata !DIExpression()), !dbg !4412
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7, !dbg !4441
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %10) #6, !dbg !4441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !4441
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7, !dbg !4441
  br label %for.cond5, !dbg !4442

for.cond5:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4383, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call6 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !4443
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4445
  br i1 %tobool7, label %for.body8, label %for.end, !dbg !4446

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4383, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call9 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !4447
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !4388, metadata !DIExpression()), !dbg !4412
  %call10 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4449
  %tobool11 = icmp eq i8 %call10, 0, !dbg !4449
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !4451

if.then12:                                        ; preds = %for.body8
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4452
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4454
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4455
  call void @print_gimple_stmt(%struct._IO_FILE* %12, %union.gimple_statement_d* %call9, i32 0, i32 2) #6, !dbg !4456
  br label %if.end14, !dbg !4457

if.end14:                                         ; preds = %for.body8, %if.then12
  call void @llvm.dbg.value(metadata i8* %live_p, metadata !4389, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call void @llvm.dbg.value(metadata i32* %relevant, metadata !4390, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call15 = call fastcc zeroext i8 @vect_stmt_relevant_p(%union.gimple_statement_d* %call9, %struct._loop_vec_info* %loop_vinfo, i32* nonnull %relevant, i8* nonnull %live_p) #8, !dbg !4458
  %tobool16 = icmp eq i8 %call15, 0, !dbg !4458
  br i1 %tobool16, label %for.inc, label %if.then17, !dbg !4460

if.then17:                                        ; preds = %if.end14
  %13 = load i32, i32* %relevant, align 4, !dbg !4461
  call void @llvm.dbg.value(metadata i32 %13, metadata !4390, metadata !DIExpression()), !dbg !4412
  %14 = load i8, i8* %live_p, align 1, !dbg !4462
  call void @llvm.dbg.value(metadata i8 %14, metadata !4389, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @vect_mark_relevant(%struct.VEC_gimple_heap** nonnull %worklist, %union.gimple_statement_d* %call9, i32 %13, i8 zeroext %14) #8, !dbg !4463
  br label %for.inc, !dbg !4463

for.inc:                                          ; preds = %if.end14, %if.then17
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4383, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #8, !dbg !4464
  br label %for.cond5, !dbg !4465, !llvm.loop !4466

for.end:                                          ; preds = %for.cond5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7, !dbg !4468
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp19, %struct.basic_block_def* %10) #8, !dbg !4468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !4468
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7, !dbg !4468
  br label %for.cond20, !dbg !4469

for.cond20:                                       ; preds = %for.inc35, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4383, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call21 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !4470
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4472
  br i1 %tobool22, label %for.body24, label %for.inc37, !dbg !4473

for.body24:                                       ; preds = %for.cond20
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4383, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call25 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #8, !dbg !4474
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !4384, metadata !DIExpression()), !dbg !4412
  %call26 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4476
  %tobool27 = icmp eq i8 %call26, 0, !dbg !4476
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4478

if.then28:                                        ; preds = %for.body24
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4479
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4481
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4482
  call void @print_gimple_stmt(%struct._IO_FILE* %16, %union.gimple_statement_d* %call25, i32 0, i32 2) #6, !dbg !4483
  br label %if.end30, !dbg !4484

if.end30:                                         ; preds = %for.body24, %if.then28
  call void @llvm.dbg.value(metadata i8* %live_p, metadata !4389, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call void @llvm.dbg.value(metadata i32* %relevant, metadata !4390, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call31 = call fastcc zeroext i8 @vect_stmt_relevant_p(%union.gimple_statement_d* %call25, %struct._loop_vec_info* %loop_vinfo, i32* nonnull %relevant, i8* nonnull %live_p) #8, !dbg !4485
  %tobool32 = icmp eq i8 %call31, 0, !dbg !4485
  br i1 %tobool32, label %for.inc35, label %if.then33, !dbg !4487

if.then33:                                        ; preds = %if.end30
  %17 = load i32, i32* %relevant, align 4, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %17, metadata !4390, metadata !DIExpression()), !dbg !4412
  %18 = load i8, i8* %live_p, align 1, !dbg !4489
  call void @llvm.dbg.value(metadata i8 %18, metadata !4389, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @vect_mark_relevant(%struct.VEC_gimple_heap** nonnull %worklist, %union.gimple_statement_d* %call25, i32 %17, i8 zeroext %18) #8, !dbg !4490
  br label %for.inc35, !dbg !4490

for.inc35:                                        ; preds = %if.end30, %if.then33
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !4383, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #8, !dbg !4491
  br label %for.cond20, !dbg !4492, !llvm.loop !4493

for.inc37:                                        ; preds = %for.cond20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4495
  br label %for.cond, !dbg !4496, !llvm.loop !4497

while.cond:                                       ; preds = %while.cond.preheader, %cleanup114
  %19 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !4499
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %19, metadata !4379, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %19, metadata !4379, metadata !DIExpression()), !dbg !4412
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %19, i64 0, i32 0, !dbg !4499
  %call40 = call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %base) #8, !dbg !4499
  %cmp41 = icmp eq i32 %call40, 0, !dbg !4500
  br i1 %cmp41, label %while.end, label %while.body, !dbg !4439

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #7, !dbg !4501
  %20 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %worklist, align 8, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %20, metadata !4379, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %20, metadata !4379, metadata !DIExpression()), !dbg !4412
  %base44 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %20, i64 0, i32 0, !dbg !4502
  %call48 = call fastcc %union.gimple_statement_d* @VEC_gimple_base_pop(%struct.VEC_gimple_base* %base44) #8, !dbg !4502
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call48, metadata !4384, metadata !DIExpression()), !dbg !4412
  %call49 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4503
  %tobool50 = icmp eq i8 %call49, 0, !dbg !4503
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !4505

if.then51:                                        ; preds = %while.body
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4506
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4508
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4509
  call void @print_gimple_stmt(%struct._IO_FILE* %22, %union.gimple_statement_d* %call48, i32 0, i32 2) #6, !dbg !4510
  br label %if.end53, !dbg !4511

if.end53:                                         ; preds = %while.body, %if.then51
  %call54 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call48) #8, !dbg !4512
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call54, metadata !4386, metadata !DIExpression()), !dbg !4412
  %relevant55 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call54, i64 0, i32 3, !dbg !4513
  %23 = load i32, i32* %relevant55, align 8, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %23, metadata !4390, metadata !DIExpression()), !dbg !4412
  store i32 %23, i32* %relevant, align 4, !dbg !4514
  %live = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call54, i64 0, i32 4, !dbg !4515
  %24 = load i8, i8* %live, align 4, !dbg !4515
  call void @llvm.dbg.value(metadata i8 %24, metadata !4389, metadata !DIExpression()), !dbg !4412
  store i8 %24, i8* %live_p, align 1, !dbg !4516
  %def_type56 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call54, i64 0, i32 16, !dbg !4517
  %25 = load i32, i32* %def_type56, align 8, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %25, metadata !4392, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32 %23, metadata !4390, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32 %23, metadata !4391, metadata !DIExpression()), !dbg !4412
  switch i32 %25, label %sw.epilog92 [
    i32 5, label %sw.bb
    i32 7, label %sw.bb68
    i32 6, label %sw.bb80
  ], !dbg !4518

sw.bb:                                            ; preds = %if.end53
  switch i32 %23, label %sw.default [
    i32 0, label %sw.bb57
    i32 3, label %sw.bb58
  ], !dbg !4519

sw.bb57:                                          ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i32 3, metadata !4390, metadata !DIExpression()), !dbg !4412
  store i32 3, i32* %relevant, align 4, !dbg !4521
  br label %sw.epilog, !dbg !4523

sw.bb58:                                          ; preds = %sw.bb
  %call59 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call48) #8, !dbg !4524
  %cmp60 = icmp eq i32 %call59, 16, !dbg !4526
  br i1 %cmp60, label %sw.epilog, label %sw.default, !dbg !4527

sw.default:                                       ; preds = %sw.bb58, %sw.bb
  %call63 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4528
  %tobool64 = icmp eq i8 %call63, 0, !dbg !4528
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !4530

if.then65:                                        ; preds = %sw.default
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4531
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4532
  br label %if.end67, !dbg !4532

if.end67:                                         ; preds = %sw.default, %if.then65
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %worklist) #8, !dbg !4533
  br label %cleanup114, !dbg !4534

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb57
  call void @llvm.dbg.value(metadata i8 0, metadata !4389, metadata !DIExpression()), !dbg !4412
  store i8 0, i8* %live_p, align 1, !dbg !4535
  br label %sw.epilog92, !dbg !4536

sw.bb68:                                          ; preds = %if.end53
  %switch = icmp ult i32 %23, 3, !dbg !4537
  br i1 %switch, label %if.end79, label %if.then73, !dbg !4537

if.then73:                                        ; preds = %sw.bb68
  %call74 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4539
  %tobool75 = icmp eq i8 %call74, 0, !dbg !4539
  br i1 %tobool75, label %if.end78, label %if.then76, !dbg !4542

if.then76:                                        ; preds = %if.then73
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4543
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4544
  br label %if.end78, !dbg !4544

if.end78:                                         ; preds = %if.then73, %if.then76
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %worklist) #8, !dbg !4545
  br label %cleanup114, !dbg !4546

if.end79:                                         ; preds = %sw.bb68
  call void @llvm.dbg.value(metadata i8 0, metadata !4389, metadata !DIExpression()), !dbg !4412
  store i8 0, i8* %live_p, align 1, !dbg !4547
  br label %sw.epilog92, !dbg !4548

sw.bb80:                                          ; preds = %if.end53
  switch i32 %23, label %if.then84 [
    i32 0, label %if.end90
    i32 3, label %if.end90
  ], !dbg !4549

if.then84:                                        ; preds = %sw.bb80
  %call85 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4551
  %tobool86 = icmp eq i8 %call85, 0, !dbg !4551
  br i1 %tobool86, label %if.end89, label %if.then87, !dbg !4554

if.then87:                                        ; preds = %if.then84
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4555
  %call88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !4556
  br label %if.end89, !dbg !4556

if.end89:                                         ; preds = %if.then84, %if.then87
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %worklist) #8, !dbg !4557
  br label %cleanup114, !dbg !4558

if.end90:                                         ; preds = %sw.bb80, %sw.bb80
  call void @llvm.dbg.value(metadata i8 0, metadata !4389, metadata !DIExpression()), !dbg !4412
  store i8 0, i8* %live_p, align 1, !dbg !4559
  br label %sw.epilog92, !dbg !4560

sw.epilog92:                                      ; preds = %if.end53, %if.end90, %if.end79, %sw.epilog
  %call93 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call48) #8, !dbg !4561
  %cmp94 = icmp eq i32 %call93, 16, !dbg !4561
  br i1 %cmp94, label %cond.true95, label %cond.false97, !dbg !4561

cond.true95:                                      ; preds = %sw.epilog92
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4395, metadata !DIExpression(DW_OP_deref)), !dbg !4438
  %call96 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call48, i32 1) #8, !dbg !4561
  br label %cond.end99, !dbg !4561

cond.false97:                                     ; preds = %sw.epilog92
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4395, metadata !DIExpression(DW_OP_deref)), !dbg !4438
  %call98 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call48, i32 1) #8, !dbg !4561
  br label %cond.end99, !dbg !4561

cond.end99:                                       ; preds = %cond.false97, %cond.true95
  %cond100 = phi %struct.ssa_use_operand_d* [ %call96, %cond.true95 ], [ %call98, %cond.false97 ], !dbg !4561
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %cond100, metadata !4393, metadata !DIExpression()), !dbg !4438
  br label %for.cond101, !dbg !4561

for.cond101:                                      ; preds = %for.inc111, %cond.end99
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %cond100, %cond.end99 ], [ %call112, %for.inc111 ], !dbg !4562
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4393, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4395, metadata !DIExpression(DW_OP_deref)), !dbg !4438
  %call102 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !4563
  %tobool103 = icmp eq i8 %call102, 0, !dbg !4563
  br i1 %tobool103, label %for.body105, label %cleanup114.loopexit, !dbg !4561

for.body105:                                      ; preds = %for.cond101
  %call106 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #8, !dbg !4564
  call void @llvm.dbg.value(metadata %union.tree_node* %call106, metadata !4408, metadata !DIExpression()), !dbg !4565
  %29 = load i8, i8* %live_p, align 1, !dbg !4566
  call void @llvm.dbg.value(metadata i8 %29, metadata !4389, metadata !DIExpression()), !dbg !4412
  %30 = load i32, i32* %relevant, align 4, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %30, metadata !4390, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  %call107 = call fastcc zeroext i8 @process_use(%union.gimple_statement_d* %call48, %union.tree_node* %call106, %struct._loop_vec_info* %loop_vinfo, i8 zeroext %29, i32 %30, %struct.VEC_gimple_heap** nonnull %worklist) #8, !dbg !4569
  %tobool108 = icmp eq i8 %call107, 0, !dbg !4569
  br i1 %tobool108, label %if.then109, label %cleanup, !dbg !4570

if.then109:                                       ; preds = %for.body105
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %worklist) #8, !dbg !4571
  br label %cleanup, !dbg !4573

cleanup:                                          ; preds = %for.body105, %if.then109
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then109 ], [ 0, %for.body105 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %for.inc111, label %cleanup114.loopexit

for.inc111:                                       ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4395, metadata !DIExpression(DW_OP_deref)), !dbg !4438
  %call112 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !4563
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call112, metadata !4393, metadata !DIExpression()), !dbg !4438
  br label %for.cond101, !dbg !4563, !llvm.loop !4574

cleanup114.loopexit:                              ; preds = %cleanup, %for.cond101
  %cleanup.dest.slot.1.ph = phi i32 [ 0, %for.cond101 ], [ %cleanup.dest.slot.0, %cleanup ]
  br label %cleanup114, !dbg !4576

cleanup114:                                       ; preds = %cleanup114.loopexit, %if.end89, %if.end78, %if.end67
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.end89 ], [ 1, %if.end78 ], [ 1, %if.end67 ], [ %cleanup.dest.slot.1.ph, %cleanup114.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #7, !dbg !4576
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %while.cond, label %cleanup118.loopexit, !llvm.loop !4577

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4379, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %worklist) #8, !dbg !4578
  br label %cleanup118, !dbg !4579

cleanup118.loopexit:                              ; preds = %cleanup114
  br label %cleanup118, !dbg !4580

cleanup118:                                       ; preds = %cleanup118.loopexit, %while.end
  %retval.4 = phi i8 [ 1, %while.end ], [ 0, %cleanup118.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7, !dbg !4580
  call void @llvm.dbg.value(metadata i8* %live_p, metadata !4389, metadata !DIExpression(DW_OP_deref)), !dbg !4412
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %live_p) #7, !dbg !4580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4580
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4580
  ret i8 %retval.4, !dbg !4580
}

declare dso_local zeroext i8 @vect_print_dump_info(i32) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4581 {
entry:
  call void @llvm.dbg.value(metadata i32 64, metadata !4585, metadata !DIExpression()), !dbg !4586
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 64) #6, !dbg !4587
  %0 = bitcast i8* %call to %struct.VEC_gimple_heap*, !dbg !4587
  ret %struct.VEC_gimple_heap* %0, !dbg !4587
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4588 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4592, metadata !DIExpression()), !dbg !4593
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4594
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4594
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4595
  %conv1 = zext i1 %cmp to i8, !dbg !4596
  ret i8 %conv1, !dbg !4597
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4598 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4602, metadata !DIExpression()), !dbg !4603
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4604
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4604
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4605
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4605
  ret %union.gimple_statement_d* %1, !dbg !4606
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vect_stmt_relevant_p(%union.gimple_statement_d* %stmt, %struct._loop_vec_info* %loop_vinfo, i32* %relevant, i8* %live_p) unnamed_addr #5 !dbg !4607 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4612, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !4613, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32* %relevant, metadata !4614, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %live_p, metadata !4615, metadata !DIExpression()), !dbg !4635
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !4636
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !4636
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4616, metadata !DIExpression()), !dbg !4635
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !4637
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !4637
  %2 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !4638
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #7, !dbg !4638
  store i32 0, i32* %relevant, align 4, !dbg !4639
  store i8 0, i8* %live_p, align 1, !dbg !4640
  %call = tail call zeroext i8 @is_ctrl_stmt(%union.gimple_statement_d* %stmt) #6, !dbg !4641
  %tobool = icmp eq i8 %call, 0, !dbg !4641
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4643

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !4644
  %type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call2, i64 0, i32 0, !dbg !4644
  %3 = load i32, i32* %type, align 8, !dbg !4644
  %cmp = icmp eq i32 %3, 12, !dbg !4645
  br i1 %cmp, label %if.end, label %if.then, !dbg !4646

if.then:                                          ; preds = %land.lhs.true
  store i32 4, i32* %relevant, align 4, !dbg !4647
  br label %if.end, !dbg !4648

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call4 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !4649
  %cmp5 = icmp eq i32 %call4, 16, !dbg !4651
  br i1 %cmp5, label %if.end17, label %if.then7, !dbg !4652

if.then7:                                         ; preds = %if.end
  %call8 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !4653
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !4653
  br i1 %tobool9, label %if.end17, label %if.then10, !dbg !4655

if.then10:                                        ; preds = %if.then7
  %call11 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4656
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4656
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !4659

if.then13:                                        ; preds = %if.then10
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4660
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.50, i64 0, i64 0)) #6, !dbg !4661
  br label %if.end15, !dbg !4661

if.end15:                                         ; preds = %if.then10, %if.then13
  store i32 4, i32* %relevant, align 4, !dbg !4662
  br label %if.end17, !dbg !4663

if.end17:                                         ; preds = %if.then7, %if.end, %if.end15
  %call18 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !4664
  %cmp19 = icmp eq i32 %call18, 16, !dbg !4664
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !4664

cond.true:                                        ; preds = %if.end17
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !4617, metadata !DIExpression(DW_OP_deref)), !dbg !4635
  %call21 = call fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !4664
  br label %cond.end, !dbg !4664

cond.false:                                       ; preds = %if.end17
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !4617, metadata !DIExpression(DW_OP_deref)), !dbg !4635
  %call22 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !4664
  br label %cond.end, !dbg !4664

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node** [ %call21, %cond.true ], [ %call22, %cond.false ], !dbg !4664
  call void @llvm.dbg.value(metadata %union.tree_node** %cond, metadata !4627, metadata !DIExpression()), !dbg !4635
  br label %for.cond, !dbg !4664

for.cond:                                         ; preds = %for.inc66, %cond.end
  %def_p.0 = phi %union.tree_node** [ %cond, %cond.end ], [ %call67, %for.inc66 ], !dbg !4665
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !4627, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !4617, metadata !DIExpression(DW_OP_deref)), !dbg !4635
  %call23 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !4666
  %tobool24 = icmp eq i8 %call23, 0, !dbg !4666
  br i1 %tobool24, label %for.body, label %for.end68, !dbg !4664

for.body:                                         ; preds = %for.cond
  %call25 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #8, !dbg !4667
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4618, metadata !DIExpression(DW_OP_deref)), !dbg !4635
  %call26 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call25) #8, !dbg !4667
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !4626, metadata !DIExpression()), !dbg !4635
  br label %for.cond27, !dbg !4667

for.cond27:                                       ; preds = %cleanup, %for.body
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call26, %for.body ], [ %call65, %cleanup ], !dbg !4668
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4626, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4618, metadata !DIExpression(DW_OP_deref)), !dbg !4635
  %call28 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !4669
  %tobool29 = icmp eq i8 %call28, 0, !dbg !4669
  br i1 %tobool29, label %for.body31, label %for.inc66, !dbg !4667

for.body31:                                       ; preds = %for.cond27
  %stmt32 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !4670
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt32, align 8, !dbg !4670
  %call33 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %5) #8, !dbg !4671
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call33, metadata !4628, metadata !DIExpression()), !dbg !4672
  %call34 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %0, %struct.basic_block_def* %call33) #6, !dbg !4673
  %tobool35 = icmp eq i8 %call34, 0, !dbg !4673
  br i1 %tobool35, label %if.then36, label %cleanup, !dbg !4675

if.then36:                                        ; preds = %for.body31
  %call37 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4676
  %tobool38 = icmp eq i8 %call37, 0, !dbg !4676
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !4679

if.then39:                                        ; preds = %if.then36
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4680
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !4681
  br label %if.end41, !dbg !4681

if.end41:                                         ; preds = %if.then36, %if.then39
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt32, align 8, !dbg !4682
  %call44 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %7) #8, !dbg !4684
  %tobool45 = icmp eq i8 %call44, 0, !dbg !4684
  br i1 %tobool45, label %if.end47, label %cleanup, !dbg !4685

if.end47:                                         ; preds = %if.end41
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt32, align 8, !dbg !4686
  %call50 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %8) #8, !dbg !4686
  %cmp51 = icmp eq i32 %call50, 16, !dbg !4686
  br i1 %cmp51, label %cond.end55, label %cond.true53, !dbg !4686

cond.true53:                                      ; preds = %if.end47
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4686
  br label %cond.end55, !dbg !4686

cond.end55:                                       ; preds = %if.end47, %cond.true53
  %call57 = call %struct.edge_def* @single_exit(%struct.loop* %0) #6, !dbg !4687
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call57, i64 0, i32 1, !dbg !4687
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4687
  %cmp58 = icmp eq %struct.basic_block_def* %call33, %9, !dbg !4687
  br i1 %cmp58, label %cond.end62, label %cond.true60, !dbg !4687

cond.true60:                                      ; preds = %cond.end55
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4687
  br label %cond.end62, !dbg !4687

cond.end62:                                       ; preds = %cond.end55, %cond.true60
  store i8 1, i8* %live_p, align 1, !dbg !4688
  br label %cleanup, !dbg !4689

cleanup:                                          ; preds = %if.end41, %for.body31, %cond.end62
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !4618, metadata !DIExpression(DW_OP_deref)), !dbg !4635
  %call65 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !4669
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call65, metadata !4626, metadata !DIExpression()), !dbg !4635
  br label %for.cond27, !dbg !4669, !llvm.loop !4690

for.inc66:                                        ; preds = %for.cond27
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !4617, metadata !DIExpression(DW_OP_deref)), !dbg !4635
  %call67 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %op_iter) #8, !dbg !4666
  call void @llvm.dbg.value(metadata %union.tree_node** %call67, metadata !4627, metadata !DIExpression()), !dbg !4635
  br label %for.cond, !dbg !4666, !llvm.loop !4692

for.end68:                                        ; preds = %for.cond
  %10 = load i8, i8* %live_p, align 1, !dbg !4694
  %tobool70 = icmp eq i8 %10, 0, !dbg !4694
  br i1 %tobool70, label %lor.rhs, label %lor.end, !dbg !4695

lor.rhs:                                          ; preds = %for.end68
  %11 = load i32, i32* %relevant, align 4, !dbg !4696
  %tobool71 = icmp ne i32 %11, 0, !dbg !4695
  %phitmp = zext i1 %tobool71 to i8, !dbg !4695
  br label %lor.end, !dbg !4695

lor.end:                                          ; preds = %for.end68, %lor.rhs
  %12 = phi i8 [ 1, %for.end68 ], [ %phitmp, %lor.rhs ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2) #7, !dbg !4697
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !4697
  ret i8 %12, !dbg !4698
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_mark_relevant(%struct.VEC_gimple_heap** %worklist, %union.gimple_statement_d* %stmt, i32 %relevant, i8 zeroext %live_p) unnamed_addr #5 !dbg !4699 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4704, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4705, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %relevant, metadata !4706, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8 %live_p, metadata !4707, metadata !DIExpression()), !dbg !4714
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !4715
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !4708, metadata !DIExpression()), !dbg !4714
  %relevant1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !4716
  %0 = load i32, i32* %relevant1, align 8, !dbg !4716
  call void @llvm.dbg.value(metadata i32 %0, metadata !4709, metadata !DIExpression()), !dbg !4714
  %live = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 4, !dbg !4717
  %1 = load i8, i8* %live, align 4, !dbg !4717
  call void @llvm.dbg.value(metadata i8 %1, metadata !4710, metadata !DIExpression()), !dbg !4714
  %call2 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4718
  %tobool = icmp eq i8 %call2, 0, !dbg !4718
  br i1 %tobool, label %if.end, label %if.then, !dbg !4720

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4721
  %conv = zext i8 %live_p to i32, !dbg !4722
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.53, i64 0, i64 0), i32 %relevant, i32 %conv) #6, !dbg !4723
  br label %if.end, !dbg !4723

if.end:                                           ; preds = %entry, %if.then
  %in_pattern_p = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 13, !dbg !4724
  %3 = load i8, i8* %in_pattern_p, align 8, !dbg !4724
  %tobool4 = icmp eq i8 %3, 0, !dbg !4724
  br i1 %tobool4, label %if.end.if.end16_crit_edge, label %if.then5, !dbg !4725

if.end.if.end16_crit_edge:                        ; preds = %if.end
  %.pre = load i8, i8* %live, align 4, !dbg !4726
  %.pre2 = load i32, i32* %relevant1, align 8, !dbg !4727
  br label %if.end16, !dbg !4725

if.then5:                                         ; preds = %if.end
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 14, !dbg !4729
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %related_stmt, align 8, !dbg !4729
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !4711, metadata !DIExpression()), !dbg !4730
  %call6 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4731
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4731
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4733

if.then8:                                         ; preds = %if.then5
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4734
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !4735
  br label %if.end10, !dbg !4735

if.end10:                                         ; preds = %if.then5, %if.then8
  %call11 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %4) #8, !dbg !4736
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call11, metadata !4708, metadata !DIExpression()), !dbg !4714
  %related_stmt12 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call11, i64 0, i32 14, !dbg !4737
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %related_stmt12, align 8, !dbg !4737
  %cmp = icmp eq %union.gimple_statement_d* %6, %stmt, !dbg !4737
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4737

cond.true:                                        ; preds = %if.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4737
  br label %cond.end, !dbg !4737

cond.end:                                         ; preds = %if.end10, %cond.true
  %relevant14 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call11, i64 0, i32 3, !dbg !4738
  %7 = load i32, i32* %relevant14, align 8, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %7, metadata !4709, metadata !DIExpression()), !dbg !4714
  %live15 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call11, i64 0, i32 4, !dbg !4739
  %8 = load i8, i8* %live15, align 4, !dbg !4739
  call void @llvm.dbg.value(metadata i8 %8, metadata !4710, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !4705, metadata !DIExpression()), !dbg !4714
  br label %if.end16, !dbg !4740

if.end16:                                         ; preds = %if.end.if.end16_crit_edge, %cond.end
  %9 = phi i32 [ %7, %cond.end ], [ %.pre2, %if.end.if.end16_crit_edge ], !dbg !4727
  %10 = phi i8 [ %8, %cond.end ], [ %.pre, %if.end.if.end16_crit_edge ], !dbg !4726
  %stmt_info.0 = phi %struct._stmt_vec_info* [ %call11, %cond.end ], [ %call, %if.end.if.end16_crit_edge ], !dbg !4714
  %save_relevant.0 = phi i32 [ %7, %cond.end ], [ %0, %if.end.if.end16_crit_edge ], !dbg !4714
  %save_live_p.0 = phi i8 [ %8, %cond.end ], [ %1, %if.end.if.end16_crit_edge ], !dbg !4714
  %stmt.addr.0 = phi %union.gimple_statement_d* [ %4, %cond.end ], [ %stmt, %if.end.if.end16_crit_edge ]
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.addr.0, metadata !4705, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8 %save_live_p.0, metadata !4710, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %save_relevant.0, metadata !4709, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %stmt_info.0, metadata !4708, metadata !DIExpression()), !dbg !4714
  %live18 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info.0, i64 0, i32 4, !dbg !4741
  %or1 = or i8 %10, %live_p, !dbg !4726
  store i8 %or1, i8* %live18, align 4, !dbg !4726
  %cmp22 = icmp ult i32 %9, %relevant, !dbg !4742
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !4743

if.then24:                                        ; preds = %if.end16
  %relevant21 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info.0, i64 0, i32 3, !dbg !4727
  store i32 %relevant, i32* %relevant21, align 8, !dbg !4744
  br label %if.end26, !dbg !4745

if.end26:                                         ; preds = %if.then24, %if.end16
  %11 = phi i32 [ %relevant, %if.then24 ], [ %9, %if.end16 ], !dbg !4746
  %cmp28 = icmp eq i32 %11, %save_relevant.0, !dbg !4748
  br i1 %cmp28, label %land.lhs.true, label %if.end41, !dbg !4749

land.lhs.true:                                    ; preds = %if.end26
  %cmp33 = icmp eq i8 %or1, %save_live_p.0, !dbg !4750
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !4751

if.then35:                                        ; preds = %land.lhs.true
  %call36 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4752
  %tobool37 = icmp eq i8 %call36, 0, !dbg !4752
  br i1 %tobool37, label %cleanup.cont, label %if.then38, !dbg !4755

if.then38:                                        ; preds = %if.then35
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4756
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.55, i64 0, i64 0)) #6, !dbg !4757
  br label %cleanup.cont, !dbg !4757

if.end41:                                         ; preds = %land.lhs.true, %if.end26
  %call42 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %worklist, %union.gimple_statement_d* %stmt.addr.0) #8, !dbg !4758
  br label %cleanup.cont, !dbg !4759

cleanup.cont:                                     ; preds = %if.then35, %if.end41, %if.then38
  ret void, !dbg !4759
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4760 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4764, metadata !DIExpression()), !dbg !4765
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4766
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4766
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4767
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4767
  %2 = load i64, i64* %1, align 8, !dbg !4767
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4768
  store i64 %2, i64* %3, align 8, !dbg !4768
  ret void, !dbg !4769
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4770 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4774, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4775, metadata !DIExpression()), !dbg !4778
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !4779
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4776, metadata !DIExpression()), !dbg !4777
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !4780
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4781
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4782
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4783
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4784
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4785
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4786
  ret void, !dbg !4787
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !4788 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !4794, metadata !DIExpression()), !dbg !4795
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !4796
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4796

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !4796
  %0 = load i32, i32* %num, align 8, !dbg !4796
  br label %cond.end, !dbg !4796

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4796
  ret i32 %cond, !dbg !4796
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @VEC_gimple_base_pop(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !4797 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !4802, metadata !DIExpression()), !dbg !4804
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !4805
  %0 = load i32, i32* %num1, align 8, !dbg !4805
  %dec = add i32 %0, -1, !dbg !4805
  store i32 %dec, i32* %num1, align 8, !dbg !4805
  %idxprom = zext i32 %dec to i64, !dbg !4805
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4805
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !4805
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !4803, metadata !DIExpression()), !dbg !4804
  ret %union.gimple_statement_d* %1, !dbg !4805
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4806 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4810, metadata !DIExpression()), !dbg !4812
  %call = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %stmt) #8, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %call, metadata !4811, metadata !DIExpression()), !dbg !4812
  %cmp = icmp eq i32 %call, 0, !dbg !4814
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4816

if.end:                                           ; preds = %entry
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !4817
  %base = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %0, i64 0, i32 0, !dbg !4817
  %call1 = tail call fastcc i32 @VEC_vec_void_p_base_length(%struct.VEC_vec_void_p_base* %base) #8, !dbg !4817
  %cmp2 = icmp ugt i32 %call, %call1, !dbg !4817
  br i1 %cmp2, label %cond.true3, label %cond.end5, !dbg !4817

cond.true3:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0), i32 629, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4817
  br label %cond.end5, !dbg !4817

cond.end5:                                        ; preds = %if.end, %cond.true3
  %1 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !4818
  %base9 = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %1, i64 0, i32 0, !dbg !4818
  %sub = add i32 %call, -1, !dbg !4818
  %call13 = tail call fastcc i8* @VEC_vec_void_p_base_index(%struct.VEC_vec_void_p_base* %base9, i32 %sub) #8, !dbg !4818
  %2 = bitcast i8* %call13 to %struct._stmt_vec_info*, !dbg !4819
  br label %cleanup, !dbg !4820

cleanup:                                          ; preds = %entry, %cond.end5
  %retval.0 = phi %struct._stmt_vec_info* [ %2, %cond.end5 ], [ null, %entry ], !dbg !4812
  ret %struct._stmt_vec_info* %retval.0, !dbg !4821
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4822 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4827, metadata !DIExpression()), !dbg !4828
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4829
  %bf.load = load i32, i32* %0, align 8, !dbg !4829
  %bf.clear = and i32 %bf.load, 255, !dbg !4829
  ret i32 %bf.clear, !dbg !4830
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** %vec_) unnamed_addr #0 !dbg !4831 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !4835, metadata !DIExpression()), !dbg !4836
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !4837
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !4837
  br i1 %tobool, label %if.end, label %if.then, !dbg !4839

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_gimple_heap* %0 to i8*, !dbg !4839
  tail call void @free(i8* nonnull %1) #6, !dbg !4837
  br label %if.end, !dbg !4837

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !4839
  ret void, !dbg !4839
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !4840 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4846, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !4847, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i32 1, metadata !4848, metadata !DIExpression()), !dbg !4851
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !4852
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4849, metadata !DIExpression()), !dbg !4851
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !4853
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4854
  store i8 0, i8* %done, align 8, !dbg !4855
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !4856
  %tobool = icmp eq i8 %call1, 0, !dbg !4856
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !4850, metadata !DIExpression()), !dbg !4851
  br i1 %tobool, label %if.then, label %if.end, !dbg !4857

if.then:                                          ; preds = %entry
  store i8 1, i8* %done, align 8, !dbg !4858
  br label %cleanup, !dbg !4861

if.end:                                           ; preds = %entry
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !4862
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !4863
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !4864
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !4865
  store i32 %call7, i32* %num_phi, align 4, !dbg !4866
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !4867
  store i32 2, i32* %iter_type, align 4, !dbg !4868
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !4869
  br label %cleanup, !dbg !4870

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !4851
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !4871
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !4872 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4874, metadata !DIExpression()), !dbg !4877
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4875, metadata !DIExpression()), !dbg !4877
  call void @llvm.dbg.value(metadata i32 1, metadata !4876, metadata !DIExpression()), !dbg !4877
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 1) #8, !dbg !4878
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !4879
  store i32 2, i32* %iter_type, align 4, !dbg !4880
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !4881
  ret %struct.ssa_use_operand_d* %call, !dbg !4882
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !4883 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4889, metadata !DIExpression()), !dbg !4890
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4891
  %0 = load i8, i8* %done, align 8, !dbg !4891
  ret i8 %0, !dbg !4892
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !4893 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4897, metadata !DIExpression()), !dbg !4898
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !4899
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !4899
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4900
  ret %union.tree_node* %1, !dbg !4901
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @process_use(%union.gimple_statement_d* %stmt, %union.tree_node* %use, %struct._loop_vec_info* %loop_vinfo, i8 zeroext %live_p, i32 %relevant, %struct.VEC_gimple_heap** %worklist) unnamed_addr #5 !dbg !4902 {
entry:
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4906, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata %union.tree_node* %use, metadata !4907, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !4908, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8 %live_p, metadata !4909, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32 %relevant, metadata !4910, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %worklist, metadata !4911, metadata !DIExpression()), !dbg !4920
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !4921
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !4921
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !4912, metadata !DIExpression()), !dbg !4920
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !4922
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !4913, metadata !DIExpression()), !dbg !4920
  %1 = bitcast %union.tree_node** %def to i8*, !dbg !4923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4923
  %2 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !4924
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4924
  %3 = bitcast i32* %dt to i8*, !dbg !4925
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !4925
  %call2 = tail call fastcc zeroext i8 @exist_non_indexing_operands_for_use_p(%union.tree_node* %use, %union.gimple_statement_d* %stmt) #8, !dbg !4926
  %tobool = icmp eq i8 %call2, 0, !dbg !4926
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4928

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !4917, metadata !DIExpression(DW_OP_deref)), !dbg !4920
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !4918, metadata !DIExpression(DW_OP_deref)), !dbg !4920
  call void @llvm.dbg.value(metadata i32* %dt, metadata !4919, metadata !DIExpression(DW_OP_deref)), !dbg !4920
  %call3 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %use, %struct._loop_vec_info* %loop_vinfo, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !4929
  %tobool4 = icmp eq i8 %call3, 0, !dbg !4929
  br i1 %tobool4, label %if.then5, label %if.end11, !dbg !4931

if.then5:                                         ; preds = %if.end
  %call6 = call zeroext i8 @vect_print_dump_info(i32 2) #6, !dbg !4932
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4932
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !4935

if.then8:                                         ; preds = %if.then5
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4936
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !4937
  br label %cleanup, !dbg !4937

if.end11:                                         ; preds = %if.end
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !4938
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !4918, metadata !DIExpression()), !dbg !4920
  %tobool12 = icmp eq %union.gimple_statement_d* %5, null, !dbg !4938
  br i1 %tobool12, label %cleanup, label %lor.lhs.false, !dbg !4940

lor.lhs.false:                                    ; preds = %if.end11
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !4918, metadata !DIExpression()), !dbg !4920
  %call13 = call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* nonnull %5) #8, !dbg !4941
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4941
  br i1 %tobool14, label %if.end16, label %cleanup, !dbg !4942

if.end16:                                         ; preds = %lor.lhs.false
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !4943
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %6, metadata !4918, metadata !DIExpression()), !dbg !4920
  %call17 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %6) #8, !dbg !4944
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call17, metadata !4916, metadata !DIExpression()), !dbg !4920
  %call18 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %0, %struct.basic_block_def* %call17) #6, !dbg !4945
  %tobool19 = icmp eq i8 %call18, 0, !dbg !4945
  br i1 %tobool19, label %if.then20, label %if.end26, !dbg !4947

if.then20:                                        ; preds = %if.end16
  %call21 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4948
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4948
  br i1 %tobool22, label %cleanup, label %if.then23, !dbg !4951

if.then23:                                        ; preds = %if.then20
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4952
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !4953
  br label %cleanup, !dbg !4953

if.end26:                                         ; preds = %if.end16
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !4954
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %8, metadata !4918, metadata !DIExpression()), !dbg !4920
  %call27 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %8) #8, !dbg !4955
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call27, metadata !4914, metadata !DIExpression()), !dbg !4920
  %call28 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #8, !dbg !4956
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call28, metadata !4915, metadata !DIExpression()), !dbg !4920
  %call29 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !4957
  %cmp = icmp eq i32 %call29, 16, !dbg !4959
  br i1 %cmp, label %land.lhs.true, label %if.end68, !dbg !4960

land.lhs.true:                                    ; preds = %if.end26
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !4961
  %9 = load i32, i32* %def_type, align 8, !dbg !4961
  %cmp31 = icmp eq i32 %9, 5, !dbg !4962
  br i1 %cmp31, label %land.lhs.true33, label %if.end68, !dbg !4963

land.lhs.true33:                                  ; preds = %land.lhs.true
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !4964
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %10, metadata !4918, metadata !DIExpression()), !dbg !4920
  %call34 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %10) #8, !dbg !4965
  %cmp35 = icmp eq i32 %call34, 16, !dbg !4966
  br i1 %cmp35, label %if.end68, label %land.lhs.true37, !dbg !4967

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %def_type38 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call27, i64 0, i32 16, !dbg !4968
  %11 = load i32, i32* %def_type38, align 8, !dbg !4968
  %cmp39 = icmp eq i32 %11, 5, !dbg !4969
  br i1 %cmp39, label %land.lhs.true41, label %if.end68, !dbg !4970

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call28, i64 0, i32 3, !dbg !4971
  %12 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !4971
  %loop_father42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call17, i64 0, i32 3, !dbg !4972
  %13 = load %struct.loop*, %struct.loop** %loop_father42, align 8, !dbg !4972
  %cmp43 = icmp eq %struct.loop* %12, %13, !dbg !4973
  br i1 %cmp43, label %if.then45, label %if.end68, !dbg !4974

if.then45:                                        ; preds = %land.lhs.true41
  %call46 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4975
  %tobool47 = icmp eq i8 %call46, 0, !dbg !4975
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !4978

if.then48:                                        ; preds = %if.then45
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4979
  %call49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !4980
  br label %if.end50, !dbg !4980

if.end50:                                         ; preds = %if.then45, %if.then48
  %in_pattern_p = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call27, i64 0, i32 13, !dbg !4981
  %15 = load i8, i8* %in_pattern_p, align 8, !dbg !4981
  %tobool51 = icmp eq i8 %15, 0, !dbg !4981
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !4983

if.then52:                                        ; preds = %if.end50
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call27, i64 0, i32 14, !dbg !4984
  %16 = load %union.gimple_statement_d*, %union.gimple_statement_d** %related_stmt, align 8, !dbg !4984
  %call53 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %16) #8, !dbg !4985
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call53, metadata !4914, metadata !DIExpression()), !dbg !4920
  br label %if.end54, !dbg !4986

if.end54:                                         ; preds = %if.end50, %if.then52
  %dstmt_vinfo.0 = phi %struct._stmt_vec_info* [ %call53, %if.then52 ], [ %call27, %if.end50 ], !dbg !4920
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %dstmt_vinfo.0, metadata !4914, metadata !DIExpression()), !dbg !4920
  %relevant55 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %dstmt_vinfo.0, i64 0, i32 3, !dbg !4987
  %17 = load i32, i32* %relevant55, align 8, !dbg !4987
  %cmp56 = icmp ult i32 %17, 3, !dbg !4987
  br i1 %cmp56, label %cond.end, label %cond.true, !dbg !4987

cond.true:                                        ; preds = %if.end54
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 287, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4987
  br label %cond.end, !dbg !4987

cond.end:                                         ; preds = %if.end54, %cond.true
  %live = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %dstmt_vinfo.0, i64 0, i32 4, !dbg !4988
  %18 = load i8, i8* %live, align 4, !dbg !4988
  %tobool59 = icmp eq i8 %18, 0, !dbg !4988
  br i1 %tobool59, label %lor.lhs.false60, label %cleanup, !dbg !4988

lor.lhs.false60:                                  ; preds = %cond.end
  %19 = load i32, i32* %relevant55, align 8, !dbg !4988
  %cmp62 = icmp eq i32 %19, 0, !dbg !4988
  br i1 %cmp62, label %cond.true64, label %cleanup, !dbg !4988

cond.true64:                                      ; preds = %lor.lhs.false60
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 289, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !4988
  br label %cleanup, !dbg !4988

if.end68:                                         ; preds = %land.lhs.true33, %land.lhs.true41, %land.lhs.true37, %land.lhs.true, %if.end26
  %loop_father69 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call17, i64 0, i32 3, !dbg !4989
  %20 = load %struct.loop*, %struct.loop** %loop_father69, align 8, !dbg !4989
  %loop_father70 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call28, i64 0, i32 3, !dbg !4991
  %21 = load %struct.loop*, %struct.loop** %loop_father70, align 8, !dbg !4991
  %call71 = call zeroext i8 @flow_loop_nested_p(%struct.loop* %20, %struct.loop* %21) #6, !dbg !4992
  %tobool72 = icmp eq i8 %call71, 0, !dbg !4992
  br i1 %tobool72, label %if.else, label %if.then73, !dbg !4993

if.then73:                                        ; preds = %if.end68
  %call74 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !4994
  %tobool75 = icmp eq i8 %call74, 0, !dbg !4994
  br i1 %tobool75, label %if.end78, label %if.then76, !dbg !4997

if.then76:                                        ; preds = %if.then73
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !4998
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !4999
  br label %if.end78, !dbg !4999

if.end78:                                         ; preds = %if.then73, %if.then76
  switch i32 %relevant, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb83
    i32 2, label %sw.bb91
    i32 4, label %if.end122
  ], !dbg !5000

sw.bb:                                            ; preds = %if.end78
  %def_type79 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !5001
  %23 = load i32, i32* %def_type79, align 8, !dbg !5001
  %cmp80 = icmp eq i32 %23, 7, !dbg !5003
  %cond82 = select i1 %cmp80, i32 4, i32 0, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %cond82, metadata !4910, metadata !DIExpression()), !dbg !4920
  br label %if.end122, !dbg !5005

sw.bb83:                                          ; preds = %if.end78
  %def_type84 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !5006
  %24 = load i32, i32* %def_type84, align 8, !dbg !5006
  %cmp85 = icmp eq i32 %24, 5, !dbg !5006
  br i1 %cmp85, label %cond.true87, label %if.end122, !dbg !5006

cond.true87:                                      ; preds = %sw.bb83
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5006
  br label %if.end122, !dbg !5006

sw.bb91:                                          ; preds = %if.end78
  %def_type92 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !5007
  %25 = load i32, i32* %def_type92, align 8, !dbg !5007
  %cmp93 = icmp eq i32 %25, 5, !dbg !5007
  br i1 %cmp93, label %cond.true95, label %if.end122, !dbg !5007

cond.true95:                                      ; preds = %sw.bb91
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 318, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5007
  br label %if.end122, !dbg !5007

sw.default:                                       ; preds = %if.end78
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 326, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5008
  br label %if.end122, !dbg !5009

if.else:                                          ; preds = %if.end68
  %26 = load %struct.loop*, %struct.loop** %loop_father70, align 8, !dbg !5010
  %27 = load %struct.loop*, %struct.loop** %loop_father69, align 8, !dbg !5012
  %call101 = call zeroext i8 @flow_loop_nested_p(%struct.loop* %26, %struct.loop* %27) #6, !dbg !5013
  %tobool102 = icmp eq i8 %call101, 0, !dbg !5013
  br i1 %tobool102, label %if.end122, label %if.then103, !dbg !5014

if.then103:                                       ; preds = %if.else
  %call104 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5015
  %tobool105 = icmp eq i8 %call104, 0, !dbg !5015
  br i1 %tobool105, label %if.end108, label %if.then106, !dbg !5018

if.then106:                                       ; preds = %if.then103
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5019
  %call107 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.61, i64 0, i64 0)) #6, !dbg !5020
  br label %if.end108, !dbg !5020

if.end108:                                        ; preds = %if.then103, %if.then106
  switch i32 %relevant, label %sw.default119 [
    i32 0, label %sw.bb109
    i32 3, label %if.end122
    i32 4, label %sw.bb118
  ], !dbg !5021

sw.bb109:                                         ; preds = %if.end108
  %def_type110 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !5022
  %29 = load i32, i32* %def_type110, align 8, !dbg !5022
  %cmp111 = icmp eq i32 %29, 5, !dbg !5024
  br i1 %cmp111, label %lor.end, label %lor.rhs, !dbg !5025

lor.rhs:                                          ; preds = %sw.bb109
  %cmp114 = icmp eq i32 %29, 6, !dbg !5026
  %phitmp = zext i1 %cmp114 to i32, !dbg !5025
  br label %lor.end, !dbg !5025

lor.end:                                          ; preds = %lor.rhs, %sw.bb109
  %30 = phi i32 [ 1, %sw.bb109 ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i32 %30, metadata !4910, metadata !DIExpression()), !dbg !4920
  br label %if.end122, !dbg !5027

sw.bb118:                                         ; preds = %if.end108
  call void @llvm.dbg.value(metadata i32 2, metadata !4910, metadata !DIExpression()), !dbg !4920
  br label %if.end122, !dbg !5028

sw.default119:                                    ; preds = %if.end108
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 359, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5029
  br label %if.end122, !dbg !5030

if.end122:                                        ; preds = %sw.bb83, %sw.bb91, %if.else, %if.end108, %sw.default119, %sw.bb118, %lor.end, %sw.bb, %if.end78, %sw.default, %cond.true87, %cond.true95
  %relevant.addr.3 = phi i32 [ %relevant, %sw.default ], [ 4, %if.end78 ], [ %cond82, %sw.bb ], [ 3, %sw.bb83 ], [ 3, %cond.true87 ], [ 4, %sw.bb91 ], [ 4, %cond.true95 ], [ %relevant, %if.else ], [ %relevant, %sw.default119 ], [ 2, %sw.bb118 ], [ %30, %lor.end ], [ 1, %if.end108 ]
  call void @llvm.dbg.value(metadata i32 %relevant.addr.3, metadata !4910, metadata !DIExpression()), !dbg !4920
  %31 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5031
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %31, metadata !4918, metadata !DIExpression()), !dbg !4920
  call fastcc void @vect_mark_relevant(%struct.VEC_gimple_heap** %worklist, %union.gimple_statement_d* %31, i32 %relevant.addr.3, i8 zeroext %live_p) #8, !dbg !5032
  br label %cleanup, !dbg !5033

cleanup:                                          ; preds = %lor.lhs.false60, %cond.end, %if.then20, %lor.lhs.false, %if.end11, %if.then5, %entry, %cond.true64, %if.then23, %if.then8, %if.end122
  %retval.0 = phi i8 [ 1, %if.end122 ], [ 1, %entry ], [ 0, %if.then8 ], [ 0, %if.then5 ], [ 1, %lor.lhs.false ], [ 1, %if.end11 ], [ 1, %if.then23 ], [ 1, %if.then20 ], [ 1, %cond.end ], [ 1, %lor.lhs.false60 ], [ 1, %cond.true64 ], !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !5034
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !5034
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5034
  ret i8 %retval.0, !dbg !5034
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5035 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5039, metadata !DIExpression()), !dbg !5041
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5042
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5042
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5044
  br i1 %tobool, label %if.end, label %if.then, !dbg !5045

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5046
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !5040, metadata !DIExpression()), !dbg !5041
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !5048
  %2 = load i64, i64* %1, align 8, !dbg !5048
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5049
  store i64 %2, i64* %3, align 8, !dbg !5049
  br label %cleanup, !dbg !5050

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5051
  %4 = load i32, i32* %phi_i, align 8, !dbg !5051
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5053
  %5 = load i32, i32* %num_phi, align 4, !dbg !5053
  %cmp = icmp slt i32 %4, %5, !dbg !5054
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !5055

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5056
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5056
  %inc = add nsw i32 %4, 1, !dbg !5056
  store i32 %inc, i32* %phi_i, align 8, !dbg !5056
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #8, !dbg !5056
  br label %cleanup, !dbg !5058

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5059
  store i8 1, i8* %done, align 8, !dbg !5060
  br label %cleanup, !dbg !5061

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !5041
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5062
}

; Function Attrs: nounwind uwtable
define dso_local i32 @cost_for_stmt(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !5063 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5067, metadata !DIExpression()), !dbg !5069
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !5070
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !5068, metadata !DIExpression()), !dbg !5069
  %type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !5071
  %0 = load i32, i32* %type, align 8, !dbg !5071
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 6, label %sw.bb2
    i32 5, label %sw.bb2
    i32 7, label %sw.bb2
    i32 8, label %sw.bb2
    i32 9, label %sw.bb2
    i32 10, label %sw.bb2
    i32 11, label %sw.bb2
    i32 4, label %sw.bb2
  ], !dbg !5072

sw.bb:                                            ; preds = %entry
  %1 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5073
  %scalar_load_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %1, i64 0, i32 38, !dbg !5073
  %2 = load i32, i32* %scalar_load_cost, align 4, !dbg !5073
  br label %cleanup, !dbg !5075

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5076
  %scalar_store_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %3, i64 0, i32 39, !dbg !5076
  %4 = load i32, i32* %scalar_store_cost, align 4, !dbg !5076
  br label %cleanup, !dbg !5077

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %5 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5078
  %scalar_stmt_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %5, i64 0, i32 37, !dbg !5078
  %6 = load i32, i32* %scalar_stmt_cost, align 4, !dbg !5078
  br label %cleanup, !dbg !5079

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 570, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5080
  br label %cleanup, !dbg !5081

cleanup:                                          ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ 0, %sw.default ], [ %6, %sw.bb2 ], [ %4, %sw.bb1 ], [ %2, %sw.bb ], !dbg !5069
  ret i32 %retval.0, !dbg !5082
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @vect_model_simple_cost(%struct._stmt_vec_info* %stmt_info, i32 %ncopies, i32* %dt, %struct._slp_tree* %slp_node) local_unnamed_addr #5 !dbg !5083 {
entry:
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %stmt_info, metadata !5088, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i32 %ncopies, metadata !5089, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i32* %dt, metadata !5090, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i32 0, metadata !5093, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i32 0, metadata !5094, metadata !DIExpression()), !dbg !5095
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 25, !dbg !5096
  %0 = load i32, i32* %slp_type, align 4, !dbg !5096
  %cmp = icmp eq i32 %0, 1, !dbg !5096
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5098

if.end:                                           ; preds = %entry
  %1 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5099
  %vec_stmt_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %1, i64 0, i32 40, !dbg !5099
  %2 = load i32, i32* %vec_stmt_cost, align 4, !dbg !5099
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5093, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i32 0, metadata !5092, metadata !DIExpression()), !dbg !5095
  %scalar_to_vec_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %1, i64 0, i32 42, !dbg !5100
  br label %for.cond, !dbg !5105

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end ], !dbg !5106
  %outside_cost.0 = phi i32 [ %outside_cost.1, %for.inc ], [ 0, %if.end ], !dbg !5095
  call void @llvm.dbg.value(metadata i32 %outside_cost.0, metadata !5094, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5092, metadata !DIExpression()), !dbg !5095
  %exitcond = icmp eq i64 %indvars.iv, 2, !dbg !5107
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5108

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %dt, i64 %indvars.iv, !dbg !5109
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5109
  %cmp2 = icmp eq i32 %3, 1, !dbg !5110
  br i1 %cmp2, label %if.then6, label %lor.lhs.false, !dbg !5111

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i32 %3, 2, !dbg !5112
  br i1 %cmp5, label %if.then6, label %for.inc, !dbg !5113

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %4 = load i32, i32* %scalar_to_vec_cost, align 4, !dbg !5114
  %add = add nsw i32 %outside_cost.0, %4, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %add, metadata !5094, metadata !DIExpression()), !dbg !5095
  br label %for.inc, !dbg !5116

for.inc:                                          ; preds = %lor.lhs.false, %if.then6
  %outside_cost.1 = phi i32 [ %add, %if.then6 ], [ %outside_cost.0, %lor.lhs.false ], !dbg !5095
  call void @llvm.dbg.value(metadata i32 %outside_cost.1, metadata !5094, metadata !DIExpression()), !dbg !5095
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5117
  call void @llvm.dbg.value(metadata i32 undef, metadata !5092, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5095
  br label %for.cond, !dbg !5118, !llvm.loop !5119

for.end:                                          ; preds = %for.cond
  %outside_cost.0.lcssa = phi i32 [ %outside_cost.0, %for.cond ], !dbg !5095
  call void @llvm.dbg.value(metadata i32 %outside_cost.0.lcssa, metadata !5094, metadata !DIExpression()), !dbg !5095
  %mul = mul nsw i32 %2, %ncopies, !dbg !5121
  call void @llvm.dbg.value(metadata i32 %outside_cost.0.lcssa, metadata !5094, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i32 %outside_cost.0.lcssa, metadata !5094, metadata !DIExpression()), !dbg !5095
  %call = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5122
  %tobool = icmp eq i8 %call, 0, !dbg !5122
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !5124

if.then8:                                         ; preds = %for.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5125
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.9, i64 0, i64 0), i32 %mul, i32 %outside_cost.0.lcssa) #6, !dbg !5126
  br label %if.end10, !dbg !5126

if.end10:                                         ; preds = %for.end, %if.then8
  tail call fastcc void @stmt_vinfo_set_inside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %mul) #8, !dbg !5127
  tail call fastcc void @stmt_vinfo_set_outside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %outside_cost.0.lcssa) #8, !dbg !5128
  br label %cleanup.cont, !dbg !5129

cleanup.cont:                                     ; preds = %if.end10, %entry
  ret void, !dbg !5129
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @stmt_vinfo_set_inside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %cost) unnamed_addr #0 !dbg !5130 {
entry:
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %stmt_info, metadata !5134, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !5135, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata i32 %cost, metadata !5136, metadata !DIExpression()), !dbg !5137
  %tobool = icmp eq %struct._slp_tree* %slp_node, null, !dbg !5138
  br i1 %tobool, label %if.else, label %if.then, !dbg !5140

if.then:                                          ; preds = %entry
  %inside_of_loop = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 5, i32 1, !dbg !5141
  store i32 %cost, i32* %inside_of_loop, align 4, !dbg !5142
  br label %if.end, !dbg !5141

if.else:                                          ; preds = %entry
  %inside_of_loop3 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 24, i32 1, !dbg !5143
  store i32 %cost, i32* %inside_of_loop3, align 4, !dbg !5144
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5145
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @stmt_vinfo_set_outside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %cost) unnamed_addr #0 !dbg !5146 {
entry:
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %stmt_info, metadata !5148, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !5149, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i32 %cost, metadata !5150, metadata !DIExpression()), !dbg !5151
  %tobool = icmp eq %struct._slp_tree* %slp_node, null, !dbg !5152
  br i1 %tobool, label %if.else, label %if.then, !dbg !5154

if.then:                                          ; preds = %entry
  %outside_of_loop = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 5, i32 0, !dbg !5155
  store i32 %cost, i32* %outside_of_loop, align 4, !dbg !5156
  br label %if.end, !dbg !5155

if.else:                                          ; preds = %entry
  %outside_of_loop3 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 24, i32 0, !dbg !5157
  store i32 %cost, i32* %outside_of_loop3, align 4, !dbg !5158
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5159
}

; Function Attrs: nounwind uwtable
define dso_local void @vect_model_store_cost(%struct._stmt_vec_info* %stmt_info, i32 %ncopies, i32 %dt, %struct._slp_tree* %slp_node) local_unnamed_addr #5 !dbg !5160 {
entry:
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %stmt_info, metadata !5164, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 %ncopies, metadata !5165, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 %dt, metadata !5166, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !5167, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 0, metadata !5169, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 0, metadata !5170, metadata !DIExpression()), !dbg !5171
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 25, !dbg !5172
  %0 = load i32, i32* %slp_type, align 4, !dbg !5172
  %cmp = icmp eq i32 %0, 1, !dbg !5172
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5174

if.end:                                           ; preds = %entry
  %dt.off = add i32 %dt, -1, !dbg !5175
  %switch = icmp ult i32 %dt.off, 2, !dbg !5175
  br i1 %switch, label %if.then3, label %if.end4, !dbg !5175

if.then3:                                         ; preds = %if.end
  %1 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5177
  %scalar_to_vec_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %1, i64 0, i32 42, !dbg !5177
  %2 = load i32, i32* %scalar_to_vec_cost, align 4, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %2, metadata !5170, metadata !DIExpression()), !dbg !5171
  br label %if.end4, !dbg !5178

if.end4:                                          ; preds = %if.end, %if.then3
  %outside_cost.0 = phi i32 [ %2, %if.then3 ], [ 0, %if.end ], !dbg !5171
  call void @llvm.dbg.value(metadata i32 %outside_cost.0, metadata !5170, metadata !DIExpression()), !dbg !5171
  %first_dr = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 17, !dbg !5179
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr, align 8, !dbg !5179
  %tobool = icmp eq %union.gimple_statement_d* %3, null, !dbg !5179
  %tobool5 = icmp ne %struct._slp_tree* %slp_node, null, !dbg !5181
  %or.cond = or i1 %tobool, %tobool5, !dbg !5182
  br i1 %or.cond, label %if.end7, label %if.then6, !dbg !5182

if.then6:                                         ; preds = %if.end4
  %call = tail call fastcc i32 @vect_cost_strided_group_size(%struct._stmt_vec_info* %stmt_info) #8, !dbg !5183
  call void @llvm.dbg.value(metadata i32 %call, metadata !5168, metadata !DIExpression()), !dbg !5171
  br label %if.end7, !dbg !5184

if.end7:                                          ; preds = %if.end4, %if.then6
  %group_size.0 = phi i32 [ %call, %if.then6 ], [ 1, %if.end4 ], !dbg !5185
  call void @llvm.dbg.value(metadata i32 %group_size.0, metadata !5168, metadata !DIExpression()), !dbg !5171
  %cmp8 = icmp sgt i32 %group_size.0, 1, !dbg !5186
  br i1 %cmp8, label %if.then9, label %if.end18, !dbg !5188

if.then9:                                         ; preds = %if.end7
  %conv = sext i32 %group_size.0 to i64, !dbg !5189
  %call10 = tail call i32 @exact_log2(i64 %conv) #6, !dbg !5191
  %mul = mul nsw i32 %call10, %ncopies, !dbg !5192
  %mul11 = mul nsw i32 %mul, %group_size.0, !dbg !5193
  %4 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5194
  %vec_stmt_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %4, i64 0, i32 40, !dbg !5194
  %5 = load i32, i32* %vec_stmt_cost, align 4, !dbg !5194
  %mul12 = mul nsw i32 %mul11, %5, !dbg !5195
  call void @llvm.dbg.value(metadata i32 %mul12, metadata !5169, metadata !DIExpression()), !dbg !5171
  %call13 = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5196
  %tobool14 = icmp eq i8 %call13, 0, !dbg !5196
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !5198

if.then15:                                        ; preds = %if.then9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5199
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.10, i64 0, i64 0), i32 %group_size.0) #6, !dbg !5200
  br label %if.end18, !dbg !5200

if.end18:                                         ; preds = %if.then9, %if.then15, %if.end7
  %inside_cost.0 = phi i32 [ 0, %if.end7 ], [ %mul12, %if.then15 ], [ %mul12, %if.then9 ], !dbg !5171
  call void @llvm.dbg.value(metadata i32 %inside_cost.0, metadata !5169, metadata !DIExpression()), !dbg !5171
  %7 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5201
  %vec_store_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %7, i64 0, i32 45, !dbg !5201
  %8 = load i32, i32* %vec_store_cost, align 4, !dbg !5201
  %mul19 = mul nsw i32 %8, %ncopies, !dbg !5202
  %add = add nsw i32 %inside_cost.0, %mul19, !dbg !5203
  call void @llvm.dbg.value(metadata i32 %add, metadata !5169, metadata !DIExpression()), !dbg !5171
  %call20 = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5204
  %tobool21 = icmp eq i8 %call20, 0, !dbg !5204
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !5206

if.then22:                                        ; preds = %if.end18
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5207
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.11, i64 0, i64 0), i32 %add, i32 %outside_cost.0) #6, !dbg !5208
  br label %if.end24, !dbg !5208

if.end24:                                         ; preds = %if.end18, %if.then22
  tail call fastcc void @stmt_vinfo_set_inside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %add) #8, !dbg !5209
  tail call fastcc void @stmt_vinfo_set_outside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %outside_cost.0) #8, !dbg !5210
  br label %cleanup.cont, !dbg !5211

cleanup.cont:                                     ; preds = %if.end24, %entry
  ret void, !dbg !5211
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @vect_cost_strided_group_size(%struct._stmt_vec_info* %stmt_info) unnamed_addr #5 !dbg !5212 {
entry:
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %stmt_info, metadata !5216, metadata !DIExpression()), !dbg !5218
  %first_dr = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 17, !dbg !5219
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr, align 8, !dbg !5219
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !5217, metadata !DIExpression()), !dbg !5218
  %stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 1, !dbg !5220
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5220
  %cmp = icmp eq %union.gimple_statement_d* %0, %1, !dbg !5222
  br i1 %cmp, label %if.then, label %cleanup, !dbg !5223

if.then:                                          ; preds = %entry
  %size = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 19, !dbg !5224
  %2 = load i32, i32* %size, align 8, !dbg !5224
  br label %cleanup, !dbg !5225

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi i32 [ %2, %if.then ], [ 1, %entry ], !dbg !5218
  ret i32 %retval.0, !dbg !5226
}

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @vect_model_load_cost(%struct._stmt_vec_info* %stmt_info, i32 %ncopies, %struct._slp_tree* %slp_node) local_unnamed_addr #5 !dbg !5227 {
entry:
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %stmt_info, metadata !5231, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 %ncopies, metadata !5232, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !5233, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata %struct.data_reference* undef, metadata !5237, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 0, metadata !5239, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 0, metadata !5240, metadata !DIExpression()), !dbg !5241
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 25, !dbg !5242
  %0 = load i32, i32* %slp_type, align 4, !dbg !5242
  %cmp = icmp eq i32 %0, 1, !dbg !5242
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5244

if.end:                                           ; preds = %entry
  %first_dr1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %stmt_info, i64 0, i32 17, !dbg !5245
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr1, align 8, !dbg !5245
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5236, metadata !DIExpression()), !dbg !5241
  %tobool = icmp eq %union.gimple_statement_d* %1, null, !dbg !5246
  %tobool2 = icmp ne %struct._slp_tree* %slp_node, null, !dbg !5248
  %or.cond = or i1 %tobool, %tobool2, !dbg !5249
  br i1 %or.cond, label %if.end6, label %if.then3, !dbg !5249

if.then3:                                         ; preds = %if.end
  %call = tail call fastcc i32 @vect_cost_strided_group_size(%struct._stmt_vec_info* %stmt_info) #8, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %call, metadata !5234, metadata !DIExpression()), !dbg !5241
  %call4 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %1) #8, !dbg !5252
  br label %if.end6, !dbg !5253

if.end6:                                          ; preds = %if.end, %if.then3
  %call4.pn = phi %struct._stmt_vec_info* [ %call4, %if.then3 ], [ %stmt_info, %if.end ]
  %group_size.0 = phi i32 [ %call, %if.then3 ], [ 1, %if.end ], !dbg !5254
  %first_dr.0.in = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call4.pn, i64 0, i32 7, !dbg !5241
  %first_dr.0 = load %struct.data_reference*, %struct.data_reference** %first_dr.0.in, align 8, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %group_size.0, metadata !5234, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata %struct.data_reference* %first_dr.0, metadata !5238, metadata !DIExpression()), !dbg !5241
  %call7 = tail call i32 @vect_supportable_dr_alignment(%struct.data_reference* %first_dr.0) #6, !dbg !5255
  call void @llvm.dbg.value(metadata i32 %call7, metadata !5235, metadata !DIExpression()), !dbg !5241
  %cmp8 = icmp sgt i32 %group_size.0, 1, !dbg !5256
  br i1 %cmp8, label %if.then9, label %if.end18, !dbg !5258

if.then9:                                         ; preds = %if.end6
  %conv = sext i32 %group_size.0 to i64, !dbg !5259
  %call10 = tail call i32 @exact_log2(i64 %conv) #6, !dbg !5261
  %mul = mul nsw i32 %call10, %ncopies, !dbg !5262
  %mul11 = mul nsw i32 %mul, %group_size.0, !dbg !5263
  %2 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5264
  %vec_stmt_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %2, i64 0, i32 40, !dbg !5264
  %3 = load i32, i32* %vec_stmt_cost, align 4, !dbg !5264
  %mul12 = mul nsw i32 %mul11, %3, !dbg !5265
  call void @llvm.dbg.value(metadata i32 %mul12, metadata !5239, metadata !DIExpression()), !dbg !5241
  %call13 = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5266
  %tobool14 = icmp eq i8 %call13, 0, !dbg !5266
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !5268

if.then15:                                        ; preds = %if.then9
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5269
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0), i32 %group_size.0) #6, !dbg !5270
  br label %if.end18, !dbg !5270

if.end18:                                         ; preds = %if.then9, %if.then15, %if.end6
  %inside_cost.0 = phi i32 [ 0, %if.end6 ], [ %mul12, %if.then15 ], [ %mul12, %if.then9 ], !dbg !5241
  call void @llvm.dbg.value(metadata i32 %inside_cost.0, metadata !5239, metadata !DIExpression()), !dbg !5241
  switch i32 %call7, label %sw.default [
    i32 4, label %sw.bb
    i32 1, label %sw.bb25
    i32 2, label %sw.bb33
    i32 3, label %sw.bb45
  ], !dbg !5271

sw.bb:                                            ; preds = %if.end18
  %5 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5272
  %vec_align_load_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %5, i64 0, i32 43, !dbg !5272
  %6 = load i32, i32* %vec_align_load_cost, align 4, !dbg !5272
  %mul19 = mul nsw i32 %6, %ncopies, !dbg !5275
  %add = add nsw i32 %inside_cost.0, %mul19, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %add, metadata !5239, metadata !DIExpression()), !dbg !5241
  %call20 = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5277
  %tobool21 = icmp eq i8 %call20, 0, !dbg !5277
  br i1 %tobool21, label %sw.epilog, label %if.then22, !dbg !5279

if.then22:                                        ; preds = %sw.bb
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5280
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !5281
  br label %sw.epilog, !dbg !5281

sw.bb25:                                          ; preds = %if.end18
  %8 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5282
  %vec_unalign_load_cost = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %8, i64 0, i32 44, !dbg !5282
  %9 = load i32, i32* %vec_unalign_load_cost, align 4, !dbg !5282
  %mul26 = mul nsw i32 %9, %ncopies, !dbg !5284
  %add27 = add nsw i32 %inside_cost.0, %mul26, !dbg !5285
  call void @llvm.dbg.value(metadata i32 %add27, metadata !5239, metadata !DIExpression()), !dbg !5241
  %call28 = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5286
  %tobool29 = icmp eq i8 %call28, 0, !dbg !5286
  br i1 %tobool29, label %sw.epilog, label %if.then30, !dbg !5288

if.then30:                                        ; preds = %sw.bb25
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5289
  %call31 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !5290
  br label %sw.epilog, !dbg !5290

sw.bb33:                                          ; preds = %if.end18
  %11 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5291
  %vec_align_load_cost34 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %11, i64 0, i32 43, !dbg !5291
  %12 = load i32, i32* %vec_align_load_cost34, align 4, !dbg !5291
  %mul35 = shl nsw i32 %12, 1, !dbg !5293
  %vec_stmt_cost36 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %11, i64 0, i32 40, !dbg !5294
  %13 = load i32, i32* %vec_stmt_cost36, align 4, !dbg !5294
  %add37 = add nsw i32 %mul35, %13, !dbg !5295
  %mul38 = mul nsw i32 %add37, %ncopies, !dbg !5296
  %add39 = add nsw i32 %inside_cost.0, %mul38, !dbg !5297
  call void @llvm.dbg.value(metadata i32 %add39, metadata !5239, metadata !DIExpression()), !dbg !5241
  %14 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 0), align 8, !dbg !5298
  %tobool40 = icmp eq %union.tree_node* ()* %14, null, !dbg !5300
  br i1 %tobool40, label %sw.epilog, label %if.then41, !dbg !5301

if.then41:                                        ; preds = %sw.bb33
  %add43 = add nsw i32 %add39, %13, !dbg !5302
  call void @llvm.dbg.value(metadata i32 %add43, metadata !5239, metadata !DIExpression()), !dbg !5241
  br label %sw.epilog, !dbg !5303

sw.bb45:                                          ; preds = %if.end18
  %call46 = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5304
  %tobool47 = icmp eq i8 %call46, 0, !dbg !5304
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !5307

if.then48:                                        ; preds = %sw.bb45
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5308
  %call49 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5309
  br label %if.end50, !dbg !5309

if.end50:                                         ; preds = %sw.bb45, %if.then48
  %16 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr1, align 8, !dbg !5310
  %tobool52 = icmp eq %union.gimple_statement_d* %16, null, !dbg !5310
  %or.cond1 = or i1 %tobool52, %cmp8, !dbg !5312
  %or.cond2 = or i1 %or.cond1, %tobool2, !dbg !5312
  br i1 %or.cond2, label %if.then57, label %if.end50.if.end65_crit_edge, !dbg !5312

if.end50.if.end65_crit_edge:                      ; preds = %if.end50
  %.pre = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5313
  %vec_stmt_cost67.phi.trans.insert = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %.pre, i64 0, i32 40, !dbg !5314
  %.pre3 = load i32, i32* %vec_stmt_cost67.phi.trans.insert, align 4, !dbg !5315
  br label %if.end65, !dbg !5312

if.then57:                                        ; preds = %if.end50
  %17 = load %struct.processor_costs*, %struct.processor_costs** @ix86_cost, align 8, !dbg !5316
  %vec_stmt_cost58 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %17, i64 0, i32 40, !dbg !5316
  %18 = load i32, i32* %vec_stmt_cost58, align 4, !dbg !5316
  %mul59 = shl nsw i32 %18, 1, !dbg !5318
  call void @llvm.dbg.value(metadata i32 %mul59, metadata !5240, metadata !DIExpression()), !dbg !5241
  %19 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 0), align 8, !dbg !5319
  %tobool60 = icmp eq %union.tree_node* ()* %19, null, !dbg !5321
  br i1 %tobool60, label %if.end65, label %if.then61, !dbg !5322

if.then61:                                        ; preds = %if.then57
  %add63 = mul nsw i32 %18, 3, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %add63, metadata !5240, metadata !DIExpression()), !dbg !5241
  br label %if.end65, !dbg !5324

if.end65:                                         ; preds = %if.end50.if.end65_crit_edge, %if.then57, %if.then61
  %20 = phi i32 [ %.pre3, %if.end50.if.end65_crit_edge ], [ %18, %if.then61 ], [ %18, %if.then57 ], !dbg !5315
  %21 = phi %struct.processor_costs* [ %.pre, %if.end50.if.end65_crit_edge ], [ %17, %if.then61 ], [ %17, %if.then57 ], !dbg !5313
  %outside_cost.1 = phi i32 [ 0, %if.end50.if.end65_crit_edge ], [ %add63, %if.then61 ], [ %mul59, %if.then57 ], !dbg !5241
  call void @llvm.dbg.value(metadata i32 %outside_cost.1, metadata !5240, metadata !DIExpression()), !dbg !5241
  %vec_align_load_cost66 = getelementptr inbounds %struct.processor_costs, %struct.processor_costs* %21, i64 0, i32 43, !dbg !5313
  %22 = load i32, i32* %vec_align_load_cost66, align 4, !dbg !5313
  %add68 = add nsw i32 %22, %20, !dbg !5325
  %mul69 = mul nsw i32 %add68, %ncopies, !dbg !5326
  %add70 = add nsw i32 %inside_cost.0, %mul69, !dbg !5327
  call void @llvm.dbg.value(metadata i32 %add70, metadata !5239, metadata !DIExpression()), !dbg !5241
  br label %sw.epilog, !dbg !5328

sw.default:                                       ; preds = %if.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 796, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5329
  br label %sw.epilog, !dbg !5330

sw.epilog:                                        ; preds = %sw.bb, %sw.bb25, %sw.bb33, %if.then41, %if.then30, %if.then22, %sw.default, %if.end65
  %inside_cost.2 = phi i32 [ %inside_cost.0, %sw.default ], [ %add70, %if.end65 ], [ %add, %if.then22 ], [ %add, %sw.bb ], [ %add27, %if.then30 ], [ %add27, %sw.bb25 ], [ %add43, %if.then41 ], [ %add39, %sw.bb33 ], !dbg !5241
  %outside_cost.2 = phi i32 [ 0, %sw.default ], [ %outside_cost.1, %if.end65 ], [ 0, %if.then22 ], [ 0, %sw.bb ], [ 0, %if.then30 ], [ 0, %sw.bb25 ], [ 0, %if.then41 ], [ 0, %sw.bb33 ], !dbg !5241
  call void @llvm.dbg.value(metadata i32 %outside_cost.2, metadata !5240, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 %inside_cost.2, metadata !5239, metadata !DIExpression()), !dbg !5241
  %call71 = tail call zeroext i8 @vect_print_dump_info(i32 3) #6, !dbg !5331
  %tobool72 = icmp eq i8 %call71, 0, !dbg !5331
  br i1 %tobool72, label %if.end75, label %if.then73, !dbg !5333

if.then73:                                        ; preds = %sw.epilog
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5334
  %call74 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0), i32 %inside_cost.2, i32 %outside_cost.2) #6, !dbg !5335
  br label %if.end75, !dbg !5335

if.end75:                                         ; preds = %sw.epilog, %if.then73
  tail call fastcc void @stmt_vinfo_set_inside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %inside_cost.2) #8, !dbg !5336
  tail call fastcc void @stmt_vinfo_set_outside_of_loop_cost(%struct._stmt_vec_info* %stmt_info, %struct._slp_tree* %slp_node, i32 %outside_cost.2) #8, !dbg !5337
  br label %cleanup.cont, !dbg !5338

cleanup.cont:                                     ; preds = %if.end75, %entry
  ret void, !dbg !5338
}

declare dso_local i32 @vect_supportable_dr_alignment(%struct.data_reference*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vect_init_vector(%union.gimple_statement_d* %stmt, %union.tree_node* %vector_var, %union.tree_node* %vector_type, %struct.gimple_stmt_iterator* %gsi) local_unnamed_addr #5 !dbg !5339 {
entry:
  %gsi_bb_start = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5343, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata %union.tree_node* %vector_var, metadata !5344, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata %union.tree_node* %vector_type, metadata !5345, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5346, metadata !DIExpression()), !dbg !5364
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !5365
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !5347, metadata !DIExpression()), !dbg !5364
  %call1 = tail call %union.tree_node* @vect_get_new_vect_var(%union.tree_node* %vector_type, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5366
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5348, metadata !DIExpression()), !dbg !5364
  %call2 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call1) #6, !dbg !5367
  %call3 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call1, %union.tree_node* %vector_var) #6, !dbg !5368
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !5349, metadata !DIExpression()), !dbg !5364
  %call4 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call1, %union.gimple_statement_d* %call3) #8, !dbg !5369
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5352, metadata !DIExpression()), !dbg !5364
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call3, %union.tree_node* %call4) #8, !dbg !5370
  %tobool = icmp eq %struct.gimple_stmt_iterator* %gsi, null, !dbg !5371
  br i1 %tobool, label %if.else, label %if.then, !dbg !5372

if.then:                                          ; preds = %entry
  tail call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call3, %struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5373
  br label %if.end24, !dbg !5373

if.else:                                          ; preds = %entry
  %loop_vinfo5 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !5374
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo5, align 8, !dbg !5374
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !5354, metadata !DIExpression()), !dbg !5375
  %tobool6 = icmp eq %struct._loop_vec_info* %0, null, !dbg !5376
  br i1 %tobool6, label %if.else15, label %if.then7, !dbg !5377

if.then7:                                         ; preds = %if.else
  %loop8 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 0, !dbg !5378
  %1 = load %struct.loop*, %struct.loop** %loop8, align 8, !dbg !5378
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !5357, metadata !DIExpression()), !dbg !5379
  %call9 = tail call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* %1, %union.gimple_statement_d* %stmt) #8, !dbg !5380
  %tobool10 = icmp eq i8 %call9, 0, !dbg !5380
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !5382

if.then11:                                        ; preds = %if.then7
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 8, !dbg !5383
  %2 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !5383
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !5357, metadata !DIExpression()), !dbg !5379
  br label %if.end, !dbg !5384

if.end:                                           ; preds = %if.then7, %if.then11
  %loop.0 = phi %struct.loop* [ %2, %if.then11 ], [ %1, %if.then7 ], !dbg !5379
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !5357, metadata !DIExpression()), !dbg !5379
  %call12 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop.0) #6, !dbg !5385
  call void @llvm.dbg.value(metadata %struct.edge_def* %call12, metadata !5351, metadata !DIExpression()), !dbg !5364
  %call13 = tail call %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def* %call12, %union.gimple_statement_d* %call3) #6, !dbg !5386
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call13, metadata !5353, metadata !DIExpression()), !dbg !5364
  %tobool14 = icmp eq %struct.basic_block_def* %call13, null, !dbg !5387
  br i1 %tobool14, label %if.end24, label %cond.true, !dbg !5387

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 850, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5387
  br label %if.end24, !dbg !5387

if.else15:                                        ; preds = %if.else
  %bb_vinfo16 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 26, !dbg !5388
  %3 = load %struct._bb_vec_info*, %struct._bb_vec_info** %bb_vinfo16, align 8, !dbg !5388
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %3, metadata !5360, metadata !DIExpression()), !dbg !5389
  %4 = bitcast %struct.gimple_stmt_iterator* %gsi_bb_start to i8*, !dbg !5390
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !5390
  %tobool17 = icmp eq %struct._bb_vec_info* %3, null, !dbg !5391
  br i1 %tobool17, label %cond.true18, label %cond.end20, !dbg !5391

cond.true18:                                      ; preds = %if.else15
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5391
  br label %cond.end20, !dbg !5391

cond.end20:                                       ; preds = %if.else15, %cond.true18
  %bb22 = getelementptr inbounds %struct._bb_vec_info, %struct._bb_vec_info* %3, i64 0, i32 0, !dbg !5392
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb22, align 8, !dbg !5392
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !5362, metadata !DIExpression()), !dbg !5389
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5393
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7, !dbg !5393
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %5) #8, !dbg !5393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !5393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7, !dbg !5393
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_bb_start, metadata !5363, metadata !DIExpression(DW_OP_deref)), !dbg !5389
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi_bb_start, %union.gimple_statement_d* %call3, i32 1) #6, !dbg !5394
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !5395
  br label %if.end24

if.end24:                                         ; preds = %if.end, %cond.end20, %cond.true, %if.then
  %call25 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5396
  %tobool26 = icmp eq i8 %call25, 0, !dbg !5396
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !5398

if.then27:                                        ; preds = %if.end24
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5399
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !5401
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5402
  call void @print_gimple_stmt(%struct._IO_FILE* %8, %union.gimple_statement_d* %call3, i32 0, i32 2) #6, !dbg !5403
  br label %if.end29, !dbg !5404

if.end29:                                         ; preds = %if.end24, %if.then27
  %call30 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call3) #8, !dbg !5405
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !5350, metadata !DIExpression()), !dbg !5364
  ret %union.tree_node* %call30, !dbg !5406
}

declare dso_local %union.tree_node* @vect_get_new_vect_var(%union.tree_node*, i32, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5407 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5411, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5412, metadata !DIExpression()), !dbg !5413
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5414
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !5415
  ret %union.tree_node* %call, !dbg !5416
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !5417 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5421, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5422, metadata !DIExpression()), !dbg !5423
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !5424
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !5425
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5427

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5428
  %bf.load = load i64, i64* %0, align 8, !dbg !5428
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5429
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5429
  br i1 %cmp, label %if.then, label %if.end, !dbg !5430

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5431
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5431
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !5432
  br label %if.end, !dbg !5431

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !5433
}

; Function Attrs: nounwind uwtable
define dso_local void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %vec_stmt, %struct.gimple_stmt_iterator* %gsi) local_unnamed_addr #5 !dbg !5434 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5438, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %vec_stmt, metadata !5439, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5440, metadata !DIExpression()), !dbg !5444
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !5445
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !5441, metadata !DIExpression()), !dbg !5444
  %loop_vinfo1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !5446
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo1, align 8, !dbg !5446
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !5442, metadata !DIExpression()), !dbg !5444
  %bb_vinfo2 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 26, !dbg !5447
  %1 = load %struct._bb_vec_info*, %struct._bb_vec_info** %bb_vinfo2, align 8, !dbg !5447
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %1, metadata !5443, metadata !DIExpression()), !dbg !5444
  %call3 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5448
  %cmp = icmp eq i32 %call3, 4, !dbg !5448
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5448

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1174, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5448
  br label %cond.end, !dbg !5448

cond.end:                                         ; preds = %entry, %cond.true
  tail call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %vec_stmt, i32 1) #6, !dbg !5449
  %call4 = tail call %struct._stmt_vec_info* @new_stmt_vec_info(%union.gimple_statement_d* %vec_stmt, %struct._loop_vec_info* %0, %struct._bb_vec_info* %1) #8, !dbg !5450
  tail call fastcc void @set_vinfo_for_stmt(%union.gimple_statement_d* %vec_stmt, %struct._stmt_vec_info* %call4) #8, !dbg !5451
  %call5 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5452
  %tobool = icmp eq i8 %call5, 0, !dbg !5452
  br i1 %tobool, label %if.end, label %if.then, !dbg !5454

if.then:                                          ; preds = %cond.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5455
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !5457
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5458
  tail call void @print_gimple_stmt(%struct._IO_FILE* %3, %union.gimple_statement_d* %vec_stmt, i32 0, i32 2) #6, !dbg !5459
  br label %if.end, !dbg !5460

if.end:                                           ; preds = %cond.end, %if.then
  %call7 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5461
  %call8 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call7) #8, !dbg !5462
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %vec_stmt, i32 %call8) #8, !dbg !5463
  ret void, !dbg !5464
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* %loop, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5465 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5469, metadata !DIExpression()), !dbg !5471
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5470, metadata !DIExpression()), !dbg !5471
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !5472
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !5472
  %tobool = icmp eq %struct.loop* %0, null, !dbg !5473
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5474

land.rhs:                                         ; preds = %entry
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #8, !dbg !5475
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5476
  %1 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5476
  %cmp = icmp eq %struct.loop* %0, %1, !dbg !5477
  %phitmp = zext i1 %cmp to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !5478
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5479 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5481, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5482, metadata !DIExpression()), !dbg !5484
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #8, !dbg !5485
  br label %while.cond, !dbg !5486

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #8, !dbg !5487
  %tobool = icmp eq i8 %call, 0, !dbg !5487
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !5488

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #8, !dbg !5489
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #8, !dbg !5490
  %cmp = icmp eq i32 %call2, 4, !dbg !5491
  br i1 %cmp, label %while.body, label %while.end, !dbg !5486

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #8, !dbg !5492
  br label %while.cond, !dbg !5486, !llvm.loop !5493

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !5495
}

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5496 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5500, metadata !DIExpression()), !dbg !5501
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !5502
  ret %union.tree_node* %call, !dbg !5503
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %op, %union.gimple_statement_d* %stmt, %union.tree_node** %scalar_def) local_unnamed_addr #5 !dbg !5504 {
entry:
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %def = alloca %union.tree_node*, align 8
  %dt = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !5508, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5509, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node** %scalar_def, metadata !5510, metadata !DIExpression()), !dbg !5530
  %0 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !5531
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5531
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !5514, metadata !DIExpression()), !dbg !5530
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !5532
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !5515, metadata !DIExpression()), !dbg !5530
  %vectype1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !5533
  %1 = bitcast %union.tree_node** %vectype1 to %struct.tree_type**, !dbg !5533
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !5533
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !5534
  %bf.load = load i32, i32* %precision, align 4, !dbg !5534
  %bf.clear = and i32 %bf.load, 1023, !dbg !5534
  %sh_prom = zext i32 %bf.clear to i64, !dbg !5534
  %shl = shl i64 1, %sh_prom, !dbg !5534
  %conv = trunc i64 %shl to i32, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5517, metadata !DIExpression()), !dbg !5530
  %loop_vinfo2 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !5535
  %3 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo2, align 8, !dbg !5535
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %3, metadata !5518, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5521, metadata !DIExpression()), !dbg !5530
  %4 = bitcast %union.tree_node** %def to i8*, !dbg !5536
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !5536
  %5 = bitcast i32* %dt to i8*, !dbg !5537
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7, !dbg !5537
  %call3 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5538
  %tobool = icmp eq i8 %call3, 0, !dbg !5538
  br i1 %tobool, label %if.end, label %if.then, !dbg !5540

if.then:                                          ; preds = %entry
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5541
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !5543
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5544
  tail call void @print_generic_expr(%struct._IO_FILE* %7, %union.tree_node* %op, i32 2) #6, !dbg !5545
  br label %if.end, !dbg !5546

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !5513, metadata !DIExpression(DW_OP_deref)), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5522, metadata !DIExpression(DW_OP_deref)), !dbg !5530
  call void @llvm.dbg.value(metadata i32* %dt, metadata !5524, metadata !DIExpression(DW_OP_deref)), !dbg !5530
  %call5 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %op, %struct._loop_vec_info* %3, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !5547
  call void @llvm.dbg.value(metadata i8 %call5, metadata !5525, metadata !DIExpression()), !dbg !5530
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5548
  br i1 %tobool6, label %cond.true, label %cond.end, !dbg !5548

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 915, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5548
  br label %cond.end, !dbg !5548

cond.end:                                         ; preds = %if.end, %cond.true
  %call7 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5549
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5549
  br i1 %tobool8, label %if.end18, label %if.then9, !dbg !5551

if.then9:                                         ; preds = %cond.end
  %8 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5552
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5522, metadata !DIExpression()), !dbg !5530
  %tobool10 = icmp eq %union.tree_node* %8, null, !dbg !5552
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !5555

if.then11:                                        ; preds = %if.then9
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5556
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !5558
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5559
  %11 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5560
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5522, metadata !DIExpression()), !dbg !5530
  call void @print_generic_expr(%struct._IO_FILE* %10, %union.tree_node* %11, i32 2) #6, !dbg !5561
  br label %if.end13, !dbg !5562

if.end13:                                         ; preds = %if.then9, %if.then11
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5563
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %12, metadata !5513, metadata !DIExpression()), !dbg !5530
  %tobool14 = icmp eq %union.gimple_statement_d* %12, null, !dbg !5563
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !5565

if.then15:                                        ; preds = %if.end13
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5566
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !5568
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5569
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5570
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %15, metadata !5513, metadata !DIExpression()), !dbg !5530
  call void @print_gimple_stmt(%struct._IO_FILE* %14, %union.gimple_statement_d* %15, i32 0, i32 2) #6, !dbg !5571
  br label %if.end18, !dbg !5572

if.end18:                                         ; preds = %if.end13, %cond.end, %if.then15
  %16 = load i32, i32* %dt, align 4, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %16, metadata !5524, metadata !DIExpression()), !dbg !5530
  switch i32 %16, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb38
    i32 3, label %sw.bb73
    i32 5, label %sw.bb97
    i32 6, label %sw.bb97
    i32 7, label %sw.bb97
    i32 4, label %sw.bb110
  ], !dbg !5574

sw.bb:                                            ; preds = %if.end18
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %op, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5575
  %17 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !5575
  %call20 = call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %17) #8, !dbg !5577
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !5526, metadata !DIExpression()), !dbg !5530
  %tobool21 = icmp eq %union.tree_node* %call20, null, !dbg !5578
  br i1 %tobool21, label %cond.true22, label %cond.end24, !dbg !5578

cond.true22:                                      ; preds = %sw.bb
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 936, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5578
  br label %cond.end24, !dbg !5578

cond.end24:                                       ; preds = %sw.bb, %cond.true22
  %tobool26 = icmp eq %union.tree_node** %scalar_def, null, !dbg !5579
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !5581

if.then27:                                        ; preds = %cond.end24
  store %union.tree_node* %op, %union.tree_node** %scalar_def, align 8, !dbg !5582
  br label %if.end28, !dbg !5583

if.end28:                                         ; preds = %cond.end24, %if.then27
  %call29 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5584
  %tobool30 = icmp eq i8 %call29, 0, !dbg !5584
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !5586

if.then31:                                        ; preds = %if.end28
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5587
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i64 0, i64 0), i32 %conv) #6, !dbg !5588
  br label %if.end33, !dbg !5588

if.end33:                                         ; preds = %if.end28, %if.then31
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5523, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5530
  br label %for.cond, !dbg !5589

for.cond:                                         ; preds = %for.body, %if.end33
  %t.0 = phi %union.tree_node* [ null, %if.end33 ], [ %call35, %for.body ], !dbg !5530
  %i.0.in = phi i32 [ %conv, %if.end33 ], [ %i.0, %for.body ]
  %i.0 = add i32 %i.0.in, -1, !dbg !5591
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5523, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !5521, metadata !DIExpression()), !dbg !5530
  %cmp = icmp sgt i32 %i.0, -1, !dbg !5592
  br i1 %cmp, label %for.body, label %for.end, !dbg !5594

for.body:                                         ; preds = %for.cond
  %call35 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %op, %union.tree_node* %t.0) #6, !dbg !5595
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !5521, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5523, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5530
  br label %for.cond, !dbg !5597, !llvm.loop !5598

for.end:                                          ; preds = %for.cond
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %for.cond ], !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5521, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5521, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !5521, metadata !DIExpression()), !dbg !5530
  %call36 = call %union.tree_node* @build_vector(%union.tree_node* %call20, %union.tree_node* %t.0.lcssa) #6, !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !5520, metadata !DIExpression()), !dbg !5530
  %call37 = call %union.tree_node* @vect_init_vector(%union.gimple_statement_d* %stmt, %union.tree_node* %call36, %union.tree_node* %call20, %struct.gimple_stmt_iterator* null) #8, !dbg !5601
  br label %cleanup, !dbg !5602

sw.bb38:                                          ; preds = %if.end18
  %19 = bitcast %union.tree_node** %def to %struct.tree_common**, !dbg !5603
  %20 = load %struct.tree_common*, %struct.tree_common** %19, align 8, !dbg !5603
  %type40 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %20, i64 0, i32 2, !dbg !5603
  %21 = load %union.tree_node*, %union.tree_node** %type40, align 8, !dbg !5603
  %call41 = call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %21) #8, !dbg !5605
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !5526, metadata !DIExpression()), !dbg !5530
  %tobool42 = icmp eq %union.tree_node* %call41, null, !dbg !5606
  br i1 %tobool42, label %cond.true43, label %cond.end45, !dbg !5606

cond.true43:                                      ; preds = %sw.bb38
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 957, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5606
  br label %cond.end45, !dbg !5606

cond.end45:                                       ; preds = %sw.bb38, %cond.true43
  %type47 = bitcast %union.tree_node* %call41 to %struct.tree_type*, !dbg !5607
  %precision48 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type47, i64 0, i32 6, !dbg !5607
  %bf.load49 = load i32, i32* %precision48, align 4, !dbg !5607
  %bf.clear50 = and i32 %bf.load49, 1023, !dbg !5607
  %sh_prom51 = zext i32 %bf.clear50 to i64, !dbg !5607
  %shl52 = shl i64 1, %sh_prom51, !dbg !5607
  %conv53 = trunc i64 %shl52 to i32, !dbg !5607
  call void @llvm.dbg.value(metadata i32 %conv53, metadata !5517, metadata !DIExpression()), !dbg !5530
  %tobool54 = icmp eq %union.tree_node** %scalar_def, null, !dbg !5608
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !5610

if.then55:                                        ; preds = %cond.end45
  %22 = bitcast %union.tree_node** %def to i64*, !dbg !5611
  %23 = load i64, i64* %22, align 8, !dbg !5611
  %24 = bitcast %union.tree_node** %scalar_def to i64*, !dbg !5612
  store i64 %23, i64* %24, align 8, !dbg !5612
  br label %if.end56, !dbg !5613

if.end56:                                         ; preds = %cond.end45, %if.then55
  %call57 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5614
  %tobool58 = icmp eq i8 %call57, 0, !dbg !5614
  br i1 %tobool58, label %if.end61, label %if.then59, !dbg !5616

if.then59:                                        ; preds = %if.end56
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5617
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !5618
  br label %if.end61, !dbg !5618

if.end61:                                         ; preds = %if.end56, %if.then59
  call void @llvm.dbg.value(metadata i32 %conv53, metadata !5523, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5530
  br label %for.cond63, !dbg !5619

for.cond63:                                       ; preds = %for.body66, %if.end61
  %t.1 = phi %union.tree_node* [ null, %if.end61 ], [ %call67, %for.body66 ], !dbg !5530
  %i.1.in = phi i32 [ %conv53, %if.end61 ], [ %i.1, %for.body66 ]
  %i.1 = add i32 %i.1.in, -1, !dbg !5621
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5523, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !5521, metadata !DIExpression()), !dbg !5530
  %cmp64 = icmp sgt i32 %i.1, -1, !dbg !5622
  br i1 %cmp64, label %for.body66, label %for.end70, !dbg !5624

for.body66:                                       ; preds = %for.cond63
  %26 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !5522, metadata !DIExpression()), !dbg !5530
  %call67 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %26, %union.tree_node* %t.1) #6, !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !5521, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5523, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5530
  br label %for.cond63, !dbg !5627, !llvm.loop !5628

for.end70:                                        ; preds = %for.cond63
  %t.1.lcssa = phi %union.tree_node* [ %t.1, %for.cond63 ], !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1.lcssa, metadata !5521, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1.lcssa, metadata !5521, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1.lcssa, metadata !5521, metadata !DIExpression()), !dbg !5530
  %call71 = call %union.tree_node* @build_constructor_from_list(%union.tree_node* %call41, %union.tree_node* %t.1.lcssa) #6, !dbg !5630
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !5519, metadata !DIExpression()), !dbg !5530
  %call72 = call %union.tree_node* @vect_init_vector(%union.gimple_statement_d* %stmt, %union.tree_node* %call71, %union.tree_node* %call41, %struct.gimple_stmt_iterator* null) #8, !dbg !5631
  br label %cleanup, !dbg !5632

sw.bb73:                                          ; preds = %if.end18
  %tobool74 = icmp eq %union.tree_node** %scalar_def, null, !dbg !5633
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !5636

if.then75:                                        ; preds = %sw.bb73
  store %union.tree_node* null, %union.tree_node** %scalar_def, align 8, !dbg !5637
  br label %if.end76, !dbg !5638

if.end76:                                         ; preds = %sw.bb73, %if.then75
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5639
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %27, metadata !5513, metadata !DIExpression()), !dbg !5530
  %call77 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %27) #8, !dbg !5640
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call77, metadata !5514, metadata !DIExpression()), !dbg !5530
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call77, i64 0, i32 6, !dbg !5641
  %28 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !5641
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %28, metadata !5512, metadata !DIExpression()), !dbg !5530
  %tobool78 = icmp eq %union.gimple_statement_d* %28, null, !dbg !5642
  br i1 %tobool78, label %cond.true79, label %cond.end81, !dbg !5642

cond.true79:                                      ; preds = %if.end76
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 986, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5642
  br label %cond.end81, !dbg !5642

cond.end81:                                       ; preds = %if.end76, %cond.true79
  %call83 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %28) #8, !dbg !5643
  %cmp84 = icmp eq i32 %call83, 16, !dbg !5645
  br i1 %cmp84, label %if.then86, label %if.else, !dbg !5646

if.then86:                                        ; preds = %cond.end81
  %call87 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %28) #8, !dbg !5647
  %call88 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call87) #8, !dbg !5647
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !5511, metadata !DIExpression()), !dbg !5530
  br label %cleanup, !dbg !5648

if.else:                                          ; preds = %cond.end81
  %call89 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %28) #8, !dbg !5649
  %tobool90 = icmp eq i8 %call89, 0, !dbg !5649
  br i1 %tobool90, label %if.else93, label %if.then91, !dbg !5651

if.then91:                                        ; preds = %if.else
  %call92 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %28) #8, !dbg !5652
  call void @llvm.dbg.value(metadata %union.tree_node* %call92, metadata !5511, metadata !DIExpression()), !dbg !5530
  br label %cleanup, !dbg !5653

if.else93:                                        ; preds = %if.else
  %call94 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %28) #8, !dbg !5654
  call void @llvm.dbg.value(metadata %union.tree_node* %call94, metadata !5511, metadata !DIExpression()), !dbg !5530
  br label %cleanup

sw.bb97:                                          ; preds = %if.end18, %if.end18, %if.end18
  %29 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5655
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %29, metadata !5513, metadata !DIExpression()), !dbg !5530
  %call98 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %29) #8, !dbg !5655
  %cmp99 = icmp eq i32 %call98, 16, !dbg !5655
  br i1 %cmp99, label %cond.end103, label %cond.true101, !dbg !5655

cond.true101:                                     ; preds = %sw.bb97
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1003, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5655
  br label %cond.end103, !dbg !5655

cond.end103:                                      ; preds = %sw.bb97, %cond.true101
  %30 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5656
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %30, metadata !5513, metadata !DIExpression()), !dbg !5530
  %call105 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %30) #8, !dbg !5657
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call105, i64 0, i32 3, !dbg !5658
  %31 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5658
  call void @llvm.dbg.value(metadata %struct.loop* %31, metadata !5527, metadata !DIExpression()), !dbg !5659
  %32 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5660
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %32, metadata !5513, metadata !DIExpression()), !dbg !5530
  %call106 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %31) #6, !dbg !5660
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call106, i64 0, i32 6, !dbg !5660
  %33 = load i32, i32* %dest_idx, align 4, !dbg !5660
  %call107 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %32, i32 %33) #8, !dbg !5660
  %call108 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call107) #8, !dbg !5660
  call void @llvm.dbg.value(metadata %union.tree_node* %call108, metadata !5508, metadata !DIExpression()), !dbg !5530
  %call109 = call %union.tree_node* @get_initial_def_for_reduction(%union.gimple_statement_d* %stmt, %union.tree_node* %call108, %union.tree_node** %scalar_def) #6, !dbg !5661
  br label %cleanup

sw.bb110:                                         ; preds = %if.end18
  %34 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5662
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %34, metadata !5513, metadata !DIExpression()), !dbg !5530
  %call111 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %34) #8, !dbg !5662
  %cmp112 = icmp eq i32 %call111, 16, !dbg !5662
  br i1 %cmp112, label %cond.end116, label %cond.true114, !dbg !5662

cond.true114:                                     ; preds = %sw.bb110
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5662
  br label %cond.end116, !dbg !5662

cond.end116:                                      ; preds = %sw.bb110, %cond.true114
  %35 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5664
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %35, metadata !5513, metadata !DIExpression()), !dbg !5530
  %call118 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %35) #8, !dbg !5665
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call118, metadata !5514, metadata !DIExpression()), !dbg !5530
  %vectorized_stmt119 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call118, i64 0, i32 6, !dbg !5666
  %36 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vectorized_stmt119, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %36, metadata !5512, metadata !DIExpression()), !dbg !5530
  %tobool120 = icmp eq %union.gimple_statement_d* %36, null, !dbg !5667
  br i1 %tobool120, label %cond.true124, label %land.lhs.true, !dbg !5667

land.lhs.true:                                    ; preds = %cond.end116
  %call121 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %36) #8, !dbg !5667
  %cmp122 = icmp eq i32 %call121, 16, !dbg !5667
  br i1 %cmp122, label %cond.end126, label %cond.true124, !dbg !5667

cond.true124:                                     ; preds = %cond.end116, %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1019, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5667
  br label %cond.end126, !dbg !5667

cond.end126:                                      ; preds = %land.lhs.true, %cond.true124
  %call128 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %36) #8, !dbg !5668
  %call129 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call128) #8, !dbg !5668
  call void @llvm.dbg.value(metadata %union.tree_node* %call129, metadata !5511, metadata !DIExpression()), !dbg !5530
  br label %cleanup, !dbg !5669

sw.default:                                       ; preds = %if.end18
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1025, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5670
  br label %cleanup, !dbg !5671

cleanup:                                          ; preds = %if.then86, %if.else93, %if.then91, %sw.default, %cond.end126, %cond.end103, %for.end70, %for.end
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %call129, %cond.end126 ], [ %call109, %cond.end103 ], [ %call72, %for.end70 ], [ %call37, %for.end ], [ %call88, %if.then86 ], [ %call92, %if.then91 ], [ %call94, %if.else93 ], !dbg !5530
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7, !dbg !5672
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !5672
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5672
  ret %union.tree_node* %retval.0, !dbg !5672
}

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vect_is_simple_use(%union.tree_node* %operand, %struct._loop_vec_info* %loop_vinfo, %struct._bb_vec_info* %bb_vinfo, %union.gimple_statement_d** %def_stmt, %union.tree_node** %def, i32* %dt) local_unnamed_addr #5 !dbg !5673 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %operand, metadata !5677, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !5678, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %bb_vinfo, metadata !5679, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !5680, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5681, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32* %dt, metadata !5682, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata %struct.loop* null, metadata !5685, metadata !DIExpression()), !dbg !5686
  %tobool = icmp eq %struct._loop_vec_info* %loop_vinfo, null, !dbg !5687
  br i1 %tobool, label %if.end, label %if.then, !dbg !5689

if.then:                                          ; preds = %entry
  %loop1 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %loop_vinfo, i64 0, i32 0, !dbg !5690
  %0 = load %struct.loop*, %struct.loop** %loop1, align 8, !dbg !5690
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !5685, metadata !DIExpression()), !dbg !5686
  br label %if.end, !dbg !5691

if.end:                                           ; preds = %entry, %if.then
  %loop.0 = phi %struct.loop* [ %0, %if.then ], [ null, %entry ], !dbg !5686
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !5685, metadata !DIExpression()), !dbg !5686
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5692
  store %union.tree_node* null, %union.tree_node** %def, align 8, !dbg !5693
  %call = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5694
  %tobool2 = icmp eq i8 %call, 0, !dbg !5694
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !5696

if.then3:                                         ; preds = %if.end
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5697
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !5699
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5700
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %operand, i32 2) #6, !dbg !5701
  br label %if.end5, !dbg !5702

if.end5:                                          ; preds = %if.end, %if.then3
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %operand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5703
  %bf.load = load i64, i64* %3, align 8, !dbg !5703
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !5705
  %cmp = icmp eq i64 %bf.cast3, 23, !dbg !5705
  br i1 %cmp, label %if.then11, label %lor.lhs.false, !dbg !5706

lor.lhs.false:                                    ; preds = %if.end5
  %cmp10 = icmp eq i64 %bf.cast3, 24, !dbg !5707
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5708

if.then11:                                        ; preds = %lor.lhs.false, %if.end5
  store i32 1, i32* %dt, align 4, !dbg !5709
  br label %cleanup, !dbg !5711

if.end12:                                         ; preds = %lor.lhs.false
  %call13 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %operand) #6, !dbg !5712
  %tobool14 = icmp eq i8 %call13, 0, !dbg !5712
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !5714

if.then15:                                        ; preds = %if.end12
  store %union.tree_node* %operand, %union.tree_node** %def, align 8, !dbg !5715
  store i32 2, i32* %dt, align 4, !dbg !5717
  br label %cleanup, !dbg !5718

if.end16:                                         ; preds = %if.end12
  %bf.load18 = load i64, i64* %3, align 8, !dbg !5719
  %bf.cast205 = and i64 %bf.load18, 65535, !dbg !5721
  %cmp21 = icmp eq i64 %bf.cast205, 112, !dbg !5721
  br i1 %cmp21, label %if.then22, label %if.end28, !dbg !5722

if.then22:                                        ; preds = %if.end16
  %call23 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5723
  %tobool24 = icmp eq i8 %call23, 0, !dbg !5723
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !5726

if.then25:                                        ; preds = %if.then22
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5727
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !5728
  br label %if.end27, !dbg !5728

if.end27:                                         ; preds = %if.then22, %if.then25
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %operand, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5729
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5729
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5677, metadata !DIExpression()), !dbg !5686
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5730
  %bf.load30.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !5732
  br label %if.end28, !dbg !5733

if.end28:                                         ; preds = %if.end27, %if.end16
  %bf.load30 = phi i64 [ %bf.load30.pre, %if.end27 ], [ %bf.load18, %if.end16 ], !dbg !5732
  %operand.addr.0 = phi %union.tree_node* [ %5, %if.end27 ], [ %operand, %if.end16 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %operand.addr.0, metadata !5677, metadata !DIExpression()), !dbg !5686
  %bf.cast326 = and i64 %bf.load30, 65535, !dbg !5734
  %cmp33 = icmp eq i64 %bf.cast326, 141, !dbg !5734
  br i1 %cmp33, label %if.end40, label %if.then34, !dbg !5735

if.then34:                                        ; preds = %if.end28
  %call35 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5736
  %tobool36 = icmp eq i8 %call35, 0, !dbg !5736
  br i1 %tobool36, label %cleanup, label %if.then37, !dbg !5739

if.then37:                                        ; preds = %if.then34
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5740
  %call38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !5741
  br label %cleanup, !dbg !5741

if.end40:                                         ; preds = %if.end28
  %def_stmt41 = getelementptr inbounds %union.tree_node, %union.tree_node* %operand.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5742
  %7 = bitcast %union.tree_node** %def_stmt41 to i64*, !dbg !5742
  %8 = load i64, i64* %7, align 8, !dbg !5742
  %9 = bitcast %union.gimple_statement_d** %def_stmt to i64*, !dbg !5743
  store i64 %8, i64* %9, align 8, !dbg !5743
  %cmp42 = icmp eq i64 %8, 0, !dbg !5744
  %call44 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5686
  %tobool45 = icmp ne i8 %call44, 0, !dbg !5686
  br i1 %cmp42, label %if.then43, label %if.end49, !dbg !5746

if.then43:                                        ; preds = %if.end40
  br i1 %tobool45, label %if.then46, label %cleanup, !dbg !5747

if.then46:                                        ; preds = %if.then43
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5749
  %call47 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !5751
  br label %cleanup, !dbg !5751

if.end49:                                         ; preds = %if.end40
  br i1 %tobool45, label %if.then52, label %if.end54, !dbg !5752

if.then52:                                        ; preds = %if.end49
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5753
  %call53 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !5756
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5757
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5758
  tail call void @print_gimple_stmt(%struct._IO_FILE* %12, %union.gimple_statement_d* %13, i32 0, i32 2) #6, !dbg !5759
  br label %if.end54, !dbg !5760

if.end54:                                         ; preds = %if.then52, %if.end49
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5761
  %call55 = tail call fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %14) #8, !dbg !5763
  %tobool56 = icmp eq i8 %call55, 0, !dbg !5763
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !5764

if.then57:                                        ; preds = %if.end54
  store %union.tree_node* %operand.addr.0, %union.tree_node** %def, align 8, !dbg !5765
  store i32 2, i32* %dt, align 4, !dbg !5767
  br label %cleanup, !dbg !5768

if.end58:                                         ; preds = %if.end54
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5769
  %call59 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %15) #8, !dbg !5770
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call59, metadata !5683, metadata !DIExpression()), !dbg !5686
  %cond = icmp eq %struct.loop* %loop.0, null, !dbg !5771
  br i1 %cond, label %land.lhs.true65, label %land.lhs.true, !dbg !5771

land.lhs.true:                                    ; preds = %if.end58
  %call61 = tail call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* nonnull %loop.0, %struct.basic_block_def* %call59) #6, !dbg !5773
  %tobool62 = icmp eq i8 %call61, 0, !dbg !5773
  br i1 %tobool62, label %if.then73, label %lor.lhs.false63, !dbg !5774

lor.lhs.false63:                                  ; preds = %land.lhs.true
  br label %if.else, !dbg !5775

land.lhs.true65:                                  ; preds = %if.end58
  %bb66 = getelementptr inbounds %struct._bb_vec_info, %struct._bb_vec_info* %bb_vinfo, i64 0, i32 0, !dbg !5776
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb66, align 8, !dbg !5776
  %cmp67 = icmp eq %struct.basic_block_def* %call59, %16, !dbg !5777
  br i1 %cmp67, label %lor.lhs.false68, label %if.then73, !dbg !5778

lor.lhs.false68:                                  ; preds = %land.lhs.true65
  br i1 true, label %land.lhs.true70, label %lor.lhs.false68.if.else_crit_edge, !dbg !5779

lor.lhs.false68.if.else_crit_edge:                ; preds = %lor.lhs.false68
  br label %if.else, !dbg !5779

land.lhs.true70:                                  ; preds = %lor.lhs.false68
  %17 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5780
  %call71 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %17) #8, !dbg !5781
  %cmp72 = icmp eq i32 %call71, 16, !dbg !5782
  br i1 %cmp72, label %if.then73, label %if.else, !dbg !5783

if.then73:                                        ; preds = %land.lhs.true65, %land.lhs.true, %land.lhs.true70
  br label %if.end75, !dbg !5784

if.else:                                          ; preds = %lor.lhs.false68.if.else_crit_edge, %lor.lhs.false63, %land.lhs.true70
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5785
  %call74 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %18) #8, !dbg !5787
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call74, metadata !5684, metadata !DIExpression()), !dbg !5686
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call74, i64 0, i32 16, !dbg !5788
  %19 = load i32, i32* %def_type, align 8, !dbg !5788
  br label %if.end75

if.end75:                                         ; preds = %if.else, %if.then73
  %storemerge = phi i32 [ 2, %if.then73 ], [ %19, %if.else ], !dbg !5789
  store i32 %storemerge, i32* %dt, align 4, !dbg !5789
  %cmp76 = icmp eq i32 %storemerge, 8, !dbg !5790
  %call78 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5686
  %tobool79 = icmp ne i8 %call78, 0, !dbg !5686
  br i1 %cmp76, label %if.then77, label %if.end83, !dbg !5792

if.then77:                                        ; preds = %if.end75
  br i1 %tobool79, label %if.then80, label %cleanup, !dbg !5793

if.then80:                                        ; preds = %if.then77
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5795
  %call81 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !5797
  br label %cleanup, !dbg !5797

if.end83:                                         ; preds = %if.end75
  br i1 %tobool79, label %if.then86, label %if.end88, !dbg !5798

if.then86:                                        ; preds = %if.end83
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5799
  %22 = load i32, i32* %dt, align 4, !dbg !5801
  %call87 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i64 0, i64 0), i32 %22) #6, !dbg !5802
  br label %if.end88, !dbg !5802

if.end88:                                         ; preds = %if.then86, %if.end83
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5803
  %call89 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %23) #8, !dbg !5804
  switch i32 %call89, label %sw.default [
    i32 16, label %sw.bb
    i32 6, label %sw.bb91
    i32 8, label %sw.bb93
  ], !dbg !5805

sw.bb:                                            ; preds = %if.end88
  %24 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5806
  %call90 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %24) #8, !dbg !5808
  store %union.tree_node* %call90, %union.tree_node** %def, align 8, !dbg !5809
  br label %cleanup, !dbg !5810

sw.bb91:                                          ; preds = %if.end88
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5811
  %call92 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %25) #8, !dbg !5812
  store %union.tree_node* %call92, %union.tree_node** %def, align 8, !dbg !5813
  br label %cleanup, !dbg !5814

sw.bb93:                                          ; preds = %if.end88
  %26 = load %union.gimple_statement_d*, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5815
  %call94 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %26) #8, !dbg !5816
  store %union.tree_node* %call94, %union.tree_node** %def, align 8, !dbg !5817
  %cmp95 = icmp eq %union.tree_node* %call94, null, !dbg !5818
  br i1 %cmp95, label %sw.default, label %cleanup, !dbg !5820

sw.default:                                       ; preds = %sw.bb93, %if.end88
  %call98 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5821
  %tobool99 = icmp eq i8 %call98, 0, !dbg !5821
  br i1 %tobool99, label %cleanup, label %if.then100, !dbg !5823

if.then100:                                       ; preds = %sw.default
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5824
  %call101 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !5825
  br label %cleanup, !dbg !5825

cleanup:                                          ; preds = %if.then34, %sw.default, %sw.bb93, %sw.bb, %sw.bb91, %if.then100, %if.then77, %if.then80, %if.then43, %if.then46, %if.then37, %if.then57, %if.then15, %if.then11
  %retval.0 = phi i8 [ 1, %if.then11 ], [ 1, %if.then15 ], [ 1, %if.then57 ], [ 0, %if.then37 ], [ 0, %if.then34 ], [ 0, %if.then46 ], [ 0, %if.then43 ], [ 0, %if.then80 ], [ 0, %if.then77 ], [ 0, %if.then100 ], [ 0, %sw.default ], [ 1, %sw.bb93 ], [ 1, %sw.bb91 ], [ 1, %sw.bb ], !dbg !5686
  ret i8 %retval.0, !dbg !5826
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %scalar_type) local_unnamed_addr #5 !dbg !5827 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %scalar_type, metadata !5831, metadata !DIExpression()), !dbg !5836
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %scalar_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5837
  %bf.load = load i64, i64* %0, align 8, !dbg !5837
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5837
  %cmp = icmp eq i64 %bf.cast2, 14, !dbg !5837
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5837

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %scalar_type) #6, !dbg !5837
  br label %cond.end, !dbg !5837

cond.false:                                       ; preds = %entry
  %type = bitcast %union.tree_node* %scalar_type to %struct.tree_type*, !dbg !5837
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !5837
  %bf.load1 = load i32, i32* %mode, align 4, !dbg !5837
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !5837
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !5837
  br label %cond.end, !dbg !5837

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear2, %cond.false ], !dbg !5837
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5832, metadata !DIExpression()), !dbg !5836
  %idxprom = zext i32 %cond to i64, !dbg !5838
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5838
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5838
  %conv3 = zext i8 %1 to i32, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %conv3, metadata !5833, metadata !DIExpression()), !dbg !5836
  %cmp4 = icmp eq i8 %1, 0, !dbg !5839
  br i1 %cmp4, label %cleanup, label %lor.lhs.false, !dbg !5841

lor.lhs.false:                                    ; preds = %cond.end
  %2 = load i32, i32* @ix86_isa_flags, align 4, !dbg !5842
  %and = and i32 %2, 32, !dbg !5842
  %cmp6 = icmp eq i32 %and, 0, !dbg !5842
  br i1 %cmp6, label %cond.false14, label %cond.true8, !dbg !5842

cond.true8:                                       ; preds = %lor.lhs.false
  br label %cond.end19, !dbg !5842

cond.false14:                                     ; preds = %lor.lhs.false
  %and15 = and i32 %2, 65536, !dbg !5842
  %cmp16 = icmp eq i32 %and15, 0, !dbg !5842
  %cond18 = select i1 %cmp16, i32 4, i32 16, !dbg !5842
  br label %cond.end19, !dbg !5842

cond.end19:                                       ; preds = %cond.false14, %cond.true8
  %cond20 = phi i32 [ 16, %cond.true8 ], [ %cond18, %cond.false14 ], !dbg !5842
  %cmp21 = icmp ugt i32 %cond20, %conv3, !dbg !5843
  br i1 %cmp21, label %if.end, label %cleanup, !dbg !5844

if.end:                                           ; preds = %cond.end19
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %scalar_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5845
  %4 = load i32, i32* %3, align 8, !dbg !5845
  %div = lshr i32 %4, 3, !dbg !5845
  %cmp24 = icmp ugt i32 %div, %conv3, !dbg !5847
  br i1 %cmp24, label %cleanup, label %if.end27, !dbg !5848

if.end27:                                         ; preds = %if.end
  %bf.load29 = load i64, i64* %0, align 8, !dbg !5849
  %bf.cast313 = and i64 %bf.load29, 65535, !dbg !5849
  %cmp32 = icmp eq i64 %bf.cast313, 6, !dbg !5849
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false34, !dbg !5849

lor.lhs.false34:                                  ; preds = %if.end27
  %cmp39 = icmp eq i64 %bf.cast313, 7, !dbg !5849
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false41, !dbg !5849

lor.lhs.false41:                                  ; preds = %lor.lhs.false34
  %cmp46 = icmp eq i64 %bf.cast313, 8, !dbg !5849
  br i1 %cmp46, label %land.lhs.true, label %if.end60, !dbg !5851

land.lhs.true:                                    ; preds = %lor.lhs.false41, %lor.lhs.false34, %if.end27
  %mul = shl nuw nsw i32 %conv3, 3, !dbg !5852
  %type54 = bitcast %union.tree_node* %scalar_type to %struct.tree_type*, !dbg !5853
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type54, i64 0, i32 6, !dbg !5853
  %bf.load55 = load i32, i32* %precision, align 4, !dbg !5853
  %bf.clear56 = and i32 %bf.load55, 1023, !dbg !5853
  %cmp57 = icmp eq i32 %mul, %bf.clear56, !dbg !5854
  br i1 %cmp57, label %if.end60, label %cleanup, !dbg !5855

if.end60:                                         ; preds = %land.lhs.true, %lor.lhs.false41
  br i1 %cmp6, label %cond.false72, label %cond.true64, !dbg !5856

cond.true64:                                      ; preds = %if.end60
  br label %cond.end77, !dbg !5856

cond.false72:                                     ; preds = %if.end60
  %and73 = and i32 %2, 65536, !dbg !5856
  %cmp74 = icmp eq i32 %and73, 0, !dbg !5856
  %cond76 = select i1 %cmp74, i32 4, i32 16, !dbg !5856
  br label %cond.end77, !dbg !5856

cond.end77:                                       ; preds = %cond.false72, %cond.true64
  %cond78 = phi i32 [ 16, %cond.true64 ], [ %cond76, %cond.false72 ], !dbg !5856
  %div79 = udiv i32 %cond78, %conv3, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %div79, metadata !5834, metadata !DIExpression()), !dbg !5836
  %call80 = tail call %union.tree_node* @build_vector_type(%union.tree_node* %scalar_type, i32 %div79) #6, !dbg !5858
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !5835, metadata !DIExpression()), !dbg !5836
  %call81 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5859
  %tobool = icmp eq i8 %call81, 0, !dbg !5859
  br i1 %tobool, label %if.end84, label %if.then82, !dbg !5861

if.then82:                                        ; preds = %cond.end77
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5862
  %call83 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.38, i64 0, i64 0), i32 %div79) #6, !dbg !5864
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5865
  tail call void @print_generic_expr(%struct._IO_FILE* %6, %union.tree_node* %scalar_type, i32 2) #6, !dbg !5866
  br label %if.end84, !dbg !5867

if.end84:                                         ; preds = %cond.end77, %if.then82
  %tobool85 = icmp eq %union.tree_node* %call80, null, !dbg !5868
  br i1 %tobool85, label %cleanup, label %if.end87, !dbg !5870

if.end87:                                         ; preds = %if.end84
  %call88 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5871
  %tobool89 = icmp eq i8 %call88, 0, !dbg !5871
  br i1 %tobool89, label %if.end92, label %if.then90, !dbg !5873

if.then90:                                        ; preds = %if.end87
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5874
  %call91 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !5876
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5877
  tail call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* %call80, i32 2) #6, !dbg !5878
  br label %if.end92, !dbg !5879

if.end92:                                         ; preds = %if.end87, %if.then90
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5880
  %bf.load94 = load i64, i64* %9, align 8, !dbg !5880
  %bf.cast966 = and i64 %bf.load94, 65535, !dbg !5880
  %cmp97 = icmp eq i64 %bf.cast966, 14, !dbg !5880
  br i1 %cmp97, label %cond.true99, label %cond.false101, !dbg !5880

cond.true99:                                      ; preds = %if.end92
  %call100 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5880
  br label %cond.end107, !dbg !5880

cond.false101:                                    ; preds = %if.end92
  %type102 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5880
  %mode103 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type102, i64 0, i32 6, !dbg !5880
  %bf.load104 = load i32, i32* %mode103, align 4, !dbg !5880
  %bf.lshr105 = lshr i32 %bf.load104, 16, !dbg !5880
  %bf.clear106 = and i32 %bf.lshr105, 255, !dbg !5880
  br label %cond.end107, !dbg !5880

cond.end107:                                      ; preds = %cond.false101, %cond.true99
  %cond108 = phi i32 [ %call100, %cond.true99 ], [ %bf.clear106, %cond.false101 ], !dbg !5880
  %idxprom109 = zext i32 %cond108 to i64, !dbg !5880
  %arrayidx110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom109, !dbg !5880
  %10 = load i8, i8* %arrayidx110, align 1, !dbg !5880
  %cmp112 = icmp eq i8 %10, 12, !dbg !5880
  br i1 %cmp112, label %cleanup, label %lor.lhs.false114, !dbg !5880

lor.lhs.false114:                                 ; preds = %cond.end107
  %bf.load116 = load i64, i64* %9, align 8, !dbg !5880
  %bf.cast1187 = and i64 %bf.load116, 65535, !dbg !5880
  %cmp119 = icmp eq i64 %bf.cast1187, 14, !dbg !5880
  br i1 %cmp119, label %cond.true121, label %cond.false123, !dbg !5880

cond.true121:                                     ; preds = %lor.lhs.false114
  %call122 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5880
  br label %cond.end129, !dbg !5880

cond.false123:                                    ; preds = %lor.lhs.false114
  %type124 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5880
  %mode125 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type124, i64 0, i32 6, !dbg !5880
  %bf.load126 = load i32, i32* %mode125, align 4, !dbg !5880
  %bf.lshr127 = lshr i32 %bf.load126, 16, !dbg !5880
  %bf.clear128 = and i32 %bf.lshr127, 255, !dbg !5880
  br label %cond.end129, !dbg !5880

cond.end129:                                      ; preds = %cond.false123, %cond.true121
  %cond130 = phi i32 [ %call122, %cond.true121 ], [ %bf.clear128, %cond.false123 ], !dbg !5880
  %idxprom131 = zext i32 %cond130 to i64, !dbg !5880
  %arrayidx132 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom131, !dbg !5880
  %11 = load i8, i8* %arrayidx132, align 1, !dbg !5880
  %cmp134 = icmp eq i8 %11, 17, !dbg !5880
  br i1 %cmp134, label %cleanup, label %lor.lhs.false136, !dbg !5880

lor.lhs.false136:                                 ; preds = %cond.end129
  %bf.load138 = load i64, i64* %9, align 8, !dbg !5880
  %bf.cast1408 = and i64 %bf.load138, 65535, !dbg !5880
  %cmp141 = icmp eq i64 %bf.cast1408, 14, !dbg !5880
  br i1 %cmp141, label %cond.true143, label %cond.false145, !dbg !5880

cond.true143:                                     ; preds = %lor.lhs.false136
  %call144 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5880
  br label %cond.end151, !dbg !5880

cond.false145:                                    ; preds = %lor.lhs.false136
  %type146 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5880
  %mode147 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type146, i64 0, i32 6, !dbg !5880
  %bf.load148 = load i32, i32* %mode147, align 4, !dbg !5880
  %bf.lshr149 = lshr i32 %bf.load148, 16, !dbg !5880
  %bf.clear150 = and i32 %bf.lshr149, 255, !dbg !5880
  br label %cond.end151, !dbg !5880

cond.end151:                                      ; preds = %cond.false145, %cond.true143
  %cond152 = phi i32 [ %call144, %cond.true143 ], [ %bf.clear150, %cond.false145 ], !dbg !5880
  %idxprom153 = zext i32 %cond152 to i64, !dbg !5880
  %arrayidx154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom153, !dbg !5880
  %12 = load i8, i8* %arrayidx154, align 1, !dbg !5880
  %cmp156 = icmp eq i8 %12, 13, !dbg !5880
  br i1 %cmp156, label %cleanup, label %lor.lhs.false158, !dbg !5880

lor.lhs.false158:                                 ; preds = %cond.end151
  %bf.load160 = load i64, i64* %9, align 8, !dbg !5880
  %bf.cast1629 = and i64 %bf.load160, 65535, !dbg !5880
  %cmp163 = icmp eq i64 %bf.cast1629, 14, !dbg !5880
  br i1 %cmp163, label %cond.true165, label %cond.false167, !dbg !5880

cond.true165:                                     ; preds = %lor.lhs.false158
  %call166 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5880
  br label %cond.end173, !dbg !5880

cond.false167:                                    ; preds = %lor.lhs.false158
  %type168 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5880
  %mode169 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type168, i64 0, i32 6, !dbg !5880
  %bf.load170 = load i32, i32* %mode169, align 4, !dbg !5880
  %bf.lshr171 = lshr i32 %bf.load170, 16, !dbg !5880
  %bf.clear172 = and i32 %bf.lshr171, 255, !dbg !5880
  br label %cond.end173, !dbg !5880

cond.end173:                                      ; preds = %cond.false167, %cond.true165
  %cond174 = phi i32 [ %call166, %cond.true165 ], [ %bf.clear172, %cond.false167 ], !dbg !5880
  %idxprom175 = zext i32 %cond174 to i64, !dbg !5880
  %arrayidx176 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom175, !dbg !5880
  %13 = load i8, i8* %arrayidx176, align 1, !dbg !5880
  %cmp178 = icmp eq i8 %13, 14, !dbg !5880
  br i1 %cmp178, label %cleanup, label %lor.lhs.false180, !dbg !5880

lor.lhs.false180:                                 ; preds = %cond.end173
  %bf.load182 = load i64, i64* %9, align 8, !dbg !5880
  %bf.cast18410 = and i64 %bf.load182, 65535, !dbg !5880
  %cmp185 = icmp eq i64 %bf.cast18410, 14, !dbg !5880
  br i1 %cmp185, label %cond.true187, label %cond.false189, !dbg !5880

cond.true187:                                     ; preds = %lor.lhs.false180
  %call188 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5880
  br label %cond.end195, !dbg !5880

cond.false189:                                    ; preds = %lor.lhs.false180
  %type190 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5880
  %mode191 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type190, i64 0, i32 6, !dbg !5880
  %bf.load192 = load i32, i32* %mode191, align 4, !dbg !5880
  %bf.lshr193 = lshr i32 %bf.load192, 16, !dbg !5880
  %bf.clear194 = and i32 %bf.lshr193, 255, !dbg !5880
  br label %cond.end195, !dbg !5880

cond.end195:                                      ; preds = %cond.false189, %cond.true187
  %cond196 = phi i32 [ %call188, %cond.true187 ], [ %bf.clear194, %cond.false189 ], !dbg !5880
  %idxprom197 = zext i32 %cond196 to i64, !dbg !5880
  %arrayidx198 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom197, !dbg !5880
  %14 = load i8, i8* %arrayidx198, align 1, !dbg !5880
  %cmp200 = icmp eq i8 %14, 15, !dbg !5880
  br i1 %cmp200, label %cleanup, label %lor.lhs.false202, !dbg !5880

lor.lhs.false202:                                 ; preds = %cond.end195
  %bf.load204 = load i64, i64* %9, align 8, !dbg !5880
  %bf.cast20611 = and i64 %bf.load204, 65535, !dbg !5880
  %cmp207 = icmp eq i64 %bf.cast20611, 14, !dbg !5880
  br i1 %cmp207, label %cond.true209, label %cond.false211, !dbg !5880

cond.true209:                                     ; preds = %lor.lhs.false202
  %call210 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5880
  br label %cond.end217, !dbg !5880

cond.false211:                                    ; preds = %lor.lhs.false202
  %type212 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5880
  %mode213 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type212, i64 0, i32 6, !dbg !5880
  %bf.load214 = load i32, i32* %mode213, align 4, !dbg !5880
  %bf.lshr215 = lshr i32 %bf.load214, 16, !dbg !5880
  %bf.clear216 = and i32 %bf.lshr215, 255, !dbg !5880
  br label %cond.end217, !dbg !5880

cond.end217:                                      ; preds = %cond.false211, %cond.true209
  %cond218 = phi i32 [ %call210, %cond.true209 ], [ %bf.clear216, %cond.false211 ], !dbg !5880
  %idxprom219 = zext i32 %cond218 to i64, !dbg !5880
  %arrayidx220 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom219, !dbg !5880
  %15 = load i8, i8* %arrayidx220, align 1, !dbg !5880
  %cmp222 = icmp eq i8 %15, 16, !dbg !5880
  br i1 %cmp222, label %cleanup, label %land.lhs.true224, !dbg !5882

land.lhs.true224:                                 ; preds = %cond.end217
  %bf.load226 = load i64, i64* %9, align 8, !dbg !5883
  %bf.cast22812 = and i64 %bf.load226, 65535, !dbg !5883
  %cmp229 = icmp eq i64 %bf.cast22812, 14, !dbg !5883
  br i1 %cmp229, label %cond.true231, label %cond.false233, !dbg !5883

cond.true231:                                     ; preds = %land.lhs.true224
  %call232 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5883
  br label %cond.end239, !dbg !5883

cond.false233:                                    ; preds = %land.lhs.true224
  %type234 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5883
  %mode235 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type234, i64 0, i32 6, !dbg !5883
  %bf.load236 = load i32, i32* %mode235, align 4, !dbg !5883
  %bf.lshr237 = lshr i32 %bf.load236, 16, !dbg !5883
  %bf.clear238 = and i32 %bf.lshr237, 255, !dbg !5883
  br label %cond.end239, !dbg !5883

cond.end239:                                      ; preds = %cond.false233, %cond.true231
  %cond240 = phi i32 [ %call232, %cond.true231 ], [ %bf.clear238, %cond.false233 ], !dbg !5883
  %idxprom241 = zext i32 %cond240 to i64, !dbg !5883
  %arrayidx242 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom241, !dbg !5883
  %16 = load i8, i8* %arrayidx242, align 1, !dbg !5883
  %cmp244 = icmp eq i8 %16, 2, !dbg !5883
  br i1 %cmp244, label %cleanup, label %lor.lhs.false246, !dbg !5883

lor.lhs.false246:                                 ; preds = %cond.end239
  %bf.load248 = load i64, i64* %9, align 8, !dbg !5883
  %bf.cast25013 = and i64 %bf.load248, 65535, !dbg !5883
  %cmp251 = icmp eq i64 %bf.cast25013, 14, !dbg !5883
  br i1 %cmp251, label %cond.true253, label %cond.false255, !dbg !5883

cond.true253:                                     ; preds = %lor.lhs.false246
  %call254 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5883
  br label %cond.end261, !dbg !5883

cond.false255:                                    ; preds = %lor.lhs.false246
  %type256 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5883
  %mode257 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type256, i64 0, i32 6, !dbg !5883
  %bf.load258 = load i32, i32* %mode257, align 4, !dbg !5883
  %bf.lshr259 = lshr i32 %bf.load258, 16, !dbg !5883
  %bf.clear260 = and i32 %bf.lshr259, 255, !dbg !5883
  br label %cond.end261, !dbg !5883

cond.end261:                                      ; preds = %cond.false255, %cond.true253
  %cond262 = phi i32 [ %call254, %cond.true253 ], [ %bf.clear260, %cond.false255 ], !dbg !5883
  %idxprom263 = zext i32 %cond262 to i64, !dbg !5883
  %arrayidx264 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom263, !dbg !5883
  %17 = load i8, i8* %arrayidx264, align 1, !dbg !5883
  %cmp266 = icmp eq i8 %17, 3, !dbg !5883
  br i1 %cmp266, label %cleanup, label %lor.lhs.false268, !dbg !5883

lor.lhs.false268:                                 ; preds = %cond.end261
  %bf.load270 = load i64, i64* %9, align 8, !dbg !5883
  %bf.cast27214 = and i64 %bf.load270, 65535, !dbg !5883
  %cmp273 = icmp eq i64 %bf.cast27214, 14, !dbg !5883
  br i1 %cmp273, label %cond.true275, label %cond.false277, !dbg !5883

cond.true275:                                     ; preds = %lor.lhs.false268
  %call276 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5883
  br label %cond.end283, !dbg !5883

cond.false277:                                    ; preds = %lor.lhs.false268
  %type278 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5883
  %mode279 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type278, i64 0, i32 6, !dbg !5883
  %bf.load280 = load i32, i32* %mode279, align 4, !dbg !5883
  %bf.lshr281 = lshr i32 %bf.load280, 16, !dbg !5883
  %bf.clear282 = and i32 %bf.lshr281, 255, !dbg !5883
  br label %cond.end283, !dbg !5883

cond.end283:                                      ; preds = %cond.false277, %cond.true275
  %cond284 = phi i32 [ %call276, %cond.true275 ], [ %bf.clear282, %cond.false277 ], !dbg !5883
  %idxprom285 = zext i32 %cond284 to i64, !dbg !5883
  %arrayidx286 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom285, !dbg !5883
  %18 = load i8, i8* %arrayidx286, align 1, !dbg !5883
  %cmp288 = icmp eq i8 %18, 10, !dbg !5883
  br i1 %cmp288, label %cleanup, label %lor.lhs.false290, !dbg !5883

lor.lhs.false290:                                 ; preds = %cond.end283
  %bf.load292 = load i64, i64* %9, align 8, !dbg !5883
  %bf.cast29415 = and i64 %bf.load292, 65535, !dbg !5883
  %cmp295 = icmp eq i64 %bf.cast29415, 14, !dbg !5883
  br i1 %cmp295, label %cond.true297, label %cond.false299, !dbg !5883

cond.true297:                                     ; preds = %lor.lhs.false290
  %call298 = tail call i32 @vector_type_mode(%union.tree_node* %call80) #6, !dbg !5883
  br label %cond.end305, !dbg !5883

cond.false299:                                    ; preds = %lor.lhs.false290
  %type300 = bitcast %union.tree_node* %call80 to %struct.tree_type*, !dbg !5883
  %mode301 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type300, i64 0, i32 6, !dbg !5883
  %bf.load302 = load i32, i32* %mode301, align 4, !dbg !5883
  %bf.lshr303 = lshr i32 %bf.load302, 16, !dbg !5883
  %bf.clear304 = and i32 %bf.lshr303, 255, !dbg !5883
  br label %cond.end305, !dbg !5883

cond.end305:                                      ; preds = %cond.false299, %cond.true297
  %cond306 = phi i32 [ %call298, %cond.true297 ], [ %bf.clear304, %cond.false299 ], !dbg !5883
  %idxprom307 = zext i32 %cond306 to i64, !dbg !5883
  %arrayidx308 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom307, !dbg !5883
  %19 = load i8, i8* %arrayidx308, align 1, !dbg !5883
  %cmp310 = icmp eq i8 %19, 12, !dbg !5883
  br i1 %cmp310, label %cleanup, label %if.then312, !dbg !5884

if.then312:                                       ; preds = %cond.end305
  %call313 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !5885
  %tobool314 = icmp eq i8 %call313, 0, !dbg !5885
  br i1 %tobool314, label %cleanup, label %if.then315, !dbg !5888

if.then315:                                       ; preds = %if.then312
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !5889
  %call316 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !5890
  br label %cleanup, !dbg !5890

cleanup:                                          ; preds = %land.lhs.true, %if.then312, %if.end84, %cond.end19, %cond.end107, %cond.end129, %cond.end151, %cond.end173, %cond.end195, %cond.end217, %cond.end239, %cond.end261, %cond.end283, %cond.end305, %if.then315, %if.end, %cond.end
  %retval.0 = phi %union.tree_node* [ null, %cond.end19 ], [ null, %cond.end ], [ null, %if.end ], [ null, %land.lhs.true ], [ null, %if.end84 ], [ null, %if.then315 ], [ null, %if.then312 ], [ %call80, %cond.end305 ], [ %call80, %cond.end283 ], [ %call80, %cond.end261 ], [ %call80, %cond.end239 ], [ %call80, %cond.end217 ], [ %call80, %cond.end195 ], [ %call80, %cond.end173 ], [ %call80, %cond.end151 ], [ %call80, %cond.end129 ], [ %call80, %cond.end107 ], !dbg !5836
  ret %union.tree_node* %retval.0, !dbg !5891
}

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_constructor_from_list(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5892 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5896, metadata !DIExpression()), !dbg !5897
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5898
  ret %union.tree_node* %0, !dbg !5899
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5900 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5904, metadata !DIExpression()), !dbg !5905
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5906
  ret %union.tree_node** %result, !dbg !5907
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5908 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5912, metadata !DIExpression()), !dbg !5913
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5914
  %cmp = icmp eq i32 %call, 8, !dbg !5915
  %conv1 = zext i1 %cmp to i8, !dbg !5914
  ret i8 %conv1, !dbg !5916
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5917 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5919, metadata !DIExpression()), !dbg !5920
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !5921
  ret %union.tree_node* %call, !dbg !5922
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5923 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5927, metadata !DIExpression()), !dbg !5928
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5929
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5929
  ret %struct.basic_block_def* %0, !dbg !5930
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5931 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5935, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.value(metadata i32 %i, metadata !5936, metadata !DIExpression()), !dbg !5937
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #8, !dbg !5938
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !5939
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !5940
}

declare dso_local %union.tree_node* @get_initial_def_for_reduction(%union.gimple_statement_d*, %union.tree_node*, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %dt, %union.tree_node* %vec_oprnd) local_unnamed_addr #5 !dbg !5941 {
entry:
  call void @llvm.dbg.value(metadata i32 %dt, metadata !5945, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd, metadata !5946, metadata !DIExpression()), !dbg !5949
  %dt.off = add i32 %dt, -1, !dbg !5950
  %switch = icmp ult i32 %dt.off, 2, !dbg !5950
  br i1 %switch, label %cleanup, label %if.end, !dbg !5950

if.end:                                           ; preds = %entry
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %vec_oprnd, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5952
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5952
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !5952
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5947, metadata !DIExpression()), !dbg !5949
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %1) #8, !dbg !5953
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !5948, metadata !DIExpression()), !dbg !5949
  %tobool = icmp eq %struct._stmt_vec_info* %call, null, !dbg !5954
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5954

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5954
  br label %cond.end, !dbg !5954

cond.end:                                         ; preds = %if.end, %cond.true
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 14, !dbg !5955
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %related_stmt, align 8, !dbg !5955
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !5947, metadata !DIExpression()), !dbg !5949
  %tobool2 = icmp eq %union.gimple_statement_d* %2, null, !dbg !5956
  br i1 %tobool2, label %cond.true3, label %cond.end5, !dbg !5956

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5956
  br label %cond.end5, !dbg !5956

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %call7 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %2) #6, !dbg !5957
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5946, metadata !DIExpression()), !dbg !5949
  %call8 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %2) #8, !dbg !5958
  %cmp9 = icmp eq i32 %call8, 16, !dbg !5960
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !5961

if.then10:                                        ; preds = %cond.end5
  %call11 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %2) #8, !dbg !5962
  %call12 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call11) #8, !dbg !5962
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !5946, metadata !DIExpression()), !dbg !5949
  br label %cleanup, !dbg !5963

if.else:                                          ; preds = %cond.end5
  %call13 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %2) #6, !dbg !5964
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5946, metadata !DIExpression()), !dbg !5949
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.then10, %if.else
  %retval.0 = phi %union.tree_node* [ %vec_oprnd, %entry ], [ %call12, %if.then10 ], [ %call13, %if.else ], !dbg !5949
  ret %union.tree_node* %retval.0, !dbg !5965
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_vinfo_for_stmt(%union.gimple_statement_d* %stmt, %struct._stmt_vec_info* %info) unnamed_addr #0 !dbg !5966 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %info, metadata !5971, metadata !DIExpression()), !dbg !5973
  %call = tail call fastcc i32 @gimple_uid(%union.gimple_statement_d* %stmt) #8, !dbg !5974
  call void @llvm.dbg.value(metadata i32 %call, metadata !5972, metadata !DIExpression()), !dbg !5973
  %cmp = icmp eq i32 %call, 0, !dbg !5975
  br i1 %cmp, label %if.then, label %if.else, !dbg !5977

if.then:                                          ; preds = %entry
  %tobool = icmp eq %struct._stmt_vec_info* %info, null, !dbg !5978
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5978

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0), i32 639, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !5978
  br label %cond.end, !dbg !5978

cond.end:                                         ; preds = %if.then, %cond.true
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !5980
  %base = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %0, i64 0, i32 0, !dbg !5980
  %call6 = tail call fastcc i32 @VEC_vec_void_p_base_length(%struct.VEC_vec_void_p_base* %base) #8, !dbg !5980
  %add = add i32 %call6, 1, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %add, metadata !5972, metadata !DIExpression()), !dbg !5973
  tail call fastcc void @gimple_set_uid(%union.gimple_statement_d* %stmt, i32 %add) #8, !dbg !5982
  %1 = bitcast %struct._stmt_vec_info* %info to i8*, !dbg !5983
  %call7 = tail call fastcc i8** @VEC_vec_void_p_heap_safe_push(%struct.VEC_vec_void_p_heap** nonnull @stmt_vec_info_vec, i8* %1) #8, !dbg !5983
  br label %if.end, !dbg !5984

if.else:                                          ; preds = %entry
  %2 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !5985
  %base10 = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %2, i64 0, i32 0, !dbg !5985
  %sub = add i32 %call, -1, !dbg !5985
  %3 = bitcast %struct._stmt_vec_info* %info to i8*, !dbg !5985
  %call14 = tail call fastcc i8* @VEC_vec_void_p_base_replace(%struct.VEC_vec_void_p_base* %base10, i32 %sub, i8* %3) #8, !dbg !5985
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  ret void, !dbg !5986
}

; Function Attrs: nounwind uwtable
define dso_local %struct._stmt_vec_info* @new_stmt_vec_info(%union.gimple_statement_d* %stmt, %struct._loop_vec_info* %loop_vinfo, %struct._bb_vec_info* %bb_vinfo) local_unnamed_addr #5 !dbg !5987 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5991, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !5992, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %bb_vinfo, metadata !5993, metadata !DIExpression()), !dbg !5995
  %call = tail call i8* @xcalloc(i64 1, i64 192) #6, !dbg !5996
  %0 = bitcast i8* %call to %struct._stmt_vec_info*, !dbg !5997
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %0, metadata !5994, metadata !DIExpression()), !dbg !5995
  %type = bitcast i8* %call to i32*, !dbg !5998
  store i32 0, i32* %type, align 8, !dbg !5999
  %stmt1 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6000
  %1 = bitcast i8* %stmt1 to %union.gimple_statement_d**, !dbg !6000
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %1, align 8, !dbg !6001
  %loop_vinfo2 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !6002
  %2 = bitcast i8* %loop_vinfo2 to %struct._loop_vec_info**, !dbg !6002
  store %struct._loop_vec_info* %loop_vinfo, %struct._loop_vec_info** %2, align 8, !dbg !6003
  %bb_vinfo3 = getelementptr inbounds i8, i8* %call, i64 184, !dbg !6004
  %3 = bitcast i8* %bb_vinfo3 to %struct._bb_vec_info**, !dbg !6004
  store %struct._bb_vec_info* %bb_vinfo, %struct._bb_vec_info** %3, align 8, !dbg !6005
  %relevant = getelementptr inbounds i8, i8* %call, i64 24, !dbg !6006
  %4 = bitcast i8* %relevant to i32*, !dbg !6006
  store i32 0, i32* %4, align 8, !dbg !6007
  %5 = getelementptr inbounds i8, i8* %call, i64 28, !dbg !6008
  store i8 0, i8* %5, align 4, !dbg !6009
  %vectype = getelementptr inbounds i8, i8* %call, i64 32, !dbg !6010
  %6 = bitcast i8* %vectype to %union.tree_node**, !dbg !6010
  store %union.tree_node* null, %union.tree_node** %6, align 8, !dbg !6011
  %vectorized_stmt = getelementptr inbounds i8, i8* %call, i64 40, !dbg !6012
  %7 = bitcast i8* %vectorized_stmt to %union.gimple_statement_d**, !dbg !6012
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %7, align 8, !dbg !6013
  %8 = getelementptr inbounds i8, i8* %call, i64 96, !dbg !6014
  store i8 0, i8* %8, align 8, !dbg !6015
  %related_stmt = getelementptr inbounds i8, i8* %call, i64 104, !dbg !6016
  %9 = bitcast i8* %related_stmt to %union.gimple_statement_d**, !dbg !6016
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %9, align 8, !dbg !6017
  %data_ref_info = getelementptr inbounds i8, i8* %call, i64 48, !dbg !6018
  %10 = bitcast i8* %data_ref_info to %struct.data_reference**, !dbg !6018
  store %struct.data_reference* null, %struct.data_reference** %10, align 8, !dbg !6019
  %dr_base_address = getelementptr inbounds i8, i8* %call, i64 56, !dbg !6020
  %11 = bitcast i8* %dr_base_address to %union.tree_node**, !dbg !6020
  store %union.tree_node* null, %union.tree_node** %11, align 8, !dbg !6021
  %dr_offset = getelementptr inbounds i8, i8* %call, i64 72, !dbg !6022
  %12 = bitcast i8* %dr_offset to %union.tree_node**, !dbg !6022
  store %union.tree_node* null, %union.tree_node** %12, align 8, !dbg !6023
  %dr_init = getelementptr inbounds i8, i8* %call, i64 64, !dbg !6024
  %13 = bitcast i8* %dr_init to %union.tree_node**, !dbg !6024
  store %union.tree_node* null, %union.tree_node** %13, align 8, !dbg !6025
  %dr_step = getelementptr inbounds i8, i8* %call, i64 80, !dbg !6026
  %14 = bitcast i8* %dr_step to %union.tree_node**, !dbg !6026
  store %union.tree_node* null, %union.tree_node** %14, align 8, !dbg !6027
  %dr_aligned_to = getelementptr inbounds i8, i8* %call, i64 88, !dbg !6028
  %15 = bitcast i8* %dr_aligned_to to %union.tree_node**, !dbg !6028
  store %union.tree_node* null, %union.tree_node** %15, align 8, !dbg !6029
  %call4 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !6030
  %cmp = icmp eq i32 %call4, 16, !dbg !6032
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6033

land.lhs.true:                                    ; preds = %entry
  %call5 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #8, !dbg !6034
  %call6 = tail call fastcc zeroext i8 @is_loop_header_bb_p(%struct.basic_block_def* %call5) #8, !dbg !6035
  %tobool = icmp eq i8 %call6, 0, !dbg !6035
  br i1 %tobool, label %if.else, label %if.then, !dbg !6036

if.then:                                          ; preds = %land.lhs.true
  %def_type = getelementptr inbounds i8, i8* %call, i64 120, !dbg !6037
  %16 = bitcast i8* %def_type to i32*, !dbg !6037
  store i32 8, i32* %16, align 8, !dbg !6038
  br label %if.end, !dbg !6037

if.else:                                          ; preds = %land.lhs.true, %entry
  %def_type7 = getelementptr inbounds i8, i8* %call, i64 120, !dbg !6039
  %17 = bitcast i8* %def_type7 to i32*, !dbg !6039
  store i32 3, i32* %17, align 8, !dbg !6040
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call8 = tail call fastcc %struct.VEC_dr_p_heap* @VEC_dr_p_heap_alloc(i32 5) #8, !dbg !6041
  %same_align_refs = getelementptr inbounds i8, i8* %call, i64 112, !dbg !6042
  %18 = bitcast i8* %same_align_refs to %struct.VEC_dr_p_heap**, !dbg !6042
  store %struct.VEC_dr_p_heap* %call8, %struct.VEC_dr_p_heap** %18, align 8, !dbg !6043
  %inside_of_loop = getelementptr inbounds i8, i8* %call, i64 176, !dbg !6044
  %19 = bitcast i8* %inside_of_loop to i32*, !dbg !6044
  store i32 0, i32* %19, align 4, !dbg !6045
  %cost9 = getelementptr inbounds i8, i8* %call, i64 172, !dbg !6046
  %outside_of_loop = bitcast i8* %cost9 to i32*, !dbg !6046
  store i32 0, i32* %outside_of_loop, align 4, !dbg !6047
  %slp_type = getelementptr inbounds i8, i8* %call, i64 180, !dbg !6048
  %20 = bitcast i8* %slp_type to i32*, !dbg !6048
  store i32 0, i32* %20, align 4, !dbg !6049
  %first_dr = getelementptr inbounds i8, i8* %call, i64 128, !dbg !6050
  %21 = bitcast i8* %first_dr to %union.gimple_statement_d**, !dbg !6050
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %21, align 8, !dbg !6051
  %next_dr = getelementptr inbounds i8, i8* %call, i64 136, !dbg !6052
  %22 = bitcast i8* %next_dr to %union.gimple_statement_d**, !dbg !6052
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %22, align 8, !dbg !6053
  %size = getelementptr inbounds i8, i8* %call, i64 144, !dbg !6054
  %23 = bitcast i8* %size to i32*, !dbg !6054
  store i32 0, i32* %23, align 8, !dbg !6055
  %store_count = getelementptr inbounds i8, i8* %call, i64 148, !dbg !6056
  %24 = bitcast i8* %store_count to i32*, !dbg !6056
  store i32 0, i32* %24, align 4, !dbg !6057
  %gap = getelementptr inbounds i8, i8* %call, i64 152, !dbg !6058
  %25 = bitcast i8* %gap to i32*, !dbg !6058
  store i32 0, i32* %25, align 8, !dbg !6059
  %same_dr_stmt = getelementptr inbounds i8, i8* %call, i64 160, !dbg !6060
  %26 = bitcast i8* %same_dr_stmt to %union.gimple_statement_d**, !dbg !6060
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %26, align 8, !dbg !6061
  %27 = getelementptr inbounds i8, i8* %call, i64 168, !dbg !6062
  store i8 0, i8* %27, align 8, !dbg !6063
  ret %struct._stmt_vec_info* %0, !dbg !6064
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !6065 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6069, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %location, metadata !6070, metadata !DIExpression()), !dbg !6071
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !6072
  store i32 %location, i32* %location1, align 8, !dbg !6073
  ret void, !dbg !6074
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6075 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6079, metadata !DIExpression()), !dbg !6080
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !6081
  %0 = load i32, i32* %location, align 8, !dbg !6081
  ret i32 %0, !dbg !6082
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @vectorizable_function(%union.gimple_statement_d* %call, %union.tree_node* %vectype_out, %union.tree_node* %vectype_in) local_unnamed_addr #5 !dbg !6083 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6087, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata %union.tree_node* %vectype_out, metadata !6088, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata %union.tree_node* %vectype_in, metadata !6089, metadata !DIExpression()), !dbg !6091
  %call1 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call) #8, !dbg !6092
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6090, metadata !DIExpression()), !dbg !6091
  %call2 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %call) #6, !dbg !6093
  %and = and i32 %call2, 513, !dbg !6095
  %tobool = icmp ne i32 %and, 0, !dbg !6095
  %tobool3 = icmp ne %union.tree_node* %call1, null, !dbg !6096
  %or.cond = and i1 %tobool, %tobool3, !dbg !6098
  br i1 %or.cond, label %lor.lhs.false, label %cleanup, !dbg !6098

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6099
  %bf.load = load i64, i64* %0, align 8, !dbg !6099
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6100
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !6100
  br i1 %cmp, label %lor.lhs.false4, label %cleanup, !dbg !6101

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 5, !dbg !6102
  %bf.load5 = load i32, i32* %built_in_class, align 8, !dbg !6102
  %bf.clear6 = and i32 %bf.load5, 6144, !dbg !6102
  %cmp7 = icmp eq i32 %bf.clear6, 0, !dbg !6102
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !6103

if.end9:                                          ; preds = %lor.lhs.false4
  %1 = load %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 1), align 8, !dbg !6104
  %call10 = tail call %union.tree_node* %1(%union.tree_node* nonnull %call1, %union.tree_node* %vectype_out, %union.tree_node* %vectype_in) #6, !dbg !6105
  br label %cleanup, !dbg !6106

cleanup:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry, %if.end9
  %retval.0 = phi %union.tree_node* [ %call10, %if.end9 ], [ null, %entry ], [ null, %lor.lhs.false4 ], [ null, %lor.lhs.false ], !dbg !6091
  ret %union.tree_node* %retval.0, !dbg !6107
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6108 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6110, metadata !DIExpression()), !dbg !6112
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #8, !dbg !6113
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6111, metadata !DIExpression()), !dbg !6112
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6114
  %bf.load = load i64, i64* %0, align 8, !dbg !6114
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6116
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !6116
  br i1 %cmp, label %if.then, label %cleanup, !dbg !6117

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6118
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6118
  br label %cleanup, !dbg !6119

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !6112
  ret %union.tree_node* %retval.0, !dbg !6120
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vectorizable_condition(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %union.tree_node* %reduc_def, i32 %reduc_index) local_unnamed_addr #5 !dbg !6121 {
entry:
  %def = alloca %union.tree_node*, align 8
  %dt = alloca i32, align 4
  %then_def_stmt = alloca %union.gimple_statement_d*, align 8
  %else_def_stmt = alloca %union.gimple_statement_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6125, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6126, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !6127, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %union.tree_node* %reduc_def, metadata !6128, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 %reduc_index, metadata !6129, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6130, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6131, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6132, metadata !DIExpression()), !dbg !6158
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !6159
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !6136, metadata !DIExpression()), !dbg !6158
  %vectype1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !6160
  %0 = load %union.tree_node*, %union.tree_node** %vectype1, align 8, !dbg !6160
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6137, metadata !DIExpression()), !dbg !6158
  %loop_vinfo2 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !6161
  %1 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo2, align 8, !dbg !6161
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %1, metadata !6145, metadata !DIExpression()), !dbg !6158
  %2 = bitcast %union.tree_node** %def to i8*, !dbg !6162
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6162
  %3 = bitcast i32* %dt to i8*, !dbg !6163
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !6163
  %type = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !6164
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !6164
  %bf.load = load i32, i32* %precision, align 4, !dbg !6164
  %bf.clear = and i32 %bf.load, 1023, !dbg !6164
  %sh_prom = zext i32 %bf.clear to i64, !dbg !6164
  %shl = shl i64 1, %sh_prom, !dbg !6164
  %conv = trunc i64 %shl to i32, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6149, metadata !DIExpression()), !dbg !6158
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %1, i64 0, i32 6, !dbg !6165
  %4 = load i32, i32* %vectorization_factor, align 8, !dbg !6165
  %div = sdiv i32 %4, %conv, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %div, metadata !6150, metadata !DIExpression()), !dbg !6158
  %tobool = icmp eq %struct._loop_vec_info* %1, null, !dbg !6167
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6167

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3831, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6167
  br label %cond.end, !dbg !6167

cond.end:                                         ; preds = %entry, %cond.true
  %cmp = icmp sgt i32 %div, 0, !dbg !6168
  br i1 %cmp, label %cond.end6, label %cond.true4, !dbg !6168

cond.true4:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3833, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6168
  br label %cond.end6, !dbg !6168

cond.end6:                                        ; preds = %cond.end, %cond.true4
  %cmp8 = icmp sgt i32 %div, 1, !dbg !6169
  br i1 %cmp8, label %cleanup193, label %if.end, !dbg !6171

if.end:                                           ; preds = %cond.end6
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !6172
  %5 = load i32, i32* %relevant, align 8, !dbg !6172
  %cmp10 = icmp eq i32 %5, 0, !dbg !6172
  br i1 %cmp10, label %cleanup193, label %if.end13, !dbg !6174

if.end13:                                         ; preds = %if.end
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !6175
  %6 = load i32, i32* %def_type, align 8, !dbg !6175
  %cmp14 = icmp eq i32 %6, 3, !dbg !6177
  br i1 %cmp14, label %if.end22, label %land.lhs.true, !dbg !6178

land.lhs.true:                                    ; preds = %if.end13
  %cmp17 = icmp eq i32 %6, 7, !dbg !6179
  %tobool20 = icmp ne %union.tree_node* %reduc_def, null, !dbg !6180
  %or.cond = and i1 %cmp17, %tobool20, !dbg !6181
  br i1 %or.cond, label %if.end22, label %cleanup193, !dbg !6181

if.end22:                                         ; preds = %if.end13, %land.lhs.true
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 25, !dbg !6182
  %7 = load i32, i32* %slp_type, align 4, !dbg !6182
  %tobool23 = icmp eq i32 %7, 0, !dbg !6182
  br i1 %tobool23, label %if.end25, label %cleanup193, !dbg !6184

if.end25:                                         ; preds = %if.end22
  %live = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 4, !dbg !6185
  %8 = load i8, i8* %live, align 4, !dbg !6185
  %tobool26 = icmp eq i8 %8, 0, !dbg !6185
  br i1 %tobool26, label %if.end33, label %if.then27, !dbg !6187

if.then27:                                        ; preds = %if.end25
  %call28 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6188
  %tobool29 = icmp eq i8 %call28, 0, !dbg !6188
  br i1 %tobool29, label %cleanup193, label %if.then30, !dbg !6191

if.then30:                                        ; preds = %if.then27
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6192
  %call31 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !6193
  br label %cleanup193, !dbg !6193

if.end33:                                         ; preds = %if.end25
  %call34 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !6194
  %tobool35 = icmp eq i8 %call34, 0, !dbg !6194
  br i1 %tobool35, label %cleanup193, label %if.end37, !dbg !6196

if.end37:                                         ; preds = %if.end33
  %call38 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !6197
  call void @llvm.dbg.value(metadata i32 %call38, metadata !6151, metadata !DIExpression()), !dbg !6158
  %cmp39 = icmp eq i32 %call38, 56, !dbg !6198
  br i1 %cmp39, label %if.end42, label %cleanup193, !dbg !6200

if.end42:                                         ; preds = %if.end37
  %call43 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !6201
  %tobool44 = icmp eq i8 %call43, 0, !dbg !6201
  br i1 %tobool44, label %cond.true45, label %cond.end47, !dbg !6201

cond.true45:                                      ; preds = %if.end42
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3866, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6201
  br label %cond.end47, !dbg !6201

cond.end47:                                       ; preds = %if.end42, %cond.true45
  %call49 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !6202
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !6132, metadata !DIExpression()), !dbg !6158
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6203
  %10 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6203
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !6133, metadata !DIExpression()), !dbg !6158
  %arrayidx52 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6204
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx52, align 8, !dbg !6204
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !6134, metadata !DIExpression()), !dbg !6158
  %arrayidx55 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6205
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx55, align 8, !dbg !6205
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !6135, metadata !DIExpression()), !dbg !6158
  %call56 = tail call fastcc zeroext i8 @vect_is_simple_cond(%union.tree_node* %10, %struct._loop_vec_info* %1) #8, !dbg !6206
  %tobool57 = icmp eq i8 %call56, 0, !dbg !6206
  br i1 %tobool57, label %cleanup193, label %if.end59, !dbg !6208

if.end59:                                         ; preds = %cond.end47
  %operands61 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6209
  %13 = bitcast %union.tree_node** %operands61 to %struct.tree_common**, !dbg !6209
  %14 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !6209
  %type63 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !6209
  %15 = load %union.tree_node*, %union.tree_node** %type63, align 8, !dbg !6209
  %type65 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6211
  %16 = load %union.tree_node*, %union.tree_node** %type65, align 8, !dbg !6211
  %call66 = tail call zeroext i8 @types_compatible_p(%union.tree_node* %15, %union.tree_node* %16) #6, !dbg !6212
  %tobool67 = icmp eq i8 %call66, 0, !dbg !6212
  br i1 %tobool67, label %cleanup193, label %if.end69, !dbg !6213

if.end69:                                         ; preds = %if.end59
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6214
  %bf.load70 = load i64, i64* %17, align 8, !dbg !6214
  %bf.cast4 = and i64 %bf.load70, 65535, !dbg !6215
  %cmp72 = icmp eq i64 %bf.cast4, 141, !dbg !6215
  br i1 %cmp72, label %if.then74, label %if.else, !dbg !6216

if.then74:                                        ; preds = %if.end69
  %18 = bitcast %union.gimple_statement_d** %then_def_stmt to i8*, !dbg !6217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7, !dbg !6217
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6218
  %19 = bitcast %union.tree_node** %def_stmt to i64*, !dbg !6218
  %20 = load i64, i64* %19, align 8, !dbg !6218
  %21 = bitcast %union.gimple_statement_d** %then_def_stmt to i64*, !dbg !6219
  store i64 %20, i64* %21, align 8, !dbg !6219
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6147, metadata !DIExpression(DW_OP_deref)), !dbg !6158
  call void @llvm.dbg.value(metadata i32* %dt, metadata !6148, metadata !DIExpression(DW_OP_deref)), !dbg !6158
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %then_def_stmt, metadata !6152, metadata !DIExpression(DW_OP_deref)), !dbg !6220
  %call75 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %11, %struct._loop_vec_info* %1, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %then_def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !6221
  %tobool76 = icmp eq i8 %call75, 0, !dbg !6221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7, !dbg !6223
  br i1 %tobool76, label %cleanup193, label %if.end101

if.else:                                          ; preds = %if.end69
  %cmp83 = icmp eq i64 %bf.cast4, 23, !dbg !6224
  br i1 %cmp83, label %if.end101, label %land.lhs.true85, !dbg !6226

land.lhs.true85:                                  ; preds = %if.else
  %cmp90 = icmp eq i64 %bf.cast4, 24, !dbg !6227
  br i1 %cmp90, label %if.end101, label %land.lhs.true92, !dbg !6228

land.lhs.true92:                                  ; preds = %land.lhs.true85
  %cmp97 = icmp eq i64 %bf.cast4, 25, !dbg !6229
  br i1 %cmp97, label %if.end101, label %cleanup193, !dbg !6230

if.end101:                                        ; preds = %if.then74, %land.lhs.true92, %land.lhs.true85, %if.else
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6231
  %bf.load103 = load i64, i64* %22, align 8, !dbg !6231
  %bf.cast1056 = and i64 %bf.load103, 65535, !dbg !6232
  %cmp106 = icmp eq i64 %bf.cast1056, 141, !dbg !6232
  br i1 %cmp106, label %if.then108, label %if.else118, !dbg !6233

if.then108:                                       ; preds = %if.end101
  %23 = bitcast %union.gimple_statement_d** %else_def_stmt to i8*, !dbg !6234
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7, !dbg !6234
  %def_stmt110 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6235
  %24 = bitcast %union.tree_node** %def_stmt110 to i64*, !dbg !6235
  %25 = load i64, i64* %24, align 8, !dbg !6235
  %26 = bitcast %union.gimple_statement_d** %else_def_stmt to i64*, !dbg !6236
  store i64 %25, i64* %26, align 8, !dbg !6236
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6147, metadata !DIExpression(DW_OP_deref)), !dbg !6158
  call void @llvm.dbg.value(metadata i32* %dt, metadata !6148, metadata !DIExpression(DW_OP_deref)), !dbg !6158
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %else_def_stmt, metadata !6155, metadata !DIExpression(DW_OP_deref)), !dbg !6237
  %call111 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %12, %struct._loop_vec_info* %1, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %else_def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !6238
  %tobool112 = icmp eq i8 %call111, 0, !dbg !6238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7, !dbg !6240
  br i1 %tobool112, label %cleanup193, label %if.end141

if.else118:                                       ; preds = %if.end101
  %cmp123 = icmp eq i64 %bf.cast1056, 23, !dbg !6241
  br i1 %cmp123, label %if.end141, label %land.lhs.true125, !dbg !6243

land.lhs.true125:                                 ; preds = %if.else118
  %cmp130 = icmp eq i64 %bf.cast1056, 24, !dbg !6244
  br i1 %cmp130, label %if.end141, label %land.lhs.true132, !dbg !6245

land.lhs.true132:                                 ; preds = %land.lhs.true125
  %cmp137 = icmp eq i64 %bf.cast1056, 25, !dbg !6246
  br i1 %cmp137, label %if.end141, label %cleanup193, !dbg !6247

if.end141:                                        ; preds = %if.then108, %land.lhs.true132, %land.lhs.true125, %if.else118
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6248
  %bf.load143 = load i64, i64* %27, align 8, !dbg !6248
  %bf.cast1458 = and i64 %bf.load143, 65535, !dbg !6248
  %cmp146 = icmp eq i64 %bf.cast1458, 14, !dbg !6248
  br i1 %cmp146, label %cond.true148, label %cond.false150, !dbg !6248

cond.true148:                                     ; preds = %if.end141
  %call149 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !6248
  br label %cond.end154, !dbg !6248

cond.false150:                                    ; preds = %if.end141
  %bf.load152 = load i32, i32* %precision, align 4, !dbg !6248
  %bf.lshr = lshr i32 %bf.load152, 16, !dbg !6248
  %bf.clear153 = and i32 %bf.lshr, 255, !dbg !6248
  br label %cond.end154, !dbg !6248

cond.end154:                                      ; preds = %cond.false150, %cond.true148
  %cond155 = phi i32 [ %call149, %cond.true148 ], [ %bf.clear153, %cond.false150 ], !dbg !6248
  call void @llvm.dbg.value(metadata i32 %cond155, metadata !6146, metadata !DIExpression()), !dbg !6158
  %tobool156 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !6249
  br i1 %tobool156, label %if.then157, label %if.end162, !dbg !6251

if.then157:                                       ; preds = %cond.end154
  %type158 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !6252
  store i32 6, i32* %type158, align 8, !dbg !6254
  %type160 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6255
  %28 = load %union.tree_node*, %union.tree_node** %type160, align 8, !dbg !6255
  %call161 = call zeroext i8 @expand_vec_cond_expr_p(%union.tree_node* %28, i32 %cond155) #6, !dbg !6256
  br label %cleanup193, !dbg !6257

if.end162:                                        ; preds = %cond.end154
  %call163 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6258
  call void @llvm.dbg.value(metadata %union.tree_node* %call163, metadata !6130, metadata !DIExpression()), !dbg !6158
  %call164 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call163, %union.tree_node* %0) #6, !dbg !6259
  call void @llvm.dbg.value(metadata %union.tree_node* %call164, metadata !6131, metadata !DIExpression()), !dbg !6158
  %29 = load %union.tree_node*, %union.tree_node** %operands61, align 8, !dbg !6260
  %call168 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %29, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !6261
  call void @llvm.dbg.value(metadata %union.tree_node* %call168, metadata !6138, metadata !DIExpression()), !dbg !6158
  %arrayidx171 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands61, i64 1, !dbg !6262
  %30 = load %union.tree_node*, %union.tree_node** %arrayidx171, align 8, !dbg !6262
  %call172 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %30, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !6263
  call void @llvm.dbg.value(metadata %union.tree_node* %call172, metadata !6139, metadata !DIExpression()), !dbg !6158
  %cmp173 = icmp eq i32 %reduc_index, 1, !dbg !6264
  br i1 %cmp173, label %if.end178, label %if.else176, !dbg !6266

if.else176:                                       ; preds = %if.end162
  %call177 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %11, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !6267
  call void @llvm.dbg.value(metadata %union.tree_node* %call177, metadata !6140, metadata !DIExpression()), !dbg !6158
  br label %if.end178

if.end178:                                        ; preds = %if.end162, %if.else176
  %vec_then_clause.0 = phi %union.tree_node* [ %call177, %if.else176 ], [ %reduc_def, %if.end162 ], !dbg !6268
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_then_clause.0, metadata !6140, metadata !DIExpression()), !dbg !6158
  %cmp179 = icmp eq i32 %reduc_index, 2, !dbg !6269
  br i1 %cmp179, label %if.end184, label %if.else182, !dbg !6271

if.else182:                                       ; preds = %if.end178
  %call183 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %12, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !6272
  call void @llvm.dbg.value(metadata %union.tree_node* %call183, metadata !6141, metadata !DIExpression()), !dbg !6158
  br label %if.end184

if.end184:                                        ; preds = %if.end178, %if.else182
  %vec_else_clause.0 = phi %union.tree_node* [ %call183, %if.else182 ], [ %reduc_def, %if.end178 ], !dbg !6273
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_else_clause.0, metadata !6141, metadata !DIExpression()), !dbg !6158
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6274
  %bf.load186 = load i64, i64* %31, align 8, !dbg !6274
  %32 = trunc i64 %bf.load186 to i32, !dbg !6274
  %bf.cast188 = and i32 %32, 65535, !dbg !6274
  %call189 = call %union.tree_node* @build2_stat(i32 %bf.cast188, %union.tree_node* %0, %union.tree_node* %call168, %union.tree_node* %call172) #6, !dbg !6274
  call void @llvm.dbg.value(metadata %union.tree_node* %call189, metadata !6142, metadata !DIExpression()), !dbg !6158
  %call190 = call %union.tree_node* @build3_stat(i32 57, %union.tree_node* %0, %union.tree_node* %call189, %union.tree_node* %vec_then_clause.0, %union.tree_node* %vec_else_clause.0) #6, !dbg !6275
  call void @llvm.dbg.value(metadata %union.tree_node* %call190, metadata !6143, metadata !DIExpression()), !dbg !6158
  %call191 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call164, %union.tree_node* %call190) #6, !dbg !6276
  store %union.gimple_statement_d* %call191, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !6277
  %call192 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call164, %union.gimple_statement_d* %call191) #8, !dbg !6278
  call void @llvm.dbg.value(metadata %union.tree_node* %call192, metadata !6144, metadata !DIExpression()), !dbg !6158
  %33 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !6279
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %33, %union.tree_node* %call192) #8, !dbg !6280
  %34 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !6281
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %34, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !6282
  br label %cleanup193, !dbg !6283

cleanup193:                                       ; preds = %if.then27, %if.then74, %land.lhs.true92, %if.then108, %land.lhs.true132, %if.end59, %cond.end47, %if.end37, %if.end33, %if.end22, %if.end, %if.then30, %land.lhs.true, %cond.end6, %if.end184, %if.then157
  %retval.3 = phi i8 [ 0, %if.then74 ], [ 0, %if.then108 ], [ 1, %if.end184 ], [ %call161, %if.then157 ], [ 0, %cond.end6 ], [ 0, %if.end ], [ 0, %land.lhs.true ], [ 0, %if.end22 ], [ 0, %if.then30 ], [ 0, %if.then27 ], [ 0, %if.end33 ], [ 0, %if.end37 ], [ 0, %cond.end47 ], [ 0, %if.end59 ], [ 0, %land.lhs.true92 ], [ 0, %land.lhs.true132 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !6284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6284
  ret i8 %retval.3, !dbg !6284
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6285 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6287, metadata !DIExpression()), !dbg !6288
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !6289
  %cmp = icmp eq i32 %call, 6, !dbg !6290
  %conv1 = zext i1 %cmp to i8, !dbg !6289
  ret i8 %conv1, !dbg !6291
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6292 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6296, metadata !DIExpression()), !dbg !6298
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #8, !dbg !6299
  call void @llvm.dbg.value(metadata i32 %call, metadata !6297, metadata !DIExpression()), !dbg !6298
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #8, !dbg !6300
  %cmp = icmp eq i32 %call1, 3, !dbg !6302
  br i1 %cmp, label %if.then, label %if.end, !dbg !6303

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #8, !dbg !6304
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6304
  %bf.load = load i64, i64* %0, align 8, !dbg !6304
  %1 = trunc i64 %bf.load to i32, !dbg !6304
  %bf.cast = and i32 %1, 65535, !dbg !6304
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6297, metadata !DIExpression()), !dbg !6298
  br label %if.end, !dbg !6305

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !6298
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !6297, metadata !DIExpression()), !dbg !6298
  ret i32 %code.0, !dbg !6306
}

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6307 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6309, metadata !DIExpression()), !dbg !6310
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !6311
  ret %union.tree_node* %call, !dbg !6312
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vect_is_simple_cond(%union.tree_node* %cond, %struct._loop_vec_info* %loop_vinfo) unnamed_addr #5 !dbg !6313 {
entry:
  %def = alloca %union.tree_node*, align 8
  %dt = alloca i32, align 4
  %lhs_def_stmt = alloca %union.gimple_statement_d*, align 8
  %rhs_def_stmt = alloca %union.gimple_statement_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !6317, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %loop_vinfo, metadata !6318, metadata !DIExpression()), !dbg !6329
  %0 = bitcast %union.tree_node** %def to i8*, !dbg !6330
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6330
  %1 = bitcast i32* %dt to i8*, !dbg !6331
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !6331
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6332
  %bf.load = load i64, i64* %2, align 8, !dbg !6332
  %bf.cast = and i64 %bf.load, 65535, !dbg !6332
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6332
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6332
  %cmp = icmp eq i32 %3, 5, !dbg !6332
  br i1 %cmp, label %if.end, label %cleanup68, !dbg !6334

if.end:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6335
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6335
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6319, metadata !DIExpression()), !dbg !6329
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !6336
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !6336
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6320, metadata !DIExpression()), !dbg !6329
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6337
  %bf.load6 = load i64, i64* %6, align 8, !dbg !6337
  %bf.cast84 = and i64 %bf.load6, 65535, !dbg !6338
  %cmp9 = icmp eq i64 %bf.cast84, 141, !dbg !6338
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !6339

if.then10:                                        ; preds = %if.end
  %7 = bitcast %union.gimple_statement_d** %lhs_def_stmt to i8*, !dbg !6340
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !6340
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6341
  %8 = bitcast %union.tree_node** %def_stmt to i64*, !dbg !6341
  %9 = load i64, i64* %8, align 8, !dbg !6341
  %10 = bitcast %union.gimple_statement_d** %lhs_def_stmt to i64*, !dbg !6342
  store i64 %9, i64* %10, align 8, !dbg !6342
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6321, metadata !DIExpression(DW_OP_deref)), !dbg !6329
  call void @llvm.dbg.value(metadata i32* %dt, metadata !6322, metadata !DIExpression(DW_OP_deref)), !dbg !6329
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %lhs_def_stmt, metadata !6323, metadata !DIExpression(DW_OP_deref)), !dbg !6343
  %call = call zeroext i8 @vect_is_simple_use(%union.tree_node* %4, %struct._loop_vec_info* %loop_vinfo, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %lhs_def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !6344
  %tobool = icmp eq i8 %call, 0, !dbg !6344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !6346
  br i1 %tobool, label %cleanup68, label %if.end31

if.else:                                          ; preds = %if.end
  %cmp17 = icmp eq i64 %bf.cast84, 23, !dbg !6347
  br i1 %cmp17, label %if.end31, label %land.lhs.true, !dbg !6349

land.lhs.true:                                    ; preds = %if.else
  %cmp22 = icmp eq i64 %bf.cast84, 24, !dbg !6350
  br i1 %cmp22, label %if.end31, label %land.lhs.true23, !dbg !6351

land.lhs.true23:                                  ; preds = %land.lhs.true
  %cmp28 = icmp eq i64 %bf.cast84, 25, !dbg !6352
  br i1 %cmp28, label %if.end31, label %cleanup68, !dbg !6353

if.end31:                                         ; preds = %if.then10, %land.lhs.true23, %land.lhs.true, %if.else
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6354
  %bf.load33 = load i64, i64* %11, align 8, !dbg !6354
  %bf.cast356 = and i64 %bf.load33, 65535, !dbg !6355
  %cmp36 = icmp eq i64 %bf.cast356, 141, !dbg !6355
  br i1 %cmp36, label %if.then37, label %if.else47, !dbg !6356

if.then37:                                        ; preds = %if.end31
  %12 = bitcast %union.gimple_statement_d** %rhs_def_stmt to i8*, !dbg !6357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7, !dbg !6357
  %def_stmt39 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6358
  %13 = bitcast %union.tree_node** %def_stmt39 to i64*, !dbg !6358
  %14 = load i64, i64* %13, align 8, !dbg !6358
  %15 = bitcast %union.gimple_statement_d** %rhs_def_stmt to i64*, !dbg !6359
  store i64 %14, i64* %15, align 8, !dbg !6359
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6321, metadata !DIExpression(DW_OP_deref)), !dbg !6329
  call void @llvm.dbg.value(metadata i32* %dt, metadata !6322, metadata !DIExpression(DW_OP_deref)), !dbg !6329
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %rhs_def_stmt, metadata !6326, metadata !DIExpression(DW_OP_deref)), !dbg !6360
  %call40 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %5, %struct._loop_vec_info* %loop_vinfo, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %rhs_def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !6361
  %tobool41 = icmp eq i8 %call40, 0, !dbg !6361
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7, !dbg !6363
  br i1 %tobool41, label %cleanup68, label %if.end67

if.else47:                                        ; preds = %if.end31
  %cmp52 = icmp eq i64 %bf.cast356, 23, !dbg !6364
  br i1 %cmp52, label %if.end67, label %land.lhs.true53, !dbg !6366

land.lhs.true53:                                  ; preds = %if.else47
  %cmp58 = icmp eq i64 %bf.cast356, 24, !dbg !6367
  br i1 %cmp58, label %if.end67, label %land.lhs.true59, !dbg !6368

land.lhs.true59:                                  ; preds = %land.lhs.true53
  %cmp64 = icmp eq i64 %bf.cast356, 25, !dbg !6369
  br i1 %cmp64, label %if.end67, label %cleanup68, !dbg !6370

if.end67:                                         ; preds = %if.then37, %land.lhs.true59, %land.lhs.true53, %if.else47
  br label %cleanup68, !dbg !6371

cleanup68:                                        ; preds = %if.then10, %land.lhs.true23, %if.then37, %land.lhs.true59, %entry, %if.end67
  %retval.3 = phi i8 [ 0, %if.then10 ], [ 0, %if.then37 ], [ 1, %if.end67 ], [ 0, %entry ], [ 0, %land.lhs.true23 ], [ 0, %land.lhs.true59 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !6372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6372
  ret i8 %retval.3, !dbg !6372
}

declare dso_local zeroext i8 @types_compatible_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @expand_vec_cond_expr_p(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @vect_create_destination_var(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vect_analyze_stmt(%union.gimple_statement_d* %stmt, i8* %need_to_vectorize, %struct._slp_tree* %node) local_unnamed_addr #5 !dbg !6373 {
entry:
  %dummy = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6377, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i8* %need_to_vectorize, metadata !6378, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata %struct._slp_tree* %node, metadata !6379, metadata !DIExpression()), !dbg !6387
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !6388
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !6380, metadata !DIExpression()), !dbg !6387
  %bb_vinfo1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 26, !dbg !6389
  %0 = load %struct._bb_vec_info*, %struct._bb_vec_info** %bb_vinfo1, align 8, !dbg !6389
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %0, metadata !6381, metadata !DIExpression()), !dbg !6387
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !6390
  %1 = load i32, i32* %relevant, align 8, !dbg !6390
  call void @llvm.dbg.value(metadata i32 %1, metadata !6382, metadata !DIExpression()), !dbg !6387
  %2 = bitcast i64* %dummy to i8*, !dbg !6391
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6391
  %call2 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6392
  %tobool = icmp eq i8 %call2, 0, !dbg !6392
  br i1 %tobool, label %if.end, label %if.then, !dbg !6394

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6395
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !6397
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6398
  tail call void @print_gimple_stmt(%struct._IO_FILE* %4, %union.gimple_statement_d* %stmt, i32 0, i32 2) #6, !dbg !6399
  br label %if.end, !dbg !6400

if.end:                                           ; preds = %entry, %if.then
  %call4 = tail call fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) #8, !dbg !6401
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6401
  br i1 %tobool5, label %if.end12, label %if.then6, !dbg !6403

if.then6:                                         ; preds = %if.end
  %call7 = tail call zeroext i8 @vect_print_dump_info(i32 2) #6, !dbg !6404
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6404
  br i1 %tobool8, label %cleanup, label %if.then9, !dbg !6407

if.then9:                                         ; preds = %if.then6
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6408
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !6409
  br label %cleanup, !dbg !6409

if.end12:                                         ; preds = %if.end
  %6 = load i32, i32* %relevant, align 8, !dbg !6410
  %cmp = icmp eq i32 %6, 0, !dbg !6410
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !6412

land.lhs.true:                                    ; preds = %if.end12
  %live = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 4, !dbg !6413
  %7 = load i8, i8* %live, align 4, !dbg !6413
  %tobool14 = icmp eq i8 %7, 0, !dbg !6413
  br i1 %tobool14, label %if.then15, label %if.end21, !dbg !6414

if.then15:                                        ; preds = %land.lhs.true
  %call16 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6415
  %tobool17 = icmp eq i8 %call16, 0, !dbg !6415
  br i1 %tobool17, label %cleanup, label %if.then18, !dbg !6418

if.then18:                                        ; preds = %if.then15
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6419
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !6420
  br label %cleanup, !dbg !6420

if.end21:                                         ; preds = %land.lhs.true, %if.end12
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !6421
  %9 = load i32, i32* %def_type, align 8, !dbg !6421
  switch i32 %9, label %sw.default [
    i32 3, label %sw.epilog
    i32 5, label %sw.bb
    i32 7, label %sw.bb
  ], !dbg !6422

sw.bb:                                            ; preds = %if.end21, %if.end21
  %tobool22 = icmp eq %struct._bb_vec_info* %0, null, !dbg !6423
  %switch = icmp ult i32 %1, 3, !dbg !6423
  %or.cond = and i1 %tobool22, %switch, !dbg !6423
  br i1 %or.cond, label %sw.epilog, label %cond.true, !dbg !6423

cond.true:                                        ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4001, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6423
  br label %sw.epilog, !dbg !6423

sw.default:                                       ; preds = %if.end21
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4009, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6425
  br label %sw.epilog, !dbg !6426

sw.epilog:                                        ; preds = %sw.bb, %cond.true, %sw.default, %if.end21
  %tobool29 = icmp eq %struct._bb_vec_info* %0, null, !dbg !6427
  br i1 %tobool29, label %if.end57, label %if.then30, !dbg !6429

if.then30:                                        ; preds = %sw.epilog
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 25, !dbg !6430
  %10 = load i32, i32* %slp_type, align 4, !dbg !6430
  %cmp31 = icmp eq i32 %10, 1, !dbg !6430
  br i1 %cmp31, label %cond.end34, label %cond.true32, !dbg !6430

cond.true32:                                      ; preds = %if.then30
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6430
  br label %cond.end34, !dbg !6430

cond.end34:                                       ; preds = %if.then30, %cond.true32
  call void @llvm.dbg.value(metadata i64* %dummy, metadata !6384, metadata !DIExpression(DW_OP_deref)), !dbg !6387
  call void @llvm.dbg.value(metadata i64* %dummy, metadata !6384, metadata !DIExpression(DW_OP_deref)), !dbg !6387
  %call36 = call %union.tree_node* @vect_get_smallest_scalar_type(%union.gimple_statement_d* %stmt, i64* nonnull %dummy, i64* nonnull %dummy) #6, !dbg !6432
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !6385, metadata !DIExpression()), !dbg !6387
  %call37 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6433
  %tobool38 = icmp eq i8 %call37, 0, !dbg !6433
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !6435

if.then39:                                        ; preds = %cond.end34
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6436
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !6438
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6439
  call void @print_generic_expr(%struct._IO_FILE* %12, %union.tree_node* %call36, i32 2) #6, !dbg !6440
  br label %if.end41, !dbg !6441

if.end41:                                         ; preds = %cond.end34, %if.then39
  %call42 = call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %call36) #8, !dbg !6442
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !6386, metadata !DIExpression()), !dbg !6387
  %tobool43 = icmp eq %union.tree_node* %call42, null, !dbg !6443
  %call51 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6445
  %tobool52 = icmp ne i8 %call51, 0, !dbg !6445
  br i1 %tobool43, label %if.then44, label %if.end50, !dbg !6446

if.then44:                                        ; preds = %if.end41
  br i1 %tobool52, label %if.then47, label %cleanup, !dbg !6447

if.then47:                                        ; preds = %if.then44
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6449
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !6452
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6453
  call void @print_generic_expr(%struct._IO_FILE* %14, %union.tree_node* %call36, i32 2) #6, !dbg !6454
  br label %cleanup, !dbg !6455

if.end50:                                         ; preds = %if.end41
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !6456

if.then53:                                        ; preds = %if.end50
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6457
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !6460
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6461
  call void @print_generic_expr(%struct._IO_FILE* %16, %union.tree_node* nonnull %call42, i32 2) #6, !dbg !6462
  br label %if.end55, !dbg !6463

if.end55:                                         ; preds = %if.then53, %if.end50
  %vectype56 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !6464
  store %union.tree_node* %call42, %union.tree_node** %vectype56, align 8, !dbg !6465
  br label %if.end57, !dbg !6466

if.end57:                                         ; preds = %sw.epilog, %if.end55
  %17 = load i32, i32* %relevant, align 8, !dbg !6467
  %cmp59 = icmp eq i32 %17, 0, !dbg !6467
  br i1 %cmp59, label %if.end209, label %if.then60, !dbg !6469

if.then60:                                        ; preds = %if.end57
  %call61 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6470
  %bf.load = load i64, i64* %18, align 8, !dbg !6470
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6470
  %cmp62 = icmp eq i64 %bf.cast2, 14, !dbg !6470
  %call64 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  br i1 %cmp62, label %cond.true63, label %cond.false66, !dbg !6470

cond.true63:                                      ; preds = %if.then60
  %call65 = call i32 @vector_type_mode(%union.tree_node* %call64) #6, !dbg !6470
  br label %cond.end70, !dbg !6470

cond.false66:                                     ; preds = %if.then60
  %type = bitcast %union.tree_node* %call64 to %struct.tree_type*, !dbg !6470
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !6470
  %bf.load68 = load i32, i32* %mode, align 4, !dbg !6470
  %bf.lshr = lshr i32 %bf.load68, 16, !dbg !6470
  %bf.clear69 = and i32 %bf.lshr, 255, !dbg !6470
  br label %cond.end70, !dbg !6470

cond.end70:                                       ; preds = %cond.false66, %cond.true63
  %cond71 = phi i32 [ %call65, %cond.true63 ], [ %bf.clear69, %cond.false66 ], !dbg !6470
  %idxprom = zext i32 %cond71 to i64, !dbg !6470
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !6470
  %19 = load i8, i8* %arrayidx, align 1, !dbg !6470
  %cmp72 = icmp eq i8 %19, 12, !dbg !6470
  br i1 %cmp72, label %cond.true199, label %lor.lhs.false74, !dbg !6470

lor.lhs.false74:                                  ; preds = %cond.end70
  %call75 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6470
  %bf.load77 = load i64, i64* %20, align 8, !dbg !6470
  %bf.cast793 = and i64 %bf.load77, 65535, !dbg !6470
  %cmp80 = icmp eq i64 %bf.cast793, 14, !dbg !6470
  %call83 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  br i1 %cmp80, label %cond.true82, label %cond.false85, !dbg !6470

cond.true82:                                      ; preds = %lor.lhs.false74
  %call84 = call i32 @vector_type_mode(%union.tree_node* %call83) #6, !dbg !6470
  br label %cond.end92, !dbg !6470

cond.false85:                                     ; preds = %lor.lhs.false74
  %type87 = bitcast %union.tree_node* %call83 to %struct.tree_type*, !dbg !6470
  %mode88 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type87, i64 0, i32 6, !dbg !6470
  %bf.load89 = load i32, i32* %mode88, align 4, !dbg !6470
  %bf.lshr90 = lshr i32 %bf.load89, 16, !dbg !6470
  %bf.clear91 = and i32 %bf.lshr90, 255, !dbg !6470
  br label %cond.end92, !dbg !6470

cond.end92:                                       ; preds = %cond.false85, %cond.true82
  %cond93 = phi i32 [ %call84, %cond.true82 ], [ %bf.clear91, %cond.false85 ], !dbg !6470
  %idxprom94 = zext i32 %cond93 to i64, !dbg !6470
  %arrayidx95 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom94, !dbg !6470
  %21 = load i8, i8* %arrayidx95, align 1, !dbg !6470
  %cmp97 = icmp eq i8 %21, 17, !dbg !6470
  br i1 %cmp97, label %cond.true199, label %lor.lhs.false99, !dbg !6470

lor.lhs.false99:                                  ; preds = %cond.end92
  %call100 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6470
  %bf.load102 = load i64, i64* %22, align 8, !dbg !6470
  %bf.cast1044 = and i64 %bf.load102, 65535, !dbg !6470
  %cmp105 = icmp eq i64 %bf.cast1044, 14, !dbg !6470
  %call108 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  br i1 %cmp105, label %cond.true107, label %cond.false110, !dbg !6470

cond.true107:                                     ; preds = %lor.lhs.false99
  %call109 = call i32 @vector_type_mode(%union.tree_node* %call108) #6, !dbg !6470
  br label %cond.end117, !dbg !6470

cond.false110:                                    ; preds = %lor.lhs.false99
  %type112 = bitcast %union.tree_node* %call108 to %struct.tree_type*, !dbg !6470
  %mode113 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type112, i64 0, i32 6, !dbg !6470
  %bf.load114 = load i32, i32* %mode113, align 4, !dbg !6470
  %bf.lshr115 = lshr i32 %bf.load114, 16, !dbg !6470
  %bf.clear116 = and i32 %bf.lshr115, 255, !dbg !6470
  br label %cond.end117, !dbg !6470

cond.end117:                                      ; preds = %cond.false110, %cond.true107
  %cond118 = phi i32 [ %call109, %cond.true107 ], [ %bf.clear116, %cond.false110 ], !dbg !6470
  %idxprom119 = zext i32 %cond118 to i64, !dbg !6470
  %arrayidx120 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom119, !dbg !6470
  %23 = load i8, i8* %arrayidx120, align 1, !dbg !6470
  %cmp122 = icmp eq i8 %23, 13, !dbg !6470
  br i1 %cmp122, label %cond.true199, label %lor.lhs.false124, !dbg !6470

lor.lhs.false124:                                 ; preds = %cond.end117
  %call125 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6470
  %bf.load127 = load i64, i64* %24, align 8, !dbg !6470
  %bf.cast1295 = and i64 %bf.load127, 65535, !dbg !6470
  %cmp130 = icmp eq i64 %bf.cast1295, 14, !dbg !6470
  %call133 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  br i1 %cmp130, label %cond.true132, label %cond.false135, !dbg !6470

cond.true132:                                     ; preds = %lor.lhs.false124
  %call134 = call i32 @vector_type_mode(%union.tree_node* %call133) #6, !dbg !6470
  br label %cond.end142, !dbg !6470

cond.false135:                                    ; preds = %lor.lhs.false124
  %type137 = bitcast %union.tree_node* %call133 to %struct.tree_type*, !dbg !6470
  %mode138 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type137, i64 0, i32 6, !dbg !6470
  %bf.load139 = load i32, i32* %mode138, align 4, !dbg !6470
  %bf.lshr140 = lshr i32 %bf.load139, 16, !dbg !6470
  %bf.clear141 = and i32 %bf.lshr140, 255, !dbg !6470
  br label %cond.end142, !dbg !6470

cond.end142:                                      ; preds = %cond.false135, %cond.true132
  %cond143 = phi i32 [ %call134, %cond.true132 ], [ %bf.clear141, %cond.false135 ], !dbg !6470
  %idxprom144 = zext i32 %cond143 to i64, !dbg !6470
  %arrayidx145 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom144, !dbg !6470
  %25 = load i8, i8* %arrayidx145, align 1, !dbg !6470
  %cmp147 = icmp eq i8 %25, 14, !dbg !6470
  br i1 %cmp147, label %cond.true199, label %lor.lhs.false149, !dbg !6470

lor.lhs.false149:                                 ; preds = %cond.end142
  %call150 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6470
  %bf.load152 = load i64, i64* %26, align 8, !dbg !6470
  %bf.cast1546 = and i64 %bf.load152, 65535, !dbg !6470
  %cmp155 = icmp eq i64 %bf.cast1546, 14, !dbg !6470
  %call158 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  br i1 %cmp155, label %cond.true157, label %cond.false160, !dbg !6470

cond.true157:                                     ; preds = %lor.lhs.false149
  %call159 = call i32 @vector_type_mode(%union.tree_node* %call158) #6, !dbg !6470
  br label %cond.end167, !dbg !6470

cond.false160:                                    ; preds = %lor.lhs.false149
  %type162 = bitcast %union.tree_node* %call158 to %struct.tree_type*, !dbg !6470
  %mode163 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type162, i64 0, i32 6, !dbg !6470
  %bf.load164 = load i32, i32* %mode163, align 4, !dbg !6470
  %bf.lshr165 = lshr i32 %bf.load164, 16, !dbg !6470
  %bf.clear166 = and i32 %bf.lshr165, 255, !dbg !6470
  br label %cond.end167, !dbg !6470

cond.end167:                                      ; preds = %cond.false160, %cond.true157
  %cond168 = phi i32 [ %call159, %cond.true157 ], [ %bf.clear166, %cond.false160 ], !dbg !6470
  %idxprom169 = zext i32 %cond168 to i64, !dbg !6470
  %arrayidx170 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom169, !dbg !6470
  %27 = load i8, i8* %arrayidx170, align 1, !dbg !6470
  %cmp172 = icmp eq i8 %27, 15, !dbg !6470
  br i1 %cmp172, label %cond.true199, label %lor.lhs.false174, !dbg !6470

lor.lhs.false174:                                 ; preds = %cond.end167
  %call175 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6470
  %bf.load177 = load i64, i64* %28, align 8, !dbg !6470
  %bf.cast1797 = and i64 %bf.load177, 65535, !dbg !6470
  %cmp180 = icmp eq i64 %bf.cast1797, 14, !dbg !6470
  %call183 = call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !6470
  br i1 %cmp180, label %cond.true182, label %cond.false185, !dbg !6470

cond.true182:                                     ; preds = %lor.lhs.false174
  %call184 = call i32 @vector_type_mode(%union.tree_node* %call183) #6, !dbg !6470
  br label %cond.end192, !dbg !6470

cond.false185:                                    ; preds = %lor.lhs.false174
  %type187 = bitcast %union.tree_node* %call183 to %struct.tree_type*, !dbg !6470
  %mode188 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type187, i64 0, i32 6, !dbg !6470
  %bf.load189 = load i32, i32* %mode188, align 4, !dbg !6470
  %bf.lshr190 = lshr i32 %bf.load189, 16, !dbg !6470
  %bf.clear191 = and i32 %bf.lshr190, 255, !dbg !6470
  br label %cond.end192, !dbg !6470

cond.end192:                                      ; preds = %cond.false185, %cond.true182
  %cond193 = phi i32 [ %call184, %cond.true182 ], [ %bf.clear191, %cond.false185 ], !dbg !6470
  %idxprom194 = zext i32 %cond193 to i64, !dbg !6470
  %arrayidx195 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom194, !dbg !6470
  %29 = load i8, i8* %arrayidx195, align 1, !dbg !6470
  %cmp197 = icmp eq i8 %29, 16, !dbg !6470
  br i1 %cmp197, label %cond.true199, label %cond.end201, !dbg !6470

cond.true199:                                     ; preds = %cond.end192, %cond.end167, %cond.end142, %cond.end117, %cond.end92, %cond.end70
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4045, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6470
  br label %cond.end201, !dbg !6470

cond.end201:                                      ; preds = %cond.end192, %cond.true199
  %vectype203 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !6472
  %30 = load %union.tree_node*, %union.tree_node** %vectype203, align 8, !dbg !6472
  %tobool204 = icmp eq %union.tree_node* %30, null, !dbg !6472
  br i1 %tobool204, label %cond.true205, label %cond.end207, !dbg !6472

cond.true205:                                     ; preds = %cond.end201
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4046, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6472
  br label %cond.end207, !dbg !6472

cond.end207:                                      ; preds = %cond.end201, %cond.true205
  store i8 1, i8* %need_to_vectorize, align 1, !dbg !6473
  br label %if.end209, !dbg !6474

if.end209:                                        ; preds = %if.end57, %cond.end207
  call void @llvm.dbg.value(metadata i8 1, metadata !6383, metadata !DIExpression()), !dbg !6387
  br i1 %tobool29, label %land.lhs.true211, label %if.then260, !dbg !6475

land.lhs.true211:                                 ; preds = %if.end209
  %31 = load i32, i32* %relevant, align 8, !dbg !6477
  %cmp213 = icmp eq i32 %31, 0, !dbg !6477
  br i1 %cmp213, label %lor.lhs.false215, label %if.then219, !dbg !6478

lor.lhs.false215:                                 ; preds = %land.lhs.true211
  %32 = load i32, i32* %def_type, align 8, !dbg !6479
  %cmp217 = icmp eq i32 %32, 5, !dbg !6480
  br i1 %cmp217, label %if.then219, label %if.else, !dbg !6481

if.then219:                                       ; preds = %land.lhs.true211, %lor.lhs.false215
  %call220 = call fastcc zeroext i8 @vectorizable_type_promotion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* null) #8, !dbg !6482
  %tobool222 = icmp eq i8 %call220, 0, !dbg !6482
  br i1 %tobool222, label %lor.lhs.false223, label %lor.end, !dbg !6483

lor.lhs.false223:                                 ; preds = %if.then219
  %call224 = call fastcc zeroext i8 @vectorizable_type_demotion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* null) #8, !dbg !6484
  %tobool226 = icmp eq i8 %call224, 0, !dbg !6484
  br i1 %tobool226, label %lor.lhs.false227, label %lor.end, !dbg !6485

lor.lhs.false227:                                 ; preds = %lor.lhs.false223
  %call228 = call fastcc zeroext i8 @vectorizable_conversion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* null) #8, !dbg !6486
  %tobool230 = icmp eq i8 %call228, 0, !dbg !6486
  br i1 %tobool230, label %lor.lhs.false231, label %lor.end, !dbg !6487

lor.lhs.false231:                                 ; preds = %lor.lhs.false227
  %call232 = call fastcc zeroext i8 @vectorizable_operation(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* null) #8, !dbg !6488
  %tobool234 = icmp eq i8 %call232, 0, !dbg !6488
  br i1 %tobool234, label %lor.lhs.false235, label %lor.end, !dbg !6489

lor.lhs.false235:                                 ; preds = %lor.lhs.false231
  %call236 = call fastcc zeroext i8 @vectorizable_assignment(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* null) #8, !dbg !6490
  %tobool238 = icmp eq i8 %call236, 0, !dbg !6490
  br i1 %tobool238, label %lor.lhs.false239, label %lor.end, !dbg !6491

lor.lhs.false239:                                 ; preds = %lor.lhs.false235
  %call240 = call fastcc zeroext i8 @vectorizable_load(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* null, %struct._slp_instance* null) #8, !dbg !6492
  %tobool242 = icmp eq i8 %call240, 0, !dbg !6492
  br i1 %tobool242, label %lor.lhs.false243, label %lor.end, !dbg !6493

lor.lhs.false243:                                 ; preds = %lor.lhs.false239
  %call244 = call fastcc zeroext i8 @vectorizable_call(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null) #8, !dbg !6494
  %tobool246 = icmp eq i8 %call244, 0, !dbg !6494
  br i1 %tobool246, label %lor.lhs.false247, label %lor.end, !dbg !6495

lor.lhs.false247:                                 ; preds = %lor.lhs.false243
  %call248 = call fastcc zeroext i8 @vectorizable_store(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* null) #8, !dbg !6496
  %tobool250 = icmp eq i8 %call248, 0, !dbg !6496
  br i1 %tobool250, label %lor.lhs.false251, label %lor.end, !dbg !6497

lor.lhs.false251:                                 ; preds = %lor.lhs.false247
  %call252 = call zeroext i8 @vectorizable_reduction(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null) #6, !dbg !6498
  %tobool254 = icmp eq i8 %call252, 0, !dbg !6498
  br i1 %tobool254, label %lor.rhs, label %lor.end, !dbg !6499

lor.rhs:                                          ; preds = %lor.lhs.false251
  %call255 = call zeroext i8 @vectorizable_condition(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %union.tree_node* null, i32 0) #8, !dbg !6500
  %tobool257 = icmp ne i8 %call255, 0, !dbg !6499
  %phitmp1 = zext i1 %tobool257 to i8, !dbg !6499
  br label %lor.end, !dbg !6499

lor.end:                                          ; preds = %lor.lhs.false251, %lor.lhs.false247, %lor.lhs.false243, %lor.lhs.false239, %lor.lhs.false235, %lor.lhs.false231, %lor.lhs.false227, %lor.lhs.false223, %if.then219, %lor.rhs
  %33 = phi i8 [ 1, %lor.lhs.false251 ], [ 1, %lor.lhs.false247 ], [ 1, %lor.lhs.false243 ], [ 1, %lor.lhs.false239 ], [ 1, %lor.lhs.false235 ], [ 1, %lor.lhs.false231 ], [ 1, %lor.lhs.false227 ], [ 1, %lor.lhs.false223 ], [ 1, %if.then219 ], [ %phitmp1, %lor.rhs ]
  call void @llvm.dbg.value(metadata i8 %33, metadata !6383, metadata !DIExpression()), !dbg !6387
  br label %if.end280, !dbg !6501

if.else:                                          ; preds = %lor.lhs.false215
  br i1 true, label %if.end280, label %if.else.if.then260_crit_edge, !dbg !6502

if.else.if.then260_crit_edge:                     ; preds = %if.else
  br label %if.then260, !dbg !6502

if.then260:                                       ; preds = %if.else.if.then260_crit_edge, %if.end209
  %call261 = call fastcc zeroext i8 @vectorizable_operation(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* %node) #8, !dbg !6504
  %tobool263 = icmp eq i8 %call261, 0, !dbg !6504
  br i1 %tobool263, label %lor.lhs.false264, label %lor.end276, !dbg !6506

lor.lhs.false264:                                 ; preds = %if.then260
  %call265 = call fastcc zeroext i8 @vectorizable_assignment(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* %node) #8, !dbg !6507
  %tobool267 = icmp eq i8 %call265, 0, !dbg !6507
  br i1 %tobool267, label %lor.lhs.false268, label %lor.end276, !dbg !6508

lor.lhs.false268:                                 ; preds = %lor.lhs.false264
  %call269 = call fastcc zeroext i8 @vectorizable_load(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* %node, %struct._slp_instance* null) #8, !dbg !6509
  %tobool271 = icmp eq i8 %call269, 0, !dbg !6509
  br i1 %tobool271, label %lor.rhs272, label %lor.end276, !dbg !6510

lor.rhs272:                                       ; preds = %lor.lhs.false268
  %call273 = call fastcc zeroext i8 @vectorizable_store(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null, %struct._slp_tree* %node) #8, !dbg !6511
  %tobool275 = icmp ne i8 %call273, 0, !dbg !6510
  %phitmp = zext i1 %tobool275 to i8, !dbg !6510
  br label %lor.end276, !dbg !6510

lor.end276:                                       ; preds = %lor.lhs.false268, %lor.lhs.false264, %if.then260, %lor.rhs272
  %34 = phi i8 [ 1, %lor.lhs.false268 ], [ 1, %lor.lhs.false264 ], [ 1, %if.then260 ], [ %phitmp, %lor.rhs272 ]
  call void @llvm.dbg.value(metadata i8 %34, metadata !6383, metadata !DIExpression()), !dbg !6387
  br label %if.end280, !dbg !6512

if.end280:                                        ; preds = %if.else, %lor.end276, %lor.end
  %ok.1 = phi i8 [ %33, %lor.end ], [ %34, %lor.end276 ], [ 1, %if.else ], !dbg !6513
  call void @llvm.dbg.value(metadata i8 %ok.1, metadata !6383, metadata !DIExpression()), !dbg !6387
  %tobool281 = icmp eq i8 %ok.1, 0, !dbg !6514
  br i1 %tobool281, label %if.then282, label %if.end289, !dbg !6516

if.then282:                                       ; preds = %if.end280
  %call283 = call zeroext i8 @vect_print_dump_info(i32 2) #6, !dbg !6517
  %tobool284 = icmp eq i8 %call283, 0, !dbg !6517
  br i1 %tobool284, label %cleanup, label %if.then285, !dbg !6520

if.then285:                                       ; preds = %if.then282
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6521
  %call286 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !6523
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6524
  %call287 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !6525
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6526
  call void @print_gimple_stmt(%struct._IO_FILE* %37, %union.gimple_statement_d* %stmt, i32 0, i32 2) #6, !dbg !6527
  br label %cleanup, !dbg !6528

if.end289:                                        ; preds = %if.end280
  br i1 %tobool29, label %if.end292, label %cleanup, !dbg !6529

if.end292:                                        ; preds = %if.end289
  %live293 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 4, !dbg !6530
  %38 = load i8, i8* %live293, align 4, !dbg !6530
  %tobool295 = icmp eq i8 %38, 0, !dbg !6530
  br i1 %tobool295, label %if.end302, label %land.lhs.true296, !dbg !6532

land.lhs.true296:                                 ; preds = %if.end292
  %type297 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !6533
  %39 = load i32, i32* %type297, align 8, !dbg !6533
  %cmp298 = icmp eq i32 %39, 7, !dbg !6534
  br i1 %cmp298, label %if.end302, label %if.then300, !dbg !6535

if.then300:                                       ; preds = %land.lhs.true296
  %call301 = call zeroext i8 @vectorizable_live_operation(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* null, %union.gimple_statement_d** null) #6, !dbg !6536
  call void @llvm.dbg.value(metadata i8 %call301, metadata !6383, metadata !DIExpression()), !dbg !6387
  br label %if.end302, !dbg !6537

if.end302:                                        ; preds = %land.lhs.true296, %if.end292, %if.then300
  %ok.2 = phi i8 [ %call301, %if.then300 ], [ %ok.1, %land.lhs.true296 ], [ %ok.1, %if.end292 ], !dbg !6387
  call void @llvm.dbg.value(metadata i8 %ok.2, metadata !6383, metadata !DIExpression()), !dbg !6387
  %tobool303 = icmp eq i8 %ok.2, 0, !dbg !6538
  br i1 %tobool303, label %if.then304, label %if.end311, !dbg !6540

if.then304:                                       ; preds = %if.end302
  %call305 = call zeroext i8 @vect_print_dump_info(i32 2) #6, !dbg !6541
  %tobool306 = icmp eq i8 %call305, 0, !dbg !6541
  br i1 %tobool306, label %cleanup, label %if.then307, !dbg !6544

if.then307:                                       ; preds = %if.then304
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6545
  %call308 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !6547
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6548
  %call309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !6549
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6550
  call void @print_gimple_stmt(%struct._IO_FILE* %42, %union.gimple_statement_d* %stmt, i32 0, i32 2) #6, !dbg !6551
  br label %cleanup, !dbg !6552

if.end311:                                        ; preds = %if.end302
  %slp_type312 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 25, !dbg !6553
  %43 = load i32, i32* %slp_type312, align 4, !dbg !6553
  %cmp313 = icmp eq i32 %43, 1, !dbg !6553
  br i1 %cmp313, label %cleanup, label %if.then315, !dbg !6555

if.then315:                                       ; preds = %if.end311
  %first_dr = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 17, !dbg !6556
  %44 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr, align 8, !dbg !6556
  %cmp316 = icmp eq %union.gimple_statement_d* %44, null, !dbg !6556
  br i1 %cmp316, label %cleanup, label %land.lhs.true318, !dbg !6559

land.lhs.true318:                                 ; preds = %if.then315
  %call320 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* nonnull %44) #8, !dbg !6560
  %size = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call320, i64 0, i32 19, !dbg !6560
  %45 = load i32, i32* %size, align 8, !dbg !6560
  %conv321 = zext i32 %45 to i64, !dbg !6560
  %call322 = call i32 @exact_log2(i64 %conv321) #6, !dbg !6561
  %cmp323 = icmp eq i32 %call322, -1, !dbg !6562
  br i1 %cmp323, label %if.then325, label %cleanup, !dbg !6563

if.then325:                                       ; preds = %land.lhs.true318
  %call326 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6564
  %tobool327 = icmp eq i8 %call326, 0, !dbg !6564
  br i1 %tobool327, label %cleanup, label %if.then328, !dbg !6567

if.then328:                                       ; preds = %if.then325
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6568
  %call329 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6570
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6571
  call void @print_gimple_stmt(%struct._IO_FILE* %47, %union.gimple_statement_d* %stmt, i32 0, i32 2) #6, !dbg !6572
  br label %cleanup, !dbg !6573

cleanup:                                          ; preds = %if.then6, %if.then325, %if.then315, %if.then304, %if.end289, %if.then282, %if.then15, %if.end311, %land.lhs.true318, %if.then328, %if.then307, %if.then285, %if.then44, %if.then47, %if.then18, %if.then9
  %retval.0 = phi i8 [ 0, %if.then9 ], [ 0, %if.then6 ], [ 1, %if.then18 ], [ 1, %if.then15 ], [ 0, %if.then47 ], [ 0, %if.then44 ], [ 0, %if.then285 ], [ 0, %if.then282 ], [ 1, %if.end289 ], [ 0, %if.then307 ], [ 0, %if.then304 ], [ 0, %if.then328 ], [ 0, %if.then325 ], [ 1, %if.then315 ], [ 1, %land.lhs.true318 ], [ 1, %if.end311 ], !dbg !6387
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6574
  ret i8 %retval.0, !dbg !6574
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_volatile_ops(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6575 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6577, metadata !DIExpression()), !dbg !6578
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %stmt) #8, !dbg !6579
  %tobool = icmp eq i8 %call, 0, !dbg !6579
  br i1 %tobool, label %return, label %if.then, !dbg !6581

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6582
  %bf.load = load i32, i32* %0, align 8, !dbg !6582
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !6582
  %1 = trunc i32 %bf.lshr to i8, !dbg !6583
  %conv = and i8 %1, 1, !dbg !6583
  br label %return, !dbg !6584

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv, %if.then ], [ 0, %entry ], !dbg !6585
  ret i8 %retval.0, !dbg !6586
}

declare dso_local %union.tree_node* @vect_get_smallest_scalar_type(%union.gimple_statement_d*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6587 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6589, metadata !DIExpression()), !dbg !6594
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !6595
  call void @llvm.dbg.value(metadata i32 %call, metadata !6590, metadata !DIExpression()), !dbg !6594
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !6596

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #8, !dbg !6597
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6591, metadata !DIExpression()), !dbg !6599
  br label %cleanup, !dbg !6600

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !6601
  %cond = icmp eq i32 %call5, 66, !dbg !6602
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !6602

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !6603
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6603
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !6603
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6591, metadata !DIExpression()), !dbg !6599
  br label %cleanup, !dbg !6605

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !6606
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6606
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !6606
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6591, metadata !DIExpression()), !dbg !6599
  br label %cleanup, !dbg !6607

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !6608
  br label %cleanup, !dbg !6610

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6611
  br label %cleanup, !dbg !6612

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !6613
  ret %union.tree_node* %retval.0, !dbg !6614
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_type_promotion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %struct._slp_tree* %slp_node) unnamed_addr #5 !dbg !6615 {
entry:
  %code1 = alloca i32, align 4
  %code2 = alloca i32, align 4
  %decl1 = alloca %union.tree_node*, align 8
  %decl2 = alloca %union.tree_node*, align 8
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i64, align 8
  %tmpcast = bitcast i64* %dt to [2 x i32]*
  %prev_stmt_info = alloca %struct._stmt_vec_info*, align 8
  %intermediate_type = alloca %union.tree_node*, align 8
  %multi_step_cvt = alloca i32, align 4
  %vec_oprnds0 = alloca %struct.VEC_tree_heap*, align 8
  %vec_oprnds1 = alloca %struct.VEC_tree_heap*, align 8
  %vec_dsts = alloca %struct.VEC_tree_heap*, align 8
  %interm_types = alloca %struct.VEC_tree_heap*, align 8
  %tmp_vec_dsts = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6617, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6618, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !6619, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !6620, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6624, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6625, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6626, metadata !DIExpression()), !dbg !6653
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !6654
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !6627, metadata !DIExpression()), !dbg !6653
  %loop_vinfo1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !6655
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo1, align 8, !dbg !6655
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !6628, metadata !DIExpression()), !dbg !6653
  %1 = bitcast i32* %code1 to i8*, !dbg !6656
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !6656
  call void @llvm.dbg.value(metadata i32 0, metadata !6630, metadata !DIExpression()), !dbg !6653
  store i32 0, i32* %code1, align 4, !dbg !6657
  %2 = bitcast i32* %code2 to i8*, !dbg !6656
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #7, !dbg !6656
  call void @llvm.dbg.value(metadata i32 0, metadata !6631, metadata !DIExpression()), !dbg !6653
  store i32 0, i32* %code2, align 4, !dbg !6658
  %3 = bitcast %union.tree_node** %decl1 to i8*, !dbg !6659
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6632, metadata !DIExpression()), !dbg !6653
  store %union.tree_node* null, %union.tree_node** %decl1, align 8, !dbg !6660
  %4 = bitcast %union.tree_node** %decl2 to i8*, !dbg !6659
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6633, metadata !DIExpression()), !dbg !6653
  store %union.tree_node* null, %union.tree_node** %decl2, align 8, !dbg !6661
  %5 = bitcast %union.tree_node** %def to i8*, !dbg !6662
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !6662
  %6 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !6663
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !6663
  %7 = bitcast i64* %dt to i8*, !dbg !6664
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !6664
  call void @llvm.dbg.declare(metadata [2 x i32]* %tmpcast, metadata !6637, metadata !DIExpression()), !dbg !6665
  store i64 34359738376, i64* %dt, align 8, !dbg !6665
  %8 = bitcast %struct._stmt_vec_info** %prev_stmt_info to i8*, !dbg !6666
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !6666
  %9 = bitcast %union.tree_node** %intermediate_type to i8*, !dbg !6667
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !6667
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6646, metadata !DIExpression()), !dbg !6653
  store %union.tree_node* null, %union.tree_node** %intermediate_type, align 8, !dbg !6668
  %10 = bitcast i32* %multi_step_cvt to i8*, !dbg !6669
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7, !dbg !6669
  call void @llvm.dbg.value(metadata i32 0, metadata !6647, metadata !DIExpression()), !dbg !6653
  store i32 0, i32* %multi_step_cvt, align 4, !dbg !6670
  %11 = bitcast %struct.VEC_tree_heap** %vec_oprnds0 to i8*, !dbg !6671
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7, !dbg !6671
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6648, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !6672
  %12 = bitcast %struct.VEC_tree_heap** %vec_oprnds1 to i8*, !dbg !6671
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7, !dbg !6671
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6649, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !6673
  %13 = bitcast %struct.VEC_tree_heap** %vec_dsts to i8*, !dbg !6674
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7, !dbg !6674
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6650, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !6675
  %14 = bitcast %struct.VEC_tree_heap** %interm_types to i8*, !dbg !6674
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7, !dbg !6674
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6651, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !6676
  %15 = bitcast %struct.VEC_tree_heap** %tmp_vec_dsts to i8*, !dbg !6674
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7, !dbg !6674
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6652, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %tmp_vec_dsts, align 8, !dbg !6677
  %tobool = icmp eq %struct._loop_vec_info* %0, null, !dbg !6678
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6678

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2682, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6678
  br label %cond.end, !dbg !6678

cond.end:                                         ; preds = %entry, %cond.true
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !6679
  %16 = load i32, i32* %relevant, align 8, !dbg !6679
  %cmp = icmp eq i32 %16, 0, !dbg !6679
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6681

if.end:                                           ; preds = %cond.end
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !6682
  %17 = load i32, i32* %def_type, align 8, !dbg !6682
  %cmp2 = icmp eq i32 %17, 3, !dbg !6684
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !6685

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !6686
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6686
  br i1 %tobool6, label %cleanup, label %if.end8, !dbg !6688

if.end8:                                          ; preds = %if.end4
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6689
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6689
  %bf.load = load i64, i64* %18, align 8, !dbg !6689
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6691
  %cmp10 = icmp eq i64 %bf.cast1, 141, !dbg !6691
  br i1 %cmp10, label %if.end12, label %cleanup, !dbg !6692

if.end12:                                         ; preds = %if.end8
  %call13 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !6693
  call void @llvm.dbg.value(metadata i32 %call13, metadata !6629, metadata !DIExpression()), !dbg !6653
  switch i32 %call13, label %cleanup [
    i32 116, label %if.end18
    i32 113, label %if.end18
    i32 169, label %if.end18
  ], !dbg !6694

if.end18:                                         ; preds = %if.end12, %if.end12, %if.end12
  %call19 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !6696
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !6623, metadata !DIExpression()), !dbg !6653
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6697
  %19 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6697
  %call20 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %19) #8, !dbg !6698
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !6645, metadata !DIExpression()), !dbg !6653
  %tobool21 = icmp eq %union.tree_node* %call20, null, !dbg !6699
  br i1 %tobool21, label %cleanup, label %if.end23, !dbg !6701

if.end23:                                         ; preds = %if.end18
  %type24 = bitcast %union.tree_node* %call20 to %struct.tree_type*, !dbg !6702
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type24, i64 0, i32 6, !dbg !6702
  %bf.load25 = load i32, i32* %precision, align 4, !dbg !6702
  %bf.clear26 = and i32 %bf.load25, 1023, !dbg !6702
  %sh_prom = zext i32 %bf.clear26 to i64, !dbg !6702
  %shl = shl i64 1, %sh_prom, !dbg !6702
  %conv = trunc i64 %shl to i32, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6639, metadata !DIExpression()), !dbg !6653
  %call27 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6703
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !6622, metadata !DIExpression()), !dbg !6653
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6704
  %20 = load %union.tree_node*, %union.tree_node** %type29, align 8, !dbg !6704
  %call30 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %20) #8, !dbg !6705
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !6641, metadata !DIExpression()), !dbg !6653
  %tobool31 = icmp eq %union.tree_node* %call30, null, !dbg !6706
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !6708

if.end33:                                         ; preds = %if.end23
  %type34 = bitcast %union.tree_node* %call30 to %struct.tree_type*, !dbg !6709
  %precision35 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type34, i64 0, i32 6, !dbg !6709
  %bf.load36 = load i32, i32* %precision35, align 4, !dbg !6709
  %bf.clear37 = and i32 %bf.load36, 1023, !dbg !6709
  %sh_prom38 = zext i32 %bf.clear37 to i64, !dbg !6709
  %shl39 = shl i64 1, %sh_prom38, !dbg !6709
  %conv40 = trunc i64 %shl39 to i32, !dbg !6709
  call void @llvm.dbg.value(metadata i32 %conv40, metadata !6640, metadata !DIExpression()), !dbg !6653
  %cmp41 = icmp sgt i32 %conv, %conv40, !dbg !6710
  br i1 %cmp41, label %if.end44, label %cleanup, !dbg !6712

if.end44:                                         ; preds = %if.end33
  %tobool45 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !6713
  br i1 %tobool45, label %if.else, label %if.end47, !dbg !6715

if.else:                                          ; preds = %if.end44
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 6, !dbg !6716
  %21 = load i32, i32* %vectorization_factor, align 8, !dbg !6716
  %div = sdiv i32 %21, %conv, !dbg !6717
  call void @llvm.dbg.value(metadata i32 %div, metadata !6642, metadata !DIExpression()), !dbg !6653
  br label %if.end47

if.end47:                                         ; preds = %if.end44, %if.else
  %ncopies.0 = phi i32 [ %div, %if.else ], [ 1, %if.end44 ], !dbg !6718
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !6642, metadata !DIExpression()), !dbg !6653
  %cmp48 = icmp sgt i32 %ncopies.0, 0, !dbg !6719
  br i1 %cmp48, label %cond.end52, label %cond.true50, !dbg !6719

cond.true50:                                      ; preds = %if.end47
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2724, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6719
  br label %cond.end52, !dbg !6719

cond.end52:                                       ; preds = %if.end47, %cond.true50
  %22 = bitcast %union.tree_node** %type29 to i64**, !dbg !6720
  %23 = load i64*, i64** %22, align 8, !dbg !6720
  %bf.load57 = load i64, i64* %23, align 8, !dbg !6720
  %bf.cast592 = and i64 %bf.load57, 65535, !dbg !6720
  %cmp60 = icmp eq i64 %bf.cast592, 6, !dbg !6720
  br i1 %cmp60, label %land.lhs.true80, label %lor.lhs.false62, !dbg !6720

lor.lhs.false62:                                  ; preds = %cond.end52
  %cmp69 = icmp eq i64 %bf.cast592, 7, !dbg !6720
  br i1 %cmp69, label %land.lhs.true80, label %lor.lhs.false71, !dbg !6720

lor.lhs.false71:                                  ; preds = %lor.lhs.false62
  %cmp78 = icmp eq i64 %bf.cast592, 8, !dbg !6720
  br i1 %cmp78, label %land.lhs.true80, label %lor.lhs.false107, !dbg !6722

land.lhs.true80:                                  ; preds = %lor.lhs.false71, %lor.lhs.false62, %cond.end52
  %24 = bitcast %union.tree_node** %type to i64**, !dbg !6723
  %25 = load i64*, i64** %24, align 8, !dbg !6723
  %bf.load84 = load i64, i64* %25, align 8, !dbg !6723
  %bf.cast867 = and i64 %bf.load84, 65535, !dbg !6723
  %cmp87 = icmp eq i64 %bf.cast867, 6, !dbg !6723
  br i1 %cmp87, label %if.end132, label %lor.lhs.false89, !dbg !6723

lor.lhs.false89:                                  ; preds = %land.lhs.true80
  %cmp96 = icmp eq i64 %bf.cast867, 7, !dbg !6723
  br i1 %cmp96, label %if.end132, label %lor.lhs.false98, !dbg !6723

lor.lhs.false98:                                  ; preds = %lor.lhs.false89
  %cmp105 = icmp eq i64 %bf.cast867, 8, !dbg !6723
  br i1 %cmp105, label %if.end132, label %lor.lhs.false107, !dbg !6724

lor.lhs.false107:                                 ; preds = %lor.lhs.false98, %lor.lhs.false71
  %cmp114 = icmp eq i64 %bf.cast592, 9, !dbg !6725
  br i1 %cmp114, label %land.lhs.true116, label %cleanup, !dbg !6726

land.lhs.true116:                                 ; preds = %lor.lhs.false107
  %26 = bitcast %union.tree_node** %type to i64**, !dbg !6727
  %27 = load i64*, i64** %26, align 8, !dbg !6727
  %bf.load120 = load i64, i64* %27, align 8, !dbg !6727
  %bf.cast1226 = and i64 %bf.load120, 65535, !dbg !6727
  %cmp123 = icmp eq i64 %bf.cast1226, 9, !dbg !6727
  br i1 %cmp123, label %land.lhs.true125, label %cleanup, !dbg !6728

land.lhs.true125:                                 ; preds = %land.lhs.true116
  switch i32 %call13, label %cleanup [
    i32 116, label %if.end132
    i32 113, label %if.end132
  ], !dbg !6729

if.end132:                                        ; preds = %land.lhs.true125, %land.lhs.true125, %lor.lhs.false98, %lor.lhs.false89, %land.lhs.true80
  %arrayidx = bitcast i64* %dt to i32*, !dbg !6730
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6635, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !6636, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  %call133 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call19, %struct._loop_vec_info* %0, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx) #8, !dbg !6732
  %tobool134 = icmp eq i8 %call133, 0, !dbg !6732
  br i1 %tobool134, label %if.then135, label %if.end141, !dbg !6733

if.then135:                                       ; preds = %if.end132
  %call136 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6734
  %tobool137 = icmp eq i8 %call136, 0, !dbg !6734
  br i1 %tobool137, label %cleanup, label %if.then138, !dbg !6737

if.then138:                                       ; preds = %if.then135
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6738
  %call139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !6739
  br label %cleanup, !dbg !6739

if.end141:                                        ; preds = %if.end132
  %idxprom = sext i32 %call13 to i64, !dbg !6740
  %arrayidx142 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !6740
  %29 = load i8, i8* %arrayidx142, align 1, !dbg !6740
  %conv143 = zext i8 %29 to i32, !dbg !6740
  call void @llvm.dbg.value(metadata i32 %conv143, metadata !6634, metadata !DIExpression()), !dbg !6653
  %cmp144 = icmp eq i8 %29, 2, !dbg !6741
  br i1 %cmp144, label %if.then146, label %if.end158, !dbg !6743

if.then146:                                       ; preds = %if.end141
  %call147 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #8, !dbg !6744
  call void @llvm.dbg.value(metadata %union.tree_node* %call147, metadata !6624, metadata !DIExpression()), !dbg !6653
  %arrayidx148 = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 1, !dbg !6746
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6635, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !6636, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  %call149 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call147, %struct._loop_vec_info* %0, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx148) #8, !dbg !6748
  %tobool150 = icmp eq i8 %call149, 0, !dbg !6748
  br i1 %tobool150, label %if.then151, label %if.end158, !dbg !6749

if.then151:                                       ; preds = %if.then146
  %call152 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6750
  %tobool153 = icmp eq i8 %call152, 0, !dbg !6750
  br i1 %tobool153, label %cleanup, label %if.then154, !dbg !6753

if.then154:                                       ; preds = %if.then151
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6754
  %call155 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !6755
  br label %cleanup, !dbg !6755

if.end158:                                        ; preds = %if.then146, %if.end141
  %op1.0 = phi %union.tree_node* [ null, %if.end141 ], [ %call147, %if.then146 ], !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !6624, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata i32* %code1, metadata !6630, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata i32* %code2, metadata !6631, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node** %decl1, metadata !6632, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node** %decl2, metadata !6633, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata i32* %multi_step_cvt, metadata !6647, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %interm_types, metadata !6651, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  %call159 = call zeroext i8 @supportable_widening_operation(i32 %call13, %union.gimple_statement_d* %stmt, %union.tree_node* nonnull %call20, %union.tree_node** nonnull %decl1, %union.tree_node** nonnull %decl2, i32* nonnull %code1, i32* nonnull %code2, i32* nonnull %multi_step_cvt, %struct.VEC_tree_heap** nonnull %interm_types) #8, !dbg !6756
  %tobool160 = icmp eq i8 %call159, 0, !dbg !6756
  br i1 %tobool160, label %cleanup, label %if.end162, !dbg !6758

if.end162:                                        ; preds = %if.end158
  %31 = load i32, i32* %multi_step_cvt, align 4, !dbg !6759
  call void @llvm.dbg.value(metadata i32 %31, metadata !6647, metadata !DIExpression()), !dbg !6653
  %tobool163 = icmp ne i32 %31, 0, !dbg !6759
  %or.cond = and i1 %tobool163, %cmp144, !dbg !6759
  br i1 %or.cond, label %cond.true167, label %cond.end169, !dbg !6759

cond.true167:                                     ; preds = %if.end162
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2761, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6759
  br label %cond.end169, !dbg !6759

cond.end169:                                      ; preds = %if.end162, %cond.true167
  %vectype = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !6760
  store %union.tree_node* %call20, %union.tree_node** %vectype, align 8, !dbg !6761
  %tobool171 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !6762
  br i1 %tobool171, label %if.then172, label %if.end179, !dbg !6764

if.then172:                                       ; preds = %cond.end169
  %type173 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !6765
  store i32 9, i32* %type173, align 8, !dbg !6767
  %call174 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6768
  %tobool175 = icmp eq i8 %call174, 0, !dbg !6768
  br i1 %tobool175, label %if.end178, label %if.then176, !dbg !6770

if.then176:                                       ; preds = %if.then172
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6771
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i64 0, i64 0)) #6, !dbg !6772
  br label %if.end178, !dbg !6772

if.end178:                                        ; preds = %if.then172, %if.then176
  %mul = shl nsw i32 %ncopies.0, 1, !dbg !6773
  call void @vect_model_simple_cost(%struct._stmt_vec_info* %call, i32 %mul, i32* nonnull %arrayidx, %struct._slp_tree* null) #8, !dbg !6774
  br label %cleanup, !dbg !6775

if.end179:                                        ; preds = %cond.end169
  %call180 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6776
  %tobool181 = icmp eq i8 %call180, 0, !dbg !6776
  br i1 %tobool181, label %if.end184, label %if.then182, !dbg !6778

if.then182:                                       ; preds = %if.end179
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6779
  %call183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.65, i64 0, i64 0), i32 %ncopies.0) #6, !dbg !6780
  br label %if.end184, !dbg !6780

if.end184:                                        ; preds = %if.end179, %if.then182
  %34 = load i32, i32* %multi_step_cvt, align 4, !dbg !6781
  call void @llvm.dbg.value(metadata i32 %34, metadata !6647, metadata !DIExpression()), !dbg !6653
  %tobool185 = icmp eq i32 %34, 0, !dbg !6781
  br i1 %tobool185, label %if.else188, label %if.then186, !dbg !6783

if.then186:                                       ; preds = %if.end184
  call void @llvm.dbg.value(metadata i32 %34, metadata !6647, metadata !DIExpression()), !dbg !6653
  %add = add nsw i32 %34, 1, !dbg !6784
  %call187 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %add) #8, !dbg !6784
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call187, metadata !6650, metadata !DIExpression()), !dbg !6653
  br label %if.end190, !dbg !6785

if.else188:                                       ; preds = %if.end184
  %call189 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !6786
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call189, metadata !6650, metadata !DIExpression()), !dbg !6653
  br label %if.end190

if.end190:                                        ; preds = %if.else188, %if.then186
  %storemerge = phi %struct.VEC_tree_heap* [ %call189, %if.else188 ], [ %call187, %if.then186 ], !dbg !6787
  store %struct.VEC_tree_heap* %storemerge, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !6787
  %call191 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call27, %union.tree_node* nonnull %call30) #6, !dbg !6788
  call void @llvm.dbg.value(metadata %union.tree_node* %call191, metadata !6621, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %storemerge, metadata !6650, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %storemerge, metadata !6650, metadata !DIExpression()), !dbg !6653
  %base194 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %storemerge, i64 0, i32 0, !dbg !6789
  %call198 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base194, %union.tree_node* %call191) #8, !dbg !6789
  %35 = load i32, i32* %multi_step_cvt, align 4, !dbg !6790
  call void @llvm.dbg.value(metadata i32 %35, metadata !6647, metadata !DIExpression()), !dbg !6653
  %tobool199 = icmp eq i32 %35, 0, !dbg !6790
  br i1 %tobool199, label %if.end224, label %if.then200, !dbg !6792

if.then200:                                       ; preds = %if.end190
  %36 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !6793
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %36, metadata !6651, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %36, metadata !6651, metadata !DIExpression()), !dbg !6653
  %base203 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %36, i64 0, i32 0, !dbg !6793
  %call207 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base203) #8, !dbg !6793
  call void @llvm.dbg.value(metadata i32 %call207, metadata !6644, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6653
  br label %for.cond, !dbg !6796

for.cond:                                         ; preds = %for.body, %if.then200
  %i.0.in = phi i32 [ %call207, %if.then200 ], [ %i.0, %for.body ]
  %i.0 = add i32 %i.0.in, -1, !dbg !6797
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6644, metadata !DIExpression()), !dbg !6653
  %37 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !6798
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %37, metadata !6651, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %37, metadata !6651, metadata !DIExpression()), !dbg !6653
  %base210 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %37, i64 0, i32 0, !dbg !6798
  call void @llvm.dbg.value(metadata %union.tree_node** %intermediate_type, metadata !6646, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  %call214 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base210, i32 %i.0, %union.tree_node** nonnull %intermediate_type) #8, !dbg !6798
  %tobool215 = icmp eq i32 %call214, 0, !dbg !6800
  br i1 %tobool215, label %if.end224.loopexit, label %for.body, !dbg !6800

for.body:                                         ; preds = %for.cond
  %38 = load %union.tree_node*, %union.tree_node** %intermediate_type, align 8, !dbg !6801
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !6646, metadata !DIExpression()), !dbg !6653
  %call216 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call27, %union.tree_node* %38) #6, !dbg !6803
  call void @llvm.dbg.value(metadata %union.tree_node* %call216, metadata !6621, metadata !DIExpression()), !dbg !6653
  %39 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !6804
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %39, metadata !6650, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %39, metadata !6650, metadata !DIExpression()), !dbg !6653
  %base219 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %39, i64 0, i32 0, !dbg !6804
  %call223 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base219, %union.tree_node* %call216) #8, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6644, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6653
  br label %for.cond, !dbg !6805, !llvm.loop !6806

if.end224.loopexit:                               ; preds = %for.cond
  br label %if.end224, !dbg !6808

if.end224:                                        ; preds = %if.end224.loopexit, %if.end190
  br i1 %tobool45, label %if.then226, label %if.end239, !dbg !6810

if.then226:                                       ; preds = %if.end224
  %40 = load i32, i32* %multi_step_cvt, align 4, !dbg !6811
  call void @llvm.dbg.value(metadata i32 %40, metadata !6647, metadata !DIExpression()), !dbg !6653
  %tobool227 = icmp eq i32 %40, 0, !dbg !6811
  br i1 %tobool227, label %cond.end231, label %cond.true228, !dbg !6811

cond.true228:                                     ; preds = %if.then226
  call void @llvm.dbg.value(metadata i32 %40, metadata !6647, metadata !DIExpression()), !dbg !6653
  %call229 = call fastcc i32 @vect_pow2(i32 %40) #8, !dbg !6811
  br label %cond.end231, !dbg !6811

cond.end231:                                      ; preds = %if.then226, %cond.true228
  %cond232 = phi i32 [ %call229, %cond.true228 ], [ 1, %if.then226 ], !dbg !6811
  %call233 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %cond232) #8, !dbg !6811
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call233, metadata !6648, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* %call233, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !6813
  br i1 %cmp144, label %if.then236, label %if.end239, !dbg !6814

if.then236:                                       ; preds = %cond.end231
  %call237 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !6815
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call237, metadata !6649, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* %call237, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !6817
  br label %if.end239, !dbg !6818

if.end239:                                        ; preds = %if.end224, %cond.end231, %if.then236
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !6638, metadata !DIExpression()), !dbg !6653
  store %struct._stmt_vec_info* null, %struct._stmt_vec_info** %prev_stmt_info, align 8, !dbg !6819
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6653
  %arrayidx284 = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 1, !dbg !6820
  br i1 %cmp144, label %if.end239.split.us, label %if.end239.if.end239.split_crit_edge, !dbg !6828

if.end239.if.end239.split_crit_edge:              ; preds = %if.end239
  br label %for.cond240, !dbg !6828

if.end239.split.us:                               ; preds = %if.end239
  br label %for.cond240.us, !dbg !6828

for.cond240.us:                                   ; preds = %if.end294.us, %if.end239.split.us
  %vec_oprnd0.0.us = phi %union.tree_node* [ null, %if.end239.split.us ], [ %vec_oprnd0.2.us, %if.end294.us ], !dbg !6829
  %vec_oprnd1.0.us = phi %union.tree_node* [ null, %if.end239.split.us ], [ %vec_oprnd1.4.us, %if.end294.us ], !dbg !6830
  %j.0.us = phi i32 [ 0, %if.end239.split.us ], [ %inc.us, %if.end294.us ], !dbg !6831
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !6643, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1.0.us, metadata !6626, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0.0.us, metadata !6625, metadata !DIExpression()), !dbg !6653
  %cmp241.us = icmp slt i32 %j.0.us, %ncopies.0, !dbg !6832
  br i1 %cmp241.us, label %for.body243.us, label %for.end303.us-lcssa.us, !dbg !6833

for.body243.us:                                   ; preds = %for.cond240.us
  %cmp244.us = icmp eq i32 %j.0.us, 0, !dbg !6834
  br i1 %cmp244.us, label %if.then246.us, label %if.else271.us, !dbg !6835

if.else271.us:                                    ; preds = %for.body243.us
  %41 = load i32, i32* %arrayidx, align 8, !dbg !6836
  %call273.us = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %41, %union.tree_node* %vec_oprnd0.0.us) #8, !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %call273.us, metadata !6625, metadata !DIExpression()), !dbg !6653
  %42 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !6838
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %42, metadata !6648, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %42, metadata !6648, metadata !DIExpression()), !dbg !6653
  %base276.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %42, i64 0, i32 0, !dbg !6838
  %call280.us = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base276.us, i32 0, %union.tree_node* %call273.us) #8, !dbg !6838
  %43 = load i32, i32* %arrayidx284, align 4, !dbg !6839
  %call285.us = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %43, %union.tree_node* %vec_oprnd1.0.us) #8, !dbg !6840
  call void @llvm.dbg.value(metadata %union.tree_node* %call285.us, metadata !6626, metadata !DIExpression()), !dbg !6653
  %44 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !6841
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %44, metadata !6649, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %44, metadata !6649, metadata !DIExpression()), !dbg !6653
  %base288.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %44, i64 0, i32 0, !dbg !6841
  %call292.us = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base288.us, i32 0, %union.tree_node* %call285.us) #8, !dbg !6841
  br label %if.end294.us, !dbg !6842

if.then246.us:                                    ; preds = %for.body243.us
  br i1 %tobool45, label %if.else249.us, label %if.then248.us, !dbg !6843

if.then248.us:                                    ; preds = %if.then246.us
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6648, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !6649, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @vect_get_slp_defs(%struct._slp_tree* nonnull %slp_node, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** nonnull %vec_oprnds1) #6, !dbg !6845
  br label %if.end294.us, !dbg !6845

if.else249.us:                                    ; preds = %if.then246.us
  %call250.us = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %call19, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !6847
  call void @llvm.dbg.value(metadata %union.tree_node* %call250.us, metadata !6625, metadata !DIExpression()), !dbg !6653
  %45 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !6849
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %45, metadata !6648, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %45, metadata !6648, metadata !DIExpression()), !dbg !6653
  %base253.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %45, i64 0, i32 0, !dbg !6849
  %call257.us = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base253.us, %union.tree_node* %call250.us) #8, !dbg !6849
  br i1 true, label %if.then260.us, label %if.else249.us.if.end294.us_crit_edge, !dbg !6850

if.else249.us.if.end294.us_crit_edge:             ; preds = %if.else249.us
  br label %if.end294.us, !dbg !6850

if.then260.us:                                    ; preds = %if.else249.us
  %call261.us = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %op1.0, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !6851
  call void @llvm.dbg.value(metadata %union.tree_node* %call261.us, metadata !6626, metadata !DIExpression()), !dbg !6653
  %46 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !6854
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %46, metadata !6649, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %46, metadata !6649, metadata !DIExpression()), !dbg !6653
  %base264.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %46, i64 0, i32 0, !dbg !6854
  %call268.us = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base264.us, %union.tree_node* %call261.us) #8, !dbg !6854
  br label %if.end294.us, !dbg !6855

if.end294.us:                                     ; preds = %if.else249.us.if.end294.us_crit_edge, %if.then260.us, %if.then248.us, %if.else271.us
  %vec_oprnd0.2.us = phi %union.tree_node* [ %vec_oprnd0.0.us, %if.then248.us ], [ %call250.us, %if.then260.us ], [ undef, %if.else249.us.if.end294.us_crit_edge ], [ %call273.us, %if.else271.us ], !dbg !6653
  %vec_oprnd1.4.us = phi %union.tree_node* [ %vec_oprnd1.0.us, %if.then248.us ], [ %call261.us, %if.then260.us ], [ undef, %if.else249.us.if.end294.us_crit_edge ], [ %call285.us, %if.else271.us ], !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1.4.us, metadata !6626, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0.2.us, metadata !6625, metadata !DIExpression()), !dbg !6653
  %47 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !6856
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %47, metadata !6650, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %47, metadata !6650, metadata !DIExpression()), !dbg !6653
  %base297.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %47, i64 0, i32 0, !dbg !6856
  %call301.us = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_copy(%struct.VEC_tree_base* %base297.us) #8, !dbg !6856
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call301.us, metadata !6652, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* %call301.us, %struct.VEC_tree_heap** %tmp_vec_dsts, align 8, !dbg !6857
  %48 = load i32, i32* %multi_step_cvt, align 4, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %48, metadata !6647, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call301.us, metadata !6652, metadata !DIExpression()), !dbg !6653
  %49 = load i32, i32* %code1, align 4, !dbg !6859
  call void @llvm.dbg.value(metadata i32 %49, metadata !6630, metadata !DIExpression()), !dbg !6653
  %50 = load i32, i32* %code2, align 4, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %50, metadata !6631, metadata !DIExpression()), !dbg !6653
  %51 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !6861
  call void @llvm.dbg.value(metadata %union.tree_node* %51, metadata !6632, metadata !DIExpression()), !dbg !6653
  %52 = load %union.tree_node*, %union.tree_node** %decl2, align 8, !dbg !6862
  call void @llvm.dbg.value(metadata %union.tree_node* %52, metadata !6633, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info** %prev_stmt_info, metadata !6638, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6648, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !6649, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call fastcc void @vect_create_vectorized_promotion_stmts(%struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** nonnull %vec_oprnds1, i32 %48, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %call301.us, %struct.gimple_stmt_iterator* %gsi, %struct._slp_tree* %slp_node, i32 %49, i32 %50, %union.tree_node* %51, %union.tree_node* %52, i32 %conv143, %struct._stmt_vec_info** nonnull %prev_stmt_info) #8, !dbg !6863
  %inc.us = add nuw nsw i32 %j.0.us, 1, !dbg !6864
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !6643, metadata !DIExpression()), !dbg !6653
  br label %for.cond240.us, !dbg !6865, !llvm.loop !6866

for.end303.us-lcssa.us:                           ; preds = %for.cond240.us
  br label %for.end303, !dbg !6868

for.cond240:                                      ; preds = %if.end294, %if.end239.if.end239.split_crit_edge
  %vec_oprnd0.0 = phi %union.tree_node* [ null, %if.end239.if.end239.split_crit_edge ], [ %vec_oprnd0.2, %if.end294 ], !dbg !6829
  %j.0 = phi i32 [ 0, %if.end239.if.end239.split_crit_edge ], [ %inc, %if.end294 ], !dbg !6831
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6643, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6626, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0.0, metadata !6625, metadata !DIExpression()), !dbg !6653
  %cmp241 = icmp slt i32 %j.0, %ncopies.0, !dbg !6832
  br i1 %cmp241, label %for.body243, label %for.end303.us-lcssa, !dbg !6833

for.body243:                                      ; preds = %for.cond240
  %cmp244 = icmp eq i32 %j.0, 0, !dbg !6834
  br i1 %cmp244, label %if.then246, label %if.else271, !dbg !6835

if.then246:                                       ; preds = %for.body243
  br i1 %tobool45, label %if.else249, label %if.then248, !dbg !6843

if.then248:                                       ; preds = %if.then246
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6648, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !6649, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @vect_get_slp_defs(%struct._slp_tree* nonnull %slp_node, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** nonnull %vec_oprnds1) #6, !dbg !6845
  br label %if.end294, !dbg !6845

if.else249:                                       ; preds = %if.then246
  %call250 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %call19, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !6847
  call void @llvm.dbg.value(metadata %union.tree_node* %call250, metadata !6625, metadata !DIExpression()), !dbg !6653
  %53 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !6849
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %53, metadata !6648, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %53, metadata !6648, metadata !DIExpression()), !dbg !6653
  %base253 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %53, i64 0, i32 0, !dbg !6849
  %call257 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base253, %union.tree_node* %call250) #8, !dbg !6849
  br i1 false, label %if.then260, label %if.end294, !dbg !6850

if.then260:                                       ; preds = %if.else249
  br label %if.end294, !dbg !6855

if.else271:                                       ; preds = %for.body243
  %54 = load i32, i32* %arrayidx, align 8, !dbg !6836
  %call273 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %54, %union.tree_node* %vec_oprnd0.0) #8, !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %call273, metadata !6625, metadata !DIExpression()), !dbg !6653
  %55 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !6838
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %55, metadata !6648, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %55, metadata !6648, metadata !DIExpression()), !dbg !6653
  %base276 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %55, i64 0, i32 0, !dbg !6838
  %call280 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base276, i32 0, %union.tree_node* %call273) #8, !dbg !6838
  br label %if.end294, !dbg !6869

if.end294:                                        ; preds = %if.else271, %if.then248, %if.then260, %if.else249
  %vec_oprnd0.2 = phi %union.tree_node* [ %vec_oprnd0.0, %if.then248 ], [ undef, %if.then260 ], [ %call250, %if.else249 ], [ %call273, %if.else271 ], !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6626, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0.2, metadata !6625, metadata !DIExpression()), !dbg !6653
  %56 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !6856
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %56, metadata !6650, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %56, metadata !6650, metadata !DIExpression()), !dbg !6653
  %base297 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %56, i64 0, i32 0, !dbg !6856
  %call301 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_copy(%struct.VEC_tree_base* %base297) #8, !dbg !6856
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call301, metadata !6652, metadata !DIExpression()), !dbg !6653
  store %struct.VEC_tree_heap* %call301, %struct.VEC_tree_heap** %tmp_vec_dsts, align 8, !dbg !6857
  %57 = load i32, i32* %multi_step_cvt, align 4, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %57, metadata !6647, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call301, metadata !6652, metadata !DIExpression()), !dbg !6653
  %58 = load i32, i32* %code1, align 4, !dbg !6859
  call void @llvm.dbg.value(metadata i32 %58, metadata !6630, metadata !DIExpression()), !dbg !6653
  %59 = load i32, i32* %code2, align 4, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %59, metadata !6631, metadata !DIExpression()), !dbg !6653
  %60 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !6861
  call void @llvm.dbg.value(metadata %union.tree_node* %60, metadata !6632, metadata !DIExpression()), !dbg !6653
  %61 = load %union.tree_node*, %union.tree_node** %decl2, align 8, !dbg !6862
  call void @llvm.dbg.value(metadata %union.tree_node* %61, metadata !6633, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info** %prev_stmt_info, metadata !6638, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6648, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !6649, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call fastcc void @vect_create_vectorized_promotion_stmts(%struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** nonnull %vec_oprnds1, i32 %57, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %call301, %struct.gimple_stmt_iterator* %gsi, %struct._slp_tree* %slp_node, i32 %58, i32 %59, %union.tree_node* %60, %union.tree_node* %61, i32 %conv143, %struct._stmt_vec_info** nonnull %prev_stmt_info) #8, !dbg !6863
  %inc = add nuw nsw i32 %j.0, 1, !dbg !6864
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6643, metadata !DIExpression()), !dbg !6653
  br label %for.cond240, !dbg !6865, !llvm.loop !6866

for.end303.us-lcssa:                              ; preds = %for.cond240
  br label %for.end303, !dbg !6868

for.end303:                                       ; preds = %for.end303.us-lcssa.us, %for.end303.us-lcssa
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_dsts, metadata !6650, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_dsts) #8, !dbg !6868
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %tmp_vec_dsts, metadata !6652, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %tmp_vec_dsts) #8, !dbg !6870
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %interm_types, metadata !6651, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %interm_types) #8, !dbg !6871
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6648, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds0) #8, !dbg !6872
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !6649, metadata !DIExpression(DW_OP_deref)), !dbg !6653
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds1) #8, !dbg !6873
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !6874
  %62 = bitcast %union.gimple_statement_d** %vectorized_stmt to i64*, !dbg !6874
  %63 = load i64, i64* %62, align 8, !dbg !6874
  %64 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !6875
  store i64 %63, i64* %64, align 8, !dbg !6875
  br label %cleanup, !dbg !6876

cleanup:                                          ; preds = %if.then151, %if.end158, %if.then135, %if.end33, %if.end23, %if.end18, %if.end8, %if.end4, %if.end, %cond.end, %if.then154, %if.then138, %lor.lhs.false107, %land.lhs.true116, %land.lhs.true125, %if.end12, %for.end303, %if.end178
  %retval.0 = phi i8 [ 1, %for.end303 ], [ 1, %if.end178 ], [ 0, %cond.end ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %if.end8 ], [ 0, %if.end12 ], [ 0, %if.end18 ], [ 0, %if.end23 ], [ 0, %if.end33 ], [ 0, %land.lhs.true125 ], [ 0, %land.lhs.true116 ], [ 0, %lor.lhs.false107 ], [ 0, %if.then138 ], [ 0, %if.then135 ], [ 0, %if.then154 ], [ 0, %if.then151 ], [ 0, %if.end158 ], !dbg !6653
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #7, !dbg !6877
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !6877
  ret i8 %retval.0, !dbg !6877
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_type_demotion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %struct._slp_tree* %slp_node) unnamed_addr #5 !dbg !6878 {
entry:
  %code1 = alloca i32, align 4
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i64, align 8
  %prev_stmt_info = alloca %struct._stmt_vec_info*, align 8
  %multi_step_cvt = alloca i32, align 4
  %vec_oprnds0 = alloca %struct.VEC_tree_heap*, align 8
  %vec_dsts = alloca %struct.VEC_tree_heap*, align 8
  %interm_types = alloca %struct.VEC_tree_heap*, align 8
  %tmp_vec_dsts = alloca %struct.VEC_tree_heap*, align 8
  %last_oprnd = alloca %union.tree_node*, align 8
  %intermediate_type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6880, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6881, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !6882, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !6883, metadata !DIExpression()), !dbg !6909
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !6910
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !6887, metadata !DIExpression()), !dbg !6909
  %loop_vinfo1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !6911
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo1, align 8, !dbg !6911
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !6888, metadata !DIExpression()), !dbg !6909
  %1 = bitcast i32* %code1 to i8*, !dbg !6912
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !6912
  call void @llvm.dbg.value(metadata i32 0, metadata !6890, metadata !DIExpression()), !dbg !6909
  store i32 0, i32* %code1, align 4, !dbg !6913
  %2 = bitcast %union.tree_node** %def to i8*, !dbg !6914
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6914
  %3 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !6915
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !6915
  %4 = bitcast i64* %dt to i8*, !dbg !6916
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !6916
  call void @llvm.dbg.value(metadata i64 34359738376, metadata !6893, metadata !DIExpression()), !dbg !6909
  store i64 34359738376, i64* %dt, align 8, !dbg !6917
  %5 = bitcast %struct._stmt_vec_info** %prev_stmt_info to i8*, !dbg !6918
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !6918
  %6 = bitcast i32* %multi_step_cvt to i8*, !dbg !6919
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7, !dbg !6919
  call void @llvm.dbg.value(metadata i32 0, metadata !6902, metadata !DIExpression()), !dbg !6909
  store i32 0, i32* %multi_step_cvt, align 4, !dbg !6920
  %7 = bitcast %struct.VEC_tree_heap** %vec_oprnds0 to i8*, !dbg !6921
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !6921
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6903, metadata !DIExpression()), !dbg !6909
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !6922
  %8 = bitcast %struct.VEC_tree_heap** %vec_dsts to i8*, !dbg !6923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !6923
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6904, metadata !DIExpression()), !dbg !6909
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !6924
  %9 = bitcast %struct.VEC_tree_heap** %interm_types to i8*, !dbg !6923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !6923
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6905, metadata !DIExpression()), !dbg !6909
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !6925
  %10 = bitcast %struct.VEC_tree_heap** %tmp_vec_dsts to i8*, !dbg !6923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7, !dbg !6923
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6906, metadata !DIExpression()), !dbg !6909
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %tmp_vec_dsts, align 8, !dbg !6926
  %11 = bitcast %union.tree_node** %last_oprnd to i8*, !dbg !6927
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7, !dbg !6927
  %12 = bitcast %union.tree_node** %intermediate_type to i8*, !dbg !6927
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7, !dbg !6927
  %tobool = icmp eq %struct._loop_vec_info* %0, null, !dbg !6928
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6928

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6928
  br label %cond.end, !dbg !6928

cond.end:                                         ; preds = %entry, %cond.true
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !6929
  %13 = load i32, i32* %relevant, align 8, !dbg !6929
  %cmp = icmp eq i32 %13, 0, !dbg !6929
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6931

if.end:                                           ; preds = %cond.end
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !6932
  %14 = load i32, i32* %def_type, align 8, !dbg !6932
  %cmp2 = icmp eq i32 %14, 3, !dbg !6934
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !6935

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !6936
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6936
  br i1 %tobool6, label %cleanup, label %if.end8, !dbg !6938

if.end8:                                          ; preds = %if.end4
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6939
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6939
  %bf.load = load i64, i64* %15, align 8, !dbg !6939
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6941
  %cmp10 = icmp eq i64 %bf.cast1, 141, !dbg !6941
  br i1 %cmp10, label %if.end12, label %cleanup, !dbg !6942

if.end12:                                         ; preds = %if.end8
  %call13 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !6943
  call void @llvm.dbg.value(metadata i32 %call13, metadata !6889, metadata !DIExpression()), !dbg !6909
  switch i32 %call13, label %cleanup [
    i32 116, label %if.end17
    i32 113, label %if.end17
  ], !dbg !6944

if.end17:                                         ; preds = %if.end12, %if.end12
  %call18 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !6946
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !6886, metadata !DIExpression()), !dbg !6909
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6947
  %16 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6947
  %call19 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %16) #8, !dbg !6948
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !6901, metadata !DIExpression()), !dbg !6909
  %tobool20 = icmp eq %union.tree_node* %call19, null, !dbg !6949
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !6951

if.end22:                                         ; preds = %if.end17
  %type23 = bitcast %union.tree_node* %call19 to %struct.tree_type*, !dbg !6952
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i64 0, i32 6, !dbg !6952
  %bf.load24 = load i32, i32* %precision, align 4, !dbg !6952
  call void @llvm.dbg.value(metadata i32 undef, metadata !6895, metadata !DIExpression()), !dbg !6909
  %call26 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6953
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !6885, metadata !DIExpression()), !dbg !6909
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6954
  %17 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !6954
  %call29 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %17) #8, !dbg !6955
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !6897, metadata !DIExpression()), !dbg !6909
  %tobool30 = icmp eq %union.tree_node* %call29, null, !dbg !6956
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !6958

if.end32:                                         ; preds = %if.end22
  %bf.clear25 = and i32 %bf.load24, 1023, !dbg !6952
  %sh_prom = zext i32 %bf.clear25 to i64, !dbg !6952
  %shl = shl i64 1, %sh_prom, !dbg !6952
  %conv = trunc i64 %shl to i32, !dbg !6952
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6895, metadata !DIExpression()), !dbg !6909
  %type33 = bitcast %union.tree_node* %call29 to %struct.tree_type*, !dbg !6959
  %precision34 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type33, i64 0, i32 6, !dbg !6959
  %bf.load35 = load i32, i32* %precision34, align 4, !dbg !6959
  %bf.clear36 = and i32 %bf.load35, 1023, !dbg !6959
  %sh_prom37 = zext i32 %bf.clear36 to i64, !dbg !6959
  %shl38 = shl i64 1, %sh_prom37, !dbg !6959
  %conv39 = trunc i64 %shl38 to i32, !dbg !6959
  call void @llvm.dbg.value(metadata i32 %conv39, metadata !6896, metadata !DIExpression()), !dbg !6909
  %cmp40 = icmp slt i32 %conv, %conv39, !dbg !6960
  br i1 %cmp40, label %if.end43, label %cleanup, !dbg !6962

if.end43:                                         ; preds = %if.end32
  %tobool44 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !6963
  br i1 %tobool44, label %if.else, label %if.end46, !dbg !6965

if.else:                                          ; preds = %if.end43
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 6, !dbg !6966
  %18 = load i32, i32* %vectorization_factor, align 8, !dbg !6966
  %div = sdiv i32 %18, %conv39, !dbg !6967
  call void @llvm.dbg.value(metadata i32 %div, metadata !6898, metadata !DIExpression()), !dbg !6909
  br label %if.end46

if.end46:                                         ; preds = %if.end43, %if.else
  %ncopies.0 = phi i32 [ %div, %if.else ], [ 1, %if.end43 ], !dbg !6968
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !6898, metadata !DIExpression()), !dbg !6909
  %cmp47 = icmp sgt i32 %ncopies.0, 0, !dbg !6969
  br i1 %cmp47, label %cond.end51, label %cond.true49, !dbg !6969

cond.true49:                                      ; preds = %if.end46
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2453, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !6969
  br label %cond.end51, !dbg !6969

cond.end51:                                       ; preds = %if.end46, %cond.true49
  %19 = bitcast %union.tree_node** %type28 to i64**, !dbg !6970
  %20 = load i64*, i64** %19, align 8, !dbg !6970
  %bf.load56 = load i64, i64* %20, align 8, !dbg !6970
  %bf.cast582 = and i64 %bf.load56, 65535, !dbg !6970
  %cmp59 = icmp eq i64 %bf.cast582, 6, !dbg !6970
  br i1 %cmp59, label %land.lhs.true, label %lor.lhs.false61, !dbg !6970

lor.lhs.false61:                                  ; preds = %cond.end51
  %cmp68 = icmp eq i64 %bf.cast582, 7, !dbg !6970
  br i1 %cmp68, label %land.lhs.true, label %lor.lhs.false70, !dbg !6970

lor.lhs.false70:                                  ; preds = %lor.lhs.false61
  %cmp77 = icmp eq i64 %bf.cast582, 8, !dbg !6970
  br i1 %cmp77, label %land.lhs.true, label %lor.lhs.false105, !dbg !6972

land.lhs.true:                                    ; preds = %lor.lhs.false70, %lor.lhs.false61, %cond.end51
  %21 = bitcast %union.tree_node** %type to i64**, !dbg !6973
  %22 = load i64*, i64** %21, align 8, !dbg !6973
  %bf.load82 = load i64, i64* %22, align 8, !dbg !6973
  %bf.cast847 = and i64 %bf.load82, 65535, !dbg !6973
  %cmp85 = icmp eq i64 %bf.cast847, 6, !dbg !6973
  br i1 %cmp85, label %if.end130, label %lor.lhs.false87, !dbg !6973

lor.lhs.false87:                                  ; preds = %land.lhs.true
  %cmp94 = icmp eq i64 %bf.cast847, 7, !dbg !6973
  br i1 %cmp94, label %if.end130, label %lor.lhs.false96, !dbg !6973

lor.lhs.false96:                                  ; preds = %lor.lhs.false87
  %cmp103 = icmp eq i64 %bf.cast847, 8, !dbg !6973
  br i1 %cmp103, label %if.end130, label %lor.lhs.false105, !dbg !6974

lor.lhs.false105:                                 ; preds = %lor.lhs.false96, %lor.lhs.false70
  %cmp112 = icmp eq i64 %bf.cast582, 9, !dbg !6975
  br i1 %cmp112, label %land.lhs.true114, label %cleanup, !dbg !6976

land.lhs.true114:                                 ; preds = %lor.lhs.false105
  %23 = bitcast %union.tree_node** %type to i64**, !dbg !6977
  %24 = load i64*, i64** %23, align 8, !dbg !6977
  %bf.load118 = load i64, i64* %24, align 8, !dbg !6977
  %bf.cast1206 = and i64 %bf.load118, 65535, !dbg !6977
  %cmp121 = icmp eq i64 %bf.cast1206, 9, !dbg !6977
  br i1 %cmp121, label %land.lhs.true123, label %cleanup, !dbg !6978

land.lhs.true123:                                 ; preds = %land.lhs.true114
  switch i32 %call13, label %cleanup [
    i32 116, label %if.end130
    i32 113, label %if.end130
  ], !dbg !6979

if.end130:                                        ; preds = %land.lhs.true123, %land.lhs.true123, %lor.lhs.false96, %lor.lhs.false87, %land.lhs.true
  %arrayidx = bitcast i64* %dt to i32*, !dbg !6980
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6891, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !6892, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  %call131 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call18, %struct._loop_vec_info* %0, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx) #8, !dbg !6982
  %tobool132 = icmp eq i8 %call131, 0, !dbg !6982
  br i1 %tobool132, label %if.then133, label %if.end139, !dbg !6983

if.then133:                                       ; preds = %if.end130
  %call134 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !6984
  %tobool135 = icmp eq i8 %call134, 0, !dbg !6984
  br i1 %tobool135, label %cleanup, label %if.then136, !dbg !6987

if.then136:                                       ; preds = %if.then133
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !6988
  %call137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !6989
  br label %cleanup, !dbg !6989

if.end139:                                        ; preds = %if.end130
  call void @llvm.dbg.value(metadata i32* %code1, metadata !6890, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call void @llvm.dbg.value(metadata i32* %multi_step_cvt, metadata !6902, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %interm_types, metadata !6905, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  %call140 = call zeroext i8 @supportable_narrowing_operation(i32 %call13, %union.gimple_statement_d* %stmt, %union.tree_node* nonnull %call19, i32* nonnull %code1, i32* nonnull %multi_step_cvt, %struct.VEC_tree_heap** nonnull %interm_types) #8, !dbg !6990
  %tobool141 = icmp eq i8 %call140, 0, !dbg !6990
  br i1 %tobool141, label %cleanup, label %if.end143, !dbg !6992

if.end143:                                        ; preds = %if.end139
  %vectype = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !6993
  store %union.tree_node* %call19, %union.tree_node** %vectype, align 8, !dbg !6994
  %tobool144 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !6995
  br i1 %tobool144, label %if.then145, label %if.end152, !dbg !6997

if.then145:                                       ; preds = %if.end143
  %type146 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !6998
  store i32 10, i32* %type146, align 8, !dbg !7000
  %call147 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7001
  %tobool148 = icmp eq i8 %call147, 0, !dbg !7001
  br i1 %tobool148, label %if.end151, label %if.then149, !dbg !7003

if.then149:                                       ; preds = %if.then145
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7004
  %call150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.66, i64 0, i64 0)) #6, !dbg !7005
  br label %if.end151, !dbg !7005

if.end151:                                        ; preds = %if.then145, %if.then149
  call void @vect_model_simple_cost(%struct._stmt_vec_info* %call, i32 %ncopies.0, i32* nonnull %arrayidx, %struct._slp_tree* null) #8, !dbg !7006
  br label %cleanup, !dbg !7007

if.end152:                                        ; preds = %if.end143
  %call153 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7008
  %tobool154 = icmp eq i8 %call153, 0, !dbg !7008
  br i1 %tobool154, label %if.end157, label %if.then155, !dbg !7010

if.then155:                                       ; preds = %if.end152
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7011
  %call156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.67, i64 0, i64 0), i32 %ncopies.0) #6, !dbg !7012
  br label %if.end157, !dbg !7012

if.end157:                                        ; preds = %if.end152, %if.then155
  %28 = load i32, i32* %multi_step_cvt, align 4, !dbg !7013
  call void @llvm.dbg.value(metadata i32 %28, metadata !6902, metadata !DIExpression()), !dbg !6909
  %tobool158 = icmp eq i32 %28, 0, !dbg !7013
  br i1 %tobool158, label %if.else161, label %if.then159, !dbg !7015

if.then159:                                       ; preds = %if.end157
  call void @llvm.dbg.value(metadata i32 %28, metadata !6902, metadata !DIExpression()), !dbg !6909
  %add = add nsw i32 %28, 1, !dbg !7016
  %call160 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %add) #8, !dbg !7016
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call160, metadata !6904, metadata !DIExpression()), !dbg !6909
  br label %if.end163, !dbg !7017

if.else161:                                       ; preds = %if.end157
  %call162 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !7018
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call162, metadata !6904, metadata !DIExpression()), !dbg !6909
  br label %if.end163

if.end163:                                        ; preds = %if.else161, %if.then159
  %storemerge = phi %struct.VEC_tree_heap* [ %call162, %if.else161 ], [ %call160, %if.then159 ], !dbg !7019
  store %struct.VEC_tree_heap* %storemerge, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !7019
  %call164 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call26, %union.tree_node* nonnull %call29) #6, !dbg !7020
  call void @llvm.dbg.value(metadata %union.tree_node* %call164, metadata !6884, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %storemerge, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %storemerge, metadata !6904, metadata !DIExpression()), !dbg !6909
  %base167 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %storemerge, i64 0, i32 0, !dbg !7021
  %call171 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base167, %union.tree_node* %call164) #8, !dbg !7021
  %29 = load i32, i32* %multi_step_cvt, align 4, !dbg !7022
  call void @llvm.dbg.value(metadata i32 %29, metadata !6902, metadata !DIExpression()), !dbg !6909
  %tobool172 = icmp eq i32 %29, 0, !dbg !7022
  br i1 %tobool172, label %if.end197, label %if.then173, !dbg !7024

if.then173:                                       ; preds = %if.end163
  %30 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !7025
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %30, metadata !6905, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %30, metadata !6905, metadata !DIExpression()), !dbg !6909
  %base176 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %30, i64 0, i32 0, !dbg !7025
  %call180 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base176) #8, !dbg !7025
  call void @llvm.dbg.value(metadata i32 %call180, metadata !6900, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6909
  br label %for.cond, !dbg !7028

for.cond:                                         ; preds = %for.body, %if.then173
  %i.0.in = phi i32 [ %call180, %if.then173 ], [ %i.0, %for.body ]
  %i.0 = add i32 %i.0.in, -1, !dbg !7029
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6900, metadata !DIExpression()), !dbg !6909
  %31 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !7030
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %31, metadata !6905, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %31, metadata !6905, metadata !DIExpression()), !dbg !6909
  %base183 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %31, i64 0, i32 0, !dbg !7030
  call void @llvm.dbg.value(metadata %union.tree_node** %intermediate_type, metadata !6908, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  %call187 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base183, i32 %i.0, %union.tree_node** nonnull %intermediate_type) #8, !dbg !7030
  %tobool188 = icmp eq i32 %call187, 0, !dbg !7032
  br i1 %tobool188, label %if.end197.loopexit, label %for.body, !dbg !7032

for.body:                                         ; preds = %for.cond
  %32 = load %union.tree_node*, %union.tree_node** %intermediate_type, align 8, !dbg !7033
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !6908, metadata !DIExpression()), !dbg !6909
  %call189 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call26, %union.tree_node* %32) #6, !dbg !7035
  call void @llvm.dbg.value(metadata %union.tree_node* %call189, metadata !6884, metadata !DIExpression()), !dbg !6909
  %33 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !7036
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !6904, metadata !DIExpression()), !dbg !6909
  %base192 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %33, i64 0, i32 0, !dbg !7036
  %call196 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base192, %union.tree_node* %call189) #8, !dbg !7036
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6900, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6909
  br label %for.cond, !dbg !7037, !llvm.loop !7038

if.end197.loopexit:                               ; preds = %for.cond
  br label %if.end197, !dbg !7040

if.end197:                                        ; preds = %if.end197.loopexit, %if.end163
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !6907, metadata !DIExpression()), !dbg !6909
  store %union.tree_node* %call18, %union.tree_node** %last_oprnd, align 8, !dbg !7040
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !6894, metadata !DIExpression()), !dbg !6909
  store %struct._stmt_vec_info* null, %struct._stmt_vec_info** %prev_stmt_info, align 8, !dbg !7041
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6909
  br i1 %tobool44, label %if.end197.split.us, label %if.end197.if.end197.split_crit_edge, !dbg !7042

if.end197.if.end197.split_crit_edge:              ; preds = %if.end197
  br label %for.cond198, !dbg !7042

if.end197.split.us:                               ; preds = %if.end197
  br label %for.cond198.us, !dbg !7042

for.cond198.us:                                   ; preds = %cond.end209.us, %if.end197.split.us
  %j.0.us = phi i32 [ 0, %if.end197.split.us ], [ %inc.us, %cond.end209.us ], !dbg !7044
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !6899, metadata !DIExpression()), !dbg !6909
  %cmp199.us = icmp slt i32 %j.0.us, %ncopies.0, !dbg !7045
  br i1 %cmp199.us, label %for.body201.us, label %for.end224.us-lcssa.us, !dbg !7047

for.body201.us:                                   ; preds = %for.cond198.us
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6903, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds0) #8, !dbg !7048
  %34 = load i32, i32* %multi_step_cvt, align 4, !dbg !7052
  call void @llvm.dbg.value(metadata i32 %34, metadata !6902, metadata !DIExpression()), !dbg !6909
  %tobool205.us = icmp eq i32 %34, 0, !dbg !7052
  br i1 %tobool205.us, label %cond.end209.us, label %cond.true206.us, !dbg !7052

cond.true206.us:                                  ; preds = %for.body201.us
  call void @llvm.dbg.value(metadata i32 %34, metadata !6902, metadata !DIExpression()), !dbg !6909
  %call207.us = call fastcc i32 @vect_pow2(i32 %34) #8, !dbg !7052
  %mul.us = shl nsw i32 %call207.us, 1, !dbg !7052
  br label %cond.end209.us, !dbg !7052

cond.end209.us:                                   ; preds = %cond.true206.us, %for.body201.us
  %cond210.us = phi i32 [ %mul.us, %cond.true206.us ], [ 2, %for.body201.us ], !dbg !7052
  %call211.us = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %cond210.us) #8, !dbg !7052
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call211.us, metadata !6903, metadata !DIExpression()), !dbg !6909
  store %struct.VEC_tree_heap* %call211.us, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7053
  %35 = load i32, i32* %arrayidx, align 8, !dbg !7054
  %36 = load i32, i32* %multi_step_cvt, align 4, !dbg !7055
  call void @llvm.dbg.value(metadata i32 %36, metadata !6902, metadata !DIExpression()), !dbg !6909
  %call213.us = call fastcc i32 @vect_pow2(i32 %36) #8, !dbg !7056
  %sub214.us = add nsw i32 %call213.us, -1, !dbg !7057
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6903, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call void @llvm.dbg.value(metadata %union.tree_node** %last_oprnd, metadata !6907, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @vect_get_loop_based_defs(%union.tree_node** nonnull %last_oprnd, %union.gimple_statement_d* %stmt, i32 %35, %struct.VEC_tree_heap** nonnull %vec_oprnds0, i32 %sub214.us) #8, !dbg !7058
  %37 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !7059
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %37, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %37, metadata !6904, metadata !DIExpression()), !dbg !6909
  %base218.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %37, i64 0, i32 0, !dbg !7059
  %call222.us = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_copy(%struct.VEC_tree_base* %base218.us) #8, !dbg !7059
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call222.us, metadata !6906, metadata !DIExpression()), !dbg !6909
  store %struct.VEC_tree_heap* %call222.us, %struct.VEC_tree_heap** %tmp_vec_dsts, align 8, !dbg !7060
  %38 = load i32, i32* %multi_step_cvt, align 4, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %38, metadata !6902, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call222.us, metadata !6906, metadata !DIExpression()), !dbg !6909
  %39 = load i32, i32* %code1, align 4, !dbg !7062
  call void @llvm.dbg.value(metadata i32 %39, metadata !6890, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info** %prev_stmt_info, metadata !6894, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6903, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @vect_create_vectorized_demotion_stmts(%struct.VEC_tree_heap** nonnull %vec_oprnds0, i32 %38, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %call222.us, %struct.gimple_stmt_iterator* %gsi, %struct._slp_tree* null, i32 %39, %struct._stmt_vec_info** nonnull %prev_stmt_info) #8, !dbg !7063
  %inc.us = add nuw nsw i32 %j.0.us, 1, !dbg !7064
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !6899, metadata !DIExpression()), !dbg !6909
  br label %for.cond198.us, !dbg !7065, !llvm.loop !7066

for.end224.us-lcssa.us:                           ; preds = %for.cond198.us
  br label %for.end224, !dbg !7068

for.cond198:                                      ; preds = %for.body201, %if.end197.if.end197.split_crit_edge
  %j.0 = phi i32 [ 0, %if.end197.if.end197.split_crit_edge ], [ %inc, %for.body201 ], !dbg !7044
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6899, metadata !DIExpression()), !dbg !6909
  %cmp199 = icmp slt i32 %j.0, %ncopies.0, !dbg !7045
  br i1 %cmp199, label %for.body201, label %for.end224.us-lcssa, !dbg !7047

for.body201:                                      ; preds = %for.cond198
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6903, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call void @vect_get_slp_defs(%struct._slp_tree* nonnull %slp_node, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** null) #6, !dbg !7069
  %40 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_dsts, align 8, !dbg !7059
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %40, metadata !6904, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %40, metadata !6904, metadata !DIExpression()), !dbg !6909
  %base218 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %40, i64 0, i32 0, !dbg !7059
  %call222 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_copy(%struct.VEC_tree_base* %base218) #8, !dbg !7059
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call222, metadata !6906, metadata !DIExpression()), !dbg !6909
  store %struct.VEC_tree_heap* %call222, %struct.VEC_tree_heap** %tmp_vec_dsts, align 8, !dbg !7060
  %41 = load i32, i32* %multi_step_cvt, align 4, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %41, metadata !6902, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call222, metadata !6906, metadata !DIExpression()), !dbg !6909
  %42 = load i32, i32* %code1, align 4, !dbg !7062
  call void @llvm.dbg.value(metadata i32 %42, metadata !6890, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info** %prev_stmt_info, metadata !6894, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6903, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @vect_create_vectorized_demotion_stmts(%struct.VEC_tree_heap** nonnull %vec_oprnds0, i32 %41, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %call222, %struct.gimple_stmt_iterator* %gsi, %struct._slp_tree* nonnull %slp_node, i32 %42, %struct._stmt_vec_info** nonnull %prev_stmt_info) #8, !dbg !7063
  %inc = add nuw nsw i32 %j.0, 1, !dbg !7064
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6899, metadata !DIExpression()), !dbg !6909
  br label %for.cond198, !dbg !7065, !llvm.loop !7066

for.end224.us-lcssa:                              ; preds = %for.cond198
  br label %for.end224, !dbg !7068

for.end224:                                       ; preds = %for.end224.us-lcssa.us, %for.end224.us-lcssa
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !6903, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds0) #8, !dbg !7068
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_dsts, metadata !6904, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_dsts) #8, !dbg !7070
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %tmp_vec_dsts, metadata !6906, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %tmp_vec_dsts) #8, !dbg !7071
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %interm_types, metadata !6905, metadata !DIExpression(DW_OP_deref)), !dbg !6909
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %interm_types) #8, !dbg !7072
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !7073
  %43 = bitcast %union.gimple_statement_d** %vectorized_stmt to i64*, !dbg !7073
  %44 = load i64, i64* %43, align 8, !dbg !7073
  %45 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !7074
  store i64 %44, i64* %45, align 8, !dbg !7074
  br label %cleanup, !dbg !7075

cleanup:                                          ; preds = %if.end139, %if.then133, %if.end32, %if.end22, %if.end17, %if.end8, %if.end4, %if.end, %cond.end, %if.then136, %lor.lhs.false105, %land.lhs.true114, %land.lhs.true123, %if.end12, %for.end224, %if.end151
  %retval.0 = phi i8 [ 1, %for.end224 ], [ 1, %if.end151 ], [ 0, %cond.end ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %if.end8 ], [ 0, %if.end12 ], [ 0, %if.end17 ], [ 0, %if.end22 ], [ 0, %if.end32 ], [ 0, %land.lhs.true123 ], [ 0, %land.lhs.true114 ], [ 0, %lor.lhs.false105 ], [ 0, %if.then136 ], [ 0, %if.then133 ], [ 0, %if.end139 ], !dbg !6909
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !7076
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !7076
  ret i8 %retval.0, !dbg !7076
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_conversion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %struct._slp_tree* %slp_node) unnamed_addr #5 !dbg !2163 {
entry:
  %code1 = alloca i32, align 4
  %code2 = alloca i32, align 4
  %decl1 = alloca %union.tree_node*, align 8
  %decl2 = alloca %union.tree_node*, align 8
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i64, align 8
  %vec_oprnds0 = alloca %struct.VEC_tree_heap*, align 8
  %vop0 = alloca %union.tree_node*, align 8
  %dummy = alloca %struct.VEC_tree_heap*, align 8
  %dummy_int = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3552, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3553, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !3554, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !3555, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3559, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3560, metadata !DIExpression()), !dbg !7077
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !7078
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !3561, metadata !DIExpression()), !dbg !7077
  %loop_vinfo1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !7079
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo1, align 8, !dbg !7079
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !3827, metadata !DIExpression()), !dbg !7077
  %1 = bitcast i32* %code1 to i8*, !dbg !7080
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !7080
  call void @llvm.dbg.value(metadata i32 0, metadata !3829, metadata !DIExpression()), !dbg !7077
  store i32 0, i32* %code1, align 4, !dbg !7081
  %2 = bitcast i32* %code2 to i8*, !dbg !7080
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #7, !dbg !7080
  call void @llvm.dbg.value(metadata i32 0, metadata !3830, metadata !DIExpression()), !dbg !7077
  store i32 0, i32* %code2, align 4, !dbg !7082
  %3 = bitcast %union.tree_node** %decl1 to i8*, !dbg !7083
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7083
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3831, metadata !DIExpression()), !dbg !7077
  store %union.tree_node* null, %union.tree_node** %decl1, align 8, !dbg !7084
  %4 = bitcast %union.tree_node** %decl2 to i8*, !dbg !7083
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7083
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3832, metadata !DIExpression()), !dbg !7077
  store %union.tree_node* null, %union.tree_node** %decl2, align 8, !dbg !7085
  %5 = bitcast %union.tree_node** %def to i8*, !dbg !7086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7086
  %6 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !7087
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7087
  %7 = bitcast i64* %dt to i8*, !dbg !7088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7088
  call void @llvm.dbg.value(metadata i64 34359738376, metadata !3836, metadata !DIExpression()), !dbg !7077
  store i64 34359738376, i64* %dt, align 8, !dbg !7089
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !3838, metadata !DIExpression()), !dbg !7077
  %8 = bitcast %struct.VEC_tree_heap** %vec_oprnds0 to i8*, !dbg !7090
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !7090
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3851, metadata !DIExpression()), !dbg !7077
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7091
  %9 = bitcast %union.tree_node** %vop0 to i8*, !dbg !7092
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !7092
  %10 = bitcast %struct.VEC_tree_heap** %dummy to i8*, !dbg !7093
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7, !dbg !7093
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3854, metadata !DIExpression()), !dbg !7077
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %dummy, align 8, !dbg !7094
  %11 = bitcast i32* %dummy_int to i8*, !dbg !7095
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7, !dbg !7095
  %tobool = icmp eq %struct._loop_vec_info* %0, null, !dbg !7096
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7096

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1568, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7096
  br label %cond.end, !dbg !7096

cond.end:                                         ; preds = %entry, %cond.true
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !7097
  %12 = load i32, i32* %relevant, align 8, !dbg !7097
  %cmp = icmp eq i32 %12, 0, !dbg !7097
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7099

if.end:                                           ; preds = %cond.end
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !7100
  %13 = load i32, i32* %def_type, align 8, !dbg !7100
  %cmp2 = icmp eq i32 %13, 3, !dbg !7102
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !7103

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !7104
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7104
  br i1 %tobool6, label %cleanup, label %if.end8, !dbg !7106

if.end8:                                          ; preds = %if.end4
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !7107
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7107
  %bf.load = load i64, i64* %14, align 8, !dbg !7107
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7109
  %cmp10 = icmp eq i64 %bf.cast2, 141, !dbg !7109
  br i1 %cmp10, label %if.end12, label %cleanup, !dbg !7110

if.end12:                                         ; preds = %if.end8
  %call13 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !7111
  call void @llvm.dbg.value(metadata i32 %call13, metadata !3828, metadata !DIExpression()), !dbg !7077
  %call13.off = add i32 %call13, -77, !dbg !7112
  %switch = icmp ult i32 %call13.off, 2, !dbg !7112
  br i1 %switch, label %if.end17, label %cleanup, !dbg !7112

if.end17:                                         ; preds = %if.end12
  %call18 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !7114
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !3558, metadata !DIExpression()), !dbg !7077
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7115
  %15 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7115
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3846, metadata !DIExpression()), !dbg !7077
  %call19 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %15) #8, !dbg !7116
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !3843, metadata !DIExpression()), !dbg !7077
  %tobool20 = icmp eq %union.tree_node* %call19, null, !dbg !7117
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !7119

if.end22:                                         ; preds = %if.end17
  %type23 = bitcast %union.tree_node* %call19 to %struct.tree_type*, !dbg !7120
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type23, i64 0, i32 6, !dbg !7120
  %bf.load24 = load i32, i32* %precision, align 4, !dbg !7120
  %bf.clear25 = and i32 %bf.load24, 1023, !dbg !7120
  %sh_prom = zext i32 %bf.clear25 to i64, !dbg !7120
  %shl = shl i64 1, %sh_prom, !dbg !7120
  %conv = trunc i64 %shl to i32, !dbg !7120
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3840, metadata !DIExpression()), !dbg !7077
  %call26 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !7121
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !3557, metadata !DIExpression()), !dbg !7077
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7122
  %16 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !7122
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !3847, metadata !DIExpression()), !dbg !7077
  %call29 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %16) #8, !dbg !7123
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !3842, metadata !DIExpression()), !dbg !7077
  %tobool30 = icmp eq %union.tree_node* %call29, null, !dbg !7124
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !7126

if.end32:                                         ; preds = %if.end22
  %type33 = bitcast %union.tree_node* %call29 to %struct.tree_type*, !dbg !7127
  %precision34 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type33, i64 0, i32 6, !dbg !7127
  %bf.load35 = load i32, i32* %precision34, align 4, !dbg !7127
  %bf.clear36 = and i32 %bf.load35, 1023, !dbg !7127
  %sh_prom37 = zext i32 %bf.clear36 to i64, !dbg !7127
  %shl38 = shl i64 1, %sh_prom37, !dbg !7127
  %conv39 = trunc i64 %shl38 to i32, !dbg !7127
  call void @llvm.dbg.value(metadata i32 %conv39, metadata !3841, metadata !DIExpression()), !dbg !7077
  %div = sdiv i32 %conv39, 2, !dbg !7128
  %cmp40 = icmp eq i32 %div, %conv, !dbg !7130
  br i1 %cmp40, label %if.end54, label %if.else, !dbg !7131

if.else:                                          ; preds = %if.end32
  %cmp43 = icmp eq i32 %conv39, %conv, !dbg !7132
  br i1 %cmp43, label %if.end54, label %if.else46, !dbg !7134

if.else46:                                        ; preds = %if.else
  %div47 = sdiv i32 %conv, 2, !dbg !7135
  %cmp48 = icmp eq i32 %div47, %conv39, !dbg !7137
  br i1 %cmp48, label %if.end54, label %cleanup, !dbg !7138

if.end54:                                         ; preds = %if.else, %if.else46, %if.end32
  %modifier.1 = phi i32 [ 0, %if.end32 ], [ 1, %if.else ], [ 2, %if.else46 ], !dbg !7139
  call void @llvm.dbg.value(metadata i32 %modifier.1, metadata !3849, metadata !DIExpression()), !dbg !7077
  %cmp55 = icmp eq i32 %modifier.1, 1, !dbg !7140
  br i1 %cmp55, label %if.then57, label %if.end64, !dbg !7142

if.then57:                                        ; preds = %if.end54
  %vectype = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !7143
  %17 = load %union.tree_node*, %union.tree_node** %vectype, align 8, !dbg !7143
  %cmp58 = icmp eq %union.tree_node* %17, %call29, !dbg !7143
  br i1 %cmp58, label %if.end64, label %cond.true60, !dbg !7143

cond.true60:                                      ; preds = %if.then57
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1612, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7143
  br label %if.end64, !dbg !7143

if.end64:                                         ; preds = %cond.true60, %if.then57, %if.end54
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7144
  %bf.load66 = load i64, i64* %18, align 8, !dbg !7144
  %bf.cast683 = and i64 %bf.load66, 65535, !dbg !7144
  %cmp69 = icmp eq i64 %bf.cast683, 6, !dbg !7144
  br i1 %cmp69, label %land.lhs.true84, label %lor.lhs.false, !dbg !7144

lor.lhs.false:                                    ; preds = %if.end64
  %cmp75 = icmp eq i64 %bf.cast683, 7, !dbg !7144
  br i1 %cmp75, label %land.lhs.true84, label %lor.lhs.false77, !dbg !7144

lor.lhs.false77:                                  ; preds = %lor.lhs.false
  %cmp82 = icmp eq i64 %bf.cast683, 8, !dbg !7144
  br i1 %cmp82, label %land.lhs.true84, label %lor.lhs.false105, !dbg !7146

land.lhs.true84:                                  ; preds = %lor.lhs.false77, %lor.lhs.false, %if.end64
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7147
  %bf.load86 = load i64, i64* %19, align 8, !dbg !7147
  %bf.cast8815 = and i64 %bf.load86, 65535, !dbg !7147
  %cmp89 = icmp eq i64 %bf.cast8815, 6, !dbg !7147
  br i1 %cmp89, label %cleanup, label %lor.lhs.false91, !dbg !7147

lor.lhs.false91:                                  ; preds = %land.lhs.true84
  %cmp96 = icmp eq i64 %bf.cast8815, 7, !dbg !7147
  br i1 %cmp96, label %cleanup, label %lor.lhs.false98, !dbg !7147

lor.lhs.false98:                                  ; preds = %lor.lhs.false91
  %cmp103 = icmp eq i64 %bf.cast8815, 8, !dbg !7147
  br i1 %cmp103, label %cleanup, label %lor.lhs.false105, !dbg !7148

lor.lhs.false105:                                 ; preds = %lor.lhs.false98, %lor.lhs.false77
  br i1 %cmp69, label %if.end148, label %lor.lhs.false112, !dbg !7149

lor.lhs.false112:                                 ; preds = %lor.lhs.false105
  %cmp117 = icmp eq i64 %bf.cast683, 7, !dbg !7149
  br i1 %cmp117, label %if.end148, label %lor.lhs.false119, !dbg !7149

lor.lhs.false119:                                 ; preds = %lor.lhs.false112
  %cmp124 = icmp eq i64 %bf.cast683, 8, !dbg !7149
  br i1 %cmp124, label %if.end148, label %land.lhs.true126, !dbg !7150

land.lhs.true126:                                 ; preds = %lor.lhs.false119
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7151
  %bf.load128 = load i64, i64* %20, align 8, !dbg !7151
  %bf.cast1309 = and i64 %bf.load128, 65535, !dbg !7151
  %cmp131 = icmp eq i64 %bf.cast1309, 6, !dbg !7151
  br i1 %cmp131, label %if.end148, label %lor.lhs.false133, !dbg !7151

lor.lhs.false133:                                 ; preds = %land.lhs.true126
  %cmp138 = icmp eq i64 %bf.cast1309, 7, !dbg !7151
  br i1 %cmp138, label %if.end148, label %lor.lhs.false140, !dbg !7151

lor.lhs.false140:                                 ; preds = %lor.lhs.false133
  %cmp145 = icmp eq i64 %bf.cast1309, 8, !dbg !7151
  br i1 %cmp145, label %if.end148, label %cleanup, !dbg !7152

if.end148:                                        ; preds = %lor.lhs.false140, %lor.lhs.false133, %land.lhs.true126, %lor.lhs.false119, %lor.lhs.false112, %lor.lhs.false105
  br i1 %cmp69, label %cond.end171, label %lor.lhs.false155, !dbg !7153

lor.lhs.false155:                                 ; preds = %if.end148
  %cmp160 = icmp eq i64 %bf.cast683, 7, !dbg !7153
  br i1 %cmp160, label %cond.end171, label %lor.lhs.false162, !dbg !7153

lor.lhs.false162:                                 ; preds = %lor.lhs.false155
  %cmp167 = icmp eq i64 %bf.cast683, 8, !dbg !7153
  %spec.select1 = select i1 %cmp167, %union.tree_node* %call19, %union.tree_node* %call29, !dbg !7153
  br label %cond.end171, !dbg !7153

cond.end171:                                      ; preds = %lor.lhs.false162, %if.end148, %lor.lhs.false155
  %cond172 = phi %union.tree_node* [ %call19, %lor.lhs.false155 ], [ %call19, %if.end148 ], [ %spec.select1, %lor.lhs.false162 ], !dbg !7153
  call void @llvm.dbg.value(metadata %union.tree_node* %cond172, metadata !3853, metadata !DIExpression()), !dbg !7077
  %cmp173 = icmp eq i32 %modifier.1, 0, !dbg !7154
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 6, !dbg !7156
  %21 = load i32, i32* %vectorization_factor, align 8, !dbg !7156
  br i1 %cmp173, label %if.then175, label %if.else177, !dbg !7157

if.then175:                                       ; preds = %cond.end171
  br label %if.end180, !dbg !7158

if.else177:                                       ; preds = %cond.end171
  br label %if.end180

if.end180:                                        ; preds = %if.else177, %if.then175
  %conv39.pn = phi i32 [ %conv39, %if.then175 ], [ %conv, %if.else177 ]
  %ncopies.0 = sdiv i32 %21, %conv39.pn, !dbg !7156
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !3844, metadata !DIExpression()), !dbg !7077
  %tobool181 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !7159
  %spec.select = select i1 %tobool181, i32 %ncopies.0, i32 1, !dbg !7161
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3844, metadata !DIExpression()), !dbg !7077
  %cmp184 = icmp sgt i32 %spec.select, 0, !dbg !7162
  br i1 %cmp184, label %cond.end188, label %cond.true186, !dbg !7162

cond.true186:                                     ; preds = %if.end180
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1633, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7162
  br label %cond.end188, !dbg !7162

cond.end188:                                      ; preds = %if.end180, %cond.true186
  %arrayidx = bitcast i64* %dt to i32*, !dbg !7163
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !3834, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !3835, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  %call190 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call18, %struct._loop_vec_info* %0, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx) #8, !dbg !7165
  %tobool191 = icmp eq i8 %call190, 0, !dbg !7165
  br i1 %tobool191, label %if.then192, label %if.end198, !dbg !7166

if.then192:                                       ; preds = %cond.end188
  %call193 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7167
  %tobool194 = icmp eq i8 %call193, 0, !dbg !7167
  br i1 %tobool194, label %cleanup, label %if.then195, !dbg !7170

if.then195:                                       ; preds = %if.then192
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7171
  %call196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !7172
  br label %cleanup, !dbg !7172

if.end198:                                        ; preds = %cond.end188
  switch i32 %modifier.1, label %if.then225 [
    i32 1, label %land.lhs.true201
    i32 2, label %land.lhs.true207
    i32 0, label %land.lhs.true213
  ], !dbg !7173

land.lhs.true201:                                 ; preds = %if.end198
  %23 = load %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 2), align 8, !dbg !7175
  %call202 = call %union.tree_node* %23(i32 %call13, %union.tree_node* %cond172) #6, !dbg !7176
  %tobool203 = icmp eq %union.tree_node* %call202, null, !dbg !7176
  br i1 %tobool203, label %if.then216, label %lor.lhs.false204, !dbg !7177

lor.lhs.false204:                                 ; preds = %land.lhs.true201
  switch i32 1, label %if.then225 [
    i32 2, label %land.lhs.true207
    i32 0, label %land.lhs.true213
    i32 1, label %if.end230
  ], !dbg !7178

land.lhs.true207:                                 ; preds = %if.end198, %lor.lhs.false204
  call void @llvm.dbg.value(metadata i32* %code1, metadata !3829, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata i32* %code2, metadata !3830, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata %union.tree_node** %decl1, metadata !3831, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata %union.tree_node** %decl2, metadata !3832, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %dummy, metadata !3854, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata i32* %dummy_int, metadata !3855, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  %call208 = call zeroext i8 @supportable_widening_operation(i32 %call13, %union.gimple_statement_d* %stmt, %union.tree_node* nonnull %call19, %union.tree_node** nonnull %decl1, %union.tree_node** nonnull %decl2, i32* nonnull %code1, i32* nonnull %code2, i32* nonnull %dummy_int, %struct.VEC_tree_heap** nonnull %dummy) #8, !dbg !7179
  %tobool209 = icmp eq i8 %call208, 0, !dbg !7179
  br i1 %tobool209, label %if.then216, label %lor.lhs.false210, !dbg !7180

lor.lhs.false210:                                 ; preds = %land.lhs.true207
  switch i32 %modifier.1, label %if.then225 [
    i32 0, label %land.lhs.true213
    i32 1, label %if.end230
  ], !dbg !7181

land.lhs.true213:                                 ; preds = %if.end198, %lor.lhs.false204, %lor.lhs.false210
  call void @llvm.dbg.value(metadata i32* %code1, metadata !3829, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %dummy, metadata !3854, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call void @llvm.dbg.value(metadata i32* %dummy_int, metadata !3855, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  %call214 = call zeroext i8 @supportable_narrowing_operation(i32 %call13, %union.gimple_statement_d* %stmt, %union.tree_node* nonnull %call19, i32* nonnull %code1, i32* nonnull %dummy_int, %struct.VEC_tree_heap** nonnull %dummy) #8, !dbg !7182
  %tobool215 = icmp eq i8 %call214, 0, !dbg !7182
  br i1 %tobool215, label %if.then216, label %if.end222, !dbg !7183

if.then216:                                       ; preds = %land.lhs.true201, %land.lhs.true207, %land.lhs.true213
  %call217 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7184
  %tobool218 = icmp eq i8 %call217, 0, !dbg !7184
  br i1 %tobool218, label %cleanup, label %if.then219, !dbg !7187

if.then219:                                       ; preds = %if.then216
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7188
  %call220 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i64 0, i64 0)) #6, !dbg !7189
  br label %cleanup, !dbg !7189

if.end222:                                        ; preds = %land.lhs.true213
  br i1 %cmp55, label %if.end230, label %if.then225, !dbg !7190

if.then225:                                       ; preds = %if.end222, %if.end198, %lor.lhs.false204, %lor.lhs.false210
  %vectype226 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !7191
  store %union.tree_node* %call19, %union.tree_node** %vectype226, align 8, !dbg !7194
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 25, !dbg !7195
  %25 = load i32, i32* %slp_type, align 4, !dbg !7195
  %tobool227 = icmp eq i32 %25, 0, !dbg !7195
  br i1 %tobool227, label %if.end230, label %cleanup, !dbg !7197

if.end230:                                        ; preds = %if.then225, %if.end222, %lor.lhs.false204, %lor.lhs.false210
  %tobool231 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !7198
  br i1 %tobool231, label %if.then232, label %if.end234, !dbg !7200

if.then232:                                       ; preds = %if.end230
  %type233 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !7201
  store i32 11, i32* %type233, align 8, !dbg !7203
  br label %cleanup, !dbg !7204

if.end234:                                        ; preds = %if.end230
  %call235 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7205
  %tobool236 = icmp eq i8 %call235, 0, !dbg !7205
  br i1 %tobool236, label %if.end239, label %if.then237, !dbg !7207

if.then237:                                       ; preds = %if.end234
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7208
  %call238 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !7209
  br label %if.end239, !dbg !7209

if.end239:                                        ; preds = %if.end234, %if.then237
  %call240 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call26, %union.tree_node* nonnull %call29) #6, !dbg !7210
  call void @llvm.dbg.value(metadata %union.tree_node* %call240, metadata !3556, metadata !DIExpression()), !dbg !7077
  %cmp241 = icmp ne i32 %modifier.1, 1, !dbg !7211
  %tobool244 = icmp ne %struct._slp_tree* %slp_node, null, !dbg !7213
  %or.cond = or i1 %cmp241, %tobool244, !dbg !7214
  br i1 %or.cond, label %if.end247, label %if.then245, !dbg !7214

if.then245:                                       ; preds = %if.end239
  %call246 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !7215
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call246, metadata !3851, metadata !DIExpression()), !dbg !7077
  store %struct.VEC_tree_heap* %call246, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7216
  br label %if.end247, !dbg !7217

if.end247:                                        ; preds = %if.end239, %if.then245
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !3839, metadata !DIExpression()), !dbg !7077
  switch i32 %modifier.1, label %sw.epilog [
    i32 1, label %for.cond.preheader
    i32 2, label %for.cond289.preheader
    i32 0, label %for.cond318.preheader
  ], !dbg !7218

for.cond318.preheader:                            ; preds = %if.end247
  %vectorized_stmt339 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !7219
  br label %for.cond318, !dbg !7225

for.cond289.preheader:                            ; preds = %if.end247
  %vectype301 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !7226
  %vectorized_stmt306 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !7230
  br label %for.cond289, !dbg !7232

for.cond.preheader:                               ; preds = %if.end247
  %vec_stmts = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 3, !dbg !7233
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !7241
  br label %for.cond, !dbg !7243

for.cond:                                         ; preds = %for.cond.preheader, %if.end283
  %new_stmt.0 = phi %union.gimple_statement_d* [ %new_stmt.1.lcssa, %if.end283 ], [ null, %for.cond.preheader ], !dbg !7244
  %prev_stmt_info.0 = phi %struct._stmt_vec_info* [ %call284, %if.end283 ], [ null, %for.cond.preheader ], !dbg !7077
  %j.0 = phi i32 [ %inc286, %if.end283 ], [ 0, %for.cond.preheader ], !dbg !7245
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3845, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !3839, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !3838, metadata !DIExpression()), !dbg !7077
  %cmp248 = icmp slt i32 %j.0, %spec.select, !dbg !7246
  br i1 %cmp248, label %for.body, label %sw.epilog.loopexit, !dbg !7243

for.body:                                         ; preds = %for.cond
  %cmp250 = icmp eq i32 %j.0, 0, !dbg !7247
  br i1 %cmp250, label %if.then252, label %if.else253, !dbg !7249

if.then252:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !3851, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call fastcc void @vect_get_vec_defs(%union.tree_node* %call18, %union.tree_node* null, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** null, %struct._slp_tree* %slp_node) #8, !dbg !7250
  br label %if.end254, !dbg !7250

if.else253:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !3851, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call fastcc void @vect_get_vec_defs_for_stmt_copy(i32* nonnull %arrayidx, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** null) #8, !dbg !7251
  br label %if.end254

if.end254:                                        ; preds = %if.else253, %if.then252
  %27 = load %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 2), align 8, !dbg !7252
  %call255 = call %union.tree_node* %27(i32 %call13, %union.tree_node* %cond172) #6, !dbg !7253
  call void @llvm.dbg.value(metadata %union.tree_node* %call255, metadata !3848, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata i32 0, metadata !3850, metadata !DIExpression()), !dbg !7077
  br i1 %tobool181, label %if.end254.split.us, label %if.end254.if.end254.split_crit_edge, !dbg !7254

if.end254.if.end254.split_crit_edge:              ; preds = %if.end254
  br label %for.cond256, !dbg !7254

if.end254.split.us:                               ; preds = %if.end254
  br label %for.cond256.us, !dbg !7254

for.cond256.us:                                   ; preds = %for.body265.us, %if.end254.split.us
  %new_stmt.1.us = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end254.split.us ], [ %call266.us, %for.body265.us ], !dbg !7077
  %i.0.us = phi i32 [ 0, %if.end254.split.us ], [ %inc.us, %for.body265.us ], !dbg !7255
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !3850, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us, metadata !3838, metadata !DIExpression()), !dbg !7077
  %28 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %28, metadata !3851, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %28, metadata !3851, metadata !DIExpression()), !dbg !7077
  %base259.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %28, i64 0, i32 0, !dbg !7256
  call void @llvm.dbg.value(metadata %union.tree_node** %vop0, metadata !3852, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  %call263.us = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base259.us, i32 %i.0.us, %union.tree_node** nonnull %vop0) #8, !dbg !7256
  %tobool264.us = icmp eq i32 %call263.us, 0, !dbg !7257
  br i1 %tobool264.us, label %for.end.us-lcssa.us, label %for.body265.us, !dbg !7257

for.body265.us:                                   ; preds = %for.cond256.us
  %29 = load %union.tree_node*, %union.tree_node** %vop0, align 8, !dbg !7258
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3852, metadata !DIExpression()), !dbg !7077
  %call266.us = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %call255, i32 1, %union.tree_node* %29) #6, !dbg !7259
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call266.us, metadata !3838, metadata !DIExpression()), !dbg !7077
  %call267.us = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call240, %union.gimple_statement_d* %call266.us) #8, !dbg !7260
  call void @llvm.dbg.value(metadata %union.tree_node* %call267.us, metadata !3833, metadata !DIExpression()), !dbg !7077
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call266.us, %union.tree_node* %call267.us) #8, !dbg !7261
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call266.us, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7262
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !7263
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !3850, metadata !DIExpression()), !dbg !7077
  br label %for.cond256.us, !dbg !7264, !llvm.loop !7265

for.end.us-lcssa.us:                              ; preds = %for.cond256.us
  %new_stmt.1.us.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1.us, %for.cond256.us ], !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us.lcssa, metadata !3838, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us.lcssa, metadata !3838, metadata !DIExpression()), !dbg !7077
  br label %for.end, !dbg !7267

for.cond256:                                      ; preds = %cond.end275, %if.end254.if.end254.split_crit_edge
  %new_stmt.1 = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end254.if.end254.split_crit_edge ], [ %call266, %cond.end275 ], !dbg !7077
  %i.0 = phi i32 [ 0, %if.end254.if.end254.split_crit_edge ], [ %inc, %cond.end275 ], !dbg !7255
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3850, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1, metadata !3838, metadata !DIExpression()), !dbg !7077
  %30 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7256
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %30, metadata !3851, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %30, metadata !3851, metadata !DIExpression()), !dbg !7077
  %base259 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %30, i64 0, i32 0, !dbg !7256
  call void @llvm.dbg.value(metadata %union.tree_node** %vop0, metadata !3852, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  %call263 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base259, i32 %i.0, %union.tree_node** nonnull %vop0) #8, !dbg !7256
  %tobool264 = icmp eq i32 %call263, 0, !dbg !7257
  br i1 %tobool264, label %for.end.us-lcssa, label %for.body265, !dbg !7257

for.body265:                                      ; preds = %for.cond256
  %31 = load %union.tree_node*, %union.tree_node** %vop0, align 8, !dbg !7258
  call void @llvm.dbg.value(metadata %union.tree_node* %31, metadata !3852, metadata !DIExpression()), !dbg !7077
  %call266 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %call255, i32 1, %union.tree_node* %31) #6, !dbg !7259
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call266, metadata !3838, metadata !DIExpression()), !dbg !7077
  %call267 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call240, %union.gimple_statement_d* %call266) #8, !dbg !7260
  call void @llvm.dbg.value(metadata %union.tree_node* %call267, metadata !3833, metadata !DIExpression()), !dbg !7077
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call266, %union.tree_node* %call267) #8, !dbg !7261
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call266, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7262
  %32 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !7268
  %tobool270 = icmp eq %struct.VEC_gimple_heap* %32, null, !dbg !7268
  br i1 %tobool270, label %cond.end275, label %cond.true271, !dbg !7268

cond.true271:                                     ; preds = %for.body265
  %base273 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %32, i64 0, i32 0, !dbg !7268
  br label %cond.end275, !dbg !7268

cond.end275:                                      ; preds = %for.body265, %cond.true271
  %cond276 = phi %struct.VEC_gimple_base* [ %base273, %cond.true271 ], [ null, %for.body265 ], !dbg !7268
  %call277 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond276, %union.gimple_statement_d* %call266) #8, !dbg !7268
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7263
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3850, metadata !DIExpression()), !dbg !7077
  br label %for.cond256, !dbg !7264, !llvm.loop !7265

for.end.us-lcssa:                                 ; preds = %for.cond256
  %new_stmt.1.lcssa20 = phi %union.gimple_statement_d* [ %new_stmt.1, %for.cond256 ], !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa20, metadata !3838, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa20, metadata !3838, metadata !DIExpression()), !dbg !7077
  br label %for.end, !dbg !7267

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %new_stmt.1.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1.lcssa20, %for.end.us-lcssa ], [ %new_stmt.1.us.lcssa, %for.end.us-lcssa.us ], !dbg !7077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa, metadata !3838, metadata !DIExpression()), !dbg !7077
  br i1 %cmp250, label %if.then281, label %if.else282, !dbg !7269

if.then281:                                       ; preds = %for.end
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !7270
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !7271
  br label %if.end283, !dbg !7272

if.else282:                                       ; preds = %for.end
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.0, i64 0, i32 14, !dbg !7273
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %related_stmt, align 8, !dbg !7274
  br label %if.end283

if.end283:                                        ; preds = %if.else282, %if.then281
  %call284 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %new_stmt.1.lcssa) #8, !dbg !7275
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call284, metadata !3839, metadata !DIExpression()), !dbg !7077
  %inc286 = add nuw nsw i32 %j.0, 1, !dbg !7276
  call void @llvm.dbg.value(metadata i32 %inc286, metadata !3845, metadata !DIExpression()), !dbg !7077
  br label %for.cond, !dbg !7277, !llvm.loop !7278

for.cond289:                                      ; preds = %for.cond289.preheader, %if.end309
  %vec_oprnd0.0 = phi %union.tree_node* [ %vec_oprnd0.1, %if.end309 ], [ null, %for.cond289.preheader ], !dbg !7077
  %prev_stmt_info.1 = phi %struct._stmt_vec_info* [ %call313, %if.end309 ], [ null, %for.cond289.preheader ], !dbg !7077
  %j.1 = phi i32 [ %inc315, %if.end309 ], [ 0, %for.cond289.preheader ], !dbg !7280
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !3845, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.1, metadata !3839, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0.0, metadata !3559, metadata !DIExpression()), !dbg !7077
  %cmp290 = icmp slt i32 %j.1, %spec.select, !dbg !7281
  br i1 %cmp290, label %for.body292, label %sw.epilog.loopexit18, !dbg !7232

for.body292:                                      ; preds = %for.cond289
  %cmp293 = icmp eq i32 %j.1, 0, !dbg !7282
  br i1 %cmp293, label %if.then295, label %if.else297, !dbg !7284

if.then295:                                       ; preds = %for.body292
  %call296 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %call18, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !7285
  call void @llvm.dbg.value(metadata %union.tree_node* %call296, metadata !3559, metadata !DIExpression()), !dbg !7077
  br label %if.end300, !dbg !7286

if.else297:                                       ; preds = %for.body292
  %33 = load i32, i32* %arrayidx, align 8, !dbg !7287
  %call299 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %33, %union.tree_node* %vec_oprnd0.0) #8, !dbg !7288
  call void @llvm.dbg.value(metadata %union.tree_node* %call299, metadata !3559, metadata !DIExpression()), !dbg !7077
  br label %if.end300

if.end300:                                        ; preds = %if.else297, %if.then295
  %vec_oprnd0.1 = phi %union.tree_node* [ %call296, %if.then295 ], [ %call299, %if.else297 ], !dbg !7289
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0.1, metadata !3559, metadata !DIExpression()), !dbg !7077
  store %union.tree_node* %call19, %union.tree_node** %vectype301, align 8, !dbg !7290
  %34 = load i32, i32* %code1, align 4, !dbg !7291
  call void @llvm.dbg.value(metadata i32 %34, metadata !3829, metadata !DIExpression()), !dbg !7077
  %35 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !7292
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !3831, metadata !DIExpression()), !dbg !7077
  %call302 = call fastcc %union.gimple_statement_d* @vect_gen_widened_results_half(i32 %34, %union.tree_node* %35, %union.tree_node* %vec_oprnd0.1, %union.tree_node* null, i32 1, %union.tree_node* %call240, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt) #8, !dbg !7293
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call302, metadata !3838, metadata !DIExpression()), !dbg !7077
  br i1 %cmp293, label %if.then305, label %if.else307, !dbg !7294

if.then305:                                       ; preds = %if.end300
  store %union.gimple_statement_d* %call302, %union.gimple_statement_d** %vectorized_stmt306, align 8, !dbg !7295
  br label %if.end309, !dbg !7296

if.else307:                                       ; preds = %if.end300
  %related_stmt308 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.1, i64 0, i32 14, !dbg !7297
  store %union.gimple_statement_d* %call302, %union.gimple_statement_d** %related_stmt308, align 8, !dbg !7298
  br label %if.end309

if.end309:                                        ; preds = %if.else307, %if.then305
  %call310 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call302) #8, !dbg !7299
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call310, metadata !3839, metadata !DIExpression()), !dbg !7077
  %36 = load i32, i32* %code2, align 4, !dbg !7300
  call void @llvm.dbg.value(metadata i32 %36, metadata !3830, metadata !DIExpression()), !dbg !7077
  %37 = load %union.tree_node*, %union.tree_node** %decl2, align 8, !dbg !7301
  call void @llvm.dbg.value(metadata %union.tree_node* %37, metadata !3832, metadata !DIExpression()), !dbg !7077
  %call311 = call fastcc %union.gimple_statement_d* @vect_gen_widened_results_half(i32 %36, %union.tree_node* %37, %union.tree_node* %vec_oprnd0.1, %union.tree_node* null, i32 1, %union.tree_node* %call240, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt) #8, !dbg !7302
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call311, metadata !3838, metadata !DIExpression()), !dbg !7077
  %related_stmt312 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call310, i64 0, i32 14, !dbg !7303
  store %union.gimple_statement_d* %call311, %union.gimple_statement_d** %related_stmt312, align 8, !dbg !7304
  %call313 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call311) #8, !dbg !7305
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call313, metadata !3839, metadata !DIExpression()), !dbg !7077
  %inc315 = add nuw nsw i32 %j.1, 1, !dbg !7306
  call void @llvm.dbg.value(metadata i32 %inc315, metadata !3845, metadata !DIExpression()), !dbg !7077
  br label %for.cond289, !dbg !7307, !llvm.loop !7308

for.cond318:                                      ; preds = %for.cond318.preheader, %if.end342
  %vec_oprnd1.0 = phi %union.tree_node* [ %vec_oprnd1.1, %if.end342 ], [ null, %for.cond318.preheader ], !dbg !7077
  %prev_stmt_info.2 = phi %struct._stmt_vec_info* [ %call343, %if.end342 ], [ null, %for.cond318.preheader ], !dbg !7077
  %j.2 = phi i32 [ %inc345, %if.end342 ], [ 0, %for.cond318.preheader ], !dbg !7310
  call void @llvm.dbg.value(metadata i32 %j.2, metadata !3845, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.2, metadata !3839, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1.0, metadata !3560, metadata !DIExpression()), !dbg !7077
  %cmp319 = icmp slt i32 %j.2, %spec.select, !dbg !7311
  br i1 %cmp319, label %for.body321, label %for.end346, !dbg !7225

for.body321:                                      ; preds = %for.cond318
  %cmp322 = icmp eq i32 %j.2, 0, !dbg !7312
  br i1 %cmp322, label %if.then324, label %if.else328, !dbg !7314

if.then324:                                       ; preds = %for.body321
  %call325 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %call18, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !7315
  call void @llvm.dbg.value(metadata %union.tree_node* %call325, metadata !3559, metadata !DIExpression()), !dbg !7077
  %38 = load i32, i32* %arrayidx, align 8, !dbg !7317
  %call327 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %38, %union.tree_node* %call325) #8, !dbg !7318
  call void @llvm.dbg.value(metadata %union.tree_node* %call327, metadata !3560, metadata !DIExpression()), !dbg !7077
  br label %if.end333, !dbg !7319

if.else328:                                       ; preds = %for.body321
  %39 = load i32, i32* %arrayidx, align 8, !dbg !7320
  %call330 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %39, %union.tree_node* %vec_oprnd1.0) #8, !dbg !7322
  call void @llvm.dbg.value(metadata %union.tree_node* %call330, metadata !3559, metadata !DIExpression()), !dbg !7077
  %40 = load i32, i32* %arrayidx, align 8, !dbg !7323
  %call332 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %40, %union.tree_node* %call330) #8, !dbg !7324
  call void @llvm.dbg.value(metadata %union.tree_node* %call332, metadata !3560, metadata !DIExpression()), !dbg !7077
  br label %if.end333

if.end333:                                        ; preds = %if.else328, %if.then324
  %vec_oprnd1.1 = phi %union.tree_node* [ %call327, %if.then324 ], [ %call332, %if.else328 ], !dbg !7325
  %vec_oprnd0.2 = phi %union.tree_node* [ %call325, %if.then324 ], [ %call330, %if.else328 ], !dbg !7325
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0.2, metadata !3559, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1.1, metadata !3560, metadata !DIExpression()), !dbg !7077
  %41 = load i32, i32* %code1, align 4, !dbg !7326
  call void @llvm.dbg.value(metadata i32 %41, metadata !3829, metadata !DIExpression()), !dbg !7077
  %call334 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %41, %union.tree_node* %call240, %union.tree_node* %vec_oprnd0.2, %union.tree_node* %vec_oprnd1.1) #6, !dbg !7326
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call334, metadata !3838, metadata !DIExpression()), !dbg !7077
  %call335 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call240, %union.gimple_statement_d* %call334) #8, !dbg !7327
  call void @llvm.dbg.value(metadata %union.tree_node* %call335, metadata !3833, metadata !DIExpression()), !dbg !7077
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call334, %union.tree_node* %call335) #8, !dbg !7328
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call334, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7329
  br i1 %cmp322, label %if.then338, label %if.else340, !dbg !7330

if.then338:                                       ; preds = %if.end333
  store %union.gimple_statement_d* %call334, %union.gimple_statement_d** %vectorized_stmt339, align 8, !dbg !7331
  br label %if.end342, !dbg !7332

if.else340:                                       ; preds = %if.end333
  %related_stmt341 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.2, i64 0, i32 14, !dbg !7333
  store %union.gimple_statement_d* %call334, %union.gimple_statement_d** %related_stmt341, align 8, !dbg !7334
  br label %if.end342

if.end342:                                        ; preds = %if.else340, %if.then338
  %call343 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call334) #8, !dbg !7335
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call343, metadata !3839, metadata !DIExpression()), !dbg !7077
  %inc345 = add nuw nsw i32 %j.2, 1, !dbg !7336
  call void @llvm.dbg.value(metadata i32 %inc345, metadata !3845, metadata !DIExpression()), !dbg !7077
  br label %for.cond318, !dbg !7337, !llvm.loop !7338

for.end346:                                       ; preds = %for.cond318
  %42 = bitcast %union.gimple_statement_d** %vectorized_stmt339 to i64*, !dbg !7340
  %43 = load i64, i64* %42, align 8, !dbg !7340
  %44 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !7341
  store i64 %43, i64* %44, align 8, !dbg !7341
  br label %sw.epilog, !dbg !7342

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !7343

sw.epilog.loopexit18:                             ; preds = %for.cond289
  br label %sw.epilog, !dbg !7343

sw.epilog:                                        ; preds = %sw.epilog.loopexit18, %sw.epilog.loopexit, %for.end346, %if.end247
  %45 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7343
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %45, metadata !3851, metadata !DIExpression()), !dbg !7077
  %tobool348 = icmp eq %struct.VEC_tree_heap* %45, null, !dbg !7343
  br i1 %tobool348, label %cleanup, label %if.then349, !dbg !7345

if.then349:                                       ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !3851, metadata !DIExpression(DW_OP_deref)), !dbg !7077
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds0) #8, !dbg !7346
  br label %cleanup, !dbg !7346

cleanup:                                          ; preds = %if.then225, %sw.epilog, %if.then216, %if.then192, %if.end22, %if.end17, %if.end8, %if.end4, %if.end, %cond.end, %if.end12, %if.then349, %if.then219, %if.then195, %land.lhs.true84, %lor.lhs.false91, %lor.lhs.false98, %lor.lhs.false140, %if.else46, %if.then232
  %retval.0 = phi i8 [ 1, %if.then232 ], [ 0, %cond.end ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %if.end8 ], [ 0, %if.end12 ], [ 0, %if.end17 ], [ 0, %if.end22 ], [ 0, %if.else46 ], [ 0, %lor.lhs.false140 ], [ 0, %lor.lhs.false98 ], [ 0, %lor.lhs.false91 ], [ 0, %land.lhs.true84 ], [ 0, %if.then195 ], [ 0, %if.then192 ], [ 0, %if.then219 ], [ 0, %if.then216 ], [ 0, %if.then225 ], [ 1, %if.then349 ], [ 1, %sw.epilog ], !dbg !7077
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #7, !dbg !7347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !7347
  ret i8 %retval.0, !dbg !7347
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_operation(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %struct._slp_tree* %slp_node) unnamed_addr #5 !dbg !7348 {
entry:
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i64, align 8
  %tmpcast = bitcast i64* %dt to [2 x i32]*
  %vec_oprnds0 = alloca %struct.VEC_tree_heap*, align 8
  %vec_oprnds1 = alloca %struct.VEC_tree_heap*, align 8
  %vop0 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7350, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7351, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !7352, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !7353, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7357, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7358, metadata !DIExpression()), !dbg !7407
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !7408
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !7359, metadata !DIExpression()), !dbg !7407
  %vectype1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !7409
  %0 = load %union.tree_node*, %union.tree_node** %vectype1, align 8, !dbg !7409
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7360, metadata !DIExpression()), !dbg !7407
  %loop_vinfo2 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !7410
  %1 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo2, align 8, !dbg !7410
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %1, metadata !7361, metadata !DIExpression()), !dbg !7407
  %2 = bitcast %union.tree_node** %def to i8*, !dbg !7411
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !7411
  %3 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !7412
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7412
  %4 = bitcast i64* %dt to i8*, !dbg !7413
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7413
  call void @llvm.dbg.declare(metadata [2 x i32]* %tmpcast, metadata !7390, metadata !DIExpression()), !dbg !7414
  store i64 34359738376, i64* %dt, align 8, !dbg !7414
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7391, metadata !DIExpression()), !dbg !7407
  %type = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !7415
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !7415
  %bf.load = load i32, i32* %precision, align 4, !dbg !7415
  %bf.clear = and i32 %bf.load, 1023, !dbg !7415
  %sh_prom = zext i32 %bf.clear to i64, !dbg !7415
  %shl = shl i64 1, %sh_prom, !dbg !7415
  %conv = trunc i64 %shl to i32, !dbg !7415
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7393, metadata !DIExpression()), !dbg !7407
  %5 = bitcast %struct.VEC_tree_heap** %vec_oprnds0 to i8*, !dbg !7416
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7416
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !7399, metadata !DIExpression()), !dbg !7407
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7417
  %6 = bitcast %struct.VEC_tree_heap** %vec_oprnds1 to i8*, !dbg !7416
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7416
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !7400, metadata !DIExpression()), !dbg !7407
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !7418
  %7 = bitcast %union.tree_node** %vop0 to i8*, !dbg !7419
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7419
  call void @llvm.dbg.value(metadata i8 0, metadata !7404, metadata !DIExpression()), !dbg !7407
  %bb_vinfo3 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 26, !dbg !7420
  %8 = load %struct._bb_vec_info*, %struct._bb_vec_info** %bb_vinfo3, align 8, !dbg !7420
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %8, metadata !7405, metadata !DIExpression()), !dbg !7407
  %tobool = icmp eq %struct._loop_vec_info* %1, null, !dbg !7421
  br i1 %tobool, label %if.end, label %if.then, !dbg !7423

if.then:                                          ; preds = %entry
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %1, i64 0, i32 6, !dbg !7424
  %9 = load i32, i32* %vectorization_factor, align 8, !dbg !7424
  call void @llvm.dbg.value(metadata i32 %9, metadata !7406, metadata !DIExpression()), !dbg !7407
  br label %if.end, !dbg !7425

if.end:                                           ; preds = %entry, %if.then
  %vf.0 = phi i32 [ %9, %if.then ], [ 1, %entry ], !dbg !7426
  call void @llvm.dbg.value(metadata i32 %vf.0, metadata !7406, metadata !DIExpression()), !dbg !7407
  %tobool4 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !7427
  br i1 %tobool4, label %if.else6, label %if.end8, !dbg !7429

if.else6:                                         ; preds = %if.end
  %vectorization_factor7 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %1, i64 0, i32 6, !dbg !7430
  %10 = load i32, i32* %vectorization_factor7, align 8, !dbg !7430
  %div = sdiv i32 %10, %conv, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %div, metadata !7396, metadata !DIExpression()), !dbg !7407
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.else6
  %ncopies.0 = phi i32 [ %div, %if.else6 ], [ 1, %if.end ], !dbg !7432
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !7396, metadata !DIExpression()), !dbg !7407
  %cmp = icmp sgt i32 %ncopies.0, 0, !dbg !7433
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7433

cond.true:                                        ; preds = %if.end8
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1966, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7433
  br label %cond.end, !dbg !7433

cond.end:                                         ; preds = %if.end8, %cond.true
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !7434
  %11 = load i32, i32* %relevant, align 8, !dbg !7434
  %cmp10 = icmp ne i32 %11, 0, !dbg !7434
  %tobool12 = icmp ne %struct._bb_vec_info* %8, null, !dbg !7436
  %or.cond = or i1 %cmp10, %tobool12, !dbg !7437
  br i1 %or.cond, label %if.end14, label %cleanup, !dbg !7437

if.end14:                                         ; preds = %cond.end
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !7438
  %12 = load i32, i32* %def_type, align 8, !dbg !7438
  %cmp15 = icmp eq i32 %12, 3, !dbg !7440
  br i1 %cmp15, label %if.end18, label %cleanup, !dbg !7441

if.end18:                                         ; preds = %if.end14
  %call19 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !7442
  %tobool20 = icmp eq i8 %call19, 0, !dbg !7442
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !7444

if.end22:                                         ; preds = %if.end18
  %call23 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !7445
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7445
  %bf.load24 = load i64, i64* %13, align 8, !dbg !7445
  %bf.cast6 = and i64 %bf.load24, 65535, !dbg !7447
  %cmp26 = icmp eq i64 %bf.cast6, 141, !dbg !7447
  br i1 %cmp26, label %if.end29, label %cleanup, !dbg !7448

if.end29:                                         ; preds = %if.end22
  %call30 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !7449
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !7355, metadata !DIExpression()), !dbg !7407
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7450
  %14 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !7450
  %call32 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %14) #8, !dbg !7451
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !7395, metadata !DIExpression()), !dbg !7407
  %tobool33 = icmp eq %union.tree_node* %call32, null, !dbg !7452
  br i1 %tobool33, label %cleanup, label %if.end35, !dbg !7454

if.end35:                                         ; preds = %if.end29
  %type36 = bitcast %union.tree_node* %call32 to %struct.tree_type*, !dbg !7455
  %precision37 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type36, i64 0, i32 6, !dbg !7455
  %bf.load38 = load i32, i32* %precision37, align 4, !dbg !7455
  %bf.clear39 = and i32 %bf.load38, 1023, !dbg !7455
  %sh_prom40 = zext i32 %bf.clear39 to i64, !dbg !7455
  %shl41 = shl i64 1, %sh_prom40, !dbg !7455
  %conv42 = trunc i64 %shl41 to i32, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %conv42, metadata !7394, metadata !DIExpression()), !dbg !7407
  %cmp43 = icmp eq i32 %conv42, %conv, !dbg !7456
  br i1 %cmp43, label %if.end46, label %cleanup, !dbg !7458

if.end46:                                         ; preds = %if.end35
  %call47 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !7459
  call void @llvm.dbg.value(metadata i32 %call47, metadata !7362, metadata !DIExpression()), !dbg !7407
  %cmp48 = icmp eq i32 %call47, 66, !dbg !7460
  %spec.select = select i1 %cmp48, i32 63, i32 %call47, !dbg !7462
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7362, metadata !DIExpression()), !dbg !7407
  %idxprom = sext i32 %spec.select to i64, !dbg !7463
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !7463
  %15 = load i8, i8* %arrayidx, align 1, !dbg !7463
  %conv52 = zext i8 %15 to i32, !dbg !7463
  call void @llvm.dbg.value(metadata i32 %conv52, metadata !7365, metadata !DIExpression()), !dbg !7407
  %conv52.off = add nsw i32 %conv52, -1, !dbg !7464
  %switch = icmp ult i32 %conv52.off, 2, !dbg !7464
  br i1 %switch, label %if.end64, label %if.then58, !dbg !7464

if.then58:                                        ; preds = %if.end46
  %call59 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7466
  %tobool60 = icmp eq i8 %call59, 0, !dbg !7466
  br i1 %tobool60, label %cleanup, label %if.then61, !dbg !7469

if.then61:                                        ; preds = %if.then58
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7470
  %call62 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.70, i64 0, i64 0), i32 %conv52) #6, !dbg !7471
  br label %cleanup, !dbg !7471

if.end64:                                         ; preds = %if.end46
  %call65 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !7472
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !7356, metadata !DIExpression()), !dbg !7407
  %arrayidx66 = bitcast i64* %dt to i32*, !dbg !7473
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !7388, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !7389, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  %call67 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call65, %struct._loop_vec_info* %1, %struct._bb_vec_info* %8, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx66) #8, !dbg !7475
  %tobool68 = icmp eq i8 %call67, 0, !dbg !7475
  br i1 %tobool68, label %if.then69, label %if.end75, !dbg !7476

if.then69:                                        ; preds = %if.end64
  %call70 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7477
  %tobool71 = icmp eq i8 %call70, 0, !dbg !7477
  br i1 %tobool71, label %cleanup, label %if.then72, !dbg !7480

if.then72:                                        ; preds = %if.then69
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7481
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !7482
  br label %cleanup, !dbg !7482

if.end75:                                         ; preds = %if.end64
  %cmp76 = icmp eq i8 %15, 2, !dbg !7483
  br i1 %cmp76, label %if.then78, label %if.end90, !dbg !7485

if.then78:                                        ; preds = %if.end75
  %call79 = call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #8, !dbg !7486
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !7357, metadata !DIExpression()), !dbg !7407
  %arrayidx80 = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 1, !dbg !7488
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !7388, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !7389, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  %call81 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call79, %struct._loop_vec_info* %1, %struct._bb_vec_info* %8, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx80) #8, !dbg !7490
  %tobool82 = icmp eq i8 %call81, 0, !dbg !7490
  br i1 %tobool82, label %if.then83, label %if.end90, !dbg !7491

if.then83:                                        ; preds = %if.then78
  %call84 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7492
  %tobool85 = icmp eq i8 %call84, 0, !dbg !7492
  br i1 %tobool85, label %cleanup, label %if.then86, !dbg !7495

if.then86:                                        ; preds = %if.then83
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7496
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !7497
  br label %cleanup, !dbg !7497

if.end90:                                         ; preds = %if.then78, %if.end75
  %op1.0 = phi %union.tree_node* [ null, %if.end75 ], [ %call79, %if.then78 ], !dbg !7407
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !7357, metadata !DIExpression()), !dbg !7407
  %spec.select.off = add i32 %spec.select, -83, !dbg !7498
  %switch5 = icmp ult i32 %spec.select.off, 4, !dbg !7498
  br i1 %switch5, label %if.then101, label %if.else198, !dbg !7498

if.then101:                                       ; preds = %if.end90
  %arrayidx102 = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 1, !dbg !7500
  %19 = load i32, i32* %arrayidx102, align 4, !dbg !7500
  %cmp103 = icmp eq i32 %19, 3, !dbg !7503
  br i1 %cmp103, label %if.then105, label %if.else112, !dbg !7504

if.then105:                                       ; preds = %if.then101
  %call106 = call %struct.optab_d* @optab_for_tree_code(i32 %spec.select, %union.tree_node* %0, i32 2) #6, !dbg !7505
  call void @llvm.dbg.value(metadata %struct.optab_d* %call106, metadata !7366, metadata !DIExpression()), !dbg !7407
  %call107 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7507
  %tobool108 = icmp eq i8 %call107, 0, !dbg !7507
  br i1 %tobool108, label %if.end200, label %if.then109, !dbg !7509

if.then109:                                       ; preds = %if.then105
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7510
  %call110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !7511
  br label %if.end200, !dbg !7511

if.else112:                                       ; preds = %if.then101
  %cmp114 = icmp eq i32 %19, 1, !dbg !7512
  br i1 %cmp114, label %if.then120, label %lor.lhs.false116, !dbg !7514

lor.lhs.false116:                                 ; preds = %if.else112
  %cmp118 = icmp eq i32 %19, 2, !dbg !7515
  br i1 %cmp118, label %if.then120, label %if.else190, !dbg !7516

if.then120:                                       ; preds = %lor.lhs.false116, %if.else112
  %call121 = call %struct.optab_d* @optab_for_tree_code(i32 %spec.select, %union.tree_node* %0, i32 1) #6, !dbg !7517
  call void @llvm.dbg.value(metadata %struct.optab_d* %call121, metadata !7366, metadata !DIExpression()), !dbg !7407
  %tobool122 = icmp eq %struct.optab_d* %call121, null, !dbg !7519
  br i1 %tobool122, label %if.else148, label %land.lhs.true123, !dbg !7521

land.lhs.true123:                                 ; preds = %if.then120
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7522
  %bf.load125 = load i64, i64* %21, align 8, !dbg !7522
  %bf.cast12715 = and i64 %bf.load125, 65535, !dbg !7522
  %cmp128 = icmp eq i64 %bf.cast12715, 14, !dbg !7522
  br i1 %cmp128, label %cond.true130, label %cond.false132, !dbg !7522

cond.true130:                                     ; preds = %land.lhs.true123
  %call131 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7522
  br label %cond.end136, !dbg !7522

cond.false132:                                    ; preds = %land.lhs.true123
  %bf.load134 = load i32, i32* %precision, align 4, !dbg !7522
  %bf.lshr = lshr i32 %bf.load134, 16, !dbg !7522
  %bf.clear135 = and i32 %bf.lshr, 255, !dbg !7522
  br label %cond.end136, !dbg !7522

cond.end136:                                      ; preds = %cond.false132, %cond.true130
  %cond137 = phi i32 [ %call131, %cond.true130 ], [ %bf.clear135, %cond.false132 ], !dbg !7522
  %idxprom138 = sext i32 %cond137 to i64, !dbg !7522
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %call121, i64 0, i32 4, i64 %idxprom138, i32 0, !dbg !7523
  %22 = load i32, i32* %insn_code, align 4, !dbg !7523
  %cmp140 = icmp eq i32 %22, 2956, !dbg !7524
  br i1 %cmp140, label %if.else148, label %if.then142, !dbg !7525

if.then142:                                       ; preds = %cond.end136
  call void @llvm.dbg.value(metadata i8 1, metadata !7404, metadata !DIExpression()), !dbg !7407
  %call143 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7526
  %tobool144 = icmp eq i8 %call143, 0, !dbg !7526
  br i1 %tobool144, label %if.end200, label %if.then145, !dbg !7529

if.then145:                                       ; preds = %if.then142
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7530
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.72, i64 0, i64 0)) #6, !dbg !7531
  br label %if.end200, !dbg !7531

if.else148:                                       ; preds = %cond.end136, %if.then120
  %call149 = call %struct.optab_d* @optab_for_tree_code(i32 %spec.select, %union.tree_node* %0, i32 2) #6, !dbg !7532
  call void @llvm.dbg.value(metadata %struct.optab_d* %call149, metadata !7366, metadata !DIExpression()), !dbg !7407
  %tobool150 = icmp eq %struct.optab_d* %call149, null, !dbg !7534
  br i1 %tobool150, label %if.end200, label %land.lhs.true151, !dbg !7536

land.lhs.true151:                                 ; preds = %if.else148
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7537
  %bf.load154 = load i64, i64* %24, align 8, !dbg !7537
  %bf.cast15614 = and i64 %bf.load154, 65535, !dbg !7537
  %cmp157 = icmp eq i64 %bf.cast15614, 14, !dbg !7537
  br i1 %cmp157, label %cond.true159, label %cond.false161, !dbg !7537

cond.true159:                                     ; preds = %land.lhs.true151
  %call160 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7537
  br label %cond.end167, !dbg !7537

cond.false161:                                    ; preds = %land.lhs.true151
  %bf.load164 = load i32, i32* %precision, align 4, !dbg !7537
  %bf.lshr165 = lshr i32 %bf.load164, 16, !dbg !7537
  %bf.clear166 = and i32 %bf.lshr165, 255, !dbg !7537
  br label %cond.end167, !dbg !7537

cond.end167:                                      ; preds = %cond.false161, %cond.true159
  %cond168 = phi i32 [ %call160, %cond.true159 ], [ %bf.clear166, %cond.false161 ], !dbg !7537
  %idxprom169 = sext i32 %cond168 to i64, !dbg !7537
  %insn_code171 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %call149, i64 0, i32 4, i64 %idxprom169, i32 0, !dbg !7538
  %25 = load i32, i32* %insn_code171, align 4, !dbg !7538
  %cmp172 = icmp eq i32 %25, 2956, !dbg !7539
  br i1 %cmp172, label %if.end200, label %if.then174, !dbg !7540

if.then174:                                       ; preds = %cond.end167
  %call175 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7541
  %tobool176 = icmp eq i8 %call175, 0, !dbg !7541
  br i1 %tobool176, label %if.end179, label %if.then177, !dbg !7544

if.then177:                                       ; preds = %if.then174
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7545
  %call178 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !7546
  br label %if.end179, !dbg !7546

if.end179:                                        ; preds = %if.then174, %if.then177
  %27 = load i32, i32* %arrayidx102, align 4, !dbg !7547
  %cmp181 = icmp eq i32 %27, 1, !dbg !7549
  br i1 %cmp181, label %if.then183, label %if.end200, !dbg !7550

if.then183:                                       ; preds = %if.end179
  %type185 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7551
  %28 = load %union.tree_node*, %union.tree_node** %type185, align 8, !dbg !7551
  %call186 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %28, %union.tree_node* %op1.0) #6, !dbg !7551
  call void @llvm.dbg.value(metadata %union.tree_node* %call186, metadata !7357, metadata !DIExpression()), !dbg !7407
  br label %if.end200, !dbg !7552

if.else190:                                       ; preds = %lor.lhs.false116
  %call191 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7553
  %tobool192 = icmp eq i8 %call191, 0, !dbg !7553
  br i1 %tobool192, label %cleanup, label %if.then193, !dbg !7556

if.then193:                                       ; preds = %if.else190
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7557
  %call194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.73, i64 0, i64 0)) #6, !dbg !7558
  br label %cleanup, !dbg !7558

if.else198:                                       ; preds = %if.end90
  %call199 = call %struct.optab_d* @optab_for_tree_code(i32 %spec.select, %union.tree_node* %0, i32 0) #6, !dbg !7559
  call void @llvm.dbg.value(metadata %struct.optab_d* %call199, metadata !7366, metadata !DIExpression()), !dbg !7407
  br label %if.end200

if.end200:                                        ; preds = %if.then105, %if.then142, %cond.end167, %if.else148, %if.then109, %if.then145, %if.end179, %if.then183, %if.else198
  %optab.2 = phi %struct.optab_d* [ %call199, %if.else198 ], [ %call106, %if.then109 ], [ %call106, %if.then105 ], [ %call121, %if.then145 ], [ %call121, %if.then142 ], [ %call149, %if.end179 ], [ %call149, %if.then183 ], [ %call149, %cond.end167 ], [ null, %if.else148 ], !dbg !7560
  %op1.5 = phi %union.tree_node* [ %op1.0, %if.else198 ], [ %op1.0, %if.then109 ], [ %op1.0, %if.then105 ], [ %op1.0, %if.then145 ], [ %op1.0, %if.then142 ], [ %op1.0, %if.end179 ], [ %call186, %if.then183 ], [ %op1.0, %cond.end167 ], [ %op1.0, %if.else148 ], !dbg !7561
  %scalar_shift_arg.2 = phi i8 [ 0, %if.else198 ], [ 0, %if.then109 ], [ 0, %if.then105 ], [ 1, %if.then145 ], [ 1, %if.then142 ], [ 0, %if.end179 ], [ 0, %if.then183 ], [ 0, %cond.end167 ], [ 0, %if.else148 ], !dbg !7562
  call void @llvm.dbg.value(metadata i8 %scalar_shift_arg.2, metadata !7404, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.5, metadata !7357, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.optab_d* %optab.2, metadata !7366, metadata !DIExpression()), !dbg !7407
  %tobool201 = icmp eq %struct.optab_d* %optab.2, null, !dbg !7563
  br i1 %tobool201, label %if.then202, label %if.end208, !dbg !7565

if.then202:                                       ; preds = %if.end200
  %call203 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7566
  %tobool204 = icmp eq i8 %call203, 0, !dbg !7566
  br i1 %tobool204, label %cleanup, label %if.then205, !dbg !7569

if.then205:                                       ; preds = %if.then202
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7570
  %call206 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !7571
  br label %cleanup, !dbg !7571

if.end208:                                        ; preds = %if.end200
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7572
  %bf.load210 = load i64, i64* %31, align 8, !dbg !7572
  %bf.cast2127 = and i64 %bf.load210, 65535, !dbg !7572
  %cmp213 = icmp eq i64 %bf.cast2127, 14, !dbg !7572
  br i1 %cmp213, label %cond.true215, label %cond.false217, !dbg !7572

cond.true215:                                     ; preds = %if.end208
  %call216 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7572
  br label %cond.end223, !dbg !7572

cond.false217:                                    ; preds = %if.end208
  %bf.load220 = load i32, i32* %precision, align 4, !dbg !7572
  %bf.lshr221 = lshr i32 %bf.load220, 16, !dbg !7572
  %bf.clear222 = and i32 %bf.lshr221, 255, !dbg !7572
  br label %cond.end223, !dbg !7572

cond.end223:                                      ; preds = %cond.false217, %cond.true215
  %cond224 = phi i32 [ %call216, %cond.true215 ], [ %bf.clear222, %cond.false217 ], !dbg !7572
  call void @llvm.dbg.value(metadata i32 %cond224, metadata !7363, metadata !DIExpression()), !dbg !7407
  %idxprom226 = sext i32 %cond224 to i64, !dbg !7573
  %insn_code228 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab.2, i64 0, i32 4, i64 %idxprom226, i32 0, !dbg !7574
  %32 = load i32, i32* %insn_code228, align 4, !dbg !7574
  call void @llvm.dbg.value(metadata i32 %32, metadata !7386, metadata !DIExpression()), !dbg !7407
  %cmp229 = icmp eq i32 %32, 2956, !dbg !7575
  br i1 %cmp229, label %if.then231, label %if.end256, !dbg !7577

if.then231:                                       ; preds = %cond.end223
  %call232 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7578
  %tobool233 = icmp eq i8 %call232, 0, !dbg !7578
  br i1 %tobool233, label %if.end236, label %if.then234, !dbg !7581

if.then234:                                       ; preds = %if.then231
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7582
  %call235 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75, i64 0, i64 0)) #6, !dbg !7583
  br label %if.end236, !dbg !7583

if.end236:                                        ; preds = %if.then231, %if.then234
  %idxprom237 = zext i32 %cond224 to i64, !dbg !7584
  %arrayidx238 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom237, !dbg !7584
  %34 = load i8, i8* %arrayidx238, align 1, !dbg !7584
  %cmp241 = icmp eq i8 %34, 4, !dbg !7586
  br i1 %cmp241, label %lor.lhs.false243, label %cleanup, !dbg !7587

lor.lhs.false243:                                 ; preds = %if.end236
  %call244 = call i32 @vect_min_worthwhile_factor(i32 %spec.select) #6, !dbg !7588
  %cmp245 = icmp sge i32 %vf.0, %call244, !dbg !7589
  %tobool248 = icmp ne %union.gimple_statement_d** %vec_stmt, null, !dbg !7590
  %or.cond1 = or i1 %cmp245, %tobool248, !dbg !7591
  br i1 %or.cond1, label %if.end250, label %cleanup, !dbg !7591

if.end250:                                        ; preds = %lor.lhs.false243
  %call251 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7592
  %tobool252 = icmp eq i8 %call251, 0, !dbg !7592
  br i1 %tobool252, label %if.end256, label %if.then253, !dbg !7594

if.then253:                                       ; preds = %if.end250
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7595
  %call254 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !7596
  br label %if.end256, !dbg !7596

if.end256:                                        ; preds = %if.end250, %if.then253, %cond.end223
  %bf.load258 = load i64, i64* %31, align 8, !dbg !7597
  %bf.cast2608 = and i64 %bf.load258, 65535, !dbg !7597
  %cmp261 = icmp eq i64 %bf.cast2608, 14, !dbg !7597
  br i1 %cmp261, label %cond.true263, label %cond.false265, !dbg !7597

cond.true263:                                     ; preds = %if.end256
  %call264 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7597
  br label %cond.end271, !dbg !7597

cond.false265:                                    ; preds = %if.end256
  %bf.load268 = load i32, i32* %precision, align 4, !dbg !7597
  %bf.lshr269 = lshr i32 %bf.load268, 16, !dbg !7597
  %bf.clear270 = and i32 %bf.lshr269, 255, !dbg !7597
  br label %cond.end271, !dbg !7597

cond.end271:                                      ; preds = %cond.false265, %cond.true263
  %cond272 = phi i32 [ %call264, %cond.true263 ], [ %bf.clear270, %cond.false265 ], !dbg !7597
  %idxprom273 = zext i32 %cond272 to i64, !dbg !7597
  %arrayidx274 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom273, !dbg !7597
  %36 = load i8, i8* %arrayidx274, align 1, !dbg !7597
  %cmp276 = icmp eq i8 %36, 12, !dbg !7597
  br i1 %cmp276, label %if.end400, label %lor.lhs.false278, !dbg !7597

lor.lhs.false278:                                 ; preds = %cond.end271
  %bf.load280 = load i64, i64* %31, align 8, !dbg !7597
  %bf.cast2829 = and i64 %bf.load280, 65535, !dbg !7597
  %cmp283 = icmp eq i64 %bf.cast2829, 14, !dbg !7597
  br i1 %cmp283, label %cond.true285, label %cond.false287, !dbg !7597

cond.true285:                                     ; preds = %lor.lhs.false278
  %call286 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7597
  br label %cond.end293, !dbg !7597

cond.false287:                                    ; preds = %lor.lhs.false278
  %bf.load290 = load i32, i32* %precision, align 4, !dbg !7597
  %bf.lshr291 = lshr i32 %bf.load290, 16, !dbg !7597
  %bf.clear292 = and i32 %bf.lshr291, 255, !dbg !7597
  br label %cond.end293, !dbg !7597

cond.end293:                                      ; preds = %cond.false287, %cond.true285
  %cond294 = phi i32 [ %call286, %cond.true285 ], [ %bf.clear292, %cond.false287 ], !dbg !7597
  %idxprom295 = zext i32 %cond294 to i64, !dbg !7597
  %arrayidx296 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom295, !dbg !7597
  %37 = load i8, i8* %arrayidx296, align 1, !dbg !7597
  %cmp298 = icmp eq i8 %37, 17, !dbg !7597
  br i1 %cmp298, label %if.end400, label %lor.lhs.false300, !dbg !7597

lor.lhs.false300:                                 ; preds = %cond.end293
  %bf.load302 = load i64, i64* %31, align 8, !dbg !7597
  %bf.cast30410 = and i64 %bf.load302, 65535, !dbg !7597
  %cmp305 = icmp eq i64 %bf.cast30410, 14, !dbg !7597
  br i1 %cmp305, label %cond.true307, label %cond.false309, !dbg !7597

cond.true307:                                     ; preds = %lor.lhs.false300
  %call308 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7597
  br label %cond.end315, !dbg !7597

cond.false309:                                    ; preds = %lor.lhs.false300
  %bf.load312 = load i32, i32* %precision, align 4, !dbg !7597
  %bf.lshr313 = lshr i32 %bf.load312, 16, !dbg !7597
  %bf.clear314 = and i32 %bf.lshr313, 255, !dbg !7597
  br label %cond.end315, !dbg !7597

cond.end315:                                      ; preds = %cond.false309, %cond.true307
  %cond316 = phi i32 [ %call308, %cond.true307 ], [ %bf.clear314, %cond.false309 ], !dbg !7597
  %idxprom317 = zext i32 %cond316 to i64, !dbg !7597
  %arrayidx318 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom317, !dbg !7597
  %38 = load i8, i8* %arrayidx318, align 1, !dbg !7597
  %cmp320 = icmp eq i8 %38, 13, !dbg !7597
  br i1 %cmp320, label %if.end400, label %lor.lhs.false322, !dbg !7597

lor.lhs.false322:                                 ; preds = %cond.end315
  %bf.load324 = load i64, i64* %31, align 8, !dbg !7597
  %bf.cast32611 = and i64 %bf.load324, 65535, !dbg !7597
  %cmp327 = icmp eq i64 %bf.cast32611, 14, !dbg !7597
  br i1 %cmp327, label %cond.true329, label %cond.false331, !dbg !7597

cond.true329:                                     ; preds = %lor.lhs.false322
  %call330 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7597
  br label %cond.end337, !dbg !7597

cond.false331:                                    ; preds = %lor.lhs.false322
  %bf.load334 = load i32, i32* %precision, align 4, !dbg !7597
  %bf.lshr335 = lshr i32 %bf.load334, 16, !dbg !7597
  %bf.clear336 = and i32 %bf.lshr335, 255, !dbg !7597
  br label %cond.end337, !dbg !7597

cond.end337:                                      ; preds = %cond.false331, %cond.true329
  %cond338 = phi i32 [ %call330, %cond.true329 ], [ %bf.clear336, %cond.false331 ], !dbg !7597
  %idxprom339 = zext i32 %cond338 to i64, !dbg !7597
  %arrayidx340 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom339, !dbg !7597
  %39 = load i8, i8* %arrayidx340, align 1, !dbg !7597
  %cmp342 = icmp eq i8 %39, 14, !dbg !7597
  br i1 %cmp342, label %if.end400, label %lor.lhs.false344, !dbg !7597

lor.lhs.false344:                                 ; preds = %cond.end337
  %bf.load346 = load i64, i64* %31, align 8, !dbg !7597
  %bf.cast34812 = and i64 %bf.load346, 65535, !dbg !7597
  %cmp349 = icmp eq i64 %bf.cast34812, 14, !dbg !7597
  br i1 %cmp349, label %cond.true351, label %cond.false353, !dbg !7597

cond.true351:                                     ; preds = %lor.lhs.false344
  %call352 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7597
  br label %cond.end359, !dbg !7597

cond.false353:                                    ; preds = %lor.lhs.false344
  %bf.load356 = load i32, i32* %precision, align 4, !dbg !7597
  %bf.lshr357 = lshr i32 %bf.load356, 16, !dbg !7597
  %bf.clear358 = and i32 %bf.lshr357, 255, !dbg !7597
  br label %cond.end359, !dbg !7597

cond.end359:                                      ; preds = %cond.false353, %cond.true351
  %cond360 = phi i32 [ %call352, %cond.true351 ], [ %bf.clear358, %cond.false353 ], !dbg !7597
  %idxprom361 = zext i32 %cond360 to i64, !dbg !7597
  %arrayidx362 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom361, !dbg !7597
  %40 = load i8, i8* %arrayidx362, align 1, !dbg !7597
  %cmp364 = icmp eq i8 %40, 15, !dbg !7597
  br i1 %cmp364, label %if.end400, label %lor.lhs.false366, !dbg !7597

lor.lhs.false366:                                 ; preds = %cond.end359
  %bf.load368 = load i64, i64* %31, align 8, !dbg !7597
  %bf.cast37013 = and i64 %bf.load368, 65535, !dbg !7597
  %cmp371 = icmp eq i64 %bf.cast37013, 14, !dbg !7597
  br i1 %cmp371, label %cond.true373, label %cond.false375, !dbg !7597

cond.true373:                                     ; preds = %lor.lhs.false366
  %call374 = call i32 @vector_type_mode(%union.tree_node* %0) #6, !dbg !7597
  br label %cond.end381, !dbg !7597

cond.false375:                                    ; preds = %lor.lhs.false366
  %bf.load378 = load i32, i32* %precision, align 4, !dbg !7597
  %bf.lshr379 = lshr i32 %bf.load378, 16, !dbg !7597
  %bf.clear380 = and i32 %bf.lshr379, 255, !dbg !7597
  br label %cond.end381, !dbg !7597

cond.end381:                                      ; preds = %cond.false375, %cond.true373
  %cond382 = phi i32 [ %call374, %cond.true373 ], [ %bf.clear380, %cond.false375 ], !dbg !7597
  %idxprom383 = zext i32 %cond382 to i64, !dbg !7597
  %arrayidx384 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom383, !dbg !7597
  %41 = load i8, i8* %arrayidx384, align 1, !dbg !7597
  %cmp386 = icmp eq i8 %41, 16, !dbg !7597
  br i1 %cmp386, label %if.end400, label %land.lhs.true388, !dbg !7599

land.lhs.true388:                                 ; preds = %cond.end381
  %call389 = call i32 @vect_min_worthwhile_factor(i32 %spec.select) #6, !dbg !7600
  %cmp390 = icmp sge i32 %vf.0, %call389, !dbg !7601
  %tobool393 = icmp ne %union.gimple_statement_d** %vec_stmt, null, !dbg !7602
  %or.cond2 = or i1 %cmp390, %tobool393, !dbg !7603
  br i1 %or.cond2, label %if.end400, label %if.then394, !dbg !7603

if.then394:                                       ; preds = %land.lhs.true388
  %call395 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7604
  %tobool396 = icmp eq i8 %call395, 0, !dbg !7604
  br i1 %tobool396, label %cleanup, label %if.then397, !dbg !7607

if.then397:                                       ; preds = %if.then394
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7608
  %call398 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !7609
  br label %cleanup, !dbg !7609

if.end400:                                        ; preds = %land.lhs.true388, %cond.end381, %cond.end359, %cond.end337, %cond.end315, %cond.end293, %cond.end271
  %tobool401 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !7610
  br i1 %tobool401, label %if.then402, label %if.end409, !dbg !7612

if.then402:                                       ; preds = %if.end400
  %type403 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !7613
  store i32 3, i32* %type403, align 8, !dbg !7615
  %call404 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7616
  %tobool405 = icmp eq i8 %call404, 0, !dbg !7616
  br i1 %tobool405, label %if.end408, label %if.then406, !dbg !7618

if.then406:                                       ; preds = %if.then402
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7619
  %call407 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.78, i64 0, i64 0)) #6, !dbg !7620
  br label %if.end408, !dbg !7620

if.end408:                                        ; preds = %if.then402, %if.then406
  call void @vect_model_simple_cost(%struct._stmt_vec_info* %call, i32 %ncopies.0, i32* nonnull %arrayidx66, %struct._slp_tree* null) #8, !dbg !7621
  br label %cleanup, !dbg !7622

if.end409:                                        ; preds = %if.end400
  %call410 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7623
  %tobool411 = icmp eq i8 %call410, 0, !dbg !7623
  br i1 %tobool411, label %if.end414, label %if.then412, !dbg !7625

if.then412:                                       ; preds = %if.end409
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7626
  %call413 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.79, i64 0, i64 0)) #6, !dbg !7627
  br label %if.end414, !dbg !7627

if.end414:                                        ; preds = %if.end409, %if.then412
  %call415 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call30, %union.tree_node* %0) #6, !dbg !7628
  call void @llvm.dbg.value(metadata %union.tree_node* %call415, metadata !7354, metadata !DIExpression()), !dbg !7407
  br i1 %tobool4, label %if.then417, label %if.else424, !dbg !7629

if.then417:                                       ; preds = %if.end414
  %call418 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !7630
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call418, metadata !7399, metadata !DIExpression()), !dbg !7407
  store %struct.VEC_tree_heap* %call418, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7633
  br i1 %cmp76, label %if.then421, label %if.end429, !dbg !7634

if.then421:                                       ; preds = %if.then417
  %call422 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !7635
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call422, metadata !7400, metadata !DIExpression()), !dbg !7407
  store %struct.VEC_tree_heap* %call422, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !7637
  br label %if.end429, !dbg !7638

if.else424:                                       ; preds = %if.end414
  %tobool425 = icmp eq i8 %scalar_shift_arg.2, 0, !dbg !7639
  br i1 %tobool425, label %if.end429, label %if.then426, !dbg !7641

if.then426:                                       ; preds = %if.else424
  %vec_stmts_size = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 4, !dbg !7642
  %45 = load i32, i32* %vec_stmts_size, align 8, !dbg !7642
  %call427 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %45) #8, !dbg !7642
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call427, metadata !7400, metadata !DIExpression()), !dbg !7407
  store %struct.VEC_tree_heap* %call427, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !7643
  br label %if.end429, !dbg !7644

if.end429:                                        ; preds = %if.else424, %if.then426, %if.then417, %if.then421
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !7392, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i32 0, metadata !7397, metadata !DIExpression()), !dbg !7407
  %tobool439 = icmp ne i8 %scalar_shift_arg.2, 0, !dbg !7645
  %or.cond3 = and i1 %cmp76, %tobool439, !dbg !7645
  %idxprom441 = sext i32 %32 to i64, !dbg !7652
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom441, i32 3, !dbg !7652
  %vec_stmts_size498 = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 4, !dbg !7654
  %cmp512 = icmp ne i8 %15, 2, !dbg !7661
  %vec_stmts = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 3, !dbg !7663
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !7668
  br label %for.cond, !dbg !7670

for.cond:                                         ; preds = %for.inc570, %if.end429
  %new_stmt.0 = phi %union.gimple_statement_d* [ null, %if.end429 ], [ %new_stmt.1.lcssa, %for.inc570 ], !dbg !7671
  %prev_stmt_info.0 = phi %struct._stmt_vec_info* [ null, %if.end429 ], [ %prev_stmt_info.1, %for.inc570 ], !dbg !7672
  %vec_oprnd1.0 = phi %union.tree_node* [ null, %if.end429 ], [ %vec_oprnd1.3, %for.inc570 ], !dbg !7673
  %j.0 = phi i32 [ 0, %if.end429 ], [ %inc571, %for.inc570 ], !dbg !7674
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7397, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1.0, metadata !7358, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !7392, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !7391, metadata !DIExpression()), !dbg !7407
  %cmp430 = icmp slt i32 %j.0, %ncopies.0, !dbg !7675
  br i1 %cmp430, label %for.body, label %for.end572, !dbg !7676

for.body:                                         ; preds = %for.cond
  %cmp432 = icmp eq i32 %j.0, 0, !dbg !7677
  br i1 %cmp432, label %if.then434, label %if.else519, !dbg !7678

if.then434:                                       ; preds = %for.body
  br i1 %or.cond3, label %if.then440, label %if.end511, !dbg !7679

if.then440:                                       ; preds = %if.then434
  %46 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !7680
  %mode444 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %46, i64 2, i32 2, !dbg !7681
  %bf.load445 = load i16, i16* %mode444, align 8, !dbg !7681
  call void @llvm.dbg.value(metadata i16 %bf.load445, metadata !7387, metadata !DIExpression()), !dbg !7407
  %idxprom447 = zext i16 %bf.load445 to i64, !dbg !7682
  %arrayidx448 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom447, !dbg !7682
  %47 = load i8, i8* %arrayidx448, align 1, !dbg !7682
  %cmp450 = icmp eq i8 %47, 12, !dbg !7682
  br i1 %cmp450, label %if.end511, label %lor.lhs.false452, !dbg !7682

lor.lhs.false452:                                 ; preds = %if.then440
  %cmp456 = icmp eq i8 %47, 17, !dbg !7682
  br i1 %cmp456, label %if.end511, label %lor.lhs.false458, !dbg !7682

lor.lhs.false458:                                 ; preds = %lor.lhs.false452
  %cmp462 = icmp eq i8 %47, 13, !dbg !7682
  br i1 %cmp462, label %if.end511, label %lor.lhs.false464, !dbg !7682

lor.lhs.false464:                                 ; preds = %lor.lhs.false458
  %cmp468 = icmp eq i8 %47, 14, !dbg !7682
  br i1 %cmp468, label %if.end511, label %lor.lhs.false470, !dbg !7682

lor.lhs.false470:                                 ; preds = %lor.lhs.false464
  %cmp474 = icmp eq i8 %47, 15, !dbg !7682
  br i1 %cmp474, label %if.end511, label %lor.lhs.false476, !dbg !7682

lor.lhs.false476:                                 ; preds = %lor.lhs.false470
  %cmp480 = icmp eq i8 %47, 16, !dbg !7682
  br i1 %cmp480, label %if.end511, label %if.then482, !dbg !7683

if.then482:                                       ; preds = %lor.lhs.false476
  %call483 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7684
  %tobool484 = icmp eq i8 %call483, 0, !dbg !7684
  br i1 %tobool484, label %if.end487, label %if.then485, !dbg !7686

if.then485:                                       ; preds = %if.then482
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7687
  %call486 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i64 0, i64 0)) #6, !dbg !7688
  br label %if.end487, !dbg !7688

if.end487:                                        ; preds = %if.then482, %if.then485
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.5, metadata !7358, metadata !DIExpression()), !dbg !7407
  %49 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !7689
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %49, metadata !7400, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %49, metadata !7400, metadata !DIExpression()), !dbg !7407
  %base490 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %49, i64 0, i32 0, !dbg !7689
  %call494 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base490, %union.tree_node* %op1.5) #8, !dbg !7689
  br i1 %tobool4, label %if.end511, label %for.cond497.preheader, !dbg !7690

for.cond497.preheader:                            ; preds = %if.end487
  br label %for.cond497, !dbg !7691

for.cond497:                                      ; preds = %for.cond497.preheader, %for.body501
  %k.0 = phi i32 [ %inc, %for.body501 ], [ 0, %for.cond497.preheader ], !dbg !7692
  call void @llvm.dbg.value(metadata i32 %k.0, metadata !7403, metadata !DIExpression()), !dbg !7407
  %50 = load i32, i32* %vec_stmts_size498, align 8, !dbg !7693
  %sub = add i32 %50, -1, !dbg !7694
  %cmp499 = icmp ult i32 %k.0, %sub, !dbg !7695
  br i1 %cmp499, label %for.body501, label %if.end511.loopexit, !dbg !7691

for.body501:                                      ; preds = %for.cond497
  %51 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !7696
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %51, metadata !7400, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %51, metadata !7400, metadata !DIExpression()), !dbg !7407
  %base504 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %51, i64 0, i32 0, !dbg !7696
  %call508 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base504, %union.tree_node* %op1.5) #8, !dbg !7696
  %inc = add i32 %k.0, 1, !dbg !7697
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7403, metadata !DIExpression()), !dbg !7407
  br label %for.cond497, !dbg !7698, !llvm.loop !7699

if.end511.loopexit:                               ; preds = %for.cond497
  br label %if.end511, !dbg !7701

if.end511:                                        ; preds = %if.end511.loopexit, %if.end487, %if.then440, %lor.lhs.false452, %lor.lhs.false458, %lor.lhs.false464, %lor.lhs.false470, %lor.lhs.false476, %if.then434
  %vec_oprnd1.2 = phi %union.tree_node* [ %vec_oprnd1.0, %if.then434 ], [ %vec_oprnd1.0, %if.then440 ], [ %vec_oprnd1.0, %lor.lhs.false452 ], [ %vec_oprnd1.0, %lor.lhs.false458 ], [ %vec_oprnd1.0, %lor.lhs.false464 ], [ %vec_oprnd1.0, %lor.lhs.false470 ], [ %vec_oprnd1.0, %lor.lhs.false476 ], [ %op1.5, %if.end487 ], [ %op1.5, %if.end511.loopexit ], !dbg !7673
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1.2, metadata !7358, metadata !DIExpression()), !dbg !7407
  %tobool515 = icmp ne %union.tree_node* %vec_oprnd1.2, null, !dbg !7702
  %or.cond4 = or i1 %cmp512, %tobool515, !dbg !7703
  br i1 %or.cond4, label %if.else517, label %if.then516, !dbg !7703

if.then516:                                       ; preds = %if.end511
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !7399, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !7400, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call fastcc void @vect_get_vec_defs(%union.tree_node* %call65, %union.tree_node* %op1.5, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** nonnull %vec_oprnds1, %struct._slp_tree* %slp_node) #8, !dbg !7704
  br label %if.end521, !dbg !7704

if.else517:                                       ; preds = %if.end511
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !7399, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call fastcc void @vect_get_vec_defs(%union.tree_node* %call65, %union.tree_node* null, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** null, %struct._slp_tree* %slp_node) #8, !dbg !7705
  br label %if.end521

if.else519:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !7399, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !7400, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call fastcc void @vect_get_vec_defs_for_stmt_copy(i32* nonnull %arrayidx66, %struct.VEC_tree_heap** nonnull %vec_oprnds0, %struct.VEC_tree_heap** nonnull %vec_oprnds1) #8, !dbg !7706
  br label %if.end521

if.end521:                                        ; preds = %if.then516, %if.else517, %if.else519
  %vec_oprnd1.3 = phi %union.tree_node* [ %vec_oprnd1.0, %if.else519 ], [ %vec_oprnd1.2, %if.else517 ], [ null, %if.then516 ], !dbg !7673
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1.3, metadata !7358, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i32 0, metadata !7398, metadata !DIExpression()), !dbg !7407
  br i1 %cmp76, label %if.end521.split.us, label %if.end521.if.end521.split_crit_edge, !dbg !7707

if.end521.if.end521.split_crit_edge:              ; preds = %if.end521
  br i1 %tobool4, label %if.end521.split.split.us, label %if.end521.split.if.end521.split.split_crit_edge, !dbg !7707

if.end521.split.us:                               ; preds = %if.end521
  br label %for.cond522.us, !dbg !7707

for.cond522.us:                                   ; preds = %for.inc558.us, %if.end521.split.us
  %new_stmt.1.us = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end521.split.us ], [ %call545.us, %for.inc558.us ], !dbg !7407
  %i.0.us = phi i32 [ 0, %if.end521.split.us ], [ %inc559.us, %for.inc558.us ], !dbg !7708
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !7398, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us, metadata !7391, metadata !DIExpression()), !dbg !7407
  %52 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7709
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %52, metadata !7399, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %52, metadata !7399, metadata !DIExpression()), !dbg !7407
  %base525.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %52, i64 0, i32 0, !dbg !7709
  call void @llvm.dbg.value(metadata %union.tree_node** %vop0, metadata !7401, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  %call529.us = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base525.us, i32 %i.0.us, %union.tree_node** nonnull %vop0) #8, !dbg !7709
  %tobool530.us = icmp eq i32 %call529.us, 0, !dbg !7710
  br i1 %tobool530.us, label %for.end560.us-lcssa.us, label %for.body531.us, !dbg !7710

for.body531.us:                                   ; preds = %for.cond522.us
  %53 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !7711
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %53, metadata !7400, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %53, metadata !7400, metadata !DIExpression()), !dbg !7407
  %base537.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %53, i64 0, i32 0, !dbg !7711
  %call541.us = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base537.us, i32 %i.0.us) #8, !dbg !7711
  call void @llvm.dbg.value(metadata %union.tree_node* %call541.us, metadata !7402, metadata !DIExpression()), !dbg !7407
  %54 = load %union.tree_node*, %union.tree_node** %vop0, align 8, !dbg !7712
  call void @llvm.dbg.value(metadata %union.tree_node* %54, metadata !7401, metadata !DIExpression()), !dbg !7407
  %call545.us = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %spec.select, %union.tree_node* %call415, %union.tree_node* %54, %union.tree_node* %call541.us) #6, !dbg !7712
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call545.us, metadata !7391, metadata !DIExpression()), !dbg !7407
  %call546.us = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call415, %union.gimple_statement_d* %call545.us) #8, !dbg !7713
  call void @llvm.dbg.value(metadata %union.tree_node* %call546.us, metadata !7364, metadata !DIExpression()), !dbg !7407
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call545.us, %union.tree_node* %call546.us) #8, !dbg !7714
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call545.us, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7715
  br i1 %tobool4, label %for.inc558.us, label %if.then548.us, !dbg !7716

if.then548.us:                                    ; preds = %for.body531.us
  %55 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !7717
  %tobool549.us = icmp eq %struct.VEC_gimple_heap* %55, null, !dbg !7717
  br i1 %tobool549.us, label %cond.end554.us, label %cond.true550.us, !dbg !7717

cond.true550.us:                                  ; preds = %if.then548.us
  %base552.us = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %55, i64 0, i32 0, !dbg !7717
  br label %cond.end554.us, !dbg !7717

cond.end554.us:                                   ; preds = %cond.true550.us, %if.then548.us
  %cond555.us = phi %struct.VEC_gimple_base* [ %base552.us, %cond.true550.us ], [ null, %if.then548.us ], !dbg !7717
  %call556.us = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond555.us, %union.gimple_statement_d* %call545.us) #8, !dbg !7717
  br label %for.inc558.us, !dbg !7717

for.inc558.us:                                    ; preds = %cond.end554.us, %for.body531.us
  %inc559.us = add nuw nsw i32 %i.0.us, 1, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %inc559.us, metadata !7398, metadata !DIExpression()), !dbg !7407
  br label %for.cond522.us, !dbg !7719, !llvm.loop !7720

for.end560.us-lcssa.us:                           ; preds = %for.cond522.us
  %new_stmt.1.us.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1.us, %for.cond522.us ], !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us.lcssa, metadata !7391, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us.lcssa, metadata !7391, metadata !DIExpression()), !dbg !7407
  br label %for.end560, !dbg !7722

if.end521.split.if.end521.split.split_crit_edge:  ; preds = %if.end521.if.end521.split_crit_edge
  br label %for.cond522, !dbg !7707

if.end521.split.split.us:                         ; preds = %if.end521.if.end521.split_crit_edge
  br label %for.cond522.us16, !dbg !7707

for.cond522.us16:                                 ; preds = %for.body531.us22, %if.end521.split.split.us
  %new_stmt.1.us17 = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end521.split.split.us ], [ %call545.us28, %for.body531.us22 ], !dbg !7407
  %i.0.us18 = phi i32 [ 0, %if.end521.split.split.us ], [ %inc559.us38, %for.body531.us22 ], !dbg !7708
  call void @llvm.dbg.value(metadata i32 %i.0.us18, metadata !7398, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us17, metadata !7391, metadata !DIExpression()), !dbg !7407
  %56 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7709
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %56, metadata !7399, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %56, metadata !7399, metadata !DIExpression()), !dbg !7407
  %base525.us19 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %56, i64 0, i32 0, !dbg !7709
  call void @llvm.dbg.value(metadata %union.tree_node** %vop0, metadata !7401, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  %call529.us20 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base525.us19, i32 %i.0.us18, %union.tree_node** nonnull %vop0) #8, !dbg !7709
  %tobool530.us21 = icmp eq i32 %call529.us20, 0, !dbg !7710
  br i1 %tobool530.us21, label %for.end560.us-lcssa.us-lcssa.us, label %for.body531.us22, !dbg !7710

for.body531.us22:                                 ; preds = %for.cond522.us16
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7402, metadata !DIExpression()), !dbg !7407
  %57 = load %union.tree_node*, %union.tree_node** %vop0, align 8, !dbg !7712
  call void @llvm.dbg.value(metadata %union.tree_node* %57, metadata !7401, metadata !DIExpression()), !dbg !7407
  %call545.us28 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %spec.select, %union.tree_node* %call415, %union.tree_node* %57, %union.tree_node* null) #6, !dbg !7712
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call545.us28, metadata !7391, metadata !DIExpression()), !dbg !7407
  %call546.us29 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call415, %union.gimple_statement_d* %call545.us28) #8, !dbg !7713
  call void @llvm.dbg.value(metadata %union.tree_node* %call546.us29, metadata !7364, metadata !DIExpression()), !dbg !7407
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call545.us28, %union.tree_node* %call546.us29) #8, !dbg !7714
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call545.us28, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7715
  %inc559.us38 = add nuw nsw i32 %i.0.us18, 1, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %inc559.us38, metadata !7398, metadata !DIExpression()), !dbg !7407
  br label %for.cond522.us16, !dbg !7719, !llvm.loop !7720

for.end560.us-lcssa.us-lcssa.us:                  ; preds = %for.cond522.us16
  %new_stmt.1.us17.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1.us17, %for.cond522.us16 ], !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us17.lcssa, metadata !7391, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us17.lcssa, metadata !7391, metadata !DIExpression()), !dbg !7407
  br label %for.end560.us-lcssa, !dbg !7722

for.cond522:                                      ; preds = %cond.end554, %if.end521.split.if.end521.split.split_crit_edge
  %new_stmt.1 = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end521.split.if.end521.split.split_crit_edge ], [ %call545, %cond.end554 ], !dbg !7407
  %i.0 = phi i32 [ 0, %if.end521.split.if.end521.split.split_crit_edge ], [ %inc559, %cond.end554 ], !dbg !7708
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7398, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1, metadata !7391, metadata !DIExpression()), !dbg !7407
  %58 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !7709
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %58, metadata !7399, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %58, metadata !7399, metadata !DIExpression()), !dbg !7407
  %base525 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %58, i64 0, i32 0, !dbg !7709
  call void @llvm.dbg.value(metadata %union.tree_node** %vop0, metadata !7401, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  %call529 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base525, i32 %i.0, %union.tree_node** nonnull %vop0) #8, !dbg !7709
  %tobool530 = icmp eq i32 %call529, 0, !dbg !7710
  br i1 %tobool530, label %for.end560.us-lcssa.us-lcssa, label %for.body531, !dbg !7710

for.body531:                                      ; preds = %for.cond522
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7402, metadata !DIExpression()), !dbg !7407
  %59 = load %union.tree_node*, %union.tree_node** %vop0, align 8, !dbg !7712
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !7401, metadata !DIExpression()), !dbg !7407
  %call545 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %spec.select, %union.tree_node* %call415, %union.tree_node* %59, %union.tree_node* null) #6, !dbg !7712
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call545, metadata !7391, metadata !DIExpression()), !dbg !7407
  %call546 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call415, %union.gimple_statement_d* %call545) #8, !dbg !7713
  call void @llvm.dbg.value(metadata %union.tree_node* %call546, metadata !7364, metadata !DIExpression()), !dbg !7407
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call545, %union.tree_node* %call546) #8, !dbg !7714
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call545, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7715
  %60 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !7717
  %tobool549 = icmp eq %struct.VEC_gimple_heap* %60, null, !dbg !7717
  br i1 %tobool549, label %cond.end554, label %cond.true550, !dbg !7717

cond.true550:                                     ; preds = %for.body531
  %base552 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %60, i64 0, i32 0, !dbg !7717
  br label %cond.end554, !dbg !7717

cond.end554:                                      ; preds = %for.body531, %cond.true550
  %cond555 = phi %struct.VEC_gimple_base* [ %base552, %cond.true550 ], [ null, %for.body531 ], !dbg !7717
  %call556 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond555, %union.gimple_statement_d* %call545) #8, !dbg !7717
  %inc559 = add nuw nsw i32 %i.0, 1, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %inc559, metadata !7398, metadata !DIExpression()), !dbg !7407
  br label %for.cond522, !dbg !7719, !llvm.loop !7720

for.end560.us-lcssa.us-lcssa:                     ; preds = %for.cond522
  %new_stmt.1.lcssa40 = phi %union.gimple_statement_d* [ %new_stmt.1, %for.cond522 ], !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa40, metadata !7391, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa40, metadata !7391, metadata !DIExpression()), !dbg !7407
  br label %for.end560.us-lcssa, !dbg !7722

for.end560.us-lcssa:                              ; preds = %for.end560.us-lcssa.us-lcssa.us, %for.end560.us-lcssa.us-lcssa
  %new_stmt.1.lcssa.ph = phi %union.gimple_statement_d* [ %new_stmt.1.lcssa40, %for.end560.us-lcssa.us-lcssa ], [ %new_stmt.1.us17.lcssa, %for.end560.us-lcssa.us-lcssa.us ]
  br label %for.end560, !dbg !7722

for.end560:                                       ; preds = %for.end560.us-lcssa.us, %for.end560.us-lcssa
  %new_stmt.1.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1.lcssa.ph, %for.end560.us-lcssa ], [ %new_stmt.1.us.lcssa, %for.end560.us-lcssa.us ], !dbg !7407
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa, metadata !7391, metadata !DIExpression()), !dbg !7407
  br i1 %tobool4, label %if.end563, label %for.inc570, !dbg !7724

if.end563:                                        ; preds = %for.end560
  br i1 %cmp432, label %if.then566, label %if.else567, !dbg !7725

if.then566:                                       ; preds = %if.end563
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !7726
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !7727
  br label %if.end568, !dbg !7728

if.else567:                                       ; preds = %if.end563
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.0, i64 0, i32 14, !dbg !7729
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %related_stmt, align 8, !dbg !7730
  br label %if.end568

if.end568:                                        ; preds = %if.else567, %if.then566
  %call569 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %new_stmt.1.lcssa) #8, !dbg !7731
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call569, metadata !7392, metadata !DIExpression()), !dbg !7407
  br label %for.inc570, !dbg !7732

for.inc570:                                       ; preds = %for.end560, %if.end568
  %prev_stmt_info.1 = phi %struct._stmt_vec_info* [ %call569, %if.end568 ], [ %prev_stmt_info.0, %for.end560 ], !dbg !7407
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.1, metadata !7392, metadata !DIExpression()), !dbg !7407
  %inc571 = add nuw nsw i32 %j.0, 1, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %inc571, metadata !7397, metadata !DIExpression()), !dbg !7407
  br label %for.cond, !dbg !7734, !llvm.loop !7735

for.end572:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !7399, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds0) #8, !dbg !7737
  %61 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !7738
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %61, metadata !7400, metadata !DIExpression()), !dbg !7407
  %tobool573 = icmp eq %struct.VEC_tree_heap* %61, null, !dbg !7738
  br i1 %tobool573, label %cleanup, label %if.then574, !dbg !7740

if.then574:                                       ; preds = %for.end572
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !7400, metadata !DIExpression(DW_OP_deref)), !dbg !7407
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds1) #8, !dbg !7741
  br label %cleanup, !dbg !7741

cleanup:                                          ; preds = %if.then83, %if.else190, %if.end236, %for.end572, %if.then394, %if.then202, %if.then69, %if.then58, %if.end35, %if.end29, %if.end22, %if.end18, %if.end14, %if.then574, %if.then397, %lor.lhs.false243, %if.then205, %if.then193, %if.then86, %if.then72, %if.then61, %cond.end, %if.end408
  %retval.0 = phi i8 [ 1, %if.end408 ], [ 0, %cond.end ], [ 0, %if.end14 ], [ 0, %if.end18 ], [ 0, %if.end22 ], [ 0, %if.end29 ], [ 0, %if.end35 ], [ 0, %if.then61 ], [ 0, %if.then58 ], [ 0, %if.then72 ], [ 0, %if.then69 ], [ 0, %if.then86 ], [ 0, %if.then83 ], [ 0, %if.then193 ], [ 0, %if.else190 ], [ 0, %if.then205 ], [ 0, %if.then202 ], [ 0, %lor.lhs.false243 ], [ 0, %if.end236 ], [ 0, %if.then397 ], [ 0, %if.then394 ], [ 1, %if.then574 ], [ 1, %for.end572 ], !dbg !7407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7742
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7742
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7742
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7742
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7742
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !7742
  ret i8 %retval.0, !dbg !7742
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_assignment(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %struct._slp_tree* %slp_node) unnamed_addr #5 !dbg !7743 {
entry:
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i64, align 8
  %vec_oprnds = alloca %struct.VEC_tree_heap*, align 8
  %vop = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7745, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7746, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !7747, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !7748, metadata !DIExpression()), !dbg !7768
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !7769
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !7752, metadata !DIExpression()), !dbg !7768
  %vectype1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !7770
  %0 = load %union.tree_node*, %union.tree_node** %vectype1, align 8, !dbg !7770
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7753, metadata !DIExpression()), !dbg !7768
  %loop_vinfo2 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !7771
  %1 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo2, align 8, !dbg !7771
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %1, metadata !7754, metadata !DIExpression()), !dbg !7768
  %2 = bitcast %union.tree_node** %def to i8*, !dbg !7772
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !7772
  %3 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !7773
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7773
  %4 = bitcast i64* %dt to i8*, !dbg !7774
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7774
  call void @llvm.dbg.value(metadata i64 34359738376, metadata !7758, metadata !DIExpression()), !dbg !7768
  store i64 34359738376, i64* %dt, align 8, !dbg !7775
  %type = bitcast %union.tree_node* %0 to %struct.tree_type*, !dbg !7776
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !7776
  %bf.load = load i32, i32* %precision, align 4, !dbg !7776
  call void @llvm.dbg.value(metadata i32 undef, metadata !7759, metadata !DIExpression()), !dbg !7768
  %5 = bitcast %struct.VEC_tree_heap** %vec_oprnds to i8*, !dbg !7777
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7777
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !7763, metadata !DIExpression()), !dbg !7768
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !7778
  %6 = bitcast %union.tree_node** %vop to i8*, !dbg !7779
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7779
  %bb_vinfo3 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 26, !dbg !7780
  %7 = load %struct._bb_vec_info*, %struct._bb_vec_info** %bb_vinfo3, align 8, !dbg !7780
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %7, metadata !7765, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !7767, metadata !DIExpression()), !dbg !7768
  %tobool = icmp eq %struct._slp_tree* %slp_node, null, !dbg !7781
  br i1 %tobool, label %if.else, label %if.end, !dbg !7783

if.else:                                          ; preds = %entry
  %bf.clear = and i32 %bf.load, 1023, !dbg !7776
  %sh_prom = zext i32 %bf.clear to i64, !dbg !7776
  %shl = shl i64 1, %sh_prom, !dbg !7776
  %conv = trunc i64 %shl to i32, !dbg !7776
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7759, metadata !DIExpression()), !dbg !7768
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %1, i64 0, i32 6, !dbg !7784
  %8 = load i32, i32* %vectorization_factor, align 8, !dbg !7784
  %div = sdiv i32 %8, %conv, !dbg !7785
  call void @llvm.dbg.value(metadata i32 %div, metadata !7760, metadata !DIExpression()), !dbg !7768
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %ncopies.0 = phi i32 [ %div, %if.else ], [ 1, %entry ], !dbg !7786
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !7760, metadata !DIExpression()), !dbg !7768
  %cmp = icmp sgt i32 %ncopies.0, 0, !dbg !7787
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7787

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1831, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !7787
  br label %cond.end, !dbg !7787

cond.end:                                         ; preds = %if.end, %cond.true
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !7788
  %9 = load i32, i32* %relevant, align 8, !dbg !7788
  %cmp5 = icmp ne i32 %9, 0, !dbg !7788
  %tobool7 = icmp ne %struct._bb_vec_info* %7, null, !dbg !7790
  %or.cond = or i1 %cmp5, %tobool7, !dbg !7791
  br i1 %or.cond, label %if.end9, label %cleanup, !dbg !7791

if.end9:                                          ; preds = %cond.end
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !7792
  %10 = load i32, i32* %def_type, align 8, !dbg !7792
  %cmp10 = icmp eq i32 %10, 3, !dbg !7794
  br i1 %cmp10, label %if.end13, label %cleanup, !dbg !7795

if.end13:                                         ; preds = %if.end9
  %call14 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !7796
  %tobool15 = icmp eq i8 %call14, 0, !dbg !7796
  br i1 %tobool15, label %cleanup, label %if.end17, !dbg !7798

if.end17:                                         ; preds = %if.end13
  %call18 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !7799
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !7750, metadata !DIExpression()), !dbg !7768
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7800
  %bf.load19 = load i64, i64* %11, align 8, !dbg !7800
  %bf.cast1 = and i64 %bf.load19, 65535, !dbg !7802
  %cmp21 = icmp eq i64 %bf.cast1, 141, !dbg !7802
  br i1 %cmp21, label %if.end24, label %cleanup, !dbg !7803

if.end24:                                         ; preds = %if.end17
  %call25 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !7804
  %tobool27 = icmp eq i8 %call25, 0, !dbg !7804
  br i1 %tobool27, label %lor.lhs.false, label %if.then31, !dbg !7806

lor.lhs.false:                                    ; preds = %if.end24
  %call28 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !7807
  %cmp29 = icmp eq i32 %call28, 112, !dbg !7808
  br i1 %cmp29, label %if.then31, label %cleanup, !dbg !7809

if.then31:                                        ; preds = %if.end24, %lor.lhs.false
  %call32 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !7810
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !7751, metadata !DIExpression()), !dbg !7768
  %arrayidx = bitcast i64* %dt to i32*, !dbg !7811
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !7756, metadata !DIExpression(DW_OP_deref)), !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !7757, metadata !DIExpression(DW_OP_deref)), !dbg !7768
  %call35 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call32, %struct._loop_vec_info* %1, %struct._bb_vec_info* %7, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx) #8, !dbg !7813
  %tobool36 = icmp eq i8 %call35, 0, !dbg !7813
  br i1 %tobool36, label %if.then37, label %if.end43, !dbg !7814

if.then37:                                        ; preds = %if.then31
  %call38 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7815
  %tobool39 = icmp eq i8 %call38, 0, !dbg !7815
  br i1 %tobool39, label %cleanup, label %if.then40, !dbg !7818

if.then40:                                        ; preds = %if.then37
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7819
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !7820
  br label %cleanup, !dbg !7820

if.end43:                                         ; preds = %if.then31
  %tobool44 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !7821
  br i1 %tobool44, label %if.then45, label %if.end52, !dbg !7823

if.then45:                                        ; preds = %if.end43
  %type46 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !7824
  store i32 5, i32* %type46, align 8, !dbg !7826
  %call47 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7827
  %tobool48 = icmp eq i8 %call47, 0, !dbg !7827
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !7829

if.then49:                                        ; preds = %if.then45
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7830
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i64 0, i64 0)) #6, !dbg !7831
  br label %if.end51, !dbg !7831

if.end51:                                         ; preds = %if.then45, %if.then49
  call void @vect_model_simple_cost(%struct._stmt_vec_info* %call, i32 %ncopies.0, i32* nonnull %arrayidx, %struct._slp_tree* null) #8, !dbg !7832
  br label %cleanup, !dbg !7833

if.end52:                                         ; preds = %if.end43
  %call53 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !7834
  %tobool54 = icmp eq i8 %call53, 0, !dbg !7834
  br i1 %tobool54, label %if.end57, label %if.then55, !dbg !7836

if.then55:                                        ; preds = %if.end52
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !7837
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !7838
  br label %if.end57, !dbg !7838

if.end57:                                         ; preds = %if.end52, %if.then55
  %call58 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call18, %union.tree_node* %0) #6, !dbg !7839
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !7749, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 0, metadata !7762, metadata !DIExpression()), !dbg !7768
  %vec_stmts = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 3, !dbg !7840
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !7848
  br label %for.cond, !dbg !7850

for.cond:                                         ; preds = %for.inc99, %if.end57
  %j.0 = phi i32 [ 0, %if.end57 ], [ %inc100, %for.inc99 ], !dbg !7851
  %new_stmt.0 = phi %union.gimple_statement_d* [ null, %if.end57 ], [ %new_stmt.1.lcssa, %for.inc99 ], !dbg !7852
  %prev_stmt_info.0 = phi %struct._stmt_vec_info* [ null, %if.end57 ], [ %prev_stmt_info.1, %for.inc99 ], !dbg !7853
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !7767, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7762, metadata !DIExpression()), !dbg !7768
  %cmp59 = icmp slt i32 %j.0, %ncopies.0, !dbg !7854
  br i1 %cmp59, label %for.body, label %for.end101, !dbg !7855

for.body:                                         ; preds = %for.cond
  %cmp61 = icmp eq i32 %j.0, 0, !dbg !7856
  br i1 %cmp61, label %if.then63, label %if.else64, !dbg !7858

if.then63:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds, metadata !7763, metadata !DIExpression(DW_OP_deref)), !dbg !7768
  call fastcc void @vect_get_vec_defs(%union.tree_node* %call32, %union.tree_node* null, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap** nonnull %vec_oprnds, %struct.VEC_tree_heap** null, %struct._slp_tree* %slp_node) #8, !dbg !7859
  br label %if.end66, !dbg !7859

if.else64:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds, metadata !7763, metadata !DIExpression(DW_OP_deref)), !dbg !7768
  call fastcc void @vect_get_vec_defs_for_stmt_copy(i32* nonnull %arrayidx, %struct.VEC_tree_heap** nonnull %vec_oprnds, %struct.VEC_tree_heap** null) #8, !dbg !7860
  br label %if.end66

if.end66:                                         ; preds = %if.else64, %if.then63
  call void @llvm.dbg.value(metadata i32 0, metadata !7761, metadata !DIExpression()), !dbg !7768
  br i1 %tobool, label %if.end66.split.us, label %if.end66.if.end66.split_crit_edge, !dbg !7861

if.end66.if.end66.split_crit_edge:                ; preds = %if.end66
  br label %for.cond67, !dbg !7861

if.end66.split.us:                                ; preds = %if.end66
  br label %for.cond67.us, !dbg !7861

for.cond67.us:                                    ; preds = %for.body76.us, %if.end66.split.us
  %i.0.us = phi i32 [ 0, %if.end66.split.us ], [ %inc.us, %for.body76.us ], !dbg !7862
  %new_stmt.1.us = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end66.split.us ], [ %call77.us, %for.body76.us ], !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !7761, metadata !DIExpression()), !dbg !7768
  %15 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !7863
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %15, metadata !7763, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %15, metadata !7763, metadata !DIExpression()), !dbg !7768
  %base70.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %15, i64 0, i32 0, !dbg !7863
  call void @llvm.dbg.value(metadata %union.tree_node** %vop, metadata !7764, metadata !DIExpression(DW_OP_deref)), !dbg !7768
  %call74.us = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base70.us, i32 %i.0.us, %union.tree_node** nonnull %vop) #8, !dbg !7863
  %tobool75.us = icmp eq i32 %call74.us, 0, !dbg !7864
  br i1 %tobool75.us, label %for.end.us-lcssa.us, label %for.body76.us, !dbg !7864

for.body76.us:                                    ; preds = %for.cond67.us
  %16 = load %union.tree_node*, %union.tree_node** %vop, align 8, !dbg !7865
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !7764, metadata !DIExpression()), !dbg !7768
  %call77.us = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call58, %union.tree_node* %16) #6, !dbg !7865
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call77.us, metadata !7766, metadata !DIExpression()), !dbg !7768
  %call78.us = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call58, %union.gimple_statement_d* %call77.us) #8, !dbg !7866
  call void @llvm.dbg.value(metadata %union.tree_node* %call78.us, metadata !7755, metadata !DIExpression()), !dbg !7768
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call77.us, %union.tree_node* %call78.us) #8, !dbg !7867
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call77.us, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7868
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !7761, metadata !DIExpression()), !dbg !7768
  br label %for.cond67.us, !dbg !7870, !llvm.loop !7871

for.end.us-lcssa.us:                              ; preds = %for.cond67.us
  %new_stmt.1.us.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1.us, %for.cond67.us ], !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us.lcssa, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.us.lcssa, metadata !7766, metadata !DIExpression()), !dbg !7768
  br label %for.end, !dbg !7873

for.cond67:                                       ; preds = %cond.end86, %if.end66.if.end66.split_crit_edge
  %i.0 = phi i32 [ 0, %if.end66.if.end66.split_crit_edge ], [ %inc, %cond.end86 ], !dbg !7862
  %new_stmt.1 = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end66.if.end66.split_crit_edge ], [ %call77, %cond.end86 ], !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7761, metadata !DIExpression()), !dbg !7768
  %17 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !7863
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !7763, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %17, metadata !7763, metadata !DIExpression()), !dbg !7768
  %base70 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %17, i64 0, i32 0, !dbg !7863
  call void @llvm.dbg.value(metadata %union.tree_node** %vop, metadata !7764, metadata !DIExpression(DW_OP_deref)), !dbg !7768
  %call74 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base70, i32 %i.0, %union.tree_node** nonnull %vop) #8, !dbg !7863
  %tobool75 = icmp eq i32 %call74, 0, !dbg !7864
  br i1 %tobool75, label %for.end.us-lcssa, label %for.body76, !dbg !7864

for.body76:                                       ; preds = %for.cond67
  %18 = load %union.tree_node*, %union.tree_node** %vop, align 8, !dbg !7865
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !7764, metadata !DIExpression()), !dbg !7768
  %call77 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call58, %union.tree_node* %18) #6, !dbg !7865
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call77, metadata !7766, metadata !DIExpression()), !dbg !7768
  %call78 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call58, %union.gimple_statement_d* %call77) #8, !dbg !7866
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !7755, metadata !DIExpression()), !dbg !7768
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call77, %union.tree_node* %call78) #8, !dbg !7867
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call77, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !7868
  %19 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !7875
  %tobool81 = icmp eq %struct.VEC_gimple_heap* %19, null, !dbg !7875
  br i1 %tobool81, label %cond.end86, label %cond.true82, !dbg !7875

cond.true82:                                      ; preds = %for.body76
  %base84 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %19, i64 0, i32 0, !dbg !7875
  br label %cond.end86, !dbg !7875

cond.end86:                                       ; preds = %for.body76, %cond.true82
  %cond87 = phi %struct.VEC_gimple_base* [ %base84, %cond.true82 ], [ null, %for.body76 ], !dbg !7875
  %call88 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond87, %union.gimple_statement_d* %call77) #8, !dbg !7875
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7761, metadata !DIExpression()), !dbg !7768
  br label %for.cond67, !dbg !7870, !llvm.loop !7871

for.end.us-lcssa:                                 ; preds = %for.cond67
  %new_stmt.1.lcssa3 = phi %union.gimple_statement_d* [ %new_stmt.1, %for.cond67 ], !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa3, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa3, metadata !7766, metadata !DIExpression()), !dbg !7768
  br label %for.end, !dbg !7873

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %new_stmt.1.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1.lcssa3, %for.end.us-lcssa ], [ %new_stmt.1.us.lcssa, %for.end.us-lcssa.us ], !dbg !7768
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa, metadata !7766, metadata !DIExpression()), !dbg !7768
  br i1 %tobool, label %if.end92, label %for.inc99, !dbg !7876

if.end92:                                         ; preds = %for.end
  br i1 %cmp61, label %if.then95, label %if.else96, !dbg !7877

if.then95:                                        ; preds = %if.end92
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !7878
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !7879
  br label %if.end97, !dbg !7880

if.else96:                                        ; preds = %if.end92
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.0, i64 0, i32 14, !dbg !7881
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %related_stmt, align 8, !dbg !7882
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then95
  %call98 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %new_stmt.1.lcssa) #8, !dbg !7883
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call98, metadata !7767, metadata !DIExpression()), !dbg !7768
  br label %for.inc99, !dbg !7884

for.inc99:                                        ; preds = %for.end, %if.end97
  %prev_stmt_info.1 = phi %struct._stmt_vec_info* [ %call98, %if.end97 ], [ %prev_stmt_info.0, %for.end ], !dbg !7768
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.1, metadata !7767, metadata !DIExpression()), !dbg !7768
  %inc100 = add nuw nsw i32 %j.0, 1, !dbg !7885
  call void @llvm.dbg.value(metadata i32 %inc100, metadata !7762, metadata !DIExpression()), !dbg !7768
  br label %for.cond, !dbg !7886, !llvm.loop !7887

for.end101:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds, metadata !7763, metadata !DIExpression(DW_OP_deref)), !dbg !7768
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_oprnds) #8, !dbg !7889
  br label %cleanup, !dbg !7890

cleanup:                                          ; preds = %if.then37, %if.end17, %if.end13, %if.end9, %if.then40, %lor.lhs.false, %cond.end, %for.end101, %if.end51
  %retval.0 = phi i8 [ 1, %for.end101 ], [ 1, %if.end51 ], [ 0, %cond.end ], [ 0, %if.end9 ], [ 0, %if.end13 ], [ 0, %if.end17 ], [ 0, %lor.lhs.false ], [ 0, %if.then40 ], [ 0, %if.then37 ], !dbg !7768
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7891
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7891
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7891
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !7891
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !7891
  ret i8 %retval.0, !dbg !7891
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_load(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %struct._slp_tree* %slp_node, %struct._slp_instance* %slp_node_instance) unnamed_addr #5 !dbg !7892 {
entry:
  %dummy = alloca %union.tree_node*, align 8
  %ptr_incr = alloca %union.gimple_statement_d*, align 8
  %realignment_token = alloca %union.tree_node*, align 8
  %dr_chain = alloca %struct.VEC_tree_heap*, align 8
  %inv_p = alloca i8, align 1
  %at_loop = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7896, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7897, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !7898, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !7899, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct._slp_instance* %slp_node_instance, metadata !7900, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7902, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7903, metadata !DIExpression()), !dbg !7969
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !7970
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !7904, metadata !DIExpression()), !dbg !7969
  %loop_vinfo1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !7971
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo1, align 8, !dbg !7971
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !7906, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.loop* null, metadata !7907, metadata !DIExpression()), !dbg !7969
  %call2 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #8, !dbg !7972
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 3, !dbg !7973
  %1 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !7973
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !7908, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8 0, metadata !7909, metadata !DIExpression()), !dbg !7969
  %data_ref_info = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 7, !dbg !7974
  %2 = load %struct.data_reference*, %struct.data_reference** %data_ref_info, align 8, !dbg !7974
  call void @llvm.dbg.value(metadata %struct.data_reference* %2, metadata !7910, metadata !DIExpression()), !dbg !7969
  %vectype3 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !7975
  %3 = load %union.tree_node*, %union.tree_node** %vectype3, align 8, !dbg !7975
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7912, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7915, metadata !DIExpression()), !dbg !7969
  %4 = bitcast %union.tree_node** %dummy to i8*, !dbg !7976
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !7976
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7918, metadata !DIExpression()), !dbg !7969
  %5 = bitcast %union.gimple_statement_d** %ptr_incr to i8*, !dbg !7977
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !7977
  %type = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !7978
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !7978
  %bf.load = load i32, i32* %precision, align 4, !dbg !7978
  %bf.clear = and i32 %bf.load, 1023, !dbg !7978
  %sh_prom = zext i32 %bf.clear to i64, !dbg !7978
  %shl = shl i64 1, %sh_prom, !dbg !7978
  %conv = trunc i64 %shl to i32, !dbg !7978
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7920, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7925, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7927, metadata !DIExpression()), !dbg !7969
  %6 = bitcast %union.tree_node** %realignment_token to i8*, !dbg !7979
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !7979
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7928, metadata !DIExpression()), !dbg !7969
  store %union.tree_node* null, %union.tree_node** %realignment_token, align 8, !dbg !7980
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7929, metadata !DIExpression()), !dbg !7969
  %7 = bitcast %struct.VEC_tree_heap** %dr_chain to i8*, !dbg !7981
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !7981
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !7930, metadata !DIExpression()), !dbg !7969
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !7982
  call void @llvm.dbg.value(metadata i8 0, metadata !7931, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %inv_p, metadata !7934, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %inv_p) #7, !dbg !7983
  call void @llvm.dbg.value(metadata i8 0, metadata !7935, metadata !DIExpression()), !dbg !7969
  %8 = bitcast %struct.loop** %at_loop to i8*, !dbg !7984
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !7984
  %cmp = icmp ne %struct._slp_tree* %slp_node, null, !dbg !7985
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !7938, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8 0, metadata !7939, metadata !DIExpression()), !dbg !7969
  %bb_vinfo6 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 26, !dbg !7986
  %9 = load %struct._bb_vec_info*, %struct._bb_vec_info** %bb_vinfo6, align 8, !dbg !7986
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %9, metadata !7941, metadata !DIExpression()), !dbg !7969
  %tobool = icmp eq %struct._loop_vec_info* %0, null, !dbg !7987
  br i1 %tobool, label %if.end, label %if.then, !dbg !7989

if.then:                                          ; preds = %entry
  %loop7 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 0, !dbg !7990
  %10 = load %struct.loop*, %struct.loop** %loop7, align 8, !dbg !7990
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !7907, metadata !DIExpression()), !dbg !7969
  %call8 = tail call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* %10, %union.gimple_statement_d* %stmt) #8, !dbg !7992
  call void @llvm.dbg.value(metadata i8 %call8, metadata !7909, metadata !DIExpression()), !dbg !7969
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 6, !dbg !7993
  %11 = load i32, i32* %vectorization_factor, align 8, !dbg !7993
  call void @llvm.dbg.value(metadata i32 %11, metadata !7942, metadata !DIExpression()), !dbg !7969
  br label %if.end, !dbg !7994

if.end:                                           ; preds = %entry, %if.then
  %nested_in_vect_loop.0 = phi i8 [ %call8, %if.then ], [ 0, %entry ], !dbg !7969
  %loop.0 = phi %struct.loop* [ %10, %if.then ], [ null, %entry ], !dbg !7969
  %vf.0 = phi i32 [ %11, %if.then ], [ 1, %entry ], !dbg !7995
  call void @llvm.dbg.value(metadata i32 %vf.0, metadata !7942, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !7907, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8 %nested_in_vect_loop.0, metadata !7909, metadata !DIExpression()), !dbg !7969
  br i1 %cmp, label %if.end13, label %if.else11, !dbg !7996

if.else11:                                        ; preds = %if.end
  %vectorization_factor12 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 6, !dbg !7997
  %12 = load i32, i32* %vectorization_factor12, align 8, !dbg !7997
  %div = sdiv i32 %12, %conv, !dbg !7999
  call void @llvm.dbg.value(metadata i32 %div, metadata !7921, metadata !DIExpression()), !dbg !7969
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.else11
  %ncopies.0 = phi i32 [ %div, %if.else11 ], [ 1, %if.end ], !dbg !8000
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !7921, metadata !DIExpression()), !dbg !7969
  %cmp14 = icmp sgt i32 %ncopies.0, 0, !dbg !8001
  br i1 %cmp14, label %cond.end, label %cond.true, !dbg !8001

cond.true:                                        ; preds = %if.end13
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8001
  br label %cond.end, !dbg !8001

cond.end:                                         ; preds = %if.end13, %cond.true
  %tobool17 = icmp ne i8 %nested_in_vect_loop.0, 0, !dbg !8002
  %cmp18 = icmp sgt i32 %ncopies.0, 1, !dbg !8004
  %or.cond = and i1 %tobool17, %cmp18, !dbg !8005
  br i1 %or.cond, label %if.then20, label %if.end26, !dbg !8005

if.then20:                                        ; preds = %cond.end
  %call21 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8006
  %tobool22 = icmp eq i8 %call21, 0, !dbg !8006
  br i1 %tobool22, label %cleanup, label %if.then23, !dbg !8009

if.then23:                                        ; preds = %if.then20
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8010
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i64 0, i64 0)) #6, !dbg !8011
  br label %cleanup, !dbg !8011

if.end26:                                         ; preds = %cond.end
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !8012
  %14 = load i32, i32* %relevant, align 8, !dbg !8012
  %cmp27 = icmp ne i32 %14, 0, !dbg !8012
  %tobool30 = icmp ne %struct._bb_vec_info* %9, null, !dbg !8014
  %or.cond1 = or i1 %cmp27, %tobool30, !dbg !8015
  br i1 %or.cond1, label %if.end32, label %cleanup, !dbg !8015

if.end32:                                         ; preds = %if.end26
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !8016
  %15 = load i32, i32* %def_type, align 8, !dbg !8016
  %cmp33 = icmp eq i32 %15, 3, !dbg !8018
  br i1 %cmp33, label %if.end36, label %cleanup, !dbg !8019

if.end36:                                         ; preds = %if.end32
  %call37 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !8020
  %tobool38 = icmp eq i8 %call37, 0, !dbg !8020
  br i1 %tobool38, label %cleanup, label %if.end40, !dbg !8022

if.end40:                                         ; preds = %if.end36
  %call41 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8023
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !7901, metadata !DIExpression()), !dbg !7969
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8024
  %bf.load42 = load i64, i64* %16, align 8, !dbg !8024
  %bf.cast11 = and i64 %bf.load42, 65535, !dbg !8026
  %cmp44 = icmp eq i64 %bf.cast11, 141, !dbg !8026
  br i1 %cmp44, label %if.end47, label %cleanup, !dbg !8027

if.end47:                                         ; preds = %if.end40
  %call48 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #8, !dbg !8028
  call void @llvm.dbg.value(metadata i32 %call48, metadata !7940, metadata !DIExpression()), !dbg !7969
  switch i32 %call48, label %cleanup [
    i32 45, label %if.end64
    i32 47, label %if.end64
    i32 41, label %if.end64
    i32 44, label %if.end64
    i32 43, label %if.end64
  ], !dbg !8029

if.end64:                                         ; preds = %if.end47, %if.end47, %if.end47, %if.end47, %if.end47
  %17 = load %struct.data_reference*, %struct.data_reference** %data_ref_info, align 8, !dbg !8031
  %tobool66 = icmp eq %struct.data_reference* %17, null, !dbg !8031
  br i1 %tobool66, label %cleanup, label %if.end68, !dbg !8033

if.end68:                                         ; preds = %if.end64
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %2, i64 0, i32 1, !dbg !8034
  %18 = bitcast %union.tree_node** %ref to %struct.tree_common**, !dbg !8034
  %19 = load %struct.tree_common*, %struct.tree_common** %18, align 8, !dbg !8034
  %type69 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !8034
  %20 = load %union.tree_node*, %union.tree_node** %type69, align 8, !dbg !8034
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !7933, metadata !DIExpression()), !dbg !7969
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8035
  %bf.load71 = load i64, i64* %21, align 8, !dbg !8035
  %bf.cast7312 = and i64 %bf.load71, 65535, !dbg !8035
  %cmp74 = icmp eq i64 %bf.cast7312, 14, !dbg !8035
  br i1 %cmp74, label %cond.true76, label %cond.false78, !dbg !8035

cond.true76:                                      ; preds = %if.end68
  %call77 = tail call i32 @vector_type_mode(%union.tree_node* %3) #6, !dbg !8035
  br label %cond.end83, !dbg !8035

cond.false78:                                     ; preds = %if.end68
  %bf.load81 = load i32, i32* %precision, align 4, !dbg !8035
  %bf.lshr = lshr i32 %bf.load81, 16, !dbg !8035
  %bf.clear82 = and i32 %bf.lshr, 255, !dbg !8035
  br label %cond.end83, !dbg !8035

cond.end83:                                       ; preds = %cond.false78, %cond.true76
  %cond84 = phi i32 [ %call77, %cond.true76 ], [ %bf.clear82, %cond.false78 ], !dbg !8035
  call void @llvm.dbg.value(metadata i32 %cond84, metadata !7914, metadata !DIExpression()), !dbg !7969
  %idxprom = sext i32 %cond84 to i64, !dbg !8036
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom, i32 0, !dbg !8038
  %22 = load i32, i32* %insn_code, align 4, !dbg !8038
  %cmp85 = icmp eq i32 %22, 2956, !dbg !8039
  br i1 %cmp85, label %if.then87, label %if.end93, !dbg !8040

if.then87:                                        ; preds = %cond.end83
  %call88 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8041
  %tobool89 = icmp eq i8 %call88, 0, !dbg !8041
  br i1 %tobool89, label %cleanup, label %if.then90, !dbg !8044

if.then90:                                        ; preds = %if.then87
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8045
  %call91 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.84, i64 0, i64 0)) #6, !dbg !8046
  br label %cleanup, !dbg !8046

if.end93:                                         ; preds = %cond.end83
  %type95 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8047
  %24 = load %union.tree_node*, %union.tree_node** %type95, align 8, !dbg !8047
  %type97 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8049
  %25 = load %union.tree_node*, %union.tree_node** %type97, align 8, !dbg !8049
  %call98 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %24, %union.tree_node* %25) #6, !dbg !8050
  %tobool99 = icmp eq i8 %call98, 0, !dbg !8050
  br i1 %tobool99, label %if.then100, label %if.end106, !dbg !8051

if.then100:                                       ; preds = %if.end93
  %call101 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8052
  %tobool102 = icmp eq i8 %call101, 0, !dbg !8052
  br i1 %tobool102, label %cleanup, label %if.then103, !dbg !8055

if.then103:                                       ; preds = %if.then100
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8056
  %call104 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !8057
  br label %cleanup, !dbg !8057

if.end106:                                        ; preds = %if.end93
  %first_dr107 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 17, !dbg !8058
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr107, align 8, !dbg !8058
  %cmp108 = icmp eq %union.gimple_statement_d* %27, null, !dbg !8058
  br i1 %cmp108, label %if.end125, label %if.then110, !dbg !8060

if.then110:                                       ; preds = %if.end106
  call void @llvm.dbg.value(metadata i8 1, metadata !7931, metadata !DIExpression()), !dbg !7969
  %tobool111 = icmp eq i8 %nested_in_vect_loop.0, 0, !dbg !8061
  br i1 %tobool111, label %cond.end114, label %cond.true112, !dbg !8061

cond.true112:                                     ; preds = %if.then110
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3376, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8061
  br label %cond.end114, !dbg !8061

cond.end114:                                      ; preds = %if.then110, %cond.true112
  %call116 = tail call zeroext i8 @vect_strided_load_supported(%union.tree_node* %3) #6, !dbg !8063
  %tobool117 = icmp eq i8 %call116, 0, !dbg !8063
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !8065

land.lhs.true118:                                 ; preds = %cond.end114
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 25, !dbg !8066
  %28 = load i32, i32* %slp_type, align 4, !dbg !8066
  %cmp119 = icmp eq i32 %28, 1, !dbg !8066
  %or.cond2 = or i1 %cmp119, %cmp, !dbg !8067
  br i1 %or.cond2, label %if.end125, label %cleanup, !dbg !8067

if.end125:                                        ; preds = %cond.end114, %if.end106, %land.lhs.true118
  %strided_load.0 = phi i8 [ 0, %if.end106 ], [ 1, %land.lhs.true118 ], [ 1, %cond.end114 ], !dbg !7969
  call void @llvm.dbg.value(metadata i8 %strided_load.0, metadata !7931, metadata !DIExpression()), !dbg !7969
  %tobool126 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !8068
  br i1 %tobool126, label %if.then127, label %if.end129, !dbg !8070

if.then127:                                       ; preds = %if.end125
  %type128 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !8071
  store i32 1, i32* %type128, align 8, !dbg !8073
  tail call void @vect_model_load_cost(%struct._stmt_vec_info* %call, i32 %ncopies.0, %struct._slp_tree* null) #8, !dbg !8074
  br label %cleanup, !dbg !8075

if.end129:                                        ; preds = %if.end125
  %call130 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8076
  %tobool131 = icmp eq i8 %call130, 0, !dbg !8076
  br i1 %tobool131, label %if.end134, label %if.then132, !dbg !8078

if.then132:                                       ; preds = %if.end129
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8079
  %call133 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.86, i64 0, i64 0)) #6, !dbg !8080
  br label %if.end134, !dbg !8080

if.end134:                                        ; preds = %if.end129, %if.then132
  %tobool135 = icmp eq i8 %strided_load.0, 0, !dbg !8081
  br i1 %tobool135, label %if.end155, label %if.then136, !dbg !8083

if.then136:                                       ; preds = %if.end134
  %30 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr107, align 8, !dbg !8084
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %30, metadata !7932, metadata !DIExpression()), !dbg !7969
  %call138 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %30) #8, !dbg !8086
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call138, i64 0, i32 6, !dbg !8086
  %31 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !8086
  %tobool139 = icmp eq %union.gimple_statement_d* %31, null, !dbg !8086
  br i1 %tobool139, label %if.end142, label %if.then140, !dbg !8088

if.then140:                                       ; preds = %if.then136
  %vectorized_stmt141 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !8089
  %32 = bitcast %union.gimple_statement_d** %vectorized_stmt141 to i64*, !dbg !8089
  %33 = load i64, i64* %32, align 8, !dbg !8089
  %34 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !8091
  store i64 %33, i64* %34, align 8, !dbg !8091
  br label %cleanup, !dbg !8092

if.end142:                                        ; preds = %if.then136
  %call143 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %30) #8, !dbg !8093
  %data_ref_info144 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call143, i64 0, i32 7, !dbg !8093
  %35 = load %struct.data_reference*, %struct.data_reference** %data_ref_info144, align 8, !dbg !8093
  call void @llvm.dbg.value(metadata %struct.data_reference* %35, metadata !7911, metadata !DIExpression()), !dbg !7969
  %call145 = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %30) #8, !dbg !8094
  %size = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call145, i64 0, i32 19, !dbg !8094
  %36 = load i32, i32* %size, align 8, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %36, metadata !7924, metadata !DIExpression()), !dbg !7969
  br i1 %cmp, label %if.then147, label %if.end152, !dbg !8095

if.then147:                                       ; preds = %if.end142
  call void @llvm.dbg.value(metadata i8 0, metadata !7931, metadata !DIExpression()), !dbg !7969
  %vec_stmts_size = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 4, !dbg !8096
  %37 = load i32, i32* %vec_stmts_size, align 8, !dbg !8096
  call void @llvm.dbg.value(metadata i32 %37, metadata !7937, metadata !DIExpression()), !dbg !7969
  %load_permutation = getelementptr inbounds %struct._slp_instance, %struct._slp_instance* %slp_node_instance, i64 0, i32 4, !dbg !8099
  %38 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %load_permutation, align 8, !dbg !8099
  %tobool148 = icmp ne %struct.VEC_int_heap* %38, null, !dbg !8099
  %spec.select = zext i1 %tobool148 to i8, !dbg !8101
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7939, metadata !DIExpression()), !dbg !7969
  br label %if.end152, !dbg !8102

if.end152:                                        ; preds = %if.end142, %if.then147
  %strided_load.1 = phi i8 [ 0, %if.then147 ], [ %strided_load.0, %if.end142 ], !dbg !7969
  %vec_num.0 = phi i32 [ %37, %if.then147 ], [ %36, %if.end142 ], !dbg !8103
  %slp_perm.1 = phi i8 [ %spec.select, %if.then147 ], [ 0, %if.end142 ], !dbg !7969
  call void @llvm.dbg.value(metadata i8 %slp_perm.1, metadata !7939, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %vec_num.0, metadata !7937, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8 %strided_load.1, metadata !7931, metadata !DIExpression()), !dbg !7969
  %call153 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %vec_num.0) #8, !dbg !8104
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call153, metadata !7930, metadata !DIExpression()), !dbg !7969
  store %struct.VEC_tree_heap* %call153, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8105
  br label %if.end155, !dbg !8106

if.end155:                                        ; preds = %if.end134, %if.end152
  %group_size.0 = phi i32 [ %36, %if.end152 ], [ 1, %if.end134 ], !dbg !8107
  %first_dr.0 = phi %struct.data_reference* [ %35, %if.end152 ], [ %2, %if.end134 ], !dbg !8107
  %strided_load.2 = phi i8 [ %strided_load.1, %if.end152 ], [ 0, %if.end134 ], !dbg !7969
  %first_stmt.0 = phi %union.gimple_statement_d* [ %30, %if.end152 ], [ %stmt, %if.end134 ], !dbg !8107
  %vec_num.1 = phi i32 [ %vec_num.0, %if.end152 ], [ 1, %if.end134 ], !dbg !8107
  %slp_perm.2 = phi i8 [ %slp_perm.1, %if.end152 ], [ 0, %if.end134 ], !dbg !7969
  call void @llvm.dbg.value(metadata i8 %slp_perm.2, metadata !7939, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %vec_num.1, metadata !7937, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt.0, metadata !7932, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8 %strided_load.2, metadata !7931, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.data_reference* %first_dr.0, metadata !7911, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %group_size.0, metadata !7924, metadata !DIExpression()), !dbg !7969
  %call156 = tail call i32 @vect_supportable_dr_alignment(%struct.data_reference* %first_dr.0) #6, !dbg !8108
  call void @llvm.dbg.value(metadata i32 %call156, metadata !7917, metadata !DIExpression()), !dbg !7969
  %tobool157 = icmp eq i32 %call156, 0, !dbg !8109
  br i1 %tobool157, label %cond.true158, label %cond.end160, !dbg !8109

cond.true158:                                     ; preds = %if.end155
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3429, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8109
  br label %cond.end160, !dbg !8109

cond.end160:                                      ; preds = %if.end155, %cond.true158
  %tobool162 = icmp eq %struct.loop* %loop.0, null, !dbg !8110
  br i1 %tobool162, label %if.end198, label %land.lhs.true163, !dbg !8112

land.lhs.true163:                                 ; preds = %cond.end160
  %call164 = tail call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* nonnull %loop.0, %union.gimple_statement_d* %stmt) #8, !dbg !8113
  %tobool166 = icmp eq i8 %call164, 0, !dbg !8113
  br i1 %tobool166, label %if.end198, label %land.lhs.true167, !dbg !8114

land.lhs.true167:                                 ; preds = %land.lhs.true163
  %step = getelementptr inbounds %struct.data_reference, %struct.data_reference* %2, i64 0, i32 4, i32 3, !dbg !8115
  %39 = bitcast %union.tree_node** %step to %struct.tree_int_cst**, !dbg !8115
  %40 = load %struct.tree_int_cst*, %struct.tree_int_cst** %39, align 8, !dbg !8115
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %40, i64 0, i32 1, i32 0, !dbg !8115
  %41 = load i64, i64* %low, align 8, !dbg !8115
  %bf.load170 = load i64, i64* %21, align 8, !dbg !8116
  %bf.cast17214 = and i64 %bf.load170, 65535, !dbg !8116
  %cmp173 = icmp eq i64 %bf.cast17214, 14, !dbg !8116
  br i1 %cmp173, label %cond.true175, label %cond.false177, !dbg !8116

cond.true175:                                     ; preds = %land.lhs.true167
  %call176 = tail call i32 @vector_type_mode(%union.tree_node* %3) #6, !dbg !8116
  br label %cond.end183, !dbg !8116

cond.false177:                                    ; preds = %land.lhs.true167
  %bf.load180 = load i32, i32* %precision, align 4, !dbg !8116
  %bf.lshr181 = lshr i32 %bf.load180, 16, !dbg !8116
  %bf.clear182 = and i32 %bf.lshr181, 255, !dbg !8116
  br label %cond.end183, !dbg !8116

cond.end183:                                      ; preds = %cond.false177, %cond.true175
  %cond184 = phi i32 [ %call176, %cond.true175 ], [ %bf.clear182, %cond.false177 ], !dbg !8116
  %idxprom185 = zext i32 %cond184 to i64, !dbg !8116
  %arrayidx186 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom185, !dbg !8116
  %42 = load i8, i8* %arrayidx186, align 1, !dbg !8116
  %conv188 = zext i8 %42 to i64, !dbg !8116
  %rem = urem i64 %41, %conv188, !dbg !8117
  %cmp189 = icmp eq i64 %rem, 0, !dbg !8118
  br i1 %cmp189, label %if.end198, label %if.then191, !dbg !8119

if.then191:                                       ; preds = %cond.end183
  %cmp192 = icmp eq i32 %call156, 3, !dbg !8120
  br i1 %cmp192, label %cond.true194, label %if.end198, !dbg !8120

cond.true194:                                     ; preds = %if.then191
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3538, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8120
  br label %if.end198, !dbg !8120

if.end198:                                        ; preds = %if.then191, %cond.end183, %land.lhs.true163, %cond.end160, %cond.true194
  %compute_in_loop.0 = phi i1 [ false, %cond.end183 ], [ false, %land.lhs.true163 ], [ false, %cond.end160 ], [ true, %if.then191 ], [ true, %cond.true194 ]
  %43 = and i32 %call156, -2, !dbg !8122
  %switch = icmp ne i32 %43, 2, !dbg !8122
  %or.cond8 = or i1 %switch, %compute_in_loop.0, !dbg !8122
  br i1 %or.cond8, label %if.else218, label %if.then205, !dbg !8122

if.then205:                                       ; preds = %if.end198
  call void @llvm.dbg.value(metadata %union.tree_node** %realignment_token, metadata !7928, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.loop** %at_loop, metadata !7936, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  %call206 = call %union.tree_node* @vect_setup_realignment(%union.gimple_statement_d* %first_stmt.0, %struct.gimple_stmt_iterator* %gsi, %union.tree_node** nonnull %realignment_token, i32 %call156, %union.tree_node* null, %struct.loop** nonnull %at_loop) #6, !dbg !8124
  call void @llvm.dbg.value(metadata %union.tree_node* %call206, metadata !7925, metadata !DIExpression()), !dbg !7969
  %cmp207 = icmp eq i32 %call156, 3, !dbg !8126
  br i1 %cmp207, label %if.then209, label %if.end219, !dbg !8128

if.then209:                                       ; preds = %if.then205
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8129
  %44 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !8129
  %45 = load %union.gimple_statement_d*, %union.gimple_statement_d** %44, align 8, !dbg !8129
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %45, metadata !7929, metadata !DIExpression()), !dbg !7969
  %bf.load212 = load i32, i32* %precision, align 4, !dbg !8131
  %bf.clear213 = and i32 %bf.load212, 1023, !dbg !8131
  %sh_prom214 = zext i32 %bf.clear213 to i64, !dbg !8131
  %notmask13 = shl nsw i64 -1, %sh_prom214, !dbg !8131
  %sub = xor i64 %notmask13, -1, !dbg !8131
  %call216 = call %union.tree_node* @size_int_kind(i64 %sub, i32 0) #6, !dbg !8131
  call void @llvm.dbg.value(metadata %union.tree_node* %call216, metadata !7927, metadata !DIExpression()), !dbg !7969
  br label %if.end219, !dbg !8132

if.else218:                                       ; preds = %if.end198
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !7936, metadata !DIExpression()), !dbg !7969
  store %struct.loop* %loop.0, %struct.loop** %at_loop, align 8, !dbg !8133
  br label %if.end219

if.end219:                                        ; preds = %if.then205, %if.then209, %if.else218
  %msq.0 = phi %union.tree_node* [ null, %if.else218 ], [ %call206, %if.then209 ], [ %call206, %if.then205 ], !dbg !7969
  %offset.1 = phi %union.tree_node* [ null, %if.else218 ], [ %call216, %if.then209 ], [ null, %if.then205 ], !dbg !7969
  %phi.1 = phi %union.gimple_statement_d* [ null, %if.else218 ], [ %45, %if.then209 ], [ null, %if.then205 ], !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi.1, metadata !7929, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.1, metadata !7927, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.0, metadata !7925, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !7905, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 0, metadata !7923, metadata !DIExpression()), !dbg !7969
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8134
  %aux = getelementptr inbounds %struct.data_reference, %struct.data_reference* %first_dr.0, i64 0, i32 2, !dbg !8135
  %47 = bitcast i8** %aux to i64*, !dbg !8135
  %switch10 = icmp eq i32 %43, 2, !dbg !8136
  %cmp309 = icmp eq i32 %call156, 3, !dbg !8137
  %tobool312 = icmp eq %union.gimple_statement_d* %phi.1, null, !dbg !8139
  %sub317 = add nsw i32 %vec_num.1, -1, !dbg !8141
  %sub321 = add nsw i32 %ncopies.0, -1, !dbg !8141
  %tobool334 = icmp eq i8 %strided_load.2, 0, !dbg !8143
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8144
  %49 = or i8 %strided_load.2, %slp_perm.2, !dbg !8145
  %50 = icmp eq i8 %49, 0, !dbg !8145
  %tobool382 = xor i1 %cmp, true, !dbg !8147
  %tobool384 = icmp ne i8 %slp_perm.2, 0, !dbg !8147
  %or.cond6 = or i1 %tobool384, %tobool382, !dbg !8147
  %vec_stmts = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 3, !dbg !8147
  %tobool403 = icmp eq i8 %slp_perm.2, 0, !dbg !8149
  %vectorized_stmt416 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !8151
  %51 = bitcast %union.gimple_statement_d** %vectorized_stmt416 to i64*, !dbg !8151
  %52 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !8151
  br label %for.cond, !dbg !8155

for.cond:                                         ; preds = %for.inc428, %if.end219
  %j.0 = phi i32 [ 0, %if.end219 ], [ %inc429, %for.inc428 ], !dbg !8156
  %dataref_ptr.0 = phi %union.tree_node* [ null, %if.end219 ], [ %dataref_ptr.2.lcssa, %for.inc428 ], !dbg !7969
  %msq.1 = phi %union.tree_node* [ %msq.0, %if.end219 ], [ %msq.2.lcssa, %for.inc428 ], !dbg !8157
  %new_stmt.0 = phi %union.gimple_statement_d* [ null, %if.end219 ], [ %new_stmt.1.lcssa, %for.inc428 ], !dbg !8158
  %prev_stmt_info.0 = phi %struct._stmt_vec_info* [ null, %if.end219 ], [ %prev_stmt_info.3, %for.inc428 ], !dbg !8159
  %data_ref.0 = phi %union.tree_node* [ null, %if.end219 ], [ %data_ref.1.lcssa, %for.inc428 ], !dbg !8160
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.0, metadata !7903, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !7905, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !7915, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.1, metadata !7925, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.0, metadata !7918, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7923, metadata !DIExpression()), !dbg !7969
  %cmp220 = icmp slt i32 %j.0, %ncopies.0, !dbg !8161
  br i1 %cmp220, label %for.body, label %for.end430, !dbg !8162

for.body:                                         ; preds = %for.cond
  %cmp222 = icmp eq i32 %j.0, 0, !dbg !8163
  br i1 %cmp222, label %if.then224, label %if.else226, !dbg !8165

if.then224:                                       ; preds = %for.body
  %53 = load %struct.loop*, %struct.loop** %at_loop, align 8, !dbg !8166
  call void @llvm.dbg.value(metadata %struct.loop* %53, metadata !7936, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node** %dummy, metadata !7916, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ptr_incr, metadata !7919, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %inv_p, metadata !7934, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  %call225 = call %union.tree_node* @vect_create_data_ref_ptr(%union.gimple_statement_d* %first_stmt.0, %struct.loop* %53, %union.tree_node* %offset.1, %union.tree_node** nonnull %dummy, %union.gimple_statement_d** nonnull %ptr_incr, i8 zeroext 0, i8* nonnull %inv_p) #6, !dbg !8167
  call void @llvm.dbg.value(metadata %union.tree_node* %call225, metadata !7918, metadata !DIExpression()), !dbg !7969
  br label %if.end228, !dbg !8168

if.else226:                                       ; preds = %for.body
  %54 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ptr_incr, align 8, !dbg !8169
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %54, metadata !7919, metadata !DIExpression()), !dbg !7969
  %call227 = call %union.tree_node* @bump_vector_ptr(%union.tree_node* %dataref_ptr.0, %union.gimple_statement_d* %54, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt, %union.tree_node* null) #6, !dbg !8170
  call void @llvm.dbg.value(metadata %union.tree_node* %call227, metadata !7918, metadata !DIExpression()), !dbg !7969
  br label %if.end228

if.end228:                                        ; preds = %if.else226, %if.then224
  %dataref_ptr.1 = phi %union.tree_node* [ %call225, %if.then224 ], [ %call227, %if.else226 ], !dbg !8171
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.1, metadata !7918, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 0, metadata !7922, metadata !DIExpression()), !dbg !7969
  %cmp322 = icmp eq i32 %j.0, %sub321, !dbg !8141
  br label %for.cond229, !dbg !8172

for.cond229:                                      ; preds = %for.inc395, %if.end228
  %i.0 = phi i32 [ 0, %if.end228 ], [ %inc, %for.inc395 ], !dbg !8173
  %dataref_ptr.2 = phi %union.tree_node* [ %dataref_ptr.1, %if.end228 ], [ %dataref_ptr.3, %for.inc395 ], !dbg !8174
  %msq.2 = phi %union.tree_node* [ %msq.1, %if.end228 ], [ %msq.5, %for.inc395 ], !dbg !7969
  %new_stmt.1 = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end228 ], [ %new_stmt.4, %for.inc395 ], !dbg !7969
  %data_ref.1 = phi %union.tree_node* [ %data_ref.0, %if.end228 ], [ %data_ref.2, %for.inc395 ], !dbg !8160
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.1, metadata !7903, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1, metadata !7915, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.2, metadata !7925, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2, metadata !7918, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7922, metadata !DIExpression()), !dbg !7969
  %cmp230 = icmp slt i32 %i.0, %vec_num.1, !dbg !8175
  br i1 %cmp230, label %for.body232, label %for.end396, !dbg !8176

for.body232:                                      ; preds = %for.cond229
  %cmp233 = icmp eq i32 %i.0, 0, !dbg !8177
  br i1 %cmp233, label %if.end237, label %if.then235, !dbg !8179

if.then235:                                       ; preds = %for.body232
  %55 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ptr_incr, align 8, !dbg !8180
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %55, metadata !7919, metadata !DIExpression()), !dbg !7969
  %call236 = call %union.tree_node* @bump_vector_ptr(%union.tree_node* %dataref_ptr.2, %union.gimple_statement_d* %55, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt, %union.tree_node* null) #6, !dbg !8181
  call void @llvm.dbg.value(metadata %union.tree_node* %call236, metadata !7918, metadata !DIExpression()), !dbg !7969
  br label %if.end237, !dbg !8182

if.end237:                                        ; preds = %for.body232, %if.then235
  %dataref_ptr.3 = phi %union.tree_node* [ %call236, %if.then235 ], [ %dataref_ptr.2, %for.body232 ], !dbg !8174
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.3, metadata !7918, metadata !DIExpression()), !dbg !7969
  switch i32 %call156, label %sw.default [
    i32 4, label %sw.bb
    i32 1, label %sw.bb245
    i32 2, label %sw.bb258
    i32 3, label %sw.bb281
  ], !dbg !8183

sw.bb:                                            ; preds = %if.end237
  %call238 = call fastcc zeroext i8 @aligned_access_p(%struct.data_reference* %first_dr.0) #8, !dbg !8184
  %tobool239 = icmp eq i8 %call238, 0, !dbg !8184
  br i1 %tobool239, label %cond.true240, label %cond.end242, !dbg !8184

cond.true240:                                     ; preds = %sw.bb
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3581, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8184
  br label %cond.end242, !dbg !8184

cond.end242:                                      ; preds = %sw.bb, %cond.true240
  %call244 = call %union.tree_node* @build_fold_indirect_ref_loc(i32 0, %union.tree_node* %dataref_ptr.3) #6, !dbg !8185
  call void @llvm.dbg.value(metadata %union.tree_node* %call244, metadata !7903, metadata !DIExpression()), !dbg !7969
  br label %sw.epilog, !dbg !8186

sw.bb245:                                         ; preds = %if.end237
  %56 = load i64, i64* %47, align 8, !dbg !8187
  %conv246 = trunc i64 %56 to i32, !dbg !8187
  call void @llvm.dbg.value(metadata i32 %conv246, metadata !7943, metadata !DIExpression()), !dbg !8135
  %cmp247 = icmp eq i32 %conv246, -1, !dbg !8188
  br i1 %cmp247, label %cond.true249, label %cond.false250, !dbg !8189

cond.true249:                                     ; preds = %sw.bb245
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !8190
  br label %cond.end253, !dbg !8189

cond.false250:                                    ; preds = %sw.bb245
  %sext = shl i64 %56, 32, !dbg !8191
  %conv251 = ashr exact i64 %sext, 32, !dbg !8191
  %call252 = call %union.tree_node* @size_int_kind(i64 %conv251, i32 0) #6, !dbg !8191
  br label %cond.end253, !dbg !8189

cond.end253:                                      ; preds = %cond.false250, %cond.true249
  %cond254 = phi %union.tree_node* [ %57, %cond.true249 ], [ %call252, %cond.false250 ], !dbg !8189
  call void @llvm.dbg.value(metadata %union.tree_node* %cond254, metadata !7952, metadata !DIExpression()), !dbg !8135
  %call255 = call %union.tree_node* @size_int_kind(i64 8, i32 0) #6, !dbg !8192
  %call256 = call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %cond254, %union.tree_node* %call255) #6, !dbg !8192
  call void @llvm.dbg.value(metadata %union.tree_node* %call256, metadata !7952, metadata !DIExpression()), !dbg !8135
  %call257 = call %union.tree_node* @build2_stat(i32 49, %union.tree_node* %3, %union.tree_node* %dataref_ptr.3, %union.tree_node* %call256) #6, !dbg !8193
  call void @llvm.dbg.value(metadata %union.tree_node* %call257, metadata !7903, metadata !DIExpression()), !dbg !7969
  br label %sw.epilog

sw.bb258:                                         ; preds = %if.end237
  %bf.load261 = load i32, i32* %precision, align 4, !dbg !8194
  %bf.clear262 = and i32 %bf.load261, 1023, !dbg !8194
  %sh_prom263 = zext i32 %bf.clear262 to i64, !dbg !8194
  %notmask = shl nsw i64 -1, %sh_prom263, !dbg !8194
  %sub265 = xor i64 %notmask, -1, !dbg !8194
  %call266 = call %union.tree_node* @size_int_kind(i64 %sub265, i32 0) #6, !dbg !8194
  call void @llvm.dbg.value(metadata %union.tree_node* %call266, metadata !7956, metadata !DIExpression()), !dbg !8134
  br i1 %compute_in_loop.0, label %if.then268, label %if.end270, !dbg !8195

if.then268:                                       ; preds = %sw.bb258
  call void @llvm.dbg.value(metadata %union.tree_node** %realignment_token, metadata !7928, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  %call269 = call %union.tree_node* @vect_setup_realignment(%union.gimple_statement_d* %first_stmt.0, %struct.gimple_stmt_iterator* %gsi, %union.tree_node** nonnull %realignment_token, i32 2, %union.tree_node* %dataref_ptr.3, %struct.loop** null) #6, !dbg !8196
  call void @llvm.dbg.value(metadata %union.tree_node* %call269, metadata !7925, metadata !DIExpression()), !dbg !7969
  br label %if.end270, !dbg !8198

if.end270:                                        ; preds = %if.then268, %sw.bb258
  %call271 = call %union.tree_node* @build1_stat(i32 48, %union.tree_node* %3, %union.tree_node* %dataref_ptr.3) #6, !dbg !8199
  call void @llvm.dbg.value(metadata %union.tree_node* %call271, metadata !7903, metadata !DIExpression()), !dbg !7969
  %call272 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call41, %union.tree_node* %3) #6, !dbg !8200
  call void @llvm.dbg.value(metadata %union.tree_node* %call272, metadata !7902, metadata !DIExpression()), !dbg !7969
  %call273 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call272, %union.tree_node* %call271) #6, !dbg !8201
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call273, metadata !7915, metadata !DIExpression()), !dbg !7969
  %call274 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call272, %union.gimple_statement_d* %call273) #8, !dbg !8202
  call void @llvm.dbg.value(metadata %union.tree_node* %call274, metadata !7913, metadata !DIExpression()), !dbg !7969
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call273, %union.tree_node* %call274) #8, !dbg !8203
  %call275 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !8204
  call fastcc void @gimple_set_vdef(%union.gimple_statement_d* %call273, %union.tree_node* %call275) #8, !dbg !8205
  %call276 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !8206
  call fastcc void @gimple_set_vuse(%union.gimple_statement_d* %call273, %union.tree_node* %call276) #8, !dbg !8207
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call273, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8208
  call void @llvm.dbg.value(metadata %union.tree_node* %call274, metadata !7925, metadata !DIExpression()), !dbg !7969
  %58 = load %union.tree_node*, %union.tree_node** %46, align 8, !dbg !8209
  %call278 = call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %call266, %union.tree_node* %58) #6, !dbg !8209
  call void @llvm.dbg.value(metadata %union.tree_node* %call278, metadata !7955, metadata !DIExpression()), !dbg !8134
  %call279 = call %union.tree_node* @bump_vector_ptr(%union.tree_node* %dataref_ptr.3, %union.gimple_statement_d* null, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt, %union.tree_node* %call278) #6, !dbg !8210
  call void @llvm.dbg.value(metadata %union.tree_node* %call279, metadata !7953, metadata !DIExpression()), !dbg !8134
  %call280 = call %union.tree_node* @build1_stat(i32 48, %union.tree_node* %3, %union.tree_node* %call279) #6, !dbg !8211
  call void @llvm.dbg.value(metadata %union.tree_node* %call280, metadata !7903, metadata !DIExpression()), !dbg !7969
  br label %sw.epilog

sw.bb281:                                         ; preds = %if.end237
  %call282 = call %union.tree_node* @build1_stat(i32 48, %union.tree_node* %3, %union.tree_node* %dataref_ptr.3) #6, !dbg !8212
  call void @llvm.dbg.value(metadata %union.tree_node* %call282, metadata !7903, metadata !DIExpression()), !dbg !7969
  br label %sw.epilog, !dbg !8213

sw.default:                                       ; preds = %if.end237
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3625, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8214
  br label %sw.epilog, !dbg !8215

sw.epilog:                                        ; preds = %sw.default, %sw.bb281, %if.end270, %cond.end253, %cond.end242
  %msq.3 = phi %union.tree_node* [ %msq.2, %sw.default ], [ %msq.2, %sw.bb281 ], [ %call274, %if.end270 ], [ %msq.2, %cond.end253 ], [ %msq.2, %cond.end242 ], !dbg !7969
  %data_ref.2 = phi %union.tree_node* [ %data_ref.1, %sw.default ], [ %call282, %sw.bb281 ], [ %call280, %if.end270 ], [ %call257, %cond.end253 ], [ %call244, %cond.end242 ], !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.2, metadata !7903, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.3, metadata !7925, metadata !DIExpression()), !dbg !7969
  %call283 = call i32 @get_alias_set(%union.tree_node* %data_ref.2) #6, !dbg !8216
  %call284 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !8216
  %call285 = call i32 @get_alias_set(%union.tree_node* %call284) #6, !dbg !8216
  %call286 = call i32 @alias_sets_conflict_p(i32 %call283, i32 %call285) #6, !dbg !8216
  %tobool287 = icmp eq i32 %call286, 0, !dbg !8216
  br i1 %tobool287, label %cond.true288, label %cond.end290, !dbg !8216

cond.true288:                                     ; preds = %sw.epilog
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3630, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8216
  br label %cond.end290, !dbg !8216

cond.end290:                                      ; preds = %sw.epilog, %cond.true288
  %call292 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call41, %union.tree_node* %3) #6, !dbg !8217
  call void @llvm.dbg.value(metadata %union.tree_node* %call292, metadata !7902, metadata !DIExpression()), !dbg !7969
  %call293 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call292, %union.tree_node* %data_ref.2) #6, !dbg !8218
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call293, metadata !7915, metadata !DIExpression()), !dbg !7969
  %call294 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call292, %union.gimple_statement_d* %call293) #8, !dbg !8219
  call void @llvm.dbg.value(metadata %union.tree_node* %call294, metadata !7913, metadata !DIExpression()), !dbg !7969
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call293, %union.tree_node* %call294) #8, !dbg !8220
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call293, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8221
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call293) #6, !dbg !8222
  br i1 %switch10, label %if.then300, label %if.end328, !dbg !8223

if.then300:                                       ; preds = %cond.end290
  %call301 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call293) #8, !dbg !8224
  call void @llvm.dbg.value(metadata %union.tree_node* %call301, metadata !7926, metadata !DIExpression()), !dbg !7969
  %59 = load %union.tree_node*, %union.tree_node** %realignment_token, align 8, !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !7928, metadata !DIExpression()), !dbg !7969
  %tobool302 = icmp eq %union.tree_node* %59, null, !dbg !8225
  br i1 %tobool302, label %if.then303, label %if.end304, !dbg !8227

if.then303:                                       ; preds = %if.then300
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.3, metadata !7928, metadata !DIExpression()), !dbg !7969
  store %union.tree_node* %dataref_ptr.3, %union.tree_node** %realignment_token, align 8, !dbg !8228
  br label %if.end304, !dbg !8229

if.end304:                                        ; preds = %if.then300, %if.then303
  %call305 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call41, %union.tree_node* %3) #6, !dbg !8230
  call void @llvm.dbg.value(metadata %union.tree_node* %call305, metadata !7902, metadata !DIExpression()), !dbg !7969
  %60 = load %union.tree_node*, %union.tree_node** %realignment_token, align 8, !dbg !8231
  call void @llvm.dbg.value(metadata %union.tree_node* %60, metadata !7928, metadata !DIExpression()), !dbg !7969
  %call306 = call %union.tree_node* @build3_stat(i32 151, %union.tree_node* %3, %union.tree_node* %msq.3, %union.tree_node* %call301, %union.tree_node* %60) #6, !dbg !8231
  call void @llvm.dbg.value(metadata %union.tree_node* %call306, metadata !7957, metadata !DIExpression()), !dbg !8232
  %call307 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call305, %union.tree_node* %call306) #6, !dbg !8233
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call307, metadata !7915, metadata !DIExpression()), !dbg !7969
  %call308 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call305, %union.gimple_statement_d* %call307) #8, !dbg !8234
  call void @llvm.dbg.value(metadata %union.tree_node* %call308, metadata !7913, metadata !DIExpression()), !dbg !7969
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call307, %union.tree_node* %call308) #8, !dbg !8235
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call307, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8236
  br i1 %cmp309, label %if.then311, label %if.end328, !dbg !8237

if.then311:                                       ; preds = %if.end304
  br i1 %tobool312, label %cond.true313, label %cond.end315, !dbg !8238

cond.true313:                                     ; preds = %if.then311
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3658, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8238
  br label %cond.end315, !dbg !8238

cond.end315:                                      ; preds = %if.then311, %cond.true313
  %cmp318 = icmp eq i32 %i.0, %sub317, !dbg !8239
  %or.cond3 = and i1 %cmp318, %cmp322, !dbg !8240
  br i1 %or.cond3, label %if.then324, label %if.end328, !dbg !8240

if.then324:                                       ; preds = %cond.end315
  %call325 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %1) #6, !dbg !8241
  call void @add_phi_arg(%union.gimple_statement_d* %phi.1, %union.tree_node* %call301, %struct.edge_def* %call325, i32 0) #6, !dbg !8242
  br label %if.end328, !dbg !8242

if.end328:                                        ; preds = %cond.end290, %if.end304, %if.then324, %cond.end315
  %msq.5 = phi %union.tree_node* [ %msq.3, %cond.end290 ], [ %msq.3, %if.end304 ], [ %call301, %if.then324 ], [ %call301, %cond.end315 ], !dbg !7969
  %new_stmt.2 = phi %union.gimple_statement_d* [ %call293, %cond.end290 ], [ %call307, %if.end304 ], [ %call307, %if.then324 ], [ %call307, %cond.end315 ], !dbg !8243
  %new_temp.0 = phi %union.tree_node* [ %call294, %cond.end290 ], [ %call308, %if.end304 ], [ %call308, %if.then324 ], [ %call308, %cond.end315 ], !dbg !8243
  call void @llvm.dbg.value(metadata %union.tree_node* %new_temp.0, metadata !7913, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.2, metadata !7915, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.5, metadata !7925, metadata !DIExpression()), !dbg !7969
  %61 = load i8, i8* %inv_p, align 1, !dbg !8244
  call void @llvm.dbg.value(metadata i8 %61, metadata !7934, metadata !DIExpression()), !dbg !7969
  %tobool330 = icmp eq i8 %61, 0, !dbg !8244
  %or.cond4 = or i1 %tobool330, %tobool30, !dbg !8245
  br i1 %or.cond4, label %if.end366, label %if.then333, !dbg !8245

if.then333:                                       ; preds = %if.end328
  br i1 %tobool334, label %cond.end337, label %cond.true335, !dbg !8246

cond.true335:                                     ; preds = %if.then333
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3669, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8246
  br label %cond.end337, !dbg !8246

cond.end337:                                      ; preds = %if.then333, %cond.true335
  %call339 = call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* %loop.0, %union.gimple_statement_d* %stmt) #8, !dbg !8247
  %tobool340 = icmp eq i8 %call339, 0, !dbg !8247
  br i1 %tobool340, label %cond.true341, label %cond.end343, !dbg !8247

cond.true341:                                     ; preds = %cond.end337
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3670, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8247
  br label %cond.end343, !dbg !8247

cond.end343:                                      ; preds = %cond.end337, %cond.true341
  br i1 %cmp222, label %if.then347, label %if.else364, !dbg !8248

if.then347:                                       ; preds = %cond.end343
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7965, metadata !DIExpression()), !dbg !8144
  %62 = load %union.tree_node*, %union.tree_node** %48, align 8, !dbg !8249
  call void @llvm.dbg.value(metadata %union.tree_node* %62, metadata !7968, metadata !DIExpression()), !dbg !8144
  %63 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 19), align 8, !dbg !8250
  call void @llvm.dbg.value(metadata %union.tree_node* %63, metadata !7967, metadata !DIExpression()), !dbg !8144
  %call350 = call %union.tree_node* @build3_stat(i32 42, %union.tree_node* %20, %union.tree_node* %new_temp.0, %union.tree_node* %62, %union.tree_node* %63) #6, !dbg !8251
  call void @llvm.dbg.value(metadata %union.tree_node* %call350, metadata !7966, metadata !DIExpression()), !dbg !8144
  %call351 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call41, %union.tree_node* null) #6, !dbg !8252
  call void @llvm.dbg.value(metadata %union.tree_node* %call351, metadata !7902, metadata !DIExpression()), !dbg !7969
  %call352 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call351, %union.tree_node* %call350) #6, !dbg !8253
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call352, metadata !7915, metadata !DIExpression()), !dbg !7969
  %call353 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call351, %union.gimple_statement_d* %call352) #8, !dbg !8254
  call void @llvm.dbg.value(metadata %union.tree_node* %call353, metadata !7913, metadata !DIExpression()), !dbg !7969
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call352, %union.tree_node* %call353) #8, !dbg !8255
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call352, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7960, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8144
  br label %for.cond355, !dbg !8257

for.cond355:                                      ; preds = %for.body358, %if.then347
  %k.0.in = phi i32 [ %conv, %if.then347 ], [ %k.0, %for.body358 ]
  %t.0 = phi %union.tree_node* [ null, %if.then347 ], [ %call359, %for.body358 ], !dbg !8144
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !7965, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.value(metadata i32 %k.0.in, metadata !7960, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8144
  %cmp356 = icmp sgt i32 %k.0.in, 0, !dbg !8259
  br i1 %cmp356, label %for.body358, label %for.end, !dbg !8261

for.body358:                                      ; preds = %for.cond355
  %k.0 = add nsw i32 %k.0.in, -1, !dbg !8262
  call void @llvm.dbg.value(metadata i32 %k.0, metadata !7960, metadata !DIExpression()), !dbg !8144
  %call359 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call353, %union.tree_node* %t.0) #6, !dbg !8263
  call void @llvm.dbg.value(metadata %union.tree_node* %call359, metadata !7965, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.value(metadata i32 %k.0, metadata !7960, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8144
  br label %for.cond355, !dbg !8264, !llvm.loop !8265

for.end:                                          ; preds = %for.cond355
  %t.0.lcssa = phi %union.tree_node* [ %t.0, %for.cond355 ], !dbg !8144
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !7965, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !7965, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0.lcssa, metadata !7965, metadata !DIExpression()), !dbg !8144
  %call360 = call %union.tree_node* @build_constructor_from_list(%union.tree_node* %3, %union.tree_node* %t.0.lcssa) #6, !dbg !8267
  call void @llvm.dbg.value(metadata %union.tree_node* %call360, metadata !7966, metadata !DIExpression()), !dbg !8144
  %call361 = call %union.tree_node* @vect_init_vector(%union.gimple_statement_d* %stmt, %union.tree_node* %call360, %union.tree_node* %3, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8268
  call void @llvm.dbg.value(metadata %union.tree_node* %call361, metadata !7913, metadata !DIExpression()), !dbg !7969
  %def_stmt363 = getelementptr inbounds %union.tree_node, %union.tree_node* %call361, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8269
  %64 = bitcast %union.tree_node** %def_stmt363 to %union.gimple_statement_d**, !dbg !8269
  %65 = load %union.gimple_statement_d*, %union.gimple_statement_d** %64, align 8, !dbg !8269
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %65, metadata !7915, metadata !DIExpression()), !dbg !7969
  br label %if.end366, !dbg !8270

if.else364:                                       ; preds = %cond.end343
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3696, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8271
  br label %if.end366

if.end366:                                        ; preds = %for.end, %if.else364, %if.end328
  %new_stmt.4 = phi %union.gimple_statement_d* [ %new_stmt.2, %if.end328 ], [ %65, %for.end ], [ %new_stmt.2, %if.else364 ], !dbg !8243
  %new_temp.2 = phi %union.tree_node* [ %new_temp.0, %if.end328 ], [ %call361, %for.end ], [ %new_temp.0, %if.else364 ], !dbg !8243
  call void @llvm.dbg.value(metadata %union.tree_node* %new_temp.2, metadata !7913, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.4, metadata !7915, metadata !DIExpression()), !dbg !7969
  br i1 %50, label %if.end380, label %if.then372, !dbg !8272

if.then372:                                       ; preds = %if.end366
  %66 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8273
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %66, metadata !7930, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %66, metadata !7930, metadata !DIExpression()), !dbg !7969
  %base375 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %66, i64 0, i32 0, !dbg !8273
  %call379 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base375, %union.tree_node* %new_temp.2) #8, !dbg !8273
  br label %if.end380, !dbg !8273

if.end380:                                        ; preds = %if.end366, %if.then372
  br i1 %or.cond6, label %for.inc395, label %if.then385, !dbg !8274

if.then385:                                       ; preds = %if.end380
  %67 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !8275
  %tobool386 = icmp eq %struct.VEC_gimple_heap* %67, null, !dbg !8275
  br i1 %tobool386, label %cond.end391, label %cond.true387, !dbg !8275

cond.true387:                                     ; preds = %if.then385
  %base389 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %67, i64 0, i32 0, !dbg !8275
  br label %cond.end391, !dbg !8275

cond.end391:                                      ; preds = %if.then385, %cond.true387
  %cond392 = phi %struct.VEC_gimple_base* [ %base389, %cond.true387 ], [ null, %if.then385 ], !dbg !8275
  %call393 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond392, %union.gimple_statement_d* %new_stmt.4) #8, !dbg !8275
  br label %for.inc395, !dbg !8275

for.inc395:                                       ; preds = %cond.end391, %if.end380
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8276
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7922, metadata !DIExpression()), !dbg !7969
  br label %for.cond229, !dbg !8277, !llvm.loop !8278

for.end396:                                       ; preds = %for.cond229
  %dataref_ptr.2.lcssa = phi %union.tree_node* [ %dataref_ptr.2, %for.cond229 ], !dbg !8174
  %msq.2.lcssa = phi %union.tree_node* [ %msq.2, %for.cond229 ], !dbg !7969
  %new_stmt.1.lcssa = phi %union.gimple_statement_d* [ %new_stmt.1, %for.cond229 ], !dbg !7969
  %data_ref.1.lcssa = phi %union.tree_node* [ %data_ref.1, %for.cond229 ], !dbg !8160
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2.lcssa, metadata !7918, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.2.lcssa, metadata !7925, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa, metadata !7915, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.1.lcssa, metadata !7903, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2.lcssa, metadata !7918, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.2.lcssa, metadata !7925, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa, metadata !7915, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.1.lcssa, metadata !7903, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2.lcssa, metadata !7918, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %msq.2.lcssa, metadata !7925, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1.lcssa, metadata !7915, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.1.lcssa, metadata !7903, metadata !DIExpression()), !dbg !7969
  br i1 %or.cond6, label %if.end402, label %for.inc428, !dbg !8280

if.end402:                                        ; preds = %for.end396
  br i1 %tobool403, label %if.else409, label %if.then404, !dbg !8282

if.then404:                                       ; preds = %if.end402
  %68 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8283
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %68, metadata !7930, metadata !DIExpression()), !dbg !7969
  %call405 = call zeroext i8 @vect_transform_slp_perm_load(%union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %68, %struct.gimple_stmt_iterator* %gsi, i32 %vf.0, %struct._slp_instance* %slp_node_instance, i8 zeroext 0) #6, !dbg !8286
  %tobool406 = icmp eq i8 %call405, 0, !dbg !8286
  br i1 %tobool406, label %if.then407, label %for.inc428, !dbg !8287

if.then407:                                       ; preds = %if.then404
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %dr_chain, metadata !7930, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %dr_chain) #8, !dbg !8288
  br label %cleanup, !dbg !8290

if.else409:                                       ; preds = %if.end402
  br i1 %tobool334, label %if.else418, label %if.then411, !dbg !8291

if.then411:                                       ; preds = %if.else409
  %69 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8292
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %69, metadata !7930, metadata !DIExpression()), !dbg !7969
  %call412 = call zeroext i8 @vect_transform_strided_load(%union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %69, i32 %group_size.0, %struct.gimple_stmt_iterator* %gsi) #6, !dbg !8294
  %tobool413 = icmp eq i8 %call412, 0, !dbg !8294
  br i1 %tobool413, label %cleanup.loopexit, label %if.end415, !dbg !8295

if.end415:                                        ; preds = %if.then411
  %70 = load i64, i64* %51, align 8, !dbg !8296
  store i64 %70, i64* %52, align 8, !dbg !8297
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %dr_chain, metadata !7930, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %dr_chain) #8, !dbg !8298
  %call417 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %group_size.0) #8, !dbg !8299
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call417, metadata !7930, metadata !DIExpression()), !dbg !7969
  store %struct.VEC_tree_heap* %call417, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8300
  br label %for.inc428, !dbg !8301

if.else418:                                       ; preds = %if.else409
  br i1 %cmp222, label %if.then421, label %if.else423, !dbg !8302

if.then421:                                       ; preds = %if.else418
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !8304
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %vectorized_stmt416, align 8, !dbg !8306
  br label %if.end424, !dbg !8307

if.else423:                                       ; preds = %if.else418
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.0, i64 0, i32 14, !dbg !8308
  store %union.gimple_statement_d* %new_stmt.1.lcssa, %union.gimple_statement_d** %related_stmt, align 8, !dbg !8309
  br label %if.end424

if.end424:                                        ; preds = %if.else423, %if.then421
  %call425 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %new_stmt.1.lcssa) #8, !dbg !8310
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call425, metadata !7905, metadata !DIExpression()), !dbg !7969
  br label %for.inc428

for.inc428:                                       ; preds = %if.then404, %if.end424, %if.end415, %for.end396
  %prev_stmt_info.3 = phi %struct._stmt_vec_info* [ %prev_stmt_info.0, %for.end396 ], [ %prev_stmt_info.0, %if.then404 ], [ %prev_stmt_info.0, %if.end415 ], [ %call425, %if.end424 ], !dbg !8159
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.3, metadata !7905, metadata !DIExpression()), !dbg !7969
  %inc429 = add nuw nsw i32 %j.0, 1, !dbg !8311
  call void @llvm.dbg.value(metadata i32 %inc429, metadata !7923, metadata !DIExpression()), !dbg !7969
  br label %for.cond, !dbg !8312, !llvm.loop !8313

for.end430:                                       ; preds = %for.cond
  %71 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8315
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %71, metadata !7930, metadata !DIExpression()), !dbg !7969
  %tobool431 = icmp eq %struct.VEC_tree_heap* %71, null, !dbg !8315
  br i1 %tobool431, label %cleanup, label %if.then432, !dbg !8317

if.then432:                                       ; preds = %for.end430
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %dr_chain, metadata !7930, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %dr_chain) #8, !dbg !8318
  br label %cleanup, !dbg !8318

cleanup.loopexit:                                 ; preds = %if.then411
  br label %cleanup, !dbg !8319

cleanup:                                          ; preds = %cleanup.loopexit, %if.then20, %if.then87, %for.end430, %if.then100, %if.end64, %if.end40, %if.end36, %if.end32, %if.then432, %land.lhs.true118, %if.then103, %if.then90, %if.end47, %if.end26, %if.then23, %if.then407, %if.then140, %if.then127
  %retval.0 = phi i8 [ 1, %if.then140 ], [ 0, %if.then407 ], [ 1, %if.then127 ], [ 0, %if.then23 ], [ 0, %if.then20 ], [ 0, %if.end26 ], [ 0, %if.end32 ], [ 0, %if.end36 ], [ 0, %if.end40 ], [ 0, %if.end47 ], [ 0, %if.end64 ], [ 0, %if.then90 ], [ 0, %if.then87 ], [ 0, %if.then103 ], [ 0, %if.then100 ], [ 0, %land.lhs.true118 ], [ 1, %if.then432 ], [ 1, %for.end430 ], [ 0, %cleanup.loopexit ], !dbg !7969
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !8319
  call void @llvm.dbg.value(metadata i8* %inv_p, metadata !7934, metadata !DIExpression(DW_OP_deref)), !dbg !7969
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %inv_p) #7, !dbg !8319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !8319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !8319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !8319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8319
  ret i8 %retval.0, !dbg !8319
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_call(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt) unnamed_addr #5 !dbg !3868 {
entry:
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i64, align 8
  %tmpcast = bitcast i64* %dt to [2 x i32]*
  %vargs = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3872, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3873, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !3874, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3879, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3880, metadata !DIExpression()), !dbg !8320
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !8321
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !3881, metadata !DIExpression()), !dbg !8320
  %loop_vinfo1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !8322
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo1, align 8, !dbg !8322
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !3887, metadata !DIExpression()), !dbg !8320
  %1 = bitcast %union.tree_node** %def to i8*, !dbg !8323
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !8323
  %2 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !8324
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !8324
  %3 = bitcast i64* %dt to i8*, !dbg !8325
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !8325
  call void @llvm.dbg.declare(metadata [2 x i32]* %tmpcast, metadata !3894, metadata !DIExpression()), !dbg !8326
  store i64 34359738376, i64* %dt, align 8, !dbg !8326
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !3895, metadata !DIExpression()), !dbg !8320
  %4 = bitcast %struct.VEC_tree_heap** %vargs to i8*, !dbg !8327
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8327
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3898, metadata !DIExpression()), !dbg !8320
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8328
  %tobool = icmp eq %struct._loop_vec_info* %0, null, !dbg !8329
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8329

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1242, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8329
  br label %cond.end, !dbg !8329

cond.end:                                         ; preds = %entry, %cond.true
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !8330
  %5 = load i32, i32* %relevant, align 8, !dbg !8330
  %cmp = icmp eq i32 %5, 0, !dbg !8330
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8332

if.end:                                           ; preds = %cond.end
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !8333
  %6 = load i32, i32* %def_type, align 8, !dbg !8333
  %cmp2 = icmp eq i32 %6, 3, !dbg !8335
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !8336

if.end4:                                          ; preds = %if.end
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 25, !dbg !8337
  %7 = load i32, i32* %slp_type, align 4, !dbg !8337
  %tobool5 = icmp eq i32 %7, 0, !dbg !8337
  br i1 %tobool5, label %if.end7, label %cleanup, !dbg !8339

if.end7:                                          ; preds = %if.end4
  %call8 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #8, !dbg !8340
  %tobool9 = icmp eq i8 %call8, 0, !dbg !8340
  br i1 %tobool9, label %cleanup, label %if.end11, !dbg !8342

if.end11:                                         ; preds = %if.end7
  %call12 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8343
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8343
  %bf.load = load i64, i64* %8, align 8, !dbg !8343
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8345
  %cmp13 = icmp eq i64 %bf.cast1, 141, !dbg !8345
  br i1 %cmp13, label %if.end15, label %cleanup, !dbg !8346

if.end15:                                         ; preds = %if.end11
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3891, metadata !DIExpression()), !dbg !8320
  %call16 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #8, !dbg !8347
  %conv = zext i32 %call16 to i64, !dbg !8347
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3901, metadata !DIExpression()), !dbg !8320
  %9 = add i32 %call16, -1, !dbg !8348
  %10 = icmp ugt i32 %9, 1, !dbg !8348
  br i1 %10, label %cleanup, label %for.cond.preheader, !dbg !8348

for.cond.preheader:                               ; preds = %if.end15
  br label %for.cond, !dbg !8350

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %rhs_type.0 = phi %union.tree_node* [ %13, %for.inc ], [ null, %for.cond.preheader ], !dbg !8320
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8352
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3900, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs_type.0, metadata !3891, metadata !DIExpression()), !dbg !8320
  %exitcond9 = icmp eq i64 %i.0, %conv, !dbg !8353
  br i1 %exitcond9, label %for.end, label %for.body, !dbg !8350

for.body:                                         ; preds = %for.cond
  %conv25 = trunc i64 %i.0 to i32, !dbg !8355
  %call26 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv25) #8, !dbg !8357
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !3877, metadata !DIExpression()), !dbg !8320
  %tobool27 = icmp eq %union.tree_node* %rhs_type.0, null, !dbg !8358
  br i1 %tobool27, label %if.end37, label %land.lhs.true, !dbg !8360

land.lhs.true:                                    ; preds = %for.body
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8361
  %11 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !8361
  %call29 = call zeroext i8 @types_compatible_p(%union.tree_node* nonnull %rhs_type.0, %union.tree_node* %11) #6, !dbg !8362
  %tobool30 = icmp eq i8 %call29, 0, !dbg !8362
  br i1 %tobool30, label %if.then31, label %if.end37, !dbg !8363

if.then31:                                        ; preds = %land.lhs.true
  %call32 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8364
  %tobool33 = icmp eq i8 %call32, 0, !dbg !8364
  br i1 %tobool33, label %cleanup, label %if.then34, !dbg !8367

if.then34:                                        ; preds = %if.then31
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8368
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !8369
  br label %cleanup, !dbg !8369

if.end37:                                         ; preds = %land.lhs.true, %for.body
  %type39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8370
  %13 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !8370
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3891, metadata !DIExpression()), !dbg !8320
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 %i.0, !dbg !8371
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !3890, metadata !DIExpression(DW_OP_deref)), !dbg !8320
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !3893, metadata !DIExpression(DW_OP_deref)), !dbg !8320
  %call40 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call26, %struct._loop_vec_info* %0, %struct._bb_vec_info* null, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %arrayidx) #8, !dbg !8373
  %tobool41 = icmp eq i8 %call40, 0, !dbg !8373
  br i1 %tobool41, label %if.then42, label %for.inc, !dbg !8374

if.then42:                                        ; preds = %if.end37
  %call43 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8375
  %tobool44 = icmp eq i8 %call43, 0, !dbg !8375
  br i1 %tobool44, label %cleanup, label %if.then45, !dbg !8378

if.then45:                                        ; preds = %if.then42
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8379
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !8380
  br label %cleanup, !dbg !8380

for.inc:                                          ; preds = %if.end37
  %inc = add nuw nsw i64 %i.0, 1, !dbg !8381
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3900, metadata !DIExpression()), !dbg !8320
  br label %for.cond, !dbg !8382, !llvm.loop !8383

for.end:                                          ; preds = %for.cond
  %rhs_type.0.lcssa = phi %union.tree_node* [ %rhs_type.0, %for.cond ], !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs_type.0.lcssa, metadata !3891, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs_type.0.lcssa, metadata !3891, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs_type.0.lcssa, metadata !3891, metadata !DIExpression()), !dbg !8320
  %call49 = call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %rhs_type.0.lcssa) #8, !dbg !8385
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !3884, metadata !DIExpression()), !dbg !8320
  %tobool50 = icmp eq %union.tree_node* %call49, null, !dbg !8386
  br i1 %tobool50, label %cleanup, label %if.end52, !dbg !8388

if.end52:                                         ; preds = %for.end
  %type53 = bitcast %union.tree_node* %call49 to %struct.tree_type*, !dbg !8389
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type53, i64 0, i32 6, !dbg !8389
  %bf.load54 = load i32, i32* %precision, align 4, !dbg !8389
  %bf.clear55 = and i32 %bf.load54, 1023, !dbg !8389
  %sh_prom = zext i32 %bf.clear55 to i64, !dbg !8389
  %shl = shl i64 1, %sh_prom, !dbg !8389
  %conv56 = trunc i64 %shl to i32, !dbg !8389
  call void @llvm.dbg.value(metadata i32 %conv56, metadata !3885, metadata !DIExpression()), !dbg !8320
  %call57 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8390
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %call57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8390
  %15 = load %union.tree_node*, %union.tree_node** %type59, align 8, !dbg !8390
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !3892, metadata !DIExpression()), !dbg !8320
  %call60 = call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %15) #8, !dbg !8391
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !3883, metadata !DIExpression()), !dbg !8320
  %tobool61 = icmp eq %union.tree_node* %call60, null, !dbg !8392
  br i1 %tobool61, label %cleanup, label %if.end63, !dbg !8394

if.end63:                                         ; preds = %if.end52
  %type64 = bitcast %union.tree_node* %call60 to %struct.tree_type*, !dbg !8395
  %precision65 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type64, i64 0, i32 6, !dbg !8395
  %bf.load66 = load i32, i32* %precision65, align 4, !dbg !8395
  %bf.clear67 = and i32 %bf.load66, 1023, !dbg !8395
  %sh_prom68 = zext i32 %bf.clear67 to i64, !dbg !8395
  %shl69 = shl i64 1, %sh_prom68, !dbg !8395
  %conv70 = trunc i64 %shl69 to i32, !dbg !8395
  call void @llvm.dbg.value(metadata i32 %conv70, metadata !3886, metadata !DIExpression()), !dbg !8320
  %div = sdiv i32 %conv70, 2, !dbg !8396
  %cmp71 = icmp eq i32 %div, %conv56, !dbg !8398
  br i1 %cmp71, label %if.end85, label %if.else, !dbg !8399

if.else:                                          ; preds = %if.end63
  %cmp74 = icmp eq i32 %conv70, %conv56, !dbg !8400
  br i1 %cmp74, label %if.end85, label %if.else77, !dbg !8402

if.else77:                                        ; preds = %if.else
  %div78 = sdiv i32 %conv56, 2, !dbg !8403
  %cmp79 = icmp eq i32 %div78, %conv70, !dbg !8405
  br i1 %cmp79, label %if.end85, label %cleanup, !dbg !8406

if.end85:                                         ; preds = %if.else, %if.else77, %if.end63
  %modifier.1 = phi i32 [ 0, %if.end63 ], [ 1, %if.else ], [ 2, %if.else77 ], !dbg !8407
  call void @llvm.dbg.value(metadata i32 %modifier.1, metadata !3899, metadata !DIExpression()), !dbg !8320
  %call86 = call %union.tree_node* @vectorizable_function(%union.gimple_statement_d* %stmt, %union.tree_node* nonnull %call60, %union.tree_node* nonnull %call49) #8, !dbg !8408
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !3888, metadata !DIExpression()), !dbg !8320
  %cmp87 = icmp eq %union.tree_node* %call86, null, !dbg !8409
  br i1 %cmp87, label %if.then89, label %if.end95, !dbg !8411

if.then89:                                        ; preds = %if.end85
  %call90 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8412
  %tobool91 = icmp eq i8 %call90, 0, !dbg !8412
  br i1 %tobool91, label %cleanup, label %if.then92, !dbg !8415

if.then92:                                        ; preds = %if.then89
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8416
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.88, i64 0, i64 0)) #6, !dbg !8417
  br label %cleanup, !dbg !8417

if.end95:                                         ; preds = %if.end85
  %call96 = call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !8418
  %tobool97 = icmp eq %union.tree_node* %call96, null, !dbg !8418
  br i1 %tobool97, label %cond.end100, label %cond.true98, !dbg !8418

cond.true98:                                      ; preds = %if.end95
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1327, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8418
  br label %cond.end100, !dbg !8418

cond.end100:                                      ; preds = %if.end95, %cond.true98
  %cmp102 = icmp eq i32 %modifier.1, 0, !dbg !8419
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 6, !dbg !8421
  %17 = load i32, i32* %vectorization_factor, align 8, !dbg !8421
  br i1 %cmp102, label %if.then104, label %if.else106, !dbg !8422

if.then104:                                       ; preds = %cond.end100
  br label %if.end109, !dbg !8423

if.else106:                                       ; preds = %cond.end100
  br label %if.end109

if.end109:                                        ; preds = %if.else106, %if.then104
  %conv70.pn = phi i32 [ %conv70, %if.then104 ], [ %conv56, %if.else106 ]
  %ncopies.0 = sdiv i32 %17, %conv70.pn, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !3896, metadata !DIExpression()), !dbg !8320
  %cmp110 = icmp sgt i32 %ncopies.0, 0, !dbg !8424
  br i1 %cmp110, label %cond.end114, label %cond.true112, !dbg !8424

cond.true112:                                     ; preds = %if.end109
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1336, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8424
  br label %cond.end114, !dbg !8424

cond.end114:                                      ; preds = %if.end109, %cond.true112
  %tobool116 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !8425
  br i1 %tobool116, label %if.then117, label %if.end124, !dbg !8427

if.then117:                                       ; preds = %cond.end114
  %type118 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !8428
  store i32 4, i32* %type118, align 8, !dbg !8430
  %call119 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8431
  %tobool120 = icmp eq i8 %call119, 0, !dbg !8431
  br i1 %tobool120, label %if.end123, label %if.then121, !dbg !8433

if.then121:                                       ; preds = %if.then117
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8434
  %call122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.89, i64 0, i64 0)) #6, !dbg !8435
  br label %if.end123, !dbg !8435

if.end123:                                        ; preds = %if.then117, %if.then121
  %arraydecay = bitcast i64* %dt to i32*, !dbg !8436
  call void @vect_model_simple_cost(%struct._stmt_vec_info* %call, i32 %ncopies.0, i32* nonnull %arraydecay, %struct._slp_tree* null) #8, !dbg !8437
  br label %cleanup, !dbg !8438

if.end124:                                        ; preds = %cond.end114
  %call125 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8439
  %tobool126 = icmp eq i8 %call125, 0, !dbg !8439
  br i1 %tobool126, label %if.end129, label %if.then127, !dbg !8441

if.then127:                                       ; preds = %if.end124
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8442
  %call128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0)) #6, !dbg !8443
  br label %if.end129, !dbg !8443

if.end129:                                        ; preds = %if.end124, %if.then127
  %call130 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8444
  call void @llvm.dbg.value(metadata %union.tree_node* %call130, metadata !3876, metadata !DIExpression()), !dbg !8320
  %call131 = call %union.tree_node* @vect_create_destination_var(%union.tree_node* %call130, %union.tree_node* nonnull %call60) #6, !dbg !8445
  call void @llvm.dbg.value(metadata %union.tree_node* %call131, metadata !3875, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !3882, metadata !DIExpression()), !dbg !8320
  switch i32 %modifier.1, label %sw.epilog [
    i32 1, label %for.cond132.preheader
    i32 0, label %for.cond187.preheader
    i32 2, label %cleanup
  ], !dbg !8446

for.cond187.preheader:                            ; preds = %if.end129
  %mul = shl i32 %call16, 1, !dbg !8447
  %vectorized_stmt247 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !8453
  br label %for.cond187, !dbg !8455

for.cond132.preheader:                            ; preds = %if.end129
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !8456
  br label %for.cond132, !dbg !8461

for.cond132:                                      ; preds = %for.cond132.preheader, %if.end181
  %prev_stmt_info.0 = phi %struct._stmt_vec_info* [ %call182, %if.end181 ], [ null, %for.cond132.preheader ], !dbg !8320
  %new_stmt.0 = phi %union.gimple_statement_d* [ %call175, %if.end181 ], [ null, %for.cond132.preheader ], !dbg !8320
  %j.0 = phi i32 [ %inc184, %if.end181 ], [ 0, %for.cond132.preheader ], !dbg !8462
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3897, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !3895, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !3882, metadata !DIExpression()), !dbg !8320
  %cmp133 = icmp slt i32 %j.0, %ncopies.0, !dbg !8463
  br i1 %cmp133, label %for.body135, label %sw.epilog.loopexit, !dbg !8461

for.body135:                                      ; preds = %for.cond132
  %cmp136 = icmp eq i32 %j.0, 0, !dbg !8464
  br i1 %cmp136, label %if.then138, label %if.else141, !dbg !8466

if.then138:                                       ; preds = %for.body135
  %call140 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %call16) #8, !dbg !8467
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call140, metadata !3898, metadata !DIExpression()), !dbg !8320
  store %struct.VEC_tree_heap* %call140, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8468
  br label %if.end148, !dbg !8469

if.else141:                                       ; preds = %for.body135
  %20 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8470
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %20, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %20, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base144 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %20, i64 0, i32 0, !dbg !8470
  call fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %base144, i32 0) #8, !dbg !8470
  br label %if.end148

if.end148:                                        ; preds = %if.else141, %if.then138
  call void @llvm.dbg.value(metadata i64 0, metadata !3900, metadata !DIExpression()), !dbg !8320
  br i1 %cmp136, label %if.end148.split.us, label %if.end148.if.end148.split_crit_edge, !dbg !8471

if.end148.if.end148.split_crit_edge:              ; preds = %if.end148
  br label %for.cond149, !dbg !8471

if.end148.split.us:                               ; preds = %if.end148
  br label %for.cond149.us, !dbg !8471

for.cond149.us:                                   ; preds = %for.body152.us, %if.end148.split.us
  %i.1.us = phi i64 [ 0, %if.end148.split.us ], [ %inc173.us, %for.body152.us ], !dbg !8473
  call void @llvm.dbg.value(metadata i64 %i.1.us, metadata !3900, metadata !DIExpression()), !dbg !8320
  %exitcond6 = icmp eq i64 %i.1.us, %conv, !dbg !8474
  br i1 %exitcond6, label %for.end174.us-lcssa.us, label %for.body152.us, !dbg !8476

for.body152.us:                                   ; preds = %for.cond149.us
  %conv153.us = trunc i64 %i.1.us to i32, !dbg !8477
  %call154.us = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv153.us) #8, !dbg !8479
  call void @llvm.dbg.value(metadata %union.tree_node* %call154.us, metadata !3877, metadata !DIExpression()), !dbg !8320
  %call158.us = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %call154.us, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !8480
  call void @llvm.dbg.value(metadata %union.tree_node* %call158.us, metadata !3879, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %call158.us, metadata !3879, metadata !DIExpression()), !dbg !8320
  %21 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %21, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %21, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base167.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %21, i64 0, i32 0, !dbg !8482
  %call171.us = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base167.us, %union.tree_node* %call158.us) #8, !dbg !8482
  %inc173.us = add nuw nsw i64 %i.1.us, 1, !dbg !8483
  call void @llvm.dbg.value(metadata i64 %inc173.us, metadata !3900, metadata !DIExpression()), !dbg !8320
  br label %for.cond149.us, !dbg !8484, !llvm.loop !8485

for.end174.us-lcssa.us:                           ; preds = %for.cond149.us
  br label %for.end174, !dbg !8487

for.cond149:                                      ; preds = %for.body152, %if.end148.if.end148.split_crit_edge
  %i.1 = phi i64 [ 0, %if.end148.if.end148.split_crit_edge ], [ %inc173, %for.body152 ], !dbg !8473
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !3900, metadata !DIExpression()), !dbg !8320
  %exitcond = icmp eq i64 %i.1, %conv, !dbg !8474
  br i1 %exitcond, label %for.end174.us-lcssa, label %for.body152, !dbg !8476

for.body152:                                      ; preds = %for.cond149
  %conv153 = trunc i64 %i.1 to i32, !dbg !8477
  %call154 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv153) #8, !dbg !8479
  call void @llvm.dbg.value(metadata %union.tree_node* %call154, metadata !3877, metadata !DIExpression()), !dbg !8320
  %call161 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %new_stmt.0, i32 %conv153) #8, !dbg !8488
  call void @llvm.dbg.value(metadata %union.tree_node* %call161, metadata !3879, metadata !DIExpression()), !dbg !8320
  %arrayidx162 = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 %i.1, !dbg !8490
  %22 = load i32, i32* %arrayidx162, align 4, !dbg !8490
  %call163 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %22, %union.tree_node* %call161) #8, !dbg !8491
  call void @llvm.dbg.value(metadata %union.tree_node* %call163, metadata !3879, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %call163, metadata !3879, metadata !DIExpression()), !dbg !8320
  %23 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %23, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %23, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base167 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %23, i64 0, i32 0, !dbg !8482
  %call171 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base167, %union.tree_node* %call163) #8, !dbg !8482
  %inc173 = add nuw nsw i64 %i.1, 1, !dbg !8483
  call void @llvm.dbg.value(metadata i64 %inc173, metadata !3900, metadata !DIExpression()), !dbg !8320
  br label %for.cond149, !dbg !8484, !llvm.loop !8485

for.end174.us-lcssa:                              ; preds = %for.cond149
  br label %for.end174, !dbg !8487

for.end174:                                       ; preds = %for.end174.us-lcssa.us, %for.end174.us-lcssa
  %24 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8487
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %24, metadata !3898, metadata !DIExpression()), !dbg !8320
  %call175 = call %union.gimple_statement_d* @gimple_build_call_vec(%union.tree_node* nonnull %call86, %struct.VEC_tree_heap* %24) #6, !dbg !8492
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call175, metadata !3895, metadata !DIExpression()), !dbg !8320
  %call176 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call131, %union.gimple_statement_d* %call175) #8, !dbg !8493
  call void @llvm.dbg.value(metadata %union.tree_node* %call176, metadata !3889, metadata !DIExpression()), !dbg !8320
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call175, %union.tree_node* %call176) #8, !dbg !8494
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call175, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8495
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call175) #6, !dbg !8496
  br i1 %cmp136, label %if.then179, label %if.else180, !dbg !8497

if.then179:                                       ; preds = %for.end174
  store %union.gimple_statement_d* %call175, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !8498
  store %union.gimple_statement_d* %call175, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !8499
  br label %if.end181, !dbg !8500

if.else180:                                       ; preds = %for.end174
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.0, i64 0, i32 14, !dbg !8501
  store %union.gimple_statement_d* %call175, %union.gimple_statement_d** %related_stmt, align 8, !dbg !8502
  br label %if.end181

if.end181:                                        ; preds = %if.else180, %if.then179
  %call182 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call175) #8, !dbg !8503
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call182, metadata !3882, metadata !DIExpression()), !dbg !8320
  %inc184 = add nuw nsw i32 %j.0, 1, !dbg !8504
  call void @llvm.dbg.value(metadata i32 %inc184, metadata !3897, metadata !DIExpression()), !dbg !8320
  br label %for.cond132, !dbg !8505, !llvm.loop !8506

for.cond187:                                      ; preds = %for.cond187.preheader, %if.end250
  %prev_stmt_info.1 = phi %struct._stmt_vec_info* [ %call251, %if.end250 ], [ null, %for.cond187.preheader ], !dbg !8320
  %new_stmt.1 = phi %union.gimple_statement_d* [ %call242, %if.end250 ], [ null, %for.cond187.preheader ], !dbg !8320
  %j.1 = phi i32 [ %inc253, %if.end250 ], [ 0, %for.cond187.preheader ], !dbg !8508
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !3897, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1, metadata !3895, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.1, metadata !3882, metadata !DIExpression()), !dbg !8320
  %cmp188 = icmp slt i32 %j.1, %ncopies.0, !dbg !8509
  br i1 %cmp188, label %for.body190, label %for.end254, !dbg !8455

for.body190:                                      ; preds = %for.cond187
  %cmp191 = icmp eq i32 %j.1, 0, !dbg !8510
  br i1 %cmp191, label %if.then193, label %if.else196, !dbg !8511

if.then193:                                       ; preds = %for.body190
  %call195 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %mul) #8, !dbg !8512
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call195, metadata !3898, metadata !DIExpression()), !dbg !8320
  store %struct.VEC_tree_heap* %call195, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8513
  br label %if.end203, !dbg !8514

if.else196:                                       ; preds = %for.body190
  %25 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8515
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %25, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %25, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base199 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %25, i64 0, i32 0, !dbg !8515
  call fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %base199, i32 0) #8, !dbg !8515
  br label %if.end203

if.end203:                                        ; preds = %if.else196, %if.then193
  call void @llvm.dbg.value(metadata i64 0, metadata !3900, metadata !DIExpression()), !dbg !8320
  br i1 %cmp191, label %if.end203.split.us, label %if.end203.if.end203.split_crit_edge, !dbg !8516

if.end203.if.end203.split_crit_edge:              ; preds = %if.end203
  br label %for.cond204, !dbg !8516

if.end203.split.us:                               ; preds = %if.end203
  br label %for.cond204.us, !dbg !8516

for.cond204.us:                                   ; preds = %for.body207.us, %if.end203.split.us
  %i.2.us = phi i64 [ 0, %if.end203.split.us ], [ %inc240.us, %for.body207.us ], !dbg !8518
  call void @llvm.dbg.value(metadata i64 %i.2.us, metadata !3900, metadata !DIExpression()), !dbg !8320
  %exitcond8 = icmp eq i64 %i.2.us, %conv, !dbg !8519
  br i1 %exitcond8, label %for.end241.us-lcssa.us, label %for.body207.us, !dbg !8521

for.body207.us:                                   ; preds = %for.cond204.us
  %conv208.us = trunc i64 %i.2.us to i32, !dbg !8522
  %call209.us = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv208.us) #8, !dbg !8524
  call void @llvm.dbg.value(metadata %union.tree_node* %call209.us, metadata !3877, metadata !DIExpression()), !dbg !8320
  %call213.us = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %call209.us, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !8525
  call void @llvm.dbg.value(metadata %union.tree_node* %call213.us, metadata !3879, metadata !DIExpression()), !dbg !8320
  %arrayidx214.us = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 %i.2.us, !dbg !8528
  %26 = load i32, i32* %arrayidx214.us, align 4, !dbg !8528
  %call215.us = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %26, %union.tree_node* %call213.us) #8, !dbg !8529
  call void @llvm.dbg.value(metadata %union.tree_node* %call215.us, metadata !3880, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %call213.us, metadata !3879, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %call215.us, metadata !3880, metadata !DIExpression()), !dbg !8320
  %27 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8530
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %27, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %27, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base227.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %27, i64 0, i32 0, !dbg !8530
  %call231.us = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base227.us, %union.tree_node* %call213.us) #8, !dbg !8530
  %28 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8531
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %28, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %28, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base234.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %28, i64 0, i32 0, !dbg !8531
  %call238.us = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base234.us, %union.tree_node* %call215.us) #8, !dbg !8531
  %inc240.us = add nuw nsw i64 %i.2.us, 1, !dbg !8532
  call void @llvm.dbg.value(metadata i64 %inc240.us, metadata !3900, metadata !DIExpression()), !dbg !8320
  br label %for.cond204.us, !dbg !8533, !llvm.loop !8534

for.end241.us-lcssa.us:                           ; preds = %for.cond204.us
  br label %for.end241, !dbg !8536

for.cond204:                                      ; preds = %for.body207, %if.end203.if.end203.split_crit_edge
  %i.2 = phi i64 [ 0, %if.end203.if.end203.split_crit_edge ], [ %inc240, %for.body207 ], !dbg !8518
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !3900, metadata !DIExpression()), !dbg !8320
  %exitcond7 = icmp eq i64 %i.2, %conv, !dbg !8519
  br i1 %exitcond7, label %for.end241.us-lcssa, label %for.body207, !dbg !8521

for.body207:                                      ; preds = %for.cond204
  %conv208 = trunc i64 %i.2 to i32, !dbg !8522
  %call209 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %conv208) #8, !dbg !8524
  call void @llvm.dbg.value(metadata %union.tree_node* %call209, metadata !3877, metadata !DIExpression()), !dbg !8320
  %conv218 = shl i32 %conv208, 1, !dbg !8537
  %call219 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %new_stmt.1, i32 %conv218) #8, !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %call219, metadata !3880, metadata !DIExpression()), !dbg !8320
  %arrayidx220 = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast, i64 0, i64 %i.2, !dbg !8540
  %29 = load i32, i32* %arrayidx220, align 4, !dbg !8540
  %call221 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %29, %union.tree_node* %call219) #8, !dbg !8541
  call void @llvm.dbg.value(metadata %union.tree_node* %call221, metadata !3879, metadata !DIExpression()), !dbg !8320
  %30 = load i32, i32* %arrayidx220, align 4, !dbg !8542
  %call223 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %30, %union.tree_node* %call221) #8, !dbg !8543
  call void @llvm.dbg.value(metadata %union.tree_node* %call223, metadata !3880, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %call221, metadata !3879, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %union.tree_node* %call223, metadata !3880, metadata !DIExpression()), !dbg !8320
  %31 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8530
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %31, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %31, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base227 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %31, i64 0, i32 0, !dbg !8530
  %call231 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base227, %union.tree_node* %call221) #8, !dbg !8530
  %32 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8531
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %32, metadata !3898, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %32, metadata !3898, metadata !DIExpression()), !dbg !8320
  %base234 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %32, i64 0, i32 0, !dbg !8531
  %call238 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base234, %union.tree_node* %call223) #8, !dbg !8531
  %inc240 = add nuw nsw i64 %i.2, 1, !dbg !8532
  call void @llvm.dbg.value(metadata i64 %inc240, metadata !3900, metadata !DIExpression()), !dbg !8320
  br label %for.cond204, !dbg !8533, !llvm.loop !8534

for.end241.us-lcssa:                              ; preds = %for.cond204
  br label %for.end241, !dbg !8536

for.end241:                                       ; preds = %for.end241.us-lcssa.us, %for.end241.us-lcssa
  %33 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vargs, align 8, !dbg !8536
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !3898, metadata !DIExpression()), !dbg !8320
  %call242 = call %union.gimple_statement_d* @gimple_build_call_vec(%union.tree_node* nonnull %call86, %struct.VEC_tree_heap* %33) #6, !dbg !8544
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call242, metadata !3895, metadata !DIExpression()), !dbg !8320
  %call243 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call131, %union.gimple_statement_d* %call242) #8, !dbg !8545
  call void @llvm.dbg.value(metadata %union.tree_node* %call243, metadata !3889, metadata !DIExpression()), !dbg !8320
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call242, %union.tree_node* %call243) #8, !dbg !8546
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call242, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8547
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call242) #6, !dbg !8548
  br i1 %cmp191, label %if.then246, label %if.else248, !dbg !8549

if.then246:                                       ; preds = %for.end241
  store %union.gimple_statement_d* %call242, %union.gimple_statement_d** %vectorized_stmt247, align 8, !dbg !8550
  br label %if.end250, !dbg !8551

if.else248:                                       ; preds = %for.end241
  %related_stmt249 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.1, i64 0, i32 14, !dbg !8552
  store %union.gimple_statement_d* %call242, %union.gimple_statement_d** %related_stmt249, align 8, !dbg !8553
  br label %if.end250

if.end250:                                        ; preds = %if.else248, %if.then246
  %call251 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call242) #8, !dbg !8554
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call251, metadata !3882, metadata !DIExpression()), !dbg !8320
  %inc253 = add nuw nsw i32 %j.1, 1, !dbg !8555
  call void @llvm.dbg.value(metadata i32 %inc253, metadata !3897, metadata !DIExpression()), !dbg !8320
  br label %for.cond187, !dbg !8556, !llvm.loop !8557

for.end254:                                       ; preds = %for.cond187
  %34 = bitcast %union.gimple_statement_d** %vectorized_stmt247 to i64*, !dbg !8559
  %35 = load i64, i64* %34, align 8, !dbg !8559
  %36 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !8560
  store i64 %35, i64* %36, align 8, !dbg !8560
  br label %sw.epilog, !dbg !8561

sw.epilog.loopexit:                               ; preds = %for.cond132
  br label %sw.epilog, !dbg !8562

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.end129, %for.end254
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vargs, metadata !3898, metadata !DIExpression(DW_OP_deref)), !dbg !8320
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vargs) #8, !dbg !8562
  %37 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !8563
  %call257 = call zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %37) #6, !dbg !8565
  %tobool258 = icmp eq i8 %call257, 0, !dbg !8565
  br i1 %tobool258, label %if.end262, label %if.then259, !dbg !8566

if.then259:                                       ; preds = %sw.epilog
  %call260 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #8, !dbg !8567
  %call261 = call zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def* %call260) #6, !dbg !8568
  br label %if.end262, !dbg !8568

if.end262:                                        ; preds = %sw.epilog, %if.then259
  %type264 = getelementptr inbounds %union.tree_node, %union.tree_node* %call130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8569
  %38 = load %union.tree_node*, %union.tree_node** %type264, align 8, !dbg !8569
  call void @llvm.dbg.value(metadata %union.tree_node* %38, metadata !3878, metadata !DIExpression()), !dbg !8320
  %call265 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8570
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8570
  %call266 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %38, %union.tree_node* %39) #6, !dbg !8570
  %call267 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call265, %union.tree_node* %call266) #6, !dbg !8570
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call267, metadata !3895, metadata !DIExpression()), !dbg !8320
  call fastcc void @set_vinfo_for_stmt(%union.gimple_statement_d* %call267, %struct._stmt_vec_info* %call) #8, !dbg !8571
  call fastcc void @set_vinfo_for_stmt(%union.gimple_statement_d* %stmt, %struct._stmt_vec_info* null) #8, !dbg !8572
  %stmt268 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 1, !dbg !8573
  store %union.gimple_statement_d* %call267, %union.gimple_statement_d** %stmt268, align 8, !dbg !8574
  call void @gsi_replace(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call267, i8 zeroext 0) #6, !dbg !8575
  %call269 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call267) #8, !dbg !8576
  %def_stmt270 = getelementptr inbounds %union.tree_node, %union.tree_node* %call269, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8576
  %40 = bitcast %union.tree_node** %def_stmt270 to %union.gimple_statement_d**, !dbg !8576
  store %union.gimple_statement_d* %call267, %union.gimple_statement_d** %40, align 8, !dbg !8577
  br label %cleanup, !dbg !8578

cleanup:                                          ; preds = %if.then31, %if.then42, %if.then89, %if.end52, %for.end, %if.end11, %if.end7, %if.end4, %if.end, %cond.end, %if.end129, %if.then92, %if.else77, %if.then45, %if.then34, %if.end15, %if.end262, %if.end123
  %retval.0 = phi i8 [ 1, %if.end262 ], [ 1, %if.end123 ], [ 0, %cond.end ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %if.end7 ], [ 0, %if.end11 ], [ 0, %if.end15 ], [ 0, %if.then34 ], [ 0, %if.then31 ], [ 0, %if.then45 ], [ 0, %if.then42 ], [ 0, %for.end ], [ 0, %if.end52 ], [ 0, %if.else77 ], [ 0, %if.then92 ], [ 0, %if.then89 ], [ 0, %if.end129 ], !dbg !8320
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !8579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !8579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !8579
  ret i8 %retval.0, !dbg !8579
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @vectorizable_store(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** %vec_stmt, %struct._slp_tree* %slp_node) unnamed_addr #5 !dbg !8580 {
entry:
  %dummy = alloca %union.tree_node*, align 8
  %def = alloca %union.tree_node*, align 8
  %def_stmt = alloca %union.gimple_statement_d*, align 8
  %dt = alloca i32, align 4
  %dr_chain = alloca %struct.VEC_tree_heap*, align 8
  %oprnds = alloca %struct.VEC_tree_heap*, align 8
  %result_chain = alloca %struct.VEC_tree_heap*, align 8
  %inv_p = alloca i8, align 1
  %vec_oprnds = alloca %struct.VEC_tree_heap*, align 8
  %ptr_incr = alloca %union.gimple_statement_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8582, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8583, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8584, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !8585, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8589, metadata !DIExpression()), !dbg !8632
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !8633
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !8590, metadata !DIExpression()), !dbg !8632
  %data_ref_info = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 7, !dbg !8634
  %0 = load %struct.data_reference*, %struct.data_reference** %data_ref_info, align 8, !dbg !8634
  call void @llvm.dbg.value(metadata %struct.data_reference* %0, metadata !8591, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.data_reference* null, metadata !8592, metadata !DIExpression()), !dbg !8632
  %vectype1 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 5, !dbg !8635
  %1 = load %union.tree_node*, %union.tree_node** %vectype1, align 8, !dbg !8635
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8593, metadata !DIExpression()), !dbg !8632
  %loop_vinfo2 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !8636
  %2 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo2, align 8, !dbg !8636
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %2, metadata !8594, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.loop* null, metadata !8595, metadata !DIExpression()), !dbg !8632
  %3 = bitcast %union.tree_node** %dummy to i8*, !dbg !8637
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !8637
  %4 = bitcast %union.tree_node** %def to i8*, !dbg !8638
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8638
  %5 = bitcast %union.gimple_statement_d** %def_stmt to i8*, !dbg !8639
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !8639
  %6 = bitcast i32* %dt to i8*, !dbg !8640
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7, !dbg !8640
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !8602, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8603, metadata !DIExpression()), !dbg !8632
  %type = bitcast %union.tree_node* %1 to %struct.tree_type*, !dbg !8641
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !8641
  %bf.load = load i32, i32* %precision, align 4, !dbg !8641
  %bf.clear = and i32 %bf.load, 1023, !dbg !8641
  %sh_prom = zext i32 %bf.clear to i64, !dbg !8641
  %shl = shl i64 1, %sh_prom, !dbg !8641
  %conv = trunc i64 %shl to i32, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8604, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !8608, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i8 0, metadata !8609, metadata !DIExpression()), !dbg !8632
  %7 = bitcast %struct.VEC_tree_heap** %dr_chain to i8*, !dbg !8642
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !8612, metadata !DIExpression()), !dbg !8632
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8643
  %8 = bitcast %struct.VEC_tree_heap** %oprnds to i8*, !dbg !8642
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !8613, metadata !DIExpression()), !dbg !8632
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %oprnds, align 8, !dbg !8644
  %9 = bitcast %struct.VEC_tree_heap** %result_chain to i8*, !dbg !8642
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !8614, metadata !DIExpression()), !dbg !8632
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %result_chain, align 8, !dbg !8645
  call void @llvm.dbg.value(metadata i8* %inv_p, metadata !8615, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %inv_p) #7, !dbg !8646
  %10 = bitcast %struct.VEC_tree_heap** %vec_oprnds to i8*, !dbg !8647
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7, !dbg !8647
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !8616, metadata !DIExpression()), !dbg !8632
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !8648
  %cmp = icmp ne %struct._slp_tree* %slp_node, null, !dbg !8649
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !8617, metadata !DIExpression()), !dbg !8632
  %bb_vinfo5 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 26, !dbg !8650
  %11 = load %struct._bb_vec_info*, %struct._bb_vec_info** %bb_vinfo5, align 8, !dbg !8650
  call void @llvm.dbg.value(metadata %struct._bb_vec_info* %11, metadata !8619, metadata !DIExpression()), !dbg !8632
  %tobool = icmp eq %struct._loop_vec_info* %2, null, !dbg !8651
  br i1 %tobool, label %if.end, label %if.then, !dbg !8653

if.then:                                          ; preds = %entry
  %loop6 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %2, i64 0, i32 0, !dbg !8654
  %12 = load %struct.loop*, %struct.loop** %loop6, align 8, !dbg !8654
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !8595, metadata !DIExpression()), !dbg !8632
  br label %if.end, !dbg !8655

if.end:                                           ; preds = %entry, %if.then
  %loop.0 = phi %struct.loop* [ %12, %if.then ], [ null, %entry ], !dbg !8632
  call void @llvm.dbg.value(metadata %struct.loop* %loop.0, metadata !8595, metadata !DIExpression()), !dbg !8632
  br i1 %cmp, label %if.end9, label %if.else, !dbg !8656

if.else:                                          ; preds = %if.end
  %vectorization_factor = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %2, i64 0, i32 6, !dbg !8657
  %13 = load i32, i32* %vectorization_factor, align 8, !dbg !8657
  %div = sdiv i32 %13, %conv, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %div, metadata !8605, metadata !DIExpression()), !dbg !8632
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.else
  %ncopies.0 = phi i32 [ %div, %if.else ], [ 1, %if.end ], !dbg !8660
  call void @llvm.dbg.value(metadata i32 %ncopies.0, metadata !8605, metadata !DIExpression()), !dbg !8632
  %cmp10 = icmp sgt i32 %ncopies.0, 0, !dbg !8661
  br i1 %cmp10, label %cond.end, label %cond.true, !dbg !8661

cond.true:                                        ; preds = %if.end9
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2923, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8661
  br label %cond.end, !dbg !8661

cond.end:                                         ; preds = %if.end9, %cond.true
  %tobool12 = icmp eq %struct.loop* %loop.0, null, !dbg !8662
  br i1 %tobool12, label %if.end25, label %land.lhs.true, !dbg !8664

land.lhs.true:                                    ; preds = %cond.end
  %call13 = tail call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* nonnull %loop.0, %union.gimple_statement_d* %stmt) #8, !dbg !8665
  %tobool15 = icmp ne i8 %call13, 0, !dbg !8665
  %cmp17 = icmp sgt i32 %ncopies.0, 1, !dbg !8666
  %or.cond = and i1 %tobool15, %cmp17, !dbg !8667
  br i1 %or.cond, label %if.then19, label %if.end25, !dbg !8667

if.then19:                                        ; preds = %land.lhs.true
  %call20 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8668
  %tobool21 = icmp eq i8 %call20, 0, !dbg !8668
  br i1 %tobool21, label %cleanup399, label %if.then22, !dbg !8671

if.then22:                                        ; preds = %if.then19
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8672
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i64 0, i64 0)) #6, !dbg !8673
  br label %cleanup399, !dbg !8673

if.end25:                                         ; preds = %cond.end, %land.lhs.true
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !8674
  %15 = load i32, i32* %relevant, align 8, !dbg !8674
  %cmp26 = icmp ne i32 %15, 0, !dbg !8674
  %tobool29 = icmp ne %struct._bb_vec_info* %11, null, !dbg !8676
  %or.cond2 = or i1 %cmp26, %tobool29, !dbg !8677
  br i1 %or.cond2, label %if.end31, label %cleanup399, !dbg !8677

if.end31:                                         ; preds = %if.end25
  %def_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 16, !dbg !8678
  %16 = load i32, i32* %def_type, align 8, !dbg !8678
  %cmp32 = icmp eq i32 %16, 3, !dbg !8680
  br i1 %cmp32, label %if.end35, label %cleanup399, !dbg !8681

if.end35:                                         ; preds = %if.end31
  %call36 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #8, !dbg !8682
  %tobool37 = icmp eq i8 %call36, 0, !dbg !8682
  br i1 %tobool37, label %cleanup399, label %if.end39, !dbg !8684

if.end39:                                         ; preds = %if.end35
  %call40 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8685
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !8586, metadata !DIExpression()), !dbg !8632
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8686
  %bf.load41 = load i64, i64* %17, align 8, !dbg !8686
  %bf.cast6 = and i64 %bf.load41, 65535, !dbg !8688
  %cmp43 = icmp eq i64 %bf.cast6, 45, !dbg !8688
  br i1 %cmp43, label %if.end74, label %land.lhs.true45, !dbg !8689

land.lhs.true45:                                  ; preds = %if.end39
  %cmp50 = icmp eq i64 %bf.cast6, 47, !dbg !8690
  br i1 %cmp50, label %if.end74, label %land.lhs.true52, !dbg !8691

land.lhs.true52:                                  ; preds = %land.lhs.true45
  %cmp57 = icmp eq i64 %bf.cast6, 41, !dbg !8692
  br i1 %cmp57, label %if.end74, label %land.lhs.true59, !dbg !8693

land.lhs.true59:                                  ; preds = %land.lhs.true52
  %cmp64 = icmp eq i64 %bf.cast6, 44, !dbg !8694
  br i1 %cmp64, label %if.end74, label %land.lhs.true66, !dbg !8695

land.lhs.true66:                                  ; preds = %land.lhs.true59
  %cmp71 = icmp eq i64 %bf.cast6, 43, !dbg !8696
  br i1 %cmp71, label %if.end74, label %cleanup399, !dbg !8697

if.end74:                                         ; preds = %land.lhs.true66, %land.lhs.true59, %land.lhs.true52, %land.lhs.true45, %if.end39
  %call75 = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #6, !dbg !8698
  %tobool76 = icmp eq i8 %call75, 0, !dbg !8698
  br i1 %tobool76, label %cond.true77, label %cond.end79, !dbg !8698

cond.true77:                                      ; preds = %if.end74
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2952, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8698
  br label %cond.end79, !dbg !8698

cond.end79:                                       ; preds = %if.end74, %cond.true77
  %call81 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !8699
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !8588, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !8599, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !8600, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata i32* %dt, metadata !8601, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  %call82 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call81, %struct._loop_vec_info* %2, %struct._bb_vec_info* %11, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !8700
  %tobool83 = icmp eq i8 %call82, 0, !dbg !8700
  br i1 %tobool83, label %if.then84, label %if.end90, !dbg !8702

if.then84:                                        ; preds = %cond.end79
  %call85 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8703
  %tobool86 = icmp eq i8 %call85, 0, !dbg !8703
  br i1 %tobool86, label %cleanup399, label %if.then87, !dbg !8706

if.then87:                                        ; preds = %if.then84
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8707
  %call88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !8708
  br label %cleanup399, !dbg !8708

if.end90:                                         ; preds = %cond.end79
  %type91 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8709
  %19 = load %union.tree_node*, %union.tree_node** %type91, align 8, !dbg !8709
  %type93 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8711
  %20 = load %union.tree_node*, %union.tree_node** %type93, align 8, !dbg !8711
  %call94 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %19, %union.tree_node* %20) #6, !dbg !8712
  %tobool95 = icmp eq i8 %call94, 0, !dbg !8712
  br i1 %tobool95, label %if.then96, label %if.end102, !dbg !8713

if.then96:                                        ; preds = %if.end90
  %call97 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8714
  %tobool98 = icmp eq i8 %call97, 0, !dbg !8714
  br i1 %tobool98, label %cleanup399, label %if.then99, !dbg !8717

if.then99:                                        ; preds = %if.then96
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8718
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !8719
  br label %cleanup399, !dbg !8719

if.end102:                                        ; preds = %if.end90
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8720
  %bf.load104 = load i64, i64* %22, align 8, !dbg !8720
  %bf.cast1067 = and i64 %bf.load104, 65535, !dbg !8720
  %cmp107 = icmp eq i64 %bf.cast1067, 14, !dbg !8720
  br i1 %cmp107, label %cond.true109, label %cond.false111, !dbg !8720

cond.true109:                                     ; preds = %if.end102
  %call110 = call i32 @vector_type_mode(%union.tree_node* %1) #6, !dbg !8720
  br label %cond.end115, !dbg !8720

cond.false111:                                    ; preds = %if.end102
  %bf.load113 = load i32, i32* %precision, align 4, !dbg !8720
  %bf.lshr = lshr i32 %bf.load113, 16, !dbg !8720
  %bf.clear114 = and i32 %bf.lshr, 255, !dbg !8720
  br label %cond.end115, !dbg !8720

cond.end115:                                      ; preds = %cond.false111, %cond.true109
  %cond116 = phi i32 [ %call110, %cond.true109 ], [ %bf.clear114, %cond.false111 ], !dbg !8720
  call void @llvm.dbg.value(metadata i32 %cond116, metadata !8596, metadata !DIExpression()), !dbg !8632
  %idxprom = sext i32 %cond116 to i64, !dbg !8721
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 60, i32 4, i64 %idxprom, i32 0, !dbg !8723
  %23 = load i32, i32* %insn_code, align 4, !dbg !8723
  %cmp117 = icmp eq i32 %23, 2956, !dbg !8724
  br i1 %cmp117, label %cleanup399, label %if.end120, !dbg !8725

if.end120:                                        ; preds = %cond.end115
  %24 = load %struct.data_reference*, %struct.data_reference** %data_ref_info, align 8, !dbg !8726
  %tobool122 = icmp eq %struct.data_reference* %24, null, !dbg !8726
  br i1 %tobool122, label %cleanup399, label %if.end124, !dbg !8728

if.end124:                                        ; preds = %if.end120
  %first_dr125 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 17, !dbg !8729
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr125, align 8, !dbg !8729
  %cmp126 = icmp eq %union.gimple_statement_d* %25, null, !dbg !8729
  br i1 %cmp126, label %if.end162, label %if.then128, !dbg !8731

if.then128:                                       ; preds = %if.end124
  call void @llvm.dbg.value(metadata i8 1, metadata !8609, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %25, metadata !8608, metadata !DIExpression()), !dbg !8632
  %call130 = call zeroext i8 @vect_strided_store_supported(%union.tree_node* %1) #6, !dbg !8732
  %tobool131 = icmp eq i8 %call130, 0, !dbg !8732
  br i1 %tobool131, label %land.lhs.true132, label %if.end138, !dbg !8735

land.lhs.true132:                                 ; preds = %if.then128
  %slp_type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 25, !dbg !8736
  %26 = load i32, i32* %slp_type, align 4, !dbg !8736
  %cmp133 = icmp eq i32 %26, 1, !dbg !8736
  %or.cond3 = or i1 %cmp133, %cmp, !dbg !8737
  br i1 %or.cond3, label %if.end138, label %cleanup399, !dbg !8737

if.end138:                                        ; preds = %if.then128, %land.lhs.true132
  %cmp139 = icmp eq %union.gimple_statement_d* %25, %stmt, !dbg !8738
  br i1 %cmp139, label %if.then141, label %if.end162, !dbg !8740

if.then141:                                       ; preds = %if.end138
  br label %while.cond, !dbg !8741

while.cond:                                       ; preds = %if.end158, %if.then141
  %call.pn = phi %struct._stmt_vec_info* [ %call, %if.then141 ], [ %call159, %if.end158 ]
  %next_stmt.0.in = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call.pn, i64 0, i32 18, !dbg !8743
  %next_stmt.0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %next_stmt.0.in, align 8, !dbg !8743
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %next_stmt.0, metadata !8607, metadata !DIExpression()), !dbg !8632
  %tobool142 = icmp eq %union.gimple_statement_d* %next_stmt.0, null, !dbg !8741
  br i1 %tobool142, label %if.end162.loopexit, label %while.body, !dbg !8741

while.body:                                       ; preds = %while.cond
  %call143 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* nonnull %next_stmt.0) #6, !dbg !8744
  %tobool144 = icmp eq i8 %call143, 0, !dbg !8744
  br i1 %tobool144, label %cond.true145, label %cond.end147, !dbg !8744

cond.true145:                                     ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 2994, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8744
  br label %cond.end147, !dbg !8744

cond.end147:                                      ; preds = %while.body, %cond.true145
  %call149 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %next_stmt.0) #8, !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %call149, metadata !8588, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !8599, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !8600, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata i32* %dt, metadata !8601, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  %call150 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call149, %struct._loop_vec_info* %2, %struct._bb_vec_info* %11, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !8747
  %tobool151 = icmp eq i8 %call150, 0, !dbg !8747
  br i1 %tobool151, label %if.then152, label %if.end158, !dbg !8749

if.then152:                                       ; preds = %cond.end147
  %call153 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8750
  %tobool154 = icmp eq i8 %call153, 0, !dbg !8750
  br i1 %tobool154, label %cleanup399, label %if.then155, !dbg !8753

if.then155:                                       ; preds = %if.then152
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8754
  %call156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !8755
  br label %cleanup399, !dbg !8755

if.end158:                                        ; preds = %cond.end147
  %call159 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* nonnull %next_stmt.0) #8, !dbg !8756
  br label %while.cond, !dbg !8741, !llvm.loop !8757

if.end162.loopexit:                               ; preds = %while.cond
  br label %if.end162, !dbg !8759

if.end162:                                        ; preds = %if.end162.loopexit, %if.end124, %if.end138
  %first_stmt.0 = phi %union.gimple_statement_d* [ null, %if.end124 ], [ %25, %if.end138 ], [ %stmt, %if.end162.loopexit ], !dbg !8632
  %strided_store.0 = phi i8 [ 0, %if.end124 ], [ 1, %if.end138 ], [ 1, %if.end162.loopexit ], !dbg !8632
  call void @llvm.dbg.value(metadata i8 %strided_store.0, metadata !8609, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt.0, metadata !8608, metadata !DIExpression()), !dbg !8632
  %tobool163 = icmp eq %union.gimple_statement_d** %vec_stmt, null, !dbg !8759
  br i1 %tobool163, label %if.then164, label %if.end166, !dbg !8761

if.then164:                                       ; preds = %if.end162
  %type165 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !8762
  store i32 2, i32* %type165, align 8, !dbg !8764
  %28 = load i32, i32* %dt, align 4, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %28, metadata !8601, metadata !DIExpression()), !dbg !8632
  call void @vect_model_store_cost(%struct._stmt_vec_info* %call, i32 %ncopies.0, i32 %28, %struct._slp_tree* null) #8, !dbg !8766
  br label %cleanup399, !dbg !8767

if.end166:                                        ; preds = %if.end162
  %tobool167 = icmp eq i8 %strided_store.0, 0, !dbg !8768
  br i1 %tobool167, label %if.end198, label %if.then168, !dbg !8770

if.then168:                                       ; preds = %if.end166
  %call169 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %first_stmt.0) #8, !dbg !8771
  %data_ref_info170 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call169, i64 0, i32 7, !dbg !8771
  %29 = load %struct.data_reference*, %struct.data_reference** %data_ref_info170, align 8, !dbg !8771
  call void @llvm.dbg.value(metadata %struct.data_reference* %29, metadata !8592, metadata !DIExpression()), !dbg !8632
  %call171 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %first_stmt.0) #8, !dbg !8773
  %size = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call171, i64 0, i32 19, !dbg !8773
  %30 = load i32, i32* %size, align 8, !dbg !8773
  call void @llvm.dbg.value(metadata i32 %30, metadata !8610, metadata !DIExpression()), !dbg !8632
  %call172 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %first_stmt.0) #8, !dbg !8774
  %store_count = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call172, i64 0, i32 20, !dbg !8774
  %31 = load i32, i32* %store_count, align 4, !dbg !8775
  %inc = add i32 %31, 1, !dbg !8775
  store i32 %inc, i32* %store_count, align 4, !dbg !8775
  br i1 %tobool12, label %cond.end178, label %lor.lhs.false, !dbg !8776

lor.lhs.false:                                    ; preds = %if.then168
  %call174 = call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* nonnull %loop.0, %union.gimple_statement_d* %stmt) #8, !dbg !8776
  %tobool175 = icmp eq i8 %call174, 0, !dbg !8776
  br i1 %tobool175, label %cond.end178, label %cond.true176, !dbg !8776

cond.true176:                                     ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3025, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8776
  br label %cond.end178, !dbg !8776

cond.end178:                                      ; preds = %lor.lhs.false, %if.then168, %cond.true176
  %call180 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %first_stmt.0) #8, !dbg !8777
  %store_count181 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call180, i64 0, i32 20, !dbg !8777
  %32 = load i32, i32* %store_count181, align 4, !dbg !8777
  %call182 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %first_stmt.0) #8, !dbg !8779
  %size183 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call182, i64 0, i32 19, !dbg !8779
  %33 = load i32, i32* %size183, align 8, !dbg !8779
  %cmp184 = icmp uge i32 %32, %33, !dbg !8780
  %or.cond4 = or i1 %cmp184, %cmp, !dbg !8781
  br i1 %or.cond4, label %if.end189, label %if.then188, !dbg !8781

if.then188:                                       ; preds = %cond.end178
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !8782
  br label %cleanup399, !dbg !8784

if.end189:                                        ; preds = %cond.end178
  %spec.select = select i1 %cmp, i8 0, i8 %strided_store.0, !dbg !8785
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !8609, metadata !DIExpression()), !dbg !8632
  br i1 %cmp, label %if.then194, label %if.end198, !dbg !8786

if.then194:                                       ; preds = %if.end189
  %vec_stmts_size = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 4, !dbg !8787
  %34 = load i32, i32* %vec_stmts_size, align 8, !dbg !8787
  call void @llvm.dbg.value(metadata i32 %34, metadata !8618, metadata !DIExpression()), !dbg !8632
  br label %if.end198, !dbg !8789

if.end198:                                        ; preds = %if.end166, %if.then194, %if.end189
  %first_dr.0 = phi %struct.data_reference* [ %29, %if.end189 ], [ %29, %if.then194 ], [ %0, %if.end166 ], !dbg !8790
  %first_stmt.1 = phi %union.gimple_statement_d* [ %first_stmt.0, %if.end189 ], [ %first_stmt.0, %if.then194 ], [ %stmt, %if.end166 ], !dbg !8632
  %strided_store.2 = phi i8 [ %spec.select, %if.end189 ], [ %spec.select, %if.then194 ], [ 0, %if.end166 ], !dbg !8632
  %group_size.0 = phi i32 [ %30, %if.end189 ], [ %30, %if.then194 ], [ 1, %if.end166 ], !dbg !8790
  %vec_num.1 = phi i32 [ %30, %if.end189 ], [ %34, %if.then194 ], [ 1, %if.end166 ], !dbg !8790
  call void @llvm.dbg.value(metadata i32 %vec_num.1, metadata !8618, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i32 %group_size.0, metadata !8610, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i8 %strided_store.2, metadata !8609, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt.1, metadata !8608, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.data_reference* %first_dr.0, metadata !8592, metadata !DIExpression()), !dbg !8632
  %call199 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !8791
  %tobool200 = icmp eq i8 %call199, 0, !dbg !8791
  br i1 %tobool200, label %if.end203, label %if.then201, !dbg !8793

if.then201:                                       ; preds = %if.end198
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !8794
  %call202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.91, i64 0, i64 0), i32 %ncopies.0) #6, !dbg !8795
  br label %if.end203, !dbg !8795

if.end203:                                        ; preds = %if.end198, %if.then201
  %call204 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %group_size.0) #8, !dbg !8796
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call204, metadata !8612, metadata !DIExpression()), !dbg !8632
  store %struct.VEC_tree_heap* %call204, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8797
  %call205 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %group_size.0) #8, !dbg !8798
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call205, metadata !8613, metadata !DIExpression()), !dbg !8632
  store %struct.VEC_tree_heap* %call205, %struct.VEC_tree_heap** %oprnds, align 8, !dbg !8799
  %call206 = call i32 @vect_supportable_dr_alignment(%struct.data_reference* %first_dr.0) #6, !dbg !8800
  call void @llvm.dbg.value(metadata i32 %call206, metadata !8598, metadata !DIExpression()), !dbg !8632
  %tobool207 = icmp eq i32 %call206, 0, !dbg !8801
  br i1 %tobool207, label %cond.true208, label %cond.end210, !dbg !8801

cond.true208:                                     ; preds = %if.end203
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3060, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8801
  br label %cond.end210, !dbg !8801

cond.end210:                                      ; preds = %if.end203, %cond.true208
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* null, metadata !8602, metadata !DIExpression()), !dbg !8632
  %36 = bitcast %union.gimple_statement_d** %ptr_incr to i8*, !dbg !8802
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7, !dbg !8802
  call void @llvm.dbg.value(metadata i32 0, metadata !8606, metadata !DIExpression()), !dbg !8632
  %tobool269 = icmp eq %struct._bb_vec_info* %11, null, !dbg !8803
  %tobool309 = icmp eq i8 %strided_store.2, 0, !dbg !8806
  %aux = getelementptr inbounds %struct.data_reference, %struct.data_reference* %first_dr.0, i64 0, i32 2, !dbg !8808
  %37 = bitcast i8** %aux to i64*, !dbg !8808
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !8809
  br label %for.cond, !dbg !8811

for.cond:                                         ; preds = %for.inc392, %cond.end210
  %prev_stmt_info.0 = phi %struct._stmt_vec_info* [ null, %cond.end210 ], [ %prev_stmt_info.4, %for.inc392 ], !dbg !8632
  %dataref_ptr.0 = phi %union.tree_node* [ null, %cond.end210 ], [ %dataref_ptr.5, %for.inc392 ], !dbg !8632
  %j.0 = phi i32 [ 0, %cond.end210 ], [ %inc393, %for.inc392 ], !dbg !8812
  %vec_oprnd.0 = phi %union.tree_node* [ null, %cond.end210 ], [ %vec_oprnd.9, %for.inc392 ], !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.0, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !8606, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.0, metadata !8603, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !8602, metadata !DIExpression()), !dbg !8632
  %cmp212 = icmp slt i32 %j.0, %ncopies.0, !dbg !8813
  br i1 %cmp212, label %for.body, label %for.end394, !dbg !8814

for.body:                                         ; preds = %for.cond
  %cmp214 = icmp eq i32 %j.0, 0, !dbg !8815
  br i1 %cmp214, label %if.then216, label %for.cond277.preheader, !dbg !8816

for.cond277.preheader:                            ; preds = %for.body
  br label %for.cond277, !dbg !8817

if.then216:                                       ; preds = %for.body
  br i1 %cmp, label %if.then218, label %for.cond227.preheader, !dbg !8820

for.cond227.preheader:                            ; preds = %if.then216
  br label %for.cond227, !dbg !8821

if.then218:                                       ; preds = %if.then216
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds, metadata !8616, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @vect_get_slp_defs(%struct._slp_tree* nonnull %slp_node, %struct.VEC_tree_heap** nonnull %vec_oprnds, %struct.VEC_tree_heap** null) #6, !dbg !8825
  %38 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !8827
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %38, metadata !8616, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %38, metadata !8616, metadata !DIExpression()), !dbg !8632
  %base221 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %38, i64 0, i32 0, !dbg !8827
  %call225 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base221, i32 0) #8, !dbg !8827
  call void @llvm.dbg.value(metadata %union.tree_node* %call225, metadata !8589, metadata !DIExpression()), !dbg !8632
  br label %if.end259, !dbg !8828

for.cond227:                                      ; preds = %for.cond227.preheader, %cond.end238
  %next_stmt.1 = phi %union.gimple_statement_d* [ %41, %cond.end238 ], [ %first_stmt.1, %for.cond227.preheader ], !dbg !8829
  %vec_oprnd.1 = phi %union.tree_node* [ %call241, %cond.end238 ], [ %vec_oprnd.0, %for.cond227.preheader ], !dbg !8632
  %i.0 = phi i32 [ %inc258, %cond.end238 ], [ 0, %for.cond227.preheader ], !dbg !8830
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8611, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.1, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %next_stmt.1, metadata !8607, metadata !DIExpression()), !dbg !8632
  %exitcond14 = icmp eq i32 %i.0, %group_size.0, !dbg !8831
  br i1 %exitcond14, label %if.end259.loopexit, label %for.body230, !dbg !8821

for.body230:                                      ; preds = %for.cond227
  %tobool231 = icmp eq %union.gimple_statement_d* %next_stmt.1, null, !dbg !8833
  br i1 %tobool231, label %cond.true236, label %land.lhs.true232, !dbg !8833

land.lhs.true232:                                 ; preds = %for.body230
  %call233 = call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* nonnull %next_stmt.1) #6, !dbg !8833
  %tobool235 = icmp eq i8 %call233, 0, !dbg !8833
  br i1 %tobool235, label %cond.true236, label %cond.end238, !dbg !8833

cond.true236:                                     ; preds = %land.lhs.true232, %for.body230
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8833
  br label %cond.end238, !dbg !8833

cond.end238:                                      ; preds = %land.lhs.true232, %cond.true236
  %call240 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %next_stmt.1) #8, !dbg !8835
  call void @llvm.dbg.value(metadata %union.tree_node* %call240, metadata !8588, metadata !DIExpression()), !dbg !8632
  %call241 = call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %call240, %union.gimple_statement_d* %next_stmt.1, %union.tree_node** null) #8, !dbg !8836
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !8589, metadata !DIExpression()), !dbg !8632
  %39 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8837
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %39, metadata !8612, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %39, metadata !8612, metadata !DIExpression()), !dbg !8632
  %base244 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %39, i64 0, i32 0, !dbg !8837
  %call248 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base244, %union.tree_node* %call241) #8, !dbg !8837
  %40 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %oprnds, align 8, !dbg !8838
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %40, metadata !8613, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %40, metadata !8613, metadata !DIExpression()), !dbg !8632
  %base251 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %40, i64 0, i32 0, !dbg !8838
  %call255 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base251, %union.tree_node* %call241) #8, !dbg !8838
  %call256 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %next_stmt.1) #8, !dbg !8839
  %next_dr257 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call256, i64 0, i32 18, !dbg !8839
  %41 = load %union.gimple_statement_d*, %union.gimple_statement_d** %next_dr257, align 8, !dbg !8839
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %41, metadata !8607, metadata !DIExpression()), !dbg !8632
  %inc258 = add i32 %i.0, 1, !dbg !8840
  call void @llvm.dbg.value(metadata i32 %inc258, metadata !8611, metadata !DIExpression()), !dbg !8632
  br label %for.cond227, !dbg !8841, !llvm.loop !8842

if.end259.loopexit:                               ; preds = %for.cond227
  %vec_oprnd.1.lcssa = phi %union.tree_node* [ %vec_oprnd.1, %for.cond227 ], !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.1.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.1.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.1.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  br label %if.end259, !dbg !8844

if.end259:                                        ; preds = %if.end259.loopexit, %if.then218
  %vec_oprnd.2 = phi %union.tree_node* [ %call225, %if.then218 ], [ %vec_oprnd.1.lcssa, %if.end259.loopexit ], !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.2, metadata !8589, metadata !DIExpression()), !dbg !8632
  %type261 = getelementptr inbounds %union.tree_node, %union.tree_node* %vec_oprnd.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8844
  %42 = load %union.tree_node*, %union.tree_node** %type261, align 8, !dbg !8844
  %call262 = call zeroext i8 @useless_type_conversion_p(%union.tree_node* %1, %union.tree_node* %42) #6, !dbg !8844
  %tobool263 = icmp eq i8 %call262, 0, !dbg !8844
  br i1 %tobool263, label %cond.true264, label %cond.end266, !dbg !8844

cond.true264:                                     ; preds = %if.end259
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3152, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8844
  br label %cond.end266, !dbg !8844

cond.end266:                                      ; preds = %if.end259, %cond.true264
  call void @llvm.dbg.value(metadata %union.tree_node** %dummy, metadata !8597, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata i8* %inv_p, metadata !8615, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ptr_incr, metadata !8620, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  %call268 = call %union.tree_node* @vect_create_data_ref_ptr(%union.gimple_statement_d* %first_stmt.1, %struct.loop* null, %union.tree_node* null, %union.tree_node** nonnull %dummy, %union.gimple_statement_d** nonnull %ptr_incr, i8 zeroext 0, i8* nonnull %inv_p) #6, !dbg !8845
  call void @llvm.dbg.value(metadata %union.tree_node* %call268, metadata !8603, metadata !DIExpression()), !dbg !8632
  %43 = load i8, i8* %inv_p, align 1, !dbg !8846
  call void @llvm.dbg.value(metadata i8 %43, metadata !8615, metadata !DIExpression()), !dbg !8632
  %tobool271 = icmp ne i8 %43, 0, !dbg !8846
  %or.cond5 = and i1 %tobool269, %tobool271, !dbg !8846
  br i1 %or.cond5, label %cond.true272, label %if.end308, !dbg !8846

cond.true272:                                     ; preds = %cond.end266
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3156, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8846
  br label %if.end308, !dbg !8846

for.cond277:                                      ; preds = %for.cond277.preheader, %for.body280
  %vec_oprnd.3 = phi %union.tree_node* [ %call289, %for.body280 ], [ %vec_oprnd.0, %for.cond277.preheader ], !dbg !8632
  %i.1 = phi i32 [ %inc305, %for.body280 ], [ 0, %for.cond277.preheader ], !dbg !8847
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !8611, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.3, metadata !8589, metadata !DIExpression()), !dbg !8632
  %exitcond = icmp eq i32 %i.1, %group_size.0, !dbg !8848
  br i1 %exitcond, label %for.end306, label %for.body280, !dbg !8817

for.body280:                                      ; preds = %for.cond277
  %44 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %oprnds, align 8, !dbg !8850
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %44, metadata !8613, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %44, metadata !8613, metadata !DIExpression()), !dbg !8632
  %base283 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %44, i64 0, i32 0, !dbg !8850
  %call287 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base283, i32 %i.1) #8, !dbg !8850
  call void @llvm.dbg.value(metadata %union.tree_node* %call287, metadata !8588, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !8599, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %def_stmt, metadata !8600, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.dbg.value(metadata i32* %dt, metadata !8601, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  %call288 = call zeroext i8 @vect_is_simple_use(%union.tree_node* %call287, %struct._loop_vec_info* %2, %struct._bb_vec_info* %11, %union.gimple_statement_d** nonnull %def_stmt, %union.tree_node** nonnull %def, i32* nonnull %dt) #8, !dbg !8852
  %45 = load i32, i32* %dt, align 4, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %45, metadata !8601, metadata !DIExpression()), !dbg !8632
  %call289 = call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %45, %union.tree_node* %call287) #8, !dbg !8854
  call void @llvm.dbg.value(metadata %union.tree_node* %call289, metadata !8589, metadata !DIExpression()), !dbg !8632
  %46 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8855
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %46, metadata !8612, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %46, metadata !8612, metadata !DIExpression()), !dbg !8632
  %base292 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %46, i64 0, i32 0, !dbg !8855
  %call296 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base292, i32 %i.1, %union.tree_node* %call289) #8, !dbg !8855
  %47 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %oprnds, align 8, !dbg !8856
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %47, metadata !8613, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %47, metadata !8613, metadata !DIExpression()), !dbg !8632
  %base299 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %47, i64 0, i32 0, !dbg !8856
  %call303 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %base299, i32 %i.1, %union.tree_node* %call289) #8, !dbg !8856
  %inc305 = add i32 %i.1, 1, !dbg !8857
  call void @llvm.dbg.value(metadata i32 %inc305, metadata !8611, metadata !DIExpression()), !dbg !8632
  br label %for.cond277, !dbg !8858, !llvm.loop !8859

for.end306:                                       ; preds = %for.cond277
  %vec_oprnd.3.lcssa = phi %union.tree_node* [ %vec_oprnd.3, %for.cond277 ], !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.3.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.3.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.3.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  %48 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ptr_incr, align 8, !dbg !8861
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %48, metadata !8620, metadata !DIExpression()), !dbg !8632
  %call307 = call %union.tree_node* @bump_vector_ptr(%union.tree_node* %dataref_ptr.0, %union.gimple_statement_d* %48, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt, %union.tree_node* null) #6, !dbg !8862
  call void @llvm.dbg.value(metadata %union.tree_node* %call307, metadata !8603, metadata !DIExpression()), !dbg !8632
  br label %if.end308

if.end308:                                        ; preds = %cond.true272, %cond.end266, %for.end306
  %dataref_ptr.1 = phi %union.tree_node* [ %call307, %for.end306 ], [ %call268, %cond.end266 ], [ %call268, %cond.true272 ], !dbg !8863
  %vec_oprnd.4 = phi %union.tree_node* [ %vec_oprnd.3.lcssa, %for.end306 ], [ %vec_oprnd.2, %cond.end266 ], [ %vec_oprnd.2, %cond.true272 ], !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.4, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.1, metadata !8603, metadata !DIExpression()), !dbg !8632
  br i1 %tobool309, label %if.end316, label %if.then310, !dbg !8864

if.then310:                                       ; preds = %if.end308
  %call311 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %group_size.0) #8, !dbg !8865
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call311, metadata !8614, metadata !DIExpression()), !dbg !8632
  store %struct.VEC_tree_heap* %call311, %struct.VEC_tree_heap** %result_chain, align 8, !dbg !8867
  %49 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dr_chain, align 8, !dbg !8868
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %49, metadata !8612, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %result_chain, metadata !8614, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  %call312 = call zeroext i8 @vect_permute_store_chain(%struct.VEC_tree_heap* %49, i32 %group_size.0, %union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %struct.VEC_tree_heap** nonnull %result_chain) #6, !dbg !8870
  %tobool313 = icmp eq i8 %call312, 0, !dbg !8870
  br i1 %tobool313, label %cleanup, label %if.end316, !dbg !8871

if.end316:                                        ; preds = %if.then310, %if.end308
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt.1, metadata !8607, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i32 0, metadata !8611, metadata !DIExpression()), !dbg !8632
  br i1 %cmp, label %if.end316.split.us, label %if.end316.if.end316.split_crit_edge, !dbg !8872

if.end316.if.end316.split_crit_edge:              ; preds = %if.end316
  br label %for.cond317, !dbg !8872

if.end316.split.us:                               ; preds = %if.end316
  br label %for.cond317.us, !dbg !8872

for.cond317.us:                                   ; preds = %cond.end372.us, %if.end316.split.us
  %dataref_ptr.2.us = phi %union.tree_node* [ %dataref_ptr.1, %if.end316.split.us ], [ %dataref_ptr.3.us, %cond.end372.us ], !dbg !8873
  %vec_oprnd.5.us = phi %union.tree_node* [ %vec_oprnd.4, %if.end316.split.us ], [ %call334.us, %cond.end372.us ], !dbg !8873
  %i.2.us = phi i32 [ 0, %if.end316.split.us ], [ %inc390.us, %cond.end372.us ], !dbg !8874
  call void @llvm.dbg.value(metadata i32 %i.2.us, metadata !8611, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.5.us, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt.1, metadata !8607, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2.us, metadata !8603, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !8602, metadata !DIExpression()), !dbg !8632
  %exitcond16 = icmp eq i32 %i.2.us, %vec_num.1, !dbg !8875
  br i1 %exitcond16, label %cleanup.loopexit.us-lcssa.us, label %for.body320.us, !dbg !8876

for.body320.us:                                   ; preds = %for.cond317.us
  %cmp321.us = icmp eq i32 %i.2.us, 0, !dbg !8877
  br i1 %cmp321.us, label %if.end325.us, label %if.then323.us, !dbg !8879

if.then323.us:                                    ; preds = %for.body320.us
  %50 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ptr_incr, align 8, !dbg !8880
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %50, metadata !8620, metadata !DIExpression()), !dbg !8632
  %call324.us = call %union.tree_node* @bump_vector_ptr(%union.tree_node* %dataref_ptr.2.us, %union.gimple_statement_d* %50, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt, %union.tree_node* null) #6, !dbg !8881
  call void @llvm.dbg.value(metadata %union.tree_node* %call324.us, metadata !8603, metadata !DIExpression()), !dbg !8632
  br label %if.end325.us, !dbg !8882

if.end325.us:                                     ; preds = %if.then323.us, %for.body320.us
  %dataref_ptr.3.us = phi %union.tree_node* [ %call324.us, %if.then323.us ], [ %dataref_ptr.2.us, %for.body320.us ], !dbg !8873
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.3.us, metadata !8603, metadata !DIExpression()), !dbg !8632
  %51 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !8883
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %51, metadata !8616, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %51, metadata !8616, metadata !DIExpression()), !dbg !8632
  %base330.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %51, i64 0, i32 0, !dbg !8883
  %call334.us = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base330.us, i32 %i.2.us) #8, !dbg !8883
  call void @llvm.dbg.value(metadata %union.tree_node* %call334.us, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %call334.us, metadata !8589, metadata !DIExpression()), !dbg !8632
  %call347.us = call fastcc zeroext i8 @aligned_access_p(%struct.data_reference* %first_dr.0) #8, !dbg !8885
  %tobool348.us = icmp eq i8 %call347.us, 0, !dbg !8885
  br i1 %tobool348.us, label %if.else351.us, label %if.then349.us, !dbg !8886

if.then349.us:                                    ; preds = %if.end325.us
  %call350.us = call %union.tree_node* @build_fold_indirect_ref_loc(i32 0, %union.tree_node* %dataref_ptr.3.us) #6, !dbg !8887
  call void @llvm.dbg.value(metadata %union.tree_node* %call350.us, metadata !8587, metadata !DIExpression()), !dbg !8632
  br label %if.end364.us, !dbg !8888

if.else351.us:                                    ; preds = %if.end325.us
  %52 = load i64, i64* %37, align 8, !dbg !8889
  %conv352.us = trunc i64 %52 to i32, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %conv352.us, metadata !8625, metadata !DIExpression()), !dbg !8808
  %cmp353.us = icmp eq i32 %conv352.us, -1, !dbg !8890
  br i1 %cmp353.us, label %cond.true355.us, label %cond.false356.us, !dbg !8891

cond.false356.us:                                 ; preds = %if.else351.us
  %sext.us = shl i64 %52, 32, !dbg !8892
  %conv357.us = ashr exact i64 %sext.us, 32, !dbg !8892
  %call358.us = call %union.tree_node* @size_int_kind(i64 %conv357.us, i32 0) #6, !dbg !8892
  br label %cond.end359.us, !dbg !8891

cond.true355.us:                                  ; preds = %if.else351.us
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !8893
  br label %cond.end359.us, !dbg !8891

cond.end359.us:                                   ; preds = %cond.true355.us, %cond.false356.us
  %cond360.us = phi %union.tree_node* [ %53, %cond.true355.us ], [ %call358.us, %cond.false356.us ], !dbg !8891
  call void @llvm.dbg.value(metadata %union.tree_node* %cond360.us, metadata !8631, metadata !DIExpression()), !dbg !8808
  %call361.us = call %union.tree_node* @size_int_kind(i64 8, i32 0) #6, !dbg !8894
  %call362.us = call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %cond360.us, %union.tree_node* %call361.us) #6, !dbg !8894
  call void @llvm.dbg.value(metadata %union.tree_node* %call362.us, metadata !8631, metadata !DIExpression()), !dbg !8808
  %call363.us = call %union.tree_node* @build2_stat(i32 49, %union.tree_node* %1, %union.tree_node* %dataref_ptr.3.us, %union.tree_node* %call362.us) #6, !dbg !8895
  call void @llvm.dbg.value(metadata %union.tree_node* %call363.us, metadata !8587, metadata !DIExpression()), !dbg !8632
  br label %if.end364.us

if.end364.us:                                     ; preds = %cond.end359.us, %if.then349.us
  %data_ref.0.us = phi %union.tree_node* [ %call350.us, %if.then349.us ], [ %call363.us, %cond.end359.us ], !dbg !8896
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.0.us, metadata !8587, metadata !DIExpression()), !dbg !8632
  %call365.us = call i32 @get_alias_set(%union.tree_node* %data_ref.0.us) #6, !dbg !8897
  %call366.us = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8897
  %call367.us = call i32 @get_alias_set(%union.tree_node* %call366.us) #6, !dbg !8897
  %call368.us = call i32 @alias_sets_conflict_p(i32 %call365.us, i32 %call367.us) #6, !dbg !8897
  %tobool369.us = icmp eq i32 %call368.us, 0, !dbg !8897
  br i1 %tobool369.us, label %cond.true370.us, label %cond.end372.us, !dbg !8897

cond.true370.us:                                  ; preds = %if.end364.us
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8897
  br label %cond.end372.us, !dbg !8897

cond.end372.us:                                   ; preds = %cond.true370.us, %if.end364.us
  %call374.us = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %data_ref.0.us, %union.tree_node* %call334.us) #6, !dbg !8898
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call374.us, metadata !8621, metadata !DIExpression()), !dbg !8873
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call374.us, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8899
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call374.us) #6, !dbg !8900
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt.1, metadata !8607, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.0, metadata !8602, metadata !DIExpression()), !dbg !8632
  %inc390.us = add i32 %i.2.us, 1, !dbg !8901
  call void @llvm.dbg.value(metadata i32 %inc390.us, metadata !8611, metadata !DIExpression()), !dbg !8632
  br label %for.cond317.us, !dbg !8902, !llvm.loop !8903

cleanup.loopexit.us-lcssa.us:                     ; preds = %for.cond317.us
  %dataref_ptr.2.us.lcssa = phi %union.tree_node* [ %dataref_ptr.2.us, %for.cond317.us ], !dbg !8873
  %vec_oprnd.5.us.lcssa = phi %union.tree_node* [ %vec_oprnd.5.us, %for.cond317.us ], !dbg !8873
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2.us.lcssa, metadata !8603, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.5.us.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2.us.lcssa, metadata !8603, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.5.us.lcssa, metadata !8589, metadata !DIExpression()), !dbg !8632
  br label %cleanup.loopexit

for.cond317:                                      ; preds = %for.inc389, %if.end316.if.end316.split_crit_edge
  %prev_stmt_info.1 = phi %struct._stmt_vec_info* [ %prev_stmt_info.0, %if.end316.if.end316.split_crit_edge ], [ %call383, %for.inc389 ], !dbg !8905
  %dataref_ptr.2 = phi %union.tree_node* [ %dataref_ptr.1, %if.end316.if.end316.split_crit_edge ], [ %dataref_ptr.3, %for.inc389 ], !dbg !8873
  %next_stmt.2 = phi %union.gimple_statement_d* [ %first_stmt.1, %if.end316.if.end316.split_crit_edge ], [ %58, %for.inc389 ], !dbg !8906
  %vec_oprnd.5 = phi %union.tree_node* [ %vec_oprnd.4, %if.end316.if.end316.split_crit_edge ], [ %vec_oprnd.7, %for.inc389 ], !dbg !8873
  %i.2 = phi i32 [ 0, %if.end316.if.end316.split_crit_edge ], [ %inc390, %for.inc389 ], !dbg !8874
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !8611, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.5, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %next_stmt.2, metadata !8607, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.2, metadata !8603, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.1, metadata !8602, metadata !DIExpression()), !dbg !8632
  %exitcond15 = icmp eq i32 %i.2, %vec_num.1, !dbg !8875
  br i1 %exitcond15, label %cleanup.loopexit.us-lcssa, label %for.body320, !dbg !8876

for.body320:                                      ; preds = %for.cond317
  %cmp321 = icmp eq i32 %i.2, 0, !dbg !8877
  br i1 %cmp321, label %if.end325, label %if.then323, !dbg !8879

if.then323:                                       ; preds = %for.body320
  %54 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ptr_incr, align 8, !dbg !8880
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %54, metadata !8620, metadata !DIExpression()), !dbg !8632
  %call324 = call %union.tree_node* @bump_vector_ptr(%union.tree_node* %dataref_ptr.2, %union.gimple_statement_d* %54, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt, %union.tree_node* null) #6, !dbg !8881
  call void @llvm.dbg.value(metadata %union.tree_node* %call324, metadata !8603, metadata !DIExpression()), !dbg !8632
  br label %if.end325, !dbg !8882

if.end325:                                        ; preds = %for.body320, %if.then323
  %dataref_ptr.3 = phi %union.tree_node* [ %call324, %if.then323 ], [ %dataref_ptr.2, %for.body320 ], !dbg !8873
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.3, metadata !8603, metadata !DIExpression()), !dbg !8632
  br i1 %tobool309, label %if.end346, label %if.then337, !dbg !8907

if.then337:                                       ; preds = %if.end325
  %55 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %result_chain, align 8, !dbg !8908
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %55, metadata !8614, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %55, metadata !8614, metadata !DIExpression()), !dbg !8632
  %base340 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %55, i64 0, i32 0, !dbg !8908
  %call344 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base340, i32 %i.2) #8, !dbg !8908
  call void @llvm.dbg.value(metadata %union.tree_node* %call344, metadata !8589, metadata !DIExpression()), !dbg !8632
  br label %if.end346, !dbg !8910

if.end346:                                        ; preds = %if.end325, %if.then337
  %vec_oprnd.7 = phi %union.tree_node* [ %call344, %if.then337 ], [ %vec_oprnd.5, %if.end325 ], !dbg !8911
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.7, metadata !8589, metadata !DIExpression()), !dbg !8632
  %call347 = call fastcc zeroext i8 @aligned_access_p(%struct.data_reference* %first_dr.0) #8, !dbg !8885
  %tobool348 = icmp eq i8 %call347, 0, !dbg !8885
  br i1 %tobool348, label %if.else351, label %if.then349, !dbg !8886

if.then349:                                       ; preds = %if.end346
  %call350 = call %union.tree_node* @build_fold_indirect_ref_loc(i32 0, %union.tree_node* %dataref_ptr.3) #6, !dbg !8887
  call void @llvm.dbg.value(metadata %union.tree_node* %call350, metadata !8587, metadata !DIExpression()), !dbg !8632
  br label %if.end364, !dbg !8888

if.else351:                                       ; preds = %if.end346
  %56 = load i64, i64* %37, align 8, !dbg !8889
  %conv352 = trunc i64 %56 to i32, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %conv352, metadata !8625, metadata !DIExpression()), !dbg !8808
  %cmp353 = icmp eq i32 %conv352, -1, !dbg !8890
  br i1 %cmp353, label %cond.true355, label %cond.false356, !dbg !8891

cond.true355:                                     ; preds = %if.else351
  %57 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !8893
  br label %cond.end359, !dbg !8891

cond.false356:                                    ; preds = %if.else351
  %sext = shl i64 %56, 32, !dbg !8892
  %conv357 = ashr exact i64 %sext, 32, !dbg !8892
  %call358 = call %union.tree_node* @size_int_kind(i64 %conv357, i32 0) #6, !dbg !8892
  br label %cond.end359, !dbg !8891

cond.end359:                                      ; preds = %cond.false356, %cond.true355
  %cond360 = phi %union.tree_node* [ %57, %cond.true355 ], [ %call358, %cond.false356 ], !dbg !8891
  call void @llvm.dbg.value(metadata %union.tree_node* %cond360, metadata !8631, metadata !DIExpression()), !dbg !8808
  %call361 = call %union.tree_node* @size_int_kind(i64 8, i32 0) #6, !dbg !8894
  %call362 = call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %cond360, %union.tree_node* %call361) #6, !dbg !8894
  call void @llvm.dbg.value(metadata %union.tree_node* %call362, metadata !8631, metadata !DIExpression()), !dbg !8808
  %call363 = call %union.tree_node* @build2_stat(i32 49, %union.tree_node* %1, %union.tree_node* %dataref_ptr.3, %union.tree_node* %call362) #6, !dbg !8895
  call void @llvm.dbg.value(metadata %union.tree_node* %call363, metadata !8587, metadata !DIExpression()), !dbg !8632
  br label %if.end364

if.end364:                                        ; preds = %cond.end359, %if.then349
  %data_ref.0 = phi %union.tree_node* [ %call350, %if.then349 ], [ %call363, %cond.end359 ], !dbg !8896
  call void @llvm.dbg.value(metadata %union.tree_node* %data_ref.0, metadata !8587, metadata !DIExpression()), !dbg !8632
  %call365 = call i32 @get_alias_set(%union.tree_node* %data_ref.0) #6, !dbg !8897
  %call366 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !8897
  %call367 = call i32 @get_alias_set(%union.tree_node* %call366) #6, !dbg !8897
  %call368 = call i32 @alias_sets_conflict_p(i32 %call365, i32 %call367) #6, !dbg !8897
  %tobool369 = icmp eq i32 %call368, 0, !dbg !8897
  br i1 %tobool369, label %cond.true370, label %cond.end372, !dbg !8897

cond.true370:                                     ; preds = %if.end364
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 3217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8897
  br label %cond.end372, !dbg !8897

cond.end372:                                      ; preds = %if.end364, %cond.true370
  %call374 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %data_ref.0, %union.tree_node* %vec_oprnd.7) #6, !dbg !8898
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call374, metadata !8621, metadata !DIExpression()), !dbg !8873
  call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call374, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !8899
  call void @mark_symbols_for_renaming(%union.gimple_statement_d* %call374) #6, !dbg !8900
  br i1 %cmp214, label %if.then380, label %if.else381, !dbg !8912

if.then380:                                       ; preds = %cond.end372
  store %union.gimple_statement_d* %call374, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !8913
  store %union.gimple_statement_d* %call374, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !8914
  br label %if.end382, !dbg !8915

if.else381:                                       ; preds = %cond.end372
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %prev_stmt_info.1, i64 0, i32 14, !dbg !8916
  store %union.gimple_statement_d* %call374, %union.gimple_statement_d** %related_stmt, align 8, !dbg !8917
  br label %if.end382

if.end382:                                        ; preds = %if.else381, %if.then380
  %call383 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call374) #8, !dbg !8918
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call383, metadata !8602, metadata !DIExpression()), !dbg !8632
  %call384 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %next_stmt.2) #8, !dbg !8919
  %next_dr385 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call384, i64 0, i32 18, !dbg !8919
  %58 = load %union.gimple_statement_d*, %union.gimple_statement_d** %next_dr385, align 8, !dbg !8919
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %58, metadata !8607, metadata !DIExpression()), !dbg !8632
  %tobool386 = icmp eq %union.gimple_statement_d* %58, null, !dbg !8920
  br i1 %tobool386, label %cleanup.loopexit.us-lcssa, label %for.inc389, !dbg !8922

for.inc389:                                       ; preds = %if.end382
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %58, metadata !8607, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call383, metadata !8602, metadata !DIExpression()), !dbg !8632
  %inc390 = add i32 %i.2, 1, !dbg !8901
  call void @llvm.dbg.value(metadata i32 %inc390, metadata !8611, metadata !DIExpression()), !dbg !8632
  br label %for.cond317, !dbg !8902, !llvm.loop !8903

cleanup.loopexit.us-lcssa:                        ; preds = %for.cond317, %if.end382
  %prev_stmt_info.4.ph.ph = phi %struct._stmt_vec_info* [ %prev_stmt_info.1, %for.cond317 ], [ %call383, %if.end382 ]
  %dataref_ptr.5.ph.ph = phi %union.tree_node* [ %dataref_ptr.2, %for.cond317 ], [ %dataref_ptr.3, %if.end382 ]
  %vec_oprnd.9.ph.ph = phi %union.tree_node* [ %vec_oprnd.5, %for.cond317 ], [ %vec_oprnd.7, %if.end382 ]
  br label %cleanup.loopexit

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  %prev_stmt_info.4.ph = phi %struct._stmt_vec_info* [ %prev_stmt_info.4.ph.ph, %cleanup.loopexit.us-lcssa ], [ %prev_stmt_info.0, %cleanup.loopexit.us-lcssa.us ]
  %dataref_ptr.5.ph = phi %union.tree_node* [ %dataref_ptr.5.ph.ph, %cleanup.loopexit.us-lcssa ], [ %dataref_ptr.2.us.lcssa, %cleanup.loopexit.us-lcssa.us ]
  %vec_oprnd.9.ph = phi %union.tree_node* [ %vec_oprnd.9.ph.ph, %cleanup.loopexit.us-lcssa ], [ %vec_oprnd.5.us.lcssa, %cleanup.loopexit.us-lcssa.us ]
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then310
  %prev_stmt_info.4 = phi %struct._stmt_vec_info* [ %prev_stmt_info.0, %if.then310 ], [ %prev_stmt_info.4.ph, %cleanup.loopexit ], !dbg !8632
  %dataref_ptr.5 = phi %union.tree_node* [ %dataref_ptr.1, %if.then310 ], [ %dataref_ptr.5.ph, %cleanup.loopexit ], !dbg !8873
  %vec_oprnd.9 = phi %union.tree_node* [ %vec_oprnd.4, %if.then310 ], [ %vec_oprnd.9.ph, %cleanup.loopexit ], !dbg !8873
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then310 ], [ true, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.9, metadata !8589, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %union.tree_node* %dataref_ptr.5, metadata !8603, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %prev_stmt_info.4, metadata !8602, metadata !DIExpression()), !dbg !8632
  br i1 %cleanup.dest.slot.0, label %for.inc392, label %cleanup398.loopexit

for.inc392:                                       ; preds = %cleanup
  %inc393 = add nuw nsw i32 %j.0, 1, !dbg !8923
  call void @llvm.dbg.value(metadata i32 %inc393, metadata !8606, metadata !DIExpression()), !dbg !8632
  br label %for.cond, !dbg !8924, !llvm.loop !8925

for.end394:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %dr_chain, metadata !8612, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %dr_chain) #8, !dbg !8927
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %oprnds, metadata !8613, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %oprnds) #8, !dbg !8928
  %59 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %result_chain, align 8, !dbg !8929
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %59, metadata !8614, metadata !DIExpression()), !dbg !8632
  %tobool395 = icmp eq %struct.VEC_tree_heap* %59, null, !dbg !8929
  br i1 %tobool395, label %cleanup398, label %if.then396, !dbg !8931

if.then396:                                       ; preds = %for.end394
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %result_chain, metadata !8614, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %result_chain) #8, !dbg !8932
  br label %cleanup398, !dbg !8932

cleanup398.loopexit:                              ; preds = %cleanup
  br label %cleanup398, !dbg !8933

cleanup398:                                       ; preds = %cleanup398.loopexit, %for.end394, %if.then396
  %retval.2 = phi i8 [ 1, %if.then396 ], [ 1, %for.end394 ], [ 0, %cleanup398.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7, !dbg !8933
  br label %cleanup399

cleanup399:                                       ; preds = %if.then19, %land.lhs.true66, %if.then152, %if.end120, %if.then96, %if.then84, %if.end35, %if.end31, %if.then155, %land.lhs.true132, %cond.end115, %if.then99, %if.then87, %if.end25, %if.then22, %cleanup398, %if.then188, %if.then164
  %retval.3 = phi i8 [ %retval.2, %cleanup398 ], [ 1, %if.then188 ], [ 1, %if.then164 ], [ 0, %if.then22 ], [ 0, %if.then19 ], [ 0, %if.end25 ], [ 0, %if.end31 ], [ 0, %if.end35 ], [ 0, %land.lhs.true66 ], [ 0, %if.then87 ], [ 0, %if.then84 ], [ 0, %if.then99 ], [ 0, %if.then96 ], [ 0, %cond.end115 ], [ 0, %if.end120 ], [ 0, %land.lhs.true132 ], [ 0, %if.then155 ], [ 0, %if.then152 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7, !dbg !8933
  call void @llvm.dbg.value(metadata i8* %inv_p, metadata !8615, metadata !DIExpression(DW_OP_deref)), !dbg !8632
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %inv_p) #7, !dbg !8933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !8933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !8933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !8933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7, !dbg !8933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !8933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !8933
  ret i8 %retval.3, !dbg !8933
}

declare dso_local zeroext i8 @vectorizable_reduction(%union.gimple_statement_d*, %struct.gimple_stmt_iterator*, %union.gimple_statement_d**) local_unnamed_addr #2

declare dso_local zeroext i8 @vectorizable_live_operation(%union.gimple_statement_d*, %struct.gimple_stmt_iterator*, %union.gimple_statement_d**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @vect_transform_stmt(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, i8* %strided_store, %struct._slp_tree* %slp_node, %struct._slp_instance* %slp_node_instance) local_unnamed_addr #5 !dbg !8934 {
entry:
  %vec_stmt = alloca %union.gimple_statement_d*, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8938, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8939, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata i8* %strided_store, metadata !8940, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !8941, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata %struct._slp_instance* %slp_node_instance, metadata !8942, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata i8 0, metadata !8943, metadata !DIExpression()), !dbg !8960
  %0 = bitcast %union.gimple_statement_d** %vec_stmt to i8*, !dbg !8961
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !8961
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !8944, metadata !DIExpression()), !dbg !8960
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !8962
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !8963
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !8945, metadata !DIExpression()), !dbg !8960
  %type = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 0, !dbg !8964
  %1 = load i32, i32* %type, align 8, !dbg !8964
  switch i32 %1, label %sw.default [
    i32 10, label %sw.bb
    i32 9, label %sw.bb2
    i32 11, label %sw.bb9
    i32 8, label %sw.bb16
    i32 3, label %sw.bb28
    i32 5, label %sw.bb35
    i32 1, label %sw.bb42
    i32 2, label %sw.bb49
    i32 6, label %sw.bb60
    i32 4, label %sw.bb72
    i32 7, label %sw.bb79
  ], !dbg !8965

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call1 = call fastcc zeroext i8 @vectorizable_type_demotion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %struct._slp_tree* %slp_node) #8, !dbg !8966
  call void @llvm.dbg.value(metadata i8 %call1, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool = icmp eq i8 %call1, 0, !dbg !8968
  br i1 %tobool, label %cond.true, label %sw.epilog, !dbg !8968

cond.true:                                        ; preds = %sw.bb
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4150, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8968
  br label %sw.epilog, !dbg !8968

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call3 = call fastcc zeroext i8 @vectorizable_type_promotion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %struct._slp_tree* %slp_node) #8, !dbg !8969
  call void @llvm.dbg.value(metadata i8 %call3, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8970
  br i1 %tobool4, label %cond.true5, label %sw.epilog, !dbg !8970

cond.true5:                                       ; preds = %sw.bb2
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4155, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8970
  br label %sw.epilog, !dbg !8970

sw.bb9:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call10 = call fastcc zeroext i8 @vectorizable_conversion(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %struct._slp_tree* %slp_node) #8, !dbg !8971
  call void @llvm.dbg.value(metadata i8 %call10, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool11 = icmp eq i8 %call10, 0, !dbg !8972
  br i1 %tobool11, label %cond.true12, label %sw.epilog, !dbg !8972

cond.true12:                                      ; preds = %sw.bb9
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8972
  br label %sw.epilog, !dbg !8972

sw.bb16:                                          ; preds = %entry
  %tobool17 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !8973
  br i1 %tobool17, label %cond.end20, label %cond.true18, !dbg !8973

cond.true18:                                      ; preds = %sw.bb16
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4164, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8973
  br label %cond.end20, !dbg !8973

cond.end20:                                       ; preds = %sw.bb16, %cond.true18
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call22 = call zeroext i8 @vectorizable_induction(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt) #6, !dbg !8974
  call void @llvm.dbg.value(metadata i8 %call22, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool23 = icmp eq i8 %call22, 0, !dbg !8975
  br i1 %tobool23, label %cond.true24, label %sw.epilog, !dbg !8975

cond.true24:                                      ; preds = %cond.end20
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8975
  br label %sw.epilog, !dbg !8975

sw.bb28:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call29 = call fastcc zeroext i8 @vectorizable_operation(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %struct._slp_tree* %slp_node) #8, !dbg !8976
  call void @llvm.dbg.value(metadata i8 %call29, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool30 = icmp eq i8 %call29, 0, !dbg !8977
  br i1 %tobool30, label %cond.true31, label %sw.epilog, !dbg !8977

cond.true31:                                      ; preds = %sw.bb28
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8977
  br label %sw.epilog, !dbg !8977

sw.bb35:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call36 = call fastcc zeroext i8 @vectorizable_assignment(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %struct._slp_tree* %slp_node) #8, !dbg !8978
  call void @llvm.dbg.value(metadata i8 %call36, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool37 = icmp eq i8 %call36, 0, !dbg !8979
  br i1 %tobool37, label %cond.true38, label %sw.epilog, !dbg !8979

cond.true38:                                      ; preds = %sw.bb35
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8979
  br label %sw.epilog, !dbg !8979

sw.bb42:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call43 = call fastcc zeroext i8 @vectorizable_load(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %struct._slp_tree* %slp_node, %struct._slp_instance* %slp_node_instance) #8, !dbg !8980
  call void @llvm.dbg.value(metadata i8 %call43, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool44 = icmp eq i8 %call43, 0, !dbg !8981
  br i1 %tobool44, label %cond.true45, label %sw.epilog, !dbg !8981

cond.true45:                                      ; preds = %sw.bb42
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4182, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8981
  br label %sw.epilog, !dbg !8981

sw.bb49:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call50 = call fastcc zeroext i8 @vectorizable_store(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %struct._slp_tree* %slp_node) #8, !dbg !8982
  call void @llvm.dbg.value(metadata i8 %call50, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool51 = icmp eq i8 %call50, 0, !dbg !8983
  br i1 %tobool51, label %cond.true52, label %cond.end54, !dbg !8983

cond.true52:                                      ; preds = %sw.bb49
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4187, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8983
  br label %cond.end54, !dbg !8983

cond.end54:                                       ; preds = %sw.bb49, %cond.true52
  %first_dr = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 17, !dbg !8984
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %first_dr, align 8, !dbg !8984
  %cmp = icmp eq %union.gimple_statement_d* %2, null, !dbg !8984
  %tobool56 = icmp ne %struct._slp_tree* %slp_node, null, !dbg !8986
  %or.cond = or i1 %cmp, %tobool56, !dbg !8987
  br i1 %or.cond, label %sw.epilog, label %if.then, !dbg !8987

if.then:                                          ; preds = %cond.end54
  store i8 1, i8* %strided_store, align 1, !dbg !8988
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !8990
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !8990
  %tobool57 = icmp ne %union.gimple_statement_d* %3, null, !dbg !8990
  %spec.select = zext i1 %tobool57 to i8, !dbg !8992
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !8943, metadata !DIExpression()), !dbg !8960
  br label %sw.epilog, !dbg !8993

sw.bb60:                                          ; preds = %entry
  %tobool61 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !8994
  br i1 %tobool61, label %cond.end64, label %cond.true62, !dbg !8994

cond.true62:                                      ; preds = %sw.bb60
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8994
  br label %cond.end64, !dbg !8994

cond.end64:                                       ; preds = %sw.bb60, %cond.true62
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call66 = call zeroext i8 @vectorizable_condition(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt, %union.tree_node* null, i32 0) #8, !dbg !8995
  call void @llvm.dbg.value(metadata i8 %call66, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool67 = icmp eq i8 %call66, 0, !dbg !8996
  br i1 %tobool67, label %cond.true68, label %sw.epilog, !dbg !8996

cond.true68:                                      ; preds = %cond.end64
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4205, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8996
  br label %sw.epilog, !dbg !8996

sw.bb72:                                          ; preds = %entry
  %tobool73 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !8997
  br i1 %tobool73, label %cond.end76, label %cond.true74, !dbg !8997

cond.true74:                                      ; preds = %sw.bb72
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !8997
  br label %cond.end76, !dbg !8997

cond.end76:                                       ; preds = %sw.bb72, %cond.true74
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call78 = call fastcc zeroext i8 @vectorizable_call(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt) #8, !dbg !8998
  call void @llvm.dbg.value(metadata i8 %call78, metadata !8947, metadata !DIExpression()), !dbg !8960
  br label %sw.epilog, !dbg !8999

sw.bb79:                                          ; preds = %entry
  %tobool80 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !9000
  br i1 %tobool80, label %cond.end83, label %cond.true81, !dbg !9000

cond.true81:                                      ; preds = %sw.bb79
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9000
  br label %cond.end83, !dbg !9000

cond.end83:                                       ; preds = %sw.bb79, %cond.true81
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call85 = call zeroext i8 @vectorizable_reduction(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt) #6, !dbg !9001
  call void @llvm.dbg.value(metadata i8 %call85, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool86 = icmp eq i8 %call85, 0, !dbg !9002
  br i1 %tobool86, label %cond.true87, label %sw.epilog, !dbg !9002

cond.true87:                                      ; preds = %cond.end83
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9002
  br label %sw.epilog, !dbg !9002

sw.default:                                       ; preds = %entry
  %live = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 4, !dbg !9003
  %4 = load i8, i8* %live, align 4, !dbg !9003
  %tobool91 = icmp eq i8 %4, 0, !dbg !9003
  br i1 %tobool91, label %if.then92, label %sw.epilog, !dbg !9005

if.then92:                                        ; preds = %sw.default
  %call93 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !9006
  %tobool94 = icmp eq i8 %call93, 0, !dbg !9006
  br i1 %tobool94, label %if.end97, label %if.then95, !dbg !9009

if.then95:                                        ; preds = %if.then92
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !9010
  %call96 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !9011
  br label %if.end97, !dbg !9011

if.end97:                                         ; preds = %if.then92, %if.then95
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4224, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9012
  br label %sw.epilog, !dbg !9013

sw.epilog:                                        ; preds = %sw.default, %sw.bb, %sw.bb2, %sw.bb9, %cond.end20, %sw.bb28, %sw.bb35, %sw.bb42, %cond.end64, %cond.end83, %if.end97, %cond.true87, %cond.true68, %if.then, %cond.end54, %cond.true45, %cond.true38, %cond.true31, %cond.true24, %cond.true12, %cond.true5, %cond.true, %cond.end76
  %is_store.2 = phi i8 [ 0, %cond.end76 ], [ 0, %sw.bb ], [ 0, %cond.true ], [ 0, %sw.bb2 ], [ 0, %cond.true5 ], [ 0, %sw.bb9 ], [ 0, %cond.true12 ], [ 0, %cond.end20 ], [ 0, %cond.true24 ], [ 0, %sw.bb28 ], [ 0, %cond.true31 ], [ 0, %sw.bb35 ], [ 0, %cond.true38 ], [ 0, %sw.bb42 ], [ 0, %cond.true45 ], [ %spec.select, %if.then ], [ 1, %cond.end54 ], [ 0, %cond.end64 ], [ 0, %cond.true68 ], [ 0, %cond.end83 ], [ 0, %cond.true87 ], [ 0, %if.end97 ], [ 0, %sw.default ], !dbg !8960
  call void @llvm.dbg.value(metadata i8 %is_store.2, metadata !8943, metadata !DIExpression()), !dbg !8960
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !9014
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %6, metadata !8944, metadata !DIExpression()), !dbg !8960
  %tobool99 = icmp eq %union.gimple_statement_d* %6, null, !dbg !9014
  br i1 %tobool99, label %if.end147, label %land.lhs.true100, !dbg !9015

land.lhs.true100:                                 ; preds = %sw.epilog
  %loop_vinfo = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !9016
  %7 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo, align 8, !dbg !9016
  %tobool101 = icmp eq %struct._loop_vec_info* %7, null, !dbg !9016
  br i1 %tobool101, label %if.end147, label %land.lhs.true102, !dbg !9017

land.lhs.true102:                                 ; preds = %land.lhs.true100
  %loop = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %7, i64 0, i32 0, !dbg !9018
  %8 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !9018
  %call104 = call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* %8, %union.gimple_statement_d* %stmt) #8, !dbg !9019
  %tobool105 = icmp eq i8 %call104, 0, !dbg !9019
  br i1 %tobool105, label %if.end147, label %land.lhs.true106, !dbg !9020

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %9 = load i32, i32* %type, align 8, !dbg !9021
  %cmp108 = icmp eq i32 %9, 7, !dbg !9022
  br i1 %cmp108, label %if.end147, label %land.lhs.true110, !dbg !9023

land.lhs.true110:                                 ; preds = %land.lhs.true106
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !9024
  %10 = load i32, i32* %relevant, align 8, !dbg !9024
  %cmp111 = icmp eq i32 %10, 2, !dbg !9025
  br i1 %cmp111, label %if.then116, label %lor.lhs.false, !dbg !9026

lor.lhs.false:                                    ; preds = %land.lhs.true110
  %cmp114 = icmp eq i32 %10, 1, !dbg !9027
  br i1 %cmp114, label %if.then116, label %if.end147, !dbg !9028

if.then116:                                       ; preds = %lor.lhs.false, %land.lhs.true110
  %11 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo, align 8, !dbg !9029
  %loop118 = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %11, i64 0, i32 0, !dbg !9029
  %12 = load %struct.loop*, %struct.loop** %loop118, align 8, !dbg !9029
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 8, !dbg !9030
  %13 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.loop* %13, metadata !8948, metadata !DIExpression()), !dbg !9031
  %14 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !9032
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #7, !dbg !9032
  %call119 = call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !9033
  %tobool120 = icmp eq i8 %call119, 0, !dbg !9033
  br i1 %tobool120, label %if.end123, label %if.then121, !dbg !9035

if.then121:                                       ; preds = %if.then116
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !9036
  %call122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !9037
  br label %if.end123, !dbg !9037

if.end123:                                        ; preds = %if.then116, %if.then121
  %call124 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !9038
  %cmp125 = icmp eq i32 %call124, 16, !dbg !9040
  br i1 %cmp125, label %if.then127, label %if.else130, !dbg !9041

if.then127:                                       ; preds = %if.end123
  %call128 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %stmt) #8, !dbg !9042
  %call129 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call128) #8, !dbg !9042
  call void @llvm.dbg.value(metadata %union.tree_node* %call129, metadata !8953, metadata !DIExpression()), !dbg !9031
  br label %if.end132, !dbg !9043

if.else130:                                       ; preds = %if.end123
  %call131 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !9044
  call void @llvm.dbg.value(metadata %union.tree_node* %call131, metadata !8953, metadata !DIExpression()), !dbg !9031
  br label %if.end132

if.end132:                                        ; preds = %if.else130, %if.then127
  %scalar_dest.0 = phi %union.tree_node* [ %call129, %if.then127 ], [ %call131, %if.else130 ], !dbg !9045
  call void @llvm.dbg.value(metadata %union.tree_node* %scalar_dest.0, metadata !8953, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !8951, metadata !DIExpression(DW_OP_deref)), !dbg !9031
  %call133 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %scalar_dest.0) #8, !dbg !9046
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call133, metadata !8952, metadata !DIExpression()), !dbg !9031
  %16 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !9048
  br label %for.cond, !dbg !9046

for.cond:                                         ; preds = %for.inc, %if.end132
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call133, %if.end132 ], [ %call146, %for.inc ], !dbg !9053
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !8952, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !8951, metadata !DIExpression(DW_OP_deref)), !dbg !9031
  %call134 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !9054
  %tobool135 = icmp eq i8 %call134, 0, !dbg !9054
  br i1 %tobool135, label %for.body, label %for.end, !dbg !9046

for.body:                                         ; preds = %for.cond
  %stmt136 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !9055
  %17 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt136, align 8, !dbg !9055
  %call137 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %17) #8, !dbg !9056
  %call138 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %13, %struct.basic_block_def* %call137) #6, !dbg !9057
  %tobool139 = icmp eq i8 %call138, 0, !dbg !9057
  br i1 %tobool139, label %if.then140, label %for.inc, !dbg !9058

if.then140:                                       ; preds = %for.body
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt136, align 8, !dbg !9059
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %18, metadata !8954, metadata !DIExpression()), !dbg !9031
  %19 = load i64, i64* %16, align 8, !dbg !9060
  %call143 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %18) #8, !dbg !9061
  %vectorized_stmt144 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call143, i64 0, i32 6, !dbg !9061
  %20 = bitcast %union.gimple_statement_d** %vectorized_stmt144 to i64*, !dbg !9062
  store i64 %19, i64* %20, align 8, !dbg !9062
  br label %for.inc, !dbg !9063

for.inc:                                          ; preds = %for.body, %if.then140
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !8951, metadata !DIExpression(DW_OP_deref)), !dbg !9031
  %call146 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !9054
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call146, metadata !8952, metadata !DIExpression()), !dbg !9031
  br label %for.cond, !dbg !9054, !llvm.loop !9064

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #7, !dbg !9066
  br label %if.end147, !dbg !9067

if.end147:                                        ; preds = %land.lhs.true106, %land.lhs.true102, %land.lhs.true100, %sw.epilog, %for.end, %lor.lhs.false
  %live148 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 4, !dbg !9068
  %21 = load i8, i8* %live148, align 4, !dbg !9068
  %tobool150 = icmp eq i8 %21, 0, !dbg !9068
  br i1 %tobool150, label %if.end162, label %land.lhs.true151, !dbg !9070

land.lhs.true151:                                 ; preds = %if.end147
  %22 = load i32, i32* %type, align 8, !dbg !9071
  %cmp153 = icmp eq i32 %22, 7, !dbg !9072
  br i1 %cmp153, label %if.end162, label %if.then155, !dbg !9073

if.then155:                                       ; preds = %land.lhs.true151
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %vec_stmt, metadata !8944, metadata !DIExpression(DW_OP_deref)), !dbg !8960
  %call156 = call zeroext i8 @vectorizable_live_operation(%union.gimple_statement_d* %stmt, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d** nonnull %vec_stmt) #6, !dbg !9074
  call void @llvm.dbg.value(metadata i8 %call156, metadata !8947, metadata !DIExpression()), !dbg !8960
  %tobool157 = icmp eq i8 %call156, 0, !dbg !9076
  br i1 %tobool157, label %cond.true158, label %if.end162, !dbg !9076

cond.true158:                                     ; preds = %if.then155
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9076
  br label %if.end162, !dbg !9076

if.end162:                                        ; preds = %if.then155, %land.lhs.true151, %if.end147, %cond.true158
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %vec_stmt, align 8, !dbg !9077
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %23, metadata !8944, metadata !DIExpression()), !dbg !8960
  %tobool163 = icmp eq %union.gimple_statement_d* %23, null, !dbg !9077
  br i1 %tobool163, label %if.end181, label %if.then164, !dbg !9078

if.then164:                                       ; preds = %if.end162
  %24 = ptrtoint %union.gimple_statement_d* %23 to i64, !dbg !9078
  %25 = bitcast %union.gimple_statement_d** %vec_stmt to i64*, !dbg !9079
  %vectorized_stmt165 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !9080
  %26 = bitcast %union.gimple_statement_d** %vectorized_stmt165 to i64*, !dbg !9081
  store i64 %24, i64* %26, align 8, !dbg !9081
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 14, !dbg !9082
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %related_stmt, align 8, !dbg !9082
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %27, metadata !8946, metadata !DIExpression()), !dbg !8960
  %tobool166 = icmp eq %union.gimple_statement_d* %27, null, !dbg !9083
  br i1 %tobool166, label %if.end181, label %if.then167, !dbg !9084

if.then167:                                       ; preds = %if.then164
  %call168 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* nonnull %27) #8, !dbg !9085
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call168, metadata !8955, metadata !DIExpression()), !dbg !9086
  %in_pattern_p = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call168, i64 0, i32 13, !dbg !9087
  %28 = load i8, i8* %in_pattern_p, align 8, !dbg !9087
  %tobool169 = icmp eq i8 %28, 0, !dbg !9087
  br i1 %tobool169, label %if.end181, label %if.then170, !dbg !9089

if.then170:                                       ; preds = %if.then167
  %related_stmt171 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call168, i64 0, i32 14, !dbg !9090
  %29 = load %union.gimple_statement_d*, %union.gimple_statement_d** %related_stmt171, align 8, !dbg !9090
  %cmp172 = icmp eq %union.gimple_statement_d* %29, %stmt, !dbg !9090
  br i1 %cmp172, label %cond.end176, label %cond.true174, !dbg !9090

cond.true174:                                     ; preds = %if.then170
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4290, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9090
  br label %cond.end176, !dbg !9090

cond.end176:                                      ; preds = %if.then170, %cond.true174
  %30 = load i64, i64* %25, align 8, !dbg !9092
  %vectorized_stmt178 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call168, i64 0, i32 6, !dbg !9093
  %31 = bitcast %union.gimple_statement_d** %vectorized_stmt178 to i64*, !dbg !9094
  store i64 %30, i64* %31, align 8, !dbg !9094
  br label %if.end181, !dbg !9095

if.end181:                                        ; preds = %if.then167, %if.then164, %if.end162, %cond.end176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !9096
  ret i8 %is_store.2, !dbg !9097
}

declare dso_local zeroext i8 @vectorizable_induction(%union.gimple_statement_d*, %struct.gimple_stmt_iterator*, %union.gimple_statement_d**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !9098 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !9103, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !9104, metadata !DIExpression()), !dbg !9105
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9106
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !9107
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !9108
  store i40* %imm_uses, i40** %0, align 8, !dbg !9108
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !9109
  %1 = bitcast i40* %next to i64*, !dbg !9109
  %2 = load i64, i64* %1, align 8, !dbg !9109
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !9110
  store i64 %2, i64* %3, align 8, !dbg !9110
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !9111
  %tobool = icmp eq i8 %call, 0, !dbg !9111
  br i1 %tobool, label %if.end, label %return, !dbg !9113

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !9114
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !9114
  br label %return, !dbg !9115

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !9105
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !9116
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !9117 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !9123, metadata !DIExpression()), !dbg !9124
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !9125
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !9125
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !9126
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !9126
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !9127
  %conv1 = zext i1 %cmp to i8, !dbg !9128
  ret i8 %conv1, !dbg !9129
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !9130 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !9134, metadata !DIExpression()), !dbg !9136
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !9137
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !9137
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !9135, metadata !DIExpression()), !dbg !9136
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !9138
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !9138
  %2 = load i64, i64* %1, align 8, !dbg !9138
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !9139
  store i64 %2, i64* %3, align 8, !dbg !9139
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !9140
  %tobool = icmp eq i8 %call, 0, !dbg !9140
  br i1 %tobool, label %if.end, label %cleanup, !dbg !9142

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !9143
  br label %cleanup, !dbg !9144

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !9136
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !9145
}

; Function Attrs: nounwind uwtable
define dso_local void @vect_remove_stores(%union.gimple_statement_d* %first_stmt) local_unnamed_addr #5 !dbg !9146 {
entry:
  %next_si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp1 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt, metadata !9150, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %first_stmt, metadata !9151, metadata !DIExpression()), !dbg !9154
  %0 = bitcast %struct.gimple_stmt_iterator* %next_si to i8*, !dbg !9155
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !9155
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp1 to i8*, !dbg !9156
  br label %while.cond, !dbg !9158

while.cond:                                       ; preds = %while.body, %entry
  %next.0 = phi %union.gimple_statement_d* [ %first_stmt, %entry ], [ %2, %while.body ], !dbg !9154
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %next.0, metadata !9151, metadata !DIExpression()), !dbg !9154
  %tobool = icmp eq %union.gimple_statement_d* %next.0, null, !dbg !9158
  br i1 %tobool, label %while.end, label %while.body, !dbg !9158

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !9159
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp1, %union.gimple_statement_d* nonnull %next.0) #6, !dbg !9159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !9159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !9159
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %next_si, metadata !9153, metadata !DIExpression(DW_OP_deref)), !dbg !9154
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %next_si, i8 zeroext 1) #6, !dbg !9160
  %call = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* nonnull %next.0) #8, !dbg !9161
  %next_dr = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 18, !dbg !9161
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %next_dr, align 8, !dbg !9161
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !9152, metadata !DIExpression()), !dbg !9154
  call void @free_stmt_vec_info(%union.gimple_statement_d* nonnull %next.0) #8, !dbg !9162
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !9151, metadata !DIExpression()), !dbg !9154
  br label %while.cond, !dbg !9158, !llvm.loop !9163

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !9165
  ret void, !dbg !9165
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @free_stmt_vec_info(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !9166 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9168, metadata !DIExpression()), !dbg !9170
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !9171
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !9169, metadata !DIExpression()), !dbg !9170
  %tobool = icmp eq %struct._stmt_vec_info* %call, null, !dbg !9172
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !9174

if.end:                                           ; preds = %entry
  %same_align_refs = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 15, !dbg !9175
  tail call fastcc void @VEC_dr_p_heap_free(%struct.VEC_dr_p_heap** nonnull %same_align_refs) #8, !dbg !9175
  tail call fastcc void @set_vinfo_for_stmt(%union.gimple_statement_d* %stmt, %struct._stmt_vec_info* null) #8, !dbg !9176
  %0 = bitcast %struct._stmt_vec_info* %call to i8*, !dbg !9177
  tail call void @free(i8* nonnull %0) #6, !dbg !9178
  br label %cleanup.cont, !dbg !9179

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !9179
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_loop_header_bb_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !9180 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9184, metadata !DIExpression()), !dbg !9185
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !9186
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !9186
  %header = getelementptr inbounds %struct.loop, %struct.loop* %0, i64 0, i32 2, !dbg !9188
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !9188
  %cmp = icmp eq %struct.basic_block_def* %1, %bb, !dbg !9189
  br i1 %cmp, label %return, label %if.end, !dbg !9190

if.end:                                           ; preds = %entry
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !9191
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !9191
  %tobool = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !9191
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9191

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !9191
  br label %cond.end, !dbg !9191

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !9191
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !9191
  %cmp2 = icmp eq i32 %call, 1, !dbg !9191
  br i1 %cmp2, label %return, label %cond.true3, !dbg !9191

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0), i32 694, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9191
  br label %return, !dbg !9191

return:                                           ; preds = %cond.true3, %cond.end, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ 0, %cond.end ], [ 0, %cond.true3 ], !dbg !9185
  ret i8 %retval.0, !dbg !9192
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_dr_p_heap* @VEC_dr_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !9193 {
entry:
  call void @llvm.dbg.value(metadata i32 5, metadata !9197, metadata !DIExpression()), !dbg !9198
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 5) #6, !dbg !9199
  %0 = bitcast i8* %call to %struct.VEC_dr_p_heap*, !dbg !9199
  ret %struct.VEC_dr_p_heap* %0, !dbg !9199
}

; Function Attrs: nounwind uwtable
define dso_local void @init_stmt_vec_info_vec() local_unnamed_addr #5 !dbg !9200 {
entry:
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !9203
  %tobool = icmp eq %struct.VEC_vec_void_p_heap* %0, null, !dbg !9203
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9203

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9203
  br label %cond.end, !dbg !9203

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call fastcc %struct.VEC_vec_void_p_heap* @VEC_vec_void_p_heap_alloc(i32 50) #8, !dbg !9204
  store %struct.VEC_vec_void_p_heap* %call, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !9205
  ret void, !dbg !9206
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_vec_void_p_heap* @VEC_vec_void_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !9207 {
entry:
  call void @llvm.dbg.value(metadata i32 50, metadata !9211, metadata !DIExpression()), !dbg !9212
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 50) #6, !dbg !9213
  %0 = bitcast i8* %call to %struct.VEC_vec_void_p_heap*, !dbg !9213
  ret %struct.VEC_vec_void_p_heap* %0, !dbg !9213
}

; Function Attrs: nounwind uwtable
define dso_local void @free_stmt_vec_info_vec() local_unnamed_addr #5 !dbg !9214 {
entry:
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !9215
  %tobool = icmp eq %struct.VEC_vec_void_p_heap* %0, null, !dbg !9215
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !9215

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4388, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9215
  br label %cond.end, !dbg !9215

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @VEC_vec_void_p_heap_free(%struct.VEC_vec_void_p_heap** nonnull @stmt_vec_info_vec) #8, !dbg !9216
  ret void, !dbg !9217
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_vec_void_p_heap_free(%struct.VEC_vec_void_p_heap** %vec_) unnamed_addr #0 !dbg !9218 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, metadata !9223, metadata !DIExpression()), !dbg !9224
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !9225
  %tobool = icmp eq %struct.VEC_vec_void_p_heap* %0, null, !dbg !9225
  br i1 %tobool, label %if.end, label %if.then, !dbg !9227

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_vec_void_p_heap* %0 to i8*, !dbg !9227
  tail call void @free(i8* nonnull %1) #6, !dbg !9225
  br label %if.end, !dbg !9225

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_vec_void_p_heap* null, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !9227
  ret void, !dbg !9227
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_dr_p_heap_free(%struct.VEC_dr_p_heap** %vec_) unnamed_addr #0 !dbg !9228 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_dr_p_heap** %vec_, metadata !9233, metadata !DIExpression()), !dbg !9234
  %0 = load %struct.VEC_dr_p_heap*, %struct.VEC_dr_p_heap** %vec_, align 8, !dbg !9235
  %tobool = icmp eq %struct.VEC_dr_p_heap* %0, null, !dbg !9235
  br i1 %tobool, label %if.end, label %if.then, !dbg !9237

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_dr_p_heap* %0 to i8*, !dbg !9237
  tail call void @free(i8* nonnull %1) #6, !dbg !9235
  br label %if.end, !dbg !9235

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_dr_p_heap* null, %struct.VEC_dr_p_heap** %vec_, align 8, !dbg !9237
  ret void, !dbg !9237
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_vector_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_nop_p(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9238 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9240, metadata !DIExpression()), !dbg !9241
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !9242
  %cmp = icmp eq i32 %call, 18, !dbg !9243
  %conv1 = zext i1 %cmp to i8, !dbg !9242
  ret i8 %conv1, !dbg !9244
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9245 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9247, metadata !DIExpression()), !dbg !9248
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !9249
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !9249
  ret %union.tree_node* %0, !dbg !9250
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @supportable_widening_operation(i32 %code, %union.gimple_statement_d* %stmt, %union.tree_node* %vectype, %union.tree_node** %decl1, %union.tree_node** %decl2, i32* %code1, i32* %code2, i32* %multi_step_cvt, %struct.VEC_tree_heap** %interm_types) local_unnamed_addr #5 !dbg !9251 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !9257, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9258, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata %union.tree_node* %vectype, metadata !9259, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata %union.tree_node** %decl1, metadata !9260, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata %union.tree_node** %decl2, metadata !9261, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32* %code1, metadata !9262, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32* %code2, metadata !9263, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32* %multi_step_cvt, metadata !9264, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %interm_types, metadata !9265, metadata !DIExpression()), !dbg !9288
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !9289
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !9266, metadata !DIExpression()), !dbg !9288
  %loop_vinfo = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 2, !dbg !9290
  %0 = load %struct._loop_vec_info*, %struct._loop_vec_info** %loop_vinfo, align 8, !dbg !9290
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %0, metadata !9267, metadata !DIExpression()), !dbg !9288
  %loop = getelementptr inbounds %struct._loop_vec_info, %struct._loop_vec_info* %0, i64 0, i32 0, !dbg !9291
  %1 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !9291
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !9268, metadata !DIExpression()), !dbg !9288
  %call1 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !9292
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9275, metadata !DIExpression()), !dbg !9288
  %call2 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %call1) #8, !dbg !9293
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9276, metadata !DIExpression()), !dbg !9288
  %relevant = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 3, !dbg !9294
  %2 = load i32, i32* %relevant, align 8, !dbg !9294
  %cmp = icmp eq i32 %2, 3, !dbg !9296
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9297

land.lhs.true:                                    ; preds = %entry
  %call3 = tail call fastcc zeroext i8 @nested_in_vect_loop_p(%struct.loop* %1, %union.gimple_statement_d* %stmt) #8, !dbg !9298
  %tobool = icmp eq i8 %call3, 0, !dbg !9298
  br i1 %tobool, label %if.end, label %if.else, !dbg !9299

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata i8 1, metadata !9269, metadata !DIExpression()), !dbg !9288
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.else
  %ordered_p.0 = phi i1 [ false, %if.else ], [ true, %land.lhs.true ]
  %cmp6 = icmp eq i32 %code, 169, !dbg !9300
  %or.cond = and i1 %ordered_p.0, %cmp6, !dbg !9302
  %3 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 3), align 8, !dbg !9303
  %tobool8 = icmp ne %union.tree_node* (%union.tree_node*)* %3, null, !dbg !9304
  %or.cond1 = and i1 %or.cond, %tobool8, !dbg !9302
  br i1 %or.cond1, label %land.lhs.true9, label %if.end25, !dbg !9302

land.lhs.true9:                                   ; preds = %if.end
  %call10 = tail call %union.tree_node* %3(%union.tree_node* %vectype) #6, !dbg !9305
  %tobool11 = icmp ne %union.tree_node* %call10, null, !dbg !9305
  %4 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 4), align 8, !dbg !9306
  %tobool13 = icmp ne %union.tree_node* (%union.tree_node*)* %4, null, !dbg !9307
  %or.cond2 = and i1 %tobool11, %tobool13, !dbg !9308
  br i1 %or.cond2, label %land.lhs.true14, label %if.end25, !dbg !9308

land.lhs.true14:                                  ; preds = %land.lhs.true9
  %call15 = tail call %union.tree_node* %4(%union.tree_node* %vectype) #6, !dbg !9309
  %tobool16 = icmp eq %union.tree_node* %call15, null, !dbg !9309
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !9310

if.then17:                                        ; preds = %land.lhs.true14
  %call18 = tail call zeroext i8 @vect_print_dump_info(i32 9) #6, !dbg !9311
  %tobool19 = icmp eq i8 %call18, 0, !dbg !9311
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !9314

if.then20:                                        ; preds = %if.then17
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @vect_dump, align 8, !dbg !9315
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !9316
  br label %if.end22, !dbg !9316

if.end22:                                         ; preds = %if.then17, %if.then20
  store i32 59, i32* %code2, align 4, !dbg !9317
  store i32 59, i32* %code1, align 4, !dbg !9318
  %6 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 3), align 8, !dbg !9319
  %call23 = tail call %union.tree_node* %6(%union.tree_node* %vectype) #6, !dbg !9320
  store %union.tree_node* %call23, %union.tree_node** %decl1, align 8, !dbg !9321
  %7 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 2, i32 4), align 8, !dbg !9322
  %call24 = tail call %union.tree_node* %7(%union.tree_node* %vectype) #6, !dbg !9323
  store %union.tree_node* %call24, %union.tree_node** %decl2, align 8, !dbg !9324
  br label %cleanup235, !dbg !9325

if.end25:                                         ; preds = %land.lhs.true14, %if.end, %land.lhs.true9
  switch i32 %code, label %sw.default [
    i32 169, label %sw.epilog
    i32 116, label %sw.bb26
    i32 113, label %sw.bb26
    i32 78, label %sw.bb27
    i32 77, label %cleanup235
  ], !dbg !9326

sw.bb26:                                          ; preds = %if.end25, %if.end25
  call void @llvm.dbg.value(metadata i32 174, metadata !9278, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 175, metadata !9277, metadata !DIExpression()), !dbg !9288
  br label %sw.epilog, !dbg !9327

sw.bb27:                                          ; preds = %if.end25
  call void @llvm.dbg.value(metadata i32 176, metadata !9278, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 177, metadata !9277, metadata !DIExpression()), !dbg !9288
  br label %sw.epilog, !dbg !9329

sw.default:                                       ; preds = %if.end25
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4734, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9330
  br label %sw.epilog, !dbg !9331

sw.epilog:                                        ; preds = %if.end25, %sw.default, %sw.bb27, %sw.bb26
  %c1.0 = phi i32 [ undef, %sw.default ], [ 177, %sw.bb27 ], [ 175, %sw.bb26 ], [ 173, %if.end25 ]
  %c2.0 = phi i32 [ undef, %sw.default ], [ 176, %sw.bb27 ], [ 174, %sw.bb26 ], [ 172, %if.end25 ]
  call void @llvm.dbg.value(metadata i32 %c2.0, metadata !9278, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 %c1.0, metadata !9277, metadata !DIExpression()), !dbg !9288
  %cmp29 = icmp eq i32 %code, 77, !dbg !9332
  br i1 %cmp29, label %if.then30, label %if.else33, !dbg !9334

if.then30:                                        ; preds = %sw.epilog
  %call31 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c1.0, %union.tree_node* %call1, i32 0) #6, !dbg !9335
  call void @llvm.dbg.value(metadata %struct.optab_d* %call31, metadata !9273, metadata !DIExpression()), !dbg !9288
  %call32 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c2.0, %union.tree_node* %call1, i32 0) #6, !dbg !9337
  call void @llvm.dbg.value(metadata %struct.optab_d* %call32, metadata !9274, metadata !DIExpression()), !dbg !9288
  br label %if.end36, !dbg !9338

if.else33:                                        ; preds = %sw.epilog
  %call34 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c1.0, %union.tree_node* %vectype, i32 0) #6, !dbg !9339
  call void @llvm.dbg.value(metadata %struct.optab_d* %call34, metadata !9273, metadata !DIExpression()), !dbg !9288
  %call35 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c2.0, %union.tree_node* %vectype, i32 0) #6, !dbg !9341
  call void @llvm.dbg.value(metadata %struct.optab_d* %call35, metadata !9274, metadata !DIExpression()), !dbg !9288
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then30
  %optab1.0 = phi %struct.optab_d* [ %call31, %if.then30 ], [ %call34, %if.else33 ], !dbg !9342
  %optab2.0 = phi %struct.optab_d* [ %call32, %if.then30 ], [ %call35, %if.else33 ], !dbg !9342
  call void @llvm.dbg.value(metadata %struct.optab_d* %optab2.0, metadata !9274, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata %struct.optab_d* %optab1.0, metadata !9273, metadata !DIExpression()), !dbg !9288
  %tobool37 = icmp ne %struct.optab_d* %optab1.0, null, !dbg !9343
  %tobool38 = icmp ne %struct.optab_d* %optab2.0, null, !dbg !9345
  %or.cond3 = and i1 %tobool37, %tobool38, !dbg !9346
  br i1 %or.cond3, label %if.end40, label %cleanup235, !dbg !9346

if.end40:                                         ; preds = %if.end36
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %vectype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9347
  %bf.load = load i64, i64* %8, align 8, !dbg !9347
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !9347
  %cmp41 = icmp eq i64 %bf.cast5, 14, !dbg !9347
  br i1 %cmp41, label %cond.true, label %cond.false, !dbg !9347

cond.true:                                        ; preds = %if.end40
  %call42 = tail call i32 @vector_type_mode(%union.tree_node* %vectype) #6, !dbg !9347
  br label %cond.end, !dbg !9347

cond.false:                                       ; preds = %if.end40
  %type43 = bitcast %union.tree_node* %vectype to %struct.tree_type*, !dbg !9347
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i64 0, i32 6, !dbg !9347
  %bf.load44 = load i32, i32* %mode, align 4, !dbg !9347
  %bf.lshr = lshr i32 %bf.load44, 16, !dbg !9347
  %bf.clear45 = and i32 %bf.lshr, 255, !dbg !9347
  br label %cond.end, !dbg !9347

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call42, %cond.true ], [ %bf.clear45, %cond.false ], !dbg !9347
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9270, metadata !DIExpression()), !dbg !9288
  %idxprom = sext i32 %cond to i64, !dbg !9348
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab1.0, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !9350
  %9 = load i32, i32* %insn_code, align 4, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %9, metadata !9271, metadata !DIExpression()), !dbg !9288
  %cmp46 = icmp eq i32 %9, 2956, !dbg !9351
  br i1 %cmp46, label %cleanup235, label %lor.lhs.false47, !dbg !9352

lor.lhs.false47:                                  ; preds = %cond.end
  %insn_code51 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab2.0, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !9353
  %10 = load i32, i32* %insn_code51, align 4, !dbg !9353
  call void @llvm.dbg.value(metadata i32 %10, metadata !9272, metadata !DIExpression()), !dbg !9288
  %cmp52 = icmp eq i32 %10, 2956, !dbg !9354
  br i1 %cmp52, label %cleanup235, label %if.end54, !dbg !9355

if.end54:                                         ; preds = %lor.lhs.false47
  %idxprom55 = zext i32 %9 to i64, !dbg !9356
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom55, i32 3, !dbg !9357
  %11 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !9357
  %mode58 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %11, i64 0, i32 2, !dbg !9358
  %bf.load59 = load i16, i16* %mode58, align 8, !dbg !9358
  %bf.cast60 = zext i16 %bf.load59 to i32, !dbg !9358
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9359
  %bf.load62 = load i64, i64* %12, align 8, !dbg !9359
  %bf.cast646 = and i64 %bf.load62, 65535, !dbg !9359
  %cmp65 = icmp eq i64 %bf.cast646, 14, !dbg !9359
  br i1 %cmp65, label %cond.true66, label %cond.false68, !dbg !9359

cond.true66:                                      ; preds = %if.end54
  %call67 = tail call i32 @vector_type_mode(%union.tree_node* %call2) #6, !dbg !9359
  br label %cond.end74, !dbg !9359

cond.false68:                                     ; preds = %if.end54
  %type69 = bitcast %union.tree_node* %call2 to %struct.tree_type*, !dbg !9359
  %mode70 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type69, i64 0, i32 6, !dbg !9359
  %bf.load71 = load i32, i32* %mode70, align 4, !dbg !9359
  %bf.lshr72 = lshr i32 %bf.load71, 16, !dbg !9359
  %bf.clear73 = and i32 %bf.lshr72, 255, !dbg !9359
  br label %cond.end74, !dbg !9359

cond.end74:                                       ; preds = %cond.false68, %cond.true66
  %cond75 = phi i32 [ %call67, %cond.true66 ], [ %bf.clear73, %cond.false68 ], !dbg !9359
  %cmp76 = icmp eq i32 %cond75, %bf.cast60, !dbg !9360
  br i1 %cmp76, label %lor.lhs.false77, label %if.then101, !dbg !9361

lor.lhs.false77:                                  ; preds = %cond.end74
  %idxprom78 = zext i32 %10 to i64, !dbg !9362
  %operand80 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom78, i32 3, !dbg !9363
  %13 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand80, align 8, !dbg !9363
  %mode82 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %13, i64 0, i32 2, !dbg !9364
  %bf.load83 = load i16, i16* %mode82, align 8, !dbg !9364
  %bf.cast84 = zext i16 %bf.load83 to i32, !dbg !9364
  %bf.load86 = load i64, i64* %12, align 8, !dbg !9365
  %bf.cast887 = and i64 %bf.load86, 65535, !dbg !9365
  %cmp89 = icmp eq i64 %bf.cast887, 14, !dbg !9365
  br i1 %cmp89, label %cond.true90, label %cond.false92, !dbg !9365

cond.true90:                                      ; preds = %lor.lhs.false77
  %call91 = tail call i32 @vector_type_mode(%union.tree_node* %call2) #6, !dbg !9365
  br label %cond.end98, !dbg !9365

cond.false92:                                     ; preds = %lor.lhs.false77
  %type93 = bitcast %union.tree_node* %call2 to %struct.tree_type*, !dbg !9365
  %mode94 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type93, i64 0, i32 6, !dbg !9365
  %bf.load95 = load i32, i32* %mode94, align 4, !dbg !9365
  %bf.lshr96 = lshr i32 %bf.load95, 16, !dbg !9365
  %bf.clear97 = and i32 %bf.lshr96, 255, !dbg !9365
  br label %cond.end98, !dbg !9365

cond.end98:                                       ; preds = %cond.false92, %cond.true90
  %cond99 = phi i32 [ %call91, %cond.true90 ], [ %bf.clear97, %cond.false92 ], !dbg !9365
  %cmp100 = icmp eq i32 %cond99, %bf.cast84, !dbg !9366
  br i1 %cmp100, label %if.end234, label %if.then101, !dbg !9367

if.then101:                                       ; preds = %cond.end98, %cond.end74
  call void @llvm.dbg.value(metadata %union.tree_node* %vectype, metadata !9282, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9285, metadata !DIExpression()), !dbg !9368
  switch i32 %code, label %cleanup235 [
    i32 116, label %if.end106
    i32 113, label %if.end106
  ], !dbg !9369

if.end106:                                        ; preds = %if.then101, %if.then101
  store i32 %c1.0, i32* %code1, align 4, !dbg !9371
  store i32 %c2.0, i32* %code2, align 4, !dbg !9372
  %call107 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 3) #8, !dbg !9373
  store %struct.VEC_tree_heap* %call107, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !9374
  call void @llvm.dbg.value(metadata i32 0, metadata !9279, metadata !DIExpression()), !dbg !9368
  %type193 = bitcast %union.tree_node* %call2 to %struct.tree_type*, !dbg !9375
  %mode194 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type193, i64 0, i32 6, !dbg !9375
  br label %for.cond, !dbg !9380

for.cond:                                         ; preds = %for.inc, %if.end106
  %14 = phi %struct.insn_operand_data* [ %11, %if.end106 ], [ %26, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end106 ], [ %inc227, %for.inc ], !dbg !9381
  %prev_type.0 = phi %union.tree_node* [ %vectype, %if.end106 ], [ %call121, %for.inc ], !dbg !9368
  %prev_mode.0 = phi i32 [ %cond, %if.end106 ], [ %bf.cast115, %for.inc ], !dbg !9368
  call void @llvm.dbg.value(metadata i32 %prev_mode.0, metadata !9285, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_type.0, metadata !9282, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9279, metadata !DIExpression()), !dbg !9368
  %exitcond = icmp eq i32 %i.0, 3, !dbg !9382
  br i1 %exitcond, label %cleanup235.loopexit, label %for.body, !dbg !9383

for.body:                                         ; preds = %for.cond
  %mode113 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %14, i64 0, i32 2, !dbg !9384
  %bf.load114 = load i16, i16* %mode113, align 8, !dbg !9384
  %bf.cast115 = zext i16 %bf.load114 to i32, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %bf.cast115, metadata !9284, metadata !DIExpression()), !dbg !9368
  %15 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !9385
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %prev_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9386
  %bf.load117 = load i64, i64* %16, align 8, !dbg !9386
  %bf.lshr118 = lshr i64 %bf.load117, 21, !dbg !9386
  %17 = trunc i64 %bf.lshr118 to i32, !dbg !9386
  %bf.cast120 = and i32 %17, 1, !dbg !9386
  %call121 = tail call %union.tree_node* %15(i32 %bf.cast115, i32 %bf.cast120) #6, !dbg !9387
  call void @llvm.dbg.value(metadata %union.tree_node* %call121, metadata !9283, metadata !DIExpression()), !dbg !9368
  %call122 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c1.0, %union.tree_node* %call121, i32 0) #6, !dbg !9388
  call void @llvm.dbg.value(metadata %struct.optab_d* %call122, metadata !9286, metadata !DIExpression()), !dbg !9368
  %call123 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c2.0, %union.tree_node* %call121, i32 0) #6, !dbg !9389
  call void @llvm.dbg.value(metadata %struct.optab_d* %call123, metadata !9287, metadata !DIExpression()), !dbg !9368
  %tobool124 = icmp ne %struct.optab_d* %call122, null, !dbg !9390
  %tobool126 = icmp ne %struct.optab_d* %call123, null, !dbg !9392
  %or.cond4 = and i1 %tobool124, %tobool126, !dbg !9393
  br i1 %or.cond4, label %lor.lhs.false127, label %cleanup235.loopexit, !dbg !9393

lor.lhs.false127:                                 ; preds = %for.body
  %idxprom129 = sext i32 %prev_mode.0 to i64, !dbg !9394
  %insn_code131 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab1.0, i64 0, i32 4, i64 %idxprom129, i32 0, !dbg !9395
  %18 = load i32, i32* %insn_code131, align 4, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %18, metadata !9271, metadata !DIExpression()), !dbg !9288
  %cmp132 = icmp eq i32 %18, 2956, !dbg !9396
  br i1 %cmp132, label %cleanup235.loopexit, label %lor.lhs.false133, !dbg !9397

lor.lhs.false133:                                 ; preds = %lor.lhs.false127
  %idxprom134 = zext i32 %18 to i64, !dbg !9398
  %operand136 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom134, i32 3, !dbg !9399
  %19 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand136, align 8, !dbg !9399
  %mode138 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %19, i64 0, i32 2, !dbg !9400
  %bf.load139 = load i16, i16* %mode138, align 8, !dbg !9400
  %cmp141 = icmp eq i16 %bf.load139, %bf.load114, !dbg !9401
  br i1 %cmp141, label %lor.lhs.false142, label %cleanup235.loopexit, !dbg !9402

lor.lhs.false142:                                 ; preds = %lor.lhs.false133
  %insn_code146 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab2.0, i64 0, i32 4, i64 %idxprom129, i32 0, !dbg !9403
  %20 = load i32, i32* %insn_code146, align 4, !dbg !9403
  call void @llvm.dbg.value(metadata i32 %20, metadata !9272, metadata !DIExpression()), !dbg !9288
  %cmp147 = icmp eq i32 %20, 2956, !dbg !9404
  br i1 %cmp147, label %cleanup235.loopexit, label %lor.lhs.false148, !dbg !9405

lor.lhs.false148:                                 ; preds = %lor.lhs.false142
  %idxprom149 = zext i32 %20 to i64, !dbg !9406
  %operand151 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom149, i32 3, !dbg !9407
  %21 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand151, align 8, !dbg !9407
  %mode153 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %21, i64 0, i32 2, !dbg !9408
  %bf.load154 = load i16, i16* %mode153, align 8, !dbg !9408
  %cmp156 = icmp eq i16 %bf.load154, %bf.load114, !dbg !9409
  br i1 %cmp156, label %lor.lhs.false157, label %cleanup235.loopexit, !dbg !9410

lor.lhs.false157:                                 ; preds = %lor.lhs.false148
  %idxprom159 = zext i16 %bf.load114 to i64, !dbg !9411
  %insn_code161 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %call122, i64 0, i32 4, i64 %idxprom159, i32 0, !dbg !9412
  %22 = load i32, i32* %insn_code161, align 4, !dbg !9412
  call void @llvm.dbg.value(metadata i32 %22, metadata !9271, metadata !DIExpression()), !dbg !9288
  %cmp162 = icmp eq i32 %22, 2956, !dbg !9413
  br i1 %cmp162, label %cleanup235.loopexit, label %lor.lhs.false163, !dbg !9414

lor.lhs.false163:                                 ; preds = %lor.lhs.false157
  %insn_code167 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %call123, i64 0, i32 4, i64 %idxprom159, i32 0, !dbg !9415
  %23 = load i32, i32* %insn_code167, align 4, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %23, metadata !9272, metadata !DIExpression()), !dbg !9288
  %cmp168 = icmp eq i32 %23, 2956, !dbg !9416
  br i1 %cmp168, label %cleanup235.loopexit, label %if.end170, !dbg !9417

if.end170:                                        ; preds = %lor.lhs.false163
  %24 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !9418
  %tobool171 = icmp eq %struct.VEC_tree_heap* %24, null, !dbg !9418
  br i1 %tobool171, label %cond.end175, label %cond.true172, !dbg !9418

cond.true172:                                     ; preds = %if.end170
  %base173 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %24, i64 0, i32 0, !dbg !9418
  br label %cond.end175, !dbg !9418

cond.end175:                                      ; preds = %if.end170, %cond.true172
  %cond176 = phi %struct.VEC_tree_base* [ %base173, %cond.true172 ], [ null, %if.end170 ], !dbg !9418
  %call177 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond176, %union.tree_node* %call121) #8, !dbg !9418
  %25 = load i32, i32* %multi_step_cvt, align 4, !dbg !9419
  %inc = add nsw i32 %25, 1, !dbg !9419
  store i32 %inc, i32* %multi_step_cvt, align 4, !dbg !9419
  %idxprom178 = zext i32 %22 to i64, !dbg !9420
  %operand180 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom178, i32 3, !dbg !9421
  %26 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand180, align 8, !dbg !9421
  %mode182 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %26, i64 0, i32 2, !dbg !9422
  %bf.load183 = load i16, i16* %mode182, align 8, !dbg !9422
  %bf.cast184 = zext i16 %bf.load183 to i32, !dbg !9422
  %bf.load186 = load i64, i64* %12, align 8, !dbg !9423
  %bf.cast1888 = and i64 %bf.load186, 65535, !dbg !9423
  %cmp189 = icmp eq i64 %bf.cast1888, 14, !dbg !9423
  br i1 %cmp189, label %cond.true190, label %cond.false192, !dbg !9423

cond.true190:                                     ; preds = %cond.end175
  %call191 = tail call i32 @vector_type_mode(%union.tree_node* %call2) #6, !dbg !9423
  br label %cond.end198, !dbg !9423

cond.false192:                                    ; preds = %cond.end175
  %bf.load195 = load i32, i32* %mode194, align 4, !dbg !9423
  %bf.lshr196 = lshr i32 %bf.load195, 16, !dbg !9423
  %bf.clear197 = and i32 %bf.lshr196, 255, !dbg !9423
  br label %cond.end198, !dbg !9423

cond.end198:                                      ; preds = %cond.false192, %cond.true190
  %cond199 = phi i32 [ %call191, %cond.true190 ], [ %bf.clear197, %cond.false192 ], !dbg !9423
  %cmp200 = icmp eq i32 %cond199, %bf.cast184, !dbg !9424
  br i1 %cmp200, label %land.lhs.true201, label %for.inc, !dbg !9425

land.lhs.true201:                                 ; preds = %cond.end198
  %idxprom202 = zext i32 %23 to i64, !dbg !9426
  %operand204 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom202, i32 3, !dbg !9427
  %27 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand204, align 8, !dbg !9427
  %mode206 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %27, i64 0, i32 2, !dbg !9428
  %bf.load207 = load i16, i16* %mode206, align 8, !dbg !9428
  %bf.cast208 = zext i16 %bf.load207 to i32, !dbg !9428
  %bf.load210 = load i64, i64* %12, align 8, !dbg !9429
  %bf.cast2129 = and i64 %bf.load210, 65535, !dbg !9429
  %cmp213 = icmp eq i64 %bf.cast2129, 14, !dbg !9429
  br i1 %cmp213, label %cond.true214, label %cond.false216, !dbg !9429

cond.true214:                                     ; preds = %land.lhs.true201
  %call215 = tail call i32 @vector_type_mode(%union.tree_node* %call2) #6, !dbg !9429
  br label %cond.end222, !dbg !9429

cond.false216:                                    ; preds = %land.lhs.true201
  %bf.load219 = load i32, i32* %mode194, align 4, !dbg !9429
  %bf.lshr220 = lshr i32 %bf.load219, 16, !dbg !9429
  %bf.clear221 = and i32 %bf.lshr220, 255, !dbg !9429
  br label %cond.end222, !dbg !9429

cond.end222:                                      ; preds = %cond.false216, %cond.true214
  %cond223 = phi i32 [ %call215, %cond.true214 ], [ %bf.clear221, %cond.false216 ], !dbg !9429
  %cmp224 = icmp eq i32 %cond223, %bf.cast208, !dbg !9430
  br i1 %cmp224, label %cleanup235.loopexit, label %for.inc, !dbg !9431

for.inc:                                          ; preds = %cond.end198, %cond.end222
  call void @llvm.dbg.value(metadata %union.tree_node* %call121, metadata !9282, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata i32 %bf.cast115, metadata !9285, metadata !DIExpression()), !dbg !9368
  %inc227 = add nuw nsw i32 %i.0, 1, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %inc227, metadata !9279, metadata !DIExpression()), !dbg !9368
  br label %for.cond, !dbg !9433, !llvm.loop !9434

if.end234:                                        ; preds = %cond.end98
  store i32 %c1.0, i32* %code1, align 4, !dbg !9436
  store i32 %c2.0, i32* %code2, align 4, !dbg !9437
  br label %cleanup235, !dbg !9438

cleanup235.loopexit:                              ; preds = %for.cond, %cond.end222, %for.body, %lor.lhs.false127, %lor.lhs.false142, %lor.lhs.false157, %lor.lhs.false163, %lor.lhs.false133, %lor.lhs.false148
  %retval.1.ph = phi i8 [ 0, %for.cond ], [ 1, %cond.end222 ], [ 0, %for.body ], [ 0, %lor.lhs.false127 ], [ 0, %lor.lhs.false133 ], [ 0, %lor.lhs.false142 ], [ 0, %lor.lhs.false148 ], [ 0, %lor.lhs.false157 ], [ 0, %lor.lhs.false163 ]
  br label %cleanup235, !dbg !9439

cleanup235:                                       ; preds = %cleanup235.loopexit, %if.then101, %cond.end, %lor.lhs.false47, %if.end36, %if.end25, %if.end234, %if.end22
  %retval.1 = phi i8 [ 1, %if.end234 ], [ 1, %if.end22 ], [ 0, %if.end25 ], [ 0, %if.end36 ], [ 0, %lor.lhs.false47 ], [ 0, %cond.end ], [ 0, %if.then101 ], [ %retval.1.ph, %cleanup235.loopexit ], !dbg !9288
  ret i8 %retval.1, !dbg !9439
}

declare dso_local %struct.optab_d* @optab_for_tree_code(i32, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !9440 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !9444, metadata !DIExpression()), !dbg !9445
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !9446
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !9446
  ret %struct.VEC_tree_heap* %0, !dbg !9446
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !9447 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !9452, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !9453, metadata !DIExpression()), !dbg !9455
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !9456
  %0 = load i32, i32* %num1, align 8, !dbg !9456
  %inc = add i32 %0, 1, !dbg !9456
  store i32 %inc, i32* %num1, align 8, !dbg !9456
  %idxprom = zext i32 %0 to i64, !dbg !9456
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9456
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !9454, metadata !DIExpression()), !dbg !9455
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !9456
  ret %union.tree_node** %arrayidx, !dbg !9456
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @supportable_narrowing_operation(i32 %code, %union.gimple_statement_d* %stmt, %union.tree_node* %vectype, i32* %code1, i32* %multi_step_cvt, %struct.VEC_tree_heap** %interm_types) local_unnamed_addr #5 !dbg !9457 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !9461, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9462, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata %union.tree_node* %vectype, metadata !9463, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32* %code1, metadata !9464, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32* %multi_step_cvt, metadata !9465, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %interm_types, metadata !9466, metadata !DIExpression()), !dbg !9481
  %call = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #8, !dbg !9482
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9471, metadata !DIExpression()), !dbg !9481
  %call1 = tail call %union.tree_node* @get_vectype_for_scalar_type(%union.tree_node* %call) #8, !dbg !9483
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9472, metadata !DIExpression()), !dbg !9481
  switch i32 %code, label %sw.default [
    i32 116, label %sw.epilog
    i32 113, label %sw.epilog
    i32 77, label %sw.bb2
    i32 78, label %cleanup113
  ], !dbg !9484

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 180, metadata !9473, metadata !DIExpression()), !dbg !9481
  br label %sw.epilog, !dbg !9485

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 4869, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9487
  br label %sw.epilog, !dbg !9488

sw.epilog:                                        ; preds = %entry, %entry, %sw.default, %sw.bb2
  %c1.0 = phi i32 [ undef, %sw.default ], [ 180, %sw.bb2 ], [ 178, %entry ], [ 178, %entry ]
  call void @llvm.dbg.value(metadata i32 %c1.0, metadata !9473, metadata !DIExpression()), !dbg !9481
  %cmp = icmp eq i32 %code, 77, !dbg !9489
  br i1 %cmp, label %if.then, label %if.else, !dbg !9491

if.then:                                          ; preds = %sw.epilog
  %call4 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c1.0, %union.tree_node* %call, i32 0) #6, !dbg !9492
  call void @llvm.dbg.value(metadata %struct.optab_d* %call4, metadata !9469, metadata !DIExpression()), !dbg !9481
  br label %if.end, !dbg !9493

if.else:                                          ; preds = %sw.epilog
  %call5 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c1.0, %union.tree_node* %vectype, i32 0) #6, !dbg !9494
  call void @llvm.dbg.value(metadata %struct.optab_d* %call5, metadata !9469, metadata !DIExpression()), !dbg !9481
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %optab1.0 = phi %struct.optab_d* [ %call4, %if.then ], [ %call5, %if.else ], !dbg !9495
  call void @llvm.dbg.value(metadata %struct.optab_d* %optab1.0, metadata !9469, metadata !DIExpression()), !dbg !9481
  %tobool = icmp eq %struct.optab_d* %optab1.0, null, !dbg !9496
  br i1 %tobool, label %cleanup113, label %if.end7, !dbg !9498

if.end7:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %vectype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9499
  %bf.load = load i64, i64* %0, align 8, !dbg !9499
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9499
  %cmp8 = icmp eq i64 %bf.cast1, 14, !dbg !9499
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !9499

cond.true:                                        ; preds = %if.end7
  %call9 = tail call i32 @vector_type_mode(%union.tree_node* %vectype) #6, !dbg !9499
  br label %cond.end, !dbg !9499

cond.false:                                       ; preds = %if.end7
  %type10 = bitcast %union.tree_node* %vectype to %struct.tree_type*, !dbg !9499
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i64 0, i32 6, !dbg !9499
  %bf.load11 = load i32, i32* %mode, align 4, !dbg !9499
  %bf.lshr = lshr i32 %bf.load11, 16, !dbg !9499
  %bf.clear12 = and i32 %bf.lshr, 255, !dbg !9499
  br label %cond.end, !dbg !9499

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call9, %cond.true ], [ %bf.clear12, %cond.false ], !dbg !9499
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9467, metadata !DIExpression()), !dbg !9481
  %idxprom = sext i32 %cond to i64, !dbg !9500
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab1.0, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !9502
  %1 = load i32, i32* %insn_code, align 4, !dbg !9502
  call void @llvm.dbg.value(metadata i32 %1, metadata !9468, metadata !DIExpression()), !dbg !9481
  %cmp13 = icmp eq i32 %1, 2956, !dbg !9503
  br i1 %cmp13, label %cleanup113, label %if.end15, !dbg !9504

if.end15:                                         ; preds = %cond.end
  %idxprom16 = zext i32 %1 to i64, !dbg !9505
  %operand = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom16, i32 3, !dbg !9506
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !9506
  %mode19 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 0, i32 2, !dbg !9507
  %bf.load20 = load i16, i16* %mode19, align 8, !dbg !9507
  %bf.cast21 = zext i16 %bf.load20 to i32, !dbg !9507
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9508
  %bf.load23 = load i64, i64* %3, align 8, !dbg !9508
  %bf.cast252 = and i64 %bf.load23, 65535, !dbg !9508
  %cmp26 = icmp eq i64 %bf.cast252, 14, !dbg !9508
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !9508

cond.true27:                                      ; preds = %if.end15
  %call28 = tail call i32 @vector_type_mode(%union.tree_node* %call1) #6, !dbg !9508
  br label %cond.end35, !dbg !9508

cond.false29:                                     ; preds = %if.end15
  %type30 = bitcast %union.tree_node* %call1 to %struct.tree_type*, !dbg !9508
  %mode31 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i64 0, i32 6, !dbg !9508
  %bf.load32 = load i32, i32* %mode31, align 4, !dbg !9508
  %bf.lshr33 = lshr i32 %bf.load32, 16, !dbg !9508
  %bf.clear34 = and i32 %bf.lshr33, 255, !dbg !9508
  br label %cond.end35, !dbg !9508

cond.end35:                                       ; preds = %cond.false29, %cond.true27
  %cond36 = phi i32 [ %call28, %cond.true27 ], [ %bf.clear34, %cond.false29 ], !dbg !9508
  %cmp37 = icmp eq i32 %cond36, %bf.cast21, !dbg !9509
  store i32 %c1.0, i32* %code1, align 4, !dbg !9481
  br i1 %cmp37, label %cleanup113, label %if.then38, !dbg !9510

if.then38:                                        ; preds = %cond.end35
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9480, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %vectype, metadata !9475, metadata !DIExpression()), !dbg !9481
  %call39 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 3) #8, !dbg !9512
  store %struct.VEC_tree_heap* %call39, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !9513
  call void @llvm.dbg.value(metadata i32 0, metadata !9476, metadata !DIExpression()), !dbg !9481
  %type100 = bitcast %union.tree_node* %call1 to %struct.tree_type*, !dbg !9514
  %mode101 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type100, i64 0, i32 6, !dbg !9514
  br label %for.cond, !dbg !9519

for.cond:                                         ; preds = %for.inc, %if.then38
  %4 = phi %struct.insn_operand_data* [ %2, %if.then38 ], [ %13, %for.inc ]
  %prev_type.0 = phi %union.tree_node* [ %vectype, %if.then38 ], [ %call53, %for.inc ], !dbg !9511
  %i.0 = phi i32 [ 0, %if.then38 ], [ %inc110, %for.inc ], !dbg !9520
  %prev_mode.0 = phi i32 [ %cond, %if.then38 ], [ %bf.cast47, %for.inc ], !dbg !9511
  call void @llvm.dbg.value(metadata i32 %prev_mode.0, metadata !9480, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9476, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata %union.tree_node* %prev_type.0, metadata !9475, metadata !DIExpression()), !dbg !9481
  %exitcond = icmp eq i32 %i.0, 3, !dbg !9521
  br i1 %exitcond, label %cleanup113.loopexit, label %for.body, !dbg !9522

for.body:                                         ; preds = %for.cond
  %mode45 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %4, i64 0, i32 2, !dbg !9523
  %bf.load46 = load i16, i16* %mode45, align 8, !dbg !9523
  %bf.cast47 = zext i16 %bf.load46 to i32, !dbg !9523
  call void @llvm.dbg.value(metadata i32 %bf.cast47, metadata !9477, metadata !DIExpression()), !dbg !9511
  %5 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !9524
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %prev_type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9525
  %bf.load49 = load i64, i64* %6, align 8, !dbg !9525
  %bf.lshr50 = lshr i64 %bf.load49, 21, !dbg !9525
  %7 = trunc i64 %bf.lshr50 to i32, !dbg !9525
  %bf.cast52 = and i32 %7, 1, !dbg !9525
  %call53 = tail call %union.tree_node* %5(i32 %bf.cast47, i32 %bf.cast52) #6, !dbg !9526
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !9474, metadata !DIExpression()), !dbg !9481
  %call54 = tail call %struct.optab_d* @optab_for_tree_code(i32 %c1.0, %union.tree_node* %call53, i32 0) #6, !dbg !9527
  call void @llvm.dbg.value(metadata %struct.optab_d* %call54, metadata !9470, metadata !DIExpression()), !dbg !9481
  %tobool55 = icmp eq %struct.optab_d* %call54, null, !dbg !9528
  br i1 %tobool55, label %cleanup113.loopexit, label %lor.lhs.false, !dbg !9530

lor.lhs.false:                                    ; preds = %for.body
  %idxprom57 = sext i32 %prev_mode.0 to i64, !dbg !9531
  %insn_code59 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %optab1.0, i64 0, i32 4, i64 %idxprom57, i32 0, !dbg !9532
  %8 = load i32, i32* %insn_code59, align 4, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %8, metadata !9468, metadata !DIExpression()), !dbg !9481
  %cmp60 = icmp eq i32 %8, 2956, !dbg !9533
  br i1 %cmp60, label %cleanup113.loopexit, label %lor.lhs.false61, !dbg !9534

lor.lhs.false61:                                  ; preds = %lor.lhs.false
  %idxprom62 = zext i32 %8 to i64, !dbg !9535
  %operand64 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom62, i32 3, !dbg !9536
  %9 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand64, align 8, !dbg !9536
  %mode66 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %9, i64 0, i32 2, !dbg !9537
  %bf.load67 = load i16, i16* %mode66, align 8, !dbg !9537
  %cmp69 = icmp eq i16 %bf.load67, %bf.load46, !dbg !9538
  br i1 %cmp69, label %lor.lhs.false70, label %cleanup113.loopexit, !dbg !9539

lor.lhs.false70:                                  ; preds = %lor.lhs.false61
  %idxprom72 = zext i16 %bf.load46 to i64, !dbg !9540
  %insn_code74 = getelementptr inbounds %struct.optab_d, %struct.optab_d* %call54, i64 0, i32 4, i64 %idxprom72, i32 0, !dbg !9541
  %10 = load i32, i32* %insn_code74, align 4, !dbg !9541
  call void @llvm.dbg.value(metadata i32 %10, metadata !9468, metadata !DIExpression()), !dbg !9481
  %cmp75 = icmp eq i32 %10, 2956, !dbg !9542
  br i1 %cmp75, label %cleanup113.loopexit, label %if.end77, !dbg !9543

if.end77:                                         ; preds = %lor.lhs.false70
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %interm_types, align 8, !dbg !9544
  %tobool78 = icmp eq %struct.VEC_tree_heap* %11, null, !dbg !9544
  br i1 %tobool78, label %cond.end82, label %cond.true79, !dbg !9544

cond.true79:                                      ; preds = %if.end77
  %base80 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !9544
  br label %cond.end82, !dbg !9544

cond.end82:                                       ; preds = %if.end77, %cond.true79
  %cond83 = phi %struct.VEC_tree_base* [ %base80, %cond.true79 ], [ null, %if.end77 ], !dbg !9544
  %call84 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond83, %union.tree_node* %call53) #8, !dbg !9544
  %12 = load i32, i32* %multi_step_cvt, align 4, !dbg !9545
  %inc = add nsw i32 %12, 1, !dbg !9545
  store i32 %inc, i32* %multi_step_cvt, align 4, !dbg !9545
  %idxprom85 = zext i32 %10 to i64, !dbg !9546
  %operand87 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom85, i32 3, !dbg !9547
  %13 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand87, align 8, !dbg !9547
  %mode89 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %13, i64 0, i32 2, !dbg !9548
  %bf.load90 = load i16, i16* %mode89, align 8, !dbg !9548
  %bf.cast91 = zext i16 %bf.load90 to i32, !dbg !9548
  %bf.load93 = load i64, i64* %3, align 8, !dbg !9549
  %bf.cast953 = and i64 %bf.load93, 65535, !dbg !9549
  %cmp96 = icmp eq i64 %bf.cast953, 14, !dbg !9549
  br i1 %cmp96, label %cond.true97, label %cond.false99, !dbg !9549

cond.true97:                                      ; preds = %cond.end82
  %call98 = tail call i32 @vector_type_mode(%union.tree_node* %call1) #6, !dbg !9549
  br label %cond.end105, !dbg !9549

cond.false99:                                     ; preds = %cond.end82
  %bf.load102 = load i32, i32* %mode101, align 4, !dbg !9549
  %bf.lshr103 = lshr i32 %bf.load102, 16, !dbg !9549
  %bf.clear104 = and i32 %bf.lshr103, 255, !dbg !9549
  br label %cond.end105, !dbg !9549

cond.end105:                                      ; preds = %cond.false99, %cond.true97
  %cond106 = phi i32 [ %call98, %cond.true97 ], [ %bf.clear104, %cond.false99 ], !dbg !9549
  %cmp107 = icmp eq i32 %cond106, %bf.cast91, !dbg !9550
  br i1 %cmp107, label %cleanup113.loopexit, label %for.inc, !dbg !9551

for.inc:                                          ; preds = %cond.end105
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !9475, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %bf.cast47, metadata !9480, metadata !DIExpression()), !dbg !9511
  %inc110 = add nuw nsw i32 %i.0, 1, !dbg !9552
  call void @llvm.dbg.value(metadata i32 %inc110, metadata !9476, metadata !DIExpression()), !dbg !9481
  br label %for.cond, !dbg !9553, !llvm.loop !9554

cleanup113.loopexit:                              ; preds = %for.cond, %cond.end105, %lor.lhs.false, %lor.lhs.false70, %for.body, %lor.lhs.false61
  %retval.1.ph = phi i8 [ 0, %for.cond ], [ 1, %cond.end105 ], [ 0, %for.body ], [ 0, %lor.lhs.false ], [ 0, %lor.lhs.false61 ], [ 0, %lor.lhs.false70 ]
  br label %cleanup113, !dbg !9556

cleanup113:                                       ; preds = %cleanup113.loopexit, %cond.end35, %if.end, %cond.end, %entry
  %retval.1 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 0, %cond.end ], [ 1, %cond.end35 ], [ %retval.1.ph, %cleanup113.loopexit ], !dbg !9481
  ret i8 %retval.1, !dbg !9556
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @is_ctrl_stmt(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9557 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9559, metadata !DIExpression()), !dbg !9560
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !9561
  %tobool = icmp eq i8 %call, 0, !dbg !9561
  br i1 %tobool, label %return, label %if.end, !dbg !9563

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !9564
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !9564
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !9564
  br label %return, !dbg !9565

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !9560
  ret %union.tree_node* %retval.0, !dbg !9566
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !9567 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !9571, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !9572, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32 2, metadata !9573, metadata !DIExpression()), !dbg !9576
  %call = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !9577
  %call1 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call) #8, !dbg !9577
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9574, metadata !DIExpression()), !dbg !9576
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !9578
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !9579
  store i8 0, i8* %done, align 8, !dbg !9580
  %call2 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !9581
  %tobool = icmp eq i8 %call2, 0, !dbg !9581
  br i1 %tobool, label %if.then, label %if.end, !dbg !9582

if.then:                                          ; preds = %entry
  store i8 1, i8* %done, align 8, !dbg !9583
  br label %cleanup, !dbg !9586

if.end:                                           ; preds = %entry
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !9587
  store i32 3, i32* %iter_type, align 4, !dbg !9588
  %call8 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !9589
  br label %cleanup, !dbg !9590

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ null, %if.then ], [ %call8, %if.end ], !dbg !9576
  ret %union.tree_node** %retval.0, !dbg !9591
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !9592 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !9594, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9595, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.value(metadata i32 2, metadata !9596, metadata !DIExpression()), !dbg !9597
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !9598
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !9599
  store i32 3, i32* %iter_type, align 4, !dbg !9600
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !9601
  ret %union.tree_node** %call, !dbg !9602
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9603 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9605, metadata !DIExpression()), !dbg !9606
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !9607
  %cmp = icmp eq i32 %call, 2, !dbg !9608
  %conv1 = zext i1 %cmp to i8, !dbg !9607
  ret i8 %conv1, !dbg !9609
}

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !9610 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !9614, metadata !DIExpression()), !dbg !9616
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !9617
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !9617
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !9619
  br i1 %tobool, label %if.end, label %if.then, !dbg !9620

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !9621
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !9621
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !9615, metadata !DIExpression()), !dbg !9616
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !9623
  %3 = load i64, i64* %2, align 8, !dbg !9623
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !9624
  store i64 %3, i64* %4, align 8, !dbg !9624
  br label %cleanup, !dbg !9625

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !9626
  store i8 1, i8* %done, align 8, !dbg !9627
  br label %cleanup, !dbg !9628

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !9616
  ret %union.tree_node** %retval.0, !dbg !9629
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9630 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9632, metadata !DIExpression()), !dbg !9633
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !9634
  %cmp = icmp ugt i32 %call, 5, !dbg !9635
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9636

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !9637
  %cmp2 = icmp ult i32 %call1, 10, !dbg !9638
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !9639
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !9640 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !9644, metadata !DIExpression()), !dbg !9645
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !9646
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !9647
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !9648
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !9649
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !9650
  store i32 0, i32* %iter_type, align 4, !dbg !9651
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !9652
  store i32 0, i32* %phi_i, align 8, !dbg !9653
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !9654
  store i32 0, i32* %num_phi, align 4, !dbg !9655
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !9656
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !9657
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !9658
  store i8 1, i8* %done, align 8, !dbg !9659
  ret void, !dbg !9660
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !9661 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !9665, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9666, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %flags, metadata !9667, metadata !DIExpression()), !dbg !9668
  %0 = and i32 %flags, 10, !dbg !9669
  %1 = icmp eq i32 %0, 8, !dbg !9669
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !9669

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !9669
  %3 = icmp eq i32 %2, 4, !dbg !9669
  br i1 %3, label %cond.true, label %cond.end, !dbg !9669

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9669
  br label %cond.end, !dbg !9669

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !9670
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !9671

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #8, !dbg !9672
  br label %cond.end12, !dbg !9671

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !9671
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !9673
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !9674
  %and14 = and i32 %flags, 8, !dbg !9675
  %tobool15 = icmp eq i32 %and14, 0, !dbg !9675
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !9677

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !9678
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !9679

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !9680
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !9681
  br i1 %cmp, label %if.end, label %if.then, !dbg !9682

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !9683
  %6 = load i64*, i64** %5, align 8, !dbg !9683
  %7 = load i64, i64* %6, align 8, !dbg !9684
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !9685
  store i64 %7, i64* %8, align 8, !dbg !9685
  br label %if.end, !dbg !9686

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !9687
  %tobool24 = icmp eq i32 %and23, 0, !dbg !9687
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !9688

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #8, !dbg !9689
  br label %cond.end28, !dbg !9688

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !9688
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !9690
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !9691
  %and30 = and i32 %flags, 4, !dbg !9692
  %tobool31 = icmp eq i32 %and30, 0, !dbg !9692
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !9694

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !9695
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !9696

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !9697
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !9698
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !9699

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !9700
  %11 = load i64*, i64** %10, align 8, !dbg !9700
  %12 = load i64, i64* %11, align 8, !dbg !9701
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !9702
  store i64 %12, i64* %13, align 8, !dbg !9702
  br label %if.end42, !dbg !9703

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !9704
  store i8 0, i8* %done, align 8, !dbg !9705
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !9706
  store i32 0, i32* %phi_i, align 8, !dbg !9707
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !9708
  store i32 0, i32* %num_phi, align 4, !dbg !9709
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !9710
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !9711
  ret void, !dbg !9712
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9713 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9717, metadata !DIExpression()), !dbg !9718
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !9719
  %tobool = icmp eq i8 %call, 0, !dbg !9719
  br i1 %tobool, label %return, label %if.end, !dbg !9721

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !9722
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !9722
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !9722
  br label %return, !dbg !9723

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !9718
  ret %struct.def_optype_d* %retval.0, !dbg !9724
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9725 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9729, metadata !DIExpression()), !dbg !9730
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !9731
  %tobool = icmp eq i8 %call, 0, !dbg !9731
  br i1 %tobool, label %return, label %if.end, !dbg !9733

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !9734
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !9734
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !9734
  br label %return, !dbg !9735

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !9730
  ret %struct.use_optype_d* %retval.0, !dbg !9736
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9737 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9739, metadata !DIExpression()), !dbg !9740
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !9741
  %tobool = icmp eq i8 %call, 0, !dbg !9741
  br i1 %tobool, label %return, label %if.end, !dbg !9743

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !9744
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !9744
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !9744
  br label %return, !dbg !9745

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !9740
  ret %union.tree_node* %retval.0, !dbg !9746
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9747 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9749, metadata !DIExpression()), !dbg !9750
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !9751
  %cmp = icmp eq i32 %call, 0, !dbg !9752
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !9753

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !9754
  %cmp2 = icmp ult i32 %call1, 10, !dbg !9755
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !9756
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !9757 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !9761, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !9762, metadata !DIExpression()), !dbg !9763
  %call = tail call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 1) #8, !dbg !9764
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !9764
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !9764
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9764

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !9764
  br label %cond.end, !dbg !9764

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9764
  %call1 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond, %union.gimple_statement_d* %obj_) #8, !dbg !9764
  ret %union.gimple_statement_d** %call1, !dbg !9764
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9765 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !9769, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i32 1, metadata !9770, metadata !DIExpression()), !dbg !9772
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !9773
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !9773
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9773

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !9773
  br label %cond.end, !dbg !9773

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9773
  %call = tail call fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %cond, i32 1) #8, !dbg !9773
  %tobool1 = icmp eq i32 %call, 0, !dbg !9773
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9773
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9771, metadata !DIExpression()), !dbg !9772
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9773

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_gimple_heap** %vec_ to i8**, !dbg !9774
  %2 = load i8*, i8** %1, align 8, !dbg !9774
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !9774
  store i8* %call3, i8** %1, align 8, !dbg !9774
  br label %if.end, !dbg !9774

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9773
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !9776 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !9780, metadata !DIExpression()), !dbg !9783
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !9781, metadata !DIExpression()), !dbg !9783
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !9784
  %0 = load i32, i32* %num1, align 8, !dbg !9784
  %inc = add i32 %0, 1, !dbg !9784
  store i32 %inc, i32* %num1, align 8, !dbg !9784
  %idxprom = zext i32 %0 to i64, !dbg !9784
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9784
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !9782, metadata !DIExpression()), !dbg !9783
  store %union.gimple_statement_d* %obj_, %union.gimple_statement_d** %arrayidx, align 8, !dbg !9784
  ret %union.gimple_statement_d** %arrayidx, !dbg !9784
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9785 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !9789, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 1, metadata !9790, metadata !DIExpression()), !dbg !9791
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !9792
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9792

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 1, !dbg !9792
  %0 = load i32, i32* %alloc, align 4, !dbg !9792
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !9792
  %1 = load i32, i32* %num, align 8, !dbg !9792
  %cmp1 = icmp ne i32 %0, %1, !dbg !9792
  %phitmp = zext i1 %cmp1 to i32, !dbg !9792
  br label %cond.end, !dbg !9792

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9792

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9792
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !9793 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !9800, metadata !DIExpression()), !dbg !9801
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !9802
  %0 = load i32, i32* %flags, align 8, !dbg !9802
  %and = and i32 %0, 512, !dbg !9803
  %tobool = icmp eq i32 %and, 0, !dbg !9803
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !9804

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !9805
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !9805
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !9806
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !9807

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !9808
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !9808
  br label %cond.end, !dbg !9807

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !9807
  ret %struct.gimple_seq_d* %cond, !dbg !9809
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !9810 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !9817, metadata !DIExpression()), !dbg !9818
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !9819
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9819

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !9820
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !9820
  br label %cond.end, !dbg !9819

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !9819
  ret %struct.gimple_seq_node_d* %cond, !dbg !9821
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_uid(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !9822 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9826, metadata !DIExpression()), !dbg !9827
  %uid = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !9828
  %0 = load i32, i32* %uid, align 4, !dbg !9828
  ret i32 %0, !dbg !9829
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vec_void_p_base_length(%struct.VEC_vec_void_p_base* %vec_) unnamed_addr #0 !dbg !9830 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_base* %vec_, metadata !9836, metadata !DIExpression()), !dbg !9837
  %tobool = icmp eq %struct.VEC_vec_void_p_base* %vec_, null, !dbg !9838
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9838

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 0, !dbg !9838
  %0 = load i32, i32* %num, align 8, !dbg !9838
  br label %cond.end, !dbg !9838

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !9838
  ret i32 %cond, !dbg !9838
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @VEC_vec_void_p_base_index(%struct.VEC_vec_void_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !9839 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_base* %vec_, metadata !9843, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9844, metadata !DIExpression()), !dbg !9845
  br label %land.end, !dbg !9846

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !9846
  %arrayidx = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9846
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !9846
  ret i8* %0, !dbg !9846
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9847 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9849, metadata !DIExpression()), !dbg !9850
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !9851
  %0 = load i32, i32* %nargs, align 4, !dbg !9851
  ret i32 %0, !dbg !9852
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @exist_non_indexing_operands_for_use_p(%union.tree_node* %use, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !9853 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %use, metadata !9857, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !9858, metadata !DIExpression()), !dbg !9861
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !9862
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !9860, metadata !DIExpression()), !dbg !9861
  %data_ref_info = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 7, !dbg !9863
  %0 = load %struct.data_reference*, %struct.data_reference** %data_ref_info, align 8, !dbg !9863
  %tobool = icmp eq %struct.data_reference* %0, null, !dbg !9863
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9865

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d* %stmt) #6, !dbg !9866
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9866
  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !9868

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !9869
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9869
  %bf.load = load i64, i64* %1, align 8, !dbg !9869
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9871
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !9871
  br i1 %cmp, label %cleanup, label %if.end7, !dbg !9872

if.end7:                                          ; preds = %if.end4
  %call8 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !9873
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !9859, metadata !DIExpression()), !dbg !9861
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9874
  %bf.load10 = load i64, i64* %2, align 8, !dbg !9874
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !9876
  %cmp13 = icmp eq i64 %bf.cast122, 141, !dbg !9876
  br i1 %cmp13, label %if.end15, label %cleanup, !dbg !9877

if.end15:                                         ; preds = %if.end7
  %cmp16 = icmp eq %union.tree_node* %call8, %use, !dbg !9878
  %. = zext i1 %cmp16 to i8, !dbg !9861
  br label %cleanup, !dbg !9861

cleanup:                                          ; preds = %if.end7, %if.end, %entry, %if.end15, %if.end4
  %retval.0 = phi i8 [ 1, %entry ], [ 0, %if.end ], [ 0, %if.end4 ], [ 0, %if.end7 ], [ %., %if.end15 ], !dbg !9861
  ret i8 %retval.0, !dbg !9880
}

declare dso_local zeroext i8 @flow_loop_nested_p(%struct.loop*, %struct.loop*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_assign_copy_p(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !9881 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9885, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 0, metadata !9886, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !9887, metadata !DIExpression()), !dbg !9888
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !9889
  %tobool = icmp eq i8 %call, 0, !dbg !9889
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !9889

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !9889
  %cmp = icmp eq i32 %call1, 0, !dbg !9889
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !9889

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9889
  br label %cond.end, !dbg !9889

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !9890
  store %union.tree_node* %op, %union.tree_node** %call3, align 8, !dbg !9891
  ret void, !dbg !9892
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9893 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9895, metadata !DIExpression()), !dbg !9896
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !9897
  %0 = load i32, i32* %num_ops, align 4, !dbg !9897
  ret i32 %0, !dbg !9898
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9899 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9901, metadata !DIExpression()), !dbg !9903
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !9904
  %idxprom = zext i32 %call to i64, !dbg !9905
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !9905
  %0 = load i64, i64* %arrayidx, align 8, !dbg !9905
  call void @llvm.dbg.value(metadata i64 %0, metadata !9902, metadata !DIExpression()), !dbg !9903
  %cmp = icmp eq i64 %0, 0, !dbg !9906
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !9906

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9906
  br label %cond.end, !dbg !9906

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !9907
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !9908
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !9909
  ret %union.tree_node** %2, !dbg !9910
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !9911 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9915, metadata !DIExpression()), !dbg !9916
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !9917
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !9918
  ret i32 %call1, !dbg !9919
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !9920 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !9924, metadata !DIExpression()), !dbg !9925
  %idxprom = zext i32 %code to i64, !dbg !9926
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !9926
  %0 = load i32, i32* %arrayidx, align 4, !dbg !9926
  ret i32 %0, !dbg !9927
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !9928 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9932, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 %i, metadata !9933, metadata !DIExpression()), !dbg !9934
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !9935
  %tobool = icmp eq i8 %call, 0, !dbg !9935
  br i1 %tobool, label %return, label %if.then, !dbg !9937

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !9938
  %idxprom = zext i32 %i to i64, !dbg !9938
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !9938
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9938
  br label %return, !dbg !9940

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !9941
  ret %union.tree_node* %retval.0, !dbg !9942
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !9943 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !9948, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.value(metadata i32 %index, metadata !9949, metadata !DIExpression()), !dbg !9950
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !9951
  %0 = load i32, i32* %capacity, align 8, !dbg !9951
  %cmp = icmp ult i32 %0, %index, !dbg !9951
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !9951

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !9951
  br label %cond.end, !dbg !9951

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !9952
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !9952
  ret %struct.phi_arg_d* %arrayidx, !dbg !9953
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_uid(%union.gimple_statement_d* %g, i32 %uid) unnamed_addr #0 !dbg !9954 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !9958, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.value(metadata i32 %uid, metadata !9959, metadata !DIExpression()), !dbg !9960
  %uid1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !9961
  store i32 %uid, i32* %uid1, align 4, !dbg !9962
  ret void, !dbg !9963
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8** @VEC_vec_void_p_heap_safe_push(%struct.VEC_vec_void_p_heap** %vec_, i8* %obj_) unnamed_addr #0 !dbg !9964 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, metadata !9969, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i8* %obj_, metadata !9970, metadata !DIExpression()), !dbg !9971
  %call = tail call fastcc i32 @VEC_vec_void_p_heap_reserve(%struct.VEC_vec_void_p_heap** nonnull @stmt_vec_info_vec, i32 1) #8, !dbg !9972
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !9972
  %tobool = icmp eq %struct.VEC_vec_void_p_heap* %0, null, !dbg !9972
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9972

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %0, i64 0, i32 0, !dbg !9972
  br label %cond.end, !dbg !9972

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vec_void_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9972
  %call1 = tail call fastcc i8** @VEC_vec_void_p_base_quick_push(%struct.VEC_vec_void_p_base* %cond, i8* %obj_) #8, !dbg !9972
  ret i8** %call1, !dbg !9972
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @VEC_vec_void_p_base_replace(%struct.VEC_vec_void_p_base* %vec_, i32 %ix_, i8* %obj_) unnamed_addr #0 !dbg !9973 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_base* %vec_, metadata !9978, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9979, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.value(metadata i8* %obj_, metadata !9980, metadata !DIExpression()), !dbg !9982
  %idxprom = zext i32 %ix_ to i64, !dbg !9983
  %arrayidx = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9983
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !9983
  call void @llvm.dbg.value(metadata i8* %0, metadata !9981, metadata !DIExpression()), !dbg !9982
  store i8* %obj_, i8** %arrayidx, align 8, !dbg !9983
  ret i8* %0, !dbg !9983
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vec_void_p_heap_reserve(%struct.VEC_vec_void_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9984 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, metadata !9988, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.value(metadata i32 1, metadata !9989, metadata !DIExpression()), !dbg !9991
  %0 = load %struct.VEC_vec_void_p_heap*, %struct.VEC_vec_void_p_heap** @stmt_vec_info_vec, align 8, !dbg !9992
  %tobool = icmp eq %struct.VEC_vec_void_p_heap* %0, null, !dbg !9992
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9992

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_vec_void_p_heap, %struct.VEC_vec_void_p_heap* %0, i64 0, i32 0, !dbg !9992
  br label %cond.end, !dbg !9992

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_vec_void_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9992
  %call = tail call fastcc i32 @VEC_vec_void_p_base_space(%struct.VEC_vec_void_p_base* %cond, i32 1) #8, !dbg !9992
  %tobool1 = icmp eq i32 %call, 0, !dbg !9992
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9992
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9990, metadata !DIExpression()), !dbg !9991
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9992

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_vec_void_p_heap** @stmt_vec_info_vec to i8**), align 8, !dbg !9993
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %1, i32 1) #6, !dbg !9993
  store i8* %call3, i8** bitcast (%struct.VEC_vec_void_p_heap** @stmt_vec_info_vec to i8**), align 8, !dbg !9993
  br label %if.end, !dbg !9993

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9992
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8** @VEC_vec_void_p_base_quick_push(%struct.VEC_vec_void_p_base* %vec_, i8* %obj_) unnamed_addr #0 !dbg !9995 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_base* %vec_, metadata !9999, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.value(metadata i8* %obj_, metadata !10000, metadata !DIExpression()), !dbg !10002
  %num1 = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 0, !dbg !10003
  %0 = load i32, i32* %num1, align 8, !dbg !10003
  %inc = add i32 %0, 1, !dbg !10003
  store i32 %inc, i32* %num1, align 8, !dbg !10003
  %idxprom = zext i32 %0 to i64, !dbg !10003
  %arrayidx = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10003
  call void @llvm.dbg.value(metadata i8** %arrayidx, metadata !10001, metadata !DIExpression()), !dbg !10002
  store i8* %obj_, i8** %arrayidx, align 8, !dbg !10003
  ret i8** %arrayidx, !dbg !10003
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_vec_void_p_base_space(%struct.VEC_vec_void_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10004 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_vec_void_p_base* %vec_, metadata !10008, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.value(metadata i32 1, metadata !10009, metadata !DIExpression()), !dbg !10010
  %tobool = icmp eq %struct.VEC_vec_void_p_base* %vec_, null, !dbg !10011
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10011

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 1, !dbg !10011
  %0 = load i32, i32* %alloc, align 4, !dbg !10011
  %num = getelementptr inbounds %struct.VEC_vec_void_p_base, %struct.VEC_vec_void_p_base* %vec_, i64 0, i32 0, !dbg !10011
  %1 = load i32, i32* %num, align 8, !dbg !10011
  %cmp1 = icmp ne i32 %0, %1, !dbg !10011
  %phitmp = zext i1 %cmp1 to i32, !dbg !10011
  br label %cond.end, !dbg !10011

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10011
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10012 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10014, metadata !DIExpression()), !dbg !10015
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !10016
  ret %union.tree_node* %call, !dbg !10017
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !10018 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10020, metadata !DIExpression()), !dbg !10022
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !10023
  call void @llvm.dbg.value(metadata i32 %call, metadata !10021, metadata !DIExpression()), !dbg !10022
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !10024

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !10026
  %bf.load = load i32, i32* %0, align 8, !dbg !10026
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10026
  br label %cleanup, !dbg !10027

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10028
  br label %cleanup, !dbg !10030

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !10022
  ret i32 %retval.0, !dbg !10031
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !10032 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !10036, metadata !DIExpression()), !dbg !10037
  %idxprom = sext i32 %code to i64, !dbg !10038
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !10038
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10038
  %conv = zext i8 %0 to i32, !dbg !10039
  ret i32 %conv, !dbg !10040
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10041 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10043, metadata !DIExpression()), !dbg !10046
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #8, !dbg !10047
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10044, metadata !DIExpression()), !dbg !10046
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10048
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !10048
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !10048
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !10049
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !10049
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !10049
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !10050
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !10050
  ret %union.tree_node* %4, !dbg !10051
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10052 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10054, metadata !DIExpression()), !dbg !10055
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !10056
  %cmp = icmp ugt i32 %call, 2, !dbg !10058
  br i1 %cmp, label %if.then, label %return, !dbg !10059

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #8, !dbg !10060
  br label %return, !dbg !10061

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !10062
  ret %union.tree_node* %retval.0, !dbg !10063
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !10064 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !10070, metadata !DIExpression()), !dbg !10071
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !10072
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10072

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !10072
  %0 = load i32, i32* %num, align 8, !dbg !10072
  br label %cond.end, !dbg !10072

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10072
  ret i32 %cond, !dbg !10072
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !10073 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !10077, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10078, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !10079, metadata !DIExpression()), !dbg !10080
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !10081
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10081

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !10081
  %0 = load i32, i32* %num, align 8, !dbg !10081
  %cmp = icmp ugt i32 %0, %ix_, !dbg !10081
  br i1 %cmp, label %if.then, label %if.else, !dbg !10083

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !10084
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10084
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10084
  br label %return, !dbg !10084

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !10086

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !10088
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !10088
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !10088
  ret i32 %retval.0, !dbg !10083
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @vect_pow2(i32 %x) unnamed_addr #0 !dbg !10089 {
entry:
  call void @llvm.dbg.value(metadata i32 %x, metadata !10091, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 1, metadata !10093, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 0, metadata !10092, metadata !DIExpression()), !dbg !10094
  br label %for.cond, !dbg !10095

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !10097
  %res.0 = phi i32 [ 1, %entry ], [ %mul, %for.body ], !dbg !10094
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !10093, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10092, metadata !DIExpression()), !dbg !10094
  %cmp = icmp slt i32 %i.0, %x, !dbg !10098
  br i1 %cmp, label %for.body, label %for.end, !dbg !10100

for.body:                                         ; preds = %for.cond
  %mul = shl nsw i32 %res.0, 1, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %mul, metadata !10093, metadata !DIExpression()), !dbg !10094
  %inc = add nuw nsw i32 %i.0, 1, !dbg !10102
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10092, metadata !DIExpression()), !dbg !10094
  br label %for.cond, !dbg !10103, !llvm.loop !10104

for.end:                                          ; preds = %for.cond
  %res.0.lcssa = phi i32 [ %res.0, %for.cond ], !dbg !10094
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !10093, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !10093, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.value(metadata i32 %res.0.lcssa, metadata !10093, metadata !DIExpression()), !dbg !10094
  ret i32 %res.0.lcssa, !dbg !10106
}

declare dso_local void @vect_get_slp_defs(%struct._slp_tree*, %struct.VEC_tree_heap**, %struct.VEC_tree_heap**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !10107 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !10111, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10112, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !10113, metadata !DIExpression()), !dbg !10115
  %idxprom = zext i32 %ix_ to i64, !dbg !10116
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10116
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10116
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !10116
  ret %union.tree_node* %0, !dbg !10116
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_copy(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !10117 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !10121, metadata !DIExpression()), !dbg !10124
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !10125
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10125

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !10125
  %0 = load i32, i32* %num, align 8, !dbg !10125
  %phitmp = zext i32 %0 to i64, !dbg !10125
  br label %cond.end, !dbg !10125

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %cond, metadata !10122, metadata !DIExpression()), !dbg !10124
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !10123, metadata !DIExpression()), !dbg !10124
  %tobool1 = icmp eq i64 %cond, 0, !dbg !10126
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10125

if.then:                                          ; preds = %cond.end
  %conv2 = trunc i64 %cond to i32, !dbg !10128
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %conv2) #6, !dbg !10128
  %1 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !10128
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %1, metadata !10123, metadata !DIExpression()), !dbg !10124
  %num4 = bitcast i8* %call to i32*, !dbg !10128
  store i32 %conv2, i32* %num4, align 8, !dbg !10128
  %vec = getelementptr inbounds i8, i8* %call, i64 8, !dbg !10128
  %arraydecay7 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 0, !dbg !10128
  %2 = bitcast %union.tree_node** %arraydecay7 to i8*, !dbg !10128
  %mul = shl nuw nsw i64 %cond, 3, !dbg !10128
  %call8 = tail call i8* @memcpy(i8* nonnull %vec, i8* nonnull %2, i64 %mul) #6, !dbg !10128
  br label %if.end, !dbg !10128

if.end:                                           ; preds = %cond.end, %if.then
  %new_vec_.0 = phi %struct.VEC_tree_heap* [ %1, %if.then ], [ null, %cond.end ], !dbg !10124
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %new_vec_.0, metadata !10123, metadata !DIExpression()), !dbg !10124
  ret %struct.VEC_tree_heap* %new_vec_.0, !dbg !10125
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_create_vectorized_promotion_stmts(%struct.VEC_tree_heap** %vec_oprnds0, %struct.VEC_tree_heap** %vec_oprnds1, i32 %multi_step_cvt, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %vec_dsts, %struct.gimple_stmt_iterator* %gsi, %struct._slp_tree* %slp_node, i32 %code1, i32 %code2, %union.tree_node* %decl1, %union.tree_node* %decl2, i32 %op_type, %struct._stmt_vec_info** %prev_stmt_info) unnamed_addr #5 !dbg !10130 {
entry:
  %vop0 = alloca %union.tree_node*, align 8
  %vec_tmp = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !10135, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !10136, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %multi_step_cvt, metadata !10137, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10138, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %vec_dsts, metadata !10139, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !10140, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !10141, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %code1, metadata !10142, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %code2, metadata !10143, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %union.tree_node* %decl1, metadata !10144, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %union.tree_node* %decl2, metadata !10145, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %op_type, metadata !10146, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info** %prev_stmt_info, metadata !10147, metadata !DIExpression()), !dbg !10158
  %0 = bitcast %union.tree_node** %vop0 to i8*, !dbg !10159
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10159
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !10160
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !10156, metadata !DIExpression()), !dbg !10158
  %1 = bitcast %struct.VEC_tree_heap** %vec_tmp to i8*, !dbg !10161
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !10161
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %vec_dsts, i64 0, i32 0, !dbg !10162
  %call1 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base) #8, !dbg !10162
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10153, metadata !DIExpression()), !dbg !10158
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !10163
  %tobool2 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !10163
  br i1 %tobool2, label %cond.end6, label %cond.true3, !dbg !10163

cond.true3:                                       ; preds = %entry
  %base4 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !10163
  br label %cond.end6, !dbg !10163

cond.end6:                                        ; preds = %entry, %cond.true3
  %cond7 = phi %struct.VEC_tree_base* [ %base4, %cond.true3 ], [ null, %entry ], !dbg !10163
  %call8 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond7) #8, !dbg !10163
  %mul = shl i32 %call8, 1, !dbg !10163
  %call9 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %mul) #8, !dbg !10163
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call9, metadata !10157, metadata !DIExpression()), !dbg !10158
  store %struct.VEC_tree_heap* %call9, %struct.VEC_tree_heap** %vec_tmp, align 8, !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10148, metadata !DIExpression()), !dbg !10158
  %cmp = icmp eq i32 %op_type, 2, !dbg !10165
  %tobool36 = icmp eq i32 %multi_step_cvt, 0, !dbg !10170
  %tobool53 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !10172
  %vec_stmts = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 3, !dbg !10175
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !10177
  br label %for.cond, !dbg !10180

for.cond:                                         ; preds = %for.inc, %cond.end6
  %i.0 = phi i32 [ 0, %cond.end6 ], [ %inc, %for.inc ], !dbg !10181
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10148, metadata !DIExpression()), !dbg !10158
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !10182
  %tobool10 = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !10182
  br i1 %tobool10, label %cond.end14, label %cond.true11, !dbg !10182

cond.true11:                                      ; preds = %for.cond
  %base12 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !10182
  br label %cond.end14, !dbg !10182

cond.end14:                                       ; preds = %for.cond, %cond.true11
  %cond15 = phi %struct.VEC_tree_base* [ %base12, %cond.true11 ], [ null, %for.cond ], !dbg !10182
  call void @llvm.dbg.value(metadata %union.tree_node** %vop0, metadata !10149, metadata !DIExpression(DW_OP_deref)), !dbg !10158
  %call16 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond15, i32 %i.0, %union.tree_node** nonnull %vop0) #8, !dbg !10182
  %tobool17 = icmp eq i32 %call16, 0, !dbg !10183
  br i1 %tobool17, label %for.end, label %for.body, !dbg !10183

for.body:                                         ; preds = %cond.end14
  br i1 %cmp, label %if.then, label %if.end, !dbg !10184

if.then:                                          ; preds = %for.body
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !10185
  %tobool18 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !10185
  br i1 %tobool18, label %cond.end22, label %cond.true19, !dbg !10185

cond.true19:                                      ; preds = %if.then
  %base20 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !10185
  br label %cond.end22, !dbg !10185

cond.end22:                                       ; preds = %if.then, %cond.true19
  %cond23 = phi %struct.VEC_tree_base* [ %base20, %cond.true19 ], [ null, %if.then ], !dbg !10185
  %call24 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond23, i32 %i.0) #8, !dbg !10185
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !10150, metadata !DIExpression()), !dbg !10158
  br label %if.end, !dbg !10186

if.end:                                           ; preds = %for.body, %cond.end22
  %vop1.0 = phi %union.tree_node* [ %call24, %cond.end22 ], [ null, %for.body ], !dbg !10165
  call void @llvm.dbg.value(metadata %union.tree_node* %vop1.0, metadata !10150, metadata !DIExpression()), !dbg !10158
  %5 = load %union.tree_node*, %union.tree_node** %vop0, align 8, !dbg !10187
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !10149, metadata !DIExpression()), !dbg !10158
  %call25 = call fastcc %union.gimple_statement_d* @vect_gen_widened_results_half(i32 %code1, %union.tree_node* %decl1, %union.tree_node* %5, %union.tree_node* %vop1.0, i32 %op_type, %union.tree_node* %call1, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt) #8, !dbg !10188
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !10154, metadata !DIExpression()), !dbg !10158
  %6 = load %union.tree_node*, %union.tree_node** %vop0, align 8, !dbg !10189
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !10149, metadata !DIExpression()), !dbg !10158
  %call26 = call fastcc %union.gimple_statement_d* @vect_gen_widened_results_half(i32 %code2, %union.tree_node* %decl2, %union.tree_node* %6, %union.tree_node* %vop1.0, i32 %op_type, %union.tree_node* %call1, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt) #8, !dbg !10190
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call26, metadata !10155, metadata !DIExpression()), !dbg !10158
  %call27 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call25) #8, !dbg !10191
  %tobool28 = icmp eq i8 %call27, 0, !dbg !10191
  br i1 %tobool28, label %if.else32, label %if.then29, !dbg !10193

if.then29:                                        ; preds = %if.end
  %call30 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call25) #8, !dbg !10194
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !10151, metadata !DIExpression()), !dbg !10158
  %call31 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call26) #8, !dbg !10196
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !10152, metadata !DIExpression()), !dbg !10158
  br label %if.end35, !dbg !10197

if.else32:                                        ; preds = %if.end
  %call33 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call25) #8, !dbg !10198
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !10151, metadata !DIExpression()), !dbg !10158
  %call34 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call26) #8, !dbg !10200
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !10152, metadata !DIExpression()), !dbg !10158
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %if.then29
  %new_tmp1.0 = phi %union.tree_node* [ %call30, %if.then29 ], [ %call33, %if.else32 ], !dbg !10201
  %new_tmp2.0 = phi %union.tree_node* [ %call31, %if.then29 ], [ %call34, %if.else32 ], !dbg !10201
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tmp2.0, metadata !10152, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %union.tree_node* %new_tmp1.0, metadata !10151, metadata !DIExpression()), !dbg !10158
  br i1 %tobool36, label %if.else52, label %if.then37, !dbg !10202

if.then37:                                        ; preds = %if.end35
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_tmp, align 8, !dbg !10203
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %7, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %7, metadata !10157, metadata !DIExpression()), !dbg !10158
  %base40 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !10203
  %call44 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base40, %union.tree_node* %new_tmp1.0) #8, !dbg !10203
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_tmp, align 8, !dbg !10205
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !10157, metadata !DIExpression()), !dbg !10158
  %base47 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !10205
  %call51 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base47, %union.tree_node* %new_tmp2.0) #8, !dbg !10205
  br label %for.inc, !dbg !10206

if.else52:                                        ; preds = %if.end35
  br i1 %tobool53, label %if.else72, label %if.then54, !dbg !10207

if.then54:                                        ; preds = %if.else52
  %9 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !10208
  %tobool55 = icmp eq %struct.VEC_gimple_heap* %9, null, !dbg !10208
  br i1 %tobool55, label %cond.end60, label %cond.true56, !dbg !10208

cond.true56:                                      ; preds = %if.then54
  %base58 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %9, i64 0, i32 0, !dbg !10208
  br label %cond.end60, !dbg !10208

cond.end60:                                       ; preds = %if.then54, %cond.true56
  %cond61 = phi %struct.VEC_gimple_base* [ %base58, %cond.true56 ], [ null, %if.then54 ], !dbg !10208
  %call62 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond61, %union.gimple_statement_d* %call25) #8, !dbg !10208
  %10 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !10209
  %tobool64 = icmp eq %struct.VEC_gimple_heap* %10, null, !dbg !10209
  br i1 %tobool64, label %cond.end69, label %cond.true65, !dbg !10209

cond.true65:                                      ; preds = %cond.end60
  %base67 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %10, i64 0, i32 0, !dbg !10209
  br label %cond.end69, !dbg !10209

cond.end69:                                       ; preds = %cond.end60, %cond.true65
  %cond70 = phi %struct.VEC_gimple_base* [ %base67, %cond.true65 ], [ null, %cond.end60 ], !dbg !10209
  %call71 = call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond70, %union.gimple_statement_d* %call26) #8, !dbg !10209
  br label %for.inc, !dbg !10210

if.else72:                                        ; preds = %if.else52
  %11 = load %struct._stmt_vec_info*, %struct._stmt_vec_info** %prev_stmt_info, align 8, !dbg !10211
  %tobool73 = icmp eq %struct._stmt_vec_info* %11, null, !dbg !10211
  br i1 %tobool73, label %if.then74, label %if.else75, !dbg !10212

if.then74:                                        ; preds = %if.else72
  store %union.gimple_statement_d* %call25, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !10213
  br label %if.end76, !dbg !10214

if.else75:                                        ; preds = %if.else72
  %related_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %11, i64 0, i32 14, !dbg !10215
  store %union.gimple_statement_d* %call25, %union.gimple_statement_d** %related_stmt, align 8, !dbg !10216
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  %call77 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call25) #8, !dbg !10217
  store %struct._stmt_vec_info* %call77, %struct._stmt_vec_info** %prev_stmt_info, align 8, !dbg !10218
  %related_stmt78 = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call77, i64 0, i32 14, !dbg !10219
  store %union.gimple_statement_d* %call26, %union.gimple_statement_d** %related_stmt78, align 8, !dbg !10220
  %call79 = call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call26) #8, !dbg !10221
  store %struct._stmt_vec_info* %call79, %struct._stmt_vec_info** %prev_stmt_info, align 8, !dbg !10222
  br label %for.inc

for.inc:                                          ; preds = %if.then37, %if.end76, %cond.end69
  %inc = add nuw nsw i32 %i.0, 1, !dbg !10223
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10148, metadata !DIExpression()), !dbg !10158
  br label %for.cond, !dbg !10224, !llvm.loop !10225

for.end:                                          ; preds = %cond.end14
  br i1 %tobool36, label %if.end91, label %if.then83, !dbg !10227

if.then83:                                        ; preds = %for.end
  %12 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_tmp, align 8, !dbg !10228
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %12, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %12, metadata !10157, metadata !DIExpression()), !dbg !10158
  %base86 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %12, i64 0, i32 0, !dbg !10228
  %call90 = call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_copy(%struct.VEC_tree_base* %base86) #8, !dbg !10228
  store %struct.VEC_tree_heap* %call90, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !10231
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_tmp, metadata !10157, metadata !DIExpression(DW_OP_deref)), !dbg !10158
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vec_tmp) #8, !dbg !10232
  %sub = add nsw i32 %multi_step_cvt, -1, !dbg !10233
  call fastcc void @vect_create_vectorized_promotion_stmts(%struct.VEC_tree_heap** %vec_oprnds0, %struct.VEC_tree_heap** %vec_oprnds1, i32 %sub, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %vec_dsts, %struct.gimple_stmt_iterator* %gsi, %struct._slp_tree* %slp_node, i32 %code1, i32 %code2, %union.tree_node* %decl2, %union.tree_node* %decl2, i32 %op_type, %struct._stmt_vec_info** %prev_stmt_info) #8, !dbg !10234
  br label %if.end91, !dbg !10235

if.end91:                                         ; preds = %for.end, %if.then83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !10236
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10236
  ret void, !dbg !10236
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !10237 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !10241, metadata !DIExpression()), !dbg !10242
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !10243
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !10243
  br i1 %tobool, label %if.end, label %if.then, !dbg !10245

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !10245
  tail call void @free(i8* nonnull %1) #6, !dbg !10243
  br label %if.end, !dbg !10243

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !10245
  ret void, !dbg !10245
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !10246 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !10250, metadata !DIExpression()), !dbg !10252
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !10253
  %0 = load i32, i32* %num1, align 8, !dbg !10253
  %dec = add i32 %0, -1, !dbg !10253
  store i32 %dec, i32* %num1, align 8, !dbg !10253
  %idxprom = zext i32 %dec to i64, !dbg !10253
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10253
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10253
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !10251, metadata !DIExpression()), !dbg !10252
  ret %union.tree_node* %1, !dbg !10253
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !10254 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !10258, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10259, metadata !DIExpression()), !dbg !10260
  br label %land.end, !dbg !10261

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !10261
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10261
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10261
  ret %union.tree_node* %0, !dbg !10261
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @vect_gen_widened_results_half(i32 %code, %union.tree_node* %decl, %union.tree_node* %vec_oprnd0, %union.tree_node* %vec_oprnd1, i32 %op_type, %union.tree_node* %vec_dest, %struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !10262 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !10266, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !10267, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd0, metadata !10268, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd1, metadata !10269, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata i32 %op_type, metadata !10270, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_dest, metadata !10271, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !10272, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10273, metadata !DIExpression()), !dbg !10276
  %cmp = icmp eq i32 %code, 59, !dbg !10277
  br i1 %cmp, label %if.then, label %if.else5, !dbg !10279

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %op_type, 2, !dbg !10280
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !10283

if.then2:                                         ; preds = %if.then
  %call = tail call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %decl, i32 2, %union.tree_node* %vec_oprnd0, %union.tree_node* %vec_oprnd1) #6, !dbg !10284
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !10274, metadata !DIExpression()), !dbg !10276
  br label %if.end, !dbg !10285

if.else:                                          ; preds = %if.then
  %call3 = tail call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %decl, i32 1, %union.tree_node* %vec_oprnd0) #6, !dbg !10286
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !10274, metadata !DIExpression()), !dbg !10276
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %new_stmt.0 = phi %union.gimple_statement_d* [ %call, %if.then2 ], [ %call3, %if.else ], !dbg !10287
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !10274, metadata !DIExpression()), !dbg !10276
  %call4 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %vec_dest, %union.gimple_statement_d* %new_stmt.0) #8, !dbg !10288
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !10275, metadata !DIExpression()), !dbg !10276
  tail call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %new_stmt.0, %union.tree_node* %call4) #8, !dbg !10289
  br label %if.end14, !dbg !10290

if.else5:                                         ; preds = %entry
  %idxprom = sext i32 %code to i64, !dbg !10291
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %idxprom, !dbg !10291
  %0 = load i8, i8* %arrayidx, align 1, !dbg !10291
  %conv = zext i8 %0 to i32, !dbg !10291
  %cmp6 = icmp eq i32 %conv, %op_type, !dbg !10291
  br i1 %cmp6, label %cond.end, label %cond.true, !dbg !10291

cond.true:                                        ; preds = %if.else5
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 1514, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10291
  br label %cond.end, !dbg !10291

cond.end:                                         ; preds = %if.else5, %cond.true
  %cmp8 = icmp eq i32 %op_type, 2, !dbg !10293
  %spec.select = select i1 %cmp8, %union.tree_node* %vec_oprnd1, %union.tree_node* null, !dbg !10295
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !10269, metadata !DIExpression()), !dbg !10276
  %call12 = tail call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %code, %union.tree_node* %vec_dest, %union.tree_node* %vec_oprnd0, %union.tree_node* %spec.select) #6, !dbg !10296
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !10274, metadata !DIExpression()), !dbg !10276
  %call13 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %vec_dest, %union.gimple_statement_d* %call12) #8, !dbg !10297
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !10275, metadata !DIExpression()), !dbg !10276
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call12, %union.tree_node* %call13) #8, !dbg !10298
  br label %if.end14

if.end14:                                         ; preds = %cond.end, %if.end
  %new_stmt.1 = phi %union.gimple_statement_d* [ %new_stmt.0, %if.end ], [ %call12, %cond.end ], !dbg !10299
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.1, metadata !10274, metadata !DIExpression()), !dbg !10276
  tail call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %new_stmt.1, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !10300
  ret %union.gimple_statement_d* %new_stmt.1, !dbg !10301
}

declare dso_local %union.gimple_statement_d* @gimple_build_call(%union.tree_node*, i32, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !10302 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !10305, metadata !DIExpression()), !dbg !10306
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !10307
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !10308
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10310

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10311
  %bf.load = load i64, i64* %0, align 8, !dbg !10311
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10312
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !10312
  br i1 %cmp, label %if.then, label %if.end, !dbg !10313

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10314
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !10314
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !10315
  br label %if.end, !dbg !10314

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !10316
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_get_loop_based_defs(%union.tree_node** %oprnd, %union.gimple_statement_d* %stmt, i32 %dt, %struct.VEC_tree_heap** %vec_oprnds, i32 %multi_step_cvt) unnamed_addr #5 !dbg !10317 {
entry:
  %0 = bitcast %union.tree_node** %oprnd to %struct.tree_common**, !dbg !10327
  %.pre = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !10329
  %1 = bitcast %struct.tree_common* %.pre to %union.tree_node*, !dbg !10330
  br label %tailrecurse, !dbg !10330

tailrecurse:                                      ; preds = %if.then13, %entry
  %2 = phi %union.tree_node* [ %1, %entry ], [ %call4, %if.then13 ], !dbg !10327
  %3 = phi %struct.tree_common* [ %.pre, %entry ], [ %8, %if.then13 ], !dbg !10329
  %multi_step_cvt.tr = phi i32 [ %multi_step_cvt, %entry ], [ %sub, %if.then13 ]
  call void @llvm.dbg.value(metadata %union.tree_node** %oprnd, metadata !10321, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10322, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 %dt, metadata !10323, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds, metadata !10324, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 %multi_step_cvt.tr, metadata !10325, metadata !DIExpression()), !dbg !10332
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !10329
  %4 = bitcast %union.tree_node** %type to i64**, !dbg !10329
  %5 = load i64*, i64** %4, align 8, !dbg !10329
  %bf.load = load i64, i64* %5, align 8, !dbg !10329
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10333
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !10333
  br i1 %cmp, label %if.else, label %if.then, !dbg !10334

if.then:                                          ; preds = %tailrecurse
  %call = tail call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %2, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !10335
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10326, metadata !DIExpression()), !dbg !10332
  br label %if.end, !dbg !10336

if.else:                                          ; preds = %tailrecurse
  %call1 = tail call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %dt, %union.tree_node* %2) #8, !dbg !10337
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10326, metadata !DIExpression()), !dbg !10332
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %vec_oprnd.0 = phi %union.tree_node* [ %call, %if.then ], [ %call1, %if.else ], !dbg !10327
  call void @llvm.dbg.value(metadata %union.tree_node* %vec_oprnd.0, metadata !10326, metadata !DIExpression()), !dbg !10332
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10338
  %tobool = icmp eq %struct.VEC_tree_heap* %6, null, !dbg !10338
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10338

cond.true:                                        ; preds = %if.end
  %base2 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !10338
  br label %cond.end, !dbg !10338

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base2, %cond.true ], [ null, %if.end ], !dbg !10338
  %call3 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %vec_oprnd.0) #8, !dbg !10338
  %call4 = tail call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %dt, %union.tree_node* %vec_oprnd.0) #8, !dbg !10339
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !10326, metadata !DIExpression()), !dbg !10332
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10340
  %tobool5 = icmp eq %struct.VEC_tree_heap* %7, null, !dbg !10340
  br i1 %tobool5, label %cond.end9, label %cond.true6, !dbg !10340

cond.true6:                                       ; preds = %cond.end
  %base7 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !10340
  br label %cond.end9, !dbg !10340

cond.end9:                                        ; preds = %cond.end, %cond.true6
  %cond10 = phi %struct.VEC_tree_base* [ %base7, %cond.true6 ], [ null, %cond.end ], !dbg !10340
  %call11 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond10, %union.tree_node* %call4) #8, !dbg !10340
  store %union.tree_node* %call4, %union.tree_node** %oprnd, align 8, !dbg !10341
  %tobool12 = icmp eq i32 %multi_step_cvt.tr, 0, !dbg !10342
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !10343

if.then13:                                        ; preds = %cond.end9
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10343
  %sub = add nsw i32 %multi_step_cvt.tr, -1, !dbg !10344
  br label %tailrecurse, !dbg !10330

if.end14:                                         ; preds = %cond.end9
  ret void, !dbg !10345
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_create_vectorized_demotion_stmts(%struct.VEC_tree_heap** %vec_oprnds, i32 %multi_step_cvt, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap* %vec_dsts, %struct.gimple_stmt_iterator* %gsi, %struct._slp_tree* %slp_node, i32 %code, %struct._stmt_vec_info** %prev_stmt_info) unnamed_addr #5 !dbg !10346 {
entry:
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %vec_dsts, i64 0, i32 0, !dbg !10365
  %tobool33 = icmp eq %struct._slp_tree* %slp_node, null, !dbg !10366
  %vec_stmts = getelementptr inbounds %struct._slp_tree, %struct._slp_tree* %slp_node, i64 0, i32 3, !dbg !10366
  br label %tailrecurse, !dbg !10373

tailrecurse:                                      ; preds = %cond.end57, %entry
  %multi_step_cvt.tr = phi i32 [ %multi_step_cvt, %entry ], [ %sub, %cond.end57 ]
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds, metadata !10350, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %multi_step_cvt.tr, metadata !10351, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10352, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %vec_dsts, metadata !10353, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !10354, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !10355, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %code, metadata !10356, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info** %prev_stmt_info, metadata !10357, metadata !DIExpression()), !dbg !10365
  %call = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !10376
  call void @llvm.dbg.value(metadata %struct._stmt_vec_info* %call, metadata !10364, metadata !DIExpression()), !dbg !10365
  %call1 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base) #8, !dbg !10377
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10362, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 0, metadata !10358, metadata !DIExpression()), !dbg !10365
  %tobool25 = icmp eq i32 %multi_step_cvt.tr, 0, !dbg !10378
  %vectorized_stmt = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %call, i64 0, i32 6, !dbg !10379
  br i1 %tobool25, label %tailrecurse.split.us, label %tailrecurse.tailrecurse.split_crit_edge, !dbg !10382

tailrecurse.tailrecurse.split_crit_edge:          ; preds = %tailrecurse
  br label %for.cond, !dbg !10382

tailrecurse.split.us:                             ; preds = %tailrecurse
  br label %for.cond.us, !dbg !10382

for.cond.us:                                      ; preds = %for.inc.us, %tailrecurse.split.us
  %i.0.us = phi i32 [ 0, %tailrecurse.split.us ], [ %add50.us, %for.inc.us ], !dbg !10383
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !10358, metadata !DIExpression()), !dbg !10365
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10384
  %tobool2.us = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !10384
  br i1 %tobool2.us, label %cond.end6.us, label %cond.true3.us, !dbg !10384

cond.true3.us:                                    ; preds = %for.cond.us
  %base4.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !10384
  br label %cond.end6.us, !dbg !10384

cond.end6.us:                                     ; preds = %cond.true3.us, %for.cond.us
  %cond7.us = phi %struct.VEC_tree_base* [ %base4.us, %cond.true3.us ], [ null, %for.cond.us ], !dbg !10384
  %call8.us = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond7.us) #8, !dbg !10384
  %cmp.us = icmp ult i32 %i.0.us, %call8.us, !dbg !10385
  br i1 %cmp.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !10386

for.body.us:                                      ; preds = %cond.end6.us
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10387
  %tobool9.us = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !10387
  br i1 %tobool9.us, label %cond.end13.us, label %cond.true10.us, !dbg !10387

cond.true10.us:                                   ; preds = %for.body.us
  %base11.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !10387
  br label %cond.end13.us, !dbg !10387

cond.end13.us:                                    ; preds = %cond.true10.us, %for.body.us
  %cond14.us = phi %struct.VEC_tree_base* [ %base11.us, %cond.true10.us ], [ null, %for.body.us ], !dbg !10387
  %call15.us = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond14.us, i32 %i.0.us) #8, !dbg !10387
  call void @llvm.dbg.value(metadata %union.tree_node* %call15.us, metadata !10359, metadata !DIExpression()), !dbg !10365
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10388
  %tobool16.us = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !10388
  br i1 %tobool16.us, label %cond.end20.us, label %cond.true17.us, !dbg !10388

cond.true17.us:                                   ; preds = %cond.end13.us
  %base18.us = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !10388
  br label %cond.end20.us, !dbg !10388

cond.end20.us:                                    ; preds = %cond.true17.us, %cond.end13.us
  %cond21.us = phi %struct.VEC_tree_base* [ %base18.us, %cond.true17.us ], [ null, %cond.end13.us ], !dbg !10388
  %add.us = or i32 %i.0.us, 1, !dbg !10388
  %call22.us = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond21.us, i32 %add.us) #8, !dbg !10388
  call void @llvm.dbg.value(metadata %union.tree_node* %call22.us, metadata !10360, metadata !DIExpression()), !dbg !10365
  %call23.us = tail call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %code, %union.tree_node* %call1, %union.tree_node* %call15.us, %union.tree_node* %call22.us) #6, !dbg !10389
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23.us, metadata !10363, metadata !DIExpression()), !dbg !10365
  %call24.us = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call1, %union.gimple_statement_d* %call23.us) #8, !dbg !10390
  call void @llvm.dbg.value(metadata %union.tree_node* %call24.us, metadata !10361, metadata !DIExpression()), !dbg !10365
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call23.us, %union.tree_node* %call24.us) #8, !dbg !10391
  tail call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call23.us, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !10392
  br i1 %tobool33, label %if.else43.us, label %if.then34.us, !dbg !10393

if.then34.us:                                     ; preds = %cond.end20.us
  %3 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_stmts, align 8, !dbg !10394
  %tobool35.us = icmp eq %struct.VEC_gimple_heap* %3, null, !dbg !10394
  br i1 %tobool35.us, label %cond.end40.us, label %cond.true36.us, !dbg !10394

cond.true36.us:                                   ; preds = %if.then34.us
  %base38.us = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %3, i64 0, i32 0, !dbg !10394
  br label %cond.end40.us, !dbg !10394

cond.end40.us:                                    ; preds = %cond.true36.us, %if.then34.us
  %cond41.us = phi %struct.VEC_gimple_base* [ %base38.us, %cond.true36.us ], [ null, %if.then34.us ], !dbg !10394
  %call42.us = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond41.us, %union.gimple_statement_d* %call23.us) #8, !dbg !10394
  br label %for.inc.us, !dbg !10394

if.else43.us:                                     ; preds = %cond.end20.us
  %4 = load %struct._stmt_vec_info*, %struct._stmt_vec_info** %prev_stmt_info, align 8, !dbg !10395
  %tobool44.us = icmp eq %struct._stmt_vec_info* %4, null, !dbg !10395
  br i1 %tobool44.us, label %if.then45.us, label %if.else46.us, !dbg !10396

if.else46.us:                                     ; preds = %if.else43.us
  %related_stmt.us = getelementptr inbounds %struct._stmt_vec_info, %struct._stmt_vec_info* %4, i64 0, i32 14, !dbg !10397
  store %union.gimple_statement_d* %call23.us, %union.gimple_statement_d** %related_stmt.us, align 8, !dbg !10398
  br label %if.end.us

if.then45.us:                                     ; preds = %if.else43.us
  store %union.gimple_statement_d* %call23.us, %union.gimple_statement_d** %vectorized_stmt, align 8, !dbg !10399
  br label %if.end.us, !dbg !10400

if.end.us:                                        ; preds = %if.then45.us, %if.else46.us
  %call47.us = tail call fastcc %struct._stmt_vec_info* @vinfo_for_stmt(%union.gimple_statement_d* %call23.us) #8, !dbg !10401
  store %struct._stmt_vec_info* %call47.us, %struct._stmt_vec_info** %prev_stmt_info, align 8, !dbg !10402
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.end.us, %cond.end40.us
  %add50.us = add i32 %i.0.us, 2, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %add50.us, metadata !10358, metadata !DIExpression()), !dbg !10365
  br label %for.cond.us, !dbg !10404, !llvm.loop !10405

for.end.us-lcssa.us:                              ; preds = %cond.end6.us
  %i.0.us.lcssa = phi i32 [ %i.0.us, %cond.end6.us ], !dbg !10383
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !10358, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %i.0.us.lcssa, metadata !10358, metadata !DIExpression()), !dbg !10365
  br label %for.end, !dbg !10407

for.cond:                                         ; preds = %cond.end30, %tailrecurse.tailrecurse.split_crit_edge
  %i.0 = phi i32 [ 0, %tailrecurse.tailrecurse.split_crit_edge ], [ %add50, %cond.end30 ], !dbg !10383
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10358, metadata !DIExpression()), !dbg !10365
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10384
  %tobool2 = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !10384
  br i1 %tobool2, label %cond.end6, label %cond.true3, !dbg !10384

cond.true3:                                       ; preds = %for.cond
  %base4 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !10384
  br label %cond.end6, !dbg !10384

cond.end6:                                        ; preds = %for.cond, %cond.true3
  %cond7 = phi %struct.VEC_tree_base* [ %base4, %cond.true3 ], [ null, %for.cond ], !dbg !10384
  %call8 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond7) #8, !dbg !10384
  %cmp = icmp ult i32 %i.0, %call8, !dbg !10385
  br i1 %cmp, label %for.body, label %for.end.us-lcssa, !dbg !10386

for.body:                                         ; preds = %cond.end6
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10387
  %tobool9 = icmp eq %struct.VEC_tree_heap* %6, null, !dbg !10387
  br i1 %tobool9, label %cond.end13, label %cond.true10, !dbg !10387

cond.true10:                                      ; preds = %for.body
  %base11 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !10387
  br label %cond.end13, !dbg !10387

cond.end13:                                       ; preds = %for.body, %cond.true10
  %cond14 = phi %struct.VEC_tree_base* [ %base11, %cond.true10 ], [ null, %for.body ], !dbg !10387
  %call15 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond14, i32 %i.0) #8, !dbg !10387
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !10359, metadata !DIExpression()), !dbg !10365
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10388
  %tobool16 = icmp eq %struct.VEC_tree_heap* %7, null, !dbg !10388
  br i1 %tobool16, label %cond.end20, label %cond.true17, !dbg !10388

cond.true17:                                      ; preds = %cond.end13
  %base18 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !10388
  br label %cond.end20, !dbg !10388

cond.end20:                                       ; preds = %cond.end13, %cond.true17
  %cond21 = phi %struct.VEC_tree_base* [ %base18, %cond.true17 ], [ null, %cond.end13 ], !dbg !10388
  %add = or i32 %i.0, 1, !dbg !10388
  %call22 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond21, i32 %add) #8, !dbg !10388
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !10360, metadata !DIExpression()), !dbg !10365
  %call23 = tail call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %code, %union.tree_node* %call1, %union.tree_node* %call15, %union.tree_node* %call22) #6, !dbg !10389
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !10363, metadata !DIExpression()), !dbg !10365
  %call24 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call1, %union.gimple_statement_d* %call23) #8, !dbg !10390
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !10361, metadata !DIExpression()), !dbg !10365
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call23, %union.tree_node* %call24) #8, !dbg !10391
  tail call void @vect_finish_stmt_generation(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %call23, %struct.gimple_stmt_iterator* %gsi) #8, !dbg !10392
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10408
  %tobool26 = icmp eq %struct.VEC_tree_heap* %8, null, !dbg !10408
  br i1 %tobool26, label %cond.end30, label %cond.true27, !dbg !10408

cond.true27:                                      ; preds = %cond.end20
  %base28 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !10408
  br label %cond.end30, !dbg !10408

cond.end30:                                       ; preds = %cond.end20, %cond.true27
  %cond31 = phi %struct.VEC_tree_base* [ %base28, %cond.true27 ], [ null, %cond.end20 ], !dbg !10408
  %div = lshr exact i32 %i.0, 1, !dbg !10408
  %call32 = tail call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond31, i32 %div, %union.tree_node* %call24) #8, !dbg !10408
  %add50 = add i32 %i.0, 2, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %add50, metadata !10358, metadata !DIExpression()), !dbg !10365
  br label %for.cond, !dbg !10404, !llvm.loop !10405

for.end.us-lcssa:                                 ; preds = %cond.end6
  %i.0.lcssa2 = phi i32 [ %i.0, %cond.end6 ], !dbg !10383
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa2, metadata !10358, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa2, metadata !10358, metadata !DIExpression()), !dbg !10365
  br label %for.end, !dbg !10407

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %i.0.lcssa = phi i32 [ %i.0.lcssa2, %for.end.us-lcssa ], [ %i.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !10383
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !10358, metadata !DIExpression()), !dbg !10365
  br i1 %tobool25, label %if.end61, label %if.then52, !dbg !10409

if.then52:                                        ; preds = %for.end
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds, align 8, !dbg !10410
  %tobool53 = icmp eq %struct.VEC_tree_heap* %9, null, !dbg !10410
  br i1 %tobool53, label %cond.end57, label %cond.true54, !dbg !10410

cond.true54:                                      ; preds = %if.then52
  %base55 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !10410
  br label %cond.end57, !dbg !10410

cond.end57:                                       ; preds = %if.then52, %cond.true54
  %cond58 = phi %struct.VEC_tree_base* [ %base55, %cond.true54 ], [ null, %if.then52 ], !dbg !10410
  %div60 = lshr exact i32 %i.0.lcssa, 1, !dbg !10410
  tail call fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %cond58, i32 %div60) #8, !dbg !10410
  %sub = add nsw i32 %multi_step_cvt.tr, -1, !dbg !10411
  br label %tailrecurse, !dbg !10373

if.end61:                                         ; preds = %for.end
  ret void, !dbg !10412
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_base_truncate(%struct.VEC_tree_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !10413 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !10417, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i32 %size_, metadata !10418, metadata !DIExpression()), !dbg !10419
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !10420
  br label %cond.true, !dbg !10420

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10420

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !10420

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !10420

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !10421
  store i32 %size_, i32* %num3, align 8, !dbg !10421
  br label %if.end, !dbg !10421

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !10420
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_get_vec_defs(%union.tree_node* %op0, %union.tree_node* %op1, %union.gimple_statement_d* %stmt, %struct.VEC_tree_heap** %vec_oprnds0, %struct.VEC_tree_heap** %vec_oprnds1, %struct._slp_tree* %slp_node) unnamed_addr #5 !dbg !10423 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !10427, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !10428, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !10429, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !10430, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !10431, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %struct._slp_tree* %slp_node, metadata !10432, metadata !DIExpression()), !dbg !10436
  %tobool = icmp eq %struct._slp_tree* %slp_node, null, !dbg !10437
  br i1 %tobool, label %if.else, label %if.then, !dbg !10438

if.then:                                          ; preds = %entry
  tail call void @vect_get_slp_defs(%struct._slp_tree* nonnull %slp_node, %struct.VEC_tree_heap** %vec_oprnds0, %struct.VEC_tree_heap** %vec_oprnds1) #6, !dbg !10439
  br label %if.end15, !dbg !10439

if.else:                                          ; preds = %entry
  %call = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !10440
  store %struct.VEC_tree_heap* %call, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !10441
  %call1 = tail call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* %op0, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !10442
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10433, metadata !DIExpression()), !dbg !10443
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !10444
  %tobool2 = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !10444
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !10444

cond.true:                                        ; preds = %if.else
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !10444
  br label %cond.end, !dbg !10444

cond.end:                                         ; preds = %if.else, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.else ], !dbg !10444
  %call3 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %call1) #8, !dbg !10444
  %tobool4 = icmp eq %union.tree_node* %op1, null, !dbg !10445
  br i1 %tobool4, label %if.end15, label %if.then5, !dbg !10447

if.then5:                                         ; preds = %cond.end
  %call6 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !10448
  store %struct.VEC_tree_heap* %call6, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !10450
  %call7 = tail call %union.tree_node* @vect_get_vec_def_for_operand(%union.tree_node* nonnull %op1, %union.gimple_statement_d* %stmt, %union.tree_node** null) #8, !dbg !10451
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !10433, metadata !DIExpression()), !dbg !10443
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !10452
  %tobool8 = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !10452
  br i1 %tobool8, label %cond.end12, label %cond.true9, !dbg !10452

cond.true9:                                       ; preds = %if.then5
  %base10 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !10452
  br label %cond.end12, !dbg !10452

cond.end12:                                       ; preds = %if.then5, %cond.true9
  %cond13 = phi %struct.VEC_tree_base* [ %base10, %cond.true9 ], [ null, %if.then5 ], !dbg !10452
  %call14 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond13, %union.tree_node* %call7) #8, !dbg !10452
  br label %if.end15, !dbg !10453

if.end15:                                         ; preds = %cond.end, %cond.end12, %if.then
  ret void, !dbg !10454
}

; Function Attrs: nounwind uwtable
define internal fastcc void @vect_get_vec_defs_for_stmt_copy(i32* %dt, %struct.VEC_tree_heap** %vec_oprnds0, %struct.VEC_tree_heap** %vec_oprnds1) unnamed_addr #5 !dbg !10455 {
entry:
  call void @llvm.dbg.value(metadata i32* %dt, metadata !10459, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds0, metadata !10460, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_oprnds1, metadata !10461, metadata !DIExpression()), !dbg !10463
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !10464
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !10464
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10464

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !10464
  br label %cond.end, !dbg !10464

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10464
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %cond) #8, !dbg !10464
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10462, metadata !DIExpression()), !dbg !10463
  %1 = load i32, i32* %dt, align 4, !dbg !10465
  %call1 = tail call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %1, %union.tree_node* %call) #8, !dbg !10466
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10462, metadata !DIExpression()), !dbg !10463
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds0, align 8, !dbg !10467
  %tobool2 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !10467
  br i1 %tobool2, label %cond.end6, label %cond.true3, !dbg !10467

cond.true3:                                       ; preds = %cond.end
  %base4 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !10467
  br label %cond.end6, !dbg !10467

cond.end6:                                        ; preds = %cond.end, %cond.true3
  %cond7 = phi %struct.VEC_tree_base* [ %base4, %cond.true3 ], [ null, %cond.end ], !dbg !10467
  %call8 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond7, %union.tree_node* %call1) #8, !dbg !10467
  %tobool9 = icmp eq %struct.VEC_tree_heap** %vec_oprnds1, null, !dbg !10468
  br i1 %tobool9, label %if.end, label %land.lhs.true, !dbg !10470

land.lhs.true:                                    ; preds = %cond.end6
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !10471
  %tobool10 = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !10471
  br i1 %tobool10, label %if.end, label %if.then, !dbg !10472

if.then:                                          ; preds = %land.lhs.true
  br i1 false, label %if.then.cond.end15_crit_edge, label %cond.true12, !dbg !10473

if.then.cond.end15_crit_edge:                     ; preds = %if.then
  br label %cond.end15, !dbg !10473

cond.true12:                                      ; preds = %if.then
  %base13 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !10473
  br label %cond.end15, !dbg !10473

cond.end15:                                       ; preds = %if.then.cond.end15_crit_edge, %cond.true12
  %cond16 = phi %struct.VEC_tree_base* [ %base13, %cond.true12 ], [ undef, %if.then.cond.end15_crit_edge ], !dbg !10473
  %call17 = tail call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %cond16) #8, !dbg !10473
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !10462, metadata !DIExpression()), !dbg !10463
  %arrayidx18 = getelementptr inbounds i32, i32* %dt, i64 1, !dbg !10475
  %4 = load i32, i32* %arrayidx18, align 4, !dbg !10475
  %call19 = tail call %union.tree_node* @vect_get_vec_def_for_stmt_copy(i32 %4, %union.tree_node* %call17) #8, !dbg !10476
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !10462, metadata !DIExpression()), !dbg !10463
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_oprnds1, align 8, !dbg !10477
  %tobool20 = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !10477
  br i1 %tobool20, label %cond.end24, label %cond.true21, !dbg !10477

cond.true21:                                      ; preds = %cond.end15
  %base22 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !10477
  br label %cond.end24, !dbg !10477

cond.end24:                                       ; preds = %cond.end15, %cond.true21
  %cond25 = phi %struct.VEC_tree_base* [ %base22, %cond.true21 ], [ null, %cond.end15 ], !dbg !10477
  %call26 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond25, %union.tree_node* %call19) #8, !dbg !10477
  br label %if.end, !dbg !10478

if.end:                                           ; preds = %land.lhs.true, %cond.end6, %cond.end24
  ret void, !dbg !10479
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vect_min_worthwhile_factor(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @vect_strided_load_supported(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @vect_setup_realignment(%union.gimple_statement_d*, %struct.gimple_stmt_iterator*, %union.tree_node**, i32, %union.tree_node*, %struct.loop**) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @vect_create_data_ref_ptr(%union.gimple_statement_d*, %struct.loop*, %union.tree_node*, %union.tree_node**, %union.gimple_statement_d**, i8 zeroext, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @bump_vector_ptr(%union.tree_node*, %union.gimple_statement_d*, %struct.gimple_stmt_iterator*, %union.gimple_statement_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @aligned_access_p(%struct.data_reference* %data_ref_info) unnamed_addr #0 !dbg !10480 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %data_ref_info, metadata !10484, metadata !DIExpression()), !dbg !10485
  %aux = getelementptr inbounds %struct.data_reference, %struct.data_reference* %data_ref_info, i64 0, i32 2, !dbg !10486
  %0 = bitcast i8** %aux to i64*, !dbg !10486
  %1 = load i64, i64* %0, align 8, !dbg !10486
  %conv = trunc i64 %1 to i32, !dbg !10486
  %cmp = icmp eq i32 %conv, 0, !dbg !10487
  %conv2 = zext i1 %cmp to i8, !dbg !10488
  ret i8 %conv2, !dbg !10489
}

declare dso_local %union.tree_node* @build_fold_indirect_ref_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_vdef(%union.gimple_statement_d* %g, %union.tree_node* %vdef) unnamed_addr #0 !dbg !10490 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10492, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata %union.tree_node* %vdef, metadata !10493, metadata !DIExpression()), !dbg !10494
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !10495
  %tobool = icmp eq i8 %call, 0, !dbg !10495
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10495

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i32 1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10495
  br label %cond.end, !dbg !10495

cond.end:                                         ; preds = %entry, %cond.true
  %vdef1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !10496
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef1 to %union.tree_node**, !dbg !10496
  store %union.tree_node* %vdef, %union.tree_node** %0, align 8, !dbg !10497
  ret void, !dbg !10498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_vuse(%union.gimple_statement_d* %g, %union.tree_node* %vuse) unnamed_addr #0 !dbg !10499 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %union.tree_node* %vuse, metadata !10502, metadata !DIExpression()), !dbg !10503
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !10504
  %tobool = icmp eq i8 %call, 0, !dbg !10504
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !10504

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i32 1407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !10504
  br label %cond.end, !dbg !10504

cond.end:                                         ; preds = %entry, %cond.true
  %vuse1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !10505
  %0 = bitcast %struct.ssa_use_operand_d** %vuse1 to %union.tree_node**, !dbg !10505
  store %union.tree_node* %vuse, %union.tree_node** %0, align 8, !dbg !10506
  ret void, !dbg !10507
}

declare dso_local i32 @alias_sets_conflict_p(i32, i32) local_unnamed_addr #2

declare dso_local i32 @get_alias_set(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_symbols_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local zeroext i8 @vect_transform_slp_perm_load(%union.gimple_statement_d*, %struct.VEC_tree_heap*, %struct.gimple_stmt_iterator*, i32, %struct._slp_instance*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @vect_transform_strided_load(%union.gimple_statement_d*, %struct.VEC_tree_heap*, i32, %struct.gimple_stmt_iterator*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !10508 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10510, metadata !DIExpression()), !dbg !10512
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %call, metadata !10511, metadata !DIExpression()), !dbg !10512
  %sub = add i32 %call, -3, !dbg !10514
  ret i32 %sub, !dbg !10515
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !10516 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10518, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 %index, metadata !10519, metadata !DIExpression()), !dbg !10520
  %add = add i32 %index, 3, !dbg !10521
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #8, !dbg !10522
  ret %union.tree_node* %call, !dbg !10523
}

declare dso_local %union.gimple_statement_d* @gimple_build_call_vec(%union.tree_node*, %struct.VEC_tree_heap*) local_unnamed_addr #2

declare dso_local zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_purge_dead_eh_edges(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @gsi_replace(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @vect_strided_store_supported(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @vect_permute_store_chain(%struct.VEC_tree_heap*, i32, %union.gimple_statement_d*, %struct.gimple_stmt_iterator*, %struct.VEC_tree_heap**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !10524 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !10530, metadata !DIExpression()), !dbg !10531
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !10532
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10532

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !10532
  %0 = load i32, i32* %num, align 8, !dbg !10532
  br label %cond.end, !dbg !10532

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !10532
  ret i32 %cond, !dbg !10532
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3925, !3926, !3927}
!llvm.ident = !{!3928}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3902, nameTableKind: None)
!1 = !DIFile(filename: "tree-vect-stmts.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2 = !{!3, !132, !138, !143, !148, !167, !174, !181, !375, !384, !388, !404, !411, !422, !427, !434, !456, !1948, !2091, !2130, !2156, !2162, !3860, !3867}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !4, line: 7, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!7 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!14 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!15 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!16 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!17 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!18 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!19 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!20 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!21 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!22 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!23 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!26 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!27 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!28 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!29 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!30 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!31 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!32 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!33 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!34 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!35 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!36 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!37 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!38 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!39 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!40 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!41 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!42 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!43 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!44 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!45 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!46 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!47 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!48 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!49 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!50 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!51 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!52 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!53 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!54 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!55 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!56 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!57 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!58 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!59 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!60 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!61 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!62 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!63 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!64 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!65 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!66 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!67 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!68 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!69 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!70 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!71 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!72 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!73 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!74 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!75 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!76 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!77 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!78 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!79 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!80 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!81 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!82 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!83 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!84 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!85 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!86 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!87 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!88 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!89 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!90 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!91 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!92 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!93 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!94 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!95 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!131 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !133, line: 363, baseType: !5, size: 32, elements: !134)
!133 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!134 = !{!135, !136, !137}
!135 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !133, line: 355, baseType: !5, size: 32, elements: !139)
!139 = !{!140, !141, !142}
!140 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !144, line: 474, baseType: !5, size: 32, elements: !145)
!144 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!145 = !{!146, !147}
!146 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !149, line: 280, baseType: !5, size: 32, elements: !150)
!149 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!150 = !{!151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!151 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !149, line: 1817, baseType: !5, size: 32, elements: !168)
!168 = !{!169, !170, !171, !172, !173}
!169 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !149, line: 1805, baseType: !5, size: 32, elements: !175)
!175 = !{!176, !177, !178, !179, !180}
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !149, line: 39, baseType: !5, size: 32, elements: !182)
!182 = !{!183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!183 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!184 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!185 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!186 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!187 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!188 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!189 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!190 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!191 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!192 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!193 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!194 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!195 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!196 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!197 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!198 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!199 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!200 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!201 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!202 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!203 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!204 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!205 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!208 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!209 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!210 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!211 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!213 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!214 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!215 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!216 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!217 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!218 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!219 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!220 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!221 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!222 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!223 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!226 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!227 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!228 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!229 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!230 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!231 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!232 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!233 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!234 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!235 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!236 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!237 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!238 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!239 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!240 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!241 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!242 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!243 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!244 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!245 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!246 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!247 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!248 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!249 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!250 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!251 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!252 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!253 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!254 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!255 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!256 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!257 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!258 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!259 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!260 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!262 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!263 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!264 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!265 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!266 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!267 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!268 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!269 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!270 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!271 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!274 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!275 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!280 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!281 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!282 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!283 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!284 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!285 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!286 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!287 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!288 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!289 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!290 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!291 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!292 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!293 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!294 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!295 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!296 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!297 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!298 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!299 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!300 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!301 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!302 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!303 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!304 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!305 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!306 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!307 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!308 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!309 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!310 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!311 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!312 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!313 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!314 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!315 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!316 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!317 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!318 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!319 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!320 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!321 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!322 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!323 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!324 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!325 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!326 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!327 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!328 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!329 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!330 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!331 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!332 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!333 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!334 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!335 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!336 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!337 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!347 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!348 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!350 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!351 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!352 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!353 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!354 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!368 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!369 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!370 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!371 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!372 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!373 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!374 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !376, line: 31, baseType: !5, size: 32, elements: !377)
!376 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!377 = !{!378, !379, !380, !381, !382, !383}
!378 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!383 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !376, line: 91, baseType: !5, size: 32, elements: !385)
!385 = !{!386, !387}
!386 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!387 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stmt_vec_info_type", file: !389, line: 336, baseType: !5, size: 32, elements: !390)
!389 = !DIFile(filename: "./tree-vectorizer.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!390 = !{!391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403}
!391 = !DIEnumerator(name: "undef_vec_info_type", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "load_vec_info_type", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "store_vec_info_type", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "op_vec_info_type", value: 3, isUnsigned: true)
!395 = !DIEnumerator(name: "call_vec_info_type", value: 4, isUnsigned: true)
!396 = !DIEnumerator(name: "assignment_vec_info_type", value: 5, isUnsigned: true)
!397 = !DIEnumerator(name: "condition_vec_info_type", value: 6, isUnsigned: true)
!398 = !DIEnumerator(name: "reduc_vec_info_type", value: 7, isUnsigned: true)
!399 = !DIEnumerator(name: "induc_vec_info_type", value: 8, isUnsigned: true)
!400 = !DIEnumerator(name: "type_promotion_vec_info_type", value: 9, isUnsigned: true)
!401 = !DIEnumerator(name: "type_demotion_vec_info_type", value: 10, isUnsigned: true)
!402 = !DIEnumerator(name: "type_conversion_vec_info_type", value: 11, isUnsigned: true)
!403 = !DIEnumerator(name: "loop_exit_ctrl_vec_info_type", value: 12, isUnsigned: true)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vect_relevant", file: !389, line: 354, baseType: !5, size: 32, elements: !405)
!405 = !{!406, !407, !408, !409, !410}
!406 = !DIEnumerator(name: "vect_unused_in_scope", value: 0, isUnsigned: true)
!407 = !DIEnumerator(name: "vect_used_in_outer_by_reduction", value: 1, isUnsigned: true)
!408 = !DIEnumerator(name: "vect_used_in_outer", value: 2, isUnsigned: true)
!409 = !DIEnumerator(name: "vect_used_by_reduction", value: 3, isUnsigned: true)
!410 = !DIEnumerator(name: "vect_used_in_scope", value: 4, isUnsigned: true)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vect_def_type", file: !389, line: 57, baseType: !5, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416, !417, !418, !419, !420, !421}
!413 = !DIEnumerator(name: "vect_uninitialized_def", value: 0, isUnsigned: true)
!414 = !DIEnumerator(name: "vect_constant_def", value: 1, isUnsigned: true)
!415 = !DIEnumerator(name: "vect_external_def", value: 2, isUnsigned: true)
!416 = !DIEnumerator(name: "vect_internal_def", value: 3, isUnsigned: true)
!417 = !DIEnumerator(name: "vect_induction_def", value: 4, isUnsigned: true)
!418 = !DIEnumerator(name: "vect_reduction_def", value: 5, isUnsigned: true)
!419 = !DIEnumerator(name: "vect_double_reduction_def", value: 6, isUnsigned: true)
!420 = !DIEnumerator(name: "vect_nested_cycle", value: 7, isUnsigned: true)
!421 = !DIEnumerator(name: "vect_unknown_def_type", value: 8, isUnsigned: true)
!422 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "slp_vect_type", file: !389, line: 390, baseType: !5, size: 32, elements: !423)
!423 = !{!424, !425, !426}
!424 = !DIEnumerator(name: "loop_vect", value: 0, isUnsigned: true)
!425 = !DIEnumerator(name: "pure_slp", value: 1, isUnsigned: true)
!426 = !DIEnumerator(name: "hybrid", value: 2, isUnsigned: true)
!427 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !428, line: 119, baseType: !5, size: 32, elements: !429)
!428 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!429 = !{!430, !431, !432, !433}
!430 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!431 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!432 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!433 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!434 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !435, line: 36, baseType: !5, size: 32, elements: !436)
!435 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!436 = !{!437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455}
!437 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!438 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!439 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!440 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!441 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!442 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!443 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!444 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!445 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!446 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!447 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!448 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!449 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!450 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!451 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!452 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!453 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!454 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!455 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!456 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_code", file: !457, line: 7, baseType: !5, size: 32, elements: !458)
!457 = !DIFile(filename: "./insn-codes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947}
!459 = !DIEnumerator(name: "CODE_FOR_x86_fnstsw_1", value: 30, isUnsigned: true)
!460 = !DIEnumerator(name: "CODE_FOR_x86_sahf_1", value: 31, isUnsigned: true)
!461 = !DIEnumerator(name: "CODE_FOR_popsi1", value: 41, isUnsigned: true)
!462 = !DIEnumerator(name: "CODE_FOR_movsi_insv_1", value: 63, isUnsigned: true)
!463 = !DIEnumerator(name: "CODE_FOR_swapxf", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2_and", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2_32", value: 92, isUnsigned: true)
!466 = !DIEnumerator(name: "CODE_FOR_extendhisi2", value: 94, isUnsigned: true)
!467 = !DIEnumerator(name: "CODE_FOR_extendqihi2", value: 95, isUnsigned: true)
!468 = !DIEnumerator(name: "CODE_FOR_extendqisi2", value: 96, isUnsigned: true)
!469 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop", value: 110, isUnsigned: true)
!470 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop", value: 111, isUnsigned: true)
!471 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi_sse", value: 116, isUnsigned: true)
!472 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi_sse", value: 117, isUnsigned: true)
!473 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_fisttp_i387_1", value: 118, isUnsigned: true)
!474 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_fisttp_i387_1", value: 119, isUnsigned: true)
!475 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_fisttp_i387_1", value: 120, isUnsigned: true)
!476 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp", value: 121, isUnsigned: true)
!477 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp", value: 122, isUnsigned: true)
!478 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp", value: 123, isUnsigned: true)
!479 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp_with_temp", value: 124, isUnsigned: true)
!480 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp_with_temp", value: 125, isUnsigned: true)
!481 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp_with_temp", value: 126, isUnsigned: true)
!482 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387", value: 130, isUnsigned: true)
!483 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_with_temp", value: 131, isUnsigned: true)
!484 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387", value: 132, isUnsigned: true)
!485 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387", value: 133, isUnsigned: true)
!486 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_with_temp", value: 134, isUnsigned: true)
!487 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_with_temp", value: 135, isUnsigned: true)
!488 = !DIEnumerator(name: "CODE_FOR_x86_fnstcw_1", value: 136, isUnsigned: true)
!489 = !DIEnumerator(name: "CODE_FOR_x86_fldcw_1", value: 137, isUnsigned: true)
!490 = !DIEnumerator(name: "CODE_FOR_floatdisf2_i387_with_xmm", value: 185, isUnsigned: true)
!491 = !DIEnumerator(name: "CODE_FOR_floatdidf2_i387_with_xmm", value: 186, isUnsigned: true)
!492 = !DIEnumerator(name: "CODE_FOR_floatdixf2_i387_with_xmm", value: 187, isUnsigned: true)
!493 = !DIEnumerator(name: "CODE_FOR_addqi3_cc", value: 195, isUnsigned: true)
!494 = !DIEnumerator(name: "CODE_FOR_addqi_ext_1", value: 219, isUnsigned: true)
!495 = !DIEnumerator(name: "CODE_FOR_divqi3", value: 271, isUnsigned: true)
!496 = !DIEnumerator(name: "CODE_FOR_udivqi3", value: 272, isUnsigned: true)
!497 = !DIEnumerator(name: "CODE_FOR_andqi_ext_0", value: 298, isUnsigned: true)
!498 = !DIEnumerator(name: "CODE_FOR_copysignsf3_const", value: 367, isUnsigned: true)
!499 = !DIEnumerator(name: "CODE_FOR_copysigndf3_const", value: 368, isUnsigned: true)
!500 = !DIEnumerator(name: "CODE_FOR_copysigntf3_const", value: 369, isUnsigned: true)
!501 = !DIEnumerator(name: "CODE_FOR_copysignsf3_var", value: 370, isUnsigned: true)
!502 = !DIEnumerator(name: "CODE_FOR_copysigndf3_var", value: 371, isUnsigned: true)
!503 = !DIEnumerator(name: "CODE_FOR_copysigntf3_var", value: 372, isUnsigned: true)
!504 = !DIEnumerator(name: "CODE_FOR_x86_shld", value: 382, isUnsigned: true)
!505 = !DIEnumerator(name: "CODE_FOR_x86_shrd", value: 395, isUnsigned: true)
!506 = !DIEnumerator(name: "CODE_FOR_ix86_rotldi3", value: 438, isUnsigned: true)
!507 = !DIEnumerator(name: "CODE_FOR_ix86_rotrdi3", value: 447, isUnsigned: true)
!508 = !DIEnumerator(name: "CODE_FOR_jump", value: 478, isUnsigned: true)
!509 = !DIEnumerator(name: "CODE_FOR_blockage", value: 487, isUnsigned: true)
!510 = !DIEnumerator(name: "CODE_FOR_prologue_use", value: 489, isUnsigned: true)
!511 = !DIEnumerator(name: "CODE_FOR_return_internal", value: 490, isUnsigned: true)
!512 = !DIEnumerator(name: "CODE_FOR_return_internal_long", value: 491, isUnsigned: true)
!513 = !DIEnumerator(name: "CODE_FOR_return_pop_internal", value: 492, isUnsigned: true)
!514 = !DIEnumerator(name: "CODE_FOR_return_indirect_internal", value: 493, isUnsigned: true)
!515 = !DIEnumerator(name: "CODE_FOR_nop", value: 494, isUnsigned: true)
!516 = !DIEnumerator(name: "CODE_FOR_vswapmov", value: 495, isUnsigned: true)
!517 = !DIEnumerator(name: "CODE_FOR_pad", value: 496, isUnsigned: true)
!518 = !DIEnumerator(name: "CODE_FOR_set_got", value: 497, isUnsigned: true)
!519 = !DIEnumerator(name: "CODE_FOR_set_got_labelled", value: 498, isUnsigned: true)
!520 = !DIEnumerator(name: "CODE_FOR_eh_return_internal", value: 499, isUnsigned: true)
!521 = !DIEnumerator(name: "CODE_FOR_leave", value: 500, isUnsigned: true)
!522 = !DIEnumerator(name: "CODE_FOR_ctzsi2", value: 503, isUnsigned: true)
!523 = !DIEnumerator(name: "CODE_FOR_clzsi2_abm", value: 504, isUnsigned: true)
!524 = !DIEnumerator(name: "CODE_FOR_bsr", value: 505, isUnsigned: true)
!525 = !DIEnumerator(name: "CODE_FOR_popcounthi2", value: 506, isUnsigned: true)
!526 = !DIEnumerator(name: "CODE_FOR_popcountsi2", value: 507, isUnsigned: true)
!527 = !DIEnumerator(name: "CODE_FOR_bswaphi_lowpart", value: 514, isUnsigned: true)
!528 = !DIEnumerator(name: "CODE_FOR_clzhi2_abm", value: 515, isUnsigned: true)
!529 = !DIEnumerator(name: "CODE_FOR_paritydi2_cmp", value: 517, isUnsigned: true)
!530 = !DIEnumerator(name: "CODE_FOR_paritysi2_cmp", value: 518, isUnsigned: true)
!531 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop_unspec", value: 573, isUnsigned: true)
!532 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop_unspec", value: 574, isUnsigned: true)
!533 = !DIEnumerator(name: "CODE_FOR_sqrtxf2", value: 575, isUnsigned: true)
!534 = !DIEnumerator(name: "CODE_FOR_sqrt_extendsfxf2_i387", value: 576, isUnsigned: true)
!535 = !DIEnumerator(name: "CODE_FOR_sqrt_extenddfxf2_i387", value: 577, isUnsigned: true)
!536 = !DIEnumerator(name: "CODE_FOR_fpremxf4_i387", value: 581, isUnsigned: true)
!537 = !DIEnumerator(name: "CODE_FOR_fprem1xf4_i387", value: 582, isUnsigned: true)
!538 = !DIEnumerator(name: "CODE_FOR_sincosxf3", value: 589, isUnsigned: true)
!539 = !DIEnumerator(name: "CODE_FOR_sincos_extendsfxf3_i387", value: 590, isUnsigned: true)
!540 = !DIEnumerator(name: "CODE_FOR_sincos_extenddfxf3_i387", value: 591, isUnsigned: true)
!541 = !DIEnumerator(name: "CODE_FOR_fptanxf4_i387", value: 592, isUnsigned: true)
!542 = !DIEnumerator(name: "CODE_FOR_fptan_extendsfxf4_i387", value: 593, isUnsigned: true)
!543 = !DIEnumerator(name: "CODE_FOR_fptan_extenddfxf4_i387", value: 594, isUnsigned: true)
!544 = !DIEnumerator(name: "CODE_FOR_fpatan_extendsfxf3_i387", value: 596, isUnsigned: true)
!545 = !DIEnumerator(name: "CODE_FOR_fpatan_extenddfxf3_i387", value: 597, isUnsigned: true)
!546 = !DIEnumerator(name: "CODE_FOR_fyl2xxf3_i387", value: 598, isUnsigned: true)
!547 = !DIEnumerator(name: "CODE_FOR_fyl2x_extendsfxf3_i387", value: 599, isUnsigned: true)
!548 = !DIEnumerator(name: "CODE_FOR_fyl2x_extenddfxf3_i387", value: 600, isUnsigned: true)
!549 = !DIEnumerator(name: "CODE_FOR_fyl2xp1xf3_i387", value: 601, isUnsigned: true)
!550 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extendsfxf3_i387", value: 602, isUnsigned: true)
!551 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extenddfxf3_i387", value: 603, isUnsigned: true)
!552 = !DIEnumerator(name: "CODE_FOR_fxtractxf3_i387", value: 604, isUnsigned: true)
!553 = !DIEnumerator(name: "CODE_FOR_fxtract_extendsfxf3_i387", value: 605, isUnsigned: true)
!554 = !DIEnumerator(name: "CODE_FOR_fxtract_extenddfxf3_i387", value: 606, isUnsigned: true)
!555 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsf2", value: 609, isUnsigned: true)
!556 = !DIEnumerator(name: "CODE_FOR_sse4_1_rounddf2", value: 610, isUnsigned: true)
!557 = !DIEnumerator(name: "CODE_FOR_rintxf2", value: 611, isUnsigned: true)
!558 = !DIEnumerator(name: "CODE_FOR_fistdi2", value: 613, isUnsigned: true)
!559 = !DIEnumerator(name: "CODE_FOR_fistdi2_with_temp", value: 614, isUnsigned: true)
!560 = !DIEnumerator(name: "CODE_FOR_fisthi2", value: 617, isUnsigned: true)
!561 = !DIEnumerator(name: "CODE_FOR_fistsi2", value: 618, isUnsigned: true)
!562 = !DIEnumerator(name: "CODE_FOR_fisthi2_with_temp", value: 619, isUnsigned: true)
!563 = !DIEnumerator(name: "CODE_FOR_fistsi2_with_temp", value: 620, isUnsigned: true)
!564 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor", value: 621, isUnsigned: true)
!565 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor_i387", value: 622, isUnsigned: true)
!566 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor", value: 626, isUnsigned: true)
!567 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor_with_temp", value: 627, isUnsigned: true)
!568 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor", value: 628, isUnsigned: true)
!569 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor", value: 629, isUnsigned: true)
!570 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor_with_temp", value: 630, isUnsigned: true)
!571 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor_with_temp", value: 631, isUnsigned: true)
!572 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil", value: 632, isUnsigned: true)
!573 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil_i387", value: 633, isUnsigned: true)
!574 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil", value: 637, isUnsigned: true)
!575 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil_with_temp", value: 638, isUnsigned: true)
!576 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil", value: 639, isUnsigned: true)
!577 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil", value: 640, isUnsigned: true)
!578 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil_with_temp", value: 641, isUnsigned: true)
!579 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil_with_temp", value: 642, isUnsigned: true)
!580 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc", value: 643, isUnsigned: true)
!581 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc_i387", value: 644, isUnsigned: true)
!582 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm", value: 645, isUnsigned: true)
!583 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm_i387", value: 646, isUnsigned: true)
!584 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387", value: 647, isUnsigned: true)
!585 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387", value: 648, isUnsigned: true)
!586 = !DIEnumerator(name: "CODE_FOR_fxamxf2_i387", value: 649, isUnsigned: true)
!587 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387_with_temp", value: 650, isUnsigned: true)
!588 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387_with_temp", value: 651, isUnsigned: true)
!589 = !DIEnumerator(name: "CODE_FOR_cld", value: 652, isUnsigned: true)
!590 = !DIEnumerator(name: "CODE_FOR_smaxsf3", value: 681, isUnsigned: true)
!591 = !DIEnumerator(name: "CODE_FOR_sminsf3", value: 682, isUnsigned: true)
!592 = !DIEnumerator(name: "CODE_FOR_smaxdf3", value: 683, isUnsigned: true)
!593 = !DIEnumerator(name: "CODE_FOR_smindf3", value: 684, isUnsigned: true)
!594 = !DIEnumerator(name: "CODE_FOR_pro_epilogue_adjust_stack_1", value: 693, isUnsigned: true)
!595 = !DIEnumerator(name: "CODE_FOR_allocate_stack_worker_32", value: 694, isUnsigned: true)
!596 = !DIEnumerator(name: "CODE_FOR_trap", value: 701, isUnsigned: true)
!597 = !DIEnumerator(name: "CODE_FOR_stack_protect_set_si", value: 704, isUnsigned: true)
!598 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_set_si", value: 705, isUnsigned: true)
!599 = !DIEnumerator(name: "CODE_FOR_stack_protect_test_si", value: 706, isUnsigned: true)
!600 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_test_si", value: 707, isUnsigned: true)
!601 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32qi", value: 708, isUnsigned: true)
!602 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32hi", value: 709, isUnsigned: true)
!603 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32si", value: 710, isUnsigned: true)
!604 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcbsi", value: 715, isUnsigned: true)
!605 = !DIEnumerator(name: "CODE_FOR_sse_movntdi", value: 728, isUnsigned: true)
!606 = !DIEnumerator(name: "CODE_FOR_mmx_rcpv2sf2", value: 736, isUnsigned: true)
!607 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit1v2sf3", value: 737, isUnsigned: true)
!608 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit2v2sf3", value: 738, isUnsigned: true)
!609 = !DIEnumerator(name: "CODE_FOR_mmx_rsqrtv2sf2", value: 739, isUnsigned: true)
!610 = !DIEnumerator(name: "CODE_FOR_mmx_rsqit1v2sf3", value: 740, isUnsigned: true)
!611 = !DIEnumerator(name: "CODE_FOR_mmx_haddv2sf3", value: 741, isUnsigned: true)
!612 = !DIEnumerator(name: "CODE_FOR_mmx_hsubv2sf3", value: 742, isUnsigned: true)
!613 = !DIEnumerator(name: "CODE_FOR_mmx_addsubv2sf3", value: 743, isUnsigned: true)
!614 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2sf3", value: 745, isUnsigned: true)
!615 = !DIEnumerator(name: "CODE_FOR_mmx_gev2sf3", value: 746, isUnsigned: true)
!616 = !DIEnumerator(name: "CODE_FOR_mmx_pf2id", value: 747, isUnsigned: true)
!617 = !DIEnumerator(name: "CODE_FOR_mmx_pf2iw", value: 748, isUnsigned: true)
!618 = !DIEnumerator(name: "CODE_FOR_mmx_pi2fw", value: 749, isUnsigned: true)
!619 = !DIEnumerator(name: "CODE_FOR_mmx_floatv2si2", value: 750, isUnsigned: true)
!620 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2sf2", value: 751, isUnsigned: true)
!621 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv4hi3", value: 782, isUnsigned: true)
!622 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv2si3", value: 783, isUnsigned: true)
!623 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv4hi3", value: 784, isUnsigned: true)
!624 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv2si3", value: 785, isUnsigned: true)
!625 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv1di3", value: 786, isUnsigned: true)
!626 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv4hi3", value: 787, isUnsigned: true)
!627 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv2si3", value: 788, isUnsigned: true)
!628 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv1di3", value: 789, isUnsigned: true)
!629 = !DIEnumerator(name: "CODE_FOR_mmx_gtv8qi3", value: 793, isUnsigned: true)
!630 = !DIEnumerator(name: "CODE_FOR_mmx_gtv4hi3", value: 794, isUnsigned: true)
!631 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2si3", value: 795, isUnsigned: true)
!632 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv8qi3", value: 796, isUnsigned: true)
!633 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv4hi3", value: 797, isUnsigned: true)
!634 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv2si3", value: 798, isUnsigned: true)
!635 = !DIEnumerator(name: "CODE_FOR_mmx_packsswb", value: 808, isUnsigned: true)
!636 = !DIEnumerator(name: "CODE_FOR_mmx_packssdw", value: 809, isUnsigned: true)
!637 = !DIEnumerator(name: "CODE_FOR_mmx_packuswb", value: 810, isUnsigned: true)
!638 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhbw", value: 811, isUnsigned: true)
!639 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklbw", value: 812, isUnsigned: true)
!640 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhwd", value: 813, isUnsigned: true)
!641 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklwd", value: 814, isUnsigned: true)
!642 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhdq", value: 815, isUnsigned: true)
!643 = !DIEnumerator(name: "CODE_FOR_mmx_punpckldq", value: 816, isUnsigned: true)
!644 = !DIEnumerator(name: "CODE_FOR_mmx_pextrw", value: 818, isUnsigned: true)
!645 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw_1", value: 819, isUnsigned: true)
!646 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2si2", value: 820, isUnsigned: true)
!647 = !DIEnumerator(name: "CODE_FOR_mmx_psadbw", value: 828, isUnsigned: true)
!648 = !DIEnumerator(name: "CODE_FOR_mmx_pmovmskb", value: 829, isUnsigned: true)
!649 = !DIEnumerator(name: "CODE_FOR_movdi_to_sse", value: 853, isUnsigned: true)
!650 = !DIEnumerator(name: "CODE_FOR_avx_movups", value: 854, isUnsigned: true)
!651 = !DIEnumerator(name: "CODE_FOR_avx_movupd", value: 855, isUnsigned: true)
!652 = !DIEnumerator(name: "CODE_FOR_avx_movups256", value: 856, isUnsigned: true)
!653 = !DIEnumerator(name: "CODE_FOR_avx_movupd256", value: 857, isUnsigned: true)
!654 = !DIEnumerator(name: "CODE_FOR_sse2_movq128", value: 858, isUnsigned: true)
!655 = !DIEnumerator(name: "CODE_FOR_sse_movups", value: 859, isUnsigned: true)
!656 = !DIEnumerator(name: "CODE_FOR_sse2_movupd", value: 860, isUnsigned: true)
!657 = !DIEnumerator(name: "CODE_FOR_avx_movdqu256", value: 861, isUnsigned: true)
!658 = !DIEnumerator(name: "CODE_FOR_avx_movdqu", value: 862, isUnsigned: true)
!659 = !DIEnumerator(name: "CODE_FOR_sse2_movdqu", value: 863, isUnsigned: true)
!660 = !DIEnumerator(name: "CODE_FOR_avx_movntv4sf", value: 864, isUnsigned: true)
!661 = !DIEnumerator(name: "CODE_FOR_avx_movntv2df", value: 865, isUnsigned: true)
!662 = !DIEnumerator(name: "CODE_FOR_avx_movntv8sf", value: 866, isUnsigned: true)
!663 = !DIEnumerator(name: "CODE_FOR_avx_movntv4df", value: 867, isUnsigned: true)
!664 = !DIEnumerator(name: "CODE_FOR_sse_movntv4sf", value: 868, isUnsigned: true)
!665 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2df", value: 869, isUnsigned: true)
!666 = !DIEnumerator(name: "CODE_FOR_avx_movntv4di", value: 870, isUnsigned: true)
!667 = !DIEnumerator(name: "CODE_FOR_avx_movntv2di", value: 871, isUnsigned: true)
!668 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2di", value: 872, isUnsigned: true)
!669 = !DIEnumerator(name: "CODE_FOR_sse2_movntsi", value: 873, isUnsigned: true)
!670 = !DIEnumerator(name: "CODE_FOR_avx_lddqu256", value: 874, isUnsigned: true)
!671 = !DIEnumerator(name: "CODE_FOR_avx_lddqu", value: 875, isUnsigned: true)
!672 = !DIEnumerator(name: "CODE_FOR_sse3_lddqu", value: 876, isUnsigned: true)
!673 = !DIEnumerator(name: "CODE_FOR_sse_vmaddv4sf3", value: 893, isUnsigned: true)
!674 = !DIEnumerator(name: "CODE_FOR_sse_vmsubv4sf3", value: 894, isUnsigned: true)
!675 = !DIEnumerator(name: "CODE_FOR_sse2_vmaddv2df3", value: 895, isUnsigned: true)
!676 = !DIEnumerator(name: "CODE_FOR_sse2_vmsubv2df3", value: 896, isUnsigned: true)
!677 = !DIEnumerator(name: "CODE_FOR_sse_vmmulv4sf3", value: 905, isUnsigned: true)
!678 = !DIEnumerator(name: "CODE_FOR_sse2_vmmulv2df3", value: 906, isUnsigned: true)
!679 = !DIEnumerator(name: "CODE_FOR_avx_divv4sf3", value: 907, isUnsigned: true)
!680 = !DIEnumerator(name: "CODE_FOR_avx_divv2df3", value: 908, isUnsigned: true)
!681 = !DIEnumerator(name: "CODE_FOR_avx_divv8sf3", value: 909, isUnsigned: true)
!682 = !DIEnumerator(name: "CODE_FOR_avx_divv4df3", value: 910, isUnsigned: true)
!683 = !DIEnumerator(name: "CODE_FOR_sse_divv4sf3", value: 913, isUnsigned: true)
!684 = !DIEnumerator(name: "CODE_FOR_sse2_divv2df3", value: 914, isUnsigned: true)
!685 = !DIEnumerator(name: "CODE_FOR_sse_vmdivv4sf3", value: 917, isUnsigned: true)
!686 = !DIEnumerator(name: "CODE_FOR_sse2_vmdivv2df3", value: 918, isUnsigned: true)
!687 = !DIEnumerator(name: "CODE_FOR_avx_rcpv8sf2", value: 919, isUnsigned: true)
!688 = !DIEnumerator(name: "CODE_FOR_sse_rcpv4sf2", value: 920, isUnsigned: true)
!689 = !DIEnumerator(name: "CODE_FOR_sse_vmrcpv4sf2", value: 922, isUnsigned: true)
!690 = !DIEnumerator(name: "CODE_FOR_avx_sqrtv8sf2", value: 923, isUnsigned: true)
!691 = !DIEnumerator(name: "CODE_FOR_sse_sqrtv4sf2", value: 924, isUnsigned: true)
!692 = !DIEnumerator(name: "CODE_FOR_sqrtv4df2", value: 925, isUnsigned: true)
!693 = !DIEnumerator(name: "CODE_FOR_sqrtv2df2", value: 926, isUnsigned: true)
!694 = !DIEnumerator(name: "CODE_FOR_sse_vmsqrtv4sf2", value: 929, isUnsigned: true)
!695 = !DIEnumerator(name: "CODE_FOR_sse2_vmsqrtv2df2", value: 930, isUnsigned: true)
!696 = !DIEnumerator(name: "CODE_FOR_avx_rsqrtv8sf2", value: 931, isUnsigned: true)
!697 = !DIEnumerator(name: "CODE_FOR_sse_rsqrtv4sf2", value: 932, isUnsigned: true)
!698 = !DIEnumerator(name: "CODE_FOR_sse_vmrsqrtv4sf2", value: 934, isUnsigned: true)
!699 = !DIEnumerator(name: "CODE_FOR_sse_vmsmaxv4sf3", value: 963, isUnsigned: true)
!700 = !DIEnumerator(name: "CODE_FOR_sse_vmsminv4sf3", value: 964, isUnsigned: true)
!701 = !DIEnumerator(name: "CODE_FOR_sse2_vmsmaxv2df3", value: 965, isUnsigned: true)
!702 = !DIEnumerator(name: "CODE_FOR_sse2_vmsminv2df3", value: 966, isUnsigned: true)
!703 = !DIEnumerator(name: "CODE_FOR_avx_addsubv8sf3", value: 979, isUnsigned: true)
!704 = !DIEnumerator(name: "CODE_FOR_avx_addsubv4df3", value: 980, isUnsigned: true)
!705 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv4sf3", value: 982, isUnsigned: true)
!706 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv2df3", value: 984, isUnsigned: true)
!707 = !DIEnumerator(name: "CODE_FOR_avx_haddv4df3", value: 985, isUnsigned: true)
!708 = !DIEnumerator(name: "CODE_FOR_avx_hsubv4df3", value: 986, isUnsigned: true)
!709 = !DIEnumerator(name: "CODE_FOR_avx_haddv8sf3", value: 987, isUnsigned: true)
!710 = !DIEnumerator(name: "CODE_FOR_avx_hsubv8sf3", value: 988, isUnsigned: true)
!711 = !DIEnumerator(name: "CODE_FOR_sse3_haddv4sf3", value: 991, isUnsigned: true)
!712 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv4sf3", value: 992, isUnsigned: true)
!713 = !DIEnumerator(name: "CODE_FOR_sse3_haddv2df3", value: 995, isUnsigned: true)
!714 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv2df3", value: 996, isUnsigned: true)
!715 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv4sf3", value: 997, isUnsigned: true)
!716 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv2df3", value: 998, isUnsigned: true)
!717 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv8sf3", value: 999, isUnsigned: true)
!718 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv4df3", value: 1000, isUnsigned: true)
!719 = !DIEnumerator(name: "CODE_FOR_avx_cmpssv4sf3", value: 1001, isUnsigned: true)
!720 = !DIEnumerator(name: "CODE_FOR_avx_cmpsdv2df3", value: 1002, isUnsigned: true)
!721 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpsf3", value: 1007, isUnsigned: true)
!722 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpdf3", value: 1008, isUnsigned: true)
!723 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpv4sf3", value: 1009, isUnsigned: true)
!724 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpv2df3", value: 1010, isUnsigned: true)
!725 = !DIEnumerator(name: "CODE_FOR_sse_vmmaskcmpv4sf3", value: 1011, isUnsigned: true)
!726 = !DIEnumerator(name: "CODE_FOR_sse2_vmmaskcmpv2df3", value: 1012, isUnsigned: true)
!727 = !DIEnumerator(name: "CODE_FOR_sse_comi", value: 1013, isUnsigned: true)
!728 = !DIEnumerator(name: "CODE_FOR_sse2_comi", value: 1014, isUnsigned: true)
!729 = !DIEnumerator(name: "CODE_FOR_sse_ucomi", value: 1015, isUnsigned: true)
!730 = !DIEnumerator(name: "CODE_FOR_sse2_ucomi", value: 1016, isUnsigned: true)
!731 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4sf3", value: 1017, isUnsigned: true)
!732 = !DIEnumerator(name: "CODE_FOR_avx_andnotv2df3", value: 1018, isUnsigned: true)
!733 = !DIEnumerator(name: "CODE_FOR_avx_andnotv8sf3", value: 1019, isUnsigned: true)
!734 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4df3", value: 1020, isUnsigned: true)
!735 = !DIEnumerator(name: "CODE_FOR_sse_andnotv4sf3", value: 1021, isUnsigned: true)
!736 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2df3", value: 1022, isUnsigned: true)
!737 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv8sf4256", value: 1057, isUnsigned: true)
!738 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4df4256", value: 1058, isUnsigned: true)
!739 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv8sf4256", value: 1059, isUnsigned: true)
!740 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4df4256", value: 1060, isUnsigned: true)
!741 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv8sf4256", value: 1061, isUnsigned: true)
!742 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4df4256", value: 1062, isUnsigned: true)
!743 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv8sf4256", value: 1063, isUnsigned: true)
!744 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4df4256", value: 1064, isUnsigned: true)
!745 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsf4", value: 1065, isUnsigned: true)
!746 = !DIEnumerator(name: "CODE_FOR_fma4_fmadddf4", value: 1066, isUnsigned: true)
!747 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4sf4", value: 1067, isUnsigned: true)
!748 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv2df4", value: 1068, isUnsigned: true)
!749 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv4sf4", value: 1069, isUnsigned: true)
!750 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv2df4", value: 1070, isUnsigned: true)
!751 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubsf4", value: 1071, isUnsigned: true)
!752 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubdf4", value: 1072, isUnsigned: true)
!753 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4sf4", value: 1073, isUnsigned: true)
!754 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv2df4", value: 1074, isUnsigned: true)
!755 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv4sf4", value: 1075, isUnsigned: true)
!756 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv2df4", value: 1076, isUnsigned: true)
!757 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddsf4", value: 1077, isUnsigned: true)
!758 = !DIEnumerator(name: "CODE_FOR_fma4_fnmadddf4", value: 1078, isUnsigned: true)
!759 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4sf4", value: 1079, isUnsigned: true)
!760 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv2df4", value: 1080, isUnsigned: true)
!761 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv4sf4", value: 1081, isUnsigned: true)
!762 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv2df4", value: 1082, isUnsigned: true)
!763 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubsf4", value: 1083, isUnsigned: true)
!764 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubdf4", value: 1084, isUnsigned: true)
!765 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4sf4", value: 1085, isUnsigned: true)
!766 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv2df4", value: 1086, isUnsigned: true)
!767 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv4sf4", value: 1087, isUnsigned: true)
!768 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv2df4", value: 1088, isUnsigned: true)
!769 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv8sf4256", value: 1089, isUnsigned: true)
!770 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4df4256", value: 1090, isUnsigned: true)
!771 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv8sf4256", value: 1091, isUnsigned: true)
!772 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4df4256", value: 1092, isUnsigned: true)
!773 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv8sf4256", value: 1093, isUnsigned: true)
!774 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4df4256", value: 1094, isUnsigned: true)
!775 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv8sf4256", value: 1095, isUnsigned: true)
!776 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4df4256", value: 1096, isUnsigned: true)
!777 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4sf4", value: 1097, isUnsigned: true)
!778 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv2df4", value: 1098, isUnsigned: true)
!779 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4sf4", value: 1099, isUnsigned: true)
!780 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv2df4", value: 1100, isUnsigned: true)
!781 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4sf4", value: 1101, isUnsigned: true)
!782 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv2df4", value: 1102, isUnsigned: true)
!783 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4sf4", value: 1103, isUnsigned: true)
!784 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv2df4", value: 1104, isUnsigned: true)
!785 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv4sf4", value: 1105, isUnsigned: true)
!786 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv2df4", value: 1106, isUnsigned: true)
!787 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv4sf4", value: 1107, isUnsigned: true)
!788 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv2df4", value: 1108, isUnsigned: true)
!789 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv4sf4", value: 1109, isUnsigned: true)
!790 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv2df4", value: 1110, isUnsigned: true)
!791 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv4sf4", value: 1111, isUnsigned: true)
!792 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv2df4", value: 1112, isUnsigned: true)
!793 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv8sf4", value: 1113, isUnsigned: true)
!794 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4df4", value: 1114, isUnsigned: true)
!795 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4sf4", value: 1115, isUnsigned: true)
!796 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv2df4", value: 1116, isUnsigned: true)
!797 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv8sf4", value: 1117, isUnsigned: true)
!798 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4df4", value: 1118, isUnsigned: true)
!799 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4sf4", value: 1119, isUnsigned: true)
!800 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv2df4", value: 1120, isUnsigned: true)
!801 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv8sf4", value: 1121, isUnsigned: true)
!802 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4df4", value: 1122, isUnsigned: true)
!803 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4sf4", value: 1123, isUnsigned: true)
!804 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv2df4", value: 1124, isUnsigned: true)
!805 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv8sf4", value: 1125, isUnsigned: true)
!806 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4df4", value: 1126, isUnsigned: true)
!807 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4sf4", value: 1127, isUnsigned: true)
!808 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv2df4", value: 1128, isUnsigned: true)
!809 = !DIEnumerator(name: "CODE_FOR_sse_cvtpi2ps", value: 1129, isUnsigned: true)
!810 = !DIEnumerator(name: "CODE_FOR_sse_cvtps2pi", value: 1130, isUnsigned: true)
!811 = !DIEnumerator(name: "CODE_FOR_sse_cvttps2pi", value: 1131, isUnsigned: true)
!812 = !DIEnumerator(name: "CODE_FOR_sse_cvtsi2ss", value: 1133, isUnsigned: true)
!813 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si", value: 1134, isUnsigned: true)
!814 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si_2", value: 1135, isUnsigned: true)
!815 = !DIEnumerator(name: "CODE_FOR_sse_cvttss2si", value: 1136, isUnsigned: true)
!816 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps", value: 1137, isUnsigned: true)
!817 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps256", value: 1138, isUnsigned: true)
!818 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2ps", value: 1139, isUnsigned: true)
!819 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq", value: 1140, isUnsigned: true)
!820 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq256", value: 1141, isUnsigned: true)
!821 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2dq", value: 1142, isUnsigned: true)
!822 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq", value: 1143, isUnsigned: true)
!823 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq256", value: 1144, isUnsigned: true)
!824 = !DIEnumerator(name: "CODE_FOR_sse2_cvttps2dq", value: 1145, isUnsigned: true)
!825 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpi2pd", value: 1146, isUnsigned: true)
!826 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2pi", value: 1147, isUnsigned: true)
!827 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2pi", value: 1148, isUnsigned: true)
!828 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsi2sd", value: 1150, isUnsigned: true)
!829 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si", value: 1151, isUnsigned: true)
!830 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si_2", value: 1152, isUnsigned: true)
!831 = !DIEnumerator(name: "CODE_FOR_sse2_cvttsd2si", value: 1153, isUnsigned: true)
!832 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2pd256", value: 1154, isUnsigned: true)
!833 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2pd", value: 1155, isUnsigned: true)
!834 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2dq256", value: 1156, isUnsigned: true)
!835 = !DIEnumerator(name: "CODE_FOR_avx_cvttpd2dq256", value: 1158, isUnsigned: true)
!836 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2ss", value: 1161, isUnsigned: true)
!837 = !DIEnumerator(name: "CODE_FOR_sse2_cvtss2sd", value: 1163, isUnsigned: true)
!838 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2ps256", value: 1164, isUnsigned: true)
!839 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2pd256", value: 1166, isUnsigned: true)
!840 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2pd", value: 1167, isUnsigned: true)
!841 = !DIEnumerator(name: "CODE_FOR_sse_movhlps", value: 1169, isUnsigned: true)
!842 = !DIEnumerator(name: "CODE_FOR_sse_movlhps", value: 1171, isUnsigned: true)
!843 = !DIEnumerator(name: "CODE_FOR_avx_unpckhps256", value: 1172, isUnsigned: true)
!844 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4sf", value: 1174, isUnsigned: true)
!845 = !DIEnumerator(name: "CODE_FOR_avx_unpcklps256", value: 1175, isUnsigned: true)
!846 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4sf", value: 1177, isUnsigned: true)
!847 = !DIEnumerator(name: "CODE_FOR_avx_movshdup256", value: 1178, isUnsigned: true)
!848 = !DIEnumerator(name: "CODE_FOR_sse3_movshdup", value: 1179, isUnsigned: true)
!849 = !DIEnumerator(name: "CODE_FOR_avx_movsldup256", value: 1180, isUnsigned: true)
!850 = !DIEnumerator(name: "CODE_FOR_sse3_movsldup", value: 1181, isUnsigned: true)
!851 = !DIEnumerator(name: "CODE_FOR_avx_shufps256_1", value: 1182, isUnsigned: true)
!852 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4sf", value: 1185, isUnsigned: true)
!853 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4si", value: 1186, isUnsigned: true)
!854 = !DIEnumerator(name: "CODE_FOR_sse_storehps", value: 1187, isUnsigned: true)
!855 = !DIEnumerator(name: "CODE_FOR_sse_loadhps", value: 1189, isUnsigned: true)
!856 = !DIEnumerator(name: "CODE_FOR_sse_storelps", value: 1191, isUnsigned: true)
!857 = !DIEnumerator(name: "CODE_FOR_sse_loadlps", value: 1193, isUnsigned: true)
!858 = !DIEnumerator(name: "CODE_FOR_sse_movss", value: 1195, isUnsigned: true)
!859 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf_0", value: 1209, isUnsigned: true)
!860 = !DIEnumerator(name: "CODE_FOR_vec_setv4si_0", value: 1210, isUnsigned: true)
!861 = !DIEnumerator(name: "CODE_FOR_sse4_1_insertps", value: 1214, isUnsigned: true)
!862 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4di", value: 1216, isUnsigned: true)
!863 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4df", value: 1217, isUnsigned: true)
!864 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4di", value: 1218, isUnsigned: true)
!865 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4df", value: 1219, isUnsigned: true)
!866 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8si", value: 1220, isUnsigned: true)
!867 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8sf", value: 1221, isUnsigned: true)
!868 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8si", value: 1222, isUnsigned: true)
!869 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8sf", value: 1223, isUnsigned: true)
!870 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v16hi", value: 1224, isUnsigned: true)
!871 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v16hi", value: 1225, isUnsigned: true)
!872 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v32qi", value: 1226, isUnsigned: true)
!873 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v32qi", value: 1227, isUnsigned: true)
!874 = !DIEnumerator(name: "CODE_FOR_avx_unpckhpd256", value: 1230, isUnsigned: true)
!875 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256_1", value: 1238, isUnsigned: true)
!876 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2di", value: 1240, isUnsigned: true)
!877 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2di", value: 1242, isUnsigned: true)
!878 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2df", value: 1245, isUnsigned: true)
!879 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2di", value: 1246, isUnsigned: true)
!880 = !DIEnumerator(name: "CODE_FOR_sse2_storehpd", value: 1248, isUnsigned: true)
!881 = !DIEnumerator(name: "CODE_FOR_sse2_storelpd", value: 1249, isUnsigned: true)
!882 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd", value: 1251, isUnsigned: true)
!883 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd", value: 1253, isUnsigned: true)
!884 = !DIEnumerator(name: "CODE_FOR_sse2_movsd", value: 1257, isUnsigned: true)
!885 = !DIEnumerator(name: "CODE_FOR_vec_dupv2df", value: 1259, isUnsigned: true)
!886 = !DIEnumerator(name: "CODE_FOR_mulv16qi3", value: 1295, isUnsigned: true)
!887 = !DIEnumerator(name: "CODE_FOR_mulv2di3", value: 1311, isUnsigned: true)
!888 = !DIEnumerator(name: "CODE_FOR_ashrv8hi3", value: 1314, isUnsigned: true)
!889 = !DIEnumerator(name: "CODE_FOR_ashrv4si3", value: 1315, isUnsigned: true)
!890 = !DIEnumerator(name: "CODE_FOR_sse2_lshrv1ti3", value: 1320, isUnsigned: true)
!891 = !DIEnumerator(name: "CODE_FOR_lshrv8hi3", value: 1321, isUnsigned: true)
!892 = !DIEnumerator(name: "CODE_FOR_lshrv4si3", value: 1322, isUnsigned: true)
!893 = !DIEnumerator(name: "CODE_FOR_lshrv2di3", value: 1323, isUnsigned: true)
!894 = !DIEnumerator(name: "CODE_FOR_sse2_ashlv1ti3", value: 1328, isUnsigned: true)
!895 = !DIEnumerator(name: "CODE_FOR_ashlv8hi3", value: 1329, isUnsigned: true)
!896 = !DIEnumerator(name: "CODE_FOR_ashlv4si3", value: 1330, isUnsigned: true)
!897 = !DIEnumerator(name: "CODE_FOR_ashlv2di3", value: 1331, isUnsigned: true)
!898 = !DIEnumerator(name: "CODE_FOR_sse2_gtv16qi3", value: 1368, isUnsigned: true)
!899 = !DIEnumerator(name: "CODE_FOR_sse2_gtv8hi3", value: 1369, isUnsigned: true)
!900 = !DIEnumerator(name: "CODE_FOR_sse2_gtv4si3", value: 1370, isUnsigned: true)
!901 = !DIEnumerator(name: "CODE_FOR_sse4_2_gtv2di3", value: 1371, isUnsigned: true)
!902 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv16qi3", value: 1384, isUnsigned: true)
!903 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv8hi3", value: 1385, isUnsigned: true)
!904 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv4si3", value: 1386, isUnsigned: true)
!905 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2di3", value: 1387, isUnsigned: true)
!906 = !DIEnumerator(name: "CODE_FOR_sse2_packsswb", value: 1441, isUnsigned: true)
!907 = !DIEnumerator(name: "CODE_FOR_sse2_packssdw", value: 1443, isUnsigned: true)
!908 = !DIEnumerator(name: "CODE_FOR_sse2_packuswb", value: 1445, isUnsigned: true)
!909 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv16qi", value: 1447, isUnsigned: true)
!910 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv16qi", value: 1449, isUnsigned: true)
!911 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv8hi", value: 1451, isUnsigned: true)
!912 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv8hi", value: 1453, isUnsigned: true)
!913 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4si", value: 1455, isUnsigned: true)
!914 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4si", value: 1457, isUnsigned: true)
!915 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd_1", value: 1469, isUnsigned: true)
!916 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw_1", value: 1470, isUnsigned: true)
!917 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw_1", value: 1471, isUnsigned: true)
!918 = !DIEnumerator(name: "CODE_FOR_sse2_loadld", value: 1473, isUnsigned: true)
!919 = !DIEnumerator(name: "CODE_FOR_sse2_stored", value: 1474, isUnsigned: true)
!920 = !DIEnumerator(name: "CODE_FOR_vec_concatv2di", value: 1492, isUnsigned: true)
!921 = !DIEnumerator(name: "CODE_FOR_sse2_psadbw", value: 1498, isUnsigned: true)
!922 = !DIEnumerator(name: "CODE_FOR_avx_movmskps256", value: 1499, isUnsigned: true)
!923 = !DIEnumerator(name: "CODE_FOR_avx_movmskpd256", value: 1500, isUnsigned: true)
!924 = !DIEnumerator(name: "CODE_FOR_sse_movmskps", value: 1501, isUnsigned: true)
!925 = !DIEnumerator(name: "CODE_FOR_sse2_movmskpd", value: 1502, isUnsigned: true)
!926 = !DIEnumerator(name: "CODE_FOR_sse2_pmovmskb", value: 1503, isUnsigned: true)
!927 = !DIEnumerator(name: "CODE_FOR_sse_ldmxcsr", value: 1505, isUnsigned: true)
!928 = !DIEnumerator(name: "CODE_FOR_sse_stmxcsr", value: 1506, isUnsigned: true)
!929 = !DIEnumerator(name: "CODE_FOR_sse2_clflush", value: 1508, isUnsigned: true)
!930 = !DIEnumerator(name: "CODE_FOR_sse3_mwait", value: 1511, isUnsigned: true)
!931 = !DIEnumerator(name: "CODE_FOR_sse3_monitor", value: 1512, isUnsigned: true)
!932 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv8hi3", value: 1514, isUnsigned: true)
!933 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv4hi3", value: 1515, isUnsigned: true)
!934 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv4si3", value: 1517, isUnsigned: true)
!935 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv2si3", value: 1518, isUnsigned: true)
!936 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv8hi3", value: 1520, isUnsigned: true)
!937 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv4hi3", value: 1521, isUnsigned: true)
!938 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv8hi3", value: 1523, isUnsigned: true)
!939 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv4hi3", value: 1524, isUnsigned: true)
!940 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv4si3", value: 1526, isUnsigned: true)
!941 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv2si3", value: 1527, isUnsigned: true)
!942 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv8hi3", value: 1529, isUnsigned: true)
!943 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv4hi3", value: 1530, isUnsigned: true)
!944 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw128", value: 1532, isUnsigned: true)
!945 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw", value: 1533, isUnsigned: true)
!946 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv16qi3", value: 1538, isUnsigned: true)
!947 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv8qi3", value: 1539, isUnsigned: true)
!948 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv16qi3", value: 1543, isUnsigned: true)
!949 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8hi3", value: 1544, isUnsigned: true)
!950 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4si3", value: 1545, isUnsigned: true)
!951 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8qi3", value: 1546, isUnsigned: true)
!952 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4hi3", value: 1547, isUnsigned: true)
!953 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv2si3", value: 1548, isUnsigned: true)
!954 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrti", value: 1550, isUnsigned: true)
!955 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrdi", value: 1551, isUnsigned: true)
!956 = !DIEnumerator(name: "CODE_FOR_absv16qi2", value: 1552, isUnsigned: true)
!957 = !DIEnumerator(name: "CODE_FOR_absv8hi2", value: 1553, isUnsigned: true)
!958 = !DIEnumerator(name: "CODE_FOR_absv4si2", value: 1554, isUnsigned: true)
!959 = !DIEnumerator(name: "CODE_FOR_absv8qi2", value: 1555, isUnsigned: true)
!960 = !DIEnumerator(name: "CODE_FOR_absv4hi2", value: 1556, isUnsigned: true)
!961 = !DIEnumerator(name: "CODE_FOR_absv2si2", value: 1557, isUnsigned: true)
!962 = !DIEnumerator(name: "CODE_FOR_sse4a_movntsf", value: 1558, isUnsigned: true)
!963 = !DIEnumerator(name: "CODE_FOR_sse4a_movntdf", value: 1559, isUnsigned: true)
!964 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv4sf", value: 1560, isUnsigned: true)
!965 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv2df", value: 1561, isUnsigned: true)
!966 = !DIEnumerator(name: "CODE_FOR_sse4a_extrqi", value: 1562, isUnsigned: true)
!967 = !DIEnumerator(name: "CODE_FOR_sse4a_extrq", value: 1563, isUnsigned: true)
!968 = !DIEnumerator(name: "CODE_FOR_sse4a_insertqi", value: 1564, isUnsigned: true)
!969 = !DIEnumerator(name: "CODE_FOR_sse4a_insertq", value: 1565, isUnsigned: true)
!970 = !DIEnumerator(name: "CODE_FOR_avx_blendps", value: 1566, isUnsigned: true)
!971 = !DIEnumerator(name: "CODE_FOR_avx_blendpd", value: 1567, isUnsigned: true)
!972 = !DIEnumerator(name: "CODE_FOR_avx_blendps256", value: 1568, isUnsigned: true)
!973 = !DIEnumerator(name: "CODE_FOR_avx_blendpd256", value: 1569, isUnsigned: true)
!974 = !DIEnumerator(name: "CODE_FOR_avx_blendvps", value: 1570, isUnsigned: true)
!975 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd", value: 1571, isUnsigned: true)
!976 = !DIEnumerator(name: "CODE_FOR_avx_blendvps256", value: 1572, isUnsigned: true)
!977 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd256", value: 1573, isUnsigned: true)
!978 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendps", value: 1574, isUnsigned: true)
!979 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendpd", value: 1575, isUnsigned: true)
!980 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvps", value: 1576, isUnsigned: true)
!981 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvpd", value: 1577, isUnsigned: true)
!982 = !DIEnumerator(name: "CODE_FOR_avx_dpps", value: 1578, isUnsigned: true)
!983 = !DIEnumerator(name: "CODE_FOR_avx_dppd", value: 1579, isUnsigned: true)
!984 = !DIEnumerator(name: "CODE_FOR_avx_dpps256", value: 1580, isUnsigned: true)
!985 = !DIEnumerator(name: "CODE_FOR_avx_dppd256", value: 1581, isUnsigned: true)
!986 = !DIEnumerator(name: "CODE_FOR_sse4_1_dpps", value: 1582, isUnsigned: true)
!987 = !DIEnumerator(name: "CODE_FOR_sse4_1_dppd", value: 1583, isUnsigned: true)
!988 = !DIEnumerator(name: "CODE_FOR_sse4_1_movntdqa", value: 1584, isUnsigned: true)
!989 = !DIEnumerator(name: "CODE_FOR_sse4_1_mpsadbw", value: 1586, isUnsigned: true)
!990 = !DIEnumerator(name: "CODE_FOR_sse4_1_packusdw", value: 1588, isUnsigned: true)
!991 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendvb", value: 1590, isUnsigned: true)
!992 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendw", value: 1592, isUnsigned: true)
!993 = !DIEnumerator(name: "CODE_FOR_sse4_1_phminposuw", value: 1593, isUnsigned: true)
!994 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv8qiv8hi2", value: 1594, isUnsigned: true)
!995 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4qiv4si2", value: 1596, isUnsigned: true)
!996 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2qiv2di2", value: 1598, isUnsigned: true)
!997 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4hiv4si2", value: 1600, isUnsigned: true)
!998 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2hiv2di2", value: 1602, isUnsigned: true)
!999 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2siv2di2", value: 1604, isUnsigned: true)
!1000 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv8qiv8hi2", value: 1606, isUnsigned: true)
!1001 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4qiv4si2", value: 1608, isUnsigned: true)
!1002 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2qiv2di2", value: 1610, isUnsigned: true)
!1003 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4hiv4si2", value: 1612, isUnsigned: true)
!1004 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2hiv2di2", value: 1614, isUnsigned: true)
!1005 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2siv2di2", value: 1616, isUnsigned: true)
!1006 = !DIEnumerator(name: "CODE_FOR_avx_vtestps", value: 1618, isUnsigned: true)
!1007 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd", value: 1619, isUnsigned: true)
!1008 = !DIEnumerator(name: "CODE_FOR_avx_vtestps256", value: 1620, isUnsigned: true)
!1009 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd256", value: 1621, isUnsigned: true)
!1010 = !DIEnumerator(name: "CODE_FOR_avx_ptest256", value: 1622, isUnsigned: true)
!1011 = !DIEnumerator(name: "CODE_FOR_sse4_1_ptest", value: 1623, isUnsigned: true)
!1012 = !DIEnumerator(name: "CODE_FOR_avx_roundps256", value: 1624, isUnsigned: true)
!1013 = !DIEnumerator(name: "CODE_FOR_avx_roundpd256", value: 1625, isUnsigned: true)
!1014 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundps", value: 1626, isUnsigned: true)
!1015 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundpd", value: 1627, isUnsigned: true)
!1016 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundss", value: 1630, isUnsigned: true)
!1017 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsd", value: 1631, isUnsigned: true)
!1018 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr", value: 1632, isUnsigned: true)
!1019 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestri", value: 1633, isUnsigned: true)
!1020 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestrm", value: 1634, isUnsigned: true)
!1021 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr_cconly", value: 1635, isUnsigned: true)
!1022 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr", value: 1636, isUnsigned: true)
!1023 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistri", value: 1637, isUnsigned: true)
!1024 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistrm", value: 1638, isUnsigned: true)
!1025 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr_cconly", value: 1639, isUnsigned: true)
!1026 = !DIEnumerator(name: "CODE_FOR_xop_pmacsww", value: 1640, isUnsigned: true)
!1027 = !DIEnumerator(name: "CODE_FOR_xop_pmacssww", value: 1641, isUnsigned: true)
!1028 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdd", value: 1642, isUnsigned: true)
!1029 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdd", value: 1643, isUnsigned: true)
!1030 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdql", value: 1644, isUnsigned: true)
!1031 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdqh", value: 1645, isUnsigned: true)
!1032 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdql", value: 1646, isUnsigned: true)
!1033 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_low", value: 1647, isUnsigned: true)
!1034 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdqh", value: 1648, isUnsigned: true)
!1035 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_high", value: 1649, isUnsigned: true)
!1036 = !DIEnumerator(name: "CODE_FOR_xop_pmacsswd", value: 1650, isUnsigned: true)
!1037 = !DIEnumerator(name: "CODE_FOR_xop_pmacswd", value: 1651, isUnsigned: true)
!1038 = !DIEnumerator(name: "CODE_FOR_xop_pmadcsswd", value: 1652, isUnsigned: true)
!1039 = !DIEnumerator(name: "CODE_FOR_xop_pmadcswd", value: 1653, isUnsigned: true)
!1040 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16qi", value: 1654, isUnsigned: true)
!1041 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8hi", value: 1655, isUnsigned: true)
!1042 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4si", value: 1656, isUnsigned: true)
!1043 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2di", value: 1657, isUnsigned: true)
!1044 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4sf", value: 1658, isUnsigned: true)
!1045 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2df", value: 1659, isUnsigned: true)
!1046 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v32qi256", value: 1660, isUnsigned: true)
!1047 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16hi256", value: 1661, isUnsigned: true)
!1048 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8si256", value: 1662, isUnsigned: true)
!1049 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4di256", value: 1663, isUnsigned: true)
!1050 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8sf256", value: 1664, isUnsigned: true)
!1051 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4df256", value: 1665, isUnsigned: true)
!1052 = !DIEnumerator(name: "CODE_FOR_xop_phaddbw", value: 1666, isUnsigned: true)
!1053 = !DIEnumerator(name: "CODE_FOR_xop_phaddbd", value: 1667, isUnsigned: true)
!1054 = !DIEnumerator(name: "CODE_FOR_xop_phaddbq", value: 1668, isUnsigned: true)
!1055 = !DIEnumerator(name: "CODE_FOR_xop_phaddwd", value: 1669, isUnsigned: true)
!1056 = !DIEnumerator(name: "CODE_FOR_xop_phaddwq", value: 1670, isUnsigned: true)
!1057 = !DIEnumerator(name: "CODE_FOR_xop_phadddq", value: 1671, isUnsigned: true)
!1058 = !DIEnumerator(name: "CODE_FOR_xop_phaddubw", value: 1672, isUnsigned: true)
!1059 = !DIEnumerator(name: "CODE_FOR_xop_phaddubd", value: 1673, isUnsigned: true)
!1060 = !DIEnumerator(name: "CODE_FOR_xop_phaddubq", value: 1674, isUnsigned: true)
!1061 = !DIEnumerator(name: "CODE_FOR_xop_phadduwd", value: 1675, isUnsigned: true)
!1062 = !DIEnumerator(name: "CODE_FOR_xop_phadduwq", value: 1676, isUnsigned: true)
!1063 = !DIEnumerator(name: "CODE_FOR_xop_phaddudq", value: 1677, isUnsigned: true)
!1064 = !DIEnumerator(name: "CODE_FOR_xop_phsubbw", value: 1678, isUnsigned: true)
!1065 = !DIEnumerator(name: "CODE_FOR_xop_phsubwd", value: 1679, isUnsigned: true)
!1066 = !DIEnumerator(name: "CODE_FOR_xop_phsubdq", value: 1680, isUnsigned: true)
!1067 = !DIEnumerator(name: "CODE_FOR_xop_pperm", value: 1681, isUnsigned: true)
!1068 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v2di_v4si", value: 1682, isUnsigned: true)
!1069 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v4si_v8hi", value: 1683, isUnsigned: true)
!1070 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v8hi_v16qi", value: 1684, isUnsigned: true)
!1071 = !DIEnumerator(name: "CODE_FOR_xop_rotlv16qi3", value: 1685, isUnsigned: true)
!1072 = !DIEnumerator(name: "CODE_FOR_xop_rotlv8hi3", value: 1686, isUnsigned: true)
!1073 = !DIEnumerator(name: "CODE_FOR_xop_rotlv4si3", value: 1687, isUnsigned: true)
!1074 = !DIEnumerator(name: "CODE_FOR_xop_rotlv2di3", value: 1688, isUnsigned: true)
!1075 = !DIEnumerator(name: "CODE_FOR_xop_rotrv16qi3", value: 1689, isUnsigned: true)
!1076 = !DIEnumerator(name: "CODE_FOR_xop_rotrv8hi3", value: 1690, isUnsigned: true)
!1077 = !DIEnumerator(name: "CODE_FOR_xop_rotrv4si3", value: 1691, isUnsigned: true)
!1078 = !DIEnumerator(name: "CODE_FOR_xop_rotrv2di3", value: 1692, isUnsigned: true)
!1079 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv16qi3", value: 1693, isUnsigned: true)
!1080 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv8hi3", value: 1694, isUnsigned: true)
!1081 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv4si3", value: 1695, isUnsigned: true)
!1082 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv2di3", value: 1696, isUnsigned: true)
!1083 = !DIEnumerator(name: "CODE_FOR_xop_ashlv16qi3", value: 1697, isUnsigned: true)
!1084 = !DIEnumerator(name: "CODE_FOR_xop_ashlv8hi3", value: 1698, isUnsigned: true)
!1085 = !DIEnumerator(name: "CODE_FOR_xop_ashlv4si3", value: 1699, isUnsigned: true)
!1086 = !DIEnumerator(name: "CODE_FOR_xop_ashlv2di3", value: 1700, isUnsigned: true)
!1087 = !DIEnumerator(name: "CODE_FOR_xop_lshlv16qi3", value: 1701, isUnsigned: true)
!1088 = !DIEnumerator(name: "CODE_FOR_xop_lshlv8hi3", value: 1702, isUnsigned: true)
!1089 = !DIEnumerator(name: "CODE_FOR_xop_lshlv4si3", value: 1703, isUnsigned: true)
!1090 = !DIEnumerator(name: "CODE_FOR_xop_lshlv2di3", value: 1704, isUnsigned: true)
!1091 = !DIEnumerator(name: "CODE_FOR_xop_frczv4sf2", value: 1705, isUnsigned: true)
!1092 = !DIEnumerator(name: "CODE_FOR_xop_frczv2df2", value: 1706, isUnsigned: true)
!1093 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv4sf2", value: 1707, isUnsigned: true)
!1094 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv2df2", value: 1708, isUnsigned: true)
!1095 = !DIEnumerator(name: "CODE_FOR_xop_frczv8sf2256", value: 1709, isUnsigned: true)
!1096 = !DIEnumerator(name: "CODE_FOR_xop_frczv4df2256", value: 1710, isUnsigned: true)
!1097 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv16qi3", value: 1711, isUnsigned: true)
!1098 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv8hi3", value: 1712, isUnsigned: true)
!1099 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv4si3", value: 1713, isUnsigned: true)
!1100 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv2di3", value: 1714, isUnsigned: true)
!1101 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv16qi3", value: 1715, isUnsigned: true)
!1102 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv8hi3", value: 1716, isUnsigned: true)
!1103 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv4si3", value: 1717, isUnsigned: true)
!1104 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv2di3", value: 1718, isUnsigned: true)
!1105 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v16qi3", value: 1719, isUnsigned: true)
!1106 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v8hi3", value: 1720, isUnsigned: true)
!1107 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v4si3", value: 1721, isUnsigned: true)
!1108 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v2di3", value: 1722, isUnsigned: true)
!1109 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv16qi3", value: 1723, isUnsigned: true)
!1110 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv8hi3", value: 1724, isUnsigned: true)
!1111 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv4si3", value: 1725, isUnsigned: true)
!1112 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv2di3", value: 1726, isUnsigned: true)
!1113 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4sf3", value: 1727, isUnsigned: true)
!1114 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v2df3", value: 1728, isUnsigned: true)
!1115 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v8sf3", value: 1729, isUnsigned: true)
!1116 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4df3", value: 1730, isUnsigned: true)
!1117 = !DIEnumerator(name: "CODE_FOR_aesenc", value: 1732, isUnsigned: true)
!1118 = !DIEnumerator(name: "CODE_FOR_aesenclast", value: 1734, isUnsigned: true)
!1119 = !DIEnumerator(name: "CODE_FOR_aesdec", value: 1736, isUnsigned: true)
!1120 = !DIEnumerator(name: "CODE_FOR_aesdeclast", value: 1738, isUnsigned: true)
!1121 = !DIEnumerator(name: "CODE_FOR_aesimc", value: 1739, isUnsigned: true)
!1122 = !DIEnumerator(name: "CODE_FOR_aeskeygenassist", value: 1740, isUnsigned: true)
!1123 = !DIEnumerator(name: "CODE_FOR_pclmulqdq", value: 1742, isUnsigned: true)
!1124 = !DIEnumerator(name: "CODE_FOR_vec_dupv8si", value: 1745, isUnsigned: true)
!1125 = !DIEnumerator(name: "CODE_FOR_vec_dupv8sf", value: 1746, isUnsigned: true)
!1126 = !DIEnumerator(name: "CODE_FOR_vec_dupv4di", value: 1747, isUnsigned: true)
!1127 = !DIEnumerator(name: "CODE_FOR_vec_dupv4df", value: 1748, isUnsigned: true)
!1128 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v32qi", value: 1749, isUnsigned: true)
!1129 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v16hi", value: 1750, isUnsigned: true)
!1130 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8si", value: 1751, isUnsigned: true)
!1131 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4di", value: 1752, isUnsigned: true)
!1132 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8sf", value: 1753, isUnsigned: true)
!1133 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4df", value: 1754, isUnsigned: true)
!1134 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4sf3", value: 1762, isUnsigned: true)
!1135 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv2df3", value: 1763, isUnsigned: true)
!1136 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv8sf3", value: 1764, isUnsigned: true)
!1137 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4df3", value: 1765, isUnsigned: true)
!1138 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4di", value: 1772, isUnsigned: true)
!1139 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4df", value: 1773, isUnsigned: true)
!1140 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4di", value: 1774, isUnsigned: true)
!1141 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4df", value: 1775, isUnsigned: true)
!1142 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8si", value: 1776, isUnsigned: true)
!1143 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8sf", value: 1777, isUnsigned: true)
!1144 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8si", value: 1778, isUnsigned: true)
!1145 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8sf", value: 1779, isUnsigned: true)
!1146 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v16hi", value: 1780, isUnsigned: true)
!1147 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v16hi", value: 1781, isUnsigned: true)
!1148 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v32qi", value: 1782, isUnsigned: true)
!1149 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v32qi", value: 1783, isUnsigned: true)
!1150 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps", value: 1784, isUnsigned: true)
!1151 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd", value: 1785, isUnsigned: true)
!1152 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps256", value: 1786, isUnsigned: true)
!1153 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd256", value: 1787, isUnsigned: true)
!1154 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps", value: 1788, isUnsigned: true)
!1155 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd", value: 1789, isUnsigned: true)
!1156 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps256", value: 1790, isUnsigned: true)
!1157 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd256", value: 1791, isUnsigned: true)
!1158 = !DIEnumerator(name: "CODE_FOR_avx_si256_si", value: 1792, isUnsigned: true)
!1159 = !DIEnumerator(name: "CODE_FOR_avx_ps256_ps", value: 1793, isUnsigned: true)
!1160 = !DIEnumerator(name: "CODE_FOR_avx_pd256_pd", value: 1794, isUnsigned: true)
!1161 = !DIEnumerator(name: "CODE_FOR_avx_si_si256", value: 1795, isUnsigned: true)
!1162 = !DIEnumerator(name: "CODE_FOR_avx_ps_ps256", value: 1796, isUnsigned: true)
!1163 = !DIEnumerator(name: "CODE_FOR_avx_pd_pd256", value: 1797, isUnsigned: true)
!1164 = !DIEnumerator(name: "CODE_FOR_memory_barrier_nosse", value: 1804, isUnsigned: true)
!1165 = !DIEnumerator(name: "CODE_FOR_sync_double_compare_and_swapdi", value: 1808, isUnsigned: true)
!1166 = !DIEnumerator(name: "CODE_FOR_sync_old_addqi", value: 1810, isUnsigned: true)
!1167 = !DIEnumerator(name: "CODE_FOR_sync_old_addhi", value: 1811, isUnsigned: true)
!1168 = !DIEnumerator(name: "CODE_FOR_sync_old_addsi", value: 1812, isUnsigned: true)
!1169 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setqi", value: 1813, isUnsigned: true)
!1170 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_sethi", value: 1814, isUnsigned: true)
!1171 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setsi", value: 1815, isUnsigned: true)
!1172 = !DIEnumerator(name: "CODE_FOR_sync_addqi", value: 1816, isUnsigned: true)
!1173 = !DIEnumerator(name: "CODE_FOR_sync_addhi", value: 1817, isUnsigned: true)
!1174 = !DIEnumerator(name: "CODE_FOR_sync_addsi", value: 1818, isUnsigned: true)
!1175 = !DIEnumerator(name: "CODE_FOR_sync_subqi", value: 1819, isUnsigned: true)
!1176 = !DIEnumerator(name: "CODE_FOR_sync_subhi", value: 1820, isUnsigned: true)
!1177 = !DIEnumerator(name: "CODE_FOR_sync_subsi", value: 1821, isUnsigned: true)
!1178 = !DIEnumerator(name: "CODE_FOR_sync_andqi", value: 1822, isUnsigned: true)
!1179 = !DIEnumerator(name: "CODE_FOR_sync_iorqi", value: 1823, isUnsigned: true)
!1180 = !DIEnumerator(name: "CODE_FOR_sync_xorqi", value: 1824, isUnsigned: true)
!1181 = !DIEnumerator(name: "CODE_FOR_sync_andhi", value: 1825, isUnsigned: true)
!1182 = !DIEnumerator(name: "CODE_FOR_sync_iorhi", value: 1826, isUnsigned: true)
!1183 = !DIEnumerator(name: "CODE_FOR_sync_xorhi", value: 1827, isUnsigned: true)
!1184 = !DIEnumerator(name: "CODE_FOR_sync_andsi", value: 1828, isUnsigned: true)
!1185 = !DIEnumerator(name: "CODE_FOR_sync_iorsi", value: 1829, isUnsigned: true)
!1186 = !DIEnumerator(name: "CODE_FOR_sync_xorsi", value: 1830, isUnsigned: true)
!1187 = !DIEnumerator(name: "CODE_FOR_cbranchqi4", value: 1831, isUnsigned: true)
!1188 = !DIEnumerator(name: "CODE_FOR_cbranchhi4", value: 1832, isUnsigned: true)
!1189 = !DIEnumerator(name: "CODE_FOR_cbranchsi4", value: 1833, isUnsigned: true)
!1190 = !DIEnumerator(name: "CODE_FOR_cbranchdi4", value: 1834, isUnsigned: true)
!1191 = !DIEnumerator(name: "CODE_FOR_cstoreqi4", value: 1835, isUnsigned: true)
!1192 = !DIEnumerator(name: "CODE_FOR_cstorehi4", value: 1836, isUnsigned: true)
!1193 = !DIEnumerator(name: "CODE_FOR_cstoresi4", value: 1837, isUnsigned: true)
!1194 = !DIEnumerator(name: "CODE_FOR_cmpsi_1", value: 1838, isUnsigned: true)
!1195 = !DIEnumerator(name: "CODE_FOR_cmpqi_ext_3", value: 1839, isUnsigned: true)
!1196 = !DIEnumerator(name: "CODE_FOR_cbranchxf4", value: 1840, isUnsigned: true)
!1197 = !DIEnumerator(name: "CODE_FOR_cstorexf4", value: 1841, isUnsigned: true)
!1198 = !DIEnumerator(name: "CODE_FOR_cbranchsf4", value: 1842, isUnsigned: true)
!1199 = !DIEnumerator(name: "CODE_FOR_cbranchdf4", value: 1843, isUnsigned: true)
!1200 = !DIEnumerator(name: "CODE_FOR_cstoresf4", value: 1844, isUnsigned: true)
!1201 = !DIEnumerator(name: "CODE_FOR_cstoredf4", value: 1845, isUnsigned: true)
!1202 = !DIEnumerator(name: "CODE_FOR_cbranchcc4", value: 1846, isUnsigned: true)
!1203 = !DIEnumerator(name: "CODE_FOR_cstorecc4", value: 1847, isUnsigned: true)
!1204 = !DIEnumerator(name: "CODE_FOR_movsi", value: 1855, isUnsigned: true)
!1205 = !DIEnumerator(name: "CODE_FOR_movhi", value: 1856, isUnsigned: true)
!1206 = !DIEnumerator(name: "CODE_FOR_movstricthi", value: 1857, isUnsigned: true)
!1207 = !DIEnumerator(name: "CODE_FOR_movqi", value: 1858, isUnsigned: true)
!1208 = !DIEnumerator(name: "CODE_FOR_movstrictqi", value: 1859, isUnsigned: true)
!1209 = !DIEnumerator(name: "CODE_FOR_movdi", value: 1860, isUnsigned: true)
!1210 = !DIEnumerator(name: "CODE_FOR_movoi", value: 1863, isUnsigned: true)
!1211 = !DIEnumerator(name: "CODE_FOR_movti", value: 1864, isUnsigned: true)
!1212 = !DIEnumerator(name: "CODE_FOR_movcdi", value: 1866, isUnsigned: true)
!1213 = !DIEnumerator(name: "CODE_FOR_movsf", value: 1867, isUnsigned: true)
!1214 = !DIEnumerator(name: "CODE_FOR_movdf", value: 1870, isUnsigned: true)
!1215 = !DIEnumerator(name: "CODE_FOR_movxf", value: 1874, isUnsigned: true)
!1216 = !DIEnumerator(name: "CODE_FOR_movtf", value: 1877, isUnsigned: true)
!1217 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2", value: 1887, isUnsigned: true)
!1218 = !DIEnumerator(name: "CODE_FOR_zero_extendqihi2", value: 1889, isUnsigned: true)
!1219 = !DIEnumerator(name: "CODE_FOR_zero_extendqisi2", value: 1893, isUnsigned: true)
!1220 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2", value: 1897, isUnsigned: true)
!1221 = !DIEnumerator(name: "CODE_FOR_extendsidi2", value: 1900, isUnsigned: true)
!1222 = !DIEnumerator(name: "CODE_FOR_extendsfdf2", value: 1907, isUnsigned: true)
!1223 = !DIEnumerator(name: "CODE_FOR_extendsfxf2", value: 1909, isUnsigned: true)
!1224 = !DIEnumerator(name: "CODE_FOR_extenddfxf2", value: 1910, isUnsigned: true)
!1225 = !DIEnumerator(name: "CODE_FOR_truncdfsf2", value: 1911, isUnsigned: true)
!1226 = !DIEnumerator(name: "CODE_FOR_truncdfsf2_with_temp", value: 1913, isUnsigned: true)
!1227 = !DIEnumerator(name: "CODE_FOR_truncxfsf2", value: 1915, isUnsigned: true)
!1228 = !DIEnumerator(name: "CODE_FOR_truncxfdf2", value: 1916, isUnsigned: true)
!1229 = !DIEnumerator(name: "CODE_FOR_fix_truncxfdi2", value: 1921, isUnsigned: true)
!1230 = !DIEnumerator(name: "CODE_FOR_fix_truncsfdi2", value: 1922, isUnsigned: true)
!1231 = !DIEnumerator(name: "CODE_FOR_fix_truncdfdi2", value: 1923, isUnsigned: true)
!1232 = !DIEnumerator(name: "CODE_FOR_fix_truncxfsi2", value: 1924, isUnsigned: true)
!1233 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi2", value: 1925, isUnsigned: true)
!1234 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi2", value: 1926, isUnsigned: true)
!1235 = !DIEnumerator(name: "CODE_FOR_fix_truncsfhi2", value: 1927, isUnsigned: true)
!1236 = !DIEnumerator(name: "CODE_FOR_fix_truncdfhi2", value: 1928, isUnsigned: true)
!1237 = !DIEnumerator(name: "CODE_FOR_fix_truncxfhi2", value: 1929, isUnsigned: true)
!1238 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfsi2", value: 1930, isUnsigned: true)
!1239 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfsi2", value: 1931, isUnsigned: true)
!1240 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfhi2", value: 1934, isUnsigned: true)
!1241 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfhi2", value: 1935, isUnsigned: true)
!1242 = !DIEnumerator(name: "CODE_FOR_floathisf2", value: 1962, isUnsigned: true)
!1243 = !DIEnumerator(name: "CODE_FOR_floathidf2", value: 1963, isUnsigned: true)
!1244 = !DIEnumerator(name: "CODE_FOR_floathixf2", value: 1964, isUnsigned: true)
!1245 = !DIEnumerator(name: "CODE_FOR_floatsisf2", value: 1974, isUnsigned: true)
!1246 = !DIEnumerator(name: "CODE_FOR_floatdisf2", value: 1975, isUnsigned: true)
!1247 = !DIEnumerator(name: "CODE_FOR_floatsidf2", value: 1976, isUnsigned: true)
!1248 = !DIEnumerator(name: "CODE_FOR_floatdidf2", value: 1977, isUnsigned: true)
!1249 = !DIEnumerator(name: "CODE_FOR_floatsixf2", value: 1978, isUnsigned: true)
!1250 = !DIEnumerator(name: "CODE_FOR_floatdixf2", value: 1979, isUnsigned: true)
!1251 = !DIEnumerator(name: "CODE_FOR_floatunssisf2", value: 2028, isUnsigned: true)
!1252 = !DIEnumerator(name: "CODE_FOR_floatunssidf2", value: 2029, isUnsigned: true)
!1253 = !DIEnumerator(name: "CODE_FOR_floatunssixf2", value: 2030, isUnsigned: true)
!1254 = !DIEnumerator(name: "CODE_FOR_addqi3", value: 2031, isUnsigned: true)
!1255 = !DIEnumerator(name: "CODE_FOR_addhi3", value: 2032, isUnsigned: true)
!1256 = !DIEnumerator(name: "CODE_FOR_addsi3", value: 2033, isUnsigned: true)
!1257 = !DIEnumerator(name: "CODE_FOR_adddi3", value: 2034, isUnsigned: true)
!1258 = !DIEnumerator(name: "CODE_FOR_subqi3", value: 2040, isUnsigned: true)
!1259 = !DIEnumerator(name: "CODE_FOR_subhi3", value: 2041, isUnsigned: true)
!1260 = !DIEnumerator(name: "CODE_FOR_subsi3", value: 2042, isUnsigned: true)
!1261 = !DIEnumerator(name: "CODE_FOR_subdi3", value: 2043, isUnsigned: true)
!1262 = !DIEnumerator(name: "CODE_FOR_addqi3_carry", value: 2045, isUnsigned: true)
!1263 = !DIEnumerator(name: "CODE_FOR_subqi3_carry", value: 2046, isUnsigned: true)
!1264 = !DIEnumerator(name: "CODE_FOR_addhi3_carry", value: 2047, isUnsigned: true)
!1265 = !DIEnumerator(name: "CODE_FOR_subhi3_carry", value: 2048, isUnsigned: true)
!1266 = !DIEnumerator(name: "CODE_FOR_addsi3_carry", value: 2049, isUnsigned: true)
!1267 = !DIEnumerator(name: "CODE_FOR_subsi3_carry", value: 2050, isUnsigned: true)
!1268 = !DIEnumerator(name: "CODE_FOR_adddi3_carry", value: 2051, isUnsigned: true)
!1269 = !DIEnumerator(name: "CODE_FOR_subdi3_carry", value: 2052, isUnsigned: true)
!1270 = !DIEnumerator(name: "CODE_FOR_addxf3", value: 2053, isUnsigned: true)
!1271 = !DIEnumerator(name: "CODE_FOR_subxf3", value: 2054, isUnsigned: true)
!1272 = !DIEnumerator(name: "CODE_FOR_addsf3", value: 2055, isUnsigned: true)
!1273 = !DIEnumerator(name: "CODE_FOR_subsf3", value: 2056, isUnsigned: true)
!1274 = !DIEnumerator(name: "CODE_FOR_adddf3", value: 2057, isUnsigned: true)
!1275 = !DIEnumerator(name: "CODE_FOR_subdf3", value: 2058, isUnsigned: true)
!1276 = !DIEnumerator(name: "CODE_FOR_mulhi3", value: 2059, isUnsigned: true)
!1277 = !DIEnumerator(name: "CODE_FOR_mulsi3", value: 2060, isUnsigned: true)
!1278 = !DIEnumerator(name: "CODE_FOR_mulqi3", value: 2061, isUnsigned: true)
!1279 = !DIEnumerator(name: "CODE_FOR_mulsidi3", value: 2062, isUnsigned: true)
!1280 = !DIEnumerator(name: "CODE_FOR_umulsidi3", value: 2063, isUnsigned: true)
!1281 = !DIEnumerator(name: "CODE_FOR_mulqihi3", value: 2064, isUnsigned: true)
!1282 = !DIEnumerator(name: "CODE_FOR_umulqihi3", value: 2065, isUnsigned: true)
!1283 = !DIEnumerator(name: "CODE_FOR_smulsi3_highpart", value: 2066, isUnsigned: true)
!1284 = !DIEnumerator(name: "CODE_FOR_umulsi3_highpart", value: 2067, isUnsigned: true)
!1285 = !DIEnumerator(name: "CODE_FOR_mulxf3", value: 2068, isUnsigned: true)
!1286 = !DIEnumerator(name: "CODE_FOR_mulsf3", value: 2069, isUnsigned: true)
!1287 = !DIEnumerator(name: "CODE_FOR_muldf3", value: 2070, isUnsigned: true)
!1288 = !DIEnumerator(name: "CODE_FOR_divxf3", value: 2071, isUnsigned: true)
!1289 = !DIEnumerator(name: "CODE_FOR_divdf3", value: 2072, isUnsigned: true)
!1290 = !DIEnumerator(name: "CODE_FOR_divsf3", value: 2073, isUnsigned: true)
!1291 = !DIEnumerator(name: "CODE_FOR_divmodhi4", value: 2074, isUnsigned: true)
!1292 = !DIEnumerator(name: "CODE_FOR_divmodsi4", value: 2075, isUnsigned: true)
!1293 = !DIEnumerator(name: "CODE_FOR_udivmodhi4", value: 2078, isUnsigned: true)
!1294 = !DIEnumerator(name: "CODE_FOR_udivmodsi4", value: 2079, isUnsigned: true)
!1295 = !DIEnumerator(name: "CODE_FOR_testsi_ccno_1", value: 2082, isUnsigned: true)
!1296 = !DIEnumerator(name: "CODE_FOR_testqi_ccz_1", value: 2083, isUnsigned: true)
!1297 = !DIEnumerator(name: "CODE_FOR_testqi_ext_ccno_0", value: 2084, isUnsigned: true)
!1298 = !DIEnumerator(name: "CODE_FOR_andqi3", value: 2088, isUnsigned: true)
!1299 = !DIEnumerator(name: "CODE_FOR_andhi3", value: 2089, isUnsigned: true)
!1300 = !DIEnumerator(name: "CODE_FOR_andsi3", value: 2090, isUnsigned: true)
!1301 = !DIEnumerator(name: "CODE_FOR_iorqi3", value: 2096, isUnsigned: true)
!1302 = !DIEnumerator(name: "CODE_FOR_xorqi3", value: 2097, isUnsigned: true)
!1303 = !DIEnumerator(name: "CODE_FOR_iorhi3", value: 2098, isUnsigned: true)
!1304 = !DIEnumerator(name: "CODE_FOR_xorhi3", value: 2099, isUnsigned: true)
!1305 = !DIEnumerator(name: "CODE_FOR_iorsi3", value: 2100, isUnsigned: true)
!1306 = !DIEnumerator(name: "CODE_FOR_xorsi3", value: 2101, isUnsigned: true)
!1307 = !DIEnumerator(name: "CODE_FOR_xorqi_cc_ext_1", value: 2106, isUnsigned: true)
!1308 = !DIEnumerator(name: "CODE_FOR_negqi2", value: 2107, isUnsigned: true)
!1309 = !DIEnumerator(name: "CODE_FOR_neghi2", value: 2108, isUnsigned: true)
!1310 = !DIEnumerator(name: "CODE_FOR_negsi2", value: 2109, isUnsigned: true)
!1311 = !DIEnumerator(name: "CODE_FOR_negdi2", value: 2110, isUnsigned: true)
!1312 = !DIEnumerator(name: "CODE_FOR_abssf2", value: 2112, isUnsigned: true)
!1313 = !DIEnumerator(name: "CODE_FOR_negsf2", value: 2113, isUnsigned: true)
!1314 = !DIEnumerator(name: "CODE_FOR_absdf2", value: 2114, isUnsigned: true)
!1315 = !DIEnumerator(name: "CODE_FOR_negdf2", value: 2115, isUnsigned: true)
!1316 = !DIEnumerator(name: "CODE_FOR_absxf2", value: 2116, isUnsigned: true)
!1317 = !DIEnumerator(name: "CODE_FOR_negxf2", value: 2117, isUnsigned: true)
!1318 = !DIEnumerator(name: "CODE_FOR_abstf2", value: 2118, isUnsigned: true)
!1319 = !DIEnumerator(name: "CODE_FOR_negtf2", value: 2119, isUnsigned: true)
!1320 = !DIEnumerator(name: "CODE_FOR_copysignsf3", value: 2125, isUnsigned: true)
!1321 = !DIEnumerator(name: "CODE_FOR_copysigndf3", value: 2126, isUnsigned: true)
!1322 = !DIEnumerator(name: "CODE_FOR_copysigntf3", value: 2127, isUnsigned: true)
!1323 = !DIEnumerator(name: "CODE_FOR_one_cmplqi2", value: 2134, isUnsigned: true)
!1324 = !DIEnumerator(name: "CODE_FOR_one_cmplhi2", value: 2135, isUnsigned: true)
!1325 = !DIEnumerator(name: "CODE_FOR_one_cmplsi2", value: 2136, isUnsigned: true)
!1326 = !DIEnumerator(name: "CODE_FOR_ashldi3", value: 2142, isUnsigned: true)
!1327 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_1", value: 2145, isUnsigned: true)
!1328 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_2", value: 2146, isUnsigned: true)
!1329 = !DIEnumerator(name: "CODE_FOR_ashlsi3", value: 2147, isUnsigned: true)
!1330 = !DIEnumerator(name: "CODE_FOR_ashlhi3", value: 2150, isUnsigned: true)
!1331 = !DIEnumerator(name: "CODE_FOR_ashlqi3", value: 2151, isUnsigned: true)
!1332 = !DIEnumerator(name: "CODE_FOR_ashrdi3", value: 2152, isUnsigned: true)
!1333 = !DIEnumerator(name: "CODE_FOR_x86_64_shift_adj_3", value: 2153, isUnsigned: true)
!1334 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_3", value: 2156, isUnsigned: true)
!1335 = !DIEnumerator(name: "CODE_FOR_ashrsi3_31", value: 2157, isUnsigned: true)
!1336 = !DIEnumerator(name: "CODE_FOR_ashrsi3", value: 2158, isUnsigned: true)
!1337 = !DIEnumerator(name: "CODE_FOR_ashrhi3", value: 2159, isUnsigned: true)
!1338 = !DIEnumerator(name: "CODE_FOR_ashrqi3", value: 2160, isUnsigned: true)
!1339 = !DIEnumerator(name: "CODE_FOR_lshrdi3", value: 2161, isUnsigned: true)
!1340 = !DIEnumerator(name: "CODE_FOR_lshrsi3", value: 2164, isUnsigned: true)
!1341 = !DIEnumerator(name: "CODE_FOR_lshrhi3", value: 2165, isUnsigned: true)
!1342 = !DIEnumerator(name: "CODE_FOR_lshrqi3", value: 2166, isUnsigned: true)
!1343 = !DIEnumerator(name: "CODE_FOR_rotldi3", value: 2167, isUnsigned: true)
!1344 = !DIEnumerator(name: "CODE_FOR_rotlsi3", value: 2169, isUnsigned: true)
!1345 = !DIEnumerator(name: "CODE_FOR_rotlhi3", value: 2170, isUnsigned: true)
!1346 = !DIEnumerator(name: "CODE_FOR_rotlqi3", value: 2172, isUnsigned: true)
!1347 = !DIEnumerator(name: "CODE_FOR_rotrdi3", value: 2173, isUnsigned: true)
!1348 = !DIEnumerator(name: "CODE_FOR_rotrsi3", value: 2175, isUnsigned: true)
!1349 = !DIEnumerator(name: "CODE_FOR_rotrhi3", value: 2176, isUnsigned: true)
!1350 = !DIEnumerator(name: "CODE_FOR_rotrqi3", value: 2178, isUnsigned: true)
!1351 = !DIEnumerator(name: "CODE_FOR_extv", value: 2179, isUnsigned: true)
!1352 = !DIEnumerator(name: "CODE_FOR_extzv", value: 2180, isUnsigned: true)
!1353 = !DIEnumerator(name: "CODE_FOR_insv", value: 2181, isUnsigned: true)
!1354 = !DIEnumerator(name: "CODE_FOR_indirect_jump", value: 2200, isUnsigned: true)
!1355 = !DIEnumerator(name: "CODE_FOR_tablejump", value: 2201, isUnsigned: true)
!1356 = !DIEnumerator(name: "CODE_FOR_call_pop", value: 2204, isUnsigned: true)
!1357 = !DIEnumerator(name: "CODE_FOR_call", value: 2205, isUnsigned: true)
!1358 = !DIEnumerator(name: "CODE_FOR_sibcall", value: 2206, isUnsigned: true)
!1359 = !DIEnumerator(name: "CODE_FOR_call_value_pop", value: 2207, isUnsigned: true)
!1360 = !DIEnumerator(name: "CODE_FOR_call_value", value: 2208, isUnsigned: true)
!1361 = !DIEnumerator(name: "CODE_FOR_sibcall_value", value: 2209, isUnsigned: true)
!1362 = !DIEnumerator(name: "CODE_FOR_untyped_call", value: 2210, isUnsigned: true)
!1363 = !DIEnumerator(name: "CODE_FOR_memory_blockage", value: 2211, isUnsigned: true)
!1364 = !DIEnumerator(name: "CODE_FOR_return", value: 2212, isUnsigned: true)
!1365 = !DIEnumerator(name: "CODE_FOR_prologue", value: 2213, isUnsigned: true)
!1366 = !DIEnumerator(name: "CODE_FOR_epilogue", value: 2214, isUnsigned: true)
!1367 = !DIEnumerator(name: "CODE_FOR_sibcall_epilogue", value: 2215, isUnsigned: true)
!1368 = !DIEnumerator(name: "CODE_FOR_eh_return", value: 2216, isUnsigned: true)
!1369 = !DIEnumerator(name: "CODE_FOR_ffssi2", value: 2218, isUnsigned: true)
!1370 = !DIEnumerator(name: "CODE_FOR_ffs_cmove", value: 2219, isUnsigned: true)
!1371 = !DIEnumerator(name: "CODE_FOR_clzsi2", value: 2221, isUnsigned: true)
!1372 = !DIEnumerator(name: "CODE_FOR_bswapsi2", value: 2222, isUnsigned: true)
!1373 = !DIEnumerator(name: "CODE_FOR_clzhi2", value: 2223, isUnsigned: true)
!1374 = !DIEnumerator(name: "CODE_FOR_paritydi2", value: 2224, isUnsigned: true)
!1375 = !DIEnumerator(name: "CODE_FOR_paritysi2", value: 2226, isUnsigned: true)
!1376 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_32", value: 2228, isUnsigned: true)
!1377 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_64", value: 2229, isUnsigned: true)
!1378 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_32", value: 2230, isUnsigned: true)
!1379 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_64", value: 2231, isUnsigned: true)
!1380 = !DIEnumerator(name: "CODE_FOR_tls_dynamic_gnu2_32", value: 2233, isUnsigned: true)
!1381 = !DIEnumerator(name: "CODE_FOR_rsqrtsf2", value: 2240, isUnsigned: true)
!1382 = !DIEnumerator(name: "CODE_FOR_sqrtsf2", value: 2241, isUnsigned: true)
!1383 = !DIEnumerator(name: "CODE_FOR_sqrtdf2", value: 2242, isUnsigned: true)
!1384 = !DIEnumerator(name: "CODE_FOR_fmodxf3", value: 2243, isUnsigned: true)
!1385 = !DIEnumerator(name: "CODE_FOR_fmodsf3", value: 2244, isUnsigned: true)
!1386 = !DIEnumerator(name: "CODE_FOR_fmoddf3", value: 2245, isUnsigned: true)
!1387 = !DIEnumerator(name: "CODE_FOR_remainderxf3", value: 2246, isUnsigned: true)
!1388 = !DIEnumerator(name: "CODE_FOR_remaindersf3", value: 2247, isUnsigned: true)
!1389 = !DIEnumerator(name: "CODE_FOR_remainderdf3", value: 2248, isUnsigned: true)
!1390 = !DIEnumerator(name: "CODE_FOR_sincossf3", value: 2255, isUnsigned: true)
!1391 = !DIEnumerator(name: "CODE_FOR_sincosdf3", value: 2256, isUnsigned: true)
!1392 = !DIEnumerator(name: "CODE_FOR_tanxf2", value: 2257, isUnsigned: true)
!1393 = !DIEnumerator(name: "CODE_FOR_tansf2", value: 2258, isUnsigned: true)
!1394 = !DIEnumerator(name: "CODE_FOR_tandf2", value: 2259, isUnsigned: true)
!1395 = !DIEnumerator(name: "CODE_FOR_atan2xf3", value: 2260, isUnsigned: true)
!1396 = !DIEnumerator(name: "CODE_FOR_atan2sf3", value: 2261, isUnsigned: true)
!1397 = !DIEnumerator(name: "CODE_FOR_atan2df3", value: 2262, isUnsigned: true)
!1398 = !DIEnumerator(name: "CODE_FOR_atanxf2", value: 2263, isUnsigned: true)
!1399 = !DIEnumerator(name: "CODE_FOR_atansf2", value: 2264, isUnsigned: true)
!1400 = !DIEnumerator(name: "CODE_FOR_atandf2", value: 2265, isUnsigned: true)
!1401 = !DIEnumerator(name: "CODE_FOR_asinxf2", value: 2266, isUnsigned: true)
!1402 = !DIEnumerator(name: "CODE_FOR_asinsf2", value: 2267, isUnsigned: true)
!1403 = !DIEnumerator(name: "CODE_FOR_asindf2", value: 2268, isUnsigned: true)
!1404 = !DIEnumerator(name: "CODE_FOR_acosxf2", value: 2269, isUnsigned: true)
!1405 = !DIEnumerator(name: "CODE_FOR_acossf2", value: 2270, isUnsigned: true)
!1406 = !DIEnumerator(name: "CODE_FOR_acosdf2", value: 2271, isUnsigned: true)
!1407 = !DIEnumerator(name: "CODE_FOR_logxf2", value: 2272, isUnsigned: true)
!1408 = !DIEnumerator(name: "CODE_FOR_logsf2", value: 2273, isUnsigned: true)
!1409 = !DIEnumerator(name: "CODE_FOR_logdf2", value: 2274, isUnsigned: true)
!1410 = !DIEnumerator(name: "CODE_FOR_log10xf2", value: 2275, isUnsigned: true)
!1411 = !DIEnumerator(name: "CODE_FOR_log10sf2", value: 2276, isUnsigned: true)
!1412 = !DIEnumerator(name: "CODE_FOR_log10df2", value: 2277, isUnsigned: true)
!1413 = !DIEnumerator(name: "CODE_FOR_log2xf2", value: 2278, isUnsigned: true)
!1414 = !DIEnumerator(name: "CODE_FOR_log2sf2", value: 2279, isUnsigned: true)
!1415 = !DIEnumerator(name: "CODE_FOR_log2df2", value: 2280, isUnsigned: true)
!1416 = !DIEnumerator(name: "CODE_FOR_log1pxf2", value: 2281, isUnsigned: true)
!1417 = !DIEnumerator(name: "CODE_FOR_log1psf2", value: 2282, isUnsigned: true)
!1418 = !DIEnumerator(name: "CODE_FOR_log1pdf2", value: 2283, isUnsigned: true)
!1419 = !DIEnumerator(name: "CODE_FOR_logbxf2", value: 2284, isUnsigned: true)
!1420 = !DIEnumerator(name: "CODE_FOR_logbsf2", value: 2285, isUnsigned: true)
!1421 = !DIEnumerator(name: "CODE_FOR_logbdf2", value: 2286, isUnsigned: true)
!1422 = !DIEnumerator(name: "CODE_FOR_ilogbxf2", value: 2287, isUnsigned: true)
!1423 = !DIEnumerator(name: "CODE_FOR_ilogbsf2", value: 2288, isUnsigned: true)
!1424 = !DIEnumerator(name: "CODE_FOR_ilogbdf2", value: 2289, isUnsigned: true)
!1425 = !DIEnumerator(name: "CODE_FOR_expNcorexf3", value: 2290, isUnsigned: true)
!1426 = !DIEnumerator(name: "CODE_FOR_expxf2", value: 2291, isUnsigned: true)
!1427 = !DIEnumerator(name: "CODE_FOR_expsf2", value: 2292, isUnsigned: true)
!1428 = !DIEnumerator(name: "CODE_FOR_expdf2", value: 2293, isUnsigned: true)
!1429 = !DIEnumerator(name: "CODE_FOR_exp10xf2", value: 2294, isUnsigned: true)
!1430 = !DIEnumerator(name: "CODE_FOR_exp10sf2", value: 2295, isUnsigned: true)
!1431 = !DIEnumerator(name: "CODE_FOR_exp10df2", value: 2296, isUnsigned: true)
!1432 = !DIEnumerator(name: "CODE_FOR_exp2xf2", value: 2297, isUnsigned: true)
!1433 = !DIEnumerator(name: "CODE_FOR_exp2sf2", value: 2298, isUnsigned: true)
!1434 = !DIEnumerator(name: "CODE_FOR_exp2df2", value: 2299, isUnsigned: true)
!1435 = !DIEnumerator(name: "CODE_FOR_expm1xf2", value: 2300, isUnsigned: true)
!1436 = !DIEnumerator(name: "CODE_FOR_expm1sf2", value: 2301, isUnsigned: true)
!1437 = !DIEnumerator(name: "CODE_FOR_expm1df2", value: 2302, isUnsigned: true)
!1438 = !DIEnumerator(name: "CODE_FOR_ldexpxf3", value: 2303, isUnsigned: true)
!1439 = !DIEnumerator(name: "CODE_FOR_ldexpsf3", value: 2304, isUnsigned: true)
!1440 = !DIEnumerator(name: "CODE_FOR_ldexpdf3", value: 2305, isUnsigned: true)
!1441 = !DIEnumerator(name: "CODE_FOR_scalbxf3", value: 2306, isUnsigned: true)
!1442 = !DIEnumerator(name: "CODE_FOR_scalbsf3", value: 2307, isUnsigned: true)
!1443 = !DIEnumerator(name: "CODE_FOR_scalbdf3", value: 2308, isUnsigned: true)
!1444 = !DIEnumerator(name: "CODE_FOR_significandxf2", value: 2309, isUnsigned: true)
!1445 = !DIEnumerator(name: "CODE_FOR_significandsf2", value: 2310, isUnsigned: true)
!1446 = !DIEnumerator(name: "CODE_FOR_significanddf2", value: 2311, isUnsigned: true)
!1447 = !DIEnumerator(name: "CODE_FOR_rintsf2", value: 2312, isUnsigned: true)
!1448 = !DIEnumerator(name: "CODE_FOR_rintdf2", value: 2313, isUnsigned: true)
!1449 = !DIEnumerator(name: "CODE_FOR_roundsf2", value: 2314, isUnsigned: true)
!1450 = !DIEnumerator(name: "CODE_FOR_rounddf2", value: 2315, isUnsigned: true)
!1451 = !DIEnumerator(name: "CODE_FOR_lrintxfhi2", value: 2325, isUnsigned: true)
!1452 = !DIEnumerator(name: "CODE_FOR_lrintxfsi2", value: 2326, isUnsigned: true)
!1453 = !DIEnumerator(name: "CODE_FOR_lrintxfdi2", value: 2327, isUnsigned: true)
!1454 = !DIEnumerator(name: "CODE_FOR_lrintsfsi2", value: 2328, isUnsigned: true)
!1455 = !DIEnumerator(name: "CODE_FOR_lrintdfsi2", value: 2329, isUnsigned: true)
!1456 = !DIEnumerator(name: "CODE_FOR_lroundsfsi2", value: 2330, isUnsigned: true)
!1457 = !DIEnumerator(name: "CODE_FOR_lrounddfsi2", value: 2331, isUnsigned: true)
!1458 = !DIEnumerator(name: "CODE_FOR_floorxf2", value: 2333, isUnsigned: true)
!1459 = !DIEnumerator(name: "CODE_FOR_floorsf2", value: 2334, isUnsigned: true)
!1460 = !DIEnumerator(name: "CODE_FOR_floordf2", value: 2335, isUnsigned: true)
!1461 = !DIEnumerator(name: "CODE_FOR_lfloorxfhi2", value: 2345, isUnsigned: true)
!1462 = !DIEnumerator(name: "CODE_FOR_lfloorxfsi2", value: 2346, isUnsigned: true)
!1463 = !DIEnumerator(name: "CODE_FOR_lfloorxfdi2", value: 2347, isUnsigned: true)
!1464 = !DIEnumerator(name: "CODE_FOR_lfloorsfsi2", value: 2348, isUnsigned: true)
!1465 = !DIEnumerator(name: "CODE_FOR_lfloordfsi2", value: 2349, isUnsigned: true)
!1466 = !DIEnumerator(name: "CODE_FOR_ceilxf2", value: 2351, isUnsigned: true)
!1467 = !DIEnumerator(name: "CODE_FOR_ceilsf2", value: 2352, isUnsigned: true)
!1468 = !DIEnumerator(name: "CODE_FOR_ceildf2", value: 2353, isUnsigned: true)
!1469 = !DIEnumerator(name: "CODE_FOR_lceilxfhi2", value: 2363, isUnsigned: true)
!1470 = !DIEnumerator(name: "CODE_FOR_lceilxfsi2", value: 2364, isUnsigned: true)
!1471 = !DIEnumerator(name: "CODE_FOR_lceilxfdi2", value: 2365, isUnsigned: true)
!1472 = !DIEnumerator(name: "CODE_FOR_lceilsfsi2", value: 2366, isUnsigned: true)
!1473 = !DIEnumerator(name: "CODE_FOR_lceildfsi2", value: 2367, isUnsigned: true)
!1474 = !DIEnumerator(name: "CODE_FOR_btruncxf2", value: 2369, isUnsigned: true)
!1475 = !DIEnumerator(name: "CODE_FOR_btruncsf2", value: 2370, isUnsigned: true)
!1476 = !DIEnumerator(name: "CODE_FOR_btruncdf2", value: 2371, isUnsigned: true)
!1477 = !DIEnumerator(name: "CODE_FOR_nearbyintxf2", value: 2373, isUnsigned: true)
!1478 = !DIEnumerator(name: "CODE_FOR_nearbyintsf2", value: 2374, isUnsigned: true)
!1479 = !DIEnumerator(name: "CODE_FOR_nearbyintdf2", value: 2375, isUnsigned: true)
!1480 = !DIEnumerator(name: "CODE_FOR_isinfxf2", value: 2378, isUnsigned: true)
!1481 = !DIEnumerator(name: "CODE_FOR_isinfsf2", value: 2379, isUnsigned: true)
!1482 = !DIEnumerator(name: "CODE_FOR_isinfdf2", value: 2380, isUnsigned: true)
!1483 = !DIEnumerator(name: "CODE_FOR_signbitsf2", value: 2381, isUnsigned: true)
!1484 = !DIEnumerator(name: "CODE_FOR_signbitdf2", value: 2382, isUnsigned: true)
!1485 = !DIEnumerator(name: "CODE_FOR_signbitxf2", value: 2383, isUnsigned: true)
!1486 = !DIEnumerator(name: "CODE_FOR_movmemsi", value: 2384, isUnsigned: true)
!1487 = !DIEnumerator(name: "CODE_FOR_strmov", value: 2385, isUnsigned: true)
!1488 = !DIEnumerator(name: "CODE_FOR_strmov_singleop", value: 2386, isUnsigned: true)
!1489 = !DIEnumerator(name: "CODE_FOR_rep_mov", value: 2387, isUnsigned: true)
!1490 = !DIEnumerator(name: "CODE_FOR_setmemsi", value: 2388, isUnsigned: true)
!1491 = !DIEnumerator(name: "CODE_FOR_strset", value: 2389, isUnsigned: true)
!1492 = !DIEnumerator(name: "CODE_FOR_strset_singleop", value: 2390, isUnsigned: true)
!1493 = !DIEnumerator(name: "CODE_FOR_rep_stos", value: 2391, isUnsigned: true)
!1494 = !DIEnumerator(name: "CODE_FOR_cmpstrnsi", value: 2392, isUnsigned: true)
!1495 = !DIEnumerator(name: "CODE_FOR_cmpintqi", value: 2393, isUnsigned: true)
!1496 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_nz_1", value: 2394, isUnsigned: true)
!1497 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_1", value: 2395, isUnsigned: true)
!1498 = !DIEnumerator(name: "CODE_FOR_strlensi", value: 2396, isUnsigned: true)
!1499 = !DIEnumerator(name: "CODE_FOR_strlendi", value: 2397, isUnsigned: true)
!1500 = !DIEnumerator(name: "CODE_FOR_strlenqi_1", value: 2398, isUnsigned: true)
!1501 = !DIEnumerator(name: "CODE_FOR_movqicc", value: 2401, isUnsigned: true)
!1502 = !DIEnumerator(name: "CODE_FOR_movhicc", value: 2402, isUnsigned: true)
!1503 = !DIEnumerator(name: "CODE_FOR_movsicc", value: 2403, isUnsigned: true)
!1504 = !DIEnumerator(name: "CODE_FOR_x86_movsicc_0_m1", value: 2404, isUnsigned: true)
!1505 = !DIEnumerator(name: "CODE_FOR_movsfcc", value: 2406, isUnsigned: true)
!1506 = !DIEnumerator(name: "CODE_FOR_movdfcc", value: 2407, isUnsigned: true)
!1507 = !DIEnumerator(name: "CODE_FOR_movxfcc", value: 2408, isUnsigned: true)
!1508 = !DIEnumerator(name: "CODE_FOR_addqicc", value: 2411, isUnsigned: true)
!1509 = !DIEnumerator(name: "CODE_FOR_addhicc", value: 2412, isUnsigned: true)
!1510 = !DIEnumerator(name: "CODE_FOR_addsicc", value: 2413, isUnsigned: true)
!1511 = !DIEnumerator(name: "CODE_FOR_allocate_stack", value: 2414, isUnsigned: true)
!1512 = !DIEnumerator(name: "CODE_FOR_probe_stack", value: 2415, isUnsigned: true)
!1513 = !DIEnumerator(name: "CODE_FOR_builtin_setjmp_receiver", value: 2416, isUnsigned: true)
!1514 = !DIEnumerator(name: "CODE_FOR_prefetch", value: 2486, isUnsigned: true)
!1515 = !DIEnumerator(name: "CODE_FOR_stack_protect_set", value: 2487, isUnsigned: true)
!1516 = !DIEnumerator(name: "CODE_FOR_stack_protect_test", value: 2488, isUnsigned: true)
!1517 = !DIEnumerator(name: "CODE_FOR_rdpmc", value: 2489, isUnsigned: true)
!1518 = !DIEnumerator(name: "CODE_FOR_rdtsc", value: 2490, isUnsigned: true)
!1519 = !DIEnumerator(name: "CODE_FOR_rdtscp", value: 2491, isUnsigned: true)
!1520 = !DIEnumerator(name: "CODE_FOR_lwp_llwpcb", value: 2492, isUnsigned: true)
!1521 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcb", value: 2493, isUnsigned: true)
!1522 = !DIEnumerator(name: "CODE_FOR_lwp_lwpvalsi3", value: 2494, isUnsigned: true)
!1523 = !DIEnumerator(name: "CODE_FOR_lwp_lwpinssi3", value: 2495, isUnsigned: true)
!1524 = !DIEnumerator(name: "CODE_FOR_movv8qi", value: 2496, isUnsigned: true)
!1525 = !DIEnumerator(name: "CODE_FOR_movv4hi", value: 2497, isUnsigned: true)
!1526 = !DIEnumerator(name: "CODE_FOR_movv2si", value: 2498, isUnsigned: true)
!1527 = !DIEnumerator(name: "CODE_FOR_movv1di", value: 2499, isUnsigned: true)
!1528 = !DIEnumerator(name: "CODE_FOR_movv2sf", value: 2500, isUnsigned: true)
!1529 = !DIEnumerator(name: "CODE_FOR_pushv8qi1", value: 2506, isUnsigned: true)
!1530 = !DIEnumerator(name: "CODE_FOR_pushv4hi1", value: 2507, isUnsigned: true)
!1531 = !DIEnumerator(name: "CODE_FOR_pushv2si1", value: 2508, isUnsigned: true)
!1532 = !DIEnumerator(name: "CODE_FOR_pushv1di1", value: 2509, isUnsigned: true)
!1533 = !DIEnumerator(name: "CODE_FOR_pushv2sf1", value: 2510, isUnsigned: true)
!1534 = !DIEnumerator(name: "CODE_FOR_movmisalignv8qi", value: 2511, isUnsigned: true)
!1535 = !DIEnumerator(name: "CODE_FOR_movmisalignv4hi", value: 2512, isUnsigned: true)
!1536 = !DIEnumerator(name: "CODE_FOR_movmisalignv2si", value: 2513, isUnsigned: true)
!1537 = !DIEnumerator(name: "CODE_FOR_movmisalignv1di", value: 2514, isUnsigned: true)
!1538 = !DIEnumerator(name: "CODE_FOR_movmisalignv2sf", value: 2515, isUnsigned: true)
!1539 = !DIEnumerator(name: "CODE_FOR_mmx_addv2sf3", value: 2516, isUnsigned: true)
!1540 = !DIEnumerator(name: "CODE_FOR_mmx_subv2sf3", value: 2517, isUnsigned: true)
!1541 = !DIEnumerator(name: "CODE_FOR_mmx_subrv2sf3", value: 2518, isUnsigned: true)
!1542 = !DIEnumerator(name: "CODE_FOR_mmx_mulv2sf3", value: 2519, isUnsigned: true)
!1543 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv2sf3", value: 2520, isUnsigned: true)
!1544 = !DIEnumerator(name: "CODE_FOR_mmx_sminv2sf3", value: 2521, isUnsigned: true)
!1545 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2sf3", value: 2522, isUnsigned: true)
!1546 = !DIEnumerator(name: "CODE_FOR_vec_setv2sf", value: 2523, isUnsigned: true)
!1547 = !DIEnumerator(name: "CODE_FOR_vec_extractv2sf", value: 2526, isUnsigned: true)
!1548 = !DIEnumerator(name: "CODE_FOR_vec_initv2sf", value: 2527, isUnsigned: true)
!1549 = !DIEnumerator(name: "CODE_FOR_mmx_addv8qi3", value: 2528, isUnsigned: true)
!1550 = !DIEnumerator(name: "CODE_FOR_mmx_subv8qi3", value: 2529, isUnsigned: true)
!1551 = !DIEnumerator(name: "CODE_FOR_mmx_addv4hi3", value: 2530, isUnsigned: true)
!1552 = !DIEnumerator(name: "CODE_FOR_mmx_subv4hi3", value: 2531, isUnsigned: true)
!1553 = !DIEnumerator(name: "CODE_FOR_mmx_addv2si3", value: 2532, isUnsigned: true)
!1554 = !DIEnumerator(name: "CODE_FOR_mmx_subv2si3", value: 2533, isUnsigned: true)
!1555 = !DIEnumerator(name: "CODE_FOR_mmx_addv1di3", value: 2534, isUnsigned: true)
!1556 = !DIEnumerator(name: "CODE_FOR_mmx_subv1di3", value: 2535, isUnsigned: true)
!1557 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv8qi3", value: 2536, isUnsigned: true)
!1558 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv8qi3", value: 2537, isUnsigned: true)
!1559 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv8qi3", value: 2538, isUnsigned: true)
!1560 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv8qi3", value: 2539, isUnsigned: true)
!1561 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv4hi3", value: 2540, isUnsigned: true)
!1562 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv4hi3", value: 2541, isUnsigned: true)
!1563 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv4hi3", value: 2542, isUnsigned: true)
!1564 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv4hi3", value: 2543, isUnsigned: true)
!1565 = !DIEnumerator(name: "CODE_FOR_mmx_mulv4hi3", value: 2544, isUnsigned: true)
!1566 = !DIEnumerator(name: "CODE_FOR_mmx_smulv4hi3_highpart", value: 2545, isUnsigned: true)
!1567 = !DIEnumerator(name: "CODE_FOR_mmx_umulv4hi3_highpart", value: 2546, isUnsigned: true)
!1568 = !DIEnumerator(name: "CODE_FOR_mmx_pmaddwd", value: 2547, isUnsigned: true)
!1569 = !DIEnumerator(name: "CODE_FOR_mmx_pmulhrwv4hi3", value: 2548, isUnsigned: true)
!1570 = !DIEnumerator(name: "CODE_FOR_sse2_umulv1siv1di3", value: 2549, isUnsigned: true)
!1571 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv4hi3", value: 2550, isUnsigned: true)
!1572 = !DIEnumerator(name: "CODE_FOR_mmx_sminv4hi3", value: 2551, isUnsigned: true)
!1573 = !DIEnumerator(name: "CODE_FOR_mmx_umaxv8qi3", value: 2552, isUnsigned: true)
!1574 = !DIEnumerator(name: "CODE_FOR_mmx_uminv8qi3", value: 2553, isUnsigned: true)
!1575 = !DIEnumerator(name: "CODE_FOR_mmx_eqv8qi3", value: 2554, isUnsigned: true)
!1576 = !DIEnumerator(name: "CODE_FOR_mmx_eqv4hi3", value: 2555, isUnsigned: true)
!1577 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2si3", value: 2556, isUnsigned: true)
!1578 = !DIEnumerator(name: "CODE_FOR_mmx_andv8qi3", value: 2557, isUnsigned: true)
!1579 = !DIEnumerator(name: "CODE_FOR_mmx_iorv8qi3", value: 2558, isUnsigned: true)
!1580 = !DIEnumerator(name: "CODE_FOR_mmx_xorv8qi3", value: 2559, isUnsigned: true)
!1581 = !DIEnumerator(name: "CODE_FOR_mmx_andv4hi3", value: 2560, isUnsigned: true)
!1582 = !DIEnumerator(name: "CODE_FOR_mmx_iorv4hi3", value: 2561, isUnsigned: true)
!1583 = !DIEnumerator(name: "CODE_FOR_mmx_xorv4hi3", value: 2562, isUnsigned: true)
!1584 = !DIEnumerator(name: "CODE_FOR_mmx_andv2si3", value: 2563, isUnsigned: true)
!1585 = !DIEnumerator(name: "CODE_FOR_mmx_iorv2si3", value: 2564, isUnsigned: true)
!1586 = !DIEnumerator(name: "CODE_FOR_mmx_xorv2si3", value: 2565, isUnsigned: true)
!1587 = !DIEnumerator(name: "CODE_FOR_mmx_pinsrw", value: 2566, isUnsigned: true)
!1588 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw", value: 2567, isUnsigned: true)
!1589 = !DIEnumerator(name: "CODE_FOR_vec_setv2si", value: 2568, isUnsigned: true)
!1590 = !DIEnumerator(name: "CODE_FOR_vec_extractv2si", value: 2571, isUnsigned: true)
!1591 = !DIEnumerator(name: "CODE_FOR_vec_initv2si", value: 2572, isUnsigned: true)
!1592 = !DIEnumerator(name: "CODE_FOR_vec_setv4hi", value: 2573, isUnsigned: true)
!1593 = !DIEnumerator(name: "CODE_FOR_vec_extractv4hi", value: 2574, isUnsigned: true)
!1594 = !DIEnumerator(name: "CODE_FOR_vec_initv4hi", value: 2575, isUnsigned: true)
!1595 = !DIEnumerator(name: "CODE_FOR_vec_setv8qi", value: 2576, isUnsigned: true)
!1596 = !DIEnumerator(name: "CODE_FOR_vec_extractv8qi", value: 2577, isUnsigned: true)
!1597 = !DIEnumerator(name: "CODE_FOR_vec_initv8qi", value: 2578, isUnsigned: true)
!1598 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv8qi3", value: 2579, isUnsigned: true)
!1599 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv4hi3", value: 2580, isUnsigned: true)
!1600 = !DIEnumerator(name: "CODE_FOR_mmx_maskmovq", value: 2581, isUnsigned: true)
!1601 = !DIEnumerator(name: "CODE_FOR_mmx_emms", value: 2582, isUnsigned: true)
!1602 = !DIEnumerator(name: "CODE_FOR_mmx_femms", value: 2583, isUnsigned: true)
!1603 = !DIEnumerator(name: "CODE_FOR_movv32qi", value: 2584, isUnsigned: true)
!1604 = !DIEnumerator(name: "CODE_FOR_movv16hi", value: 2585, isUnsigned: true)
!1605 = !DIEnumerator(name: "CODE_FOR_movv8si", value: 2586, isUnsigned: true)
!1606 = !DIEnumerator(name: "CODE_FOR_movv4di", value: 2587, isUnsigned: true)
!1607 = !DIEnumerator(name: "CODE_FOR_movv8sf", value: 2588, isUnsigned: true)
!1608 = !DIEnumerator(name: "CODE_FOR_movv4df", value: 2589, isUnsigned: true)
!1609 = !DIEnumerator(name: "CODE_FOR_movv16qi", value: 2590, isUnsigned: true)
!1610 = !DIEnumerator(name: "CODE_FOR_movv8hi", value: 2591, isUnsigned: true)
!1611 = !DIEnumerator(name: "CODE_FOR_movv4si", value: 2592, isUnsigned: true)
!1612 = !DIEnumerator(name: "CODE_FOR_movv2di", value: 2593, isUnsigned: true)
!1613 = !DIEnumerator(name: "CODE_FOR_movv1ti", value: 2594, isUnsigned: true)
!1614 = !DIEnumerator(name: "CODE_FOR_movv4sf", value: 2595, isUnsigned: true)
!1615 = !DIEnumerator(name: "CODE_FOR_movv2df", value: 2596, isUnsigned: true)
!1616 = !DIEnumerator(name: "CODE_FOR_pushv32qi1", value: 2600, isUnsigned: true)
!1617 = !DIEnumerator(name: "CODE_FOR_pushv16hi1", value: 2601, isUnsigned: true)
!1618 = !DIEnumerator(name: "CODE_FOR_pushv8si1", value: 2602, isUnsigned: true)
!1619 = !DIEnumerator(name: "CODE_FOR_pushv4di1", value: 2603, isUnsigned: true)
!1620 = !DIEnumerator(name: "CODE_FOR_pushv8sf1", value: 2604, isUnsigned: true)
!1621 = !DIEnumerator(name: "CODE_FOR_pushv4df1", value: 2605, isUnsigned: true)
!1622 = !DIEnumerator(name: "CODE_FOR_pushv16qi1", value: 2606, isUnsigned: true)
!1623 = !DIEnumerator(name: "CODE_FOR_pushv8hi1", value: 2607, isUnsigned: true)
!1624 = !DIEnumerator(name: "CODE_FOR_pushv4si1", value: 2608, isUnsigned: true)
!1625 = !DIEnumerator(name: "CODE_FOR_pushv2di1", value: 2609, isUnsigned: true)
!1626 = !DIEnumerator(name: "CODE_FOR_pushv1ti1", value: 2610, isUnsigned: true)
!1627 = !DIEnumerator(name: "CODE_FOR_pushv4sf1", value: 2611, isUnsigned: true)
!1628 = !DIEnumerator(name: "CODE_FOR_pushv2df1", value: 2612, isUnsigned: true)
!1629 = !DIEnumerator(name: "CODE_FOR_movmisalignv32qi", value: 2613, isUnsigned: true)
!1630 = !DIEnumerator(name: "CODE_FOR_movmisalignv16hi", value: 2614, isUnsigned: true)
!1631 = !DIEnumerator(name: "CODE_FOR_movmisalignv8si", value: 2615, isUnsigned: true)
!1632 = !DIEnumerator(name: "CODE_FOR_movmisalignv4di", value: 2616, isUnsigned: true)
!1633 = !DIEnumerator(name: "CODE_FOR_movmisalignv8sf", value: 2617, isUnsigned: true)
!1634 = !DIEnumerator(name: "CODE_FOR_movmisalignv4df", value: 2618, isUnsigned: true)
!1635 = !DIEnumerator(name: "CODE_FOR_movmisalignv16qi", value: 2619, isUnsigned: true)
!1636 = !DIEnumerator(name: "CODE_FOR_movmisalignv8hi", value: 2620, isUnsigned: true)
!1637 = !DIEnumerator(name: "CODE_FOR_movmisalignv4si", value: 2621, isUnsigned: true)
!1638 = !DIEnumerator(name: "CODE_FOR_movmisalignv2di", value: 2622, isUnsigned: true)
!1639 = !DIEnumerator(name: "CODE_FOR_movmisalignv1ti", value: 2623, isUnsigned: true)
!1640 = !DIEnumerator(name: "CODE_FOR_movmisalignv4sf", value: 2624, isUnsigned: true)
!1641 = !DIEnumerator(name: "CODE_FOR_movmisalignv2df", value: 2625, isUnsigned: true)
!1642 = !DIEnumerator(name: "CODE_FOR_storentv4sf", value: 2626, isUnsigned: true)
!1643 = !DIEnumerator(name: "CODE_FOR_storentv2df", value: 2627, isUnsigned: true)
!1644 = !DIEnumerator(name: "CODE_FOR_storentsf", value: 2628, isUnsigned: true)
!1645 = !DIEnumerator(name: "CODE_FOR_storentdf", value: 2629, isUnsigned: true)
!1646 = !DIEnumerator(name: "CODE_FOR_storentv2di", value: 2630, isUnsigned: true)
!1647 = !DIEnumerator(name: "CODE_FOR_storentsi", value: 2631, isUnsigned: true)
!1648 = !DIEnumerator(name: "CODE_FOR_absv4sf2", value: 2632, isUnsigned: true)
!1649 = !DIEnumerator(name: "CODE_FOR_negv4sf2", value: 2633, isUnsigned: true)
!1650 = !DIEnumerator(name: "CODE_FOR_absv2df2", value: 2634, isUnsigned: true)
!1651 = !DIEnumerator(name: "CODE_FOR_negv2df2", value: 2635, isUnsigned: true)
!1652 = !DIEnumerator(name: "CODE_FOR_addv8sf3", value: 2636, isUnsigned: true)
!1653 = !DIEnumerator(name: "CODE_FOR_subv8sf3", value: 2637, isUnsigned: true)
!1654 = !DIEnumerator(name: "CODE_FOR_addv4df3", value: 2638, isUnsigned: true)
!1655 = !DIEnumerator(name: "CODE_FOR_subv4df3", value: 2639, isUnsigned: true)
!1656 = !DIEnumerator(name: "CODE_FOR_addv4sf3", value: 2640, isUnsigned: true)
!1657 = !DIEnumerator(name: "CODE_FOR_subv4sf3", value: 2641, isUnsigned: true)
!1658 = !DIEnumerator(name: "CODE_FOR_addv2df3", value: 2642, isUnsigned: true)
!1659 = !DIEnumerator(name: "CODE_FOR_subv2df3", value: 2643, isUnsigned: true)
!1660 = !DIEnumerator(name: "CODE_FOR_mulv8sf3", value: 2644, isUnsigned: true)
!1661 = !DIEnumerator(name: "CODE_FOR_mulv4df3", value: 2645, isUnsigned: true)
!1662 = !DIEnumerator(name: "CODE_FOR_mulv4sf3", value: 2646, isUnsigned: true)
!1663 = !DIEnumerator(name: "CODE_FOR_mulv2df3", value: 2647, isUnsigned: true)
!1664 = !DIEnumerator(name: "CODE_FOR_divv8sf3", value: 2648, isUnsigned: true)
!1665 = !DIEnumerator(name: "CODE_FOR_divv4df3", value: 2649, isUnsigned: true)
!1666 = !DIEnumerator(name: "CODE_FOR_divv4sf3", value: 2650, isUnsigned: true)
!1667 = !DIEnumerator(name: "CODE_FOR_divv2df3", value: 2651, isUnsigned: true)
!1668 = !DIEnumerator(name: "CODE_FOR_sqrtv8sf2", value: 2652, isUnsigned: true)
!1669 = !DIEnumerator(name: "CODE_FOR_sqrtv4sf2", value: 2653, isUnsigned: true)
!1670 = !DIEnumerator(name: "CODE_FOR_rsqrtv8sf2", value: 2654, isUnsigned: true)
!1671 = !DIEnumerator(name: "CODE_FOR_rsqrtv4sf2", value: 2655, isUnsigned: true)
!1672 = !DIEnumerator(name: "CODE_FOR_smaxv8sf3", value: 2656, isUnsigned: true)
!1673 = !DIEnumerator(name: "CODE_FOR_sminv8sf3", value: 2657, isUnsigned: true)
!1674 = !DIEnumerator(name: "CODE_FOR_smaxv4df3", value: 2658, isUnsigned: true)
!1675 = !DIEnumerator(name: "CODE_FOR_sminv4df3", value: 2659, isUnsigned: true)
!1676 = !DIEnumerator(name: "CODE_FOR_smaxv4sf3", value: 2660, isUnsigned: true)
!1677 = !DIEnumerator(name: "CODE_FOR_sminv4sf3", value: 2661, isUnsigned: true)
!1678 = !DIEnumerator(name: "CODE_FOR_smaxv2df3", value: 2662, isUnsigned: true)
!1679 = !DIEnumerator(name: "CODE_FOR_sminv2df3", value: 2663, isUnsigned: true)
!1680 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v4sf", value: 2664, isUnsigned: true)
!1681 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v2df", value: 2665, isUnsigned: true)
!1682 = !DIEnumerator(name: "CODE_FOR_reduc_smax_v4sf", value: 2666, isUnsigned: true)
!1683 = !DIEnumerator(name: "CODE_FOR_reduc_smin_v4sf", value: 2667, isUnsigned: true)
!1684 = !DIEnumerator(name: "CODE_FOR_vcondv4sf", value: 2668, isUnsigned: true)
!1685 = !DIEnumerator(name: "CODE_FOR_vcondv2df", value: 2669, isUnsigned: true)
!1686 = !DIEnumerator(name: "CODE_FOR_andv8sf3", value: 2670, isUnsigned: true)
!1687 = !DIEnumerator(name: "CODE_FOR_iorv8sf3", value: 2671, isUnsigned: true)
!1688 = !DIEnumerator(name: "CODE_FOR_xorv8sf3", value: 2672, isUnsigned: true)
!1689 = !DIEnumerator(name: "CODE_FOR_andv4df3", value: 2673, isUnsigned: true)
!1690 = !DIEnumerator(name: "CODE_FOR_iorv4df3", value: 2674, isUnsigned: true)
!1691 = !DIEnumerator(name: "CODE_FOR_xorv4df3", value: 2675, isUnsigned: true)
!1692 = !DIEnumerator(name: "CODE_FOR_andv4sf3", value: 2676, isUnsigned: true)
!1693 = !DIEnumerator(name: "CODE_FOR_iorv4sf3", value: 2677, isUnsigned: true)
!1694 = !DIEnumerator(name: "CODE_FOR_xorv4sf3", value: 2678, isUnsigned: true)
!1695 = !DIEnumerator(name: "CODE_FOR_andv2df3", value: 2679, isUnsigned: true)
!1696 = !DIEnumerator(name: "CODE_FOR_iorv2df3", value: 2680, isUnsigned: true)
!1697 = !DIEnumerator(name: "CODE_FOR_xorv2df3", value: 2681, isUnsigned: true)
!1698 = !DIEnumerator(name: "CODE_FOR_copysignv4sf3", value: 2682, isUnsigned: true)
!1699 = !DIEnumerator(name: "CODE_FOR_copysignv2df3", value: 2683, isUnsigned: true)
!1700 = !DIEnumerator(name: "CODE_FOR_sse2_cvtudq2ps", value: 2684, isUnsigned: true)
!1701 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2dq", value: 2685, isUnsigned: true)
!1702 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2dq", value: 2686, isUnsigned: true)
!1703 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2ps", value: 2687, isUnsigned: true)
!1704 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4sf", value: 2688, isUnsigned: true)
!1705 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4sf", value: 2689, isUnsigned: true)
!1706 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v8hi", value: 2690, isUnsigned: true)
!1707 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v8hi", value: 2691, isUnsigned: true)
!1708 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v8hi", value: 2692, isUnsigned: true)
!1709 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v8hi", value: 2693, isUnsigned: true)
!1710 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v4si", value: 2694, isUnsigned: true)
!1711 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v4si", value: 2695, isUnsigned: true)
!1712 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v4si", value: 2696, isUnsigned: true)
!1713 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v4si", value: 2697, isUnsigned: true)
!1714 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2df", value: 2698, isUnsigned: true)
!1715 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_trunc_v2df", value: 2699, isUnsigned: true)
!1716 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_v2df", value: 2700, isUnsigned: true)
!1717 = !DIEnumerator(name: "CODE_FOR_sse_movhlps_exp", value: 2701, isUnsigned: true)
!1718 = !DIEnumerator(name: "CODE_FOR_sse_movlhps_exp", value: 2702, isUnsigned: true)
!1719 = !DIEnumerator(name: "CODE_FOR_avx_shufps256", value: 2703, isUnsigned: true)
!1720 = !DIEnumerator(name: "CODE_FOR_sse_shufps", value: 2704, isUnsigned: true)
!1721 = !DIEnumerator(name: "CODE_FOR_sse_loadhps_exp", value: 2705, isUnsigned: true)
!1722 = !DIEnumerator(name: "CODE_FOR_sse_loadlps_exp", value: 2706, isUnsigned: true)
!1723 = !DIEnumerator(name: "CODE_FOR_vec_dupv4sf", value: 2707, isUnsigned: true)
!1724 = !DIEnumerator(name: "CODE_FOR_vec_initv16qi", value: 2708, isUnsigned: true)
!1725 = !DIEnumerator(name: "CODE_FOR_vec_initv8hi", value: 2709, isUnsigned: true)
!1726 = !DIEnumerator(name: "CODE_FOR_vec_initv4si", value: 2710, isUnsigned: true)
!1727 = !DIEnumerator(name: "CODE_FOR_vec_initv2di", value: 2711, isUnsigned: true)
!1728 = !DIEnumerator(name: "CODE_FOR_vec_initv4sf", value: 2712, isUnsigned: true)
!1729 = !DIEnumerator(name: "CODE_FOR_vec_initv2df", value: 2713, isUnsigned: true)
!1730 = !DIEnumerator(name: "CODE_FOR_vec_setv16qi", value: 2715, isUnsigned: true)
!1731 = !DIEnumerator(name: "CODE_FOR_vec_setv8hi", value: 2716, isUnsigned: true)
!1732 = !DIEnumerator(name: "CODE_FOR_vec_setv4si", value: 2717, isUnsigned: true)
!1733 = !DIEnumerator(name: "CODE_FOR_vec_setv2di", value: 2718, isUnsigned: true)
!1734 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf", value: 2719, isUnsigned: true)
!1735 = !DIEnumerator(name: "CODE_FOR_vec_setv2df", value: 2720, isUnsigned: true)
!1736 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v32qi", value: 2722, isUnsigned: true)
!1737 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v16hi", value: 2723, isUnsigned: true)
!1738 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8si", value: 2724, isUnsigned: true)
!1739 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4di", value: 2725, isUnsigned: true)
!1740 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8sf", value: 2726, isUnsigned: true)
!1741 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4df", value: 2727, isUnsigned: true)
!1742 = !DIEnumerator(name: "CODE_FOR_vec_extractv16qi", value: 2729, isUnsigned: true)
!1743 = !DIEnumerator(name: "CODE_FOR_vec_extractv8hi", value: 2730, isUnsigned: true)
!1744 = !DIEnumerator(name: "CODE_FOR_vec_extractv4si", value: 2731, isUnsigned: true)
!1745 = !DIEnumerator(name: "CODE_FOR_vec_extractv2di", value: 2732, isUnsigned: true)
!1746 = !DIEnumerator(name: "CODE_FOR_vec_extractv4sf", value: 2733, isUnsigned: true)
!1747 = !DIEnumerator(name: "CODE_FOR_vec_extractv2df", value: 2734, isUnsigned: true)
!1748 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2df", value: 2735, isUnsigned: true)
!1749 = !DIEnumerator(name: "CODE_FOR_avx_movddup256", value: 2736, isUnsigned: true)
!1750 = !DIEnumerator(name: "CODE_FOR_avx_unpcklpd256", value: 2737, isUnsigned: true)
!1751 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2df", value: 2738, isUnsigned: true)
!1752 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256", value: 2741, isUnsigned: true)
!1753 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd", value: 2742, isUnsigned: true)
!1754 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4sf", value: 2743, isUnsigned: true)
!1755 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2df", value: 2744, isUnsigned: true)
!1756 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2di", value: 2745, isUnsigned: true)
!1757 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4si", value: 2746, isUnsigned: true)
!1758 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8hi", value: 2747, isUnsigned: true)
!1759 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv16qi", value: 2748, isUnsigned: true)
!1760 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4df", value: 2749, isUnsigned: true)
!1761 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8sf", value: 2750, isUnsigned: true)
!1762 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4sf", value: 2751, isUnsigned: true)
!1763 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2df", value: 2752, isUnsigned: true)
!1764 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2di", value: 2753, isUnsigned: true)
!1765 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4si", value: 2754, isUnsigned: true)
!1766 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8hi", value: 2755, isUnsigned: true)
!1767 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv16qi", value: 2756, isUnsigned: true)
!1768 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4df", value: 2757, isUnsigned: true)
!1769 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8sf", value: 2758, isUnsigned: true)
!1770 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd_exp", value: 2761, isUnsigned: true)
!1771 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd_exp", value: 2763, isUnsigned: true)
!1772 = !DIEnumerator(name: "CODE_FOR_negv16qi2", value: 2765, isUnsigned: true)
!1773 = !DIEnumerator(name: "CODE_FOR_negv8hi2", value: 2766, isUnsigned: true)
!1774 = !DIEnumerator(name: "CODE_FOR_negv4si2", value: 2767, isUnsigned: true)
!1775 = !DIEnumerator(name: "CODE_FOR_negv2di2", value: 2768, isUnsigned: true)
!1776 = !DIEnumerator(name: "CODE_FOR_addv16qi3", value: 2769, isUnsigned: true)
!1777 = !DIEnumerator(name: "CODE_FOR_subv16qi3", value: 2770, isUnsigned: true)
!1778 = !DIEnumerator(name: "CODE_FOR_addv8hi3", value: 2771, isUnsigned: true)
!1779 = !DIEnumerator(name: "CODE_FOR_subv8hi3", value: 2772, isUnsigned: true)
!1780 = !DIEnumerator(name: "CODE_FOR_addv4si3", value: 2773, isUnsigned: true)
!1781 = !DIEnumerator(name: "CODE_FOR_subv4si3", value: 2774, isUnsigned: true)
!1782 = !DIEnumerator(name: "CODE_FOR_addv2di3", value: 2775, isUnsigned: true)
!1783 = !DIEnumerator(name: "CODE_FOR_subv2di3", value: 2776, isUnsigned: true)
!1784 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv16qi3", value: 2777, isUnsigned: true)
!1785 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv16qi3", value: 2778, isUnsigned: true)
!1786 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv16qi3", value: 2779, isUnsigned: true)
!1787 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv16qi3", value: 2780, isUnsigned: true)
!1788 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv8hi3", value: 2781, isUnsigned: true)
!1789 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv8hi3", value: 2782, isUnsigned: true)
!1790 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv8hi3", value: 2783, isUnsigned: true)
!1791 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv8hi3", value: 2784, isUnsigned: true)
!1792 = !DIEnumerator(name: "CODE_FOR_mulv8hi3", value: 2786, isUnsigned: true)
!1793 = !DIEnumerator(name: "CODE_FOR_smulv8hi3_highpart", value: 2787, isUnsigned: true)
!1794 = !DIEnumerator(name: "CODE_FOR_umulv8hi3_highpart", value: 2788, isUnsigned: true)
!1795 = !DIEnumerator(name: "CODE_FOR_sse2_umulv2siv2di3", value: 2789, isUnsigned: true)
!1796 = !DIEnumerator(name: "CODE_FOR_sse4_1_mulv2siv2di3", value: 2790, isUnsigned: true)
!1797 = !DIEnumerator(name: "CODE_FOR_sse2_pmaddwd", value: 2791, isUnsigned: true)
!1798 = !DIEnumerator(name: "CODE_FOR_mulv4si3", value: 2792, isUnsigned: true)
!1799 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v8hi", value: 2795, isUnsigned: true)
!1800 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v8hi", value: 2796, isUnsigned: true)
!1801 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v8hi", value: 2797, isUnsigned: true)
!1802 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v8hi", value: 2798, isUnsigned: true)
!1803 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v4si", value: 2799, isUnsigned: true)
!1804 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v4si", value: 2800, isUnsigned: true)
!1805 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v4si", value: 2801, isUnsigned: true)
!1806 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v4si", value: 2802, isUnsigned: true)
!1807 = !DIEnumerator(name: "CODE_FOR_sdot_prodv8hi", value: 2803, isUnsigned: true)
!1808 = !DIEnumerator(name: "CODE_FOR_udot_prodv4si", value: 2804, isUnsigned: true)
!1809 = !DIEnumerator(name: "CODE_FOR_vec_shl_v16qi", value: 2805, isUnsigned: true)
!1810 = !DIEnumerator(name: "CODE_FOR_vec_shl_v8hi", value: 2806, isUnsigned: true)
!1811 = !DIEnumerator(name: "CODE_FOR_vec_shl_v4si", value: 2807, isUnsigned: true)
!1812 = !DIEnumerator(name: "CODE_FOR_vec_shl_v2di", value: 2808, isUnsigned: true)
!1813 = !DIEnumerator(name: "CODE_FOR_vec_shr_v16qi", value: 2809, isUnsigned: true)
!1814 = !DIEnumerator(name: "CODE_FOR_vec_shr_v8hi", value: 2810, isUnsigned: true)
!1815 = !DIEnumerator(name: "CODE_FOR_vec_shr_v4si", value: 2811, isUnsigned: true)
!1816 = !DIEnumerator(name: "CODE_FOR_vec_shr_v2di", value: 2812, isUnsigned: true)
!1817 = !DIEnumerator(name: "CODE_FOR_umaxv16qi3", value: 2813, isUnsigned: true)
!1818 = !DIEnumerator(name: "CODE_FOR_uminv16qi3", value: 2814, isUnsigned: true)
!1819 = !DIEnumerator(name: "CODE_FOR_smaxv8hi3", value: 2815, isUnsigned: true)
!1820 = !DIEnumerator(name: "CODE_FOR_sminv8hi3", value: 2816, isUnsigned: true)
!1821 = !DIEnumerator(name: "CODE_FOR_umaxv8hi3", value: 2817, isUnsigned: true)
!1822 = !DIEnumerator(name: "CODE_FOR_smaxv16qi3", value: 2818, isUnsigned: true)
!1823 = !DIEnumerator(name: "CODE_FOR_smaxv4si3", value: 2819, isUnsigned: true)
!1824 = !DIEnumerator(name: "CODE_FOR_smaxv2di3", value: 2820, isUnsigned: true)
!1825 = !DIEnumerator(name: "CODE_FOR_umaxv4si3", value: 2821, isUnsigned: true)
!1826 = !DIEnumerator(name: "CODE_FOR_umaxv2di3", value: 2822, isUnsigned: true)
!1827 = !DIEnumerator(name: "CODE_FOR_sminv16qi3", value: 2823, isUnsigned: true)
!1828 = !DIEnumerator(name: "CODE_FOR_sminv4si3", value: 2824, isUnsigned: true)
!1829 = !DIEnumerator(name: "CODE_FOR_sminv2di3", value: 2825, isUnsigned: true)
!1830 = !DIEnumerator(name: "CODE_FOR_uminv8hi3", value: 2826, isUnsigned: true)
!1831 = !DIEnumerator(name: "CODE_FOR_uminv4si3", value: 2827, isUnsigned: true)
!1832 = !DIEnumerator(name: "CODE_FOR_uminv2di3", value: 2828, isUnsigned: true)
!1833 = !DIEnumerator(name: "CODE_FOR_sse2_eqv16qi3", value: 2829, isUnsigned: true)
!1834 = !DIEnumerator(name: "CODE_FOR_sse2_eqv8hi3", value: 2830, isUnsigned: true)
!1835 = !DIEnumerator(name: "CODE_FOR_sse2_eqv4si3", value: 2831, isUnsigned: true)
!1836 = !DIEnumerator(name: "CODE_FOR_sse4_1_eqv2di3", value: 2832, isUnsigned: true)
!1837 = !DIEnumerator(name: "CODE_FOR_vcondv16qi", value: 2833, isUnsigned: true)
!1838 = !DIEnumerator(name: "CODE_FOR_vcondv8hi", value: 2834, isUnsigned: true)
!1839 = !DIEnumerator(name: "CODE_FOR_vcondv4si", value: 2835, isUnsigned: true)
!1840 = !DIEnumerator(name: "CODE_FOR_vcondv2di", value: 2836, isUnsigned: true)
!1841 = !DIEnumerator(name: "CODE_FOR_vconduv16qi", value: 2837, isUnsigned: true)
!1842 = !DIEnumerator(name: "CODE_FOR_vconduv8hi", value: 2838, isUnsigned: true)
!1843 = !DIEnumerator(name: "CODE_FOR_vconduv4si", value: 2839, isUnsigned: true)
!1844 = !DIEnumerator(name: "CODE_FOR_vconduv2di", value: 2840, isUnsigned: true)
!1845 = !DIEnumerator(name: "CODE_FOR_one_cmplv16qi2", value: 2841, isUnsigned: true)
!1846 = !DIEnumerator(name: "CODE_FOR_one_cmplv8hi2", value: 2842, isUnsigned: true)
!1847 = !DIEnumerator(name: "CODE_FOR_one_cmplv4si2", value: 2843, isUnsigned: true)
!1848 = !DIEnumerator(name: "CODE_FOR_one_cmplv2di2", value: 2844, isUnsigned: true)
!1849 = !DIEnumerator(name: "CODE_FOR_andv16qi3", value: 2845, isUnsigned: true)
!1850 = !DIEnumerator(name: "CODE_FOR_iorv16qi3", value: 2846, isUnsigned: true)
!1851 = !DIEnumerator(name: "CODE_FOR_xorv16qi3", value: 2847, isUnsigned: true)
!1852 = !DIEnumerator(name: "CODE_FOR_andv8hi3", value: 2848, isUnsigned: true)
!1853 = !DIEnumerator(name: "CODE_FOR_iorv8hi3", value: 2849, isUnsigned: true)
!1854 = !DIEnumerator(name: "CODE_FOR_xorv8hi3", value: 2850, isUnsigned: true)
!1855 = !DIEnumerator(name: "CODE_FOR_andv4si3", value: 2851, isUnsigned: true)
!1856 = !DIEnumerator(name: "CODE_FOR_iorv4si3", value: 2852, isUnsigned: true)
!1857 = !DIEnumerator(name: "CODE_FOR_xorv4si3", value: 2853, isUnsigned: true)
!1858 = !DIEnumerator(name: "CODE_FOR_andv2di3", value: 2854, isUnsigned: true)
!1859 = !DIEnumerator(name: "CODE_FOR_iorv2di3", value: 2855, isUnsigned: true)
!1860 = !DIEnumerator(name: "CODE_FOR_xorv2di3", value: 2856, isUnsigned: true)
!1861 = !DIEnumerator(name: "CODE_FOR_andtf3", value: 2857, isUnsigned: true)
!1862 = !DIEnumerator(name: "CODE_FOR_iortf3", value: 2858, isUnsigned: true)
!1863 = !DIEnumerator(name: "CODE_FOR_xortf3", value: 2859, isUnsigned: true)
!1864 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v8hi", value: 2860, isUnsigned: true)
!1865 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v4si", value: 2861, isUnsigned: true)
!1866 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2di", value: 2862, isUnsigned: true)
!1867 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd", value: 2863, isUnsigned: true)
!1868 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw", value: 2864, isUnsigned: true)
!1869 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw", value: 2865, isUnsigned: true)
!1870 = !DIEnumerator(name: "CODE_FOR_sse2_loadd", value: 2866, isUnsigned: true)
!1871 = !DIEnumerator(name: "CODE_FOR_sse_storeq", value: 2869, isUnsigned: true)
!1872 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v16qi", value: 2871, isUnsigned: true)
!1873 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v16qi", value: 2872, isUnsigned: true)
!1874 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v16qi", value: 2873, isUnsigned: true)
!1875 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v16qi", value: 2874, isUnsigned: true)
!1876 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v8hi", value: 2875, isUnsigned: true)
!1877 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v8hi", value: 2876, isUnsigned: true)
!1878 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v8hi", value: 2877, isUnsigned: true)
!1879 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v8hi", value: 2878, isUnsigned: true)
!1880 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v4si", value: 2879, isUnsigned: true)
!1881 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4si", value: 2880, isUnsigned: true)
!1882 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v4si", value: 2881, isUnsigned: true)
!1883 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4si", value: 2882, isUnsigned: true)
!1884 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv16qi3", value: 2883, isUnsigned: true)
!1885 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv8hi3", value: 2884, isUnsigned: true)
!1886 = !DIEnumerator(name: "CODE_FOR_sse2_maskmovdqu", value: 2885, isUnsigned: true)
!1887 = !DIEnumerator(name: "CODE_FOR_sse_sfence", value: 2886, isUnsigned: true)
!1888 = !DIEnumerator(name: "CODE_FOR_sse2_mfence", value: 2887, isUnsigned: true)
!1889 = !DIEnumerator(name: "CODE_FOR_sse2_lfence", value: 2888, isUnsigned: true)
!1890 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv8hi3", value: 2889, isUnsigned: true)
!1891 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv4hi3", value: 2890, isUnsigned: true)
!1892 = !DIEnumerator(name: "CODE_FOR_rotlv16qi3", value: 2895, isUnsigned: true)
!1893 = !DIEnumerator(name: "CODE_FOR_rotlv8hi3", value: 2896, isUnsigned: true)
!1894 = !DIEnumerator(name: "CODE_FOR_rotlv4si3", value: 2897, isUnsigned: true)
!1895 = !DIEnumerator(name: "CODE_FOR_rotlv2di3", value: 2898, isUnsigned: true)
!1896 = !DIEnumerator(name: "CODE_FOR_rotrv16qi3", value: 2899, isUnsigned: true)
!1897 = !DIEnumerator(name: "CODE_FOR_rotrv8hi3", value: 2900, isUnsigned: true)
!1898 = !DIEnumerator(name: "CODE_FOR_rotrv4si3", value: 2901, isUnsigned: true)
!1899 = !DIEnumerator(name: "CODE_FOR_rotrv2di3", value: 2902, isUnsigned: true)
!1900 = !DIEnumerator(name: "CODE_FOR_vrotrv16qi3", value: 2903, isUnsigned: true)
!1901 = !DIEnumerator(name: "CODE_FOR_vrotrv8hi3", value: 2904, isUnsigned: true)
!1902 = !DIEnumerator(name: "CODE_FOR_vrotrv4si3", value: 2905, isUnsigned: true)
!1903 = !DIEnumerator(name: "CODE_FOR_vrotrv2di3", value: 2906, isUnsigned: true)
!1904 = !DIEnumerator(name: "CODE_FOR_vrotlv16qi3", value: 2907, isUnsigned: true)
!1905 = !DIEnumerator(name: "CODE_FOR_vrotlv8hi3", value: 2908, isUnsigned: true)
!1906 = !DIEnumerator(name: "CODE_FOR_vrotlv4si3", value: 2909, isUnsigned: true)
!1907 = !DIEnumerator(name: "CODE_FOR_vrotlv2di3", value: 2910, isUnsigned: true)
!1908 = !DIEnumerator(name: "CODE_FOR_vlshrv16qi3", value: 2911, isUnsigned: true)
!1909 = !DIEnumerator(name: "CODE_FOR_vlshrv8hi3", value: 2912, isUnsigned: true)
!1910 = !DIEnumerator(name: "CODE_FOR_vlshrv4si3", value: 2913, isUnsigned: true)
!1911 = !DIEnumerator(name: "CODE_FOR_vashrv16qi3", value: 2914, isUnsigned: true)
!1912 = !DIEnumerator(name: "CODE_FOR_vashrv8hi3", value: 2915, isUnsigned: true)
!1913 = !DIEnumerator(name: "CODE_FOR_vashrv4si3", value: 2916, isUnsigned: true)
!1914 = !DIEnumerator(name: "CODE_FOR_vashlv16qi3", value: 2917, isUnsigned: true)
!1915 = !DIEnumerator(name: "CODE_FOR_vashlv8hi3", value: 2918, isUnsigned: true)
!1916 = !DIEnumerator(name: "CODE_FOR_vashlv4si3", value: 2919, isUnsigned: true)
!1917 = !DIEnumerator(name: "CODE_FOR_ashlv16qi3", value: 2920, isUnsigned: true)
!1918 = !DIEnumerator(name: "CODE_FOR_lshlv16qi3", value: 2921, isUnsigned: true)
!1919 = !DIEnumerator(name: "CODE_FOR_ashrv16qi3", value: 2922, isUnsigned: true)
!1920 = !DIEnumerator(name: "CODE_FOR_ashrv2di3", value: 2923, isUnsigned: true)
!1921 = !DIEnumerator(name: "CODE_FOR_avx_vzeroall", value: 2924, isUnsigned: true)
!1922 = !DIEnumerator(name: "CODE_FOR_avx_vzeroupper", value: 2925, isUnsigned: true)
!1923 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv2df", value: 2932, isUnsigned: true)
!1924 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4df", value: 2933, isUnsigned: true)
!1925 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4sf", value: 2934, isUnsigned: true)
!1926 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv8sf", value: 2935, isUnsigned: true)
!1927 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8si3", value: 2936, isUnsigned: true)
!1928 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8sf3", value: 2937, isUnsigned: true)
!1929 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v4df3", value: 2938, isUnsigned: true)
!1930 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v32qi", value: 2939, isUnsigned: true)
!1931 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v16hi", value: 2940, isUnsigned: true)
!1932 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8si", value: 2941, isUnsigned: true)
!1933 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4di", value: 2942, isUnsigned: true)
!1934 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8sf", value: 2943, isUnsigned: true)
!1935 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4df", value: 2944, isUnsigned: true)
!1936 = !DIEnumerator(name: "CODE_FOR_vec_initv32qi", value: 2945, isUnsigned: true)
!1937 = !DIEnumerator(name: "CODE_FOR_vec_initv16hi", value: 2946, isUnsigned: true)
!1938 = !DIEnumerator(name: "CODE_FOR_vec_initv8si", value: 2947, isUnsigned: true)
!1939 = !DIEnumerator(name: "CODE_FOR_vec_initv4di", value: 2948, isUnsigned: true)
!1940 = !DIEnumerator(name: "CODE_FOR_vec_initv8sf", value: 2949, isUnsigned: true)
!1941 = !DIEnumerator(name: "CODE_FOR_vec_initv4df", value: 2950, isUnsigned: true)
!1942 = !DIEnumerator(name: "CODE_FOR_memory_barrier", value: 2951, isUnsigned: true)
!1943 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapqi", value: 2952, isUnsigned: true)
!1944 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swaphi", value: 2953, isUnsigned: true)
!1945 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapsi", value: 2954, isUnsigned: true)
!1946 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapdi", value: 2955, isUnsigned: true)
!1947 = !DIEnumerator(name: "CODE_FOR_nothing", value: 2956, isUnsigned: true)
!1948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !1949, line: 45, baseType: !5, size: 32, elements: !1950)
!1949 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1950 = !{!1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090}
!1951 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!1952 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!1953 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!1954 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!1955 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!1956 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!1957 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!1958 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!1959 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!1960 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!1961 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!1962 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!1963 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!1964 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!1965 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!1966 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!1967 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!1968 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!1969 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!1970 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!1971 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!1972 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!1973 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!1974 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!1975 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!1976 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!1977 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!1978 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!1979 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!1980 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!1981 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!1982 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!1983 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!1984 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!1985 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!1986 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!1987 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!1988 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!1989 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!1990 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!1991 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!1992 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!1993 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!1994 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!1995 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!1996 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!1997 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!1998 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!1999 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!2000 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!2001 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!2002 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!2003 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!2004 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!2005 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!2006 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!2007 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!2008 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!2009 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!2010 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!2011 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!2012 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!2013 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!2014 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!2015 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!2016 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!2017 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!2018 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!2019 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!2020 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!2021 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!2022 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!2023 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!2024 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!2025 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!2026 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!2027 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!2028 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!2029 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!2030 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!2031 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!2032 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!2033 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!2034 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!2035 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!2036 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!2037 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!2038 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!2039 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!2040 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!2041 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!2042 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!2043 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!2044 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!2045 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!2046 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!2047 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!2048 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!2049 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!2050 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!2051 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!2052 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!2053 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!2054 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!2055 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!2056 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!2057 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!2058 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!2059 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!2060 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!2061 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!2062 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!2063 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!2064 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!2065 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!2066 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!2067 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!2068 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!2069 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!2070 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!2071 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!2072 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!2073 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!2074 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!2075 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!2076 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!2077 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!2078 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!2079 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!2080 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!2081 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!2082 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!2083 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!2084 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!2085 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!2086 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!2087 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!2088 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!2089 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!2090 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!2091 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !2092, line: 51, baseType: !5, size: 32, elements: !2093)
!2092 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2093 = !{!2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2094 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!2095 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!2096 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!2097 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!2098 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!2099 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!2100 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!2101 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!2102 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!2103 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!2104 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!2105 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!2106 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!2107 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!2108 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!2109 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!2110 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!2111 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!2112 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!2113 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!2114 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!2115 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!2116 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!2117 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!2118 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!2119 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!2120 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!2121 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!2122 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!2123 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!2124 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!2125 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!2126 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!2127 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!2128 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!2129 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!2130 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !2092, line: 727, baseType: !5, size: 32, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2132 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!2133 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!2134 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!2135 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!2136 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!2137 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!2138 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!2139 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!2140 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!2141 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!2142 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!2143 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!2144 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!2145 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!2146 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!2147 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!2148 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!2149 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!2150 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!2151 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!2152 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!2153 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!2154 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!2155 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!2156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !2092, line: 80, baseType: !5, size: 32, elements: !2157)
!2157 = !{!2158, !2159, !2160, !2161}
!2158 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!2159 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!2160 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!2161 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!2162 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2163, file: !1, line: 1557, baseType: !5, size: 32, elements: !3856)
!2163 = distinct !DISubprogram(name: "vectorizable_conversion", scope: !1, file: !1, line: 1534, type: !2164, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3551)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!2166, !2167, !3524, !3531, !3532}
!2166 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !2168, line: 58, baseType: !2169)
!2168 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !2092, line: 737, size: 768, elements: !2171)
!2171 = !{!2172, !3371, !3381, !3387, !3392, !3397, !3404, !3410, !3416, !3421, !3435, !3440, !3446, !3451, !3461, !3466, !3482, !3489, !3496, !3502, !3507, !3513, !3519}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2170, file: !2092, line: 738, baseType: !2173, size: 256)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !2092, line: 271, size: 256, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2190, !2191, !3370}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2173, file: !2092, line: 274, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !2173, file: !2092, line: 277, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2173, file: !2092, line: 281, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !2173, file: !2092, line: 284, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !2173, file: !2092, line: 291, baseType: !5, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !2173, file: !2092, line: 295, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !2173, file: !2092, line: 298, baseType: !5, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2173, file: !2092, line: 301, baseType: !5, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2173, file: !2092, line: 307, baseType: !5, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2173, file: !2092, line: 312, baseType: !5, size: 32, offset: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !2173, file: !2092, line: 316, baseType: !2186, size: 32, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !2187, line: 58, baseType: !2188)
!2187 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !2189, line: 44, baseType: !5)
!2189 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !2173, file: !2092, line: 319, baseType: !5, size: 32, offset: 96)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2173, file: !2092, line: 323, baseType: !2192, size: 64, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !133, line: 217, size: 832, elements: !2194)
!2194 = !{!2195, !3337, !3338, !3339, !3340, !3344, !3345, !3346, !3364, !3365, !3366, !3367, !3368, !3369}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !2193, file: !133, line: 219, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !133, line: 151, baseType: !2198)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !133, line: 151, size: 128, elements: !2199)
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2198, file: !133, line: 151, baseType: !2201, size: 128)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !133, line: 150, baseType: !2202)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !133, line: 150, size: 128, elements: !2203)
!2203 = !{!2204, !2205, !2206}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2202, file: !133, line: 150, baseType: !5, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2202, file: !133, line: 150, baseType: !5, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2202, file: !133, line: 150, baseType: !2207, size: 64, offset: 64)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2208, size: 64, elements: !2271)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !2168, line: 108, baseType: !2209)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !133, line: 122, size: 512, elements: !2211)
!2211 = !{!2212, !2213, !2214, !3329, !3330, !3331, !3332, !3333, !3334, !3335}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2210, file: !133, line: 124, baseType: !2192, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !2210, file: !133, line: 125, baseType: !2192, size: 64, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2210, file: !133, line: 131, baseType: !2215, size: 64, offset: 128)
!2215 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !133, line: 128, size: 64, elements: !2216)
!2216 = !{!2217, !2232}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2215, file: !133, line: 129, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !2168, line: 66, baseType: !2219)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !2092, line: 143, size: 192, elements: !2221)
!2221 = !{!2222, !2230, !2231}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2220, file: !2092, line: 145, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !2168, line: 69, baseType: !2224)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !2092, line: 136, size: 192, elements: !2226)
!2226 = !{!2227, !2228, !2229}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2225, file: !2092, line: 137, baseType: !2167, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2225, file: !2092, line: 138, baseType: !2224, size: 64, offset: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2225, file: !2092, line: 139, baseType: !2224, size: 64, offset: 128)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2220, file: !2092, line: 146, baseType: !2223, size: 64, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2220, file: !2092, line: 152, baseType: !2218, size: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2215, file: !133, line: 130, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !2168, line: 50, baseType: !2234)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !1949, line: 240, size: 384, elements: !2236)
!2236 = !{!2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2235, file: !1949, line: 242, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2235, file: !1949, line: 245, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !2235, file: !1949, line: 252, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2235, file: !1949, line: 257, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !2235, file: !1949, line: 265, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !2235, file: !1949, line: 277, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !2235, file: !1949, line: 291, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2235, file: !1949, line: 298, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !2235, file: !1949, line: 305, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !2235, file: !1949, line: 310, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2235, file: !1949, line: 321, baseType: !2248, size: 320, offset: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !1949, line: 315, size: 320, elements: !2249)
!2249 = !{!2250, !3296, !3298, !3327, !3328}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2248, file: !1949, line: 316, baseType: !2251, size: 64)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 64, elements: !2271)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !1949, line: 183, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !1949, line: 166, size: 64, elements: !2254)
!2254 = !{!2255, !2257, !2258, !2262, !2263, !2273, !2274, !2286, !2289, !2353, !3274, !3275, !3286, !3293}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !2253, file: !1949, line: 168, baseType: !2256, size: 32)
!2256 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !2253, file: !1949, line: 169, baseType: !5, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !2253, file: !1949, line: 170, baseType: !2259, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2261)
!2261 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !2253, file: !1949, line: 171, baseType: !2233, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !2253, file: !1949, line: 172, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !2168, line: 53, baseType: !2265)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !1949, line: 359, size: 128, elements: !2267)
!2267 = !{!2268, !2269}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !2266, file: !1949, line: 360, baseType: !2256, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2266, file: !1949, line: 361, baseType: !2270, size: 64, offset: 64)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2233, size: 64, elements: !2271)
!2271 = !{!2272}
!2272 = !DISubrange(count: 1)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !2253, file: !1949, line: 173, baseType: !3, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !2253, file: !1949, line: 174, baseType: !2275, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !1949, line: 133, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1949, line: 115, size: 32, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !2276, file: !1949, line: 118, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !2276, file: !1949, line: 120, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !2276, file: !1949, line: 121, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !2276, file: !1949, line: 123, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !2276, file: !1949, line: 125, baseType: !5, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !2276, file: !1949, line: 127, baseType: !5, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !2276, file: !1949, line: 130, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2276, file: !1949, line: 132, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !2253, file: !1949, line: 175, baseType: !2287, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !1949, line: 175, flags: DIFlagFwdDecl)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !2253, file: !1949, line: 176, baseType: !2290, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !2292, line: 75, size: 256, elements: !2293)
!2292 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2293 = !{!2294, !2309, !2310, !2311}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2291, file: !2292, line: 76, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !2292, line: 68, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !2292, line: 63, size: 320, elements: !2298)
!2298 = !{!2299, !2301, !2302, !2303}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2297, file: !2292, line: 64, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2297, file: !2292, line: 65, baseType: !2300, size: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2297, file: !2292, line: 66, baseType: !5, size: 32, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2297, file: !2292, line: 67, baseType: !2304, size: 128, offset: 192)
!2304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2305, size: 128, elements: !2307)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !2292, line: 29, baseType: !2306)
!2306 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2307 = !{!2308}
!2308 = !DISubrange(count: 2)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2291, file: !2292, line: 77, baseType: !2295, size: 64, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2291, file: !2292, line: 78, baseType: !5, size: 32, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2291, file: !2292, line: 79, baseType: !2312, size: 64, offset: 192)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !2292, line: 49, baseType: !2314)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !2292, line: 45, size: 832, elements: !2315)
!2315 = !{!2316, !2317, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2314, file: !2292, line: 46, baseType: !2300, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !2314, file: !2292, line: 47, baseType: !2290, size: 64, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2314, file: !2292, line: 48, baseType: !2319, size: 704, offset: 128)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !2320, line: 164, size: 704, elements: !2321)
!2320 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2321 = !{!2322, !2324, !2335, !2336, !2337, !2338, !2339, !2340, !2345, !2349, !2350, !2351, !2352}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2319, file: !2320, line: 166, baseType: !2323, size: 64)
!2323 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2319, file: !2320, line: 167, baseType: !2325, size: 64, offset: 64)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !2320, line: 157, size: 192, elements: !2327)
!2327 = !{!2328, !2330, !2331}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2326, file: !2320, line: 159, baseType: !2329, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2326, file: !2320, line: 160, baseType: !2325, size: 64, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2326, file: !2320, line: 161, baseType: !2332, size: 32, offset: 128)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 32, elements: !2333)
!2333 = !{!2334}
!2334 = !DISubrange(count: 4)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2319, file: !2320, line: 168, baseType: !2329, size: 64, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2319, file: !2320, line: 169, baseType: !2329, size: 64, offset: 192)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2319, file: !2320, line: 170, baseType: !2329, size: 64, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2319, file: !2320, line: 171, baseType: !2323, size: 64, offset: 320)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2319, file: !2320, line: 172, baseType: !2256, size: 32, offset: 384)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2319, file: !2320, line: 176, baseType: !2341, size: 64, offset: 448)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{!2325, !2344, !2323}
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2319, file: !2320, line: 177, baseType: !2346, size: 64, offset: 512)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{null, !2344, !2325}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2319, file: !2320, line: 178, baseType: !2344, size: 64, offset: 576)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2319, file: !2320, line: 179, baseType: !5, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2319, file: !2320, line: 180, baseType: !5, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2319, file: !2320, line: 184, baseType: !5, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !2253, file: !1949, line: 177, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !2168, line: 56, baseType: !2355)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !149, line: 3371, size: 1792, elements: !2357)
!2357 = !{!2358, !2391, !2397, !2408, !2427, !2438, !2443, !2450, !2456, !2469, !2477, !2515, !2520, !2548, !2565, !2566, !2571, !2580, !2586, !2591, !2595, !2599, !2923, !2972, !2978, !2984, !2991, !3004, !3018, !3035, !3047, !3069, !3084, !3256}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2356, file: !149, line: 3372, baseType: !2359, size: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !149, line: 360, size: 64, elements: !2360)
!2360 = !{!2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2359, file: !149, line: 361, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !2359, file: !149, line: 363, baseType: !5, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !2359, file: !149, line: 364, baseType: !5, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !2359, file: !149, line: 365, baseType: !5, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !2359, file: !149, line: 366, baseType: !5, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !2359, file: !149, line: 367, baseType: !5, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !2359, file: !149, line: 368, baseType: !5, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !2359, file: !149, line: 369, baseType: !5, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !2359, file: !149, line: 370, baseType: !5, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !2359, file: !149, line: 372, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !2359, file: !149, line: 373, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !2359, file: !149, line: 374, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !2359, file: !149, line: 375, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !2359, file: !149, line: 376, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !2359, file: !149, line: 377, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !2359, file: !149, line: 378, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !2359, file: !149, line: 379, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !2359, file: !149, line: 381, baseType: !5, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2359, file: !149, line: 382, baseType: !5, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2359, file: !149, line: 383, baseType: !5, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2359, file: !149, line: 384, baseType: !5, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2359, file: !149, line: 385, baseType: !5, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2359, file: !149, line: 386, baseType: !5, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2359, file: !149, line: 387, baseType: !5, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2359, file: !149, line: 388, baseType: !5, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2359, file: !149, line: 390, baseType: !5, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !2359, file: !149, line: 391, baseType: !5, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !2359, file: !149, line: 392, baseType: !5, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !2359, file: !149, line: 394, baseType: !5, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2359, file: !149, line: 399, baseType: !5, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2356, file: !149, line: 3373, baseType: !2392, size: 192)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !149, line: 402, size: 192, elements: !2393)
!2393 = !{!2394, !2395, !2396}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2392, file: !149, line: 403, baseType: !2359, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2392, file: !149, line: 404, baseType: !2354, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2392, file: !149, line: 405, baseType: !2354, size: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2356, file: !149, line: 3374, baseType: !2398, size: 320)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !149, line: 1384, size: 320, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2398, file: !149, line: 1385, baseType: !2392, size: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2398, file: !149, line: 1386, baseType: !2402, size: 128, offset: 192)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !2403, line: 58, baseType: !2404)
!2403 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2403, line: 54, size: 128, elements: !2405)
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !2404, file: !2403, line: 56, baseType: !2306, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !2404, file: !2403, line: 57, baseType: !2323, size: 64, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !2356, file: !149, line: 3375, baseType: !2409, size: 256)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !149, line: 1397, size: 256, elements: !2410)
!2410 = !{!2411, !2412}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2409, file: !149, line: 1398, baseType: !2392, size: 192)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !2409, file: !149, line: 1399, baseType: !2413, size: 64, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !2415, line: 52, size: 256, elements: !2416)
!2415 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2416 = !{!2417, !2418, !2419, !2420, !2421, !2422, !2423}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2414, file: !2415, line: 56, baseType: !5, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !2414, file: !2415, line: 57, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !2414, file: !2415, line: 58, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !2414, file: !2415, line: 59, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2414, file: !2415, line: 60, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !2414, file: !2415, line: 61, baseType: !5, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2414, file: !2415, line: 62, baseType: !2424, size: 192, offset: 64)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2306, size: 192, elements: !2425)
!2425 = !{!2426}
!2426 = !DISubrange(count: 3)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !2356, file: !149, line: 3376, baseType: !2428, size: 256)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !149, line: 1408, size: 256, elements: !2429)
!2429 = !{!2430, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2428, file: !149, line: 1409, baseType: !2392, size: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !2428, file: !149, line: 1410, baseType: !2432, size: 64, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !2434, line: 27, size: 192, elements: !2435)
!2434 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2435 = !{!2436, !2437}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2433, file: !2434, line: 29, baseType: !2402, size: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2433, file: !2434, line: 30, baseType: !3, size: 32, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !2356, file: !149, line: 3377, baseType: !2439, size: 256)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !149, line: 1437, size: 256, elements: !2440)
!2440 = !{!2441, !2442}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2439, file: !149, line: 1438, baseType: !2392, size: 192)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2439, file: !149, line: 1439, baseType: !2354, size: 64, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2356, file: !149, line: 3378, baseType: !2444, size: 256)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !149, line: 1418, size: 256, elements: !2445)
!2445 = !{!2446, !2447, !2448}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2444, file: !149, line: 1419, baseType: !2392, size: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2444, file: !149, line: 1420, baseType: !2256, size: 32, offset: 192)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2444, file: !149, line: 1421, baseType: !2449, size: 8, offset: 224)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 8, elements: !2271)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2356, file: !149, line: 3379, baseType: !2451, size: 320)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !149, line: 1428, size: 320, elements: !2452)
!2452 = !{!2453, !2454, !2455}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2451, file: !149, line: 1429, baseType: !2392, size: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !2451, file: !149, line: 1430, baseType: !2354, size: 64, offset: 192)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !2451, file: !149, line: 1431, baseType: !2354, size: 64, offset: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2356, file: !149, line: 3380, baseType: !2457, size: 320)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !149, line: 1460, size: 320, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2457, file: !149, line: 1461, baseType: !2392, size: 192)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2457, file: !149, line: 1462, baseType: !2461, size: 128, offset: 192)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !2462, line: 31, size: 128, elements: !2463)
!2462 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2463 = !{!2464, !2467, !2468}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2461, file: !2462, line: 32, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2166)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2461, file: !2462, line: 33, baseType: !5, size: 32, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !2461, file: !2462, line: 34, baseType: !5, size: 32, offset: 96)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !2356, file: !149, line: 3381, baseType: !2470, size: 384)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !149, line: 2507, size: 384, elements: !2471)
!2471 = !{!2472, !2473, !2474, !2475, !2476}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2470, file: !149, line: 2508, baseType: !2392, size: 192)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2470, file: !149, line: 2509, baseType: !2186, size: 32, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2470, file: !149, line: 2510, baseType: !5, size: 32, offset: 224)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2470, file: !149, line: 2511, baseType: !2354, size: 64, offset: 256)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2470, file: !149, line: 2512, baseType: !2354, size: 64, offset: 320)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !2356, file: !149, line: 3382, baseType: !2478, size: 896)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !149, line: 2652, size: 896, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2478, file: !149, line: 2653, baseType: !2470, size: 384)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2478, file: !149, line: 2654, baseType: !2354, size: 64, offset: 384)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2478, file: !149, line: 2656, baseType: !5, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !2478, file: !149, line: 2658, baseType: !5, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !2478, file: !149, line: 2659, baseType: !5, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !2478, file: !149, line: 2660, baseType: !5, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2478, file: !149, line: 2661, baseType: !5, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !2478, file: !149, line: 2662, baseType: !5, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !2478, file: !149, line: 2663, baseType: !5, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !2478, file: !149, line: 2664, baseType: !5, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2478, file: !149, line: 2666, baseType: !5, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2478, file: !149, line: 2667, baseType: !5, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2478, file: !149, line: 2668, baseType: !5, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2478, file: !149, line: 2669, baseType: !5, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2478, file: !149, line: 2670, baseType: !5, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2478, file: !149, line: 2671, baseType: !5, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2478, file: !149, line: 2672, baseType: !5, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !2478, file: !149, line: 2673, baseType: !5, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !2478, file: !149, line: 2674, baseType: !5, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !2478, file: !149, line: 2678, baseType: !5, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !2478, file: !149, line: 2682, baseType: !5, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !2478, file: !149, line: 2685, baseType: !5, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !2478, file: !149, line: 2688, baseType: !5, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !2478, file: !149, line: 2690, baseType: !5, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !2478, file: !149, line: 2692, baseType: !5, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !2478, file: !149, line: 2695, baseType: !5, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !2478, file: !149, line: 2698, baseType: !5, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2478, file: !149, line: 2703, baseType: !5, size: 32, offset: 512)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2478, file: !149, line: 2705, baseType: !2354, size: 64, offset: 576)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2478, file: !149, line: 2706, baseType: !2354, size: 64, offset: 640)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2478, file: !149, line: 2707, baseType: !2354, size: 64, offset: 704)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2478, file: !149, line: 2708, baseType: !2354, size: 64, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2478, file: !149, line: 2711, baseType: !2513, size: 64, offset: 832)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !149, line: 2711, flags: DIFlagFwdDecl)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !2356, file: !149, line: 3383, baseType: !2516, size: 960)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !149, line: 2756, size: 960, elements: !2517)
!2517 = !{!2518, !2519}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2516, file: !149, line: 2757, baseType: !2478, size: 896)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2516, file: !149, line: 2758, baseType: !2233, size: 64, offset: 896)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !2356, file: !149, line: 3384, baseType: !2521, size: 1472)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !149, line: 3114, size: 1472, elements: !2522)
!2522 = !{!2523, !2544, !2545, !2546, !2547}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2521, file: !149, line: 3115, baseType: !2524, size: 1216)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !149, line: 2984, size: 1216, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2524, file: !149, line: 2985, baseType: !2516, size: 960)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2524, file: !149, line: 2986, baseType: !2354, size: 64, offset: 960)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2524, file: !149, line: 2987, baseType: !2354, size: 64, offset: 1024)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2524, file: !149, line: 2988, baseType: !2354, size: 64, offset: 1088)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2524, file: !149, line: 2991, baseType: !5, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2524, file: !149, line: 2992, baseType: !5, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2524, file: !149, line: 2993, baseType: !5, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2524, file: !149, line: 2994, baseType: !5, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2524, file: !149, line: 2995, baseType: !5, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2524, file: !149, line: 2996, baseType: !5, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2524, file: !149, line: 2998, baseType: !5, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2524, file: !149, line: 3000, baseType: !5, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2524, file: !149, line: 3002, baseType: !5, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2524, file: !149, line: 3003, baseType: !5, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2524, file: !149, line: 3004, baseType: !5, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2524, file: !149, line: 3005, baseType: !5, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2524, file: !149, line: 3007, baseType: !5, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2524, file: !149, line: 3010, baseType: !5, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2521, file: !149, line: 3117, baseType: !2354, size: 64, offset: 1216)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2521, file: !149, line: 3119, baseType: !2354, size: 64, offset: 1280)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2521, file: !149, line: 3121, baseType: !2354, size: 64, offset: 1344)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2521, file: !149, line: 3123, baseType: !2354, size: 64, offset: 1408)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !2356, file: !149, line: 3385, baseType: !2549, size: 1088)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !149, line: 2874, size: 1088, elements: !2550)
!2550 = !{!2551, !2552, !2553}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2549, file: !149, line: 2875, baseType: !2516, size: 960)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2549, file: !149, line: 2876, baseType: !2233, size: 64, offset: 960)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2549, file: !149, line: 2877, baseType: !2554, size: 64, offset: 1024)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !2556, line: 172, size: 128, elements: !2557)
!2556 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2557 = !{!2558, !2559, !2560, !2561, !2562, !2563, !2564}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !2555, file: !2556, line: 174, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2555, file: !2556, line: 178, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !2555, file: !2556, line: 183, baseType: !5, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !2555, file: !2556, line: 187, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !2555, file: !2556, line: 192, baseType: !5, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !2555, file: !2556, line: 195, baseType: !5, size: 32, offset: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !2555, file: !2556, line: 199, baseType: !2354, size: 64, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !2356, file: !149, line: 3386, baseType: !2524, size: 1216)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !2356, file: !149, line: 3387, baseType: !2567, size: 1280)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !149, line: 3093, size: 1280, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2567, file: !149, line: 3094, baseType: !2524, size: 1216)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2567, file: !149, line: 3095, baseType: !2554, size: 64, offset: 1216)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !2356, file: !149, line: 3388, baseType: !2572, size: 1216)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !149, line: 2824, size: 1216, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2572, file: !149, line: 2825, baseType: !2478, size: 896)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2572, file: !149, line: 2827, baseType: !2354, size: 64, offset: 896)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2572, file: !149, line: 2828, baseType: !2354, size: 64, offset: 960)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2572, file: !149, line: 2829, baseType: !2354, size: 64, offset: 1024)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2572, file: !149, line: 2830, baseType: !2354, size: 64, offset: 1088)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2572, file: !149, line: 2831, baseType: !2354, size: 64, offset: 1152)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !2356, file: !149, line: 3389, baseType: !2581, size: 1024)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !149, line: 2850, size: 1024, elements: !2582)
!2582 = !{!2583, !2584, !2585}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2581, file: !149, line: 2851, baseType: !2516, size: 960)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2581, file: !149, line: 2852, baseType: !2256, size: 32, offset: 960)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2581, file: !149, line: 2853, baseType: !2256, size: 32, offset: 992)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !2356, file: !149, line: 3390, baseType: !2587, size: 1024)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !149, line: 2857, size: 1024, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2587, file: !149, line: 2858, baseType: !2516, size: 960)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2587, file: !149, line: 2859, baseType: !2554, size: 64, offset: 960)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !2356, file: !149, line: 3391, baseType: !2592, size: 960)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !149, line: 2862, size: 960, elements: !2593)
!2593 = !{!2594}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2592, file: !149, line: 2863, baseType: !2516, size: 960)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !2356, file: !149, line: 3392, baseType: !2596, size: 1472)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !149, line: 3304, size: 1472, elements: !2597)
!2597 = !{!2598}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2596, file: !149, line: 3305, baseType: !2521, size: 1472)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !2356, file: !149, line: 3393, baseType: !2600, size: 1792)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !149, line: 3248, size: 1792, elements: !2601)
!2601 = !{!2602, !2603, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2600, file: !149, line: 3249, baseType: !2521, size: 1472)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2600, file: !149, line: 3251, baseType: !2604, size: 64, offset: 1472)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !2606, line: 463, size: 1152, elements: !2607)
!2606 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2607 = !{!2608, !2611, !2642, !2643, !2783, !2846, !2847, !2848, !2849, !2850, !2851, !2875, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2605, file: !2606, line: 464, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !2606, line: 464, flags: DIFlagFwdDecl)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2605, file: !2606, line: 467, baseType: !2612, size: 64, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !133, line: 374, size: 640, elements: !2614)
!2614 = !{!2615, !2617, !2618, !2631, !2632, !2633, !2634, !2635, !2636, !2638, !2640, !2641}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2613, file: !133, line: 377, baseType: !2616, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !2168, line: 111, baseType: !2192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2613, file: !133, line: 378, baseType: !2616, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2613, file: !133, line: 381, baseType: !2619, size: 64, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !133, line: 282, baseType: !2621)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !133, line: 282, size: 128, elements: !2622)
!2622 = !{!2623}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2621, file: !133, line: 282, baseType: !2624, size: 128)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !133, line: 281, baseType: !2625)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !133, line: 281, size: 128, elements: !2626)
!2626 = !{!2627, !2628, !2629}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2625, file: !133, line: 281, baseType: !5, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2625, file: !133, line: 281, baseType: !5, size: 32, offset: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2625, file: !133, line: 281, baseType: !2630, size: 64, offset: 64)
!2630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2616, size: 64, elements: !2271)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2613, file: !133, line: 384, baseType: !2256, size: 32, offset: 192)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2613, file: !133, line: 387, baseType: !2256, size: 32, offset: 224)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2613, file: !133, line: 390, baseType: !2256, size: 32, offset: 256)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2613, file: !133, line: 394, baseType: !2619, size: 64, offset: 320)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2613, file: !133, line: 396, baseType: !132, size: 32, offset: 384)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2613, file: !133, line: 399, baseType: !2637, size: 64, offset: 416)
!2637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 64, elements: !2307)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2613, file: !133, line: 402, baseType: !2639, size: 64, offset: 480)
!2639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !2307)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2613, file: !133, line: 406, baseType: !2256, size: 32, offset: 544)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2613, file: !133, line: 409, baseType: !2256, size: 32, offset: 576)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2605, file: !2606, line: 470, baseType: !2219, size: 64, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2605, file: !2606, line: 473, baseType: !2644, size: 64, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2556, line: 39, size: 1152, elements: !2646)
!2646 = !{!2647, !2699, !2712, !2725, !2726, !2738, !2739, !2743, !2744, !2745, !2746, !2747}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !2645, file: !2556, line: 41, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2649, line: 144, baseType: !2650)
!2649 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2649, line: 100, size: 896, elements: !2652)
!2652 = !{!2653, !2661, !2666, !2671, !2673, !2676, !2677, !2678, !2679, !2680, !2685, !2687, !2688, !2693, !2698}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2651, file: !2649, line: 102, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2649, line: 52, baseType: !2655)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!2658, !2659}
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2649, line: 47, baseType: !5)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2651, file: !2649, line: 105, baseType: !2662, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2649, line: 59, baseType: !2663)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!2256, !2659, !2659}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2651, file: !2649, line: 108, baseType: !2667, size: 64, offset: 128)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2649, line: 63, baseType: !2668)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{null, !2344}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2651, file: !2649, line: 111, baseType: !2672, size: 64, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2651, file: !2649, line: 114, baseType: !2674, size: 64, offset: 256)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2675, line: 46, baseType: !2306)
!2675 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2651, file: !2649, line: 117, baseType: !2674, size: 64, offset: 320)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2651, file: !2649, line: 120, baseType: !2674, size: 64, offset: 384)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2651, file: !2649, line: 124, baseType: !5, size: 32, offset: 448)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2651, file: !2649, line: 128, baseType: !5, size: 32, offset: 480)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2651, file: !2649, line: 131, baseType: !2681, size: 64, offset: 512)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2649, line: 75, baseType: !2682)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!2344, !2674, !2674}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2651, file: !2649, line: 132, baseType: !2686, size: 64, offset: 576)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2649, line: 78, baseType: !2668)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2651, file: !2649, line: 135, baseType: !2344, size: 64, offset: 640)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2651, file: !2649, line: 136, baseType: !2689, size: 64, offset: 704)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2649, line: 82, baseType: !2690)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!2344, !2344, !2674, !2674}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2651, file: !2649, line: 137, baseType: !2694, size: 64, offset: 768)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2649, line: 83, baseType: !2695)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !2344, !2344}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2651, file: !2649, line: 141, baseType: !5, size: 32, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !2645, file: !2556, line: 48, baseType: !2700, size: 64, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !2092, line: 35, baseType: !2702)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !2092, line: 35, size: 128, elements: !2703)
!2703 = !{!2704}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2702, file: !2092, line: 35, baseType: !2705, size: 128)
!2705 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !2092, line: 33, baseType: !2706)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !2092, line: 33, size: 128, elements: !2707)
!2707 = !{!2708, !2709, !2710}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2706, file: !2092, line: 33, baseType: !5, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2706, file: !2092, line: 33, baseType: !5, size: 32, offset: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2706, file: !2092, line: 33, baseType: !2711, size: 64, offset: 64)
!2711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2167, size: 64, elements: !2271)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !2645, file: !2556, line: 51, baseType: !2713, size: 64, offset: 128)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !149, line: 183, baseType: !2715)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !149, line: 183, size: 128, elements: !2716)
!2716 = !{!2717}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2715, file: !149, line: 183, baseType: !2718, size: 128)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !149, line: 182, baseType: !2719)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !149, line: 182, size: 128, elements: !2720)
!2720 = !{!2721, !2722, !2723}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2719, file: !149, line: 182, baseType: !5, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2719, file: !149, line: 182, baseType: !5, size: 32, offset: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2719, file: !149, line: 182, baseType: !2724, size: 64, offset: 64)
!2724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2354, size: 64, elements: !2271)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !2645, file: !2556, line: 54, baseType: !2354, size: 64, offset: 192)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2645, file: !2556, line: 57, baseType: !2727, size: 128, offset: 256)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !2728, line: 31, size: 128, elements: !2729)
!2728 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !2727, file: !2728, line: 35, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !2727, file: !2728, line: 39, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2727, file: !2728, line: 42, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !2727, file: !2728, line: 46, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !2727, file: !2728, line: 50, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !2727, file: !2728, line: 53, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2727, file: !2728, line: 56, baseType: !2737, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !2168, line: 47, baseType: !2290)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !2645, file: !2556, line: 60, baseType: !2727, size: 128, offset: 384)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !2645, file: !2556, line: 64, baseType: !2740, size: 64, offset: 512)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !2742, line: 33, flags: DIFlagFwdDecl)
!2742 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !2645, file: !2556, line: 67, baseType: !2354, size: 64, offset: 576)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !2645, file: !2556, line: 73, baseType: !2648, size: 64, offset: 640)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !2645, file: !2556, line: 77, baseType: !2737, size: 64, offset: 704)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !2645, file: !2556, line: 80, baseType: !5, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !2645, file: !2556, line: 82, baseType: !2748, size: 320, offset: 832)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !428, line: 62, size: 320, elements: !2749)
!2749 = !{!2750, !2756, !2757, !2758, !2759, !2766}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !2748, file: !428, line: 63, baseType: !2751, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !428, line: 56, size: 128, elements: !2753)
!2753 = !{!2754, !2755}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2752, file: !428, line: 57, baseType: !2751, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2752, file: !428, line: 58, baseType: !2449, size: 8, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !2748, file: !428, line: 64, baseType: !5, size: 32, offset: 64)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !2748, file: !428, line: 66, baseType: !5, size: 32, offset: 96)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !2748, file: !428, line: 68, baseType: !2166, size: 8, offset: 128)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !2748, file: !428, line: 70, baseType: !2760, size: 64, offset: 192)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !428, line: 37, size: 128, elements: !2762)
!2762 = !{!2763, !2764}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2761, file: !428, line: 39, baseType: !2760, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !2761, file: !428, line: 40, baseType: !2765, size: 64, offset: 64)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !2748, file: !428, line: 71, baseType: !2767, size: 64, offset: 256)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !428, line: 45, size: 320, elements: !2769)
!2769 = !{!2770, !2771}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2768, file: !428, line: 47, baseType: !2767, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !2768, file: !428, line: 48, baseType: !2772, size: 256, offset: 64)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !149, line: 1883, size: 256, elements: !2773)
!2773 = !{!2774, !2776, !2777, !2782}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2772, file: !149, line: 1884, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2772, file: !149, line: 1885, baseType: !2775, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2772, file: !149, line: 1891, baseType: !2778, size: 64, offset: 128)
!2778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2772, file: !149, line: 1891, size: 64, elements: !2779)
!2779 = !{!2780, !2781}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2778, file: !149, line: 1891, baseType: !2167, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2778, file: !149, line: 1891, baseType: !2354, size: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2772, file: !149, line: 1892, baseType: !2765, size: 64, offset: 192)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2605, file: !2606, line: 476, baseType: !2784, size: 64, offset: 256)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !376, line: 187, size: 256, elements: !2786)
!2786 = !{!2787, !2788, !2844, !2845}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2785, file: !376, line: 189, baseType: !2256, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !2785, file: !376, line: 192, baseType: !2789, size: 64, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !376, line: 87, baseType: !2791)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !376, line: 87, size: 128, elements: !2792)
!2792 = !{!2793}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2791, file: !376, line: 87, baseType: !2794, size: 128)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !376, line: 85, baseType: !2795)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !376, line: 85, size: 128, elements: !2796)
!2796 = !{!2797, !2798, !2799}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2795, file: !376, line: 85, baseType: !5, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2795, file: !376, line: 85, baseType: !5, size: 32, offset: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2795, file: !376, line: 85, baseType: !2800, size: 64, offset: 64)
!2800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2801, size: 64, elements: !2271)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !376, line: 84, baseType: !2802)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !376, line: 100, size: 1216, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2834, !2842, !2843}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2803, file: !376, line: 102, baseType: !2256, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !2803, file: !376, line: 105, baseType: !5, size: 32, offset: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2803, file: !376, line: 108, baseType: !2192, size: 64, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !2803, file: !376, line: 111, baseType: !2192, size: 64, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !2803, file: !376, line: 114, baseType: !2810, size: 64, offset: 192)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !376, line: 41, size: 64, elements: !2811)
!2811 = !{!2812, !2813}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !2810, file: !376, line: 42, baseType: !375, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !2810, file: !376, line: 43, baseType: !5, size: 32, offset: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !2803, file: !376, line: 117, baseType: !5, size: 32, offset: 256)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !2803, file: !376, line: 120, baseType: !5, size: 32, offset: 288)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !2803, file: !376, line: 123, baseType: !2789, size: 64, offset: 320)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2803, file: !376, line: 126, baseType: !2802, size: 64, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2803, file: !376, line: 129, baseType: !2802, size: 64, offset: 448)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2803, file: !376, line: 132, baseType: !2344, size: 64, offset: 512)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !2803, file: !376, line: 139, baseType: !2354, size: 64, offset: 576)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !2803, file: !376, line: 143, baseType: !2402, size: 128, offset: 640)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !2803, file: !376, line: 146, baseType: !2402, size: 128, offset: 768)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !2803, file: !376, line: 148, baseType: !2166, size: 8, offset: 896)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !2803, file: !376, line: 149, baseType: !2166, size: 8, offset: 904)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !2803, file: !376, line: 153, baseType: !384, size: 32, offset: 928)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !2803, file: !376, line: 156, baseType: !2827, size: 64, offset: 960)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !376, line: 48, size: 320, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2833}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2828, file: !376, line: 50, baseType: !2167, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2828, file: !376, line: 59, baseType: !2402, size: 128, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !2828, file: !376, line: 64, baseType: !2166, size: 8, offset: 192)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2828, file: !376, line: 67, baseType: !2827, size: 64, offset: 256)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !2803, file: !376, line: 159, baseType: !2835, size: 64, offset: 1024)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !376, line: 72, size: 256, elements: !2837)
!2837 = !{!2838, !2839, !2840, !2841}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2836, file: !376, line: 74, baseType: !2209, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2836, file: !376, line: 77, baseType: !2835, size: 64, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2836, file: !376, line: 78, baseType: !2835, size: 64, offset: 128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !2836, file: !376, line: 81, baseType: !2835, size: 64, offset: 192)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !2803, file: !376, line: 162, baseType: !2166, size: 8, offset: 1088)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !2803, file: !376, line: 166, baseType: !2354, size: 64, offset: 1152)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !2785, file: !376, line: 197, baseType: !2648, size: 64, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !2785, file: !376, line: 200, baseType: !2802, size: 64, offset: 192)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2605, file: !2606, line: 479, baseType: !2648, size: 64, offset: 320)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2605, file: !2606, line: 484, baseType: !2354, size: 64, offset: 384)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2605, file: !2606, line: 488, baseType: !2354, size: 64, offset: 448)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2605, file: !2606, line: 493, baseType: !2354, size: 64, offset: 512)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2605, file: !2606, line: 496, baseType: !2354, size: 64, offset: 576)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2605, file: !2606, line: 501, baseType: !2852, size: 64, offset: 640)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !144, line: 2355, size: 576, elements: !2854)
!2854 = !{!2855, !2858, !2859, !2860, !2861, !2863, !2864, !2869, !2870, !2871, !2872, !2873, !2874}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2853, file: !144, line: 2356, baseType: !2856, size: 64)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !144, line: 2356, flags: DIFlagFwdDecl)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2853, file: !144, line: 2357, baseType: !2259, size: 64, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2853, file: !144, line: 2358, baseType: !2256, size: 32, offset: 128)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2853, file: !144, line: 2359, baseType: !2256, size: 32, offset: 160)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2853, file: !144, line: 2360, baseType: !2862, size: 128, offset: 192)
!2862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 128, elements: !2333)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2853, file: !144, line: 2364, baseType: !2256, size: 32, offset: 320)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2853, file: !144, line: 2367, baseType: !2865, size: 128, offset: 384)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !144, line: 2349, size: 128, elements: !2866)
!2866 = !{!2867, !2868}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2865, file: !144, line: 2351, baseType: !2233, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2865, file: !144, line: 2352, baseType: !2323, size: 64, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2853, file: !144, line: 2371, baseType: !143, size: 32, offset: 512)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2853, file: !144, line: 2374, baseType: !5, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2853, file: !144, line: 2377, baseType: !5, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2853, file: !144, line: 2381, baseType: !5, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2853, file: !144, line: 2392, baseType: !5, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2853, file: !144, line: 2396, baseType: !5, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2605, file: !2606, line: 504, baseType: !2876, size: 64, offset: 704)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !2606, line: 504, flags: DIFlagFwdDecl)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2605, file: !2606, line: 507, baseType: !2648, size: 64, offset: 768)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2605, file: !2606, line: 510, baseType: !2256, size: 32, offset: 832)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2605, file: !2606, line: 513, baseType: !2256, size: 32, offset: 864)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2605, file: !2606, line: 516, baseType: !2186, size: 32, offset: 896)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2605, file: !2606, line: 519, baseType: !2186, size: 32, offset: 928)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2605, file: !2606, line: 522, baseType: !5, size: 32, offset: 960)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2605, file: !2606, line: 523, baseType: !5, size: 32, offset: 992)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2605, file: !2606, line: 528, baseType: !2259, size: 64, offset: 1024)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2605, file: !2606, line: 535, baseType: !5, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2605, file: !2606, line: 539, baseType: !5, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2605, file: !2606, line: 543, baseType: !5, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2605, file: !2606, line: 546, baseType: !5, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2605, file: !2606, line: 550, baseType: !5, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2605, file: !2606, line: 554, baseType: !5, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2605, file: !2606, line: 559, baseType: !5, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2605, file: !2606, line: 562, baseType: !5, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2605, file: !2606, line: 571, baseType: !5, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2605, file: !2606, line: 573, baseType: !5, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2605, file: !2606, line: 574, baseType: !5, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2605, file: !2606, line: 581, baseType: !5, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2605, file: !2606, line: 585, baseType: !5, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2605, file: !2606, line: 588, baseType: !5, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2605, file: !2606, line: 592, baseType: !5, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2605, file: !2606, line: 598, baseType: !5, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2600, file: !149, line: 3254, baseType: !2354, size: 64, offset: 1536)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2600, file: !149, line: 3257, baseType: !2354, size: 64, offset: 1600)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2600, file: !149, line: 3258, baseType: !2354, size: 64, offset: 1664)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2600, file: !149, line: 3264, baseType: !5, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2600, file: !149, line: 3265, baseType: !5, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2600, file: !149, line: 3267, baseType: !5, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2600, file: !149, line: 3268, baseType: !5, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2600, file: !149, line: 3269, baseType: !5, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2600, file: !149, line: 3271, baseType: !5, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2600, file: !149, line: 3272, baseType: !5, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2600, file: !149, line: 3273, baseType: !5, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2600, file: !149, line: 3274, baseType: !5, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2600, file: !149, line: 3275, baseType: !5, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2600, file: !149, line: 3276, baseType: !5, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2600, file: !149, line: 3277, baseType: !5, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2600, file: !149, line: 3279, baseType: !5, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2600, file: !149, line: 3280, baseType: !5, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2600, file: !149, line: 3281, baseType: !5, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2600, file: !149, line: 3282, baseType: !5, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2600, file: !149, line: 3283, baseType: !5, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2600, file: !149, line: 3284, baseType: !5, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2356, file: !149, line: 3394, baseType: !2924, size: 1344)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !149, line: 2279, size: 1344, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2951, !2952, !2953, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2924, file: !149, line: 2280, baseType: !2392, size: 192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2924, file: !149, line: 2281, baseType: !2354, size: 64, offset: 192)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2924, file: !149, line: 2282, baseType: !2354, size: 64, offset: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2924, file: !149, line: 2283, baseType: !2354, size: 64, offset: 320)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2924, file: !149, line: 2284, baseType: !2354, size: 64, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2924, file: !149, line: 2285, baseType: !5, size: 32, offset: 448)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2924, file: !149, line: 2287, baseType: !5, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2924, file: !149, line: 2288, baseType: !5, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2924, file: !149, line: 2289, baseType: !5, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2924, file: !149, line: 2290, baseType: !5, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2924, file: !149, line: 2291, baseType: !5, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2924, file: !149, line: 2292, baseType: !5, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2924, file: !149, line: 2294, baseType: !5, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2924, file: !149, line: 2296, baseType: !5, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2924, file: !149, line: 2297, baseType: !5, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2924, file: !149, line: 2298, baseType: !5, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2924, file: !149, line: 2299, baseType: !5, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2924, file: !149, line: 2300, baseType: !5, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2924, file: !149, line: 2301, baseType: !5, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2924, file: !149, line: 2302, baseType: !5, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2924, file: !149, line: 2303, baseType: !5, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2924, file: !149, line: 2305, baseType: !5, size: 32, offset: 512)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2924, file: !149, line: 2306, baseType: !2949, size: 32, offset: 544)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !2950, line: 31, baseType: !2256)
!2950 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2924, file: !149, line: 2307, baseType: !2354, size: 64, offset: 576)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2924, file: !149, line: 2308, baseType: !2354, size: 64, offset: 640)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2924, file: !149, line: 2314, baseType: !2954, size: 64, offset: 704)
!2954 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !149, line: 2309, size: 64, elements: !2955)
!2955 = !{!2956, !2957, !2958}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2954, file: !149, line: 2310, baseType: !2256, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2954, file: !149, line: 2311, baseType: !2259, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2954, file: !149, line: 2312, baseType: !2959, size: 64)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !149, line: 2277, flags: DIFlagFwdDecl)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2924, file: !149, line: 2315, baseType: !2354, size: 64, offset: 768)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2924, file: !149, line: 2316, baseType: !2354, size: 64, offset: 832)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2924, file: !149, line: 2317, baseType: !2354, size: 64, offset: 896)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2924, file: !149, line: 2318, baseType: !2354, size: 64, offset: 960)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2924, file: !149, line: 2319, baseType: !2354, size: 64, offset: 1024)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2924, file: !149, line: 2320, baseType: !2354, size: 64, offset: 1088)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2924, file: !149, line: 2321, baseType: !2354, size: 64, offset: 1152)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2924, file: !149, line: 2322, baseType: !2354, size: 64, offset: 1216)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2924, file: !149, line: 2324, baseType: !2970, size: 64, offset: 1280)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !149, line: 2324, flags: DIFlagFwdDecl)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2356, file: !149, line: 3395, baseType: !2973, size: 320)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !149, line: 1469, size: 320, elements: !2974)
!2974 = !{!2975, !2976, !2977}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2973, file: !149, line: 1470, baseType: !2392, size: 192)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2973, file: !149, line: 1471, baseType: !2354, size: 64, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2973, file: !149, line: 1472, baseType: !2354, size: 64, offset: 256)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2356, file: !149, line: 3396, baseType: !2979, size: 320)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !149, line: 1482, size: 320, elements: !2980)
!2980 = !{!2981, !2982, !2983}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2979, file: !149, line: 1483, baseType: !2392, size: 192)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2979, file: !149, line: 1484, baseType: !2256, size: 32, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2979, file: !149, line: 1485, baseType: !2724, size: 64, offset: 256)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2356, file: !149, line: 3397, baseType: !2985, size: 384)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !149, line: 1829, size: 384, elements: !2986)
!2986 = !{!2987, !2988, !2989, !2990}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2985, file: !149, line: 1830, baseType: !2392, size: 192)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2985, file: !149, line: 1831, baseType: !2186, size: 32, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2985, file: !149, line: 1832, baseType: !2354, size: 64, offset: 256)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2985, file: !149, line: 1835, baseType: !2724, size: 64, offset: 320)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2356, file: !149, line: 3398, baseType: !2992, size: 704)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !149, line: 1898, size: 704, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !3003}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2992, file: !149, line: 1899, baseType: !2392, size: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2992, file: !149, line: 1902, baseType: !2354, size: 64, offset: 192)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2992, file: !149, line: 1905, baseType: !2167, size: 64, offset: 256)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2992, file: !149, line: 1908, baseType: !5, size: 32, offset: 320)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2992, file: !149, line: 1911, baseType: !2999, size: 64, offset: 384)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !2556, line: 117, size: 128, elements: !3001)
!3001 = !{!3002}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !3000, file: !2556, line: 120, baseType: !2727, size: 128)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2992, file: !149, line: 1914, baseType: !2772, size: 256, offset: 448)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2356, file: !149, line: 3399, baseType: !3005, size: 704)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !149, line: 2008, size: 704, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3005, file: !149, line: 2009, baseType: !2392, size: 192)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !3005, file: !149, line: 2011, baseType: !5, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !3005, file: !149, line: 2012, baseType: !5, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3005, file: !149, line: 2014, baseType: !2186, size: 32, offset: 224)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3005, file: !149, line: 2016, baseType: !2354, size: 64, offset: 256)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !3005, file: !149, line: 2017, baseType: !2713, size: 64, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !3005, file: !149, line: 2019, baseType: !2354, size: 64, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !3005, file: !149, line: 2020, baseType: !2354, size: 64, offset: 448)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !3005, file: !149, line: 2021, baseType: !2354, size: 64, offset: 512)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !3005, file: !149, line: 2022, baseType: !2354, size: 64, offset: 576)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !3005, file: !149, line: 2023, baseType: !2354, size: 64, offset: 640)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2356, file: !149, line: 3400, baseType: !3019, size: 832)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !149, line: 2430, size: 832, elements: !3020)
!3020 = !{!3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3019, file: !149, line: 2431, baseType: !2392, size: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3019, file: !149, line: 2433, baseType: !2354, size: 64, offset: 192)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3019, file: !149, line: 2434, baseType: !2354, size: 64, offset: 256)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !3019, file: !149, line: 2435, baseType: !2354, size: 64, offset: 320)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !3019, file: !149, line: 2436, baseType: !2354, size: 64, offset: 384)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !3019, file: !149, line: 2437, baseType: !2713, size: 64, offset: 448)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !3019, file: !149, line: 2438, baseType: !2354, size: 64, offset: 512)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !3019, file: !149, line: 2440, baseType: !2354, size: 64, offset: 576)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !3019, file: !149, line: 2441, baseType: !2354, size: 64, offset: 640)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !3019, file: !149, line: 2443, baseType: !3031, size: 128, offset: 704)
!3031 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !149, line: 182, baseType: !3032)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !149, line: 182, size: 128, elements: !3033)
!3033 = !{!3034}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3032, file: !149, line: 182, baseType: !2718, size: 128)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !2356, file: !149, line: 3401, baseType: !3036, size: 320)
!3036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !149, line: 3327, size: 320, elements: !3037)
!3037 = !{!3038, !3039, !3046}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3036, file: !149, line: 3329, baseType: !2392, size: 192)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3036, file: !149, line: 3330, baseType: !3040, size: 64, offset: 192)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !149, line: 3320, size: 192, elements: !3042)
!3042 = !{!3043, !3044, !3045}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3041, file: !149, line: 3322, baseType: !3040, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3041, file: !149, line: 3323, baseType: !3040, size: 64, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3041, file: !149, line: 3324, baseType: !2354, size: 64, offset: 128)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3036, file: !149, line: 3331, baseType: !3040, size: 64, offset: 256)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2356, file: !149, line: 3402, baseType: !3048, size: 256)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !149, line: 1540, size: 256, elements: !3049)
!3049 = !{!3050, !3051}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3048, file: !149, line: 1541, baseType: !2392, size: 192)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !3048, file: !149, line: 1542, baseType: !3052, size: 64, offset: 192)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !149, line: 1538, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !149, line: 1538, size: 192, elements: !3055)
!3055 = !{!3056}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3054, file: !149, line: 1538, baseType: !3057, size: 192)
!3057 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !149, line: 1537, baseType: !3058)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !149, line: 1537, size: 192, elements: !3059)
!3059 = !{!3060, !3061, !3062}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3058, file: !149, line: 1537, baseType: !5, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3058, file: !149, line: 1537, baseType: !5, size: 32, offset: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3058, file: !149, line: 1537, baseType: !3063, size: 128, offset: 64)
!3063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3064, size: 128, elements: !2271)
!3064 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !149, line: 1535, baseType: !3065)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !149, line: 1532, size: 128, elements: !3066)
!3066 = !{!3067, !3068}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3065, file: !149, line: 1533, baseType: !2354, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3065, file: !149, line: 1534, baseType: !2354, size: 64, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !2356, file: !149, line: 3403, baseType: !3070, size: 512)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !149, line: 1938, size: 512, elements: !3071)
!3071 = !{!3072, !3073, !3074, !3075, !3081, !3082, !3083}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3070, file: !149, line: 1939, baseType: !2392, size: 192)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3070, file: !149, line: 1940, baseType: !2186, size: 32, offset: 192)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3070, file: !149, line: 1941, baseType: !148, size: 32, offset: 224)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !3070, file: !149, line: 1946, baseType: !3076, size: 32, offset: 256)
!3076 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !149, line: 1942, size: 32, elements: !3077)
!3077 = !{!3078, !3079, !3080}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !3076, file: !149, line: 1943, baseType: !167, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !3076, file: !149, line: 1944, baseType: !174, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !3076, file: !149, line: 1945, baseType: !181, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !3070, file: !149, line: 1950, baseType: !2218, size: 64, offset: 320)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !3070, file: !149, line: 1951, baseType: !2218, size: 64, offset: 384)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3070, file: !149, line: 1953, baseType: !2724, size: 64, offset: 448)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !2356, file: !149, line: 3404, baseType: !3085, size: 1664)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !149, line: 3337, size: 1664, elements: !3086)
!3086 = !{!3087, !3088}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3085, file: !149, line: 3338, baseType: !2392, size: 192)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3085, file: !149, line: 3341, baseType: !3089, size: 1472, offset: 192)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !3090, line: 410, size: 1472, elements: !3091)
!3090 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !3089, file: !3090, line: 412, baseType: !2256, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !3089, file: !3090, line: 413, baseType: !2256, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !3089, file: !3090, line: 414, baseType: !2256, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !3089, file: !3090, line: 415, baseType: !2256, size: 32, offset: 96)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !3089, file: !3090, line: 416, baseType: !2256, size: 32, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !3089, file: !3090, line: 417, baseType: !2256, size: 32, offset: 160)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !3089, file: !3090, line: 418, baseType: !2166, size: 8, offset: 192)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !3089, file: !3090, line: 419, baseType: !2166, size: 8, offset: 200)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !3089, file: !3090, line: 420, baseType: !3101, size: 8, offset: 208)
!3101 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !3089, file: !3090, line: 421, baseType: !3101, size: 8, offset: 216)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !3089, file: !3090, line: 422, baseType: !3101, size: 8, offset: 224)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !3089, file: !3090, line: 423, baseType: !3101, size: 8, offset: 232)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !3089, file: !3090, line: 424, baseType: !3101, size: 8, offset: 240)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !3089, file: !3090, line: 425, baseType: !3101, size: 8, offset: 248)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !3089, file: !3090, line: 426, baseType: !3101, size: 8, offset: 256)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !3089, file: !3090, line: 427, baseType: !3101, size: 8, offset: 264)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !3089, file: !3090, line: 428, baseType: !3101, size: 8, offset: 272)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !3089, file: !3090, line: 429, baseType: !3101, size: 8, offset: 280)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !3089, file: !3090, line: 430, baseType: !3101, size: 8, offset: 288)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !3089, file: !3090, line: 431, baseType: !3101, size: 8, offset: 296)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !3089, file: !3090, line: 432, baseType: !3101, size: 8, offset: 304)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !3089, file: !3090, line: 433, baseType: !3101, size: 8, offset: 312)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !3089, file: !3090, line: 434, baseType: !3101, size: 8, offset: 320)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !3089, file: !3090, line: 435, baseType: !3101, size: 8, offset: 328)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !3089, file: !3090, line: 436, baseType: !3101, size: 8, offset: 336)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !3089, file: !3090, line: 437, baseType: !3101, size: 8, offset: 344)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !3089, file: !3090, line: 438, baseType: !3101, size: 8, offset: 352)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !3089, file: !3090, line: 439, baseType: !3101, size: 8, offset: 360)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !3089, file: !3090, line: 440, baseType: !3101, size: 8, offset: 368)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !3089, file: !3090, line: 441, baseType: !3101, size: 8, offset: 376)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !3089, file: !3090, line: 442, baseType: !3101, size: 8, offset: 384)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !3089, file: !3090, line: 443, baseType: !3101, size: 8, offset: 392)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !3089, file: !3090, line: 444, baseType: !3101, size: 8, offset: 400)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !3089, file: !3090, line: 445, baseType: !3101, size: 8, offset: 408)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !3089, file: !3090, line: 446, baseType: !3101, size: 8, offset: 416)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !3089, file: !3090, line: 447, baseType: !3101, size: 8, offset: 424)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !3089, file: !3090, line: 448, baseType: !3101, size: 8, offset: 432)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !3089, file: !3090, line: 449, baseType: !3101, size: 8, offset: 440)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !3089, file: !3090, line: 450, baseType: !3101, size: 8, offset: 448)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !3089, file: !3090, line: 451, baseType: !3101, size: 8, offset: 456)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !3089, file: !3090, line: 452, baseType: !3101, size: 8, offset: 464)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !3089, file: !3090, line: 453, baseType: !3101, size: 8, offset: 472)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !3089, file: !3090, line: 454, baseType: !3101, size: 8, offset: 480)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !3089, file: !3090, line: 455, baseType: !3101, size: 8, offset: 488)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !3089, file: !3090, line: 456, baseType: !3101, size: 8, offset: 496)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !3089, file: !3090, line: 457, baseType: !3101, size: 8, offset: 504)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !3089, file: !3090, line: 458, baseType: !3101, size: 8, offset: 512)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !3089, file: !3090, line: 459, baseType: !3101, size: 8, offset: 520)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !3089, file: !3090, line: 460, baseType: !3101, size: 8, offset: 528)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !3089, file: !3090, line: 461, baseType: !3101, size: 8, offset: 536)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !3089, file: !3090, line: 462, baseType: !3101, size: 8, offset: 544)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !3089, file: !3090, line: 463, baseType: !3101, size: 8, offset: 552)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !3089, file: !3090, line: 464, baseType: !3101, size: 8, offset: 560)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !3089, file: !3090, line: 465, baseType: !3101, size: 8, offset: 568)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !3089, file: !3090, line: 466, baseType: !3101, size: 8, offset: 576)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !3089, file: !3090, line: 467, baseType: !3101, size: 8, offset: 584)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !3089, file: !3090, line: 468, baseType: !3101, size: 8, offset: 592)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !3089, file: !3090, line: 469, baseType: !3101, size: 8, offset: 600)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !3089, file: !3090, line: 470, baseType: !3101, size: 8, offset: 608)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !3089, file: !3090, line: 471, baseType: !3101, size: 8, offset: 616)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !3089, file: !3090, line: 472, baseType: !3101, size: 8, offset: 624)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !3089, file: !3090, line: 473, baseType: !3101, size: 8, offset: 632)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !3089, file: !3090, line: 474, baseType: !3101, size: 8, offset: 640)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !3089, file: !3090, line: 475, baseType: !3101, size: 8, offset: 648)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !3089, file: !3090, line: 476, baseType: !3101, size: 8, offset: 656)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !3089, file: !3090, line: 477, baseType: !3101, size: 8, offset: 664)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !3089, file: !3090, line: 478, baseType: !3101, size: 8, offset: 672)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !3089, file: !3090, line: 479, baseType: !3101, size: 8, offset: 680)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !3089, file: !3090, line: 480, baseType: !3101, size: 8, offset: 688)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !3089, file: !3090, line: 481, baseType: !3101, size: 8, offset: 696)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !3089, file: !3090, line: 482, baseType: !3101, size: 8, offset: 704)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !3089, file: !3090, line: 483, baseType: !3101, size: 8, offset: 712)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !3089, file: !3090, line: 484, baseType: !3101, size: 8, offset: 720)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !3089, file: !3090, line: 485, baseType: !3101, size: 8, offset: 728)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !3089, file: !3090, line: 486, baseType: !3101, size: 8, offset: 736)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !3089, file: !3090, line: 487, baseType: !3101, size: 8, offset: 744)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !3089, file: !3090, line: 488, baseType: !3101, size: 8, offset: 752)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !3089, file: !3090, line: 489, baseType: !3101, size: 8, offset: 760)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !3089, file: !3090, line: 490, baseType: !3101, size: 8, offset: 768)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !3089, file: !3090, line: 491, baseType: !3101, size: 8, offset: 776)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !3089, file: !3090, line: 492, baseType: !3101, size: 8, offset: 784)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !3089, file: !3090, line: 493, baseType: !3101, size: 8, offset: 792)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !3089, file: !3090, line: 494, baseType: !3101, size: 8, offset: 800)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !3089, file: !3090, line: 495, baseType: !3101, size: 8, offset: 808)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !3089, file: !3090, line: 496, baseType: !3101, size: 8, offset: 816)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !3089, file: !3090, line: 497, baseType: !3101, size: 8, offset: 824)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !3089, file: !3090, line: 498, baseType: !3101, size: 8, offset: 832)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !3089, file: !3090, line: 499, baseType: !3101, size: 8, offset: 840)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !3089, file: !3090, line: 500, baseType: !3101, size: 8, offset: 848)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !3089, file: !3090, line: 501, baseType: !3101, size: 8, offset: 856)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !3089, file: !3090, line: 502, baseType: !3101, size: 8, offset: 864)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !3089, file: !3090, line: 503, baseType: !3101, size: 8, offset: 872)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !3089, file: !3090, line: 504, baseType: !3101, size: 8, offset: 880)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !3089, file: !3090, line: 505, baseType: !3101, size: 8, offset: 888)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !3089, file: !3090, line: 506, baseType: !3101, size: 8, offset: 896)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !3089, file: !3090, line: 507, baseType: !3101, size: 8, offset: 904)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !3089, file: !3090, line: 508, baseType: !3101, size: 8, offset: 912)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !3089, file: !3090, line: 509, baseType: !3101, size: 8, offset: 920)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !3089, file: !3090, line: 510, baseType: !3101, size: 8, offset: 928)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !3089, file: !3090, line: 511, baseType: !3101, size: 8, offset: 936)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !3089, file: !3090, line: 512, baseType: !3101, size: 8, offset: 944)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !3089, file: !3090, line: 513, baseType: !3101, size: 8, offset: 952)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !3089, file: !3090, line: 514, baseType: !3101, size: 8, offset: 960)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !3089, file: !3090, line: 515, baseType: !3101, size: 8, offset: 968)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !3089, file: !3090, line: 516, baseType: !3101, size: 8, offset: 976)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !3089, file: !3090, line: 517, baseType: !3101, size: 8, offset: 984)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !3089, file: !3090, line: 518, baseType: !3101, size: 8, offset: 992)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !3089, file: !3090, line: 519, baseType: !3101, size: 8, offset: 1000)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !3089, file: !3090, line: 520, baseType: !3101, size: 8, offset: 1008)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !3089, file: !3090, line: 521, baseType: !3101, size: 8, offset: 1016)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !3089, file: !3090, line: 522, baseType: !3101, size: 8, offset: 1024)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !3089, file: !3090, line: 523, baseType: !3101, size: 8, offset: 1032)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !3089, file: !3090, line: 524, baseType: !3101, size: 8, offset: 1040)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !3089, file: !3090, line: 525, baseType: !3101, size: 8, offset: 1048)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !3089, file: !3090, line: 526, baseType: !3101, size: 8, offset: 1056)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !3089, file: !3090, line: 527, baseType: !3101, size: 8, offset: 1064)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !3089, file: !3090, line: 528, baseType: !3101, size: 8, offset: 1072)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !3089, file: !3090, line: 529, baseType: !3101, size: 8, offset: 1080)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !3089, file: !3090, line: 530, baseType: !3101, size: 8, offset: 1088)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !3089, file: !3090, line: 531, baseType: !3101, size: 8, offset: 1096)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !3089, file: !3090, line: 532, baseType: !3101, size: 8, offset: 1104)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !3089, file: !3090, line: 533, baseType: !3101, size: 8, offset: 1112)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !3089, file: !3090, line: 534, baseType: !3101, size: 8, offset: 1120)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !3089, file: !3090, line: 535, baseType: !3101, size: 8, offset: 1128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !3089, file: !3090, line: 536, baseType: !3101, size: 8, offset: 1136)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !3089, file: !3090, line: 537, baseType: !3101, size: 8, offset: 1144)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !3089, file: !3090, line: 538, baseType: !3101, size: 8, offset: 1152)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !3089, file: !3090, line: 539, baseType: !3101, size: 8, offset: 1160)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !3089, file: !3090, line: 540, baseType: !3101, size: 8, offset: 1168)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !3089, file: !3090, line: 541, baseType: !3101, size: 8, offset: 1176)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !3089, file: !3090, line: 542, baseType: !3101, size: 8, offset: 1184)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !3089, file: !3090, line: 543, baseType: !3101, size: 8, offset: 1192)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !3089, file: !3090, line: 544, baseType: !3101, size: 8, offset: 1200)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !3089, file: !3090, line: 545, baseType: !3101, size: 8, offset: 1208)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !3089, file: !3090, line: 546, baseType: !3101, size: 8, offset: 1216)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !3089, file: !3090, line: 547, baseType: !3101, size: 8, offset: 1224)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !3089, file: !3090, line: 548, baseType: !3101, size: 8, offset: 1232)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !3089, file: !3090, line: 549, baseType: !3101, size: 8, offset: 1240)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !3089, file: !3090, line: 550, baseType: !3101, size: 8, offset: 1248)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !3089, file: !3090, line: 551, baseType: !3101, size: 8, offset: 1256)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !3089, file: !3090, line: 552, baseType: !3101, size: 8, offset: 1264)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !3089, file: !3090, line: 553, baseType: !3101, size: 8, offset: 1272)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !3089, file: !3090, line: 554, baseType: !3101, size: 8, offset: 1280)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !3089, file: !3090, line: 555, baseType: !3101, size: 8, offset: 1288)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !3089, file: !3090, line: 556, baseType: !3101, size: 8, offset: 1296)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !3089, file: !3090, line: 557, baseType: !3101, size: 8, offset: 1304)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !3089, file: !3090, line: 558, baseType: !3101, size: 8, offset: 1312)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !3089, file: !3090, line: 559, baseType: !3101, size: 8, offset: 1320)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !3089, file: !3090, line: 560, baseType: !3101, size: 8, offset: 1328)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !3089, file: !3090, line: 561, baseType: !3101, size: 8, offset: 1336)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !3089, file: !3090, line: 562, baseType: !3101, size: 8, offset: 1344)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !3089, file: !3090, line: 563, baseType: !3101, size: 8, offset: 1352)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !3089, file: !3090, line: 564, baseType: !3101, size: 8, offset: 1360)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !3089, file: !3090, line: 565, baseType: !3101, size: 8, offset: 1368)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !3089, file: !3090, line: 566, baseType: !3101, size: 8, offset: 1376)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !3089, file: !3090, line: 567, baseType: !3101, size: 8, offset: 1384)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !3089, file: !3090, line: 568, baseType: !3101, size: 8, offset: 1392)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !3089, file: !3090, line: 569, baseType: !3101, size: 8, offset: 1400)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !3089, file: !3090, line: 570, baseType: !3101, size: 8, offset: 1408)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !3089, file: !3090, line: 571, baseType: !3101, size: 8, offset: 1416)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !3089, file: !3090, line: 572, baseType: !3101, size: 8, offset: 1424)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !3089, file: !3090, line: 573, baseType: !3101, size: 8, offset: 1432)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !3089, file: !3090, line: 574, baseType: !3101, size: 8, offset: 1440)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !2356, file: !149, line: 3405, baseType: !3257, size: 384)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !149, line: 3352, size: 384, elements: !3258)
!3258 = !{!3259, !3260}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3257, file: !149, line: 3353, baseType: !2392, size: 192)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3257, file: !149, line: 3356, baseType: !3261, size: 192, offset: 192)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !3090, line: 578, size: 192, elements: !3262)
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !3261, file: !3090, line: 580, baseType: !2256, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !3261, file: !3090, line: 581, baseType: !2256, size: 32, offset: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !3261, file: !3090, line: 582, baseType: !2256, size: 32, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !3261, file: !3090, line: 583, baseType: !2256, size: 32, offset: 96)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3261, file: !3090, line: 584, baseType: !2166, size: 8, offset: 128)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !3261, file: !3090, line: 585, baseType: !2166, size: 8, offset: 136)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !3261, file: !3090, line: 586, baseType: !2166, size: 8, offset: 144)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !3261, file: !3090, line: 587, baseType: !2166, size: 8, offset: 152)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !3261, file: !3090, line: 588, baseType: !2166, size: 8, offset: 160)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !3261, file: !3090, line: 589, baseType: !2166, size: 8, offset: 168)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !3261, file: !3090, line: 590, baseType: !2166, size: 8, offset: 176)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !2253, file: !1949, line: 178, baseType: !2192, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !2253, file: !1949, line: 179, baseType: !3276, size: 64)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !1949, line: 150, baseType: !3278)
!3278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !1949, line: 142, size: 320, elements: !3279)
!3279 = !{!3280, !3281, !3282, !3283, !3284, !3285}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !3278, file: !1949, line: 144, baseType: !2354, size: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3278, file: !1949, line: 145, baseType: !2233, size: 64, offset: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3278, file: !1949, line: 146, baseType: !2233, size: 64, offset: 128)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3278, file: !1949, line: 147, baseType: !2949, size: 32, offset: 192)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3278, file: !1949, line: 148, baseType: !5, size: 32, offset: 224)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !3278, file: !1949, line: 149, baseType: !2166, size: 8, offset: 256)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !2253, file: !1949, line: 180, baseType: !3287, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !1949, line: 162, baseType: !3289)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !1949, line: 159, size: 128, elements: !3290)
!3290 = !{!3291, !3292}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3289, file: !1949, line: 160, baseType: !2354, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3289, file: !1949, line: 161, baseType: !2323, size: 64, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !2253, file: !1949, line: 181, baseType: !3294, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !1949, line: 181, flags: DIFlagFwdDecl)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !2248, file: !1949, line: 317, baseType: !3297, size: 64)
!3297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2323, size: 64, elements: !2271)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !2248, file: !1949, line: 318, baseType: !3299, size: 320)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !1949, line: 188, size: 320, elements: !3300)
!3300 = !{!3301, !3303, !3326}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !3299, file: !1949, line: 190, baseType: !3302, size: 192)
!3302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 192, elements: !2425)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3299, file: !1949, line: 193, baseType: !3304, size: 64, offset: 192)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !1949, line: 206, size: 320, elements: !3306)
!3306 = !{!3307, !3311, !3312, !3313, !3325}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !3305, file: !1949, line: 208, baseType: !3308, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 64)
!3309 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !2168, line: 62, baseType: !3310)
!3310 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2168, line: 61, flags: DIFlagFwdDecl)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3305, file: !1949, line: 211, baseType: !5, size: 32, offset: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3305, file: !1949, line: 214, baseType: !2323, size: 64, offset: 128)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3305, file: !1949, line: 224, baseType: !3314, size: 64, offset: 192)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !1949, line: 202, baseType: !3316)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !1949, line: 202, size: 128, elements: !3317)
!3317 = !{!3318}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3316, file: !1949, line: 202, baseType: !3319, size: 128)
!3319 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !1949, line: 200, baseType: !3320)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !1949, line: 200, size: 128, elements: !3321)
!3321 = !{!3322, !3323, !3324}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3320, file: !1949, line: 200, baseType: !5, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3320, file: !1949, line: 200, baseType: !5, size: 32, offset: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3320, file: !1949, line: 200, baseType: !2270, size: 64, offset: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !3305, file: !1949, line: 234, baseType: !3314, size: 64, offset: 256)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3299, file: !1949, line: 197, baseType: !2323, size: 64, offset: 256)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !2248, file: !1949, line: 319, baseType: !2414, size: 256)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !2248, file: !1949, line: 320, baseType: !2433, size: 192)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2210, file: !133, line: 134, baseType: !2344, size: 64, offset: 192)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !2210, file: !133, line: 137, baseType: !2354, size: 64, offset: 256)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !2210, file: !133, line: 138, baseType: !2186, size: 32, offset: 320)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !2210, file: !133, line: 142, baseType: !5, size: 32, offset: 352)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2210, file: !133, line: 144, baseType: !2256, size: 32, offset: 384)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !2210, file: !133, line: 145, baseType: !2256, size: 32, offset: 416)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2210, file: !133, line: 146, baseType: !3336, size: 64, offset: 448)
!3336 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !133, line: 119, baseType: !2323)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !2193, file: !133, line: 220, baseType: !2196, size: 64, offset: 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2193, file: !133, line: 223, baseType: !2344, size: 64, offset: 128)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !2193, file: !133, line: 226, baseType: !2802, size: 64, offset: 192)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !2193, file: !133, line: 229, baseType: !3341, size: 128, offset: 256)
!3341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3342, size: 128, elements: !2307)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !133, line: 229, flags: DIFlagFwdDecl)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !2193, file: !133, line: 232, baseType: !2192, size: 64, offset: 384)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !2193, file: !133, line: 233, baseType: !2192, size: 64, offset: 448)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !2193, file: !133, line: 238, baseType: !3347, size: 64, offset: 512)
!3347 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !133, line: 235, size: 64, elements: !3348)
!3348 = !{!3349, !3355}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !3347, file: !133, line: 236, baseType: !3350, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !133, line: 273, size: 128, elements: !3352)
!3352 = !{!3353, !3354}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3351, file: !133, line: 275, baseType: !2218, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !3351, file: !133, line: 278, baseType: !2218, size: 64, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !3347, file: !133, line: 237, baseType: !3356, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !133, line: 259, size: 320, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362, !3363}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !3357, file: !133, line: 261, baseType: !2233, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !3357, file: !133, line: 262, baseType: !2233, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3357, file: !133, line: 266, baseType: !2233, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !3357, file: !133, line: 267, baseType: !2233, size: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !3357, file: !133, line: 270, baseType: !2256, size: 32, offset: 256)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2193, file: !133, line: 241, baseType: !3336, size: 64, offset: 576)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2193, file: !133, line: 244, baseType: !2256, size: 32, offset: 640)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !2193, file: !133, line: 247, baseType: !2256, size: 32, offset: 672)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2193, file: !133, line: 250, baseType: !2256, size: 32, offset: 704)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !2193, file: !133, line: 253, baseType: !2256, size: 32, offset: 736)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2193, file: !133, line: 256, baseType: !2256, size: 32, offset: 768)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2173, file: !2092, line: 327, baseType: !2354, size: 64, offset: 192)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !2170, file: !2092, line: 739, baseType: !3372, size: 448)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !2092, line: 350, size: 448, elements: !3373)
!3373 = !{!3374, !3380}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !3372, file: !2092, line: 353, baseType: !3375, size: 384)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !2092, line: 333, size: 384, elements: !3376)
!3376 = !{!3377, !3378, !3379}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3375, file: !2092, line: 336, baseType: !2173, size: 256)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !3375, file: !2092, line: 343, baseType: !2760, size: 64, offset: 256)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !3375, file: !2092, line: 344, baseType: !2767, size: 64, offset: 320)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !3372, file: !2092, line: 359, baseType: !2724, size: 64, offset: 384)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !2170, file: !2092, line: 740, baseType: !3382, size: 512)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !2092, line: 365, size: 512, elements: !3383)
!3383 = !{!3384, !3385, !3386}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !3382, file: !2092, line: 368, baseType: !3375, size: 384)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !3382, file: !2092, line: 373, baseType: !2354, size: 64, offset: 384)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !3382, file: !2092, line: 374, baseType: !2354, size: 64, offset: 448)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !2170, file: !2092, line: 741, baseType: !3388, size: 576)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !2092, line: 380, size: 576, elements: !3389)
!3389 = !{!3390, !3391}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !3388, file: !2092, line: 383, baseType: !3382, size: 512)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !3388, file: !2092, line: 389, baseType: !2724, size: 64, offset: 512)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2170, file: !2092, line: 742, baseType: !3393, size: 320)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !2092, line: 395, size: 320, elements: !3394)
!3394 = !{!3395, !3396}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3393, file: !2092, line: 397, baseType: !2173, size: 256)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !3393, file: !2092, line: 400, baseType: !2218, size: 64, offset: 256)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !2170, file: !2092, line: 743, baseType: !3398, size: 448)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !2092, line: 406, size: 448, elements: !3399)
!3399 = !{!3400, !3401, !3402, !3403}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3398, file: !2092, line: 408, baseType: !2173, size: 256)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3398, file: !2092, line: 412, baseType: !2354, size: 64, offset: 256)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3398, file: !2092, line: 420, baseType: !2354, size: 64, offset: 320)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !3398, file: !2092, line: 423, baseType: !2218, size: 64, offset: 384)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !2170, file: !2092, line: 744, baseType: !3405, size: 384)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !2092, line: 429, size: 384, elements: !3406)
!3406 = !{!3407, !3408, !3409}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3405, file: !2092, line: 431, baseType: !2173, size: 256)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !3405, file: !2092, line: 434, baseType: !2354, size: 64, offset: 256)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3405, file: !2092, line: 437, baseType: !2218, size: 64, offset: 320)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !2170, file: !2092, line: 745, baseType: !3411, size: 384)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !2092, line: 443, size: 384, elements: !3412)
!3412 = !{!3413, !3414, !3415}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3411, file: !2092, line: 445, baseType: !2173, size: 256)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !3411, file: !2092, line: 449, baseType: !2354, size: 64, offset: 256)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !3411, file: !2092, line: 453, baseType: !2218, size: 64, offset: 320)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !2170, file: !2092, line: 746, baseType: !3417, size: 320)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !2092, line: 459, size: 320, elements: !3418)
!3418 = !{!3419, !3420}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3417, file: !2092, line: 461, baseType: !2173, size: 256)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !3417, file: !2092, line: 464, baseType: !2354, size: 64, offset: 256)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !2170, file: !2092, line: 747, baseType: !3422, size: 768)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !2092, line: 469, size: 768, elements: !3423)
!3423 = !{!3424, !3425, !3426, !3427, !3428}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3422, file: !2092, line: 471, baseType: !2173, size: 256)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !3422, file: !2092, line: 474, baseType: !5, size: 32, offset: 256)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3422, file: !2092, line: 475, baseType: !5, size: 32, offset: 288)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3422, file: !2092, line: 478, baseType: !2354, size: 64, offset: 320)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3422, file: !2092, line: 481, baseType: !3429, size: 384, offset: 384)
!3429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3430, size: 384, elements: !2271)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !149, line: 1917, size: 384, elements: !3431)
!3431 = !{!3432, !3433, !3434}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !3430, file: !149, line: 1920, baseType: !2772, size: 256)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !3430, file: !149, line: 1921, baseType: !2354, size: 64, offset: 256)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3430, file: !149, line: 1922, baseType: !2186, size: 32, offset: 320)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !2170, file: !2092, line: 748, baseType: !3436, size: 320)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !2092, line: 487, size: 320, elements: !3437)
!3437 = !{!3438, !3439}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3436, file: !2092, line: 490, baseType: !2173, size: 256)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !3436, file: !2092, line: 494, baseType: !2256, size: 32, offset: 256)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !2170, file: !2092, line: 749, baseType: !3441, size: 384)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !2092, line: 500, size: 384, elements: !3442)
!3442 = !{!3443, !3444, !3445}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3441, file: !2092, line: 502, baseType: !2173, size: 256)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !3441, file: !2092, line: 506, baseType: !2218, size: 64, offset: 256)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3441, file: !2092, line: 510, baseType: !2218, size: 64, offset: 320)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !2170, file: !2092, line: 750, baseType: !3447, size: 320)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !2092, line: 529, size: 320, elements: !3448)
!3448 = !{!3449, !3450}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3447, file: !2092, line: 531, baseType: !2173, size: 256)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3447, file: !2092, line: 540, baseType: !2218, size: 64, offset: 256)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !2170, file: !2092, line: 751, baseType: !3452, size: 704)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !2092, line: 546, size: 704, elements: !3453)
!3453 = !{!3454, !3455, !3456, !3457, !3458, !3459, !3460}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !3452, file: !2092, line: 549, baseType: !3382, size: 512)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !3452, file: !2092, line: 553, baseType: !2259, size: 64, offset: 512)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !3452, file: !2092, line: 557, baseType: !2166, size: 8, offset: 576)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3452, file: !2092, line: 558, baseType: !2166, size: 8, offset: 584)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !3452, file: !2092, line: 559, baseType: !2166, size: 8, offset: 592)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !3452, file: !2092, line: 560, baseType: !2166, size: 8, offset: 600)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !3452, file: !2092, line: 566, baseType: !2724, size: 64, offset: 640)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !2170, file: !2092, line: 752, baseType: !3462, size: 384)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !2092, line: 571, size: 384, elements: !3463)
!3463 = !{!3464, !3465}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3462, file: !2092, line: 573, baseType: !3393, size: 320)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3462, file: !2092, line: 577, baseType: !2354, size: 64, offset: 320)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !2170, file: !2092, line: 753, baseType: !3467, size: 576)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !2092, line: 600, size: 576, elements: !3468)
!3468 = !{!3469, !3470, !3471, !3472, !3481}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3467, file: !2092, line: 602, baseType: !3393, size: 320)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3467, file: !2092, line: 605, baseType: !2354, size: 64, offset: 320)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !3467, file: !2092, line: 609, baseType: !2674, size: 64, offset: 384)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !3467, file: !2092, line: 612, baseType: !3473, size: 64, offset: 448)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !2092, line: 581, size: 320, elements: !3475)
!3475 = !{!3476, !3477, !3478, !3479, !3480}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !3474, file: !2092, line: 583, baseType: !181, size: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3474, file: !2092, line: 586, baseType: !2354, size: 64, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !3474, file: !2092, line: 589, baseType: !2354, size: 64, offset: 128)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !3474, file: !2092, line: 592, baseType: !2354, size: 64, offset: 192)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3474, file: !2092, line: 595, baseType: !2354, size: 64, offset: 256)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !3467, file: !2092, line: 616, baseType: !2218, size: 64, offset: 512)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !2170, file: !2092, line: 754, baseType: !3483, size: 512)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !2092, line: 622, size: 512, elements: !3484)
!3484 = !{!3485, !3486, !3487, !3488}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3483, file: !2092, line: 624, baseType: !3393, size: 320)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3483, file: !2092, line: 628, baseType: !2354, size: 64, offset: 320)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !3483, file: !2092, line: 632, baseType: !2354, size: 64, offset: 384)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !3483, file: !2092, line: 636, baseType: !2354, size: 64, offset: 448)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !2170, file: !2092, line: 755, baseType: !3490, size: 704)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !2092, line: 642, size: 704, elements: !3491)
!3491 = !{!3492, !3493, !3494, !3495}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3490, file: !2092, line: 644, baseType: !3483, size: 512)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !3490, file: !2092, line: 648, baseType: !2354, size: 64, offset: 512)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3490, file: !2092, line: 652, baseType: !2354, size: 64, offset: 576)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !3490, file: !2092, line: 653, baseType: !2354, size: 64, offset: 640)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !2170, file: !2092, line: 756, baseType: !3497, size: 448)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !2092, line: 663, size: 448, elements: !3498)
!3498 = !{!3499, !3500, !3501}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3497, file: !2092, line: 665, baseType: !3393, size: 320)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3497, file: !2092, line: 668, baseType: !2354, size: 64, offset: 320)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !3497, file: !2092, line: 673, baseType: !2354, size: 64, offset: 384)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !2170, file: !2092, line: 757, baseType: !3503, size: 384)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !2092, line: 694, size: 384, elements: !3504)
!3504 = !{!3505, !3506}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3503, file: !2092, line: 696, baseType: !3393, size: 320)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3503, file: !2092, line: 699, baseType: !2354, size: 64, offset: 320)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !2170, file: !2092, line: 758, baseType: !3508, size: 384)
!3508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !2092, line: 681, size: 384, elements: !3509)
!3509 = !{!3510, !3511, !3512}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3508, file: !2092, line: 683, baseType: !2173, size: 256)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !3508, file: !2092, line: 686, baseType: !2354, size: 64, offset: 256)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !3508, file: !2092, line: 689, baseType: !2354, size: 64, offset: 320)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !2170, file: !2092, line: 759, baseType: !3514, size: 384)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !2092, line: 707, size: 384, elements: !3515)
!3515 = !{!3516, !3517, !3518}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3514, file: !2092, line: 709, baseType: !2173, size: 256)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !3514, file: !2092, line: 712, baseType: !2354, size: 64, offset: 256)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !3514, file: !2092, line: 712, baseType: !2354, size: 64, offset: 320)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !2170, file: !2092, line: 760, baseType: !3520, size: 320)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !2092, line: 718, size: 320, elements: !3521)
!3521 = !{!3522, !3523}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3520, file: !2092, line: 720, baseType: !2173, size: 256)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3520, file: !2092, line: 723, baseType: !2354, size: 64, offset: 256)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !2092, line: 265, baseType: !3526)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2092, line: 254, size: 192, elements: !3527)
!3527 = !{!3528, !3529, !3530}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3526, file: !2092, line: 257, baseType: !2223, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3526, file: !2092, line: 263, baseType: !2218, size: 64, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3526, file: !2092, line: 264, baseType: !2616, size: 64, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "slp_tree", file: !389, line: 116, baseType: !3533)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slp_tree", file: !389, line: 95, size: 384, elements: !3535)
!3535 = !{!3536, !3537, !3538, !3544, !3545, !3546}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !3534, file: !389, line: 99, baseType: !3533, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !3534, file: !389, line: 100, baseType: !3533, size: 64, offset: 64)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "stmts", scope: !3534, file: !389, line: 102, baseType: !3539, size: 64, offset: 128)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !2092, line: 34, baseType: !3541)
!3541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !2092, line: 34, size: 128, elements: !3542)
!3542 = !{!3543}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3541, file: !2092, line: 34, baseType: !2705, size: 128)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "vec_stmts", scope: !3534, file: !389, line: 104, baseType: !3539, size: 64, offset: 192)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "vec_stmts_size", scope: !3534, file: !389, line: 109, baseType: !5, size: 32, offset: 256)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3534, file: !389, line: 115, baseType: !3547, size: 64, offset: 288)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3534, file: !389, line: 111, size: 64, elements: !3548)
!3548 = !{!3549, !3550}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !3547, file: !389, line: 113, baseType: !2256, size: 32)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !3547, file: !389, line: 114, baseType: !2256, size: 32, offset: 32)
!3551 = !{!3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855}
!3552 = !DILocalVariable(name: "stmt", arg: 1, scope: !2163, file: !1, line: 1534, type: !2167)
!3553 = !DILocalVariable(name: "gsi", arg: 2, scope: !2163, file: !1, line: 1534, type: !3524)
!3554 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !2163, file: !1, line: 1535, type: !3531)
!3555 = !DILocalVariable(name: "slp_node", arg: 4, scope: !2163, file: !1, line: 1535, type: !3532)
!3556 = !DILocalVariable(name: "vec_dest", scope: !2163, file: !1, line: 1537, type: !2354)
!3557 = !DILocalVariable(name: "scalar_dest", scope: !2163, file: !1, line: 1538, type: !2354)
!3558 = !DILocalVariable(name: "op0", scope: !2163, file: !1, line: 1539, type: !2354)
!3559 = !DILocalVariable(name: "vec_oprnd0", scope: !2163, file: !1, line: 1540, type: !2354)
!3560 = !DILocalVariable(name: "vec_oprnd1", scope: !2163, file: !1, line: 1540, type: !2354)
!3561 = !DILocalVariable(name: "stmt_info", scope: !2163, file: !1, line: 1541, type: !3562)
!3562 = !DIDerivedType(tag: DW_TAG_typedef, name: "stmt_vec_info", file: !389, line: 496, baseType: !3563)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stmt_vec_info", file: !389, line: 401, size: 1536, elements: !3565)
!3565 = !{!3566, !3567, !3568, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3816, !3817}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3564, file: !389, line: 403, baseType: !388, size: 32)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3564, file: !389, line: 406, baseType: !2167, size: 64, offset: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "loop_vinfo", scope: !3564, file: !389, line: 409, baseType: !3569, size: 64, offset: 128)
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_vec_info", file: !389, line: 245, baseType: !3570)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_loop_vec_info", file: !389, line: 176, size: 1024, elements: !3572)
!3572 = !{!3573, !3574, !3576, !3577, !3578, !3579, !3580, !3581, !3641, !3642, !3643, !3657, !3718, !3719, !3720, !3722, !3723, !3776}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !3571, file: !389, line: 179, baseType: !2802, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "bbs", scope: !3571, file: !389, line: 182, baseType: !3575, size: 64, offset: 64)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "num_iters", scope: !3571, file: !389, line: 185, baseType: !2354, size: 64, offset: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "num_iters_unchanged", scope: !3571, file: !389, line: 186, baseType: !2354, size: 64, offset: 192)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "min_profitable_iters", scope: !3571, file: !389, line: 193, baseType: !2256, size: 32, offset: 256)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "vectorizable", scope: !3571, file: !389, line: 196, baseType: !2166, size: 8, offset: 288)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "vectorization_factor", scope: !3571, file: !389, line: 199, baseType: !2256, size: 32, offset: 320)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "unaligned_dr", scope: !3571, file: !389, line: 202, baseType: !3582, size: 64, offset: 384)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_reference", file: !3584, line: 165, size: 896, elements: !3585)
!3584 = !DIFile(filename: "./tree-data-ref.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3585 = !{!3586, !3587, !3588, !3589, !3590, !3598, !3608, !3613}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3583, file: !3584, line: 168, baseType: !2167, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3583, file: !3584, line: 171, baseType: !2354, size: 64, offset: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3583, file: !3584, line: 174, baseType: !2344, size: 64, offset: 128)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "is_read", scope: !3583, file: !3584, line: 177, baseType: !2166, size: 8, offset: 192)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "innermost", scope: !3583, file: !3584, line: 180, baseType: !3591, size: 320, offset: 256)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "innermost_loop_behavior", file: !3584, line: 51, size: 320, elements: !3592)
!3592 = !{!3593, !3594, !3595, !3596, !3597}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !3591, file: !3584, line: 53, baseType: !2354, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3591, file: !3584, line: 54, baseType: !2354, size: 64, offset: 64)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3591, file: !3584, line: 55, baseType: !2354, size: 64, offset: 128)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3591, file: !3584, line: 56, baseType: !2354, size: 64, offset: 192)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_to", scope: !3591, file: !3584, line: 60, baseType: !2354, size: 64, offset: 256)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !3583, file: !3584, line: 183, baseType: !3599, size: 128, offset: 576)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "indices", file: !3584, line: 78, size: 128, elements: !3600)
!3600 = !{!3601, !3602}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "base_object", scope: !3599, file: !3584, line: 81, baseType: !2354, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "access_fns", scope: !3599, file: !3584, line: 84, baseType: !3603, size: 64, offset: 64)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !149, line: 184, baseType: !3605)
!3605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !149, line: 184, size: 128, elements: !3606)
!3606 = !{!3607}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3605, file: !149, line: 184, baseType: !2718, size: 128)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3583, file: !3584, line: 186, baseType: !3609, size: 128, offset: 704)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dr_alias", file: !3584, line: 87, size: 128, elements: !3610)
!3610 = !{!3611, !3612}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !3609, file: !3584, line: 91, baseType: !2999, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "vops", scope: !3609, file: !3584, line: 96, baseType: !2737, size: 64, offset: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "access_matrix", scope: !3583, file: !3584, line: 189, baseType: !3614, size: 64, offset: 832)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_matrix", file: !3584, line: 127, size: 256, elements: !3616)
!3616 = !{!3617, !3623, !3624, !3625}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !3615, file: !3584, line: 129, baseType: !3618, size: 64)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !376, line: 86, baseType: !3620)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !376, line: 86, size: 128, elements: !3621)
!3621 = !{!3622}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3620, file: !376, line: 86, baseType: !2794, size: 128)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "nb_induction_vars", scope: !3615, file: !3584, line: 130, baseType: !2256, size: 32, offset: 64)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !3615, file: !3584, line: 131, baseType: !3603, size: 64, offset: 128)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !3615, file: !3584, line: 132, baseType: !3626, size: 64, offset: 192)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_gc", file: !3628, line: 34, baseType: !3629)
!3628 = !DIFile(filename: "./lambda.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_gc", file: !3628, line: 34, size: 128, elements: !3630)
!3630 = !{!3631}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3629, file: !3628, line: 34, baseType: !3632, size: 128)
!3632 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_base", file: !3628, line: 32, baseType: !3633)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_base", file: !3628, line: 32, size: 128, elements: !3634)
!3634 = !{!3635, !3636, !3637}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3633, file: !3628, line: 32, baseType: !5, size: 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3633, file: !3628, line: 32, baseType: !5, size: 32, offset: 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3633, file: !3628, line: 32, baseType: !3638, size: 64, offset: 64)
!3638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3639, size: 64, elements: !2271)
!3639 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_vector", file: !3628, line: 31, baseType: !3640)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "peeling_for_alignment", scope: !3571, file: !389, line: 212, baseType: !2256, size: 32, offset: 448)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_mask", scope: !3571, file: !389, line: 215, baseType: !2256, size: 32, offset: 480)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "datarefs", scope: !3571, file: !389, line: 218, baseType: !3644, size: 64, offset: 512)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_heap", file: !3584, line: 209, baseType: !3646)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_heap", file: !3584, line: 209, size: 128, elements: !3647)
!3647 = !{!3648}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3646, file: !3584, line: 209, baseType: !3649, size: 128)
!3649 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_base", file: !3584, line: 208, baseType: !3650)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_base", file: !3584, line: 208, size: 128, elements: !3651)
!3651 = !{!3652, !3653, !3654}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3650, file: !3584, line: 208, baseType: !5, size: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3650, file: !3584, line: 208, baseType: !5, size: 32, offset: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3650, file: !3584, line: 208, baseType: !3655, size: 64, offset: 64)
!3655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3656, size: 64, elements: !2271)
!3656 = !DIDerivedType(tag: DW_TAG_typedef, name: "data_reference_p", file: !3584, line: 207, baseType: !3582)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "ddrs", scope: !3571, file: !389, line: 221, baseType: !3658, size: 64, offset: 576)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_heap", file: !3584, line: 333, baseType: !3660)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_heap", file: !3584, line: 333, size: 128, elements: !3661)
!3661 = !{!3662}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3660, file: !3584, line: 333, baseType: !3663, size: 128)
!3663 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_base", file: !3584, line: 332, baseType: !3664)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_base", file: !3584, line: 332, size: 128, elements: !3665)
!3665 = !{!3666, !3667, !3668}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3664, file: !3584, line: 332, baseType: !5, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3664, file: !3584, line: 332, baseType: !5, size: 32, offset: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3664, file: !3584, line: 332, baseType: !3669, size: 64, offset: 64)
!3669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3670, size: 64, elements: !2271)
!3670 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddr_p", file: !3584, line: 331, baseType: !3671)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_dependence_relation", file: !3584, line: 282, size: 512, elements: !3673)
!3673 = !{!3674, !3675, !3676, !3677, !3706, !3707, !3713, !3714, !3715, !3716, !3717}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3672, file: !3584, line: 285, baseType: !3582, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3672, file: !3584, line: 286, baseType: !3582, size: 64, offset: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "are_dependent", scope: !3672, file: !3584, line: 299, baseType: !2354, size: 64, offset: 128)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "subscripts", scope: !3672, file: !3584, line: 304, baseType: !3678, size: 64, offset: 192)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_heap", file: !3584, line: 272, baseType: !3680)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_heap", file: !3584, line: 272, size: 128, elements: !3681)
!3681 = !{!3682}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3680, file: !3584, line: 272, baseType: !3683, size: 128)
!3683 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_base", file: !3584, line: 271, baseType: !3684)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_base", file: !3584, line: 271, size: 128, elements: !3685)
!3685 = !{!3686, !3687, !3688}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3684, file: !3584, line: 271, baseType: !5, size: 32)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3684, file: !3584, line: 271, baseType: !5, size: 32, offset: 32)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3684, file: !3584, line: 271, baseType: !3689, size: 64, offset: 64)
!3689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3690, size: 64, elements: !2271)
!3690 = !DIDerivedType(tag: DW_TAG_typedef, name: "subscript_p", file: !3584, line: 270, baseType: !3691)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subscript", file: !3584, line: 252, size: 256, elements: !3693)
!3693 = !{!3694, !3703, !3704, !3705}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_a", scope: !3692, file: !3584, line: 256, baseType: !3695, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_typedef, name: "conflict_function", file: !3584, line: 243, baseType: !3697)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3584, line: 239, size: 192, elements: !3698)
!3698 = !{!3699, !3700}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3697, file: !3584, line: 241, baseType: !5, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "fns", scope: !3697, file: !3584, line: 242, baseType: !3701, size: 128, offset: 64)
!3701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3702, size: 128, elements: !2307)
!3702 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_fn", file: !3584, line: 237, baseType: !3603)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_b", scope: !3692, file: !3584, line: 257, baseType: !3695, size: 64, offset: 64)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "last_conflict", scope: !3692, file: !3584, line: 261, baseType: !2354, size: 64, offset: 128)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3692, file: !3584, line: 267, baseType: !2354, size: 64, offset: 192)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !3672, file: !3584, line: 307, baseType: !3618, size: 64, offset: 256)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "dir_vects", scope: !3672, file: !3584, line: 310, baseType: !3708, size: 64, offset: 320)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_heap", file: !3628, line: 33, baseType: !3710)
!3710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_heap", file: !3628, line: 33, size: 128, elements: !3711)
!3711 = !{!3712}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3710, file: !3628, line: 33, baseType: !3632, size: 128)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "dist_vects", scope: !3672, file: !3584, line: 313, baseType: !3708, size: 64, offset: 384)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "inner_loop", scope: !3672, file: !3584, line: 317, baseType: !5, size: 32, offset: 448)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "reversed_p", scope: !3672, file: !3584, line: 320, baseType: !2166, size: 8, offset: 480)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "affine_p", scope: !3672, file: !3584, line: 324, baseType: !2166, size: 8, offset: 488)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "self_reference_p", scope: !3672, file: !3584, line: 328, baseType: !2166, size: 8, offset: 496)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "may_alias_ddrs", scope: !3571, file: !389, line: 225, baseType: !3658, size: 64, offset: 640)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "may_misalign_stmts", scope: !3571, file: !389, line: 229, baseType: !3539, size: 64, offset: 704)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "loop_line_number", scope: !3571, file: !389, line: 232, baseType: !3721, size: 32, offset: 768)
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "LOC", file: !389, line: 27, baseType: !2188)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "strided_stores", scope: !3571, file: !389, line: 236, baseType: !3539, size: 64, offset: 832)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "slp_instances", scope: !3571, file: !389, line: 240, baseType: !3724, size: 64, offset: 896)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_instance_heap", file: !389, line: 153, baseType: !3726)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_instance_heap", file: !389, line: 153, size: 128, elements: !3727)
!3727 = !{!3728}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3726, file: !389, line: 153, baseType: !3729, size: 128)
!3729 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_instance_base", file: !389, line: 152, baseType: !3730)
!3730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_instance_base", file: !389, line: 152, size: 128, elements: !3731)
!3731 = !{!3732, !3733, !3734}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3730, file: !389, line: 152, baseType: !5, size: 32)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3730, file: !389, line: 152, baseType: !5, size: 32, offset: 32)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3730, file: !389, line: 152, baseType: !3735, size: 64, offset: 64)
!3735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3736, size: 64, elements: !2271)
!3736 = !DIDerivedType(tag: DW_TAG_typedef, name: "slp_instance", file: !389, line: 150, baseType: !3737)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slp_instance", file: !389, line: 123, size: 384, elements: !3739)
!3739 = !{!3740, !3741, !3742, !3743, !3748, !3762, !3775}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3738, file: !389, line: 125, baseType: !3532, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "group_size", scope: !3738, file: !389, line: 128, baseType: !5, size: 32, offset: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "unrolling_factor", scope: !3738, file: !389, line: 131, baseType: !5, size: 32, offset: 96)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3738, file: !389, line: 138, baseType: !3744, size: 64, offset: 128)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3738, file: !389, line: 134, size: 64, elements: !3745)
!3745 = !{!3746, !3747}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !3744, file: !389, line: 136, baseType: !2256, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !3744, file: !389, line: 137, baseType: !2256, size: 32, offset: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "load_permutation", scope: !3738, file: !389, line: 142, baseType: !3749, size: 64, offset: 192)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !3751, line: 32, baseType: !3752)
!3751 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !3751, line: 32, size: 96, elements: !3753)
!3753 = !{!3754}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3752, file: !3751, line: 32, baseType: !3755, size: 96)
!3755 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !3751, line: 31, baseType: !3756)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !3751, line: 31, size: 96, elements: !3757)
!3757 = !{!3758, !3759, !3760}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3756, file: !3751, line: 31, baseType: !5, size: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3756, file: !3751, line: 31, baseType: !5, size: 32, offset: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3756, file: !3751, line: 31, baseType: !3761, size: 32, offset: 64)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 32, elements: !2271)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "loads", scope: !3738, file: !389, line: 145, baseType: !3763, size: 64, offset: 256)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_tree_heap", file: !389, line: 119, baseType: !3765)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_tree_heap", file: !389, line: 119, size: 128, elements: !3766)
!3766 = !{!3767}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3765, file: !389, line: 119, baseType: !3768, size: 128)
!3768 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_tree_base", file: !389, line: 118, baseType: !3769)
!3769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_tree_base", file: !389, line: 118, size: 128, elements: !3770)
!3770 = !{!3771, !3772, !3773}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3769, file: !389, line: 118, baseType: !5, size: 32)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3769, file: !389, line: 118, baseType: !5, size: 32, offset: 32)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3769, file: !389, line: 118, baseType: !3774, size: 64, offset: 64)
!3774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3532, size: 64, elements: !2271)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "first_load", scope: !3738, file: !389, line: 149, baseType: !2167, size: 64, offset: 320)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "slp_unrolling_factor", scope: !3571, file: !389, line: 244, baseType: !5, size: 32, offset: 960)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "relevant", scope: !3564, file: !389, line: 414, baseType: !404, size: 32, offset: 192)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3564, file: !389, line: 418, baseType: !2166, size: 8, offset: 224)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "vectype", scope: !3564, file: !389, line: 421, baseType: !2354, size: 64, offset: 256)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "vectorized_stmt", scope: !3564, file: !389, line: 424, baseType: !2167, size: 64, offset: 320)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "data_ref_info", scope: !3564, file: !389, line: 433, baseType: !3582, size: 64, offset: 384)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "dr_base_address", scope: !3564, file: !389, line: 437, baseType: !2354, size: 64, offset: 448)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "dr_init", scope: !3564, file: !389, line: 438, baseType: !2354, size: 64, offset: 512)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "dr_offset", scope: !3564, file: !389, line: 439, baseType: !2354, size: 64, offset: 576)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "dr_step", scope: !3564, file: !389, line: 440, baseType: !2354, size: 64, offset: 640)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "dr_aligned_to", scope: !3564, file: !389, line: 441, baseType: !2354, size: 64, offset: 704)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "in_pattern_p", scope: !3564, file: !389, line: 444, baseType: !2166, size: 8, offset: 768)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "related_stmt", scope: !3564, file: !389, line: 455, baseType: !2167, size: 64, offset: 832)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "same_align_refs", scope: !3564, file: !389, line: 459, baseType: !3790, size: 64, offset: 896)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_dr_p_heap", file: !389, line: 399, baseType: !3792)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_dr_p_heap", file: !389, line: 399, size: 128, elements: !3793)
!3793 = !{!3794}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3792, file: !389, line: 399, baseType: !3795, size: 128)
!3795 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_dr_p_base", file: !389, line: 398, baseType: !3796)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_dr_p_base", file: !389, line: 398, size: 128, elements: !3797)
!3797 = !{!3798, !3799, !3800}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3796, file: !389, line: 398, baseType: !5, size: 32)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3796, file: !389, line: 398, baseType: !5, size: 32, offset: 32)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3796, file: !389, line: 398, baseType: !3801, size: 64, offset: 64)
!3801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3802, size: 64, elements: !2271)
!3802 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_p", file: !389, line: 397, baseType: !3582)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "def_type", scope: !3564, file: !389, line: 462, baseType: !411, size: 32, offset: 960)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "first_dr", scope: !3564, file: !389, line: 466, baseType: !2167, size: 64, offset: 1024)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "next_dr", scope: !3564, file: !389, line: 468, baseType: !2167, size: 64, offset: 1088)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3564, file: !389, line: 470, baseType: !5, size: 32, offset: 1152)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "store_count", scope: !3564, file: !389, line: 473, baseType: !5, size: 32, offset: 1184)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "gap", scope: !3564, file: !389, line: 476, baseType: !5, size: 32, offset: 1216)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "same_dr_stmt", scope: !3564, file: !389, line: 479, baseType: !2167, size: 64, offset: 1280)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "read_write_dep", scope: !3564, file: !389, line: 482, baseType: !2166, size: 8, offset: 1344)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3564, file: !389, line: 489, baseType: !3812, size: 64, offset: 1376)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3564, file: !389, line: 485, size: 64, elements: !3813)
!3813 = !{!3814, !3815}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !3812, file: !389, line: 487, baseType: !2256, size: 32)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !3812, file: !389, line: 488, baseType: !2256, size: 32, offset: 32)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "slp_type", scope: !3564, file: !389, line: 492, baseType: !422, size: 32, offset: 1440)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vinfo", scope: !3564, file: !389, line: 495, baseType: !3818, size: 64, offset: 1472)
!3818 = !DIDerivedType(tag: DW_TAG_typedef, name: "bb_vec_info", file: !389, line: 319, baseType: !3819)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_bb_vec_info", file: !389, line: 303, size: 320, elements: !3821)
!3821 = !{!3822, !3823, !3824, !3825, !3826}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3820, file: !389, line: 305, baseType: !2616, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "strided_stores", scope: !3820, file: !389, line: 308, baseType: !3539, size: 64, offset: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "slp_instances", scope: !3820, file: !389, line: 312, baseType: !3724, size: 64, offset: 128)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "datarefs", scope: !3820, file: !389, line: 315, baseType: !3644, size: 64, offset: 192)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "ddrs", scope: !3820, file: !389, line: 318, baseType: !3658, size: 64, offset: 256)
!3827 = !DILocalVariable(name: "loop_vinfo", scope: !2163, file: !1, line: 1542, type: !3569)
!3828 = !DILocalVariable(name: "code", scope: !2163, file: !1, line: 1543, type: !181)
!3829 = !DILocalVariable(name: "code1", scope: !2163, file: !1, line: 1543, type: !181)
!3830 = !DILocalVariable(name: "code2", scope: !2163, file: !1, line: 1543, type: !181)
!3831 = !DILocalVariable(name: "decl1", scope: !2163, file: !1, line: 1544, type: !2354)
!3832 = !DILocalVariable(name: "decl2", scope: !2163, file: !1, line: 1544, type: !2354)
!3833 = !DILocalVariable(name: "new_temp", scope: !2163, file: !1, line: 1545, type: !2354)
!3834 = !DILocalVariable(name: "def", scope: !2163, file: !1, line: 1546, type: !2354)
!3835 = !DILocalVariable(name: "def_stmt", scope: !2163, file: !1, line: 1547, type: !2167)
!3836 = !DILocalVariable(name: "dt", scope: !2163, file: !1, line: 1548, type: !3837)
!3837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 64, elements: !2307)
!3838 = !DILocalVariable(name: "new_stmt", scope: !2163, file: !1, line: 1549, type: !2167)
!3839 = !DILocalVariable(name: "prev_stmt_info", scope: !2163, file: !1, line: 1550, type: !3562)
!3840 = !DILocalVariable(name: "nunits_in", scope: !2163, file: !1, line: 1551, type: !2256)
!3841 = !DILocalVariable(name: "nunits_out", scope: !2163, file: !1, line: 1552, type: !2256)
!3842 = !DILocalVariable(name: "vectype_out", scope: !2163, file: !1, line: 1553, type: !2354)
!3843 = !DILocalVariable(name: "vectype_in", scope: !2163, file: !1, line: 1553, type: !2354)
!3844 = !DILocalVariable(name: "ncopies", scope: !2163, file: !1, line: 1554, type: !2256)
!3845 = !DILocalVariable(name: "j", scope: !2163, file: !1, line: 1554, type: !2256)
!3846 = !DILocalVariable(name: "rhs_type", scope: !2163, file: !1, line: 1555, type: !2354)
!3847 = !DILocalVariable(name: "lhs_type", scope: !2163, file: !1, line: 1555, type: !2354)
!3848 = !DILocalVariable(name: "builtin_decl", scope: !2163, file: !1, line: 1556, type: !2354)
!3849 = !DILocalVariable(name: "modifier", scope: !2163, file: !1, line: 1557, type: !2162)
!3850 = !DILocalVariable(name: "i", scope: !2163, file: !1, line: 1558, type: !2256)
!3851 = !DILocalVariable(name: "vec_oprnds0", scope: !2163, file: !1, line: 1559, type: !3603)
!3852 = !DILocalVariable(name: "vop0", scope: !2163, file: !1, line: 1560, type: !2354)
!3853 = !DILocalVariable(name: "integral_type", scope: !2163, file: !1, line: 1561, type: !2354)
!3854 = !DILocalVariable(name: "dummy", scope: !2163, file: !1, line: 1562, type: !3603)
!3855 = !DILocalVariable(name: "dummy_int", scope: !2163, file: !1, line: 1563, type: !2256)
!3856 = !{!3857, !3858, !3859}
!3857 = !DIEnumerator(name: "NARROW", value: 0, isUnsigned: true)
!3858 = !DIEnumerator(name: "NONE", value: 1, isUnsigned: true)
!3859 = !DIEnumerator(name: "WIDEN", value: 2, isUnsigned: true)
!3860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dr_alignment_support", file: !389, line: 48, baseType: !5, size: 32, elements: !3861)
!3861 = !{!3862, !3863, !3864, !3865, !3866}
!3862 = !DIEnumerator(name: "dr_unaligned_unsupported", value: 0, isUnsigned: true)
!3863 = !DIEnumerator(name: "dr_unaligned_supported", value: 1, isUnsigned: true)
!3864 = !DIEnumerator(name: "dr_explicit_realign", value: 2, isUnsigned: true)
!3865 = !DIEnumerator(name: "dr_explicit_realign_optimized", value: 3, isUnsigned: true)
!3866 = !DIEnumerator(name: "dr_aligned", value: 4, isUnsigned: true)
!3867 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !3868, file: !1, line: 1238, baseType: !5, size: 32, elements: !3856)
!3868 = distinct !DISubprogram(name: "vectorizable_call", scope: !1, file: !1, line: 1221, type: !3869, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3871)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!2166, !2167, !3524, !3531}
!3871 = !{!3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901}
!3872 = !DILocalVariable(name: "stmt", arg: 1, scope: !3868, file: !1, line: 1221, type: !2167)
!3873 = !DILocalVariable(name: "gsi", arg: 2, scope: !3868, file: !1, line: 1221, type: !3524)
!3874 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !3868, file: !1, line: 1221, type: !3531)
!3875 = !DILocalVariable(name: "vec_dest", scope: !3868, file: !1, line: 1223, type: !2354)
!3876 = !DILocalVariable(name: "scalar_dest", scope: !3868, file: !1, line: 1224, type: !2354)
!3877 = !DILocalVariable(name: "op", scope: !3868, file: !1, line: 1225, type: !2354)
!3878 = !DILocalVariable(name: "type", scope: !3868, file: !1, line: 1225, type: !2354)
!3879 = !DILocalVariable(name: "vec_oprnd0", scope: !3868, file: !1, line: 1226, type: !2354)
!3880 = !DILocalVariable(name: "vec_oprnd1", scope: !3868, file: !1, line: 1226, type: !2354)
!3881 = !DILocalVariable(name: "stmt_info", scope: !3868, file: !1, line: 1227, type: !3562)
!3882 = !DILocalVariable(name: "prev_stmt_info", scope: !3868, file: !1, line: 1227, type: !3562)
!3883 = !DILocalVariable(name: "vectype_out", scope: !3868, file: !1, line: 1228, type: !2354)
!3884 = !DILocalVariable(name: "vectype_in", scope: !3868, file: !1, line: 1228, type: !2354)
!3885 = !DILocalVariable(name: "nunits_in", scope: !3868, file: !1, line: 1229, type: !2256)
!3886 = !DILocalVariable(name: "nunits_out", scope: !3868, file: !1, line: 1230, type: !2256)
!3887 = !DILocalVariable(name: "loop_vinfo", scope: !3868, file: !1, line: 1231, type: !3569)
!3888 = !DILocalVariable(name: "fndecl", scope: !3868, file: !1, line: 1232, type: !2354)
!3889 = !DILocalVariable(name: "new_temp", scope: !3868, file: !1, line: 1232, type: !2354)
!3890 = !DILocalVariable(name: "def", scope: !3868, file: !1, line: 1232, type: !2354)
!3891 = !DILocalVariable(name: "rhs_type", scope: !3868, file: !1, line: 1232, type: !2354)
!3892 = !DILocalVariable(name: "lhs_type", scope: !3868, file: !1, line: 1232, type: !2354)
!3893 = !DILocalVariable(name: "def_stmt", scope: !3868, file: !1, line: 1233, type: !2167)
!3894 = !DILocalVariable(name: "dt", scope: !3868, file: !1, line: 1234, type: !3837)
!3895 = !DILocalVariable(name: "new_stmt", scope: !3868, file: !1, line: 1235, type: !2167)
!3896 = !DILocalVariable(name: "ncopies", scope: !3868, file: !1, line: 1236, type: !2256)
!3897 = !DILocalVariable(name: "j", scope: !3868, file: !1, line: 1236, type: !2256)
!3898 = !DILocalVariable(name: "vargs", scope: !3868, file: !1, line: 1237, type: !3603)
!3899 = !DILocalVariable(name: "modifier", scope: !3868, file: !1, line: 1238, type: !3867)
!3900 = !DILocalVariable(name: "i", scope: !3868, file: !1, line: 1239, type: !2674)
!3901 = !DILocalVariable(name: "nargs", scope: !3868, file: !1, line: 1239, type: !2674)
!3902 = !{!3903, !2166, !2256, !3904, !2344, !2259, !2306, !2354, !181, !434, !3562, !3905, !3539, !3906, !5, !3907, !2765, !2329, !2169, !3910, !3912, !3913, !2156, !3603, !2188, !2674, !3790}
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!3905 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3906 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !428, line: 27, baseType: !2765)
!3907 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !428, line: 30, baseType: !3908)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !149, line: 1893, baseType: !2772)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2170)
!3912 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec_void_p", file: !389, line: 613, baseType: !2344)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vec_void_p_heap", file: !389, line: 615, baseType: !3915)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vec_void_p_heap", file: !389, line: 615, size: 128, elements: !3916)
!3916 = !{!3917}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3915, file: !389, line: 615, baseType: !3918, size: 128)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_vec_void_p_base", file: !389, line: 614, baseType: !3919)
!3919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_vec_void_p_base", file: !389, line: 614, size: 128, elements: !3920)
!3920 = !{!3921, !3922, !3923}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3919, file: !389, line: 614, baseType: !5, size: 32)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3919, file: !389, line: 614, baseType: !5, size: 32, offset: 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3919, file: !389, line: 614, baseType: !3924, size: 64, offset: 64)
!3924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3912, size: 64, elements: !2271)
!3925 = !{i32 2, !"Dwarf Version", i32 4}
!3926 = !{i32 2, !"Debug Info Version", i32 3}
!3927 = !{i32 1, !"wchar_size", i32 4}
!3928 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!3929 = distinct !DISubprogram(name: "vprintf", scope: !3930, file: !3930, line: 39, type: !3931, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3941)
!3930 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!2256, !3933, !3934}
!3933 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2259)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, size: 192, elements: !3936)
!3936 = !{!3937, !3938, !3939, !3940}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3935, file: !1, baseType: !5, size: 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3935, file: !1, baseType: !5, size: 32, offset: 32)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3935, file: !1, baseType: !2344, size: 64, offset: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3935, file: !1, baseType: !2344, size: 64, offset: 128)
!3941 = !{!3942, !3943}
!3942 = !DILocalVariable(name: "__fmt", arg: 1, scope: !3929, file: !3930, line: 39, type: !3933)
!3943 = !DILocalVariable(name: "__arg", arg: 2, scope: !3929, file: !3930, line: 39, type: !3934)
!3944 = !DILocation(line: 0, scope: !3929)
!3945 = !DILocation(line: 41, column: 20, scope: !3929)
!3946 = !DILocation(line: 41, column: 10, scope: !3929)
!3947 = !DILocation(line: 41, column: 3, scope: !3929)
!3948 = distinct !DISubprogram(name: "getchar", scope: !3930, file: !3930, line: 47, type: !3949, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3951)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!2256}
!3951 = !{}
!3952 = !DILocation(line: 49, column: 16, scope: !3948)
!3953 = !DILocation(line: 49, column: 10, scope: !3948)
!3954 = !DILocation(line: 49, column: 3, scope: !3948)
!3955 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !3930, file: !3930, line: 56, type: !3956, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4008)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!2256, !3958}
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3960, line: 7, baseType: !3961)
!3960 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3962, line: 49, size: 1728, elements: !3963)
!3962 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3963 = !{!3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3979, !3981, !3982, !3983, !3986, !3987, !3988, !3989, !3992, !3994, !3997, !4000, !4001, !4002, !4003, !4004}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3961, file: !3962, line: 51, baseType: !2256, size: 32)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3961, file: !3962, line: 54, baseType: !2329, size: 64, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3961, file: !3962, line: 55, baseType: !2329, size: 64, offset: 128)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3961, file: !3962, line: 56, baseType: !2329, size: 64, offset: 192)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3961, file: !3962, line: 57, baseType: !2329, size: 64, offset: 256)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3961, file: !3962, line: 58, baseType: !2329, size: 64, offset: 320)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3961, file: !3962, line: 59, baseType: !2329, size: 64, offset: 384)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3961, file: !3962, line: 60, baseType: !2329, size: 64, offset: 448)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3961, file: !3962, line: 61, baseType: !2329, size: 64, offset: 512)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3961, file: !3962, line: 64, baseType: !2329, size: 64, offset: 576)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3961, file: !3962, line: 65, baseType: !2329, size: 64, offset: 640)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3961, file: !3962, line: 66, baseType: !2329, size: 64, offset: 704)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3961, file: !3962, line: 68, baseType: !3977, size: 64, offset: 768)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3962, line: 36, flags: DIFlagFwdDecl)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3961, file: !3962, line: 70, baseType: !3980, size: 64, offset: 832)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3961, file: !3962, line: 72, baseType: !2256, size: 32, offset: 896)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3961, file: !3962, line: 73, baseType: !2256, size: 32, offset: 928)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3961, file: !3962, line: 74, baseType: !3984, size: 64, offset: 960)
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3985, line: 152, baseType: !2323)
!3985 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3961, file: !3962, line: 77, baseType: !3905, size: 16, offset: 1024)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3961, file: !3962, line: 78, baseType: !3101, size: 8, offset: 1040)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3961, file: !3962, line: 79, baseType: !2449, size: 8, offset: 1048)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3961, file: !3962, line: 81, baseType: !3990, size: 64, offset: 1088)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3962, line: 43, baseType: null)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3961, file: !3962, line: 89, baseType: !3993, size: 64, offset: 1152)
!3993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3985, line: 153, baseType: !2323)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3961, file: !3962, line: 91, baseType: !3995, size: 64, offset: 1216)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3962, line: 37, flags: DIFlagFwdDecl)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3961, file: !3962, line: 92, baseType: !3998, size: 64, offset: 1280)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3962, line: 38, flags: DIFlagFwdDecl)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3961, file: !3962, line: 93, baseType: !3980, size: 64, offset: 1344)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3961, file: !3962, line: 94, baseType: !2344, size: 64, offset: 1408)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3961, file: !3962, line: 95, baseType: !2674, size: 64, offset: 1472)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3961, file: !3962, line: 96, baseType: !2256, size: 32, offset: 1536)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3961, file: !3962, line: 98, baseType: !4005, size: 160, offset: 1568)
!4005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 160, elements: !4006)
!4006 = !{!4007}
!4007 = !DISubrange(count: 20)
!4008 = !{!4009}
!4009 = !DILocalVariable(name: "__fp", arg: 1, scope: !3955, file: !3930, line: 56, type: !3958)
!4010 = !DILocation(line: 0, scope: !3955)
!4011 = !DILocation(line: 58, column: 10, scope: !3955)
!4012 = !DILocation(line: 58, column: 3, scope: !3955)
!4013 = distinct !DISubprogram(name: "getc_unlocked", scope: !3930, file: !3930, line: 66, type: !3956, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4014)
!4014 = !{!4015}
!4015 = !DILocalVariable(name: "__fp", arg: 1, scope: !4013, file: !3930, line: 66, type: !3958)
!4016 = !DILocation(line: 0, scope: !4013)
!4017 = !DILocation(line: 68, column: 10, scope: !4013)
!4018 = !DILocation(line: 68, column: 3, scope: !4013)
!4019 = distinct !DISubprogram(name: "getchar_unlocked", scope: !3930, file: !3930, line: 73, type: !3949, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3951)
!4020 = !DILocation(line: 75, column: 10, scope: !4019)
!4021 = !DILocation(line: 75, column: 3, scope: !4019)
!4022 = distinct !DISubprogram(name: "putchar", scope: !3930, file: !3930, line: 82, type: !4023, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4025)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!2256, !2256}
!4025 = !{!4026}
!4026 = !DILocalVariable(name: "__c", arg: 1, scope: !4022, file: !3930, line: 82, type: !2256)
!4027 = !DILocation(line: 0, scope: !4022)
!4028 = !DILocation(line: 84, column: 21, scope: !4022)
!4029 = !DILocation(line: 84, column: 10, scope: !4022)
!4030 = !DILocation(line: 84, column: 3, scope: !4022)
!4031 = distinct !DISubprogram(name: "fputc_unlocked", scope: !3930, file: !3930, line: 91, type: !4032, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4034)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!2256, !2256, !3958}
!4034 = !{!4035, !4036}
!4035 = !DILocalVariable(name: "__c", arg: 1, scope: !4031, file: !3930, line: 91, type: !2256)
!4036 = !DILocalVariable(name: "__stream", arg: 2, scope: !4031, file: !3930, line: 91, type: !3958)
!4037 = !DILocation(line: 0, scope: !4031)
!4038 = !DILocation(line: 93, column: 10, scope: !4031)
!4039 = !DILocation(line: 93, column: 3, scope: !4031)
!4040 = distinct !DISubprogram(name: "putc_unlocked", scope: !3930, file: !3930, line: 101, type: !4032, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4041)
!4041 = !{!4042, !4043}
!4042 = !DILocalVariable(name: "__c", arg: 1, scope: !4040, file: !3930, line: 101, type: !2256)
!4043 = !DILocalVariable(name: "__stream", arg: 2, scope: !4040, file: !3930, line: 101, type: !3958)
!4044 = !DILocation(line: 0, scope: !4040)
!4045 = !DILocation(line: 103, column: 10, scope: !4040)
!4046 = !DILocation(line: 103, column: 3, scope: !4040)
!4047 = distinct !DISubprogram(name: "putchar_unlocked", scope: !3930, file: !3930, line: 108, type: !4023, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4048)
!4048 = !{!4049}
!4049 = !DILocalVariable(name: "__c", arg: 1, scope: !4047, file: !3930, line: 108, type: !2256)
!4050 = !DILocation(line: 0, scope: !4047)
!4051 = !DILocation(line: 110, column: 10, scope: !4047)
!4052 = !DILocation(line: 110, column: 3, scope: !4047)
!4053 = distinct !DISubprogram(name: "getline", scope: !3930, file: !3930, line: 118, type: !4054, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4058)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!4056, !3904, !4057, !3958}
!4056 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !3985, line: 193, baseType: !2323)
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!4058 = !{!4059, !4060, !4061}
!4059 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !4053, file: !3930, line: 118, type: !3904)
!4060 = !DILocalVariable(name: "__n", arg: 2, scope: !4053, file: !3930, line: 118, type: !4057)
!4061 = !DILocalVariable(name: "__stream", arg: 3, scope: !4053, file: !3930, line: 118, type: !3958)
!4062 = !DILocation(line: 0, scope: !4053)
!4063 = !DILocation(line: 120, column: 10, scope: !4053)
!4064 = !DILocation(line: 120, column: 3, scope: !4053)
!4065 = distinct !DISubprogram(name: "feof_unlocked", scope: !3930, file: !3930, line: 128, type: !3956, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4066)
!4066 = !{!4067}
!4067 = !DILocalVariable(name: "__stream", arg: 1, scope: !4065, file: !3930, line: 128, type: !3958)
!4068 = !DILocation(line: 0, scope: !4065)
!4069 = !DILocation(line: 130, column: 10, scope: !4065)
!4070 = !DILocation(line: 130, column: 3, scope: !4065)
!4071 = distinct !DISubprogram(name: "ferror_unlocked", scope: !3930, file: !3930, line: 135, type: !3956, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4072)
!4072 = !{!4073}
!4073 = !DILocalVariable(name: "__stream", arg: 1, scope: !4071, file: !3930, line: 135, type: !3958)
!4074 = !DILocation(line: 0, scope: !4071)
!4075 = !DILocation(line: 137, column: 10, scope: !4071)
!4076 = !DILocation(line: 137, column: 3, scope: !4071)
!4077 = distinct !DISubprogram(name: "tolower", scope: !4078, file: !4078, line: 207, type: !4023, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4079)
!4078 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!4079 = !{!4080}
!4080 = !DILocalVariable(name: "__c", arg: 1, scope: !4077, file: !4078, line: 207, type: !2256)
!4081 = !DILocation(line: 0, scope: !4077)
!4082 = !DILocation(line: 209, column: 22, scope: !4077)
!4083 = !DILocation(line: 209, column: 39, scope: !4077)
!4084 = !DILocation(line: 209, column: 38, scope: !4077)
!4085 = !DILocation(line: 209, column: 37, scope: !4077)
!4086 = !DILocation(line: 209, column: 10, scope: !4077)
!4087 = !DILocation(line: 209, column: 3, scope: !4077)
!4088 = distinct !DISubprogram(name: "toupper", scope: !4078, file: !4078, line: 213, type: !4023, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4089)
!4089 = !{!4090}
!4090 = !DILocalVariable(name: "__c", arg: 1, scope: !4088, file: !4078, line: 213, type: !2256)
!4091 = !DILocation(line: 0, scope: !4088)
!4092 = !DILocation(line: 215, column: 22, scope: !4088)
!4093 = !DILocation(line: 215, column: 39, scope: !4088)
!4094 = !DILocation(line: 215, column: 38, scope: !4088)
!4095 = !DILocation(line: 215, column: 37, scope: !4088)
!4096 = !DILocation(line: 215, column: 10, scope: !4088)
!4097 = !DILocation(line: 215, column: 3, scope: !4088)
!4098 = distinct !DISubprogram(name: "atoi", scope: !4099, file: !4099, line: 361, type: !4100, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4102)
!4099 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!2256, !2259}
!4102 = !{!4103}
!4103 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4098, file: !4099, line: 361, type: !2259)
!4104 = !DILocation(line: 0, scope: !4098)
!4105 = !DILocation(line: 363, column: 16, scope: !4098)
!4106 = !DILocation(line: 363, column: 10, scope: !4098)
!4107 = !DILocation(line: 363, column: 3, scope: !4098)
!4108 = distinct !DISubprogram(name: "atol", scope: !4099, file: !4099, line: 366, type: !4109, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4111)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!2323, !2259}
!4111 = !{!4112}
!4112 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4108, file: !4099, line: 366, type: !2259)
!4113 = !DILocation(line: 0, scope: !4108)
!4114 = !DILocation(line: 368, column: 10, scope: !4108)
!4115 = !DILocation(line: 368, column: 3, scope: !4108)
!4116 = distinct !DISubprogram(name: "atoll", scope: !4099, file: !4099, line: 373, type: !4117, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4120)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!4119, !2259}
!4119 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!4120 = !{!4121}
!4121 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4116, file: !4099, line: 373, type: !2259)
!4122 = !DILocation(line: 0, scope: !4116)
!4123 = !DILocation(line: 375, column: 10, scope: !4116)
!4124 = !DILocation(line: 375, column: 3, scope: !4116)
!4125 = distinct !DISubprogram(name: "bsearch", scope: !4126, file: !4126, line: 20, type: !4127, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4130)
!4126 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!4127 = !DISubroutineType(types: !4128)
!4128 = !{!2344, !2659, !2659, !2674, !2674, !4129}
!4129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !4099, line: 808, baseType: !2663)
!4130 = !{!4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140}
!4131 = !DILocalVariable(name: "__key", arg: 1, scope: !4125, file: !4126, line: 20, type: !2659)
!4132 = !DILocalVariable(name: "__base", arg: 2, scope: !4125, file: !4126, line: 20, type: !2659)
!4133 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !4125, file: !4126, line: 20, type: !2674)
!4134 = !DILocalVariable(name: "__size", arg: 4, scope: !4125, file: !4126, line: 20, type: !2674)
!4135 = !DILocalVariable(name: "__compar", arg: 5, scope: !4125, file: !4126, line: 21, type: !4129)
!4136 = !DILocalVariable(name: "__l", scope: !4125, file: !4126, line: 23, type: !2674)
!4137 = !DILocalVariable(name: "__u", scope: !4125, file: !4126, line: 23, type: !2674)
!4138 = !DILocalVariable(name: "__idx", scope: !4125, file: !4126, line: 23, type: !2674)
!4139 = !DILocalVariable(name: "__p", scope: !4125, file: !4126, line: 24, type: !2659)
!4140 = !DILocalVariable(name: "__comparison", scope: !4125, file: !4126, line: 25, type: !2256)
!4141 = !DILocation(line: 0, scope: !4125)
!4142 = !DILocation(line: 29, column: 3, scope: !4125)
!4143 = !DILocation(line: 27, column: 7, scope: !4125)
!4144 = !DILocation(line: 29, column: 14, scope: !4125)
!4145 = !DILocation(line: 31, column: 20, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4125, file: !4126, line: 30, column: 5)
!4147 = !DILocation(line: 31, column: 27, scope: !4146)
!4148 = !DILocation(line: 32, column: 56, scope: !4146)
!4149 = !DILocation(line: 32, column: 47, scope: !4146)
!4150 = !DILocation(line: 33, column: 22, scope: !4146)
!4151 = !DILocation(line: 34, column: 24, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4146, file: !4126, line: 34, column: 11)
!4153 = !DILocation(line: 34, column: 11, scope: !4146)
!4154 = !DILocation(line: 36, column: 29, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4152, file: !4126, line: 36, column: 16)
!4156 = !DILocation(line: 36, column: 16, scope: !4152)
!4157 = !DILocation(line: 37, column: 14, scope: !4155)
!4158 = distinct !{!4158, !4142, !4159}
!4159 = !DILocation(line: 40, column: 5, scope: !4125)
!4160 = !DILocation(line: 43, column: 1, scope: !4125)
!4161 = distinct !DISubprogram(name: "atof", scope: !4162, file: !4162, line: 25, type: !4163, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4166)
!4162 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!4165, !2259}
!4165 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4166 = !{!4167}
!4167 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4161, file: !4162, line: 25, type: !2259)
!4168 = !DILocation(line: 0, scope: !4161)
!4169 = !DILocation(line: 27, column: 10, scope: !4161)
!4170 = !DILocation(line: 27, column: 3, scope: !4161)
!4171 = distinct !DISubprogram(name: "strtoimax", scope: !4172, file: !4172, line: 324, type: !4173, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4179)
!4172 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!4175, !3933, !4178, !2256}
!4175 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !4176, line: 101, baseType: !4177)
!4176 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!4177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !3985, line: 72, baseType: !2323)
!4178 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3904)
!4179 = !{!4180, !4181, !4182}
!4180 = !DILocalVariable(name: "nptr", arg: 1, scope: !4171, file: !4172, line: 324, type: !3933)
!4181 = !DILocalVariable(name: "endptr", arg: 2, scope: !4171, file: !4172, line: 324, type: !4178)
!4182 = !DILocalVariable(name: "base", arg: 3, scope: !4171, file: !4172, line: 324, type: !2256)
!4183 = !DILocation(line: 0, scope: !4171)
!4184 = !DILocation(line: 327, column: 10, scope: !4171)
!4185 = !DILocation(line: 327, column: 3, scope: !4171)
!4186 = distinct !DISubprogram(name: "strtoumax", scope: !4172, file: !4172, line: 336, type: !4187, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4191)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!4189, !3933, !4178, !2256}
!4189 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !4176, line: 102, baseType: !4190)
!4190 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !3985, line: 73, baseType: !2306)
!4191 = !{!4192, !4193, !4194}
!4192 = !DILocalVariable(name: "nptr", arg: 1, scope: !4186, file: !4172, line: 336, type: !3933)
!4193 = !DILocalVariable(name: "endptr", arg: 2, scope: !4186, file: !4172, line: 336, type: !4178)
!4194 = !DILocalVariable(name: "base", arg: 3, scope: !4186, file: !4172, line: 336, type: !2256)
!4195 = !DILocation(line: 0, scope: !4186)
!4196 = !DILocation(line: 339, column: 10, scope: !4186)
!4197 = !DILocation(line: 339, column: 3, scope: !4186)
!4198 = distinct !DISubprogram(name: "wcstoimax", scope: !4172, file: !4172, line: 348, type: !4199, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4208)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{!4175, !4201, !4205, !2256}
!4201 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !4202)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4204)
!4204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !4172, line: 34, baseType: !2256)
!4205 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !4206)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4208 = !{!4209, !4210, !4211}
!4209 = !DILocalVariable(name: "nptr", arg: 1, scope: !4198, file: !4172, line: 348, type: !4201)
!4210 = !DILocalVariable(name: "endptr", arg: 2, scope: !4198, file: !4172, line: 348, type: !4205)
!4211 = !DILocalVariable(name: "base", arg: 3, scope: !4198, file: !4172, line: 348, type: !2256)
!4212 = !DILocation(line: 0, scope: !4198)
!4213 = !DILocation(line: 351, column: 10, scope: !4198)
!4214 = !DILocation(line: 351, column: 3, scope: !4198)
!4215 = distinct !DISubprogram(name: "wcstoumax", scope: !4172, file: !4172, line: 362, type: !4216, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4218)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!4189, !4201, !4205, !2256}
!4218 = !{!4219, !4220, !4221}
!4219 = !DILocalVariable(name: "nptr", arg: 1, scope: !4215, file: !4172, line: 362, type: !4201)
!4220 = !DILocalVariable(name: "endptr", arg: 2, scope: !4215, file: !4172, line: 362, type: !4205)
!4221 = !DILocalVariable(name: "base", arg: 3, scope: !4215, file: !4172, line: 362, type: !2256)
!4222 = !DILocation(line: 0, scope: !4215)
!4223 = !DILocation(line: 365, column: 10, scope: !4215)
!4224 = !DILocation(line: 365, column: 3, scope: !4215)
!4225 = distinct !DISubprogram(name: "stat", scope: !4226, file: !4226, line: 453, type: !4227, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4264)
!4226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!4227 = !DISubroutineType(types: !4228)
!4228 = !{!2256, !2259, !4229}
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !4231, line: 46, size: 1152, elements: !4232)
!4231 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!4232 = !{!4233, !4235, !4237, !4239, !4241, !4243, !4245, !4246, !4247, !4248, !4250, !4252, !4260, !4261, !4262}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4230, file: !4231, line: 48, baseType: !4234, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !3985, line: 145, baseType: !2306)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4230, file: !4231, line: 53, baseType: !4236, size: 64, offset: 64)
!4236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !3985, line: 148, baseType: !2306)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4230, file: !4231, line: 61, baseType: !4238, size: 64, offset: 128)
!4238 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !3985, line: 151, baseType: !2306)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4230, file: !4231, line: 62, baseType: !4240, size: 32, offset: 192)
!4240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !3985, line: 150, baseType: !5)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4230, file: !4231, line: 64, baseType: !4242, size: 32, offset: 224)
!4242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !3985, line: 146, baseType: !5)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4230, file: !4231, line: 65, baseType: !4244, size: 32, offset: 256)
!4244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !3985, line: 147, baseType: !5)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4230, file: !4231, line: 67, baseType: !2256, size: 32, offset: 288)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4230, file: !4231, line: 69, baseType: !4234, size: 64, offset: 320)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4230, file: !4231, line: 74, baseType: !3984, size: 64, offset: 384)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4230, file: !4231, line: 78, baseType: !4249, size: 64, offset: 448)
!4249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !3985, line: 174, baseType: !2323)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4230, file: !4231, line: 80, baseType: !4251, size: 64, offset: 512)
!4251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !3985, line: 179, baseType: !2323)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4230, file: !4231, line: 91, baseType: !4253, size: 128, offset: 576)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !4254, line: 10, size: 128, elements: !4255)
!4254 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!4255 = !{!4256, !4258}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4253, file: !4254, line: 12, baseType: !4257, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3985, line: 160, baseType: !2323)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4253, file: !4254, line: 16, baseType: !4259, size: 64, offset: 64)
!4259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !3985, line: 196, baseType: !2323)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4230, file: !4231, line: 92, baseType: !4253, size: 128, offset: 704)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4230, file: !4231, line: 93, baseType: !4253, size: 128, offset: 832)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4230, file: !4231, line: 106, baseType: !4263, size: 192, offset: 960)
!4263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4259, size: 192, elements: !2425)
!4264 = !{!4265, !4266}
!4265 = !DILocalVariable(name: "__path", arg: 1, scope: !4225, file: !4226, line: 453, type: !2259)
!4266 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4225, file: !4226, line: 453, type: !4229)
!4267 = !DILocation(line: 0, scope: !4225)
!4268 = !DILocation(line: 455, column: 10, scope: !4225)
!4269 = !DILocation(line: 455, column: 3, scope: !4225)
!4270 = distinct !DISubprogram(name: "lstat", scope: !4226, file: !4226, line: 460, type: !4227, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4271)
!4271 = !{!4272, !4273}
!4272 = !DILocalVariable(name: "__path", arg: 1, scope: !4270, file: !4226, line: 460, type: !2259)
!4273 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4270, file: !4226, line: 460, type: !4229)
!4274 = !DILocation(line: 0, scope: !4270)
!4275 = !DILocation(line: 462, column: 10, scope: !4270)
!4276 = !DILocation(line: 462, column: 3, scope: !4270)
!4277 = distinct !DISubprogram(name: "fstat", scope: !4226, file: !4226, line: 467, type: !4278, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4280)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!2256, !2256, !4229}
!4280 = !{!4281, !4282}
!4281 = !DILocalVariable(name: "__fd", arg: 1, scope: !4277, file: !4226, line: 467, type: !2256)
!4282 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4277, file: !4226, line: 467, type: !4229)
!4283 = !DILocation(line: 0, scope: !4277)
!4284 = !DILocation(line: 469, column: 10, scope: !4277)
!4285 = !DILocation(line: 469, column: 3, scope: !4277)
!4286 = distinct !DISubprogram(name: "fstatat", scope: !4226, file: !4226, line: 474, type: !4287, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!2256, !2256, !2259, !4229, !2256}
!4289 = !{!4290, !4291, !4292, !4293}
!4290 = !DILocalVariable(name: "__fd", arg: 1, scope: !4286, file: !4226, line: 474, type: !2256)
!4291 = !DILocalVariable(name: "__filename", arg: 2, scope: !4286, file: !4226, line: 474, type: !2259)
!4292 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !4286, file: !4226, line: 474, type: !4229)
!4293 = !DILocalVariable(name: "__flag", arg: 4, scope: !4286, file: !4226, line: 474, type: !2256)
!4294 = !DILocation(line: 0, scope: !4286)
!4295 = !DILocation(line: 477, column: 10, scope: !4286)
!4296 = !DILocation(line: 477, column: 3, scope: !4286)
!4297 = distinct !DISubprogram(name: "mknod", scope: !4226, file: !4226, line: 483, type: !4298, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4300)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!2256, !2259, !4240, !4234}
!4300 = !{!4301, !4302, !4303}
!4301 = !DILocalVariable(name: "__path", arg: 1, scope: !4297, file: !4226, line: 483, type: !2259)
!4302 = !DILocalVariable(name: "__mode", arg: 2, scope: !4297, file: !4226, line: 483, type: !4240)
!4303 = !DILocalVariable(name: "__dev", arg: 3, scope: !4297, file: !4226, line: 483, type: !4234)
!4304 = !DILocation(line: 0, scope: !4297)
!4305 = !DILocation(line: 485, column: 10, scope: !4297)
!4306 = !DILocation(line: 485, column: 3, scope: !4297)
!4307 = distinct !DISubprogram(name: "mknodat", scope: !4226, file: !4226, line: 491, type: !4308, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4310)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{!2256, !2256, !2259, !4240, !4234}
!4310 = !{!4311, !4312, !4313, !4314}
!4311 = !DILocalVariable(name: "__fd", arg: 1, scope: !4307, file: !4226, line: 491, type: !2256)
!4312 = !DILocalVariable(name: "__path", arg: 2, scope: !4307, file: !4226, line: 491, type: !2259)
!4313 = !DILocalVariable(name: "__mode", arg: 3, scope: !4307, file: !4226, line: 491, type: !4240)
!4314 = !DILocalVariable(name: "__dev", arg: 4, scope: !4307, file: !4226, line: 491, type: !4234)
!4315 = !DILocation(line: 0, scope: !4307)
!4316 = !DILocation(line: 494, column: 10, scope: !4307)
!4317 = !DILocation(line: 494, column: 3, scope: !4307)
!4318 = distinct !DISubprogram(name: "stat64", scope: !4226, file: !4226, line: 502, type: !4319, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4341)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!2256, !2259, !4321}
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !4231, line: 119, size: 1152, elements: !4323)
!4323 = !{!4324, !4325, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4337, !4338, !4339, !4340}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4322, file: !4231, line: 121, baseType: !4234, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4322, file: !4231, line: 123, baseType: !4326, size: 64, offset: 64)
!4326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !3985, line: 149, baseType: !2306)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4322, file: !4231, line: 124, baseType: !4238, size: 64, offset: 128)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4322, file: !4231, line: 125, baseType: !4240, size: 32, offset: 192)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4322, file: !4231, line: 132, baseType: !4242, size: 32, offset: 224)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4322, file: !4231, line: 133, baseType: !4244, size: 32, offset: 256)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4322, file: !4231, line: 135, baseType: !2256, size: 32, offset: 288)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4322, file: !4231, line: 136, baseType: !4234, size: 64, offset: 320)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4322, file: !4231, line: 137, baseType: !3984, size: 64, offset: 384)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4322, file: !4231, line: 143, baseType: !4249, size: 64, offset: 448)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4322, file: !4231, line: 144, baseType: !4336, size: 64, offset: 512)
!4336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !3985, line: 180, baseType: !2323)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4322, file: !4231, line: 152, baseType: !4253, size: 128, offset: 576)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4322, file: !4231, line: 153, baseType: !4253, size: 128, offset: 704)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4322, file: !4231, line: 154, baseType: !4253, size: 128, offset: 832)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4322, file: !4231, line: 164, baseType: !4263, size: 192, offset: 960)
!4341 = !{!4342, !4343}
!4342 = !DILocalVariable(name: "__path", arg: 1, scope: !4318, file: !4226, line: 502, type: !2259)
!4343 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4318, file: !4226, line: 502, type: !4321)
!4344 = !DILocation(line: 0, scope: !4318)
!4345 = !DILocation(line: 504, column: 10, scope: !4318)
!4346 = !DILocation(line: 504, column: 3, scope: !4318)
!4347 = distinct !DISubprogram(name: "lstat64", scope: !4226, file: !4226, line: 509, type: !4319, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4348)
!4348 = !{!4349, !4350}
!4349 = !DILocalVariable(name: "__path", arg: 1, scope: !4347, file: !4226, line: 509, type: !2259)
!4350 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4347, file: !4226, line: 509, type: !4321)
!4351 = !DILocation(line: 0, scope: !4347)
!4352 = !DILocation(line: 511, column: 10, scope: !4347)
!4353 = !DILocation(line: 511, column: 3, scope: !4347)
!4354 = distinct !DISubprogram(name: "fstat64", scope: !4226, file: !4226, line: 516, type: !4355, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4357)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!2256, !2256, !4321}
!4357 = !{!4358, !4359}
!4358 = !DILocalVariable(name: "__fd", arg: 1, scope: !4354, file: !4226, line: 516, type: !2256)
!4359 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4354, file: !4226, line: 516, type: !4321)
!4360 = !DILocation(line: 0, scope: !4354)
!4361 = !DILocation(line: 518, column: 10, scope: !4354)
!4362 = !DILocation(line: 518, column: 3, scope: !4354)
!4363 = distinct !DISubprogram(name: "fstatat64", scope: !4226, file: !4226, line: 523, type: !4364, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4366)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!2256, !2256, !2259, !4321, !2256}
!4366 = !{!4367, !4368, !4369, !4370}
!4367 = !DILocalVariable(name: "__fd", arg: 1, scope: !4363, file: !4226, line: 523, type: !2256)
!4368 = !DILocalVariable(name: "__filename", arg: 2, scope: !4363, file: !4226, line: 523, type: !2259)
!4369 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !4363, file: !4226, line: 523, type: !4321)
!4370 = !DILocalVariable(name: "__flag", arg: 4, scope: !4363, file: !4226, line: 523, type: !2256)
!4371 = !DILocation(line: 0, scope: !4363)
!4372 = !DILocation(line: 526, column: 10, scope: !4363)
!4373 = !DILocation(line: 526, column: 3, scope: !4363)
!4374 = distinct !DISubprogram(name: "vect_mark_stmts_to_be_vectorized", scope: !1, file: !1, line: 385, type: !4375, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!2166, !3569}
!4377 = !{!4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4395, !4408}
!4378 = !DILocalVariable(name: "loop_vinfo", arg: 1, scope: !4374, file: !1, line: 385, type: !3569)
!4379 = !DILocalVariable(name: "worklist", scope: !4374, file: !1, line: 387, type: !3539)
!4380 = !DILocalVariable(name: "loop", scope: !4374, file: !1, line: 388, type: !2802)
!4381 = !DILocalVariable(name: "bbs", scope: !4374, file: !1, line: 389, type: !3575)
!4382 = !DILocalVariable(name: "nbbs", scope: !4374, file: !1, line: 390, type: !5)
!4383 = !DILocalVariable(name: "si", scope: !4374, file: !1, line: 391, type: !3525)
!4384 = !DILocalVariable(name: "stmt", scope: !4374, file: !1, line: 392, type: !2167)
!4385 = !DILocalVariable(name: "i", scope: !4374, file: !1, line: 393, type: !5)
!4386 = !DILocalVariable(name: "stmt_vinfo", scope: !4374, file: !1, line: 394, type: !3562)
!4387 = !DILocalVariable(name: "bb", scope: !4374, file: !1, line: 395, type: !2616)
!4388 = !DILocalVariable(name: "phi", scope: !4374, file: !1, line: 396, type: !2167)
!4389 = !DILocalVariable(name: "live_p", scope: !4374, file: !1, line: 397, type: !2166)
!4390 = !DILocalVariable(name: "relevant", scope: !4374, file: !1, line: 398, type: !404)
!4391 = !DILocalVariable(name: "tmp_relevant", scope: !4374, file: !1, line: 398, type: !404)
!4392 = !DILocalVariable(name: "def_type", scope: !4374, file: !1, line: 399, type: !411)
!4393 = !DILocalVariable(name: "use_p", scope: !4394, file: !1, line: 439, type: !3907)
!4394 = distinct !DILexicalBlock(scope: !4374, file: !1, line: 438, column: 5)
!4395 = !DILocalVariable(name: "iter", scope: !4394, file: !1, line: 440, type: !4396)
!4396 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !428, line: 140, baseType: !4397)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !428, line: 131, size: 320, elements: !4398)
!4398 = !{!4399, !4400, !4401, !4403, !4405, !4406, !4407}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4397, file: !428, line: 133, baseType: !2166, size: 8)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !4397, file: !428, line: 134, baseType: !427, size: 32, offset: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !4397, file: !428, line: 135, baseType: !4402, size: 64, offset: 64)
!4402 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !428, line: 42, baseType: !2760)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !4397, file: !428, line: 136, baseType: !4404, size: 64, offset: 128)
!4404 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !428, line: 50, baseType: !2767)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !4397, file: !428, line: 137, baseType: !2256, size: 32, offset: 192)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !4397, file: !428, line: 138, baseType: !2256, size: 32, offset: 224)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !4397, file: !428, line: 139, baseType: !2167, size: 64, offset: 256)
!4408 = !DILocalVariable(name: "op", scope: !4409, file: !1, line: 533, type: !2354)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !1, line: 532, column: 2)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 531, column: 7)
!4411 = distinct !DILexicalBlock(scope: !4394, file: !1, line: 531, column: 7)
!4412 = !DILocation(line: 0, scope: !4374)
!4413 = !DILocation(line: 387, column: 3, scope: !4374)
!4414 = !DILocation(line: 388, column: 23, scope: !4374)
!4415 = !DILocation(line: 389, column: 22, scope: !4374)
!4416 = !DILocation(line: 390, column: 29, scope: !4374)
!4417 = !DILocation(line: 391, column: 3, scope: !4374)
!4418 = !DILocation(line: 397, column: 3, scope: !4374)
!4419 = !DILocation(line: 398, column: 3, scope: !4374)
!4420 = !DILocation(line: 401, column: 7, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4374, file: !1, line: 401, column: 7)
!4422 = !DILocation(line: 401, column: 7, scope: !4374)
!4423 = !DILocation(line: 402, column: 14, scope: !4421)
!4424 = !DILocation(line: 402, column: 5, scope: !4421)
!4425 = !DILocation(line: 404, column: 14, scope: !4374)
!4426 = !DILocation(line: 404, column: 12, scope: !4374)
!4427 = !DILocation(line: 0, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !1, line: 410, column: 7)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !1, line: 408, column: 5)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !1, line: 407, column: 3)
!4431 = distinct !DILexicalBlock(scope: !4374, file: !1, line: 407, column: 3)
!4432 = !DILocation(line: 0, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4429, file: !1, line: 422, column: 7)
!4434 = !DILocation(line: 407, column: 17, scope: !4430)
!4435 = !DILocation(line: 407, column: 8, scope: !4431)
!4436 = !DILocation(line: 0, scope: !4431)
!4437 = !DILocation(line: 407, column: 3, scope: !4431)
!4438 = !DILocation(line: 0, scope: !4394)
!4439 = !DILocation(line: 437, column: 3, scope: !4374)
!4440 = !DILocation(line: 409, column: 12, scope: !4429)
!4441 = !DILocation(line: 410, column: 17, scope: !4428)
!4442 = !DILocation(line: 410, column: 12, scope: !4428)
!4443 = !DILocation(line: 410, column: 39, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4428, file: !1, line: 410, column: 7)
!4445 = !DILocation(line: 410, column: 38, scope: !4444)
!4446 = !DILocation(line: 410, column: 7, scope: !4428)
!4447 = !DILocation(line: 412, column: 10, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4444, file: !1, line: 411, column: 2)
!4449 = !DILocation(line: 413, column: 8, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4448, file: !1, line: 413, column: 8)
!4451 = !DILocation(line: 413, column: 8, scope: !4448)
!4452 = !DILocation(line: 415, column: 17, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !1, line: 414, column: 6)
!4454 = !DILocation(line: 415, column: 8, scope: !4453)
!4455 = !DILocation(line: 416, column: 27, scope: !4453)
!4456 = !DILocation(line: 416, column: 8, scope: !4453)
!4457 = !DILocation(line: 417, column: 6, scope: !4453)
!4458 = !DILocation(line: 419, column: 8, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4448, file: !1, line: 419, column: 8)
!4460 = !DILocation(line: 419, column: 8, scope: !4448)
!4461 = !DILocation(line: 420, column: 42, scope: !4459)
!4462 = !DILocation(line: 420, column: 52, scope: !4459)
!4463 = !DILocation(line: 420, column: 6, scope: !4459)
!4464 = !DILocation(line: 410, column: 55, scope: !4444)
!4465 = !DILocation(line: 410, column: 7, scope: !4444)
!4466 = distinct !{!4466, !4446, !4467}
!4467 = !DILocation(line: 421, column: 2, scope: !4428)
!4468 = !DILocation(line: 422, column: 17, scope: !4433)
!4469 = !DILocation(line: 422, column: 12, scope: !4433)
!4470 = !DILocation(line: 422, column: 37, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4433, file: !1, line: 422, column: 7)
!4472 = !DILocation(line: 422, column: 36, scope: !4471)
!4473 = !DILocation(line: 422, column: 7, scope: !4433)
!4474 = !DILocation(line: 424, column: 11, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4471, file: !1, line: 423, column: 2)
!4476 = !DILocation(line: 425, column: 8, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 425, column: 8)
!4478 = !DILocation(line: 425, column: 8, scope: !4475)
!4479 = !DILocation(line: 427, column: 17, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 426, column: 6)
!4481 = !DILocation(line: 427, column: 8, scope: !4480)
!4482 = !DILocation(line: 428, column: 27, scope: !4480)
!4483 = !DILocation(line: 428, column: 8, scope: !4480)
!4484 = !DILocation(line: 429, column: 6, scope: !4480)
!4485 = !DILocation(line: 431, column: 8, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 431, column: 8)
!4487 = !DILocation(line: 431, column: 8, scope: !4475)
!4488 = !DILocation(line: 432, column: 50, scope: !4486)
!4489 = !DILocation(line: 432, column: 60, scope: !4486)
!4490 = !DILocation(line: 432, column: 13, scope: !4486)
!4491 = !DILocation(line: 422, column: 53, scope: !4471)
!4492 = !DILocation(line: 422, column: 7, scope: !4471)
!4493 = distinct !{!4493, !4473, !4494}
!4494 = !DILocation(line: 433, column: 2, scope: !4433)
!4495 = !DILocation(line: 407, column: 26, scope: !4430)
!4496 = !DILocation(line: 407, column: 3, scope: !4430)
!4497 = distinct !{!4497, !4437, !4498}
!4498 = !DILocation(line: 434, column: 5, scope: !4431)
!4499 = !DILocation(line: 437, column: 10, scope: !4374)
!4500 = !DILocation(line: 437, column: 40, scope: !4374)
!4501 = !DILocation(line: 440, column: 7, scope: !4394)
!4502 = !DILocation(line: 442, column: 14, scope: !4394)
!4503 = !DILocation(line: 443, column: 11, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4394, file: !1, line: 443, column: 11)
!4505 = !DILocation(line: 443, column: 11, scope: !4394)
!4506 = !DILocation(line: 445, column: 20, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4504, file: !1, line: 444, column: 2)
!4508 = !DILocation(line: 445, column: 11, scope: !4507)
!4509 = !DILocation(line: 446, column: 30, scope: !4507)
!4510 = !DILocation(line: 446, column: 11, scope: !4507)
!4511 = !DILocation(line: 447, column: 2, scope: !4507)
!4512 = !DILocation(line: 452, column: 20, scope: !4394)
!4513 = !DILocation(line: 453, column: 18, scope: !4394)
!4514 = !DILocation(line: 453, column: 16, scope: !4394)
!4515 = !DILocation(line: 454, column: 16, scope: !4394)
!4516 = !DILocation(line: 454, column: 14, scope: !4394)
!4517 = !DILocation(line: 471, column: 18, scope: !4394)
!4518 = !DILocation(line: 473, column: 7, scope: !4394)
!4519 = !DILocation(line: 476, column: 6, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4394, file: !1, line: 474, column: 9)
!4521 = !DILocation(line: 479, column: 21, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4520, file: !1, line: 477, column: 8)
!4523 = !DILocation(line: 480, column: 12, scope: !4522)
!4524 = !DILocation(line: 483, column: 16, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4522, file: !1, line: 483, column: 16)
!4526 = !DILocation(line: 483, column: 35, scope: !4525)
!4527 = !DILocation(line: 483, column: 16, scope: !4522)
!4528 = !DILocation(line: 488, column: 16, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4522, file: !1, line: 488, column: 16)
!4530 = !DILocation(line: 488, column: 16, scope: !4522)
!4531 = !DILocation(line: 489, column: 23, scope: !4529)
!4532 = !DILocation(line: 489, column: 14, scope: !4529)
!4533 = !DILocation(line: 491, column: 14, scope: !4522)
!4534 = !DILocation(line: 492, column: 12, scope: !4522)
!4535 = !DILocation(line: 495, column: 13, scope: !4520)
!4536 = !DILocation(line: 496, column: 6, scope: !4520)
!4537 = !DILocation(line: 500, column: 17, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4520, file: !1, line: 499, column: 17)
!4539 = !DILocation(line: 503, column: 21, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !1, line: 503, column: 21)
!4541 = distinct !DILexicalBlock(scope: !4538, file: !1, line: 502, column: 15)
!4542 = !DILocation(line: 503, column: 21, scope: !4541)
!4543 = !DILocation(line: 504, column: 28, scope: !4540)
!4544 = !DILocation(line: 504, column: 19, scope: !4540)
!4545 = !DILocation(line: 506, column: 17, scope: !4541)
!4546 = !DILocation(line: 507, column: 17, scope: !4541)
!4547 = !DILocation(line: 510, column: 20, scope: !4520)
!4548 = !DILocation(line: 511, column: 13, scope: !4520)
!4549 = !DILocation(line: 515, column: 17, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4520, file: !1, line: 514, column: 17)
!4551 = !DILocation(line: 517, column: 21, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !1, line: 517, column: 21)
!4553 = distinct !DILexicalBlock(scope: !4550, file: !1, line: 516, column: 15)
!4554 = !DILocation(line: 517, column: 21, scope: !4553)
!4555 = !DILocation(line: 518, column: 28, scope: !4552)
!4556 = !DILocation(line: 518, column: 19, scope: !4552)
!4557 = !DILocation(line: 520, column: 17, scope: !4553)
!4558 = !DILocation(line: 521, column: 17, scope: !4553)
!4559 = !DILocation(line: 524, column: 20, scope: !4520)
!4560 = !DILocation(line: 525, column: 13, scope: !4520)
!4561 = !DILocation(line: 531, column: 7, scope: !4411)
!4562 = !DILocation(line: 0, scope: !4411)
!4563 = !DILocation(line: 531, column: 7, scope: !4410)
!4564 = !DILocation(line: 533, column: 14, scope: !4409)
!4565 = !DILocation(line: 0, scope: !4409)
!4566 = !DILocation(line: 534, column: 44, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4409, file: !1, line: 534, column: 8)
!4568 = !DILocation(line: 534, column: 52, scope: !4567)
!4569 = !DILocation(line: 534, column: 9, scope: !4567)
!4570 = !DILocation(line: 534, column: 8, scope: !4409)
!4571 = !DILocation(line: 536, column: 8, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4567, file: !1, line: 535, column: 6)
!4573 = !DILocation(line: 537, column: 8, scope: !4572)
!4574 = distinct !{!4574, !4561, !4575}
!4575 = !DILocation(line: 539, column: 2, scope: !4411)
!4576 = !DILocation(line: 540, column: 5, scope: !4374)
!4577 = distinct !{!4577, !4439, !4576}
!4578 = !DILocation(line: 542, column: 3, scope: !4374)
!4579 = !DILocation(line: 543, column: 3, scope: !4374)
!4580 = !DILocation(line: 544, column: 1, scope: !4374)
!4581 = distinct !DISubprogram(name: "VEC_gimple_heap_alloc", scope: !2092, file: !2092, line: 34, type: !4582, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4584)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!3539, !2256}
!4584 = !{!4585}
!4585 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4581, file: !2092, line: 34, type: !2256)
!4586 = !DILocation(line: 0, scope: !4581)
!4587 = !DILocation(line: 34, column: 1, scope: !4581)
!4588 = distinct !DISubprogram(name: "gsi_end_p", scope: !2092, file: !2092, line: 4467, type: !4589, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4591)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!2166, !3525}
!4591 = !{!4592}
!4592 = !DILocalVariable(name: "i", arg: 1, scope: !4588, file: !2092, line: 4467, type: !3525)
!4593 = !DILocation(line: 4467, column: 33, scope: !4588)
!4594 = !DILocation(line: 4469, column: 12, scope: !4588)
!4595 = !DILocation(line: 4469, column: 16, scope: !4588)
!4596 = !DILocation(line: 4469, column: 10, scope: !4588)
!4597 = !DILocation(line: 4469, column: 3, scope: !4588)
!4598 = distinct !DISubprogram(name: "gsi_stmt", scope: !2092, file: !2092, line: 4501, type: !4599, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4601)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!2167, !3525}
!4601 = !{!4602}
!4602 = !DILocalVariable(name: "i", arg: 1, scope: !4598, file: !2092, line: 4501, type: !3525)
!4603 = !DILocation(line: 4501, column: 32, scope: !4598)
!4604 = !DILocation(line: 4503, column: 12, scope: !4598)
!4605 = !DILocation(line: 4503, column: 17, scope: !4598)
!4606 = !DILocation(line: 4503, column: 3, scope: !4598)
!4607 = distinct !DISubprogram(name: "vect_stmt_relevant_p", scope: !1, file: !1, line: 110, type: !4608, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4611)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!2166, !2167, !3569, !4610, !3903}
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!4611 = !{!4612, !4613, !4614, !4615, !4616, !4617, !4618, !4626, !4627, !4628}
!4612 = !DILocalVariable(name: "stmt", arg: 1, scope: !4607, file: !1, line: 110, type: !2167)
!4613 = !DILocalVariable(name: "loop_vinfo", arg: 2, scope: !4607, file: !1, line: 110, type: !3569)
!4614 = !DILocalVariable(name: "relevant", arg: 3, scope: !4607, file: !1, line: 111, type: !4610)
!4615 = !DILocalVariable(name: "live_p", arg: 4, scope: !4607, file: !1, line: 111, type: !3903)
!4616 = !DILocalVariable(name: "loop", scope: !4607, file: !1, line: 113, type: !2802)
!4617 = !DILocalVariable(name: "op_iter", scope: !4607, file: !1, line: 114, type: !4396)
!4618 = !DILocalVariable(name: "imm_iter", scope: !4607, file: !1, line: 115, type: !4619)
!4619 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !2556, line: 249, baseType: !4620)
!4620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !2556, line: 238, size: 448, elements: !4621)
!4621 = !{!4622, !4623, !4624, !4625}
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !4620, file: !2556, line: 241, baseType: !3908, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !4620, file: !2556, line: 243, baseType: !3908, size: 64, offset: 64)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !4620, file: !2556, line: 245, baseType: !3909, size: 256, offset: 128)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !4620, file: !2556, line: 248, baseType: !3908, size: 64, offset: 384)
!4626 = !DILocalVariable(name: "use_p", scope: !4607, file: !1, line: 116, type: !3907)
!4627 = !DILocalVariable(name: "def_p", scope: !4607, file: !1, line: 117, type: !3906)
!4628 = !DILocalVariable(name: "bb", scope: !4629, file: !1, line: 142, type: !2616)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !1, line: 141, column: 2)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 140, column: 7)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 140, column: 7)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !1, line: 139, column: 5)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !1, line: 138, column: 3)
!4634 = distinct !DILexicalBlock(scope: !4607, file: !1, line: 138, column: 3)
!4635 = !DILocation(line: 0, scope: !4607)
!4636 = !DILocation(line: 113, column: 23, scope: !4607)
!4637 = !DILocation(line: 114, column: 3, scope: !4607)
!4638 = !DILocation(line: 115, column: 3, scope: !4607)
!4639 = !DILocation(line: 119, column: 13, scope: !4607)
!4640 = !DILocation(line: 120, column: 11, scope: !4607)
!4641 = !DILocation(line: 123, column: 7, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4607, file: !1, line: 123, column: 7)
!4643 = !DILocation(line: 124, column: 7, scope: !4642)
!4644 = !DILocation(line: 124, column: 10, scope: !4642)
!4645 = !DILocation(line: 125, column: 10, scope: !4642)
!4646 = !DILocation(line: 123, column: 7, scope: !4607)
!4647 = !DILocation(line: 126, column: 15, scope: !4642)
!4648 = !DILocation(line: 126, column: 5, scope: !4642)
!4649 = !DILocation(line: 129, column: 7, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4607, file: !1, line: 129, column: 7)
!4651 = !DILocation(line: 129, column: 26, scope: !4650)
!4652 = !DILocation(line: 129, column: 7, scope: !4607)
!4653 = !DILocation(line: 130, column: 9, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4650, file: !1, line: 130, column: 9)
!4655 = !DILocation(line: 130, column: 9, scope: !4650)
!4656 = !DILocation(line: 132, column: 6, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !1, line: 132, column: 6)
!4658 = distinct !DILexicalBlock(scope: !4654, file: !1, line: 131, column: 7)
!4659 = !DILocation(line: 132, column: 6, scope: !4658)
!4660 = !DILocation(line: 133, column: 13, scope: !4657)
!4661 = !DILocation(line: 133, column: 4, scope: !4657)
!4662 = !DILocation(line: 134, column: 12, scope: !4658)
!4663 = !DILocation(line: 135, column: 7, scope: !4658)
!4664 = !DILocation(line: 138, column: 3, scope: !4634)
!4665 = !DILocation(line: 0, scope: !4634)
!4666 = !DILocation(line: 138, column: 3, scope: !4633)
!4667 = !DILocation(line: 140, column: 7, scope: !4631)
!4668 = !DILocation(line: 0, scope: !4631)
!4669 = !DILocation(line: 140, column: 7, scope: !4630)
!4670 = !DILocation(line: 142, column: 32, scope: !4629)
!4671 = !DILocation(line: 142, column: 21, scope: !4629)
!4672 = !DILocation(line: 0, scope: !4629)
!4673 = !DILocation(line: 143, column: 9, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4629, file: !1, line: 143, column: 8)
!4675 = !DILocation(line: 143, column: 8, scope: !4629)
!4676 = !DILocation(line: 145, column: 12, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !1, line: 145, column: 12)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !1, line: 144, column: 6)
!4679 = !DILocation(line: 145, column: 12, scope: !4678)
!4680 = !DILocation(line: 146, column: 12, scope: !4677)
!4681 = !DILocation(line: 146, column: 3, scope: !4677)
!4682 = !DILocation(line: 148, column: 29, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4678, file: !1, line: 148, column: 12)
!4684 = !DILocation(line: 148, column: 12, scope: !4683)
!4685 = !DILocation(line: 148, column: 12, scope: !4678)
!4686 = !DILocation(line: 153, column: 8, scope: !4678)
!4687 = !DILocation(line: 154, column: 8, scope: !4678)
!4688 = !DILocation(line: 156, column: 23, scope: !4678)
!4689 = !DILocation(line: 157, column: 6, scope: !4678)
!4690 = distinct !{!4690, !4667, !4691}
!4691 = !DILocation(line: 158, column: 2, scope: !4631)
!4692 = distinct !{!4692, !4664, !4693}
!4693 = !DILocation(line: 159, column: 5, scope: !4634)
!4694 = !DILocation(line: 161, column: 11, scope: !4607)
!4695 = !DILocation(line: 161, column: 19, scope: !4607)
!4696 = !DILocation(line: 161, column: 22, scope: !4607)
!4697 = !DILocation(line: 162, column: 1, scope: !4607)
!4698 = !DILocation(line: 161, column: 3, scope: !4607)
!4699 = distinct !DISubprogram(name: "vect_mark_relevant", scope: !1, file: !1, line: 51, type: !4700, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4703)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{null, !4702, !2167, !404, !2166}
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!4703 = !{!4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711}
!4704 = !DILocalVariable(name: "worklist", arg: 1, scope: !4699, file: !1, line: 51, type: !4702)
!4705 = !DILocalVariable(name: "stmt", arg: 2, scope: !4699, file: !1, line: 51, type: !2167)
!4706 = !DILocalVariable(name: "relevant", arg: 3, scope: !4699, file: !1, line: 52, type: !404)
!4707 = !DILocalVariable(name: "live_p", arg: 4, scope: !4699, file: !1, line: 52, type: !2166)
!4708 = !DILocalVariable(name: "stmt_info", scope: !4699, file: !1, line: 54, type: !3562)
!4709 = !DILocalVariable(name: "save_relevant", scope: !4699, file: !1, line: 55, type: !404)
!4710 = !DILocalVariable(name: "save_live_p", scope: !4699, file: !1, line: 56, type: !2166)
!4711 = !DILocalVariable(name: "pattern_stmt", scope: !4712, file: !1, line: 63, type: !2167)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !1, line: 62, column: 5)
!4713 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 61, column: 7)
!4714 = !DILocation(line: 0, scope: !4699)
!4715 = !DILocation(line: 54, column: 29, scope: !4699)
!4716 = !DILocation(line: 55, column: 38, scope: !4699)
!4717 = !DILocation(line: 56, column: 22, scope: !4699)
!4718 = !DILocation(line: 58, column: 7, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 58, column: 7)
!4720 = !DILocation(line: 58, column: 7, scope: !4699)
!4721 = !DILocation(line: 59, column: 14, scope: !4719)
!4722 = !DILocation(line: 59, column: 65, scope: !4719)
!4723 = !DILocation(line: 59, column: 5, scope: !4719)
!4724 = !DILocation(line: 61, column: 7, scope: !4713)
!4725 = !DILocation(line: 61, column: 7, scope: !4699)
!4726 = !DILocation(line: 81, column: 33, scope: !4699)
!4727 = !DILocation(line: 82, column: 18, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 82, column: 7)
!4729 = !DILocation(line: 70, column: 22, scope: !4712)
!4730 = !DILocation(line: 0, scope: !4712)
!4731 = !DILocation(line: 72, column: 11, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4712, file: !1, line: 72, column: 11)
!4733 = !DILocation(line: 72, column: 11, scope: !4712)
!4734 = !DILocation(line: 73, column: 18, scope: !4732)
!4735 = !DILocation(line: 73, column: 9, scope: !4732)
!4736 = !DILocation(line: 74, column: 19, scope: !4712)
!4737 = !DILocation(line: 75, column: 7, scope: !4712)
!4738 = !DILocation(line: 76, column: 23, scope: !4712)
!4739 = !DILocation(line: 77, column: 21, scope: !4712)
!4740 = !DILocation(line: 79, column: 5, scope: !4712)
!4741 = !DILocation(line: 81, column: 3, scope: !4699)
!4742 = !DILocation(line: 82, column: 16, scope: !4728)
!4743 = !DILocation(line: 82, column: 7, scope: !4699)
!4744 = !DILocation(line: 83, column: 37, scope: !4728)
!4745 = !DILocation(line: 83, column: 5, scope: !4728)
!4746 = !DILocation(line: 85, column: 7, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 85, column: 7)
!4748 = !DILocation(line: 85, column: 39, scope: !4747)
!4749 = !DILocation(line: 86, column: 7, scope: !4747)
!4750 = !DILocation(line: 86, column: 40, scope: !4747)
!4751 = !DILocation(line: 85, column: 7, scope: !4699)
!4752 = !DILocation(line: 88, column: 11, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !1, line: 88, column: 11)
!4754 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 87, column: 5)
!4755 = !DILocation(line: 88, column: 11, scope: !4754)
!4756 = !DILocation(line: 89, column: 18, scope: !4753)
!4757 = !DILocation(line: 89, column: 9, scope: !4753)
!4758 = !DILocation(line: 93, column: 3, scope: !4699)
!4759 = !DILocation(line: 94, column: 1, scope: !4699)
!4760 = distinct !DISubprogram(name: "gsi_next", scope: !2092, file: !2092, line: 4485, type: !4761, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4763)
!4761 = !DISubroutineType(types: !4762)
!4762 = !{null, !3524}
!4763 = !{!4764}
!4764 = !DILocalVariable(name: "i", arg: 1, scope: !4760, file: !2092, line: 4485, type: !3524)
!4765 = !DILocation(line: 0, scope: !4760)
!4766 = !DILocation(line: 4487, column: 15, scope: !4760)
!4767 = !DILocation(line: 4487, column: 20, scope: !4760)
!4768 = !DILocation(line: 4487, column: 10, scope: !4760)
!4769 = !DILocation(line: 4488, column: 1, scope: !4760)
!4770 = distinct !DISubprogram(name: "gsi_start_bb", scope: !2092, file: !2092, line: 4418, type: !4771, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4773)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!3525, !2616}
!4773 = !{!4774, !4775, !4776}
!4774 = !DILocalVariable(name: "bb", arg: 1, scope: !4770, file: !2092, line: 4418, type: !2616)
!4775 = !DILocalVariable(name: "i", scope: !4770, file: !2092, line: 4420, type: !3525)
!4776 = !DILocalVariable(name: "seq", scope: !4770, file: !2092, line: 4421, type: !2218)
!4777 = !DILocation(line: 0, scope: !4770)
!4778 = !DILocation(line: 4420, column: 24, scope: !4770)
!4779 = !DILocation(line: 4423, column: 9, scope: !4770)
!4780 = !DILocation(line: 4424, column: 11, scope: !4770)
!4781 = !DILocation(line: 4424, column: 5, scope: !4770)
!4782 = !DILocation(line: 4424, column: 9, scope: !4770)
!4783 = !DILocation(line: 4425, column: 5, scope: !4770)
!4784 = !DILocation(line: 4425, column: 9, scope: !4770)
!4785 = !DILocation(line: 4426, column: 5, scope: !4770)
!4786 = !DILocation(line: 4426, column: 8, scope: !4770)
!4787 = !DILocation(line: 4429, column: 1, scope: !4770)
!4788 = distinct !DISubprogram(name: "VEC_gimple_base_length", scope: !2092, file: !2092, line: 33, type: !4789, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4793)
!4789 = !DISubroutineType(types: !4790)
!4790 = !{!5, !4791}
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2705)
!4793 = !{!4794}
!4794 = !DILocalVariable(name: "vec_", arg: 1, scope: !4788, file: !2092, line: 33, type: !4791)
!4795 = !DILocation(line: 0, scope: !4788)
!4796 = !DILocation(line: 33, column: 1, scope: !4788)
!4797 = distinct !DISubprogram(name: "VEC_gimple_base_pop", scope: !2092, file: !2092, line: 33, type: !4798, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4801)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!2167, !4800}
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!4801 = !{!4802, !4803}
!4802 = !DILocalVariable(name: "vec_", arg: 1, scope: !4797, file: !2092, line: 33, type: !4800)
!4803 = !DILocalVariable(name: "obj_", scope: !4797, file: !2092, line: 33, type: !2167)
!4804 = !DILocation(line: 0, scope: !4797)
!4805 = !DILocation(line: 33, column: 1, scope: !4797)
!4806 = distinct !DISubprogram(name: "vinfo_for_stmt", scope: !389, file: !389, line: 623, type: !4807, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4809)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{!3562, !2167}
!4809 = !{!4810, !4811}
!4810 = !DILocalVariable(name: "stmt", arg: 1, scope: !4806, file: !389, line: 623, type: !2167)
!4811 = !DILocalVariable(name: "uid", scope: !4806, file: !389, line: 625, type: !5)
!4812 = !DILocation(line: 0, scope: !4806)
!4813 = !DILocation(line: 625, column: 22, scope: !4806)
!4814 = !DILocation(line: 626, column: 11, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4806, file: !389, line: 626, column: 7)
!4816 = !DILocation(line: 626, column: 7, scope: !4806)
!4817 = !DILocation(line: 629, column: 3, scope: !4806)
!4818 = !DILocation(line: 630, column: 26, scope: !4806)
!4819 = !DILocation(line: 630, column: 10, scope: !4806)
!4820 = !DILocation(line: 630, column: 3, scope: !4806)
!4821 = !DILocation(line: 631, column: 1, scope: !4806)
!4822 = distinct !DISubprogram(name: "gimple_code", scope: !2092, file: !2092, line: 1052, type: !4823, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4826)
!4823 = !DISubroutineType(types: !4824)
!4824 = !{!2091, !4825}
!4825 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !2168, line: 60, baseType: !3910)
!4826 = !{!4827}
!4827 = !DILocalVariable(name: "g", arg: 1, scope: !4822, file: !2092, line: 1052, type: !4825)
!4828 = !DILocation(line: 0, scope: !4822)
!4829 = !DILocation(line: 1054, column: 20, scope: !4822)
!4830 = !DILocation(line: 1054, column: 3, scope: !4822)
!4831 = distinct !DISubprogram(name: "VEC_gimple_heap_free", scope: !2092, file: !2092, line: 34, type: !4832, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4834)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{null, !4702}
!4834 = !{!4835}
!4835 = !DILocalVariable(name: "vec_", arg: 1, scope: !4831, file: !2092, line: 34, type: !4702)
!4836 = !DILocation(line: 0, scope: !4831)
!4837 = !DILocation(line: 34, column: 1, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4831, file: !2092, line: 34, column: 1)
!4839 = !DILocation(line: 34, column: 1, scope: !4831)
!4840 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !4841, file: !4841, line: 910, type: !4842, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4845)
!4841 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!3907, !4844, !2167, !2256}
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4845 = !{!4846, !4847, !4848, !4849, !4850}
!4846 = !DILocalVariable(name: "ptr", arg: 1, scope: !4840, file: !4841, line: 910, type: !4844)
!4847 = !DILocalVariable(name: "phi", arg: 2, scope: !4840, file: !4841, line: 910, type: !2167)
!4848 = !DILocalVariable(name: "flags", arg: 3, scope: !4840, file: !4841, line: 910, type: !2256)
!4849 = !DILocalVariable(name: "phi_def", scope: !4840, file: !4841, line: 912, type: !2354)
!4850 = !DILocalVariable(name: "comp", scope: !4840, file: !4841, line: 913, type: !2256)
!4851 = !DILocation(line: 0, scope: !4840)
!4852 = !DILocation(line: 912, column: 18, scope: !4840)
!4853 = !DILocation(line: 915, column: 3, scope: !4840)
!4854 = !DILocation(line: 916, column: 8, scope: !4840)
!4855 = !DILocation(line: 916, column: 13, scope: !4840)
!4856 = !DILocation(line: 920, column: 11, scope: !4840)
!4857 = !DILocation(line: 923, column: 7, scope: !4840)
!4858 = !DILocation(line: 925, column: 17, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !4841, line: 924, column: 5)
!4860 = distinct !DILexicalBlock(scope: !4840, file: !4841, line: 923, column: 7)
!4861 = !DILocation(line: 926, column: 7, scope: !4859)
!4862 = !DILocation(line: 929, column: 8, scope: !4840)
!4863 = !DILocation(line: 929, column: 17, scope: !4840)
!4864 = !DILocation(line: 930, column: 18, scope: !4840)
!4865 = !DILocation(line: 930, column: 8, scope: !4840)
!4866 = !DILocation(line: 930, column: 16, scope: !4840)
!4867 = !DILocation(line: 931, column: 8, scope: !4840)
!4868 = !DILocation(line: 931, column: 18, scope: !4840)
!4869 = !DILocation(line: 932, column: 10, scope: !4840)
!4870 = !DILocation(line: 932, column: 3, scope: !4840)
!4871 = !DILocation(line: 933, column: 1, scope: !4840)
!4872 = distinct !DISubprogram(name: "op_iter_init_use", scope: !4841, file: !4841, line: 768, type: !4842, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4873)
!4873 = !{!4874, !4875, !4876}
!4874 = !DILocalVariable(name: "ptr", arg: 1, scope: !4872, file: !4841, line: 768, type: !4844)
!4875 = !DILocalVariable(name: "stmt", arg: 2, scope: !4872, file: !4841, line: 768, type: !2167)
!4876 = !DILocalVariable(name: "flags", arg: 3, scope: !4872, file: !4841, line: 768, type: !2256)
!4877 = !DILocation(line: 0, scope: !4872)
!4878 = !DILocation(line: 772, column: 3, scope: !4872)
!4879 = !DILocation(line: 773, column: 8, scope: !4872)
!4880 = !DILocation(line: 773, column: 18, scope: !4872)
!4881 = !DILocation(line: 774, column: 10, scope: !4872)
!4882 = !DILocation(line: 774, column: 3, scope: !4872)
!4883 = distinct !DISubprogram(name: "op_iter_done", scope: !4841, file: !4841, line: 652, type: !4884, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4888)
!4884 = !DISubroutineType(types: !4885)
!4885 = !{!2166, !4886}
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4396)
!4888 = !{!4889}
!4889 = !DILocalVariable(name: "ptr", arg: 1, scope: !4883, file: !4841, line: 652, type: !4886)
!4890 = !DILocation(line: 0, scope: !4883)
!4891 = !DILocation(line: 654, column: 15, scope: !4883)
!4892 = !DILocation(line: 654, column: 3, scope: !4883)
!4893 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !4841, file: !4841, line: 427, type: !4894, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4896)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!2354, !3907}
!4896 = !{!4897}
!4897 = !DILocalVariable(name: "use", arg: 1, scope: !4893, file: !4841, line: 427, type: !3907)
!4898 = !DILocation(line: 0, scope: !4893)
!4899 = !DILocation(line: 429, column: 17, scope: !4893)
!4900 = !DILocation(line: 429, column: 10, scope: !4893)
!4901 = !DILocation(line: 429, column: 3, scope: !4893)
!4902 = distinct !DISubprogram(name: "process_use", scope: !1, file: !1, line: 236, type: !4903, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4905)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!2166, !2167, !2354, !3569, !2166, !404, !4702}
!4905 = !{!4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919}
!4906 = !DILocalVariable(name: "stmt", arg: 1, scope: !4902, file: !1, line: 236, type: !2167)
!4907 = !DILocalVariable(name: "use", arg: 2, scope: !4902, file: !1, line: 236, type: !2354)
!4908 = !DILocalVariable(name: "loop_vinfo", arg: 3, scope: !4902, file: !1, line: 236, type: !3569)
!4909 = !DILocalVariable(name: "live_p", arg: 4, scope: !4902, file: !1, line: 236, type: !2166)
!4910 = !DILocalVariable(name: "relevant", arg: 5, scope: !4902, file: !1, line: 237, type: !404)
!4911 = !DILocalVariable(name: "worklist", arg: 6, scope: !4902, file: !1, line: 237, type: !4702)
!4912 = !DILocalVariable(name: "loop", scope: !4902, file: !1, line: 239, type: !2802)
!4913 = !DILocalVariable(name: "stmt_vinfo", scope: !4902, file: !1, line: 240, type: !3562)
!4914 = !DILocalVariable(name: "dstmt_vinfo", scope: !4902, file: !1, line: 241, type: !3562)
!4915 = !DILocalVariable(name: "bb", scope: !4902, file: !1, line: 242, type: !2616)
!4916 = !DILocalVariable(name: "def_bb", scope: !4902, file: !1, line: 242, type: !2616)
!4917 = !DILocalVariable(name: "def", scope: !4902, file: !1, line: 243, type: !2354)
!4918 = !DILocalVariable(name: "def_stmt", scope: !4902, file: !1, line: 244, type: !2167)
!4919 = !DILocalVariable(name: "dt", scope: !4902, file: !1, line: 245, type: !411)
!4920 = !DILocation(line: 0, scope: !4902)
!4921 = !DILocation(line: 239, column: 23, scope: !4902)
!4922 = !DILocation(line: 240, column: 30, scope: !4902)
!4923 = !DILocation(line: 243, column: 3, scope: !4902)
!4924 = !DILocation(line: 244, column: 3, scope: !4902)
!4925 = !DILocation(line: 245, column: 3, scope: !4902)
!4926 = !DILocation(line: 249, column: 8, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4902, file: !1, line: 249, column: 7)
!4928 = !DILocation(line: 249, column: 7, scope: !4902)
!4929 = !DILocation(line: 252, column: 8, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4902, file: !1, line: 252, column: 7)
!4931 = !DILocation(line: 252, column: 7, scope: !4902)
!4932 = !DILocation(line: 254, column: 11, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !1, line: 254, column: 11)
!4934 = distinct !DILexicalBlock(scope: !4930, file: !1, line: 253, column: 5)
!4935 = !DILocation(line: 254, column: 11, scope: !4934)
!4936 = !DILocation(line: 255, column: 18, scope: !4933)
!4937 = !DILocation(line: 255, column: 9, scope: !4933)
!4938 = !DILocation(line: 259, column: 8, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4902, file: !1, line: 259, column: 7)
!4940 = !DILocation(line: 259, column: 17, scope: !4939)
!4941 = !DILocation(line: 259, column: 20, scope: !4939)
!4942 = !DILocation(line: 259, column: 7, scope: !4902)
!4943 = !DILocation(line: 262, column: 23, scope: !4902)
!4944 = !DILocation(line: 262, column: 12, scope: !4902)
!4945 = !DILocation(line: 263, column: 8, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4902, file: !1, line: 263, column: 7)
!4947 = !DILocation(line: 263, column: 7, scope: !4902)
!4948 = !DILocation(line: 265, column: 11, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !1, line: 265, column: 11)
!4950 = distinct !DILexicalBlock(scope: !4946, file: !1, line: 264, column: 5)
!4951 = !DILocation(line: 265, column: 11, scope: !4950)
!4952 = !DILocation(line: 266, column: 11, scope: !4949)
!4953 = !DILocation(line: 266, column: 2, scope: !4949)
!4954 = !DILocation(line: 275, column: 33, scope: !4902)
!4955 = !DILocation(line: 275, column: 17, scope: !4902)
!4956 = !DILocation(line: 276, column: 8, scope: !4902)
!4957 = !DILocation(line: 277, column: 7, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4902, file: !1, line: 277, column: 7)
!4959 = !DILocation(line: 277, column: 26, scope: !4958)
!4960 = !DILocation(line: 278, column: 7, scope: !4958)
!4961 = !DILocation(line: 278, column: 10, scope: !4958)
!4962 = !DILocation(line: 278, column: 43, scope: !4958)
!4963 = !DILocation(line: 279, column: 7, scope: !4958)
!4964 = !DILocation(line: 279, column: 23, scope: !4958)
!4965 = !DILocation(line: 279, column: 10, scope: !4958)
!4966 = !DILocation(line: 279, column: 33, scope: !4958)
!4967 = !DILocation(line: 280, column: 7, scope: !4958)
!4968 = !DILocation(line: 280, column: 10, scope: !4958)
!4969 = !DILocation(line: 280, column: 44, scope: !4958)
!4970 = !DILocation(line: 281, column: 7, scope: !4958)
!4971 = !DILocation(line: 281, column: 14, scope: !4958)
!4972 = !DILocation(line: 281, column: 37, scope: !4958)
!4973 = !DILocation(line: 281, column: 26, scope: !4958)
!4974 = !DILocation(line: 277, column: 7, scope: !4902)
!4975 = !DILocation(line: 283, column: 11, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !1, line: 283, column: 11)
!4977 = distinct !DILexicalBlock(scope: !4958, file: !1, line: 282, column: 5)
!4978 = !DILocation(line: 283, column: 11, scope: !4977)
!4979 = !DILocation(line: 284, column: 11, scope: !4976)
!4980 = !DILocation(line: 284, column: 2, scope: !4976)
!4981 = !DILocation(line: 285, column: 11, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4977, file: !1, line: 285, column: 11)
!4983 = !DILocation(line: 285, column: 11, scope: !4977)
!4984 = !DILocation(line: 286, column: 32, scope: !4982)
!4985 = !DILocation(line: 286, column: 16, scope: !4982)
!4986 = !DILocation(line: 286, column: 2, scope: !4982)
!4987 = !DILocation(line: 287, column: 7, scope: !4977)
!4988 = !DILocation(line: 288, column: 7, scope: !4977)
!4989 = !DILocation(line: 300, column: 35, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4902, file: !1, line: 300, column: 7)
!4991 = !DILocation(line: 300, column: 52, scope: !4990)
!4992 = !DILocation(line: 300, column: 7, scope: !4990)
!4993 = !DILocation(line: 300, column: 7, scope: !4902)
!4994 = !DILocation(line: 302, column: 11, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !1, line: 302, column: 11)
!4996 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 301, column: 5)
!4997 = !DILocation(line: 302, column: 11, scope: !4996)
!4998 = !DILocation(line: 303, column: 11, scope: !4995)
!4999 = !DILocation(line: 303, column: 2, scope: !4995)
!5000 = !DILocation(line: 305, column: 7, scope: !4996)
!5001 = !DILocation(line: 308, column: 16, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !1, line: 306, column: 2)
!5003 = !DILocation(line: 308, column: 49, scope: !5002)
!5004 = !DILocation(line: 308, column: 15, scope: !5002)
!5005 = !DILocation(line: 310, column: 4, scope: !5002)
!5006 = !DILocation(line: 313, column: 11, scope: !5002)
!5007 = !DILocation(line: 318, column: 11, scope: !5002)
!5008 = !DILocation(line: 326, column: 4, scope: !5002)
!5009 = !DILocation(line: 327, column: 2, scope: !5002)
!5010 = !DILocation(line: 337, column: 36, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 337, column: 12)
!5012 = !DILocation(line: 337, column: 57, scope: !5011)
!5013 = !DILocation(line: 337, column: 12, scope: !5011)
!5014 = !DILocation(line: 337, column: 12, scope: !4990)
!5015 = !DILocation(line: 339, column: 11, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !1, line: 339, column: 11)
!5017 = distinct !DILexicalBlock(scope: !5011, file: !1, line: 338, column: 5)
!5018 = !DILocation(line: 339, column: 11, scope: !5017)
!5019 = !DILocation(line: 340, column: 11, scope: !5016)
!5020 = !DILocation(line: 340, column: 2, scope: !5016)
!5021 = !DILocation(line: 342, column: 7, scope: !5017)
!5022 = !DILocation(line: 345, column: 23, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5017, file: !1, line: 343, column: 9)
!5024 = !DILocation(line: 345, column: 56, scope: !5023)
!5025 = !DILocation(line: 346, column: 13, scope: !5023)
!5026 = !DILocation(line: 346, column: 49, scope: !5023)
!5027 = !DILocation(line: 348, column: 11, scope: !5023)
!5028 = !DILocation(line: 356, column: 11, scope: !5023)
!5029 = !DILocation(line: 359, column: 11, scope: !5023)
!5030 = !DILocation(line: 360, column: 9, scope: !5023)
!5031 = !DILocation(line: 363, column: 33, scope: !4902)
!5032 = !DILocation(line: 363, column: 3, scope: !4902)
!5033 = !DILocation(line: 364, column: 3, scope: !4902)
!5034 = !DILocation(line: 365, column: 1, scope: !4902)
!5035 = distinct !DISubprogram(name: "op_iter_next_use", scope: !4841, file: !4841, line: 659, type: !5036, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5038)
!5036 = !DISubroutineType(types: !5037)
!5037 = !{!3907, !4844}
!5038 = !{!5039, !5040}
!5039 = !DILocalVariable(name: "ptr", arg: 1, scope: !5035, file: !4841, line: 659, type: !4844)
!5040 = !DILocalVariable(name: "use_p", scope: !5035, file: !4841, line: 661, type: !3907)
!5041 = !DILocation(line: 0, scope: !5035)
!5042 = !DILocation(line: 665, column: 12, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5035, file: !4841, line: 665, column: 7)
!5044 = !DILocation(line: 665, column: 7, scope: !5043)
!5045 = !DILocation(line: 665, column: 7, scope: !5035)
!5046 = !DILocation(line: 667, column: 15, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5043, file: !4841, line: 666, column: 5)
!5048 = !DILocation(line: 668, column: 30, scope: !5047)
!5049 = !DILocation(line: 668, column: 17, scope: !5047)
!5050 = !DILocation(line: 669, column: 7, scope: !5047)
!5051 = !DILocation(line: 671, column: 12, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5035, file: !4841, line: 671, column: 7)
!5053 = !DILocation(line: 671, column: 25, scope: !5052)
!5054 = !DILocation(line: 671, column: 18, scope: !5052)
!5055 = !DILocation(line: 671, column: 7, scope: !5035)
!5056 = !DILocation(line: 673, column: 14, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5052, file: !4841, line: 672, column: 5)
!5058 = !DILocation(line: 673, column: 7, scope: !5057)
!5059 = !DILocation(line: 675, column: 8, scope: !5035)
!5060 = !DILocation(line: 675, column: 13, scope: !5035)
!5061 = !DILocation(line: 676, column: 3, scope: !5035)
!5062 = !DILocation(line: 677, column: 1, scope: !5035)
!5063 = distinct !DISubprogram(name: "cost_for_stmt", scope: !1, file: !1, line: 548, type: !5064, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!2256, !2167}
!5066 = !{!5067, !5068}
!5067 = !DILocalVariable(name: "stmt", arg: 1, scope: !5063, file: !1, line: 548, type: !2167)
!5068 = !DILocalVariable(name: "stmt_info", scope: !5063, file: !1, line: 550, type: !3562)
!5069 = !DILocation(line: 0, scope: !5063)
!5070 = !DILocation(line: 550, column: 29, scope: !5063)
!5071 = !DILocation(line: 552, column: 11, scope: !5063)
!5072 = !DILocation(line: 552, column: 3, scope: !5063)
!5073 = !DILocation(line: 555, column: 12, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5063, file: !1, line: 553, column: 3)
!5075 = !DILocation(line: 555, column: 5, scope: !5074)
!5076 = !DILocation(line: 557, column: 12, scope: !5074)
!5077 = !DILocation(line: 557, column: 5, scope: !5074)
!5078 = !DILocation(line: 567, column: 12, scope: !5074)
!5079 = !DILocation(line: 567, column: 5, scope: !5074)
!5080 = !DILocation(line: 570, column: 5, scope: !5074)
!5081 = !DILocation(line: 573, column: 5, scope: !5063)
!5082 = !DILocation(line: 575, column: 1, scope: !5063)
!5083 = distinct !DISubprogram(name: "vect_model_simple_cost", scope: !1, file: !1, line: 584, type: !5084, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5087)
!5084 = !DISubroutineType(types: !5085)
!5085 = !{null, !3562, !2256, !5086, !3532}
!5086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!5087 = !{!5088, !5089, !5090, !5091, !5092, !5093, !5094}
!5088 = !DILocalVariable(name: "stmt_info", arg: 1, scope: !5083, file: !1, line: 584, type: !3562)
!5089 = !DILocalVariable(name: "ncopies", arg: 2, scope: !5083, file: !1, line: 584, type: !2256)
!5090 = !DILocalVariable(name: "dt", arg: 3, scope: !5083, file: !1, line: 585, type: !5086)
!5091 = !DILocalVariable(name: "slp_node", arg: 4, scope: !5083, file: !1, line: 585, type: !3532)
!5092 = !DILocalVariable(name: "i", scope: !5083, file: !1, line: 587, type: !2256)
!5093 = !DILocalVariable(name: "inside_cost", scope: !5083, file: !1, line: 588, type: !2256)
!5094 = !DILocalVariable(name: "outside_cost", scope: !5083, file: !1, line: 588, type: !2256)
!5095 = !DILocation(line: 0, scope: !5083)
!5096 = !DILocation(line: 591, column: 7, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 591, column: 7)
!5098 = !DILocation(line: 591, column: 7, scope: !5083)
!5099 = !DILocation(line: 594, column: 27, scope: !5083)
!5100 = !DILocation(line: 0, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !1, line: 599, column: 11)
!5102 = distinct !DILexicalBlock(scope: !5103, file: !1, line: 598, column: 5)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !1, line: 597, column: 3)
!5104 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 597, column: 3)
!5105 = !DILocation(line: 597, column: 8, scope: !5104)
!5106 = !DILocation(line: 0, scope: !5104)
!5107 = !DILocation(line: 597, column: 17, scope: !5103)
!5108 = !DILocation(line: 597, column: 3, scope: !5104)
!5109 = !DILocation(line: 599, column: 11, scope: !5101)
!5110 = !DILocation(line: 599, column: 17, scope: !5101)
!5111 = !DILocation(line: 599, column: 38, scope: !5101)
!5112 = !DILocation(line: 599, column: 47, scope: !5101)
!5113 = !DILocation(line: 599, column: 11, scope: !5102)
!5114 = !DILocation(line: 600, column: 18, scope: !5101)
!5115 = !DILocation(line: 600, column: 15, scope: !5101)
!5116 = !DILocation(line: 600, column: 2, scope: !5101)
!5117 = !DILocation(line: 597, column: 23, scope: !5103)
!5118 = !DILocation(line: 597, column: 3, scope: !5103)
!5119 = distinct !{!5119, !5108, !5120}
!5120 = !DILocation(line: 601, column: 5, scope: !5104)
!5121 = !DILocation(line: 594, column: 25, scope: !5083)
!5122 = !DILocation(line: 603, column: 7, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 603, column: 7)
!5124 = !DILocation(line: 603, column: 7, scope: !5083)
!5125 = !DILocation(line: 604, column: 14, scope: !5123)
!5126 = !DILocation(line: 604, column: 5, scope: !5123)
!5127 = !DILocation(line: 608, column: 3, scope: !5083)
!5128 = !DILocation(line: 609, column: 3, scope: !5083)
!5129 = !DILocation(line: 610, column: 1, scope: !5083)
!5130 = distinct !DISubprogram(name: "stmt_vinfo_set_inside_of_loop_cost", scope: !389, file: !389, line: 699, type: !5131, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5133)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{null, !3562, !3532, !2256}
!5133 = !{!5134, !5135, !5136}
!5134 = !DILocalVariable(name: "stmt_info", arg: 1, scope: !5130, file: !389, line: 699, type: !3562)
!5135 = !DILocalVariable(name: "slp_node", arg: 2, scope: !5130, file: !389, line: 699, type: !3532)
!5136 = !DILocalVariable(name: "cost", arg: 3, scope: !5130, file: !389, line: 700, type: !2256)
!5137 = !DILocation(line: 0, scope: !5130)
!5138 = !DILocation(line: 702, column: 7, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5130, file: !389, line: 702, column: 7)
!5140 = !DILocation(line: 702, column: 7, scope: !5130)
!5141 = !DILocation(line: 703, column: 5, scope: !5139)
!5142 = !DILocation(line: 703, column: 45, scope: !5139)
!5143 = !DILocation(line: 705, column: 5, scope: !5139)
!5144 = !DILocation(line: 705, column: 48, scope: !5139)
!5145 = !DILocation(line: 706, column: 1, scope: !5130)
!5146 = distinct !DISubprogram(name: "stmt_vinfo_set_outside_of_loop_cost", scope: !389, file: !389, line: 709, type: !5131, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5147)
!5147 = !{!5148, !5149, !5150}
!5148 = !DILocalVariable(name: "stmt_info", arg: 1, scope: !5146, file: !389, line: 709, type: !3562)
!5149 = !DILocalVariable(name: "slp_node", arg: 2, scope: !5146, file: !389, line: 709, type: !3532)
!5150 = !DILocalVariable(name: "cost", arg: 3, scope: !5146, file: !389, line: 710, type: !2256)
!5151 = !DILocation(line: 0, scope: !5146)
!5152 = !DILocation(line: 712, column: 7, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5146, file: !389, line: 712, column: 7)
!5154 = !DILocation(line: 712, column: 7, scope: !5146)
!5155 = !DILocation(line: 713, column: 5, scope: !5153)
!5156 = !DILocation(line: 713, column: 46, scope: !5153)
!5157 = !DILocation(line: 715, column: 5, scope: !5153)
!5158 = !DILocation(line: 715, column: 49, scope: !5153)
!5159 = !DILocation(line: 716, column: 1, scope: !5146)
!5160 = distinct !DISubprogram(name: "vect_model_store_cost", scope: !1, file: !1, line: 637, type: !5161, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5163)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{null, !3562, !2256, !411, !3532}
!5163 = !{!5164, !5165, !5166, !5167, !5168, !5169, !5170}
!5164 = !DILocalVariable(name: "stmt_info", arg: 1, scope: !5160, file: !1, line: 637, type: !3562)
!5165 = !DILocalVariable(name: "ncopies", arg: 2, scope: !5160, file: !1, line: 637, type: !2256)
!5166 = !DILocalVariable(name: "dt", arg: 3, scope: !5160, file: !1, line: 638, type: !411)
!5167 = !DILocalVariable(name: "slp_node", arg: 4, scope: !5160, file: !1, line: 638, type: !3532)
!5168 = !DILocalVariable(name: "group_size", scope: !5160, file: !1, line: 640, type: !2256)
!5169 = !DILocalVariable(name: "inside_cost", scope: !5160, file: !1, line: 641, type: !2256)
!5170 = !DILocalVariable(name: "outside_cost", scope: !5160, file: !1, line: 641, type: !2256)
!5171 = !DILocation(line: 0, scope: !5160)
!5172 = !DILocation(line: 644, column: 7, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5160, file: !1, line: 644, column: 7)
!5174 = !DILocation(line: 644, column: 7, scope: !5160)
!5175 = !DILocation(line: 647, column: 31, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5160, file: !1, line: 647, column: 7)
!5177 = !DILocation(line: 648, column: 20, scope: !5176)
!5178 = !DILocation(line: 648, column: 5, scope: !5176)
!5179 = !DILocation(line: 651, column: 7, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5160, file: !1, line: 651, column: 7)
!5181 = !DILocation(line: 651, column: 41, scope: !5180)
!5182 = !DILocation(line: 651, column: 37, scope: !5180)
!5183 = !DILocation(line: 652, column: 18, scope: !5180)
!5184 = !DILocation(line: 652, column: 5, scope: !5180)
!5185 = !DILocation(line: 0, scope: !5180)
!5186 = !DILocation(line: 659, column: 18, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5160, file: !1, line: 659, column: 7)
!5188 = !DILocation(line: 659, column: 7, scope: !5160)
!5189 = !DILocation(line: 662, column: 42, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5187, file: !1, line: 660, column: 5)
!5191 = !DILocation(line: 662, column: 31, scope: !5190)
!5192 = !DILocation(line: 662, column: 29, scope: !5190)
!5193 = !DILocation(line: 662, column: 54, scope: !5190)
!5194 = !DILocation(line: 663, column: 16, scope: !5190)
!5195 = !DILocation(line: 663, column: 14, scope: !5190)
!5196 = !DILocation(line: 665, column: 11, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5190, file: !1, line: 665, column: 11)
!5198 = !DILocation(line: 665, column: 11, scope: !5190)
!5199 = !DILocation(line: 666, column: 18, scope: !5197)
!5200 = !DILocation(line: 666, column: 9, scope: !5197)
!5201 = !DILocation(line: 672, column: 28, scope: !5160)
!5202 = !DILocation(line: 672, column: 26, scope: !5160)
!5203 = !DILocation(line: 672, column: 15, scope: !5160)
!5204 = !DILocation(line: 674, column: 7, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5160, file: !1, line: 674, column: 7)
!5206 = !DILocation(line: 674, column: 7, scope: !5160)
!5207 = !DILocation(line: 675, column: 14, scope: !5205)
!5208 = !DILocation(line: 675, column: 5, scope: !5205)
!5209 = !DILocation(line: 679, column: 3, scope: !5160)
!5210 = !DILocation(line: 680, column: 3, scope: !5160)
!5211 = !DILocation(line: 681, column: 1, scope: !5160)
!5212 = distinct !DISubprogram(name: "vect_cost_strided_group_size", scope: !1, file: !1, line: 620, type: !5213, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5215)
!5213 = !DISubroutineType(types: !5214)
!5214 = !{!2256, !3562}
!5215 = !{!5216, !5217}
!5216 = !DILocalVariable(name: "stmt_info", arg: 1, scope: !5212, file: !1, line: 620, type: !3562)
!5217 = !DILocalVariable(name: "first_stmt", scope: !5212, file: !1, line: 622, type: !2167)
!5218 = !DILocation(line: 0, scope: !5212)
!5219 = !DILocation(line: 622, column: 23, scope: !5212)
!5220 = !DILocation(line: 624, column: 21, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5212, file: !1, line: 624, column: 7)
!5222 = !DILocation(line: 624, column: 18, scope: !5221)
!5223 = !DILocation(line: 624, column: 7, scope: !5212)
!5224 = !DILocation(line: 625, column: 12, scope: !5221)
!5225 = !DILocation(line: 625, column: 5, scope: !5221)
!5226 = !DILocation(line: 628, column: 1, scope: !5212)
!5227 = distinct !DISubprogram(name: "vect_model_load_cost", scope: !1, file: !1, line: 692, type: !5228, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5230)
!5228 = !DISubroutineType(types: !5229)
!5229 = !{null, !3562, !2256, !3532}
!5230 = !{!5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240}
!5231 = !DILocalVariable(name: "stmt_info", arg: 1, scope: !5227, file: !1, line: 692, type: !3562)
!5232 = !DILocalVariable(name: "ncopies", arg: 2, scope: !5227, file: !1, line: 692, type: !2256)
!5233 = !DILocalVariable(name: "slp_node", arg: 3, scope: !5227, file: !1, line: 692, type: !3532)
!5234 = !DILocalVariable(name: "group_size", scope: !5227, file: !1, line: 695, type: !2256)
!5235 = !DILocalVariable(name: "alignment_support_cheme", scope: !5227, file: !1, line: 696, type: !2256)
!5236 = !DILocalVariable(name: "first_stmt", scope: !5227, file: !1, line: 697, type: !2167)
!5237 = !DILocalVariable(name: "dr", scope: !5227, file: !1, line: 698, type: !3582)
!5238 = !DILocalVariable(name: "first_dr", scope: !5227, file: !1, line: 698, type: !3582)
!5239 = !DILocalVariable(name: "inside_cost", scope: !5227, file: !1, line: 699, type: !2256)
!5240 = !DILocalVariable(name: "outside_cost", scope: !5227, file: !1, line: 699, type: !2256)
!5241 = !DILocation(line: 0, scope: !5227)
!5242 = !DILocation(line: 702, column: 7, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 702, column: 7)
!5244 = !DILocation(line: 702, column: 7, scope: !5227)
!5245 = !DILocation(line: 706, column: 16, scope: !5227)
!5246 = !DILocation(line: 707, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 707, column: 7)
!5248 = !DILocation(line: 707, column: 22, scope: !5247)
!5249 = !DILocation(line: 707, column: 18, scope: !5247)
!5250 = !DILocation(line: 709, column: 20, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5247, file: !1, line: 708, column: 5)
!5252 = !DILocation(line: 710, column: 18, scope: !5251)
!5253 = !DILocation(line: 711, column: 5, scope: !5251)
!5254 = !DILocation(line: 0, scope: !5247)
!5255 = !DILocation(line: 719, column: 29, scope: !5227)
!5256 = !DILocation(line: 723, column: 18, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 723, column: 7)
!5258 = !DILocation(line: 723, column: 7, scope: !5227)
!5259 = !DILocation(line: 726, column: 42, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5257, file: !1, line: 724, column: 5)
!5261 = !DILocation(line: 726, column: 31, scope: !5260)
!5262 = !DILocation(line: 726, column: 29, scope: !5260)
!5263 = !DILocation(line: 726, column: 54, scope: !5260)
!5264 = !DILocation(line: 727, column: 4, scope: !5260)
!5265 = !DILocation(line: 727, column: 2, scope: !5260)
!5266 = !DILocation(line: 729, column: 11, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5260, file: !1, line: 729, column: 11)
!5268 = !DILocation(line: 729, column: 11, scope: !5260)
!5269 = !DILocation(line: 730, column: 18, scope: !5267)
!5270 = !DILocation(line: 730, column: 9, scope: !5267)
!5271 = !DILocation(line: 736, column: 3, scope: !5227)
!5272 = !DILocation(line: 740, column: 34, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 739, column: 7)
!5274 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 737, column: 5)
!5275 = !DILocation(line: 740, column: 32, scope: !5273)
!5276 = !DILocation(line: 740, column: 21, scope: !5273)
!5277 = !DILocation(line: 742, column: 13, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5273, file: !1, line: 742, column: 13)
!5279 = !DILocation(line: 742, column: 13, scope: !5273)
!5280 = !DILocation(line: 743, column: 20, scope: !5278)
!5281 = !DILocation(line: 743, column: 11, scope: !5278)
!5282 = !DILocation(line: 750, column: 34, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 748, column: 7)
!5284 = !DILocation(line: 750, column: 32, scope: !5283)
!5285 = !DILocation(line: 750, column: 21, scope: !5283)
!5286 = !DILocation(line: 752, column: 13, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5283, file: !1, line: 752, column: 13)
!5288 = !DILocation(line: 752, column: 13, scope: !5283)
!5289 = !DILocation(line: 753, column: 20, scope: !5287)
!5290 = !DILocation(line: 753, column: 11, scope: !5287)
!5291 = !DILocation(line: 760, column: 37, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 759, column: 7)
!5293 = !DILocation(line: 760, column: 36, scope: !5292)
!5294 = !DILocation(line: 760, column: 58, scope: !5292)
!5295 = !DILocation(line: 760, column: 56, scope: !5292)
!5296 = !DILocation(line: 760, column: 32, scope: !5292)
!5297 = !DILocation(line: 760, column: 21, scope: !5292)
!5298 = !DILocation(line: 765, column: 31, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5292, file: !1, line: 765, column: 13)
!5300 = !DILocation(line: 765, column: 13, scope: !5299)
!5301 = !DILocation(line: 765, column: 13, scope: !5292)
!5302 = !DILocation(line: 766, column: 23, scope: !5299)
!5303 = !DILocation(line: 766, column: 11, scope: !5299)
!5304 = !DILocation(line: 772, column: 13, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !1, line: 772, column: 13)
!5306 = distinct !DILexicalBlock(scope: !5274, file: !1, line: 771, column: 7)
!5307 = !DILocation(line: 772, column: 13, scope: !5306)
!5308 = !DILocation(line: 773, column: 20, scope: !5305)
!5309 = !DILocation(line: 773, column: 11, scope: !5305)
!5310 = !DILocation(line: 783, column: 15, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5306, file: !1, line: 783, column: 13)
!5312 = !DILocation(line: 783, column: 46, scope: !5311)
!5313 = !DILocation(line: 790, column: 35, scope: !5306)
!5314 = !DILocation(line: 0, scope: !5306)
!5315 = !DILocation(line: 790, column: 56, scope: !5306)
!5316 = !DILocation(line: 785, column: 30, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5311, file: !1, line: 784, column: 11)
!5318 = !DILocation(line: 785, column: 29, scope: !5317)
!5319 = !DILocation(line: 786, column: 35, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !1, line: 786, column: 17)
!5321 = !DILocation(line: 786, column: 17, scope: !5320)
!5322 = !DILocation(line: 786, column: 17, scope: !5317)
!5323 = !DILocation(line: 787, column: 28, scope: !5320)
!5324 = !DILocation(line: 787, column: 15, scope: !5320)
!5325 = !DILocation(line: 790, column: 54, scope: !5306)
!5326 = !DILocation(line: 790, column: 32, scope: !5306)
!5327 = !DILocation(line: 790, column: 21, scope: !5306)
!5328 = !DILocation(line: 792, column: 9, scope: !5306)
!5329 = !DILocation(line: 796, column: 7, scope: !5274)
!5330 = !DILocation(line: 797, column: 5, scope: !5274)
!5331 = !DILocation(line: 799, column: 7, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 799, column: 7)
!5333 = !DILocation(line: 799, column: 7, scope: !5227)
!5334 = !DILocation(line: 800, column: 14, scope: !5332)
!5335 = !DILocation(line: 800, column: 5, scope: !5332)
!5336 = !DILocation(line: 804, column: 3, scope: !5227)
!5337 = !DILocation(line: 805, column: 3, scope: !5227)
!5338 = !DILocation(line: 806, column: 1, scope: !5227)
!5339 = distinct !DISubprogram(name: "vect_init_vector", scope: !1, file: !1, line: 818, type: !5340, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5342)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{!2354, !2167, !2354, !2354, !3524}
!5342 = !{!5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5357, !5360, !5362, !5363}
!5343 = !DILocalVariable(name: "stmt", arg: 1, scope: !5339, file: !1, line: 818, type: !2167)
!5344 = !DILocalVariable(name: "vector_var", arg: 2, scope: !5339, file: !1, line: 818, type: !2354)
!5345 = !DILocalVariable(name: "vector_type", arg: 3, scope: !5339, file: !1, line: 818, type: !2354)
!5346 = !DILocalVariable(name: "gsi", arg: 4, scope: !5339, file: !1, line: 819, type: !3524)
!5347 = !DILocalVariable(name: "stmt_vinfo", scope: !5339, file: !1, line: 821, type: !3562)
!5348 = !DILocalVariable(name: "new_var", scope: !5339, file: !1, line: 822, type: !2354)
!5349 = !DILocalVariable(name: "init_stmt", scope: !5339, file: !1, line: 823, type: !2167)
!5350 = !DILocalVariable(name: "vec_oprnd", scope: !5339, file: !1, line: 824, type: !2354)
!5351 = !DILocalVariable(name: "pe", scope: !5339, file: !1, line: 825, type: !2208)
!5352 = !DILocalVariable(name: "new_temp", scope: !5339, file: !1, line: 826, type: !2354)
!5353 = !DILocalVariable(name: "new_bb", scope: !5339, file: !1, line: 827, type: !2616)
!5354 = !DILocalVariable(name: "loop_vinfo", scope: !5355, file: !1, line: 839, type: !3569)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !1, line: 838, column: 5)
!5356 = distinct !DILexicalBlock(scope: !5339, file: !1, line: 835, column: 7)
!5357 = !DILocalVariable(name: "loop", scope: !5358, file: !1, line: 843, type: !2802)
!5358 = distinct !DILexicalBlock(scope: !5359, file: !1, line: 842, column: 9)
!5359 = distinct !DILexicalBlock(scope: !5355, file: !1, line: 841, column: 11)
!5360 = !DILocalVariable(name: "bb_vinfo", scope: !5361, file: !1, line: 854, type: !3818)
!5361 = distinct !DILexicalBlock(scope: !5359, file: !1, line: 853, column: 8)
!5362 = !DILocalVariable(name: "bb", scope: !5361, file: !1, line: 855, type: !2616)
!5363 = !DILocalVariable(name: "gsi_bb_start", scope: !5361, file: !1, line: 856, type: !3525)
!5364 = !DILocation(line: 0, scope: !5339)
!5365 = !DILocation(line: 821, column: 30, scope: !5339)
!5366 = !DILocation(line: 829, column: 13, scope: !5339)
!5367 = !DILocation(line: 830, column: 3, scope: !5339)
!5368 = !DILocation(line: 831, column: 15, scope: !5339)
!5369 = !DILocation(line: 832, column: 14, scope: !5339)
!5370 = !DILocation(line: 833, column: 3, scope: !5339)
!5371 = !DILocation(line: 835, column: 7, scope: !5356)
!5372 = !DILocation(line: 835, column: 7, scope: !5339)
!5373 = !DILocation(line: 836, column: 5, scope: !5356)
!5374 = !DILocation(line: 839, column: 34, scope: !5355)
!5375 = !DILocation(line: 0, scope: !5355)
!5376 = !DILocation(line: 841, column: 11, scope: !5359)
!5377 = !DILocation(line: 841, column: 11, scope: !5355)
!5378 = !DILocation(line: 843, column: 31, scope: !5358)
!5379 = !DILocation(line: 0, scope: !5358)
!5380 = !DILocation(line: 845, column: 15, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5358, file: !1, line: 845, column: 15)
!5382 = !DILocation(line: 845, column: 15, scope: !5358)
!5383 = !DILocation(line: 846, column: 26, scope: !5381)
!5384 = !DILocation(line: 846, column: 13, scope: !5381)
!5385 = !DILocation(line: 848, column: 9, scope: !5358)
!5386 = !DILocation(line: 849, column: 20, scope: !5358)
!5387 = !DILocation(line: 850, column: 11, scope: !5358)
!5388 = !DILocation(line: 854, column: 34, scope: !5361)
!5389 = !DILocation(line: 0, scope: !5361)
!5390 = !DILocation(line: 856, column: 11, scope: !5361)
!5391 = !DILocation(line: 858, column: 11, scope: !5361)
!5392 = !DILocation(line: 859, column: 16, scope: !5361)
!5393 = !DILocation(line: 860, column: 26, scope: !5361)
!5394 = !DILocation(line: 861, column: 11, scope: !5361)
!5395 = !DILocation(line: 862, column: 8, scope: !5359)
!5396 = !DILocation(line: 865, column: 7, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5339, file: !1, line: 865, column: 7)
!5398 = !DILocation(line: 865, column: 7, scope: !5339)
!5399 = !DILocation(line: 867, column: 16, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5397, file: !1, line: 866, column: 5)
!5401 = !DILocation(line: 867, column: 7, scope: !5400)
!5402 = !DILocation(line: 868, column: 26, scope: !5400)
!5403 = !DILocation(line: 868, column: 7, scope: !5400)
!5404 = !DILocation(line: 869, column: 5, scope: !5400)
!5405 = !DILocation(line: 871, column: 15, scope: !5339)
!5406 = !DILocation(line: 872, column: 3, scope: !5339)
!5407 = distinct !DISubprogram(name: "make_ssa_name", scope: !4841, file: !4841, line: 1245, type: !5408, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5410)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!2354, !2354, !2167}
!5410 = !{!5411, !5412}
!5411 = !DILocalVariable(name: "var", arg: 1, scope: !5407, file: !4841, line: 1245, type: !2354)
!5412 = !DILocalVariable(name: "stmt", arg: 2, scope: !5407, file: !4841, line: 1245, type: !2167)
!5413 = !DILocation(line: 0, scope: !5407)
!5414 = !DILocation(line: 1247, column: 28, scope: !5407)
!5415 = !DILocation(line: 1247, column: 10, scope: !5407)
!5416 = !DILocation(line: 1247, column: 3, scope: !5407)
!5417 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !2092, file: !2092, line: 1714, type: !5418, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5420)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{null, !2167, !2354}
!5420 = !{!5421, !5422}
!5421 = !DILocalVariable(name: "gs", arg: 1, scope: !5417, file: !2092, line: 1714, type: !2167)
!5422 = !DILocalVariable(name: "lhs", arg: 2, scope: !5417, file: !2092, line: 1714, type: !2354)
!5423 = !DILocation(line: 0, scope: !5417)
!5424 = !DILocation(line: 1717, column: 3, scope: !5417)
!5425 = !DILocation(line: 1719, column: 7, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5417, file: !2092, line: 1719, column: 7)
!5427 = !DILocation(line: 1719, column: 11, scope: !5426)
!5428 = !DILocation(line: 1719, column: 14, scope: !5426)
!5429 = !DILocation(line: 1719, column: 30, scope: !5426)
!5430 = !DILocation(line: 1719, column: 7, scope: !5417)
!5431 = !DILocation(line: 1720, column: 5, scope: !5426)
!5432 = !DILocation(line: 1720, column: 29, scope: !5426)
!5433 = !DILocation(line: 1721, column: 1, scope: !5417)
!5434 = distinct !DISubprogram(name: "vect_finish_stmt_generation", scope: !1, file: !1, line: 1167, type: !5435, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5437)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{null, !2167, !2167, !3524}
!5437 = !{!5438, !5439, !5440, !5441, !5442, !5443}
!5438 = !DILocalVariable(name: "stmt", arg: 1, scope: !5434, file: !1, line: 1167, type: !2167)
!5439 = !DILocalVariable(name: "vec_stmt", arg: 2, scope: !5434, file: !1, line: 1167, type: !2167)
!5440 = !DILocalVariable(name: "gsi", arg: 3, scope: !5434, file: !1, line: 1168, type: !3524)
!5441 = !DILocalVariable(name: "stmt_info", scope: !5434, file: !1, line: 1170, type: !3562)
!5442 = !DILocalVariable(name: "loop_vinfo", scope: !5434, file: !1, line: 1171, type: !3569)
!5443 = !DILocalVariable(name: "bb_vinfo", scope: !5434, file: !1, line: 1172, type: !3818)
!5444 = !DILocation(line: 0, scope: !5434)
!5445 = !DILocation(line: 1170, column: 29, scope: !5434)
!5446 = !DILocation(line: 1171, column: 30, scope: !5434)
!5447 = !DILocation(line: 1172, column: 26, scope: !5434)
!5448 = !DILocation(line: 1174, column: 3, scope: !5434)
!5449 = !DILocation(line: 1176, column: 3, scope: !5434)
!5450 = !DILocation(line: 1178, column: 33, scope: !5434)
!5451 = !DILocation(line: 1178, column: 3, scope: !5434)
!5452 = !DILocation(line: 1181, column: 7, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5434, file: !1, line: 1181, column: 7)
!5454 = !DILocation(line: 1181, column: 7, scope: !5434)
!5455 = !DILocation(line: 1183, column: 16, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5453, file: !1, line: 1182, column: 5)
!5457 = !DILocation(line: 1183, column: 7, scope: !5456)
!5458 = !DILocation(line: 1184, column: 26, scope: !5456)
!5459 = !DILocation(line: 1184, column: 7, scope: !5456)
!5460 = !DILocation(line: 1185, column: 5, scope: !5456)
!5461 = !DILocation(line: 1187, column: 51, scope: !5434)
!5462 = !DILocation(line: 1187, column: 34, scope: !5434)
!5463 = !DILocation(line: 1187, column: 3, scope: !5434)
!5464 = !DILocation(line: 1188, column: 1, scope: !5434)
!5465 = distinct !DISubprogram(name: "nested_in_vect_loop_p", scope: !389, file: !389, line: 297, type: !5466, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5468)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!2166, !2802, !2167}
!5468 = !{!5469, !5470}
!5469 = !DILocalVariable(name: "loop", arg: 1, scope: !5465, file: !389, line: 297, type: !2802)
!5470 = !DILocalVariable(name: "stmt", arg: 2, scope: !5465, file: !389, line: 297, type: !2167)
!5471 = !DILocation(line: 0, scope: !5465)
!5472 = !DILocation(line: 299, column: 17, scope: !5465)
!5473 = !DILocation(line: 299, column: 11, scope: !5465)
!5474 = !DILocation(line: 300, column: 11, scope: !5465)
!5475 = !DILocation(line: 300, column: 31, scope: !5465)
!5476 = !DILocation(line: 300, column: 50, scope: !5465)
!5477 = !DILocation(line: 300, column: 27, scope: !5465)
!5478 = !DILocation(line: 299, column: 3, scope: !5465)
!5479 = distinct !DISubprogram(name: "gsi_after_labels", scope: !2092, file: !2092, line: 4510, type: !4771, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5480)
!5480 = !{!5481, !5482}
!5481 = !DILocalVariable(name: "bb", arg: 1, scope: !5479, file: !2092, line: 4510, type: !2616)
!5482 = !DILocalVariable(name: "gsi", scope: !5479, file: !2092, line: 4512, type: !3525)
!5483 = !DILocation(line: 0, scope: !5479)
!5484 = !DILocation(line: 4512, column: 24, scope: !5479)
!5485 = !DILocation(line: 4512, column: 30, scope: !5479)
!5486 = !DILocation(line: 4514, column: 3, scope: !5479)
!5487 = !DILocation(line: 4514, column: 11, scope: !5479)
!5488 = !DILocation(line: 4514, column: 27, scope: !5479)
!5489 = !DILocation(line: 4514, column: 43, scope: !5479)
!5490 = !DILocation(line: 4514, column: 30, scope: !5479)
!5491 = !DILocation(line: 4514, column: 59, scope: !5479)
!5492 = !DILocation(line: 4515, column: 5, scope: !5479)
!5493 = distinct !{!5493, !5486, !5494}
!5494 = !DILocation(line: 4515, column: 19, scope: !5479)
!5495 = !DILocation(line: 4517, column: 3, scope: !5479)
!5496 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !2092, file: !2092, line: 1694, type: !5497, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5499)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!2354, !4825}
!5499 = !{!5500}
!5500 = !DILocalVariable(name: "gs", arg: 1, scope: !5496, file: !2092, line: 1694, type: !4825)
!5501 = !DILocation(line: 0, scope: !5496)
!5502 = !DILocation(line: 1697, column: 10, scope: !5496)
!5503 = !DILocation(line: 1697, column: 3, scope: !5496)
!5504 = distinct !DISubprogram(name: "vect_get_vec_def_for_operand", scope: !1, file: !1, line: 888, type: !5505, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5507)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!2354, !2354, !2167, !2765}
!5507 = !{!5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527}
!5508 = !DILocalVariable(name: "op", arg: 1, scope: !5504, file: !1, line: 888, type: !2354)
!5509 = !DILocalVariable(name: "stmt", arg: 2, scope: !5504, file: !1, line: 888, type: !2167)
!5510 = !DILocalVariable(name: "scalar_def", arg: 3, scope: !5504, file: !1, line: 888, type: !2765)
!5511 = !DILocalVariable(name: "vec_oprnd", scope: !5504, file: !1, line: 890, type: !2354)
!5512 = !DILocalVariable(name: "vec_stmt", scope: !5504, file: !1, line: 891, type: !2167)
!5513 = !DILocalVariable(name: "def_stmt", scope: !5504, file: !1, line: 892, type: !2167)
!5514 = !DILocalVariable(name: "def_stmt_info", scope: !5504, file: !1, line: 893, type: !3562)
!5515 = !DILocalVariable(name: "stmt_vinfo", scope: !5504, file: !1, line: 894, type: !3562)
!5516 = !DILocalVariable(name: "vectype", scope: !5504, file: !1, line: 895, type: !2354)
!5517 = !DILocalVariable(name: "nunits", scope: !5504, file: !1, line: 896, type: !5)
!5518 = !DILocalVariable(name: "loop_vinfo", scope: !5504, file: !1, line: 897, type: !3569)
!5519 = !DILocalVariable(name: "vec_inv", scope: !5504, file: !1, line: 898, type: !2354)
!5520 = !DILocalVariable(name: "vec_cst", scope: !5504, file: !1, line: 899, type: !2354)
!5521 = !DILocalVariable(name: "t", scope: !5504, file: !1, line: 900, type: !2354)
!5522 = !DILocalVariable(name: "def", scope: !5504, file: !1, line: 901, type: !2354)
!5523 = !DILocalVariable(name: "i", scope: !5504, file: !1, line: 902, type: !2256)
!5524 = !DILocalVariable(name: "dt", scope: !5504, file: !1, line: 903, type: !411)
!5525 = !DILocalVariable(name: "is_simple_use", scope: !5504, file: !1, line: 904, type: !2166)
!5526 = !DILocalVariable(name: "vector_type", scope: !5504, file: !1, line: 905, type: !2354)
!5527 = !DILocalVariable(name: "loop", scope: !5528, file: !1, line: 1001, type: !2802)
!5528 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 1000, column: 7)
!5529 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 931, column: 5)
!5530 = !DILocation(line: 0, scope: !5504)
!5531 = !DILocation(line: 892, column: 3, scope: !5504)
!5532 = !DILocation(line: 894, column: 30, scope: !5504)
!5533 = !DILocation(line: 895, column: 18, scope: !5504)
!5534 = !DILocation(line: 896, column: 25, scope: !5504)
!5535 = !DILocation(line: 897, column: 30, scope: !5504)
!5536 = !DILocation(line: 901, column: 3, scope: !5504)
!5537 = !DILocation(line: 903, column: 3, scope: !5504)
!5538 = !DILocation(line: 907, column: 7, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 907, column: 7)
!5540 = !DILocation(line: 907, column: 7, scope: !5504)
!5541 = !DILocation(line: 909, column: 16, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 908, column: 5)
!5543 = !DILocation(line: 909, column: 7, scope: !5542)
!5544 = !DILocation(line: 910, column: 27, scope: !5542)
!5545 = !DILocation(line: 910, column: 7, scope: !5542)
!5546 = !DILocation(line: 911, column: 5, scope: !5542)
!5547 = !DILocation(line: 913, column: 19, scope: !5504)
!5548 = !DILocation(line: 915, column: 3, scope: !5504)
!5549 = !DILocation(line: 916, column: 7, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 916, column: 7)
!5551 = !DILocation(line: 916, column: 7, scope: !5504)
!5552 = !DILocation(line: 918, column: 11, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !1, line: 918, column: 11)
!5554 = distinct !DILexicalBlock(scope: !5550, file: !1, line: 917, column: 5)
!5555 = !DILocation(line: 918, column: 11, scope: !5554)
!5556 = !DILocation(line: 920, column: 20, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5553, file: !1, line: 919, column: 9)
!5558 = !DILocation(line: 920, column: 11, scope: !5557)
!5559 = !DILocation(line: 921, column: 31, scope: !5557)
!5560 = !DILocation(line: 921, column: 42, scope: !5557)
!5561 = !DILocation(line: 921, column: 11, scope: !5557)
!5562 = !DILocation(line: 922, column: 9, scope: !5557)
!5563 = !DILocation(line: 923, column: 11, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5554, file: !1, line: 923, column: 11)
!5565 = !DILocation(line: 923, column: 11, scope: !5554)
!5566 = !DILocation(line: 925, column: 20, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 924, column: 9)
!5568 = !DILocation(line: 925, column: 11, scope: !5567)
!5569 = !DILocation(line: 926, column: 23, scope: !5567)
!5570 = !DILocation(line: 926, column: 34, scope: !5567)
!5571 = !DILocation(line: 926, column: 4, scope: !5567)
!5572 = !DILocation(line: 927, column: 9, scope: !5567)
!5573 = !DILocation(line: 930, column: 11, scope: !5504)
!5574 = !DILocation(line: 930, column: 3, scope: !5504)
!5575 = !DILocation(line: 935, column: 45, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 934, column: 7)
!5577 = !DILocation(line: 935, column: 16, scope: !5576)
!5578 = !DILocation(line: 936, column: 2, scope: !5576)
!5579 = !DILocation(line: 938, column: 6, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !1, line: 938, column: 6)
!5581 = !DILocation(line: 938, column: 6, scope: !5576)
!5582 = !DILocation(line: 939, column: 16, scope: !5580)
!5583 = !DILocation(line: 939, column: 4, scope: !5580)
!5584 = !DILocation(line: 942, column: 13, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5576, file: !1, line: 942, column: 13)
!5586 = !DILocation(line: 942, column: 13, scope: !5576)
!5587 = !DILocation(line: 943, column: 20, scope: !5585)
!5588 = !DILocation(line: 943, column: 11, scope: !5585)
!5589 = !DILocation(line: 945, column: 14, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5576, file: !1, line: 945, column: 9)
!5591 = !DILocation(line: 0, scope: !5590)
!5592 = !DILocation(line: 945, column: 32, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !1, line: 945, column: 9)
!5594 = !DILocation(line: 945, column: 9, scope: !5590)
!5595 = !DILocation(line: 947, column: 17, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5593, file: !1, line: 946, column: 11)
!5597 = !DILocation(line: 945, column: 9, scope: !5593)
!5598 = distinct !{!5598, !5594, !5599}
!5599 = !DILocation(line: 948, column: 11, scope: !5590)
!5600 = !DILocation(line: 949, column: 19, scope: !5576)
!5601 = !DILocation(line: 950, column: 16, scope: !5576)
!5602 = !DILocation(line: 950, column: 9, scope: !5576)
!5603 = !DILocation(line: 956, column: 45, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 955, column: 7)
!5605 = !DILocation(line: 956, column: 16, scope: !5604)
!5606 = !DILocation(line: 957, column: 2, scope: !5604)
!5607 = !DILocation(line: 958, column: 11, scope: !5604)
!5608 = !DILocation(line: 960, column: 6, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5604, file: !1, line: 960, column: 6)
!5610 = !DILocation(line: 960, column: 6, scope: !5604)
!5611 = !DILocation(line: 961, column: 18, scope: !5609)
!5612 = !DILocation(line: 961, column: 16, scope: !5609)
!5613 = !DILocation(line: 961, column: 4, scope: !5609)
!5614 = !DILocation(line: 964, column: 13, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5604, file: !1, line: 964, column: 13)
!5616 = !DILocation(line: 964, column: 13, scope: !5604)
!5617 = !DILocation(line: 965, column: 20, scope: !5615)
!5618 = !DILocation(line: 965, column: 11, scope: !5615)
!5619 = !DILocation(line: 967, column: 14, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5604, file: !1, line: 967, column: 9)
!5621 = !DILocation(line: 0, scope: !5620)
!5622 = !DILocation(line: 967, column: 32, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5620, file: !1, line: 967, column: 9)
!5624 = !DILocation(line: 967, column: 9, scope: !5620)
!5625 = !DILocation(line: 969, column: 17, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5623, file: !1, line: 968, column: 11)
!5627 = !DILocation(line: 967, column: 9, scope: !5623)
!5628 = distinct !{!5628, !5624, !5629}
!5629 = !DILocation(line: 970, column: 11, scope: !5620)
!5630 = !DILocation(line: 973, column: 19, scope: !5604)
!5631 = !DILocation(line: 974, column: 16, scope: !5604)
!5632 = !DILocation(line: 974, column: 9, scope: !5604)
!5633 = !DILocation(line: 980, column: 6, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5635, file: !1, line: 980, column: 6)
!5635 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 979, column: 7)
!5636 = !DILocation(line: 980, column: 6, scope: !5635)
!5637 = !DILocation(line: 981, column: 16, scope: !5634)
!5638 = !DILocation(line: 981, column: 4, scope: !5634)
!5639 = !DILocation(line: 984, column: 41, scope: !5635)
!5640 = !DILocation(line: 984, column: 25, scope: !5635)
!5641 = !DILocation(line: 985, column: 20, scope: !5635)
!5642 = !DILocation(line: 986, column: 9, scope: !5635)
!5643 = !DILocation(line: 987, column: 6, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5635, file: !1, line: 987, column: 6)
!5645 = !DILocation(line: 987, column: 29, scope: !5644)
!5646 = !DILocation(line: 987, column: 6, scope: !5635)
!5647 = !DILocation(line: 988, column: 16, scope: !5644)
!5648 = !DILocation(line: 988, column: 4, scope: !5644)
!5649 = !DILocation(line: 989, column: 11, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5644, file: !1, line: 989, column: 11)
!5651 = !DILocation(line: 989, column: 11, scope: !5644)
!5652 = !DILocation(line: 990, column: 16, scope: !5650)
!5653 = !DILocation(line: 990, column: 4, scope: !5650)
!5654 = !DILocation(line: 992, column: 16, scope: !5650)
!5655 = !DILocation(line: 1003, column: 2, scope: !5528)
!5656 = !DILocation(line: 1004, column: 21, scope: !5528)
!5657 = !DILocation(line: 1004, column: 10, scope: !5528)
!5658 = !DILocation(line: 1004, column: 33, scope: !5528)
!5659 = !DILocation(line: 0, scope: !5528)
!5660 = !DILocation(line: 1007, column: 14, scope: !5528)
!5661 = !DILocation(line: 1008, column: 16, scope: !5528)
!5662 = !DILocation(line: 1014, column: 2, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 1013, column: 7)
!5664 = !DILocation(line: 1017, column: 41, scope: !5663)
!5665 = !DILocation(line: 1017, column: 25, scope: !5663)
!5666 = !DILocation(line: 1018, column: 20, scope: !5663)
!5667 = !DILocation(line: 1019, column: 2, scope: !5663)
!5668 = !DILocation(line: 1020, column: 21, scope: !5663)
!5669 = !DILocation(line: 1021, column: 9, scope: !5663)
!5670 = !DILocation(line: 1025, column: 7, scope: !5529)
!5671 = !DILocation(line: 1028, column: 5, scope: !5504)
!5672 = !DILocation(line: 1030, column: 1, scope: !5504)
!5673 = distinct !DISubprogram(name: "vect_is_simple_use", scope: !1, file: !1, line: 4486, type: !5674, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5676)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!2166, !2354, !3569, !3818, !3531, !2765, !5086}
!5676 = !{!5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684, !5685}
!5677 = !DILocalVariable(name: "operand", arg: 1, scope: !5673, file: !1, line: 4486, type: !2354)
!5678 = !DILocalVariable(name: "loop_vinfo", arg: 2, scope: !5673, file: !1, line: 4486, type: !3569)
!5679 = !DILocalVariable(name: "bb_vinfo", arg: 3, scope: !5673, file: !1, line: 4487, type: !3818)
!5680 = !DILocalVariable(name: "def_stmt", arg: 4, scope: !5673, file: !1, line: 4487, type: !3531)
!5681 = !DILocalVariable(name: "def", arg: 5, scope: !5673, file: !1, line: 4488, type: !2765)
!5682 = !DILocalVariable(name: "dt", arg: 6, scope: !5673, file: !1, line: 4488, type: !5086)
!5683 = !DILocalVariable(name: "bb", scope: !5673, file: !1, line: 4490, type: !2616)
!5684 = !DILocalVariable(name: "stmt_vinfo", scope: !5673, file: !1, line: 4491, type: !3562)
!5685 = !DILocalVariable(name: "loop", scope: !5673, file: !1, line: 4492, type: !2802)
!5686 = !DILocation(line: 0, scope: !5673)
!5687 = !DILocation(line: 4494, column: 7, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4494, column: 7)
!5689 = !DILocation(line: 4494, column: 7, scope: !5673)
!5690 = !DILocation(line: 4495, column: 12, scope: !5688)
!5691 = !DILocation(line: 4495, column: 5, scope: !5688)
!5692 = !DILocation(line: 4497, column: 13, scope: !5673)
!5693 = !DILocation(line: 4498, column: 8, scope: !5673)
!5694 = !DILocation(line: 4500, column: 7, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4500, column: 7)
!5696 = !DILocation(line: 4500, column: 7, scope: !5673)
!5697 = !DILocation(line: 4502, column: 16, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5695, file: !1, line: 4501, column: 5)
!5699 = !DILocation(line: 4502, column: 7, scope: !5698)
!5700 = !DILocation(line: 4503, column: 27, scope: !5698)
!5701 = !DILocation(line: 4503, column: 7, scope: !5698)
!5702 = !DILocation(line: 4504, column: 5, scope: !5698)
!5703 = !DILocation(line: 4506, column: 7, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4506, column: 7)
!5705 = !DILocation(line: 4506, column: 27, scope: !5704)
!5706 = !DILocation(line: 4506, column: 42, scope: !5704)
!5707 = !DILocation(line: 4506, column: 65, scope: !5704)
!5708 = !DILocation(line: 4506, column: 7, scope: !5673)
!5709 = !DILocation(line: 4508, column: 11, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5704, file: !1, line: 4507, column: 5)
!5711 = !DILocation(line: 4509, column: 7, scope: !5710)
!5712 = !DILocation(line: 4512, column: 7, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4512, column: 7)
!5714 = !DILocation(line: 4512, column: 7, scope: !5673)
!5715 = !DILocation(line: 4514, column: 12, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5713, file: !1, line: 4513, column: 5)
!5717 = !DILocation(line: 4515, column: 11, scope: !5716)
!5718 = !DILocation(line: 4516, column: 7, scope: !5716)
!5719 = !DILocation(line: 4519, column: 7, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4519, column: 7)
!5721 = !DILocation(line: 4519, column: 27, scope: !5720)
!5722 = !DILocation(line: 4519, column: 7, scope: !5673)
!5723 = !DILocation(line: 4521, column: 11, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 4521, column: 11)
!5725 = distinct !DILexicalBlock(scope: !5720, file: !1, line: 4520, column: 5)
!5726 = !DILocation(line: 4521, column: 11, scope: !5725)
!5727 = !DILocation(line: 4522, column: 18, scope: !5724)
!5728 = !DILocation(line: 4522, column: 9, scope: !5724)
!5729 = !DILocation(line: 4523, column: 17, scope: !5725)
!5730 = !DILocation(line: 0, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4526, column: 7)
!5732 = !DILocation(line: 4526, column: 7, scope: !5731)
!5733 = !DILocation(line: 4524, column: 5, scope: !5725)
!5734 = !DILocation(line: 4526, column: 27, scope: !5731)
!5735 = !DILocation(line: 4526, column: 7, scope: !5673)
!5736 = !DILocation(line: 4528, column: 11, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !1, line: 4528, column: 11)
!5738 = distinct !DILexicalBlock(scope: !5731, file: !1, line: 4527, column: 5)
!5739 = !DILocation(line: 4528, column: 11, scope: !5738)
!5740 = !DILocation(line: 4529, column: 18, scope: !5737)
!5741 = !DILocation(line: 4529, column: 9, scope: !5737)
!5742 = !DILocation(line: 4533, column: 15, scope: !5673)
!5743 = !DILocation(line: 4533, column: 13, scope: !5673)
!5744 = !DILocation(line: 4534, column: 17, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4534, column: 7)
!5746 = !DILocation(line: 4534, column: 7, scope: !5673)
!5747 = !DILocation(line: 4536, column: 11, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 4535, column: 5)
!5749 = !DILocation(line: 4537, column: 18, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 4536, column: 11)
!5751 = !DILocation(line: 4537, column: 9, scope: !5750)
!5752 = !DILocation(line: 4541, column: 7, scope: !5673)
!5753 = !DILocation(line: 4543, column: 16, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !1, line: 4542, column: 5)
!5755 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4541, column: 7)
!5756 = !DILocation(line: 4543, column: 7, scope: !5754)
!5757 = !DILocation(line: 4544, column: 26, scope: !5754)
!5758 = !DILocation(line: 4544, column: 37, scope: !5754)
!5759 = !DILocation(line: 4544, column: 7, scope: !5754)
!5760 = !DILocation(line: 4545, column: 5, scope: !5754)
!5761 = !DILocation(line: 4549, column: 21, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4549, column: 7)
!5763 = !DILocation(line: 4549, column: 7, scope: !5762)
!5764 = !DILocation(line: 4549, column: 7, scope: !5673)
!5765 = !DILocation(line: 4551, column: 12, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5762, file: !1, line: 4550, column: 5)
!5767 = !DILocation(line: 4552, column: 11, scope: !5766)
!5768 = !DILocation(line: 4553, column: 7, scope: !5766)
!5769 = !DILocation(line: 4556, column: 19, scope: !5673)
!5770 = !DILocation(line: 4556, column: 8, scope: !5673)
!5771 = !DILocation(line: 4558, column: 13, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4558, column: 7)
!5773 = !DILocation(line: 4558, column: 17, scope: !5772)
!5774 = !DILocation(line: 4559, column: 7, scope: !5772)
!5775 = !DILocation(line: 4559, column: 17, scope: !5772)
!5776 = !DILocation(line: 4559, column: 26, scope: !5772)
!5777 = !DILocation(line: 4559, column: 23, scope: !5772)
!5778 = !DILocation(line: 4560, column: 7, scope: !5772)
!5779 = !DILocation(line: 4560, column: 17, scope: !5772)
!5780 = !DILocation(line: 4560, column: 33, scope: !5772)
!5781 = !DILocation(line: 4560, column: 20, scope: !5772)
!5782 = !DILocation(line: 4560, column: 44, scope: !5772)
!5783 = !DILocation(line: 4558, column: 7, scope: !5673)
!5784 = !DILocation(line: 4561, column: 5, scope: !5772)
!5785 = !DILocation(line: 4564, column: 36, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5772, file: !1, line: 4563, column: 5)
!5787 = !DILocation(line: 4564, column: 20, scope: !5786)
!5788 = !DILocation(line: 4565, column: 13, scope: !5786)
!5789 = !DILocation(line: 0, scope: !5772)
!5790 = !DILocation(line: 4568, column: 11, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4568, column: 7)
!5792 = !DILocation(line: 4568, column: 7, scope: !5673)
!5793 = !DILocation(line: 4570, column: 11, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5791, file: !1, line: 4569, column: 5)
!5795 = !DILocation(line: 4571, column: 18, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5794, file: !1, line: 4570, column: 11)
!5797 = !DILocation(line: 4571, column: 9, scope: !5796)
!5798 = !DILocation(line: 4575, column: 7, scope: !5673)
!5799 = !DILocation(line: 4576, column: 14, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4575, column: 7)
!5801 = !DILocation(line: 4576, column: 44, scope: !5800)
!5802 = !DILocation(line: 4576, column: 5, scope: !5800)
!5803 = !DILocation(line: 4578, column: 24, scope: !5673)
!5804 = !DILocation(line: 4578, column: 11, scope: !5673)
!5805 = !DILocation(line: 4578, column: 3, scope: !5673)
!5806 = !DILocation(line: 4581, column: 33, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 4579, column: 5)
!5808 = !DILocation(line: 4581, column: 14, scope: !5807)
!5809 = !DILocation(line: 4581, column: 12, scope: !5807)
!5810 = !DILocation(line: 4582, column: 7, scope: !5807)
!5811 = !DILocation(line: 4585, column: 33, scope: !5807)
!5812 = !DILocation(line: 4585, column: 14, scope: !5807)
!5813 = !DILocation(line: 4585, column: 12, scope: !5807)
!5814 = !DILocation(line: 4586, column: 7, scope: !5807)
!5815 = !DILocation(line: 4589, column: 31, scope: !5807)
!5816 = !DILocation(line: 4589, column: 14, scope: !5807)
!5817 = !DILocation(line: 4589, column: 12, scope: !5807)
!5818 = !DILocation(line: 4590, column: 16, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5807, file: !1, line: 4590, column: 11)
!5820 = !DILocation(line: 4590, column: 11, scope: !5807)
!5821 = !DILocation(line: 4594, column: 11, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5807, file: !1, line: 4594, column: 11)
!5823 = !DILocation(line: 4594, column: 11, scope: !5807)
!5824 = !DILocation(line: 4595, column: 18, scope: !5822)
!5825 = !DILocation(line: 4595, column: 9, scope: !5822)
!5826 = !DILocation(line: 4600, column: 1, scope: !5673)
!5827 = distinct !DISubprogram(name: "get_vectype_for_scalar_type", scope: !1, file: !1, line: 4415, type: !5828, scopeLine: 4416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5830)
!5828 = !DISubroutineType(types: !5829)
!5829 = !{!2354, !2354}
!5830 = !{!5831, !5832, !5833, !5834, !5835}
!5831 = !DILocalVariable(name: "scalar_type", arg: 1, scope: !5827, file: !1, line: 4415, type: !2354)
!5832 = !DILocalVariable(name: "inner_mode", scope: !5827, file: !1, line: 4417, type: !3)
!5833 = !DILocalVariable(name: "nbytes", scope: !5827, file: !1, line: 4418, type: !5)
!5834 = !DILocalVariable(name: "nunits", scope: !5827, file: !1, line: 4419, type: !2256)
!5835 = !DILocalVariable(name: "vectype", scope: !5827, file: !1, line: 4420, type: !2354)
!5836 = !DILocation(line: 0, scope: !5827)
!5837 = !DILocation(line: 4417, column: 34, scope: !5827)
!5838 = !DILocation(line: 4418, column: 25, scope: !5827)
!5839 = !DILocation(line: 4422, column: 14, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5827, file: !1, line: 4422, column: 7)
!5841 = !DILocation(line: 4422, column: 19, scope: !5840)
!5842 = !DILocation(line: 4422, column: 32, scope: !5840)
!5843 = !DILocation(line: 4422, column: 29, scope: !5840)
!5844 = !DILocation(line: 4422, column: 7, scope: !5827)
!5845 = !DILocation(line: 4427, column: 16, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5827, file: !1, line: 4427, column: 7)
!5847 = !DILocation(line: 4427, column: 14, scope: !5846)
!5848 = !DILocation(line: 4427, column: 7, scope: !5827)
!5849 = !DILocation(line: 4434, column: 7, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5827, file: !1, line: 4434, column: 7)
!5851 = !DILocation(line: 4435, column: 7, scope: !5850)
!5852 = !DILocation(line: 4435, column: 10, scope: !5850)
!5853 = !DILocation(line: 4435, column: 43, scope: !5850)
!5854 = !DILocation(line: 4435, column: 40, scope: !5850)
!5855 = !DILocation(line: 4434, column: 7, scope: !5827)
!5856 = !DILocation(line: 4440, column: 12, scope: !5827)
!5857 = !DILocation(line: 4440, column: 45, scope: !5827)
!5858 = !DILocation(line: 4442, column: 13, scope: !5827)
!5859 = !DILocation(line: 4443, column: 7, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5827, file: !1, line: 4443, column: 7)
!5861 = !DILocation(line: 4443, column: 7, scope: !5827)
!5862 = !DILocation(line: 4445, column: 16, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5860, file: !1, line: 4444, column: 5)
!5864 = !DILocation(line: 4445, column: 7, scope: !5863)
!5865 = !DILocation(line: 4446, column: 27, scope: !5863)
!5866 = !DILocation(line: 4446, column: 7, scope: !5863)
!5867 = !DILocation(line: 4447, column: 5, scope: !5863)
!5868 = !DILocation(line: 4449, column: 8, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5827, file: !1, line: 4449, column: 7)
!5870 = !DILocation(line: 4449, column: 7, scope: !5827)
!5871 = !DILocation(line: 4452, column: 7, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5827, file: !1, line: 4452, column: 7)
!5873 = !DILocation(line: 4452, column: 7, scope: !5827)
!5874 = !DILocation(line: 4454, column: 16, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5872, file: !1, line: 4453, column: 5)
!5876 = !DILocation(line: 4454, column: 7, scope: !5875)
!5877 = !DILocation(line: 4455, column: 27, scope: !5875)
!5878 = !DILocation(line: 4455, column: 7, scope: !5875)
!5879 = !DILocation(line: 4456, column: 5, scope: !5875)
!5880 = !DILocation(line: 4458, column: 8, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5827, file: !1, line: 4458, column: 7)
!5882 = !DILocation(line: 4459, column: 7, scope: !5881)
!5883 = !DILocation(line: 4459, column: 11, scope: !5881)
!5884 = !DILocation(line: 4458, column: 7, scope: !5827)
!5885 = !DILocation(line: 4461, column: 11, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !1, line: 4461, column: 11)
!5887 = distinct !DILexicalBlock(scope: !5881, file: !1, line: 4460, column: 5)
!5888 = !DILocation(line: 4461, column: 11, scope: !5887)
!5889 = !DILocation(line: 4462, column: 18, scope: !5886)
!5890 = !DILocation(line: 4462, column: 9, scope: !5886)
!5891 = !DILocation(line: 4467, column: 1, scope: !5827)
!5892 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !4841, file: !4841, line: 434, type: !5893, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5895)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!2354, !3906}
!5895 = !{!5896}
!5896 = !DILocalVariable(name: "def", arg: 1, scope: !5892, file: !4841, line: 434, type: !3906)
!5897 = !DILocation(line: 0, scope: !5892)
!5898 = !DILocation(line: 436, column: 10, scope: !5892)
!5899 = !DILocation(line: 436, column: 3, scope: !5892)
!5900 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !2092, file: !2092, line: 3080, type: !5901, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5903)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{!2765, !2167}
!5903 = !{!5904}
!5904 = !DILocalVariable(name: "gs", arg: 1, scope: !5900, file: !2092, line: 3080, type: !2167)
!5905 = !DILocation(line: 0, scope: !5900)
!5906 = !DILocation(line: 3083, column: 26, scope: !5900)
!5907 = !DILocation(line: 3083, column: 3, scope: !5900)
!5908 = distinct !DISubprogram(name: "is_gimple_call", scope: !2092, file: !2092, line: 1870, type: !5909, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5911)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!2166, !4825}
!5911 = !{!5912}
!5912 = !DILocalVariable(name: "gs", arg: 1, scope: !5908, file: !2092, line: 1870, type: !4825)
!5913 = !DILocation(line: 0, scope: !5908)
!5914 = !DILocation(line: 1872, column: 10, scope: !5908)
!5915 = !DILocation(line: 1872, column: 27, scope: !5908)
!5916 = !DILocation(line: 1872, column: 3, scope: !5908)
!5917 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !2092, file: !2092, line: 1878, type: !5497, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5918)
!5918 = !{!5919}
!5919 = !DILocalVariable(name: "gs", arg: 1, scope: !5917, file: !2092, line: 1878, type: !4825)
!5920 = !DILocation(line: 0, scope: !5917)
!5921 = !DILocation(line: 1881, column: 10, scope: !5917)
!5922 = !DILocation(line: 1881, column: 3, scope: !5917)
!5923 = distinct !DISubprogram(name: "gimple_bb", scope: !2092, file: !2092, line: 1112, type: !5924, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5926)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{!2192, !4825}
!5926 = !{!5927}
!5927 = !DILocalVariable(name: "g", arg: 1, scope: !5923, file: !2092, line: 1112, type: !4825)
!5928 = !DILocation(line: 0, scope: !5923)
!5929 = !DILocation(line: 1114, column: 20, scope: !5923)
!5930 = !DILocation(line: 1114, column: 3, scope: !5923)
!5931 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !4841, file: !4841, line: 442, type: !5932, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5934)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{!3907, !2167, !2256}
!5934 = !{!5935, !5936}
!5935 = !DILocalVariable(name: "gs", arg: 1, scope: !5931, file: !4841, line: 442, type: !2167)
!5936 = !DILocalVariable(name: "i", arg: 2, scope: !5931, file: !4841, line: 442, type: !2256)
!5937 = !DILocation(line: 0, scope: !5931)
!5938 = !DILocation(line: 444, column: 11, scope: !5931)
!5939 = !DILocation(line: 444, column: 35, scope: !5931)
!5940 = !DILocation(line: 444, column: 3, scope: !5931)
!5941 = distinct !DISubprogram(name: "vect_get_vec_def_for_stmt_copy", scope: !1, file: !1, line: 1090, type: !5942, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!2354, !411, !2354}
!5944 = !{!5945, !5946, !5947, !5948}
!5945 = !DILocalVariable(name: "dt", arg: 1, scope: !5941, file: !1, line: 1090, type: !411)
!5946 = !DILocalVariable(name: "vec_oprnd", arg: 2, scope: !5941, file: !1, line: 1090, type: !2354)
!5947 = !DILocalVariable(name: "vec_stmt_for_operand", scope: !5941, file: !1, line: 1092, type: !2167)
!5948 = !DILocalVariable(name: "def_stmt_info", scope: !5941, file: !1, line: 1093, type: !3562)
!5949 = !DILocation(line: 0, scope: !5941)
!5950 = !DILocation(line: 1096, column: 31, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5941, file: !1, line: 1096, column: 7)
!5952 = !DILocation(line: 1099, column: 26, scope: !5941)
!5953 = !DILocation(line: 1100, column: 19, scope: !5941)
!5954 = !DILocation(line: 1101, column: 3, scope: !5941)
!5955 = !DILocation(line: 1102, column: 26, scope: !5941)
!5956 = !DILocation(line: 1103, column: 3, scope: !5941)
!5957 = !DILocation(line: 1104, column: 15, scope: !5941)
!5958 = !DILocation(line: 1105, column: 7, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5941, file: !1, line: 1105, column: 7)
!5960 = !DILocation(line: 1105, column: 42, scope: !5959)
!5961 = !DILocation(line: 1105, column: 7, scope: !5941)
!5962 = !DILocation(line: 1106, column: 17, scope: !5959)
!5963 = !DILocation(line: 1106, column: 5, scope: !5959)
!5964 = !DILocation(line: 1108, column: 17, scope: !5959)
!5965 = !DILocation(line: 1110, column: 1, scope: !5941)
!5966 = distinct !DISubprogram(name: "set_vinfo_for_stmt", scope: !389, file: !389, line: 634, type: !5967, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5969)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{null, !2167, !3562}
!5969 = !{!5970, !5971, !5972}
!5970 = !DILocalVariable(name: "stmt", arg: 1, scope: !5966, file: !389, line: 634, type: !2167)
!5971 = !DILocalVariable(name: "info", arg: 2, scope: !5966, file: !389, line: 634, type: !3562)
!5972 = !DILocalVariable(name: "uid", scope: !5966, file: !389, line: 636, type: !5)
!5973 = !DILocation(line: 0, scope: !5966)
!5974 = !DILocation(line: 636, column: 22, scope: !5966)
!5975 = !DILocation(line: 637, column: 11, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5966, file: !389, line: 637, column: 7)
!5977 = !DILocation(line: 637, column: 7, scope: !5966)
!5978 = !DILocation(line: 639, column: 7, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5976, file: !389, line: 638, column: 5)
!5980 = !DILocation(line: 640, column: 13, scope: !5979)
!5981 = !DILocation(line: 640, column: 56, scope: !5979)
!5982 = !DILocation(line: 641, column: 7, scope: !5979)
!5983 = !DILocation(line: 642, column: 7, scope: !5979)
!5984 = !DILocation(line: 643, column: 5, scope: !5979)
!5985 = !DILocation(line: 645, column: 5, scope: !5976)
!5986 = !DILocation(line: 646, column: 1, scope: !5966)
!5987 = distinct !DISubprogram(name: "new_stmt_vec_info", scope: !1, file: !1, line: 4327, type: !5988, scopeLine: 4329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5990)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{!3562, !2167, !3569, !3818}
!5990 = !{!5991, !5992, !5993, !5994}
!5991 = !DILocalVariable(name: "stmt", arg: 1, scope: !5987, file: !1, line: 4327, type: !2167)
!5992 = !DILocalVariable(name: "loop_vinfo", arg: 2, scope: !5987, file: !1, line: 4327, type: !3569)
!5993 = !DILocalVariable(name: "bb_vinfo", arg: 3, scope: !5987, file: !1, line: 4328, type: !3818)
!5994 = !DILocalVariable(name: "res", scope: !5987, file: !1, line: 4330, type: !3562)
!5995 = !DILocation(line: 0, scope: !5987)
!5996 = !DILocation(line: 4331, column: 25, scope: !5987)
!5997 = !DILocation(line: 4331, column: 9, scope: !5987)
!5998 = !DILocation(line: 4333, column: 3, scope: !5987)
!5999 = !DILocation(line: 4333, column: 25, scope: !5987)
!6000 = !DILocation(line: 4334, column: 3, scope: !5987)
!6001 = !DILocation(line: 4334, column: 25, scope: !5987)
!6002 = !DILocation(line: 4335, column: 3, scope: !5987)
!6003 = !DILocation(line: 4335, column: 31, scope: !5987)
!6004 = !DILocation(line: 4336, column: 3, scope: !5987)
!6005 = !DILocation(line: 4336, column: 29, scope: !5987)
!6006 = !DILocation(line: 4337, column: 3, scope: !5987)
!6007 = !DILocation(line: 4337, column: 29, scope: !5987)
!6008 = !DILocation(line: 4338, column: 3, scope: !5987)
!6009 = !DILocation(line: 4338, column: 27, scope: !5987)
!6010 = !DILocation(line: 4339, column: 3, scope: !5987)
!6011 = !DILocation(line: 4339, column: 28, scope: !5987)
!6012 = !DILocation(line: 4340, column: 3, scope: !5987)
!6013 = !DILocation(line: 4340, column: 29, scope: !5987)
!6014 = !DILocation(line: 4341, column: 3, scope: !5987)
!6015 = !DILocation(line: 4341, column: 33, scope: !5987)
!6016 = !DILocation(line: 4342, column: 3, scope: !5987)
!6017 = !DILocation(line: 4342, column: 33, scope: !5987)
!6018 = !DILocation(line: 4343, column: 3, scope: !5987)
!6019 = !DILocation(line: 4343, column: 29, scope: !5987)
!6020 = !DILocation(line: 4345, column: 3, scope: !5987)
!6021 = !DILocation(line: 4345, column: 36, scope: !5987)
!6022 = !DILocation(line: 4346, column: 3, scope: !5987)
!6023 = !DILocation(line: 4346, column: 30, scope: !5987)
!6024 = !DILocation(line: 4347, column: 3, scope: !5987)
!6025 = !DILocation(line: 4347, column: 28, scope: !5987)
!6026 = !DILocation(line: 4348, column: 3, scope: !5987)
!6027 = !DILocation(line: 4348, column: 28, scope: !5987)
!6028 = !DILocation(line: 4349, column: 3, scope: !5987)
!6029 = !DILocation(line: 4349, column: 34, scope: !5987)
!6030 = !DILocation(line: 4351, column: 7, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !5987, file: !1, line: 4351, column: 7)
!6032 = !DILocation(line: 4351, column: 26, scope: !6031)
!6033 = !DILocation(line: 4352, column: 7, scope: !6031)
!6034 = !DILocation(line: 4352, column: 31, scope: !6031)
!6035 = !DILocation(line: 4352, column: 10, scope: !6031)
!6036 = !DILocation(line: 4351, column: 7, scope: !5987)
!6037 = !DILocation(line: 4353, column: 5, scope: !6031)
!6038 = !DILocation(line: 4353, column: 31, scope: !6031)
!6039 = !DILocation(line: 4355, column: 5, scope: !6031)
!6040 = !DILocation(line: 4355, column: 31, scope: !6031)
!6041 = !DILocation(line: 4357, column: 38, scope: !5987)
!6042 = !DILocation(line: 4357, column: 3, scope: !5987)
!6043 = !DILocation(line: 4357, column: 36, scope: !5987)
!6044 = !DILocation(line: 4358, column: 3, scope: !5987)
!6045 = !DILocation(line: 4358, column: 40, scope: !5987)
!6046 = !DILocation(line: 4359, column: 3, scope: !5987)
!6047 = !DILocation(line: 4359, column: 41, scope: !5987)
!6048 = !DILocation(line: 4360, column: 3, scope: !5987)
!6049 = !DILocation(line: 4360, column: 23, scope: !5987)
!6050 = !DILocation(line: 4361, column: 3, scope: !5987)
!6051 = !DILocation(line: 4361, column: 27, scope: !5987)
!6052 = !DILocation(line: 4362, column: 3, scope: !5987)
!6053 = !DILocation(line: 4362, column: 26, scope: !5987)
!6054 = !DILocation(line: 4363, column: 3, scope: !5987)
!6055 = !DILocation(line: 4363, column: 23, scope: !5987)
!6056 = !DILocation(line: 4364, column: 3, scope: !5987)
!6057 = !DILocation(line: 4364, column: 30, scope: !5987)
!6058 = !DILocation(line: 4365, column: 3, scope: !5987)
!6059 = !DILocation(line: 4365, column: 22, scope: !5987)
!6060 = !DILocation(line: 4366, column: 3, scope: !5987)
!6061 = !DILocation(line: 4366, column: 31, scope: !5987)
!6062 = !DILocation(line: 4367, column: 3, scope: !5987)
!6063 = !DILocation(line: 4367, column: 40, scope: !5987)
!6064 = !DILocation(line: 4369, column: 3, scope: !5987)
!6065 = distinct !DISubprogram(name: "gimple_set_location", scope: !2092, file: !2092, line: 1156, type: !6066, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6068)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{null, !2167, !2186}
!6068 = !{!6069, !6070}
!6069 = !DILocalVariable(name: "g", arg: 1, scope: !6065, file: !2092, line: 1156, type: !2167)
!6070 = !DILocalVariable(name: "location", arg: 2, scope: !6065, file: !2092, line: 1156, type: !2186)
!6071 = !DILocation(line: 0, scope: !6065)
!6072 = !DILocation(line: 1158, column: 13, scope: !6065)
!6073 = !DILocation(line: 1158, column: 22, scope: !6065)
!6074 = !DILocation(line: 1159, column: 1, scope: !6065)
!6075 = distinct !DISubprogram(name: "gimple_location", scope: !2092, file: !2092, line: 1139, type: !6076, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6078)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!2186, !4825}
!6078 = !{!6079}
!6079 = !DILocalVariable(name: "g", arg: 1, scope: !6075, file: !2092, line: 1139, type: !4825)
!6080 = !DILocation(line: 0, scope: !6075)
!6081 = !DILocation(line: 1141, column: 20, scope: !6075)
!6082 = !DILocation(line: 1141, column: 3, scope: !6075)
!6083 = distinct !DISubprogram(name: "vectorizable_function", scope: !1, file: !1, line: 1195, type: !6084, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6086)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{!2354, !2167, !2354, !2354}
!6086 = !{!6087, !6088, !6089, !6090}
!6087 = !DILocalVariable(name: "call", arg: 1, scope: !6083, file: !1, line: 1195, type: !2167)
!6088 = !DILocalVariable(name: "vectype_out", arg: 2, scope: !6083, file: !1, line: 1195, type: !2354)
!6089 = !DILocalVariable(name: "vectype_in", arg: 3, scope: !6083, file: !1, line: 1195, type: !2354)
!6090 = !DILocalVariable(name: "fndecl", scope: !6083, file: !1, line: 1197, type: !2354)
!6091 = !DILocation(line: 0, scope: !6083)
!6092 = !DILocation(line: 1197, column: 17, scope: !6083)
!6093 = !DILocation(line: 1201, column: 9, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6083, file: !1, line: 1201, column: 7)
!6095 = !DILocation(line: 1201, column: 34, scope: !6094)
!6096 = !DILocation(line: 1204, column: 8, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6083, file: !1, line: 1204, column: 7)
!6098 = !DILocation(line: 1201, column: 7, scope: !6083)
!6099 = !DILocation(line: 1205, column: 10, scope: !6097)
!6100 = !DILocation(line: 1205, column: 29, scope: !6097)
!6101 = !DILocation(line: 1206, column: 7, scope: !6097)
!6102 = !DILocation(line: 1206, column: 11, scope: !6097)
!6103 = !DILocation(line: 1204, column: 7, scope: !6083)
!6104 = !DILocation(line: 1209, column: 28, scope: !6083)
!6105 = !DILocation(line: 1209, column: 10, scope: !6083)
!6106 = !DILocation(line: 1209, column: 3, scope: !6083)
!6107 = !DILocation(line: 1211, column: 1, scope: !6083)
!6108 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !2092, file: !2092, line: 1954, type: !5497, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6109)
!6109 = !{!6110, !6111}
!6110 = !DILocalVariable(name: "gs", arg: 1, scope: !6108, file: !2092, line: 1954, type: !4825)
!6111 = !DILocalVariable(name: "addr", scope: !6108, file: !2092, line: 1956, type: !2354)
!6112 = !DILocation(line: 0, scope: !6108)
!6113 = !DILocation(line: 1956, column: 15, scope: !6108)
!6114 = !DILocation(line: 1957, column: 7, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6108, file: !2092, line: 1957, column: 7)
!6116 = !DILocation(line: 1957, column: 24, scope: !6115)
!6117 = !DILocation(line: 1957, column: 7, scope: !6108)
!6118 = !DILocation(line: 1958, column: 12, scope: !6115)
!6119 = !DILocation(line: 1958, column: 5, scope: !6115)
!6120 = !DILocation(line: 1960, column: 1, scope: !6108)
!6121 = distinct !DISubprogram(name: "vectorizable_condition", scope: !1, file: !1, line: 3810, type: !6122, scopeLine: 3812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6124)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{!2166, !2167, !3524, !3531, !2354, !2256}
!6124 = !{!6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152, !6155}
!6125 = !DILocalVariable(name: "stmt", arg: 1, scope: !6121, file: !1, line: 3810, type: !2167)
!6126 = !DILocalVariable(name: "gsi", arg: 2, scope: !6121, file: !1, line: 3810, type: !3524)
!6127 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !6121, file: !1, line: 3811, type: !3531)
!6128 = !DILocalVariable(name: "reduc_def", arg: 4, scope: !6121, file: !1, line: 3811, type: !2354)
!6129 = !DILocalVariable(name: "reduc_index", arg: 5, scope: !6121, file: !1, line: 3811, type: !2256)
!6130 = !DILocalVariable(name: "scalar_dest", scope: !6121, file: !1, line: 3813, type: !2354)
!6131 = !DILocalVariable(name: "vec_dest", scope: !6121, file: !1, line: 3814, type: !2354)
!6132 = !DILocalVariable(name: "op", scope: !6121, file: !1, line: 3815, type: !2354)
!6133 = !DILocalVariable(name: "cond_expr", scope: !6121, file: !1, line: 3816, type: !2354)
!6134 = !DILocalVariable(name: "then_clause", scope: !6121, file: !1, line: 3816, type: !2354)
!6135 = !DILocalVariable(name: "else_clause", scope: !6121, file: !1, line: 3816, type: !2354)
!6136 = !DILocalVariable(name: "stmt_info", scope: !6121, file: !1, line: 3817, type: !3562)
!6137 = !DILocalVariable(name: "vectype", scope: !6121, file: !1, line: 3818, type: !2354)
!6138 = !DILocalVariable(name: "vec_cond_lhs", scope: !6121, file: !1, line: 3819, type: !2354)
!6139 = !DILocalVariable(name: "vec_cond_rhs", scope: !6121, file: !1, line: 3819, type: !2354)
!6140 = !DILocalVariable(name: "vec_then_clause", scope: !6121, file: !1, line: 3819, type: !2354)
!6141 = !DILocalVariable(name: "vec_else_clause", scope: !6121, file: !1, line: 3819, type: !2354)
!6142 = !DILocalVariable(name: "vec_compare", scope: !6121, file: !1, line: 3820, type: !2354)
!6143 = !DILocalVariable(name: "vec_cond_expr", scope: !6121, file: !1, line: 3820, type: !2354)
!6144 = !DILocalVariable(name: "new_temp", scope: !6121, file: !1, line: 3821, type: !2354)
!6145 = !DILocalVariable(name: "loop_vinfo", scope: !6121, file: !1, line: 3822, type: !3569)
!6146 = !DILocalVariable(name: "vec_mode", scope: !6121, file: !1, line: 3823, type: !3)
!6147 = !DILocalVariable(name: "def", scope: !6121, file: !1, line: 3824, type: !2354)
!6148 = !DILocalVariable(name: "dt", scope: !6121, file: !1, line: 3825, type: !411)
!6149 = !DILocalVariable(name: "nunits", scope: !6121, file: !1, line: 3826, type: !2256)
!6150 = !DILocalVariable(name: "ncopies", scope: !6121, file: !1, line: 3827, type: !2256)
!6151 = !DILocalVariable(name: "code", scope: !6121, file: !1, line: 3828, type: !181)
!6152 = !DILocalVariable(name: "then_def_stmt", scope: !6153, file: !1, line: 3883, type: !2167)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 3882, column: 5)
!6154 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3881, column: 7)
!6155 = !DILocalVariable(name: "else_def_stmt", scope: !6156, file: !1, line: 3895, type: !2167)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !1, line: 3894, column: 5)
!6157 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3893, column: 7)
!6158 = !DILocation(line: 0, scope: !6121)
!6159 = !DILocation(line: 3817, column: 29, scope: !6121)
!6160 = !DILocation(line: 3818, column: 18, scope: !6121)
!6161 = !DILocation(line: 3822, column: 30, scope: !6121)
!6162 = !DILocation(line: 3824, column: 3, scope: !6121)
!6163 = !DILocation(line: 3825, column: 3, scope: !6121)
!6164 = !DILocation(line: 3826, column: 16, scope: !6121)
!6165 = !DILocation(line: 3827, column: 17, scope: !6121)
!6166 = !DILocation(line: 3827, column: 53, scope: !6121)
!6167 = !DILocation(line: 3831, column: 3, scope: !6121)
!6168 = !DILocation(line: 3833, column: 3, scope: !6121)
!6169 = !DILocation(line: 3834, column: 15, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3834, column: 7)
!6171 = !DILocation(line: 3834, column: 7, scope: !6121)
!6172 = !DILocation(line: 3837, column: 8, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3837, column: 7)
!6174 = !DILocation(line: 3837, column: 7, scope: !6121)
!6175 = !DILocation(line: 3840, column: 7, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3840, column: 7)
!6177 = !DILocation(line: 3840, column: 39, scope: !6176)
!6178 = !DILocation(line: 3841, column: 7, scope: !6176)
!6179 = !DILocation(line: 3841, column: 44, scope: !6176)
!6180 = !DILocation(line: 3842, column: 15, scope: !6176)
!6181 = !DILocation(line: 3842, column: 12, scope: !6176)
!6182 = !DILocation(line: 3846, column: 7, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3846, column: 7)
!6184 = !DILocation(line: 3846, column: 7, scope: !6121)
!6185 = !DILocation(line: 3850, column: 7, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3850, column: 7)
!6187 = !DILocation(line: 3850, column: 7, scope: !6121)
!6188 = !DILocation(line: 3852, column: 11, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !1, line: 3852, column: 11)
!6190 = distinct !DILexicalBlock(scope: !6186, file: !1, line: 3851, column: 5)
!6191 = !DILocation(line: 3852, column: 11, scope: !6190)
!6192 = !DILocation(line: 3853, column: 18, scope: !6189)
!6193 = !DILocation(line: 3853, column: 9, scope: !6189)
!6194 = !DILocation(line: 3858, column: 8, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3858, column: 7)
!6196 = !DILocation(line: 3858, column: 7, scope: !6121)
!6197 = !DILocation(line: 3861, column: 10, scope: !6121)
!6198 = !DILocation(line: 3863, column: 12, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3863, column: 7)
!6200 = !DILocation(line: 3863, column: 7, scope: !6121)
!6201 = !DILocation(line: 3866, column: 3, scope: !6121)
!6202 = !DILocation(line: 3867, column: 8, scope: !6121)
!6203 = !DILocation(line: 3868, column: 15, scope: !6121)
!6204 = !DILocation(line: 3869, column: 17, scope: !6121)
!6205 = !DILocation(line: 3870, column: 17, scope: !6121)
!6206 = !DILocation(line: 3872, column: 8, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3872, column: 7)
!6208 = !DILocation(line: 3872, column: 7, scope: !6121)
!6209 = !DILocation(line: 3877, column: 28, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3877, column: 7)
!6211 = !DILocation(line: 3878, column: 7, scope: !6210)
!6212 = !DILocation(line: 3877, column: 8, scope: !6210)
!6213 = !DILocation(line: 3877, column: 7, scope: !6121)
!6214 = !DILocation(line: 3881, column: 7, scope: !6154)
!6215 = !DILocation(line: 3881, column: 31, scope: !6154)
!6216 = !DILocation(line: 3881, column: 7, scope: !6121)
!6217 = !DILocation(line: 3883, column: 7, scope: !6153)
!6218 = !DILocation(line: 3883, column: 30, scope: !6153)
!6219 = !DILocation(line: 3883, column: 14, scope: !6153)
!6220 = !DILocation(line: 0, scope: !6153)
!6221 = !DILocation(line: 3884, column: 12, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6153, file: !1, line: 3884, column: 11)
!6223 = !DILocation(line: 3887, column: 5, scope: !6154)
!6224 = !DILocation(line: 3888, column: 36, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 3888, column: 12)
!6226 = !DILocation(line: 3889, column: 5, scope: !6225)
!6227 = !DILocation(line: 3889, column: 32, scope: !6225)
!6228 = !DILocation(line: 3890, column: 5, scope: !6225)
!6229 = !DILocation(line: 3890, column: 32, scope: !6225)
!6230 = !DILocation(line: 3888, column: 12, scope: !6154)
!6231 = !DILocation(line: 3893, column: 7, scope: !6157)
!6232 = !DILocation(line: 3893, column: 31, scope: !6157)
!6233 = !DILocation(line: 3893, column: 7, scope: !6121)
!6234 = !DILocation(line: 3895, column: 7, scope: !6156)
!6235 = !DILocation(line: 3895, column: 30, scope: !6156)
!6236 = !DILocation(line: 3895, column: 14, scope: !6156)
!6237 = !DILocation(line: 0, scope: !6156)
!6238 = !DILocation(line: 3896, column: 12, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6156, file: !1, line: 3896, column: 11)
!6240 = !DILocation(line: 3899, column: 5, scope: !6157)
!6241 = !DILocation(line: 3900, column: 36, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6157, file: !1, line: 3900, column: 12)
!6243 = !DILocation(line: 3901, column: 5, scope: !6242)
!6244 = !DILocation(line: 3901, column: 32, scope: !6242)
!6245 = !DILocation(line: 3902, column: 5, scope: !6242)
!6246 = !DILocation(line: 3902, column: 32, scope: !6242)
!6247 = !DILocation(line: 3900, column: 12, scope: !6157)
!6248 = !DILocation(line: 3906, column: 14, scope: !6121)
!6249 = !DILocation(line: 3908, column: 8, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3908, column: 7)
!6251 = !DILocation(line: 3908, column: 7, scope: !6121)
!6252 = !DILocation(line: 3910, column: 7, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6250, file: !1, line: 3909, column: 5)
!6254 = !DILocation(line: 3910, column: 35, scope: !6253)
!6255 = !DILocation(line: 3911, column: 38, scope: !6253)
!6256 = !DILocation(line: 3911, column: 14, scope: !6253)
!6257 = !DILocation(line: 3911, column: 7, scope: !6253)
!6258 = !DILocation(line: 3917, column: 17, scope: !6121)
!6259 = !DILocation(line: 3918, column: 14, scope: !6121)
!6260 = !DILocation(line: 3922, column: 35, scope: !6121)
!6261 = !DILocation(line: 3922, column: 5, scope: !6121)
!6262 = !DILocation(line: 3924, column: 35, scope: !6121)
!6263 = !DILocation(line: 3924, column: 5, scope: !6121)
!6264 = !DILocation(line: 3925, column: 19, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3925, column: 7)
!6266 = !DILocation(line: 3925, column: 7, scope: !6121)
!6267 = !DILocation(line: 3928, column: 23, scope: !6265)
!6268 = !DILocation(line: 0, scope: !6265)
!6269 = !DILocation(line: 3929, column: 19, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6121, file: !1, line: 3929, column: 7)
!6271 = !DILocation(line: 3929, column: 7, scope: !6121)
!6272 = !DILocation(line: 3932, column: 23, scope: !6270)
!6273 = !DILocation(line: 0, scope: !6270)
!6274 = !DILocation(line: 3935, column: 17, scope: !6121)
!6275 = !DILocation(line: 3937, column: 19, scope: !6121)
!6276 = !DILocation(line: 3940, column: 15, scope: !6121)
!6277 = !DILocation(line: 3940, column: 13, scope: !6121)
!6278 = !DILocation(line: 3941, column: 14, scope: !6121)
!6279 = !DILocation(line: 3942, column: 26, scope: !6121)
!6280 = !DILocation(line: 3942, column: 3, scope: !6121)
!6281 = !DILocation(line: 3943, column: 38, scope: !6121)
!6282 = !DILocation(line: 3943, column: 3, scope: !6121)
!6283 = !DILocation(line: 3945, column: 3, scope: !6121)
!6284 = !DILocation(line: 3946, column: 1, scope: !6121)
!6285 = distinct !DISubprogram(name: "is_gimple_assign", scope: !2092, file: !2092, line: 1677, type: !5909, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6286)
!6286 = !{!6287}
!6287 = !DILocalVariable(name: "gs", arg: 1, scope: !6285, file: !2092, line: 1677, type: !4825)
!6288 = !DILocation(line: 0, scope: !6285)
!6289 = !DILocation(line: 1679, column: 10, scope: !6285)
!6290 = !DILocation(line: 1679, column: 27, scope: !6285)
!6291 = !DILocation(line: 1679, column: 3, scope: !6285)
!6292 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !2092, file: !2092, line: 1815, type: !6293, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!181, !4825}
!6295 = !{!6296, !6297}
!6296 = !DILocalVariable(name: "gs", arg: 1, scope: !6292, file: !2092, line: 1815, type: !4825)
!6297 = !DILocalVariable(name: "code", scope: !6292, file: !2092, line: 1817, type: !181)
!6298 = !DILocation(line: 0, scope: !6292)
!6299 = !DILocation(line: 1820, column: 10, scope: !6292)
!6300 = !DILocation(line: 1821, column: 7, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6292, file: !2092, line: 1821, column: 7)
!6302 = !DILocation(line: 1821, column: 35, scope: !6301)
!6303 = !DILocation(line: 1821, column: 7, scope: !6292)
!6304 = !DILocation(line: 1822, column: 12, scope: !6301)
!6305 = !DILocation(line: 1822, column: 5, scope: !6301)
!6306 = !DILocation(line: 1824, column: 3, scope: !6292)
!6307 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !2092, file: !2092, line: 1727, type: !5497, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6308)
!6308 = !{!6309}
!6309 = !DILocalVariable(name: "gs", arg: 1, scope: !6307, file: !2092, line: 1727, type: !4825)
!6310 = !DILocation(line: 0, scope: !6307)
!6311 = !DILocation(line: 1730, column: 10, scope: !6307)
!6312 = !DILocation(line: 1730, column: 3, scope: !6307)
!6313 = distinct !DISubprogram(name: "vect_is_simple_cond", scope: !1, file: !1, line: 3759, type: !6314, scopeLine: 3760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6316)
!6314 = !DISubroutineType(types: !6315)
!6315 = !{!2166, !2354, !3569}
!6316 = !{!6317, !6318, !6319, !6320, !6321, !6322, !6323, !6326}
!6317 = !DILocalVariable(name: "cond", arg: 1, scope: !6313, file: !1, line: 3759, type: !2354)
!6318 = !DILocalVariable(name: "loop_vinfo", arg: 2, scope: !6313, file: !1, line: 3759, type: !3569)
!6319 = !DILocalVariable(name: "lhs", scope: !6313, file: !1, line: 3761, type: !2354)
!6320 = !DILocalVariable(name: "rhs", scope: !6313, file: !1, line: 3761, type: !2354)
!6321 = !DILocalVariable(name: "def", scope: !6313, file: !1, line: 3762, type: !2354)
!6322 = !DILocalVariable(name: "dt", scope: !6313, file: !1, line: 3763, type: !411)
!6323 = !DILocalVariable(name: "lhs_def_stmt", scope: !6324, file: !1, line: 3773, type: !2167)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !1, line: 3772, column: 5)
!6325 = distinct !DILexicalBlock(scope: !6313, file: !1, line: 3771, column: 7)
!6326 = !DILocalVariable(name: "rhs_def_stmt", scope: !6327, file: !1, line: 3784, type: !2167)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !1, line: 3783, column: 5)
!6328 = distinct !DILexicalBlock(scope: !6313, file: !1, line: 3782, column: 7)
!6329 = !DILocation(line: 0, scope: !6313)
!6330 = !DILocation(line: 3762, column: 3, scope: !6313)
!6331 = !DILocation(line: 3763, column: 3, scope: !6313)
!6332 = !DILocation(line: 3765, column: 8, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6313, file: !1, line: 3765, column: 7)
!6334 = !DILocation(line: 3765, column: 7, scope: !6313)
!6335 = !DILocation(line: 3768, column: 9, scope: !6313)
!6336 = !DILocation(line: 3769, column: 9, scope: !6313)
!6337 = !DILocation(line: 3771, column: 7, scope: !6325)
!6338 = !DILocation(line: 3771, column: 23, scope: !6325)
!6339 = !DILocation(line: 3771, column: 7, scope: !6313)
!6340 = !DILocation(line: 3773, column: 7, scope: !6324)
!6341 = !DILocation(line: 3773, column: 29, scope: !6324)
!6342 = !DILocation(line: 3773, column: 14, scope: !6324)
!6343 = !DILocation(line: 0, scope: !6324)
!6344 = !DILocation(line: 3774, column: 12, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6324, file: !1, line: 3774, column: 11)
!6346 = !DILocation(line: 3777, column: 5, scope: !6325)
!6347 = !DILocation(line: 3778, column: 28, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6325, file: !1, line: 3778, column: 12)
!6349 = !DILocation(line: 3778, column: 43, scope: !6348)
!6350 = !DILocation(line: 3778, column: 62, scope: !6348)
!6351 = !DILocation(line: 3779, column: 5, scope: !6348)
!6352 = !DILocation(line: 3779, column: 24, scope: !6348)
!6353 = !DILocation(line: 3778, column: 12, scope: !6325)
!6354 = !DILocation(line: 3782, column: 7, scope: !6328)
!6355 = !DILocation(line: 3782, column: 23, scope: !6328)
!6356 = !DILocation(line: 3782, column: 7, scope: !6313)
!6357 = !DILocation(line: 3784, column: 7, scope: !6327)
!6358 = !DILocation(line: 3784, column: 29, scope: !6327)
!6359 = !DILocation(line: 3784, column: 14, scope: !6327)
!6360 = !DILocation(line: 0, scope: !6327)
!6361 = !DILocation(line: 3785, column: 12, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6327, file: !1, line: 3785, column: 11)
!6363 = !DILocation(line: 3788, column: 5, scope: !6328)
!6364 = !DILocation(line: 3789, column: 28, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6328, file: !1, line: 3789, column: 12)
!6366 = !DILocation(line: 3789, column: 44, scope: !6365)
!6367 = !DILocation(line: 3789, column: 63, scope: !6365)
!6368 = !DILocation(line: 3790, column: 5, scope: !6365)
!6369 = !DILocation(line: 3790, column: 24, scope: !6365)
!6370 = !DILocation(line: 3789, column: 12, scope: !6328)
!6371 = !DILocation(line: 3793, column: 3, scope: !6313)
!6372 = !DILocation(line: 3794, column: 1, scope: !6313)
!6373 = distinct !DISubprogram(name: "vect_analyze_stmt", scope: !1, file: !1, line: 3952, type: !6374, scopeLine: 3953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6376)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{!2166, !2167, !3903, !3532}
!6376 = !{!6377, !6378, !6379, !6380, !6381, !6382, !6383, !6384, !6385, !6386}
!6377 = !DILocalVariable(name: "stmt", arg: 1, scope: !6373, file: !1, line: 3952, type: !2167)
!6378 = !DILocalVariable(name: "need_to_vectorize", arg: 2, scope: !6373, file: !1, line: 3952, type: !3903)
!6379 = !DILocalVariable(name: "node", arg: 3, scope: !6373, file: !1, line: 3952, type: !3532)
!6380 = !DILocalVariable(name: "stmt_info", scope: !6373, file: !1, line: 3954, type: !3562)
!6381 = !DILocalVariable(name: "bb_vinfo", scope: !6373, file: !1, line: 3955, type: !3818)
!6382 = !DILocalVariable(name: "relevance", scope: !6373, file: !1, line: 3956, type: !404)
!6383 = !DILocalVariable(name: "ok", scope: !6373, file: !1, line: 3957, type: !2166)
!6384 = !DILocalVariable(name: "dummy", scope: !6373, file: !1, line: 3958, type: !2323)
!6385 = !DILocalVariable(name: "scalar_type", scope: !6373, file: !1, line: 3959, type: !2354)
!6386 = !DILocalVariable(name: "vectype", scope: !6373, file: !1, line: 3959, type: !2354)
!6387 = !DILocation(line: 0, scope: !6373)
!6388 = !DILocation(line: 3954, column: 29, scope: !6373)
!6389 = !DILocation(line: 3955, column: 26, scope: !6373)
!6390 = !DILocation(line: 3956, column: 34, scope: !6373)
!6391 = !DILocation(line: 3958, column: 3, scope: !6373)
!6392 = !DILocation(line: 3961, column: 7, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 3961, column: 7)
!6394 = !DILocation(line: 3961, column: 7, scope: !6373)
!6395 = !DILocation(line: 3963, column: 16, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 3962, column: 5)
!6397 = !DILocation(line: 3963, column: 7, scope: !6396)
!6398 = !DILocation(line: 3964, column: 26, scope: !6396)
!6399 = !DILocation(line: 3964, column: 7, scope: !6396)
!6400 = !DILocation(line: 3965, column: 5, scope: !6396)
!6401 = !DILocation(line: 3967, column: 7, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 3967, column: 7)
!6403 = !DILocation(line: 3967, column: 7, scope: !6373)
!6404 = !DILocation(line: 3969, column: 11, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !1, line: 3969, column: 11)
!6406 = distinct !DILexicalBlock(scope: !6402, file: !1, line: 3968, column: 5)
!6407 = !DILocation(line: 3969, column: 11, scope: !6406)
!6408 = !DILocation(line: 3970, column: 18, scope: !6405)
!6409 = !DILocation(line: 3970, column: 9, scope: !6405)
!6410 = !DILocation(line: 3983, column: 8, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 3983, column: 7)
!6412 = !DILocation(line: 3984, column: 7, scope: !6411)
!6413 = !DILocation(line: 3984, column: 11, scope: !6411)
!6414 = !DILocation(line: 3983, column: 7, scope: !6373)
!6415 = !DILocation(line: 3986, column: 11, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !1, line: 3986, column: 11)
!6417 = distinct !DILexicalBlock(scope: !6411, file: !1, line: 3985, column: 5)
!6418 = !DILocation(line: 3986, column: 11, scope: !6417)
!6419 = !DILocation(line: 3987, column: 18, scope: !6416)
!6420 = !DILocation(line: 3987, column: 9, scope: !6416)
!6421 = !DILocation(line: 3992, column: 11, scope: !6373)
!6422 = !DILocation(line: 3992, column: 3, scope: !6373)
!6423 = !DILocation(line: 3999, column: 10, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 3993, column: 5)
!6425 = !DILocation(line: 4009, column: 9, scope: !6424)
!6426 = !DILocation(line: 4010, column: 5, scope: !6424)
!6427 = !DILocation(line: 4012, column: 7, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 4012, column: 7)
!6429 = !DILocation(line: 4012, column: 7, scope: !6373)
!6430 = !DILocation(line: 4014, column: 7, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6428, file: !1, line: 4013, column: 5)
!6432 = !DILocation(line: 4016, column: 21, scope: !6431)
!6433 = !DILocation(line: 4017, column: 11, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6431, file: !1, line: 4017, column: 11)
!6435 = !DILocation(line: 4017, column: 11, scope: !6431)
!6436 = !DILocation(line: 4019, column: 20, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6434, file: !1, line: 4018, column: 9)
!6438 = !DILocation(line: 4019, column: 11, scope: !6437)
!6439 = !DILocation(line: 4020, column: 31, scope: !6437)
!6440 = !DILocation(line: 4020, column: 11, scope: !6437)
!6441 = !DILocation(line: 4021, column: 9, scope: !6437)
!6442 = !DILocation(line: 4023, column: 17, scope: !6431)
!6443 = !DILocation(line: 4024, column: 12, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6431, file: !1, line: 4024, column: 11)
!6445 = !DILocation(line: 0, scope: !6431)
!6446 = !DILocation(line: 4024, column: 11, scope: !6431)
!6447 = !DILocation(line: 4026, column: 15, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !1, line: 4025, column: 9)
!6449 = !DILocation(line: 4028, column: 25, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !1, line: 4027, column: 13)
!6451 = distinct !DILexicalBlock(scope: !6448, file: !1, line: 4026, column: 15)
!6452 = !DILocation(line: 4028, column: 16, scope: !6450)
!6453 = !DILocation(line: 4029, column: 36, scope: !6450)
!6454 = !DILocation(line: 4029, column: 16, scope: !6450)
!6455 = !DILocation(line: 4030, column: 13, scope: !6450)
!6456 = !DILocation(line: 4034, column: 11, scope: !6431)
!6457 = !DILocation(line: 4036, column: 20, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !1, line: 4035, column: 9)
!6459 = distinct !DILexicalBlock(scope: !6431, file: !1, line: 4034, column: 11)
!6460 = !DILocation(line: 4036, column: 11, scope: !6458)
!6461 = !DILocation(line: 4037, column: 31, scope: !6458)
!6462 = !DILocation(line: 4037, column: 11, scope: !6458)
!6463 = !DILocation(line: 4038, column: 9, scope: !6458)
!6464 = !DILocation(line: 4040, column: 7, scope: !6431)
!6465 = !DILocation(line: 4040, column: 38, scope: !6431)
!6466 = !DILocation(line: 4041, column: 4, scope: !6431)
!6467 = !DILocation(line: 4043, column: 7, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 4043, column: 7)
!6469 = !DILocation(line: 4043, column: 7, scope: !6373)
!6470 = !DILocation(line: 4045, column: 7, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6468, file: !1, line: 4044, column: 5)
!6472 = !DILocation(line: 4046, column: 7, scope: !6471)
!6473 = !DILocation(line: 4047, column: 26, scope: !6471)
!6474 = !DILocation(line: 4048, column: 5, scope: !6471)
!6475 = !DILocation(line: 4052, column: 8, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 4051, column: 8)
!6477 = !DILocation(line: 4052, column: 12, scope: !6476)
!6478 = !DILocation(line: 4053, column: 12, scope: !6476)
!6479 = !DILocation(line: 4053, column: 15, scope: !6476)
!6480 = !DILocation(line: 4053, column: 47, scope: !6476)
!6481 = !DILocation(line: 4051, column: 8, scope: !6373)
!6482 = !DILocation(line: 4054, column: 13, scope: !6476)
!6483 = !DILocation(line: 4055, column: 13, scope: !6476)
!6484 = !DILocation(line: 4055, column: 16, scope: !6476)
!6485 = !DILocation(line: 4056, column: 13, scope: !6476)
!6486 = !DILocation(line: 4056, column: 16, scope: !6476)
!6487 = !DILocation(line: 4057, column: 13, scope: !6476)
!6488 = !DILocation(line: 4057, column: 16, scope: !6476)
!6489 = !DILocation(line: 4058, column: 13, scope: !6476)
!6490 = !DILocation(line: 4058, column: 16, scope: !6476)
!6491 = !DILocation(line: 4059, column: 13, scope: !6476)
!6492 = !DILocation(line: 4059, column: 16, scope: !6476)
!6493 = !DILocation(line: 4060, column: 13, scope: !6476)
!6494 = !DILocation(line: 4060, column: 16, scope: !6476)
!6495 = !DILocation(line: 4061, column: 13, scope: !6476)
!6496 = !DILocation(line: 4061, column: 16, scope: !6476)
!6497 = !DILocation(line: 4062, column: 13, scope: !6476)
!6498 = !DILocation(line: 4062, column: 16, scope: !6476)
!6499 = !DILocation(line: 4063, column: 13, scope: !6476)
!6500 = !DILocation(line: 4063, column: 16, scope: !6476)
!6501 = !DILocation(line: 4054, column: 7, scope: !6476)
!6502 = !DILocation(line: 4066, column: 13, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 4065, column: 7)
!6504 = !DILocation(line: 4067, column: 17, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6503, file: !1, line: 4066, column: 13)
!6506 = !DILocation(line: 4068, column: 17, scope: !6505)
!6507 = !DILocation(line: 4068, column: 20, scope: !6505)
!6508 = !DILocation(line: 4069, column: 17, scope: !6505)
!6509 = !DILocation(line: 4069, column: 20, scope: !6505)
!6510 = !DILocation(line: 4070, column: 17, scope: !6505)
!6511 = !DILocation(line: 4070, column: 20, scope: !6505)
!6512 = !DILocation(line: 4067, column: 11, scope: !6505)
!6513 = !DILocation(line: 0, scope: !6476)
!6514 = !DILocation(line: 4073, column: 8, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 4073, column: 7)
!6516 = !DILocation(line: 4073, column: 7, scope: !6373)
!6517 = !DILocation(line: 4075, column: 11, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !1, line: 4075, column: 11)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !1, line: 4074, column: 5)
!6520 = !DILocation(line: 4075, column: 11, scope: !6519)
!6521 = !DILocation(line: 4077, column: 20, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !1, line: 4076, column: 9)
!6523 = !DILocation(line: 4077, column: 11, scope: !6522)
!6524 = !DILocation(line: 4078, column: 20, scope: !6522)
!6525 = !DILocation(line: 4078, column: 11, scope: !6522)
!6526 = !DILocation(line: 4079, column: 30, scope: !6522)
!6527 = !DILocation(line: 4079, column: 11, scope: !6522)
!6528 = !DILocation(line: 4080, column: 9, scope: !6522)
!6529 = !DILocation(line: 4085, column: 7, scope: !6373)
!6530 = !DILocation(line: 4090, column: 7, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 4090, column: 7)
!6532 = !DILocation(line: 4091, column: 7, scope: !6531)
!6533 = !DILocation(line: 4091, column: 10, scope: !6531)
!6534 = !DILocation(line: 4091, column: 38, scope: !6531)
!6535 = !DILocation(line: 4090, column: 7, scope: !6373)
!6536 = !DILocation(line: 4092, column: 10, scope: !6531)
!6537 = !DILocation(line: 4092, column: 5, scope: !6531)
!6538 = !DILocation(line: 4094, column: 8, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 4094, column: 7)
!6540 = !DILocation(line: 4094, column: 7, scope: !6373)
!6541 = !DILocation(line: 4096, column: 11, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !1, line: 4096, column: 11)
!6543 = distinct !DILexicalBlock(scope: !6539, file: !1, line: 4095, column: 5)
!6544 = !DILocation(line: 4096, column: 11, scope: !6543)
!6545 = !DILocation(line: 4098, column: 20, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6542, file: !1, line: 4097, column: 9)
!6547 = !DILocation(line: 4098, column: 11, scope: !6546)
!6548 = !DILocation(line: 4099, column: 20, scope: !6546)
!6549 = !DILocation(line: 4099, column: 11, scope: !6546)
!6550 = !DILocation(line: 4100, column: 30, scope: !6546)
!6551 = !DILocation(line: 4100, column: 11, scope: !6546)
!6552 = !DILocation(line: 4101, column: 9, scope: !6546)
!6553 = !DILocation(line: 4106, column: 8, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 4106, column: 7)
!6555 = !DILocation(line: 4106, column: 7, scope: !6373)
!6556 = !DILocation(line: 4112, column: 11, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !1, line: 4112, column: 11)
!6558 = distinct !DILexicalBlock(scope: !6554, file: !1, line: 4107, column: 5)
!6559 = !DILocation(line: 4113, column: 11, scope: !6557)
!6560 = !DILocation(line: 4113, column: 26, scope: !6557)
!6561 = !DILocation(line: 4113, column: 14, scope: !6557)
!6562 = !DILocation(line: 4114, column: 74, scope: !6557)
!6563 = !DILocation(line: 4112, column: 11, scope: !6558)
!6564 = !DILocation(line: 4116, column: 15, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !1, line: 4116, column: 15)
!6566 = distinct !DILexicalBlock(scope: !6557, file: !1, line: 4115, column: 9)
!6567 = !DILocation(line: 4116, column: 15, scope: !6566)
!6568 = !DILocation(line: 4118, column: 24, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !1, line: 4117, column: 13)
!6570 = !DILocation(line: 4118, column: 15, scope: !6569)
!6571 = !DILocation(line: 4120, column: 34, scope: !6569)
!6572 = !DILocation(line: 4120, column: 15, scope: !6569)
!6573 = !DILocation(line: 4121, column: 13, scope: !6569)
!6574 = !DILocation(line: 4128, column: 1, scope: !6373)
!6575 = distinct !DISubprogram(name: "gimple_has_volatile_ops", scope: !2092, file: !2092, line: 1477, type: !5909, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6576)
!6576 = !{!6577}
!6577 = !DILocalVariable(name: "stmt", arg: 1, scope: !6575, file: !2092, line: 1477, type: !4825)
!6578 = !DILocation(line: 0, scope: !6575)
!6579 = !DILocation(line: 1479, column: 7, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6575, file: !2092, line: 1479, column: 7)
!6581 = !DILocation(line: 1479, column: 7, scope: !6575)
!6582 = !DILocation(line: 1480, column: 25, scope: !6580)
!6583 = !DILocation(line: 1480, column: 12, scope: !6580)
!6584 = !DILocation(line: 1480, column: 5, scope: !6580)
!6585 = !DILocation(line: 0, scope: !6580)
!6586 = !DILocation(line: 1483, column: 1, scope: !6575)
!6587 = distinct !DISubprogram(name: "gimple_expr_type", scope: !2092, file: !2092, line: 4366, type: !5497, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6588)
!6588 = !{!6589, !6590, !6591}
!6589 = !DILocalVariable(name: "stmt", arg: 1, scope: !6587, file: !2092, line: 4366, type: !4825)
!6590 = !DILocalVariable(name: "code", scope: !6587, file: !2092, line: 4368, type: !2091)
!6591 = !DILocalVariable(name: "type", scope: !6592, file: !2092, line: 4372, type: !2354)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !2092, line: 4371, column: 5)
!6593 = distinct !DILexicalBlock(scope: !6587, file: !2092, line: 4370, column: 7)
!6594 = !DILocation(line: 0, scope: !6587)
!6595 = !DILocation(line: 4368, column: 27, scope: !6587)
!6596 = !DILocation(line: 4370, column: 29, scope: !6593)
!6597 = !DILocation(line: 4378, column: 9, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6592, file: !2092, line: 4377, column: 11)
!6599 = !DILocation(line: 0, scope: !6592)
!6600 = !DILocation(line: 4378, column: 2, scope: !6598)
!6601 = !DILocation(line: 4380, column: 10, scope: !6598)
!6602 = !DILocation(line: 4380, column: 2, scope: !6598)
!6603 = !DILocation(line: 4383, column: 13, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6598, file: !2092, line: 4381, column: 4)
!6605 = !DILocation(line: 4384, column: 6, scope: !6604)
!6606 = !DILocation(line: 4388, column: 13, scope: !6604)
!6607 = !DILocation(line: 4389, column: 6, scope: !6604)
!6608 = !DILocation(line: 4394, column: 12, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6593, file: !2092, line: 4393, column: 12)
!6610 = !DILocation(line: 4394, column: 5, scope: !6609)
!6611 = !DILocation(line: 4396, column: 12, scope: !6609)
!6612 = !DILocation(line: 4396, column: 5, scope: !6609)
!6613 = !DILocation(line: 0, scope: !6593)
!6614 = !DILocation(line: 4397, column: 1, scope: !6587)
!6615 = distinct !DISubprogram(name: "vectorizable_type_promotion", scope: !1, file: !1, line: 2654, type: !2164, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6616)
!6616 = !{!6617, !6618, !6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627, !6628, !6629, !6630, !6631, !6632, !6633, !6634, !6635, !6636, !6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651, !6652}
!6617 = !DILocalVariable(name: "stmt", arg: 1, scope: !6615, file: !1, line: 2654, type: !2167)
!6618 = !DILocalVariable(name: "gsi", arg: 2, scope: !6615, file: !1, line: 2654, type: !3524)
!6619 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !6615, file: !1, line: 2655, type: !3531)
!6620 = !DILocalVariable(name: "slp_node", arg: 4, scope: !6615, file: !1, line: 2655, type: !3532)
!6621 = !DILocalVariable(name: "vec_dest", scope: !6615, file: !1, line: 2657, type: !2354)
!6622 = !DILocalVariable(name: "scalar_dest", scope: !6615, file: !1, line: 2658, type: !2354)
!6623 = !DILocalVariable(name: "op0", scope: !6615, file: !1, line: 2659, type: !2354)
!6624 = !DILocalVariable(name: "op1", scope: !6615, file: !1, line: 2659, type: !2354)
!6625 = !DILocalVariable(name: "vec_oprnd0", scope: !6615, file: !1, line: 2660, type: !2354)
!6626 = !DILocalVariable(name: "vec_oprnd1", scope: !6615, file: !1, line: 2660, type: !2354)
!6627 = !DILocalVariable(name: "stmt_info", scope: !6615, file: !1, line: 2661, type: !3562)
!6628 = !DILocalVariable(name: "loop_vinfo", scope: !6615, file: !1, line: 2662, type: !3569)
!6629 = !DILocalVariable(name: "code", scope: !6615, file: !1, line: 2663, type: !181)
!6630 = !DILocalVariable(name: "code1", scope: !6615, file: !1, line: 2663, type: !181)
!6631 = !DILocalVariable(name: "code2", scope: !6615, file: !1, line: 2663, type: !181)
!6632 = !DILocalVariable(name: "decl1", scope: !6615, file: !1, line: 2664, type: !2354)
!6633 = !DILocalVariable(name: "decl2", scope: !6615, file: !1, line: 2664, type: !2354)
!6634 = !DILocalVariable(name: "op_type", scope: !6615, file: !1, line: 2665, type: !2256)
!6635 = !DILocalVariable(name: "def", scope: !6615, file: !1, line: 2666, type: !2354)
!6636 = !DILocalVariable(name: "def_stmt", scope: !6615, file: !1, line: 2667, type: !2167)
!6637 = !DILocalVariable(name: "dt", scope: !6615, file: !1, line: 2668, type: !3837)
!6638 = !DILocalVariable(name: "prev_stmt_info", scope: !6615, file: !1, line: 2669, type: !3562)
!6639 = !DILocalVariable(name: "nunits_in", scope: !6615, file: !1, line: 2670, type: !2256)
!6640 = !DILocalVariable(name: "nunits_out", scope: !6615, file: !1, line: 2671, type: !2256)
!6641 = !DILocalVariable(name: "vectype_out", scope: !6615, file: !1, line: 2672, type: !2354)
!6642 = !DILocalVariable(name: "ncopies", scope: !6615, file: !1, line: 2673, type: !2256)
!6643 = !DILocalVariable(name: "j", scope: !6615, file: !1, line: 2674, type: !2256)
!6644 = !DILocalVariable(name: "i", scope: !6615, file: !1, line: 2674, type: !2256)
!6645 = !DILocalVariable(name: "vectype_in", scope: !6615, file: !1, line: 2675, type: !2354)
!6646 = !DILocalVariable(name: "intermediate_type", scope: !6615, file: !1, line: 2676, type: !2354)
!6647 = !DILocalVariable(name: "multi_step_cvt", scope: !6615, file: !1, line: 2677, type: !2256)
!6648 = !DILocalVariable(name: "vec_oprnds0", scope: !6615, file: !1, line: 2678, type: !3603)
!6649 = !DILocalVariable(name: "vec_oprnds1", scope: !6615, file: !1, line: 2678, type: !3603)
!6650 = !DILocalVariable(name: "vec_dsts", scope: !6615, file: !1, line: 2679, type: !3603)
!6651 = !DILocalVariable(name: "interm_types", scope: !6615, file: !1, line: 2679, type: !3603)
!6652 = !DILocalVariable(name: "tmp_vec_dsts", scope: !6615, file: !1, line: 2679, type: !3603)
!6653 = !DILocation(line: 0, scope: !6615)
!6654 = !DILocation(line: 2661, column: 29, scope: !6615)
!6655 = !DILocation(line: 2662, column: 30, scope: !6615)
!6656 = !DILocation(line: 2663, column: 3, scope: !6615)
!6657 = !DILocation(line: 2663, column: 24, scope: !6615)
!6658 = !DILocation(line: 2663, column: 44, scope: !6615)
!6659 = !DILocation(line: 2664, column: 3, scope: !6615)
!6660 = !DILocation(line: 2664, column: 8, scope: !6615)
!6661 = !DILocation(line: 2664, column: 27, scope: !6615)
!6662 = !DILocation(line: 2666, column: 3, scope: !6615)
!6663 = !DILocation(line: 2667, column: 3, scope: !6615)
!6664 = !DILocation(line: 2668, column: 3, scope: !6615)
!6665 = !DILocation(line: 2668, column: 22, scope: !6615)
!6666 = !DILocation(line: 2669, column: 3, scope: !6615)
!6667 = !DILocation(line: 2676, column: 3, scope: !6615)
!6668 = !DILocation(line: 2676, column: 8, scope: !6615)
!6669 = !DILocation(line: 2677, column: 3, scope: !6615)
!6670 = !DILocation(line: 2677, column: 7, scope: !6615)
!6671 = !DILocation(line: 2678, column: 3, scope: !6615)
!6672 = !DILocation(line: 2678, column: 21, scope: !6615)
!6673 = !DILocation(line: 2678, column: 42, scope: !6615)
!6674 = !DILocation(line: 2679, column: 3, scope: !6615)
!6675 = !DILocation(line: 2679, column: 21, scope: !6615)
!6676 = !DILocation(line: 2679, column: 39, scope: !6615)
!6677 = !DILocation(line: 2679, column: 61, scope: !6615)
!6678 = !DILocation(line: 2682, column: 3, scope: !6615)
!6679 = !DILocation(line: 2684, column: 8, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2684, column: 7)
!6681 = !DILocation(line: 2684, column: 7, scope: !6615)
!6682 = !DILocation(line: 2687, column: 7, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2687, column: 7)
!6684 = !DILocation(line: 2687, column: 39, scope: !6683)
!6685 = !DILocation(line: 2687, column: 7, scope: !6615)
!6686 = !DILocation(line: 2691, column: 8, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2691, column: 7)
!6688 = !DILocation(line: 2691, column: 7, scope: !6615)
!6689 = !DILocation(line: 2694, column: 7, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2694, column: 7)
!6691 = !DILocation(line: 2694, column: 44, scope: !6690)
!6692 = !DILocation(line: 2694, column: 7, scope: !6615)
!6693 = !DILocation(line: 2697, column: 10, scope: !6615)
!6694 = !DILocation(line: 2698, column: 8, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2698, column: 7)
!6696 = !DILocation(line: 2702, column: 9, scope: !6615)
!6697 = !DILocation(line: 2703, column: 45, scope: !6615)
!6698 = !DILocation(line: 2703, column: 16, scope: !6615)
!6699 = !DILocation(line: 2704, column: 8, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2704, column: 7)
!6701 = !DILocation(line: 2704, column: 7, scope: !6615)
!6702 = !DILocation(line: 2706, column: 15, scope: !6615)
!6703 = !DILocation(line: 2708, column: 17, scope: !6615)
!6704 = !DILocation(line: 2709, column: 46, scope: !6615)
!6705 = !DILocation(line: 2709, column: 17, scope: !6615)
!6706 = !DILocation(line: 2710, column: 8, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2710, column: 7)
!6708 = !DILocation(line: 2710, column: 7, scope: !6615)
!6709 = !DILocation(line: 2712, column: 16, scope: !6615)
!6710 = !DILocation(line: 2713, column: 17, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2713, column: 7)
!6712 = !DILocation(line: 2713, column: 7, scope: !6615)
!6713 = !DILocation(line: 2719, column: 7, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2719, column: 7)
!6715 = !DILocation(line: 2719, column: 7, scope: !6615)
!6716 = !DILocation(line: 2722, column: 15, scope: !6714)
!6717 = !DILocation(line: 2722, column: 51, scope: !6714)
!6718 = !DILocation(line: 0, scope: !6714)
!6719 = !DILocation(line: 2724, column: 3, scope: !6615)
!6720 = !DILocation(line: 2726, column: 11, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2726, column: 7)
!6722 = !DILocation(line: 2727, column: 4, scope: !6721)
!6723 = !DILocation(line: 2727, column: 7, scope: !6721)
!6724 = !DILocation(line: 2728, column: 3, scope: !6721)
!6725 = !DILocation(line: 2728, column: 7, scope: !6721)
!6726 = !DILocation(line: 2729, column: 7, scope: !6721)
!6727 = !DILocation(line: 2729, column: 10, scope: !6721)
!6728 = !DILocation(line: 2730, column: 7, scope: !6721)
!6729 = !DILocation(line: 2730, column: 10, scope: !6721)
!6730 = !DILocation(line: 2734, column: 69, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2734, column: 7)
!6732 = !DILocation(line: 2734, column: 8, scope: !6731)
!6733 = !DILocation(line: 2734, column: 7, scope: !6615)
!6734 = !DILocation(line: 2736, column: 11, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !1, line: 2736, column: 11)
!6736 = distinct !DILexicalBlock(scope: !6731, file: !1, line: 2735, column: 5)
!6737 = !DILocation(line: 2736, column: 11, scope: !6736)
!6738 = !DILocation(line: 2737, column: 11, scope: !6735)
!6739 = !DILocation(line: 2737, column: 2, scope: !6735)
!6740 = !DILocation(line: 2741, column: 13, scope: !6615)
!6741 = !DILocation(line: 2742, column: 15, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2742, column: 7)
!6743 = !DILocation(line: 2742, column: 7, scope: !6615)
!6744 = !DILocation(line: 2744, column: 13, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6742, file: !1, line: 2743, column: 5)
!6746 = !DILocation(line: 2745, column: 73, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6745, file: !1, line: 2745, column: 11)
!6748 = !DILocation(line: 2745, column: 12, scope: !6747)
!6749 = !DILocation(line: 2745, column: 11, scope: !6745)
!6750 = !DILocation(line: 2747, column: 8, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !1, line: 2747, column: 8)
!6752 = distinct !DILexicalBlock(scope: !6747, file: !1, line: 2746, column: 9)
!6753 = !DILocation(line: 2747, column: 8, scope: !6752)
!6754 = !DILocation(line: 2748, column: 15, scope: !6751)
!6755 = !DILocation(line: 2748, column: 6, scope: !6751)
!6756 = !DILocation(line: 2754, column: 8, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2754, column: 7)
!6758 = !DILocation(line: 2754, column: 7, scope: !6615)
!6759 = !DILocation(line: 2761, column: 3, scope: !6615)
!6760 = !DILocation(line: 2763, column: 3, scope: !6615)
!6761 = !DILocation(line: 2763, column: 34, scope: !6615)
!6762 = !DILocation(line: 2765, column: 8, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2765, column: 7)
!6764 = !DILocation(line: 2765, column: 7, scope: !6615)
!6765 = !DILocation(line: 2767, column: 7, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6763, file: !1, line: 2766, column: 5)
!6767 = !DILocation(line: 2767, column: 35, scope: !6766)
!6768 = !DILocation(line: 2768, column: 11, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6766, file: !1, line: 2768, column: 11)
!6770 = !DILocation(line: 2768, column: 11, scope: !6766)
!6771 = !DILocation(line: 2769, column: 18, scope: !6769)
!6772 = !DILocation(line: 2769, column: 9, scope: !6769)
!6773 = !DILocation(line: 2770, column: 43, scope: !6766)
!6774 = !DILocation(line: 2770, column: 7, scope: !6766)
!6775 = !DILocation(line: 2771, column: 7, scope: !6766)
!6776 = !DILocation(line: 2776, column: 7, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2776, column: 7)
!6778 = !DILocation(line: 2776, column: 7, scope: !6615)
!6779 = !DILocation(line: 2777, column: 14, scope: !6777)
!6780 = !DILocation(line: 2777, column: 5, scope: !6777)
!6781 = !DILocation(line: 2787, column: 7, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2787, column: 7)
!6783 = !DILocation(line: 2787, column: 7, scope: !6615)
!6784 = !DILocation(line: 2788, column: 16, scope: !6782)
!6785 = !DILocation(line: 2788, column: 5, scope: !6782)
!6786 = !DILocation(line: 2790, column: 16, scope: !6782)
!6787 = !DILocation(line: 0, scope: !6782)
!6788 = !DILocation(line: 2792, column: 14, scope: !6615)
!6789 = !DILocation(line: 2793, column: 3, scope: !6615)
!6790 = !DILocation(line: 2795, column: 7, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2795, column: 7)
!6792 = !DILocation(line: 2795, column: 7, scope: !6615)
!6793 = !DILocation(line: 2797, column: 16, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !1, line: 2797, column: 7)
!6795 = distinct !DILexicalBlock(scope: !6791, file: !1, line: 2796, column: 5)
!6796 = !DILocation(line: 2797, column: 12, scope: !6794)
!6797 = !DILocation(line: 0, scope: !6794)
!6798 = !DILocation(line: 2798, column: 12, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6794, file: !1, line: 2797, column: 7)
!6800 = !DILocation(line: 2797, column: 7, scope: !6794)
!6801 = !DILocation(line: 2801, column: 51, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6799, file: !1, line: 2799, column: 9)
!6803 = !DILocation(line: 2800, column: 22, scope: !6802)
!6804 = !DILocation(line: 2802, column: 11, scope: !6802)
!6805 = !DILocation(line: 2797, column: 7, scope: !6799)
!6806 = distinct !{!6806, !6800, !6807}
!6807 = !DILocation(line: 2803, column: 9, scope: !6794)
!6808 = !DILocation(line: 2806, column: 8, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2806, column: 7)
!6810 = !DILocation(line: 2806, column: 7, scope: !6615)
!6811 = !DILocation(line: 2808, column: 21, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6809, file: !1, line: 2807, column: 5)
!6813 = !DILocation(line: 2808, column: 19, scope: !6812)
!6814 = !DILocation(line: 2810, column: 11, scope: !6812)
!6815 = !DILocation(line: 2811, column: 23, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6812, file: !1, line: 2810, column: 11)
!6817 = !DILocation(line: 2811, column: 21, scope: !6816)
!6818 = !DILocation(line: 2811, column: 9, scope: !6816)
!6819 = !DILocation(line: 2819, column: 18, scope: !6615)
!6820 = !DILocation(line: 0, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !1, line: 2843, column: 13)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !1, line: 2842, column: 15)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 2839, column: 9)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !1, line: 2823, column: 11)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !1, line: 2821, column: 5)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 2820, column: 3)
!6827 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2820, column: 3)
!6828 = !DILocation(line: 2820, column: 8, scope: !6827)
!6829 = !DILocation(line: 2660, column: 8, scope: !6615)
!6830 = !DILocation(line: 2660, column: 25, scope: !6615)
!6831 = !DILocation(line: 0, scope: !6827)
!6832 = !DILocation(line: 2820, column: 17, scope: !6826)
!6833 = !DILocation(line: 2820, column: 3, scope: !6827)
!6834 = !DILocation(line: 2823, column: 13, scope: !6824)
!6835 = !DILocation(line: 2823, column: 11, scope: !6825)
!6836 = !DILocation(line: 2840, column: 56, scope: !6823)
!6837 = !DILocation(line: 2840, column: 24, scope: !6823)
!6838 = !DILocation(line: 2841, column: 11, scope: !6823)
!6839 = !DILocation(line: 2844, column: 60, scope: !6821)
!6840 = !DILocation(line: 2844, column: 28, scope: !6821)
!6841 = !DILocation(line: 2845, column: 15, scope: !6821)
!6842 = !DILocation(line: 2846, column: 13, scope: !6821)
!6843 = !DILocation(line: 2825, column: 15, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6824, file: !1, line: 2824, column: 9)
!6845 = !DILocation(line: 2826, column: 15, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6844, file: !1, line: 2825, column: 15)
!6847 = !DILocation(line: 2829, column: 28, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6846, file: !1, line: 2828, column: 13)
!6849 = !DILocation(line: 2830, column: 15, scope: !6848)
!6850 = !DILocation(line: 2831, column: 19, scope: !6848)
!6851 = !DILocation(line: 2833, column: 32, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !1, line: 2832, column: 17)
!6853 = distinct !DILexicalBlock(scope: !6848, file: !1, line: 2831, column: 19)
!6854 = !DILocation(line: 2834, column: 19, scope: !6852)
!6855 = !DILocation(line: 2835, column: 17, scope: !6852)
!6856 = !DILocation(line: 2850, column: 22, scope: !6825)
!6857 = !DILocation(line: 2850, column: 20, scope: !6825)
!6858 = !DILocation(line: 2852, column: 47, scope: !6825)
!6859 = !DILocation(line: 2854, column: 62, scope: !6825)
!6860 = !DILocation(line: 2854, column: 69, scope: !6825)
!6861 = !DILocation(line: 2855, column: 47, scope: !6825)
!6862 = !DILocation(line: 2855, column: 54, scope: !6825)
!6863 = !DILocation(line: 2851, column: 7, scope: !6825)
!6864 = !DILocation(line: 2820, column: 29, scope: !6826)
!6865 = !DILocation(line: 2820, column: 3, scope: !6826)
!6866 = distinct !{!6866, !6833, !6867}
!6867 = !DILocation(line: 2857, column: 5, scope: !6827)
!6868 = !DILocation(line: 2859, column: 3, scope: !6615)
!6869 = !DILocation(line: 2842, column: 15, scope: !6823)
!6870 = !DILocation(line: 2860, column: 3, scope: !6615)
!6871 = !DILocation(line: 2861, column: 3, scope: !6615)
!6872 = !DILocation(line: 2862, column: 3, scope: !6615)
!6873 = !DILocation(line: 2863, column: 3, scope: !6615)
!6874 = !DILocation(line: 2865, column: 15, scope: !6615)
!6875 = !DILocation(line: 2865, column: 13, scope: !6615)
!6876 = !DILocation(line: 2866, column: 3, scope: !6615)
!6877 = !DILocation(line: 2867, column: 1, scope: !6615)
!6878 = distinct !DISubprogram(name: "vectorizable_type_demotion", scope: !1, file: !1, line: 2388, type: !2164, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6879)
!6879 = !{!6880, !6881, !6882, !6883, !6884, !6885, !6886, !6887, !6888, !6889, !6890, !6891, !6892, !6893, !6894, !6895, !6896, !6897, !6898, !6899, !6900, !6901, !6902, !6903, !6904, !6905, !6906, !6907, !6908}
!6880 = !DILocalVariable(name: "stmt", arg: 1, scope: !6878, file: !1, line: 2388, type: !2167)
!6881 = !DILocalVariable(name: "gsi", arg: 2, scope: !6878, file: !1, line: 2388, type: !3524)
!6882 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !6878, file: !1, line: 2389, type: !3531)
!6883 = !DILocalVariable(name: "slp_node", arg: 4, scope: !6878, file: !1, line: 2389, type: !3532)
!6884 = !DILocalVariable(name: "vec_dest", scope: !6878, file: !1, line: 2391, type: !2354)
!6885 = !DILocalVariable(name: "scalar_dest", scope: !6878, file: !1, line: 2392, type: !2354)
!6886 = !DILocalVariable(name: "op0", scope: !6878, file: !1, line: 2393, type: !2354)
!6887 = !DILocalVariable(name: "stmt_info", scope: !6878, file: !1, line: 2394, type: !3562)
!6888 = !DILocalVariable(name: "loop_vinfo", scope: !6878, file: !1, line: 2395, type: !3569)
!6889 = !DILocalVariable(name: "code", scope: !6878, file: !1, line: 2396, type: !181)
!6890 = !DILocalVariable(name: "code1", scope: !6878, file: !1, line: 2396, type: !181)
!6891 = !DILocalVariable(name: "def", scope: !6878, file: !1, line: 2397, type: !2354)
!6892 = !DILocalVariable(name: "def_stmt", scope: !6878, file: !1, line: 2398, type: !2167)
!6893 = !DILocalVariable(name: "dt", scope: !6878, file: !1, line: 2399, type: !3837)
!6894 = !DILocalVariable(name: "prev_stmt_info", scope: !6878, file: !1, line: 2400, type: !3562)
!6895 = !DILocalVariable(name: "nunits_in", scope: !6878, file: !1, line: 2401, type: !2256)
!6896 = !DILocalVariable(name: "nunits_out", scope: !6878, file: !1, line: 2402, type: !2256)
!6897 = !DILocalVariable(name: "vectype_out", scope: !6878, file: !1, line: 2403, type: !2354)
!6898 = !DILocalVariable(name: "ncopies", scope: !6878, file: !1, line: 2404, type: !2256)
!6899 = !DILocalVariable(name: "j", scope: !6878, file: !1, line: 2405, type: !2256)
!6900 = !DILocalVariable(name: "i", scope: !6878, file: !1, line: 2405, type: !2256)
!6901 = !DILocalVariable(name: "vectype_in", scope: !6878, file: !1, line: 2406, type: !2354)
!6902 = !DILocalVariable(name: "multi_step_cvt", scope: !6878, file: !1, line: 2407, type: !2256)
!6903 = !DILocalVariable(name: "vec_oprnds0", scope: !6878, file: !1, line: 2408, type: !3603)
!6904 = !DILocalVariable(name: "vec_dsts", scope: !6878, file: !1, line: 2409, type: !3603)
!6905 = !DILocalVariable(name: "interm_types", scope: !6878, file: !1, line: 2409, type: !3603)
!6906 = !DILocalVariable(name: "tmp_vec_dsts", scope: !6878, file: !1, line: 2409, type: !3603)
!6907 = !DILocalVariable(name: "last_oprnd", scope: !6878, file: !1, line: 2410, type: !2354)
!6908 = !DILocalVariable(name: "intermediate_type", scope: !6878, file: !1, line: 2410, type: !2354)
!6909 = !DILocation(line: 0, scope: !6878)
!6910 = !DILocation(line: 2394, column: 29, scope: !6878)
!6911 = !DILocation(line: 2395, column: 30, scope: !6878)
!6912 = !DILocation(line: 2396, column: 3, scope: !6878)
!6913 = !DILocation(line: 2396, column: 24, scope: !6878)
!6914 = !DILocation(line: 2397, column: 3, scope: !6878)
!6915 = !DILocation(line: 2398, column: 3, scope: !6878)
!6916 = !DILocation(line: 2399, column: 3, scope: !6878)
!6917 = !DILocation(line: 2399, column: 22, scope: !6878)
!6918 = !DILocation(line: 2400, column: 3, scope: !6878)
!6919 = !DILocation(line: 2407, column: 3, scope: !6878)
!6920 = !DILocation(line: 2407, column: 7, scope: !6878)
!6921 = !DILocation(line: 2408, column: 3, scope: !6878)
!6922 = !DILocation(line: 2408, column: 21, scope: !6878)
!6923 = !DILocation(line: 2409, column: 3, scope: !6878)
!6924 = !DILocation(line: 2409, column: 21, scope: !6878)
!6925 = !DILocation(line: 2409, column: 39, scope: !6878)
!6926 = !DILocation(line: 2409, column: 61, scope: !6878)
!6927 = !DILocation(line: 2410, column: 3, scope: !6878)
!6928 = !DILocation(line: 2413, column: 3, scope: !6878)
!6929 = !DILocation(line: 2415, column: 8, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2415, column: 7)
!6931 = !DILocation(line: 2415, column: 7, scope: !6878)
!6932 = !DILocation(line: 2418, column: 7, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2418, column: 7)
!6934 = !DILocation(line: 2418, column: 39, scope: !6933)
!6935 = !DILocation(line: 2418, column: 7, scope: !6878)
!6936 = !DILocation(line: 2422, column: 8, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2422, column: 7)
!6938 = !DILocation(line: 2422, column: 7, scope: !6878)
!6939 = !DILocation(line: 2425, column: 7, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2425, column: 7)
!6941 = !DILocation(line: 2425, column: 44, scope: !6940)
!6942 = !DILocation(line: 2425, column: 7, scope: !6878)
!6943 = !DILocation(line: 2428, column: 10, scope: !6878)
!6944 = !DILocation(line: 2429, column: 8, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2429, column: 7)
!6946 = !DILocation(line: 2432, column: 9, scope: !6878)
!6947 = !DILocation(line: 2433, column: 45, scope: !6878)
!6948 = !DILocation(line: 2433, column: 16, scope: !6878)
!6949 = !DILocation(line: 2434, column: 8, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2434, column: 7)
!6951 = !DILocation(line: 2434, column: 7, scope: !6878)
!6952 = !DILocation(line: 2436, column: 15, scope: !6878)
!6953 = !DILocation(line: 2438, column: 17, scope: !6878)
!6954 = !DILocation(line: 2439, column: 46, scope: !6878)
!6955 = !DILocation(line: 2439, column: 17, scope: !6878)
!6956 = !DILocation(line: 2440, column: 8, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2440, column: 7)
!6958 = !DILocation(line: 2440, column: 7, scope: !6878)
!6959 = !DILocation(line: 2442, column: 16, scope: !6878)
!6960 = !DILocation(line: 2443, column: 17, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2443, column: 7)
!6962 = !DILocation(line: 2443, column: 7, scope: !6878)
!6963 = !DILocation(line: 2449, column: 7, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2449, column: 7)
!6965 = !DILocation(line: 2449, column: 7, scope: !6878)
!6966 = !DILocation(line: 2452, column: 15, scope: !6964)
!6967 = !DILocation(line: 2452, column: 51, scope: !6964)
!6968 = !DILocation(line: 0, scope: !6964)
!6969 = !DILocation(line: 2453, column: 3, scope: !6878)
!6970 = !DILocation(line: 2455, column: 11, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2455, column: 7)
!6972 = !DILocation(line: 2456, column: 4, scope: !6971)
!6973 = !DILocation(line: 2456, column: 7, scope: !6971)
!6974 = !DILocation(line: 2457, column: 3, scope: !6971)
!6975 = !DILocation(line: 2457, column: 7, scope: !6971)
!6976 = !DILocation(line: 2458, column: 7, scope: !6971)
!6977 = !DILocation(line: 2458, column: 10, scope: !6971)
!6978 = !DILocation(line: 2459, column: 7, scope: !6971)
!6979 = !DILocation(line: 2459, column: 10, scope: !6971)
!6980 = !DILocation(line: 2463, column: 69, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2463, column: 7)
!6982 = !DILocation(line: 2463, column: 8, scope: !6981)
!6983 = !DILocation(line: 2463, column: 7, scope: !6878)
!6984 = !DILocation(line: 2465, column: 11, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6986, file: !1, line: 2465, column: 11)
!6986 = distinct !DILexicalBlock(scope: !6981, file: !1, line: 2464, column: 5)
!6987 = !DILocation(line: 2465, column: 11, scope: !6986)
!6988 = !DILocation(line: 2466, column: 18, scope: !6985)
!6989 = !DILocation(line: 2466, column: 9, scope: !6985)
!6990 = !DILocation(line: 2471, column: 8, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2471, column: 7)
!6992 = !DILocation(line: 2471, column: 7, scope: !6878)
!6993 = !DILocation(line: 2475, column: 3, scope: !6878)
!6994 = !DILocation(line: 2475, column: 34, scope: !6878)
!6995 = !DILocation(line: 2477, column: 8, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2477, column: 7)
!6997 = !DILocation(line: 2477, column: 7, scope: !6878)
!6998 = !DILocation(line: 2479, column: 7, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6996, file: !1, line: 2478, column: 5)
!7000 = !DILocation(line: 2479, column: 35, scope: !6999)
!7001 = !DILocation(line: 2480, column: 11, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 2480, column: 11)
!7003 = !DILocation(line: 2480, column: 11, scope: !6999)
!7004 = !DILocation(line: 2481, column: 18, scope: !7002)
!7005 = !DILocation(line: 2481, column: 9, scope: !7002)
!7006 = !DILocation(line: 2482, column: 7, scope: !6999)
!7007 = !DILocation(line: 2483, column: 7, scope: !6999)
!7008 = !DILocation(line: 2487, column: 7, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2487, column: 7)
!7010 = !DILocation(line: 2487, column: 7, scope: !6878)
!7011 = !DILocation(line: 2488, column: 14, scope: !7009)
!7012 = !DILocation(line: 2488, column: 5, scope: !7009)
!7013 = !DILocation(line: 2496, column: 7, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2496, column: 7)
!7015 = !DILocation(line: 2496, column: 7, scope: !6878)
!7016 = !DILocation(line: 2497, column: 16, scope: !7014)
!7017 = !DILocation(line: 2497, column: 5, scope: !7014)
!7018 = !DILocation(line: 2499, column: 16, scope: !7014)
!7019 = !DILocation(line: 0, scope: !7014)
!7020 = !DILocation(line: 2501, column: 14, scope: !6878)
!7021 = !DILocation(line: 2502, column: 3, scope: !6878)
!7022 = !DILocation(line: 2504, column: 7, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2504, column: 7)
!7024 = !DILocation(line: 2504, column: 7, scope: !6878)
!7025 = !DILocation(line: 2506, column: 16, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !1, line: 2506, column: 7)
!7027 = distinct !DILexicalBlock(scope: !7023, file: !1, line: 2505, column: 5)
!7028 = !DILocation(line: 2506, column: 12, scope: !7026)
!7029 = !DILocation(line: 0, scope: !7026)
!7030 = !DILocation(line: 2507, column: 12, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7026, file: !1, line: 2506, column: 7)
!7032 = !DILocation(line: 2506, column: 7, scope: !7026)
!7033 = !DILocation(line: 2510, column: 51, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7031, file: !1, line: 2508, column: 9)
!7035 = !DILocation(line: 2509, column: 22, scope: !7034)
!7036 = !DILocation(line: 2511, column: 11, scope: !7034)
!7037 = !DILocation(line: 2506, column: 7, scope: !7031)
!7038 = distinct !{!7038, !7032, !7039}
!7039 = !DILocation(line: 2512, column: 9, scope: !7026)
!7040 = !DILocation(line: 2519, column: 14, scope: !6878)
!7041 = !DILocation(line: 2520, column: 18, scope: !6878)
!7042 = !DILocation(line: 2521, column: 8, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2521, column: 3)
!7044 = !DILocation(line: 0, scope: !7043)
!7045 = !DILocation(line: 2521, column: 17, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7043, file: !1, line: 2521, column: 3)
!7047 = !DILocation(line: 2521, column: 3, scope: !7043)
!7048 = !DILocation(line: 2528, column: 11, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !1, line: 2527, column: 9)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !1, line: 2524, column: 11)
!7051 = distinct !DILexicalBlock(scope: !7046, file: !1, line: 2522, column: 5)
!7052 = !DILocation(line: 2529, column: 25, scope: !7049)
!7053 = !DILocation(line: 2529, column: 23, scope: !7049)
!7054 = !DILocation(line: 2531, column: 56, scope: !7049)
!7055 = !DILocation(line: 2532, column: 48, scope: !7049)
!7056 = !DILocation(line: 2532, column: 37, scope: !7049)
!7057 = !DILocation(line: 2532, column: 64, scope: !7049)
!7058 = !DILocation(line: 2531, column: 11, scope: !7049)
!7059 = !DILocation(line: 2536, column: 22, scope: !7051)
!7060 = !DILocation(line: 2536, column: 20, scope: !7051)
!7061 = !DILocation(line: 2538, column: 46, scope: !7051)
!7062 = !DILocation(line: 2539, column: 61, scope: !7051)
!7063 = !DILocation(line: 2537, column: 7, scope: !7051)
!7064 = !DILocation(line: 2521, column: 29, scope: !7046)
!7065 = !DILocation(line: 2521, column: 3, scope: !7046)
!7066 = distinct !{!7066, !7047, !7067}
!7067 = !DILocation(line: 2541, column: 5, scope: !7043)
!7068 = !DILocation(line: 2543, column: 3, scope: !6878)
!7069 = !DILocation(line: 2525, column: 9, scope: !7050)
!7070 = !DILocation(line: 2544, column: 3, scope: !6878)
!7071 = !DILocation(line: 2545, column: 3, scope: !6878)
!7072 = !DILocation(line: 2546, column: 3, scope: !6878)
!7073 = !DILocation(line: 2548, column: 15, scope: !6878)
!7074 = !DILocation(line: 2548, column: 13, scope: !6878)
!7075 = !DILocation(line: 2549, column: 3, scope: !6878)
!7076 = !DILocation(line: 2550, column: 1, scope: !6878)
!7077 = !DILocation(line: 0, scope: !2163)
!7078 = !DILocation(line: 1541, column: 29, scope: !2163)
!7079 = !DILocation(line: 1542, column: 30, scope: !2163)
!7080 = !DILocation(line: 1543, column: 3, scope: !2163)
!7081 = !DILocation(line: 1543, column: 24, scope: !2163)
!7082 = !DILocation(line: 1543, column: 44, scope: !2163)
!7083 = !DILocation(line: 1544, column: 3, scope: !2163)
!7084 = !DILocation(line: 1544, column: 8, scope: !2163)
!7085 = !DILocation(line: 1544, column: 27, scope: !2163)
!7086 = !DILocation(line: 1546, column: 3, scope: !2163)
!7087 = !DILocation(line: 1547, column: 3, scope: !2163)
!7088 = !DILocation(line: 1548, column: 3, scope: !2163)
!7089 = !DILocation(line: 1548, column: 22, scope: !2163)
!7090 = !DILocation(line: 1559, column: 3, scope: !2163)
!7091 = !DILocation(line: 1559, column: 19, scope: !2163)
!7092 = !DILocation(line: 1560, column: 3, scope: !2163)
!7093 = !DILocation(line: 1562, column: 3, scope: !2163)
!7094 = !DILocation(line: 1562, column: 19, scope: !2163)
!7095 = !DILocation(line: 1563, column: 3, scope: !2163)
!7096 = !DILocation(line: 1568, column: 3, scope: !2163)
!7097 = !DILocation(line: 1570, column: 8, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1570, column: 7)
!7099 = !DILocation(line: 1570, column: 7, scope: !2163)
!7100 = !DILocation(line: 1573, column: 7, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1573, column: 7)
!7102 = !DILocation(line: 1573, column: 39, scope: !7101)
!7103 = !DILocation(line: 1573, column: 7, scope: !2163)
!7104 = !DILocation(line: 1576, column: 8, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1576, column: 7)
!7106 = !DILocation(line: 1576, column: 7, scope: !2163)
!7107 = !DILocation(line: 1579, column: 7, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1579, column: 7)
!7109 = !DILocation(line: 1579, column: 44, scope: !7108)
!7110 = !DILocation(line: 1579, column: 7, scope: !2163)
!7111 = !DILocation(line: 1582, column: 10, scope: !2163)
!7112 = !DILocation(line: 1583, column: 30, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1583, column: 7)
!7114 = !DILocation(line: 1587, column: 9, scope: !2163)
!7115 = !DILocation(line: 1588, column: 14, scope: !2163)
!7116 = !DILocation(line: 1589, column: 16, scope: !2163)
!7117 = !DILocation(line: 1590, column: 8, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1590, column: 7)
!7119 = !DILocation(line: 1590, column: 7, scope: !2163)
!7120 = !DILocation(line: 1592, column: 15, scope: !2163)
!7121 = !DILocation(line: 1594, column: 17, scope: !2163)
!7122 = !DILocation(line: 1595, column: 14, scope: !2163)
!7123 = !DILocation(line: 1596, column: 17, scope: !2163)
!7124 = !DILocation(line: 1597, column: 8, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1597, column: 7)
!7126 = !DILocation(line: 1597, column: 7, scope: !2163)
!7127 = !DILocation(line: 1599, column: 16, scope: !2163)
!7128 = !DILocation(line: 1602, column: 31, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1602, column: 7)
!7130 = !DILocation(line: 1602, column: 17, scope: !7129)
!7131 = !DILocation(line: 1602, column: 7, scope: !2163)
!7132 = !DILocation(line: 1604, column: 23, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !1, line: 1604, column: 12)
!7134 = !DILocation(line: 1604, column: 12, scope: !7129)
!7135 = !DILocation(line: 1606, column: 36, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7133, file: !1, line: 1606, column: 12)
!7137 = !DILocation(line: 1606, column: 23, scope: !7136)
!7138 = !DILocation(line: 1606, column: 12, scope: !7133)
!7139 = !DILocation(line: 0, scope: !7129)
!7140 = !DILocation(line: 1611, column: 16, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1611, column: 7)
!7142 = !DILocation(line: 1611, column: 7, scope: !2163)
!7143 = !DILocation(line: 1612, column: 5, scope: !7141)
!7144 = !DILocation(line: 1615, column: 8, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1615, column: 7)
!7146 = !DILocation(line: 1615, column: 35, scope: !7145)
!7147 = !DILocation(line: 1615, column: 38, scope: !7145)
!7148 = !DILocation(line: 1616, column: 7, scope: !7145)
!7149 = !DILocation(line: 1616, column: 12, scope: !7145)
!7150 = !DILocation(line: 1616, column: 39, scope: !7145)
!7151 = !DILocation(line: 1616, column: 43, scope: !7145)
!7152 = !DILocation(line: 1615, column: 7, scope: !2163)
!7153 = !DILocation(line: 1619, column: 19, scope: !2163)
!7154 = !DILocation(line: 1621, column: 16, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1621, column: 7)
!7156 = !DILocation(line: 0, scope: !7155)
!7157 = !DILocation(line: 1621, column: 7, scope: !2163)
!7158 = !DILocation(line: 1622, column: 5, scope: !7155)
!7159 = !DILocation(line: 1628, column: 7, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1628, column: 7)
!7161 = !DILocation(line: 1628, column: 7, scope: !2163)
!7162 = !DILocation(line: 1633, column: 3, scope: !2163)
!7163 = !DILocation(line: 1636, column: 69, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1636, column: 7)
!7165 = !DILocation(line: 1636, column: 8, scope: !7164)
!7166 = !DILocation(line: 1636, column: 7, scope: !2163)
!7167 = !DILocation(line: 1638, column: 11, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !1, line: 1638, column: 11)
!7169 = distinct !DILexicalBlock(scope: !7164, file: !1, line: 1637, column: 5)
!7170 = !DILocation(line: 1638, column: 11, scope: !7169)
!7171 = !DILocation(line: 1639, column: 11, scope: !7168)
!7172 = !DILocation(line: 1639, column: 2, scope: !7168)
!7173 = !DILocation(line: 1645, column: 8, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1644, column: 7)
!7175 = !DILocation(line: 1645, column: 30, scope: !7174)
!7176 = !DILocation(line: 1645, column: 12, scope: !7174)
!7177 = !DILocation(line: 1646, column: 7, scope: !7174)
!7178 = !DILocation(line: 1647, column: 4, scope: !7174)
!7179 = !DILocation(line: 1647, column: 8, scope: !7174)
!7180 = !DILocation(line: 1651, column: 7, scope: !7174)
!7181 = !DILocation(line: 1652, column: 4, scope: !7174)
!7182 = !DILocation(line: 1652, column: 8, scope: !7174)
!7183 = !DILocation(line: 1644, column: 7, scope: !2163)
!7184 = !DILocation(line: 1655, column: 11, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 1655, column: 11)
!7186 = distinct !DILexicalBlock(scope: !7174, file: !1, line: 1654, column: 5)
!7187 = !DILocation(line: 1655, column: 11, scope: !7186)
!7188 = !DILocation(line: 1656, column: 18, scope: !7185)
!7189 = !DILocation(line: 1656, column: 9, scope: !7185)
!7190 = !DILocation(line: 1660, column: 7, scope: !2163)
!7191 = !DILocation(line: 1662, column: 7, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !1, line: 1661, column: 5)
!7193 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1660, column: 7)
!7194 = !DILocation(line: 1662, column: 38, scope: !7192)
!7195 = !DILocation(line: 1664, column: 11, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7192, file: !1, line: 1664, column: 11)
!7197 = !DILocation(line: 1664, column: 11, scope: !7192)
!7198 = !DILocation(line: 1668, column: 8, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1668, column: 7)
!7200 = !DILocation(line: 1668, column: 7, scope: !2163)
!7201 = !DILocation(line: 1670, column: 7, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7199, file: !1, line: 1669, column: 5)
!7203 = !DILocation(line: 1670, column: 35, scope: !7202)
!7204 = !DILocation(line: 1671, column: 7, scope: !7202)
!7205 = !DILocation(line: 1675, column: 7, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1675, column: 7)
!7207 = !DILocation(line: 1675, column: 7, scope: !2163)
!7208 = !DILocation(line: 1676, column: 14, scope: !7206)
!7209 = !DILocation(line: 1676, column: 5, scope: !7206)
!7210 = !DILocation(line: 1679, column: 14, scope: !2163)
!7211 = !DILocation(line: 1681, column: 16, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1681, column: 7)
!7213 = !DILocation(line: 1681, column: 28, scope: !7212)
!7214 = !DILocation(line: 1681, column: 24, scope: !7212)
!7215 = !DILocation(line: 1682, column: 19, scope: !7212)
!7216 = !DILocation(line: 1682, column: 17, scope: !7212)
!7217 = !DILocation(line: 1682, column: 5, scope: !7212)
!7218 = !DILocation(line: 1685, column: 3, scope: !2163)
!7219 = !DILocation(line: 0, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !1, line: 1777, column: 8)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !1, line: 1757, column: 2)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !1, line: 1756, column: 7)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !1, line: 1756, column: 7)
!7224 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1686, column: 5)
!7225 = !DILocation(line: 1756, column: 7, scope: !7223)
!7226 = !DILocation(line: 0, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !1, line: 1722, column: 2)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !1, line: 1721, column: 7)
!7229 = distinct !DILexicalBlock(scope: !7224, file: !1, line: 1721, column: 7)
!7230 = !DILocation(line: 0, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7227, file: !1, line: 1735, column: 8)
!7232 = !DILocation(line: 1721, column: 7, scope: !7229)
!7233 = !DILocation(line: 0, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !1, line: 1704, column: 12)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !1, line: 1698, column: 6)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !1, line: 1697, column: 4)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 1697, column: 4)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 1689, column: 2)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !1, line: 1688, column: 7)
!7240 = distinct !DILexicalBlock(scope: !7224, file: !1, line: 1688, column: 7)
!7241 = !DILocation(line: 0, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 1708, column: 8)
!7243 = !DILocation(line: 1688, column: 7, scope: !7240)
!7244 = !DILocation(line: 1549, column: 10, scope: !2163)
!7245 = !DILocation(line: 0, scope: !7240)
!7246 = !DILocation(line: 1688, column: 21, scope: !7239)
!7247 = !DILocation(line: 1690, column: 10, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 1690, column: 8)
!7249 = !DILocation(line: 1690, column: 8, scope: !7238)
!7250 = !DILocation(line: 1691, column: 6, scope: !7248)
!7251 = !DILocation(line: 1693, column: 6, scope: !7248)
!7252 = !DILocation(line: 1696, column: 24, scope: !7238)
!7253 = !DILocation(line: 1696, column: 6, scope: !7238)
!7254 = !DILocation(line: 1697, column: 9, scope: !7237)
!7255 = !DILocation(line: 0, scope: !7237)
!7256 = !DILocation(line: 1697, column: 16, scope: !7236)
!7257 = !DILocation(line: 1697, column: 4, scope: !7237)
!7258 = !DILocation(line: 1700, column: 55, scope: !7235)
!7259 = !DILocation(line: 1700, column: 19, scope: !7235)
!7260 = !DILocation(line: 1701, column: 19, scope: !7235)
!7261 = !DILocation(line: 1702, column: 8, scope: !7235)
!7262 = !DILocation(line: 1703, column: 8, scope: !7235)
!7263 = !DILocation(line: 1697, column: 59, scope: !7236)
!7264 = !DILocation(line: 1697, column: 4, scope: !7236)
!7265 = distinct !{!7265, !7257, !7266}
!7266 = !DILocation(line: 1706, column: 6, scope: !7237)
!7267 = !DILocation(line: 1708, column: 10, scope: !7242)
!7268 = !DILocation(line: 1705, column: 3, scope: !7234)
!7269 = !DILocation(line: 1708, column: 8, scope: !7238)
!7270 = !DILocation(line: 1709, column: 50, scope: !7242)
!7271 = !DILocation(line: 1709, column: 38, scope: !7242)
!7272 = !DILocation(line: 1709, column: 6, scope: !7242)
!7273 = !DILocation(line: 1711, column: 6, scope: !7242)
!7274 = !DILocation(line: 1711, column: 47, scope: !7242)
!7275 = !DILocation(line: 1712, column: 21, scope: !7238)
!7276 = !DILocation(line: 1688, column: 33, scope: !7239)
!7277 = !DILocation(line: 1688, column: 7, scope: !7239)
!7278 = distinct !{!7278, !7243, !7279}
!7279 = !DILocation(line: 1713, column: 2, scope: !7240)
!7280 = !DILocation(line: 0, scope: !7229)
!7281 = !DILocation(line: 1721, column: 21, scope: !7228)
!7282 = !DILocation(line: 1723, column: 10, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7227, file: !1, line: 1723, column: 8)
!7284 = !DILocation(line: 1723, column: 8, scope: !7227)
!7285 = !DILocation(line: 1724, column: 19, scope: !7283)
!7286 = !DILocation(line: 1724, column: 6, scope: !7283)
!7287 = !DILocation(line: 1726, column: 51, scope: !7283)
!7288 = !DILocation(line: 1726, column: 19, scope: !7283)
!7289 = !DILocation(line: 0, scope: !7283)
!7290 = !DILocation(line: 1728, column: 35, scope: !7227)
!7291 = !DILocation(line: 1732, column: 39, scope: !7227)
!7292 = !DILocation(line: 1732, column: 46, scope: !7227)
!7293 = !DILocation(line: 1732, column: 8, scope: !7227)
!7294 = !DILocation(line: 1735, column: 8, scope: !7227)
!7295 = !DILocation(line: 1736, column: 38, scope: !7231)
!7296 = !DILocation(line: 1736, column: 6, scope: !7231)
!7297 = !DILocation(line: 1738, column: 6, scope: !7231)
!7298 = !DILocation(line: 1738, column: 47, scope: !7231)
!7299 = !DILocation(line: 1739, column: 21, scope: !7227)
!7300 = !DILocation(line: 1743, column: 39, scope: !7227)
!7301 = !DILocation(line: 1743, column: 46, scope: !7227)
!7302 = !DILocation(line: 1743, column: 8, scope: !7227)
!7303 = !DILocation(line: 1746, column: 4, scope: !7227)
!7304 = !DILocation(line: 1746, column: 45, scope: !7227)
!7305 = !DILocation(line: 1747, column: 21, scope: !7227)
!7306 = !DILocation(line: 1721, column: 33, scope: !7228)
!7307 = !DILocation(line: 1721, column: 7, scope: !7228)
!7308 = distinct !{!7308, !7232, !7309}
!7309 = !DILocation(line: 1748, column: 2, scope: !7229)
!7310 = !DILocation(line: 0, scope: !7223)
!7311 = !DILocation(line: 1756, column: 21, scope: !7222)
!7312 = !DILocation(line: 1759, column: 10, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7221, file: !1, line: 1759, column: 8)
!7314 = !DILocation(line: 1759, column: 8, scope: !7221)
!7315 = !DILocation(line: 1761, column: 21, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7313, file: !1, line: 1760, column: 6)
!7317 = !DILocation(line: 1762, column: 53, scope: !7316)
!7318 = !DILocation(line: 1762, column: 21, scope: !7316)
!7319 = !DILocation(line: 1763, column: 6, scope: !7316)
!7320 = !DILocation(line: 1766, column: 53, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7313, file: !1, line: 1765, column: 6)
!7322 = !DILocation(line: 1766, column: 21, scope: !7321)
!7323 = !DILocation(line: 1767, column: 53, scope: !7321)
!7324 = !DILocation(line: 1767, column: 21, scope: !7321)
!7325 = !DILocation(line: 0, scope: !7313)
!7326 = !DILocation(line: 1771, column: 15, scope: !7221)
!7327 = !DILocation(line: 1773, column: 15, scope: !7221)
!7328 = !DILocation(line: 1774, column: 4, scope: !7221)
!7329 = !DILocation(line: 1775, column: 4, scope: !7221)
!7330 = !DILocation(line: 1777, column: 8, scope: !7221)
!7331 = !DILocation(line: 1778, column: 38, scope: !7220)
!7332 = !DILocation(line: 1778, column: 6, scope: !7220)
!7333 = !DILocation(line: 1780, column: 6, scope: !7220)
!7334 = !DILocation(line: 1780, column: 47, scope: !7220)
!7335 = !DILocation(line: 1782, column: 21, scope: !7221)
!7336 = !DILocation(line: 1756, column: 33, scope: !7222)
!7337 = !DILocation(line: 1756, column: 7, scope: !7222)
!7338 = distinct !{!7338, !7225, !7339}
!7339 = !DILocation(line: 1783, column: 2, scope: !7223)
!7340 = !DILocation(line: 1785, column: 19, scope: !7224)
!7341 = !DILocation(line: 1785, column: 17, scope: !7224)
!7342 = !DILocation(line: 1786, column: 5, scope: !7224)
!7343 = !DILocation(line: 1788, column: 7, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !2163, file: !1, line: 1788, column: 7)
!7345 = !DILocation(line: 1788, column: 7, scope: !2163)
!7346 = !DILocation(line: 1789, column: 5, scope: !7344)
!7347 = !DILocation(line: 1792, column: 1, scope: !2163)
!7348 = distinct !DISubprogram(name: "vectorizable_operation", scope: !1, file: !1, line: 1919, type: !2164, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7349)
!7349 = !{!7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366, !7386, !7387, !7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399, !7400, !7401, !7402, !7403, !7404, !7405, !7406}
!7350 = !DILocalVariable(name: "stmt", arg: 1, scope: !7348, file: !1, line: 1919, type: !2167)
!7351 = !DILocalVariable(name: "gsi", arg: 2, scope: !7348, file: !1, line: 1919, type: !3524)
!7352 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !7348, file: !1, line: 1920, type: !3531)
!7353 = !DILocalVariable(name: "slp_node", arg: 4, scope: !7348, file: !1, line: 1920, type: !3532)
!7354 = !DILocalVariable(name: "vec_dest", scope: !7348, file: !1, line: 1922, type: !2354)
!7355 = !DILocalVariable(name: "scalar_dest", scope: !7348, file: !1, line: 1923, type: !2354)
!7356 = !DILocalVariable(name: "op0", scope: !7348, file: !1, line: 1924, type: !2354)
!7357 = !DILocalVariable(name: "op1", scope: !7348, file: !1, line: 1924, type: !2354)
!7358 = !DILocalVariable(name: "vec_oprnd1", scope: !7348, file: !1, line: 1925, type: !2354)
!7359 = !DILocalVariable(name: "stmt_info", scope: !7348, file: !1, line: 1926, type: !3562)
!7360 = !DILocalVariable(name: "vectype", scope: !7348, file: !1, line: 1927, type: !2354)
!7361 = !DILocalVariable(name: "loop_vinfo", scope: !7348, file: !1, line: 1928, type: !3569)
!7362 = !DILocalVariable(name: "code", scope: !7348, file: !1, line: 1929, type: !181)
!7363 = !DILocalVariable(name: "vec_mode", scope: !7348, file: !1, line: 1930, type: !3)
!7364 = !DILocalVariable(name: "new_temp", scope: !7348, file: !1, line: 1931, type: !2354)
!7365 = !DILocalVariable(name: "op_type", scope: !7348, file: !1, line: 1932, type: !2256)
!7366 = !DILocalVariable(name: "optab", scope: !7348, file: !1, line: 1933, type: !7367)
!7367 = !DIDerivedType(tag: DW_TAG_typedef, name: "optab", file: !7368, line: 55, baseType: !7369)
!7368 = !DIFile(filename: "./optabs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7370, size: 64)
!7370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_d", file: !7368, line: 46, size: 3072, elements: !7371)
!7371 = !{!7372, !7373, !7374, !7375, !7379}
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !7370, file: !7368, line: 48, baseType: !1948, size: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_basename", scope: !7370, file: !7368, line: 49, baseType: !2259, size: 64, offset: 64)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_suffix", scope: !7370, file: !7368, line: 50, baseType: !2261, size: 8, offset: 128)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_gen", scope: !7370, file: !7368, line: 51, baseType: !7376, size: 64, offset: 192)
!7376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7377, size: 64)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{null, !7369, !2259, !2261, !3}
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !7370, file: !7368, line: 53, baseType: !7380, size: 2784, offset: 256)
!7380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7381, size: 2784, elements: !7384)
!7381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_handlers", file: !7368, line: 41, size: 32, elements: !7382)
!7382 = !{!7383}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "insn_code", scope: !7381, file: !7368, line: 43, baseType: !456, size: 32)
!7384 = !{!7385}
!7385 = !DISubrange(count: 87)
!7386 = !DILocalVariable(name: "icode", scope: !7348, file: !1, line: 1934, type: !2256)
!7387 = !DILocalVariable(name: "optab_op2_mode", scope: !7348, file: !1, line: 1935, type: !3)
!7388 = !DILocalVariable(name: "def", scope: !7348, file: !1, line: 1936, type: !2354)
!7389 = !DILocalVariable(name: "def_stmt", scope: !7348, file: !1, line: 1937, type: !2167)
!7390 = !DILocalVariable(name: "dt", scope: !7348, file: !1, line: 1938, type: !3837)
!7391 = !DILocalVariable(name: "new_stmt", scope: !7348, file: !1, line: 1939, type: !2167)
!7392 = !DILocalVariable(name: "prev_stmt_info", scope: !7348, file: !1, line: 1940, type: !3562)
!7393 = !DILocalVariable(name: "nunits_in", scope: !7348, file: !1, line: 1941, type: !2256)
!7394 = !DILocalVariable(name: "nunits_out", scope: !7348, file: !1, line: 1942, type: !2256)
!7395 = !DILocalVariable(name: "vectype_out", scope: !7348, file: !1, line: 1943, type: !2354)
!7396 = !DILocalVariable(name: "ncopies", scope: !7348, file: !1, line: 1944, type: !2256)
!7397 = !DILocalVariable(name: "j", scope: !7348, file: !1, line: 1945, type: !2256)
!7398 = !DILocalVariable(name: "i", scope: !7348, file: !1, line: 1945, type: !2256)
!7399 = !DILocalVariable(name: "vec_oprnds0", scope: !7348, file: !1, line: 1946, type: !3603)
!7400 = !DILocalVariable(name: "vec_oprnds1", scope: !7348, file: !1, line: 1946, type: !3603)
!7401 = !DILocalVariable(name: "vop0", scope: !7348, file: !1, line: 1947, type: !2354)
!7402 = !DILocalVariable(name: "vop1", scope: !7348, file: !1, line: 1947, type: !2354)
!7403 = !DILocalVariable(name: "k", scope: !7348, file: !1, line: 1948, type: !5)
!7404 = !DILocalVariable(name: "scalar_shift_arg", scope: !7348, file: !1, line: 1949, type: !2166)
!7405 = !DILocalVariable(name: "bb_vinfo", scope: !7348, file: !1, line: 1950, type: !3818)
!7406 = !DILocalVariable(name: "vf", scope: !7348, file: !1, line: 1951, type: !2256)
!7407 = !DILocation(line: 0, scope: !7348)
!7408 = !DILocation(line: 1926, column: 29, scope: !7348)
!7409 = !DILocation(line: 1927, column: 18, scope: !7348)
!7410 = !DILocation(line: 1928, column: 30, scope: !7348)
!7411 = !DILocation(line: 1936, column: 3, scope: !7348)
!7412 = !DILocation(line: 1937, column: 3, scope: !7348)
!7413 = !DILocation(line: 1938, column: 3, scope: !7348)
!7414 = !DILocation(line: 1938, column: 22, scope: !7348)
!7415 = !DILocation(line: 1941, column: 19, scope: !7348)
!7416 = !DILocation(line: 1946, column: 3, scope: !7348)
!7417 = !DILocation(line: 1946, column: 19, scope: !7348)
!7418 = !DILocation(line: 1946, column: 40, scope: !7348)
!7419 = !DILocation(line: 1947, column: 3, scope: !7348)
!7420 = !DILocation(line: 1950, column: 26, scope: !7348)
!7421 = !DILocation(line: 1953, column: 7, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1953, column: 7)
!7423 = !DILocation(line: 1953, column: 7, scope: !7348)
!7424 = !DILocation(line: 1954, column: 10, scope: !7422)
!7425 = !DILocation(line: 1954, column: 5, scope: !7422)
!7426 = !DILocation(line: 0, scope: !7422)
!7427 = !DILocation(line: 1961, column: 7, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1961, column: 7)
!7429 = !DILocation(line: 1961, column: 7, scope: !7348)
!7430 = !DILocation(line: 1964, column: 15, scope: !7428)
!7431 = !DILocation(line: 1964, column: 51, scope: !7428)
!7432 = !DILocation(line: 0, scope: !7428)
!7433 = !DILocation(line: 1966, column: 3, scope: !7348)
!7434 = !DILocation(line: 1968, column: 8, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1968, column: 7)
!7436 = !DILocation(line: 1968, column: 46, scope: !7435)
!7437 = !DILocation(line: 1968, column: 42, scope: !7435)
!7438 = !DILocation(line: 1971, column: 7, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1971, column: 7)
!7440 = !DILocation(line: 1971, column: 39, scope: !7439)
!7441 = !DILocation(line: 1971, column: 7, scope: !7348)
!7442 = !DILocation(line: 1975, column: 8, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1975, column: 7)
!7444 = !DILocation(line: 1975, column: 7, scope: !7348)
!7445 = !DILocation(line: 1978, column: 7, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1978, column: 7)
!7447 = !DILocation(line: 1978, column: 44, scope: !7446)
!7448 = !DILocation(line: 1978, column: 7, scope: !7348)
!7449 = !DILocation(line: 1981, column: 17, scope: !7348)
!7450 = !DILocation(line: 1982, column: 46, scope: !7348)
!7451 = !DILocation(line: 1982, column: 17, scope: !7348)
!7452 = !DILocation(line: 1983, column: 8, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1983, column: 7)
!7454 = !DILocation(line: 1983, column: 7, scope: !7348)
!7455 = !DILocation(line: 1985, column: 16, scope: !7348)
!7456 = !DILocation(line: 1986, column: 18, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1986, column: 7)
!7458 = !DILocation(line: 1986, column: 7, scope: !7348)
!7459 = !DILocation(line: 1989, column: 10, scope: !7348)
!7460 = !DILocation(line: 1993, column: 12, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1993, column: 7)
!7462 = !DILocation(line: 1993, column: 7, scope: !7348)
!7463 = !DILocation(line: 1997, column: 13, scope: !7348)
!7464 = !DILocation(line: 1998, column: 27, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1998, column: 7)
!7466 = !DILocation(line: 2000, column: 11, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !1, line: 2000, column: 11)
!7468 = distinct !DILexicalBlock(scope: !7465, file: !1, line: 1999, column: 5)
!7469 = !DILocation(line: 2000, column: 11, scope: !7468)
!7470 = !DILocation(line: 2001, column: 11, scope: !7467)
!7471 = !DILocation(line: 2001, column: 2, scope: !7467)
!7472 = !DILocation(line: 2005, column: 9, scope: !7348)
!7473 = !DILocation(line: 2006, column: 73, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2006, column: 7)
!7475 = !DILocation(line: 2006, column: 8, scope: !7474)
!7476 = !DILocation(line: 2006, column: 7, scope: !7348)
!7477 = !DILocation(line: 2008, column: 11, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !1, line: 2008, column: 11)
!7479 = distinct !DILexicalBlock(scope: !7474, file: !1, line: 2007, column: 5)
!7480 = !DILocation(line: 2008, column: 11, scope: !7479)
!7481 = !DILocation(line: 2009, column: 18, scope: !7478)
!7482 = !DILocation(line: 2009, column: 9, scope: !7478)
!7483 = !DILocation(line: 2013, column: 15, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2013, column: 7)
!7485 = !DILocation(line: 2013, column: 7, scope: !7348)
!7486 = !DILocation(line: 2015, column: 13, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 2014, column: 5)
!7488 = !DILocation(line: 2017, column: 33, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2016, column: 11)
!7490 = !DILocation(line: 2016, column: 12, scope: !7489)
!7491 = !DILocation(line: 2016, column: 11, scope: !7487)
!7492 = !DILocation(line: 2019, column: 8, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !1, line: 2019, column: 8)
!7494 = distinct !DILexicalBlock(scope: !7489, file: !1, line: 2018, column: 2)
!7495 = !DILocation(line: 2019, column: 8, scope: !7494)
!7496 = !DILocation(line: 2020, column: 15, scope: !7493)
!7497 = !DILocation(line: 2020, column: 6, scope: !7493)
!7498 = !DILocation(line: 2028, column: 27, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2028, column: 7)
!7500 = !DILocation(line: 2032, column: 11, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !1, line: 2032, column: 11)
!7502 = distinct !DILexicalBlock(scope: !7499, file: !1, line: 2030, column: 5)
!7503 = !DILocation(line: 2032, column: 17, scope: !7501)
!7504 = !DILocation(line: 2032, column: 11, scope: !7502)
!7505 = !DILocation(line: 2034, column: 12, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 2033, column: 2)
!7507 = !DILocation(line: 2035, column: 8, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7506, file: !1, line: 2035, column: 8)
!7509 = !DILocation(line: 2035, column: 8, scope: !7506)
!7510 = !DILocation(line: 2036, column: 15, scope: !7508)
!7511 = !DILocation(line: 2036, column: 6, scope: !7508)
!7512 = !DILocation(line: 2041, column: 22, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 2041, column: 16)
!7514 = !DILocation(line: 2041, column: 43, scope: !7513)
!7515 = !DILocation(line: 2041, column: 52, scope: !7513)
!7516 = !DILocation(line: 2041, column: 16, scope: !7501)
!7517 = !DILocation(line: 2043, column: 12, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7513, file: !1, line: 2042, column: 2)
!7519 = !DILocation(line: 2044, column: 8, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7518, file: !1, line: 2044, column: 8)
!7521 = !DILocation(line: 2045, column: 8, scope: !7520)
!7522 = !DILocation(line: 2045, column: 12, scope: !7520)
!7523 = !DILocation(line: 2045, column: 56, scope: !7520)
!7524 = !DILocation(line: 2046, column: 5, scope: !7520)
!7525 = !DILocation(line: 2044, column: 8, scope: !7518)
!7526 = !DILocation(line: 2049, column: 12, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !1, line: 2049, column: 12)
!7528 = distinct !DILexicalBlock(scope: !7520, file: !1, line: 2047, column: 6)
!7529 = !DILocation(line: 2049, column: 12, scope: !7528)
!7530 = !DILocation(line: 2050, column: 12, scope: !7527)
!7531 = !DILocation(line: 2050, column: 3, scope: !7527)
!7532 = !DILocation(line: 2054, column: 16, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7520, file: !1, line: 2053, column: 6)
!7534 = !DILocation(line: 2055, column: 12, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7533, file: !1, line: 2055, column: 12)
!7536 = !DILocation(line: 2056, column: 5, scope: !7535)
!7537 = !DILocation(line: 2056, column: 9, scope: !7535)
!7538 = !DILocation(line: 2056, column: 53, scope: !7535)
!7539 = !DILocation(line: 2057, column: 9, scope: !7535)
!7540 = !DILocation(line: 2055, column: 12, scope: !7533)
!7541 = !DILocation(line: 2059, column: 9, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !1, line: 2059, column: 9)
!7543 = distinct !DILexicalBlock(scope: !7535, file: !1, line: 2058, column: 3)
!7544 = !DILocation(line: 2059, column: 9, scope: !7543)
!7545 = !DILocation(line: 2060, column: 16, scope: !7542)
!7546 = !DILocation(line: 2060, column: 7, scope: !7542)
!7547 = !DILocation(line: 2066, column: 9, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7543, file: !1, line: 2066, column: 9)
!7549 = !DILocation(line: 2066, column: 15, scope: !7548)
!7550 = !DILocation(line: 2066, column: 9, scope: !7543)
!7551 = !DILocation(line: 2067, column: 13, scope: !7548)
!7552 = !DILocation(line: 2067, column: 7, scope: !7548)
!7553 = !DILocation(line: 2074, column: 8, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !1, line: 2074, column: 8)
!7555 = distinct !DILexicalBlock(scope: !7513, file: !1, line: 2073, column: 2)
!7556 = !DILocation(line: 2074, column: 8, scope: !7555)
!7557 = !DILocation(line: 2075, column: 15, scope: !7554)
!7558 = !DILocation(line: 2075, column: 6, scope: !7554)
!7559 = !DILocation(line: 2080, column: 13, scope: !7499)
!7560 = !DILocation(line: 0, scope: !7499)
!7561 = !DILocation(line: 2015, column: 11, scope: !7487)
!7562 = !DILocation(line: 1949, column: 8, scope: !7348)
!7563 = !DILocation(line: 2083, column: 8, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2083, column: 7)
!7565 = !DILocation(line: 2083, column: 7, scope: !7348)
!7566 = !DILocation(line: 2085, column: 11, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !1, line: 2085, column: 11)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !1, line: 2084, column: 5)
!7569 = !DILocation(line: 2085, column: 11, scope: !7568)
!7570 = !DILocation(line: 2086, column: 11, scope: !7567)
!7571 = !DILocation(line: 2086, column: 2, scope: !7567)
!7572 = !DILocation(line: 2089, column: 14, scope: !7348)
!7573 = !DILocation(line: 2090, column: 17, scope: !7348)
!7574 = !DILocation(line: 2090, column: 50, scope: !7348)
!7575 = !DILocation(line: 2091, column: 13, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2091, column: 7)
!7577 = !DILocation(line: 2091, column: 7, scope: !7348)
!7578 = !DILocation(line: 2093, column: 11, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !1, line: 2093, column: 11)
!7580 = distinct !DILexicalBlock(scope: !7576, file: !1, line: 2092, column: 5)
!7581 = !DILocation(line: 2093, column: 11, scope: !7580)
!7582 = !DILocation(line: 2094, column: 11, scope: !7579)
!7583 = !DILocation(line: 2094, column: 2, scope: !7579)
!7584 = !DILocation(line: 2096, column: 11, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7580, file: !1, line: 2096, column: 11)
!7586 = !DILocation(line: 2096, column: 36, scope: !7585)
!7587 = !DILocation(line: 2097, column: 4, scope: !7585)
!7588 = !DILocation(line: 2097, column: 13, scope: !7585)
!7589 = !DILocation(line: 2097, column: 11, scope: !7585)
!7590 = !DILocation(line: 2098, column: 19, scope: !7585)
!7591 = !DILocation(line: 2098, column: 15, scope: !7585)
!7592 = !DILocation(line: 2100, column: 11, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7580, file: !1, line: 2100, column: 11)
!7594 = !DILocation(line: 2100, column: 11, scope: !7580)
!7595 = !DILocation(line: 2101, column: 11, scope: !7593)
!7596 = !DILocation(line: 2101, column: 2, scope: !7593)
!7597 = !DILocation(line: 2105, column: 8, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2105, column: 7)
!7599 = !DILocation(line: 2106, column: 7, scope: !7598)
!7600 = !DILocation(line: 2106, column: 15, scope: !7598)
!7601 = !DILocation(line: 2106, column: 13, scope: !7598)
!7602 = !DILocation(line: 2107, column: 11, scope: !7598)
!7603 = !DILocation(line: 2107, column: 7, scope: !7598)
!7604 = !DILocation(line: 2109, column: 11, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !1, line: 2109, column: 11)
!7606 = distinct !DILexicalBlock(scope: !7598, file: !1, line: 2108, column: 5)
!7607 = !DILocation(line: 2109, column: 11, scope: !7606)
!7608 = !DILocation(line: 2110, column: 11, scope: !7605)
!7609 = !DILocation(line: 2110, column: 2, scope: !7605)
!7610 = !DILocation(line: 2114, column: 8, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2114, column: 7)
!7612 = !DILocation(line: 2114, column: 7, scope: !7348)
!7613 = !DILocation(line: 2116, column: 7, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7611, file: !1, line: 2115, column: 5)
!7615 = !DILocation(line: 2116, column: 35, scope: !7614)
!7616 = !DILocation(line: 2117, column: 11, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7614, file: !1, line: 2117, column: 11)
!7618 = !DILocation(line: 2117, column: 11, scope: !7614)
!7619 = !DILocation(line: 2118, column: 18, scope: !7617)
!7620 = !DILocation(line: 2118, column: 9, scope: !7617)
!7621 = !DILocation(line: 2119, column: 7, scope: !7614)
!7622 = !DILocation(line: 2120, column: 7, scope: !7614)
!7623 = !DILocation(line: 2125, column: 7, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2125, column: 7)
!7625 = !DILocation(line: 2125, column: 7, scope: !7348)
!7626 = !DILocation(line: 2126, column: 14, scope: !7624)
!7627 = !DILocation(line: 2126, column: 5, scope: !7624)
!7628 = !DILocation(line: 2129, column: 14, scope: !7348)
!7629 = !DILocation(line: 2138, column: 7, scope: !7348)
!7630 = !DILocation(line: 2140, column: 21, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !1, line: 2139, column: 5)
!7632 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2138, column: 7)
!7633 = !DILocation(line: 2140, column: 19, scope: !7631)
!7634 = !DILocation(line: 2141, column: 11, scope: !7631)
!7635 = !DILocation(line: 2142, column: 23, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 2141, column: 11)
!7637 = !DILocation(line: 2142, column: 21, scope: !7636)
!7638 = !DILocation(line: 2142, column: 9, scope: !7636)
!7639 = !DILocation(line: 2144, column: 12, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7632, file: !1, line: 2144, column: 12)
!7641 = !DILocation(line: 2144, column: 12, scope: !7632)
!7642 = !DILocation(line: 2145, column: 19, scope: !7640)
!7643 = !DILocation(line: 2145, column: 17, scope: !7640)
!7644 = !DILocation(line: 2145, column: 5, scope: !7640)
!7645 = !DILocation(line: 0, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !1, line: 2206, column: 8)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !1, line: 2205, column: 2)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !1, line: 2204, column: 11)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !1, line: 2202, column: 5)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !1, line: 2201, column: 3)
!7651 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2201, column: 3)
!7652 = !DILocation(line: 0, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7646, file: !1, line: 2207, column: 6)
!7654 = !DILocation(line: 0, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !1, line: 2226, column: 16)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !1, line: 2226, column: 16)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !1, line: 2220, column: 14)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !1, line: 2219, column: 16)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !1, line: 2214, column: 3)
!7660 = distinct !DILexicalBlock(scope: !7653, file: !1, line: 2213, column: 12)
!7661 = !DILocation(line: 0, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7647, file: !1, line: 2235, column: 8)
!7663 = !DILocation(line: 0, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 2254, column: 15)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !1, line: 2247, column: 9)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !1, line: 2246, column: 7)
!7667 = distinct !DILexicalBlock(scope: !7649, file: !1, line: 2246, column: 7)
!7668 = !DILocation(line: 0, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7649, file: !1, line: 2261, column: 11)
!7670 = !DILocation(line: 2201, column: 8, scope: !7651)
!7671 = !DILocation(line: 1939, column: 10, scope: !7348)
!7672 = !DILocation(line: 2200, column: 18, scope: !7348)
!7673 = !DILocation(line: 1925, column: 8, scope: !7348)
!7674 = !DILocation(line: 0, scope: !7651)
!7675 = !DILocation(line: 2201, column: 17, scope: !7650)
!7676 = !DILocation(line: 2201, column: 3, scope: !7651)
!7677 = !DILocation(line: 2204, column: 13, scope: !7648)
!7678 = !DILocation(line: 2204, column: 11, scope: !7649)
!7679 = !DILocation(line: 2206, column: 29, scope: !7646)
!7680 = !DILocation(line: 2212, column: 42, scope: !7653)
!7681 = !DILocation(line: 2212, column: 53, scope: !7653)
!7682 = !DILocation(line: 2213, column: 13, scope: !7660)
!7683 = !DILocation(line: 2213, column: 12, scope: !7653)
!7684 = !DILocation(line: 2215, column: 9, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7659, file: !1, line: 2215, column: 9)
!7686 = !DILocation(line: 2215, column: 9, scope: !7659)
!7687 = !DILocation(line: 2216, column: 16, scope: !7685)
!7688 = !DILocation(line: 2216, column: 7, scope: !7685)
!7689 = !DILocation(line: 2218, column: 5, scope: !7659)
!7690 = !DILocation(line: 2219, column: 16, scope: !7659)
!7691 = !DILocation(line: 2226, column: 16, scope: !7656)
!7692 = !DILocation(line: 0, scope: !7656)
!7693 = !DILocation(line: 2226, column: 42, scope: !7655)
!7694 = !DILocation(line: 2226, column: 57, scope: !7655)
!7695 = !DILocation(line: 2226, column: 30, scope: !7655)
!7696 = !DILocation(line: 2227, column: 18, scope: !7655)
!7697 = !DILocation(line: 2226, column: 63, scope: !7655)
!7698 = !DILocation(line: 2226, column: 16, scope: !7655)
!7699 = distinct !{!7699, !7691, !7700}
!7700 = !DILocation(line: 2227, column: 18, scope: !7656)
!7701 = !DILocation(line: 2235, column: 16, scope: !7662)
!7702 = !DILocation(line: 2235, column: 33, scope: !7662)
!7703 = !DILocation(line: 2235, column: 29, scope: !7662)
!7704 = !DILocation(line: 2236, column: 6, scope: !7662)
!7705 = !DILocation(line: 2239, column: 6, scope: !7662)
!7706 = !DILocation(line: 2243, column: 2, scope: !7648)
!7707 = !DILocation(line: 2246, column: 12, scope: !7667)
!7708 = !DILocation(line: 0, scope: !7667)
!7709 = !DILocation(line: 2246, column: 19, scope: !7666)
!7710 = !DILocation(line: 2246, column: 7, scope: !7667)
!7711 = !DILocation(line: 2249, column: 7, scope: !7665)
!7712 = !DILocation(line: 2250, column: 15, scope: !7665)
!7713 = !DILocation(line: 2251, column: 15, scope: !7665)
!7714 = !DILocation(line: 2252, column: 4, scope: !7665)
!7715 = !DILocation(line: 2253, column: 4, scope: !7665)
!7716 = !DILocation(line: 2254, column: 15, scope: !7665)
!7717 = !DILocation(line: 2255, column: 6, scope: !7664)
!7718 = !DILocation(line: 2246, column: 62, scope: !7666)
!7719 = !DILocation(line: 2246, column: 7, scope: !7666)
!7720 = distinct !{!7720, !7710, !7721}
!7721 = !DILocation(line: 2256, column: 9, scope: !7667)
!7722 = !DILocation(line: 2258, column: 11, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7649, file: !1, line: 2258, column: 11)
!7724 = !DILocation(line: 2258, column: 11, scope: !7649)
!7725 = !DILocation(line: 2261, column: 11, scope: !7649)
!7726 = !DILocation(line: 2262, column: 46, scope: !7669)
!7727 = !DILocation(line: 2262, column: 34, scope: !7669)
!7728 = !DILocation(line: 2262, column: 2, scope: !7669)
!7729 = !DILocation(line: 2264, column: 2, scope: !7669)
!7730 = !DILocation(line: 2264, column: 43, scope: !7669)
!7731 = !DILocation(line: 2265, column: 24, scope: !7649)
!7732 = !DILocation(line: 2266, column: 5, scope: !7649)
!7733 = !DILocation(line: 2201, column: 29, scope: !7650)
!7734 = !DILocation(line: 2201, column: 3, scope: !7650)
!7735 = distinct !{!7735, !7676, !7736}
!7736 = !DILocation(line: 2266, column: 5, scope: !7651)
!7737 = !DILocation(line: 2268, column: 3, scope: !7348)
!7738 = !DILocation(line: 2269, column: 7, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 2269, column: 7)
!7740 = !DILocation(line: 2269, column: 7, scope: !7348)
!7741 = !DILocation(line: 2270, column: 5, scope: !7739)
!7742 = !DILocation(line: 2273, column: 1, scope: !7348)
!7743 = distinct !DISubprogram(name: "vectorizable_assignment", scope: !1, file: !1, line: 1801, type: !2164, scopeLine: 1803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7744)
!7744 = !{!7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766, !7767}
!7745 = !DILocalVariable(name: "stmt", arg: 1, scope: !7743, file: !1, line: 1801, type: !2167)
!7746 = !DILocalVariable(name: "gsi", arg: 2, scope: !7743, file: !1, line: 1801, type: !3524)
!7747 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !7743, file: !1, line: 1802, type: !3531)
!7748 = !DILocalVariable(name: "slp_node", arg: 4, scope: !7743, file: !1, line: 1802, type: !3532)
!7749 = !DILocalVariable(name: "vec_dest", scope: !7743, file: !1, line: 1804, type: !2354)
!7750 = !DILocalVariable(name: "scalar_dest", scope: !7743, file: !1, line: 1805, type: !2354)
!7751 = !DILocalVariable(name: "op", scope: !7743, file: !1, line: 1806, type: !2354)
!7752 = !DILocalVariable(name: "stmt_info", scope: !7743, file: !1, line: 1807, type: !3562)
!7753 = !DILocalVariable(name: "vectype", scope: !7743, file: !1, line: 1808, type: !2354)
!7754 = !DILocalVariable(name: "loop_vinfo", scope: !7743, file: !1, line: 1809, type: !3569)
!7755 = !DILocalVariable(name: "new_temp", scope: !7743, file: !1, line: 1810, type: !2354)
!7756 = !DILocalVariable(name: "def", scope: !7743, file: !1, line: 1811, type: !2354)
!7757 = !DILocalVariable(name: "def_stmt", scope: !7743, file: !1, line: 1812, type: !2167)
!7758 = !DILocalVariable(name: "dt", scope: !7743, file: !1, line: 1813, type: !3837)
!7759 = !DILocalVariable(name: "nunits", scope: !7743, file: !1, line: 1814, type: !2256)
!7760 = !DILocalVariable(name: "ncopies", scope: !7743, file: !1, line: 1815, type: !2256)
!7761 = !DILocalVariable(name: "i", scope: !7743, file: !1, line: 1816, type: !2256)
!7762 = !DILocalVariable(name: "j", scope: !7743, file: !1, line: 1816, type: !2256)
!7763 = !DILocalVariable(name: "vec_oprnds", scope: !7743, file: !1, line: 1817, type: !3603)
!7764 = !DILocalVariable(name: "vop", scope: !7743, file: !1, line: 1818, type: !2354)
!7765 = !DILocalVariable(name: "bb_vinfo", scope: !7743, file: !1, line: 1819, type: !3818)
!7766 = !DILocalVariable(name: "new_stmt", scope: !7743, file: !1, line: 1820, type: !2167)
!7767 = !DILocalVariable(name: "prev_stmt_info", scope: !7743, file: !1, line: 1821, type: !3562)
!7768 = !DILocation(line: 0, scope: !7743)
!7769 = !DILocation(line: 1807, column: 29, scope: !7743)
!7770 = !DILocation(line: 1808, column: 18, scope: !7743)
!7771 = !DILocation(line: 1809, column: 30, scope: !7743)
!7772 = !DILocation(line: 1811, column: 3, scope: !7743)
!7773 = !DILocation(line: 1812, column: 3, scope: !7743)
!7774 = !DILocation(line: 1813, column: 3, scope: !7743)
!7775 = !DILocation(line: 1813, column: 22, scope: !7743)
!7776 = !DILocation(line: 1814, column: 16, scope: !7743)
!7777 = !DILocation(line: 1817, column: 3, scope: !7743)
!7778 = !DILocation(line: 1817, column: 19, scope: !7743)
!7779 = !DILocation(line: 1818, column: 3, scope: !7743)
!7780 = !DILocation(line: 1819, column: 26, scope: !7743)
!7781 = !DILocation(line: 1826, column: 7, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1826, column: 7)
!7783 = !DILocation(line: 1826, column: 7, scope: !7743)
!7784 = !DILocation(line: 1829, column: 15, scope: !7782)
!7785 = !DILocation(line: 1829, column: 51, scope: !7782)
!7786 = !DILocation(line: 0, scope: !7782)
!7787 = !DILocation(line: 1831, column: 3, scope: !7743)
!7788 = !DILocation(line: 1833, column: 8, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1833, column: 7)
!7790 = !DILocation(line: 1833, column: 46, scope: !7789)
!7791 = !DILocation(line: 1833, column: 42, scope: !7789)
!7792 = !DILocation(line: 1836, column: 7, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1836, column: 7)
!7794 = !DILocation(line: 1836, column: 39, scope: !7793)
!7795 = !DILocation(line: 1836, column: 7, scope: !7743)
!7796 = !DILocation(line: 1840, column: 8, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1840, column: 7)
!7798 = !DILocation(line: 1840, column: 7, scope: !7743)
!7799 = !DILocation(line: 1843, column: 17, scope: !7743)
!7800 = !DILocation(line: 1844, column: 7, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1844, column: 7)
!7802 = !DILocation(line: 1844, column: 31, scope: !7801)
!7803 = !DILocation(line: 1844, column: 7, scope: !7743)
!7804 = !DILocation(line: 1847, column: 7, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1847, column: 7)
!7806 = !DILocation(line: 1848, column: 7, scope: !7805)
!7807 = !DILocation(line: 1848, column: 10, scope: !7805)
!7808 = !DILocation(line: 1848, column: 40, scope: !7805)
!7809 = !DILocation(line: 1847, column: 7, scope: !7743)
!7810 = !DILocation(line: 1849, column: 10, scope: !7805)
!7811 = !DILocation(line: 1853, column: 72, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1853, column: 7)
!7813 = !DILocation(line: 1853, column: 8, scope: !7812)
!7814 = !DILocation(line: 1853, column: 7, scope: !7743)
!7815 = !DILocation(line: 1855, column: 11, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !1, line: 1855, column: 11)
!7817 = distinct !DILexicalBlock(scope: !7812, file: !1, line: 1854, column: 5)
!7818 = !DILocation(line: 1855, column: 11, scope: !7817)
!7819 = !DILocation(line: 1856, column: 18, scope: !7816)
!7820 = !DILocation(line: 1856, column: 9, scope: !7816)
!7821 = !DILocation(line: 1860, column: 8, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1860, column: 7)
!7823 = !DILocation(line: 1860, column: 7, scope: !7743)
!7824 = !DILocation(line: 1862, column: 7, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7822, file: !1, line: 1861, column: 5)
!7826 = !DILocation(line: 1862, column: 35, scope: !7825)
!7827 = !DILocation(line: 1863, column: 11, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7825, file: !1, line: 1863, column: 11)
!7829 = !DILocation(line: 1863, column: 11, scope: !7825)
!7830 = !DILocation(line: 1864, column: 18, scope: !7828)
!7831 = !DILocation(line: 1864, column: 9, scope: !7828)
!7832 = !DILocation(line: 1865, column: 7, scope: !7825)
!7833 = !DILocation(line: 1866, column: 7, scope: !7825)
!7834 = !DILocation(line: 1870, column: 7, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1870, column: 7)
!7836 = !DILocation(line: 1870, column: 7, scope: !7743)
!7837 = !DILocation(line: 1871, column: 14, scope: !7835)
!7838 = !DILocation(line: 1871, column: 5, scope: !7835)
!7839 = !DILocation(line: 1874, column: 14, scope: !7743)
!7840 = !DILocation(line: 0, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !1, line: 1892, column: 14)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !1, line: 1887, column: 8)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !1, line: 1886, column: 7)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 1886, column: 7)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !1, line: 1878, column: 5)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !1, line: 1877, column: 3)
!7847 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 1877, column: 3)
!7848 = !DILocation(line: 0, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 1899, column: 11)
!7850 = !DILocation(line: 1877, column: 8, scope: !7847)
!7851 = !DILocation(line: 0, scope: !7847)
!7852 = !DILocation(line: 1820, column: 10, scope: !7743)
!7853 = !DILocation(line: 1821, column: 17, scope: !7743)
!7854 = !DILocation(line: 1877, column: 17, scope: !7846)
!7855 = !DILocation(line: 1877, column: 3, scope: !7847)
!7856 = !DILocation(line: 1880, column: 13, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 1880, column: 11)
!7858 = !DILocation(line: 1880, column: 11, scope: !7845)
!7859 = !DILocation(line: 1881, column: 9, scope: !7857)
!7860 = !DILocation(line: 1883, column: 9, scope: !7857)
!7861 = !DILocation(line: 1886, column: 12, scope: !7844)
!7862 = !DILocation(line: 0, scope: !7844)
!7863 = !DILocation(line: 1886, column: 19, scope: !7843)
!7864 = !DILocation(line: 1886, column: 7, scope: !7844)
!7865 = !DILocation(line: 1888, column: 21, scope: !7842)
!7866 = !DILocation(line: 1889, column: 21, scope: !7842)
!7867 = !DILocation(line: 1890, column: 10, scope: !7842)
!7868 = !DILocation(line: 1891, column: 10, scope: !7842)
!7869 = !DILocation(line: 1886, column: 60, scope: !7843)
!7870 = !DILocation(line: 1886, column: 7, scope: !7843)
!7871 = distinct !{!7871, !7864, !7872}
!7872 = !DILocation(line: 1894, column: 8, scope: !7844)
!7873 = !DILocation(line: 1896, column: 11, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 1896, column: 11)
!7875 = !DILocation(line: 1893, column: 12, scope: !7841)
!7876 = !DILocation(line: 1896, column: 11, scope: !7845)
!7877 = !DILocation(line: 1899, column: 11, scope: !7845)
!7878 = !DILocation(line: 1900, column: 53, scope: !7849)
!7879 = !DILocation(line: 1900, column: 41, scope: !7849)
!7880 = !DILocation(line: 1900, column: 9, scope: !7849)
!7881 = !DILocation(line: 1902, column: 9, scope: !7849)
!7882 = !DILocation(line: 1902, column: 50, scope: !7849)
!7883 = !DILocation(line: 1904, column: 24, scope: !7845)
!7884 = !DILocation(line: 1905, column: 5, scope: !7845)
!7885 = !DILocation(line: 1877, column: 29, scope: !7846)
!7886 = !DILocation(line: 1877, column: 3, scope: !7846)
!7887 = distinct !{!7887, !7855, !7888}
!7888 = !DILocation(line: 1905, column: 5, scope: !7847)
!7889 = !DILocation(line: 1907, column: 3, scope: !7743)
!7890 = !DILocation(line: 1908, column: 3, scope: !7743)
!7891 = !DILocation(line: 1909, column: 1, scope: !7743)
!7892 = distinct !DISubprogram(name: "vectorizable_load", scope: !1, file: !1, line: 3256, type: !7893, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !7895)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{!2166, !2167, !3524, !3531, !3532, !3736}
!7895 = !{!7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7925, !7926, !7927, !7928, !7929, !7930, !7931, !7932, !7933, !7934, !7935, !7936, !7937, !7938, !7939, !7940, !7941, !7942, !7943, !7952, !7953, !7955, !7956, !7957, !7960, !7965, !7966, !7967, !7968}
!7896 = !DILocalVariable(name: "stmt", arg: 1, scope: !7892, file: !1, line: 3256, type: !2167)
!7897 = !DILocalVariable(name: "gsi", arg: 2, scope: !7892, file: !1, line: 3256, type: !3524)
!7898 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !7892, file: !1, line: 3256, type: !3531)
!7899 = !DILocalVariable(name: "slp_node", arg: 4, scope: !7892, file: !1, line: 3257, type: !3532)
!7900 = !DILocalVariable(name: "slp_node_instance", arg: 5, scope: !7892, file: !1, line: 3257, type: !3736)
!7901 = !DILocalVariable(name: "scalar_dest", scope: !7892, file: !1, line: 3259, type: !2354)
!7902 = !DILocalVariable(name: "vec_dest", scope: !7892, file: !1, line: 3260, type: !2354)
!7903 = !DILocalVariable(name: "data_ref", scope: !7892, file: !1, line: 3261, type: !2354)
!7904 = !DILocalVariable(name: "stmt_info", scope: !7892, file: !1, line: 3262, type: !3562)
!7905 = !DILocalVariable(name: "prev_stmt_info", scope: !7892, file: !1, line: 3263, type: !3562)
!7906 = !DILocalVariable(name: "loop_vinfo", scope: !7892, file: !1, line: 3264, type: !3569)
!7907 = !DILocalVariable(name: "loop", scope: !7892, file: !1, line: 3265, type: !2802)
!7908 = !DILocalVariable(name: "containing_loop", scope: !7892, file: !1, line: 3266, type: !2802)
!7909 = !DILocalVariable(name: "nested_in_vect_loop", scope: !7892, file: !1, line: 3267, type: !2166)
!7910 = !DILocalVariable(name: "dr", scope: !7892, file: !1, line: 3268, type: !3582)
!7911 = !DILocalVariable(name: "first_dr", scope: !7892, file: !1, line: 3268, type: !3582)
!7912 = !DILocalVariable(name: "vectype", scope: !7892, file: !1, line: 3269, type: !2354)
!7913 = !DILocalVariable(name: "new_temp", scope: !7892, file: !1, line: 3270, type: !2354)
!7914 = !DILocalVariable(name: "mode", scope: !7892, file: !1, line: 3271, type: !2256)
!7915 = !DILocalVariable(name: "new_stmt", scope: !7892, file: !1, line: 3272, type: !2167)
!7916 = !DILocalVariable(name: "dummy", scope: !7892, file: !1, line: 3273, type: !2354)
!7917 = !DILocalVariable(name: "alignment_support_scheme", scope: !7892, file: !1, line: 3274, type: !3860)
!7918 = !DILocalVariable(name: "dataref_ptr", scope: !7892, file: !1, line: 3275, type: !2354)
!7919 = !DILocalVariable(name: "ptr_incr", scope: !7892, file: !1, line: 3276, type: !2167)
!7920 = !DILocalVariable(name: "nunits", scope: !7892, file: !1, line: 3277, type: !2256)
!7921 = !DILocalVariable(name: "ncopies", scope: !7892, file: !1, line: 3278, type: !2256)
!7922 = !DILocalVariable(name: "i", scope: !7892, file: !1, line: 3279, type: !2256)
!7923 = !DILocalVariable(name: "j", scope: !7892, file: !1, line: 3279, type: !2256)
!7924 = !DILocalVariable(name: "group_size", scope: !7892, file: !1, line: 3279, type: !2256)
!7925 = !DILocalVariable(name: "msq", scope: !7892, file: !1, line: 3280, type: !2354)
!7926 = !DILocalVariable(name: "lsq", scope: !7892, file: !1, line: 3280, type: !2354)
!7927 = !DILocalVariable(name: "offset", scope: !7892, file: !1, line: 3281, type: !2354)
!7928 = !DILocalVariable(name: "realignment_token", scope: !7892, file: !1, line: 3282, type: !2354)
!7929 = !DILocalVariable(name: "phi", scope: !7892, file: !1, line: 3283, type: !2167)
!7930 = !DILocalVariable(name: "dr_chain", scope: !7892, file: !1, line: 3284, type: !3603)
!7931 = !DILocalVariable(name: "strided_load", scope: !7892, file: !1, line: 3285, type: !2166)
!7932 = !DILocalVariable(name: "first_stmt", scope: !7892, file: !1, line: 3286, type: !2167)
!7933 = !DILocalVariable(name: "scalar_type", scope: !7892, file: !1, line: 3287, type: !2354)
!7934 = !DILocalVariable(name: "inv_p", scope: !7892, file: !1, line: 3288, type: !2166)
!7935 = !DILocalVariable(name: "compute_in_loop", scope: !7892, file: !1, line: 3289, type: !2166)
!7936 = !DILocalVariable(name: "at_loop", scope: !7892, file: !1, line: 3290, type: !2802)
!7937 = !DILocalVariable(name: "vec_num", scope: !7892, file: !1, line: 3291, type: !2256)
!7938 = !DILocalVariable(name: "slp", scope: !7892, file: !1, line: 3292, type: !2166)
!7939 = !DILocalVariable(name: "slp_perm", scope: !7892, file: !1, line: 3293, type: !2166)
!7940 = !DILocalVariable(name: "code", scope: !7892, file: !1, line: 3294, type: !181)
!7941 = !DILocalVariable(name: "bb_vinfo", scope: !7892, file: !1, line: 3295, type: !3818)
!7942 = !DILocalVariable(name: "vf", scope: !7892, file: !1, line: 3296, type: !2256)
!7943 = !DILocalVariable(name: "mis", scope: !7944, file: !1, line: 3586, type: !2256)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !1, line: 3585, column: 8)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !1, line: 3579, column: 6)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !1, line: 3572, column: 2)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 3571, column: 7)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !1, line: 3571, column: 7)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !1, line: 3560, column: 5)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !1, line: 3559, column: 3)
!7951 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3559, column: 3)
!7952 = !DILocalVariable(name: "tmis", scope: !7944, file: !1, line: 3587, type: !2354)
!7953 = !DILocalVariable(name: "ptr", scope: !7954, file: !1, line: 3596, type: !2354)
!7954 = distinct !DILexicalBlock(scope: !7945, file: !1, line: 3595, column: 8)
!7955 = !DILocalVariable(name: "bump", scope: !7954, file: !1, line: 3596, type: !2354)
!7956 = !DILocalVariable(name: "vs_minus_1", scope: !7954, file: !1, line: 3597, type: !2354)
!7957 = !DILocalVariable(name: "tmp", scope: !7958, file: !1, line: 3643, type: !2354)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !1, line: 3642, column: 6)
!7959 = distinct !DILexicalBlock(scope: !7946, file: !1, line: 3640, column: 8)
!7960 = !DILocalVariable(name: "k", scope: !7961, file: !1, line: 3673, type: !2256)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !1, line: 3672, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !1, line: 3671, column: 12)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !1, line: 3668, column: 6)
!7964 = distinct !DILexicalBlock(scope: !7946, file: !1, line: 3667, column: 8)
!7965 = !DILocalVariable(name: "t", scope: !7961, file: !1, line: 3674, type: !2354)
!7966 = !DILocalVariable(name: "vec_inv", scope: !7961, file: !1, line: 3675, type: !2354)
!7967 = !DILocalVariable(name: "bitpos", scope: !7961, file: !1, line: 3675, type: !2354)
!7968 = !DILocalVariable(name: "bitsize", scope: !7961, file: !1, line: 3675, type: !2354)
!7969 = !DILocation(line: 0, scope: !7892)
!7970 = !DILocation(line: 3262, column: 29, scope: !7892)
!7971 = !DILocation(line: 3264, column: 30, scope: !7892)
!7972 = !DILocation(line: 3266, column: 35, scope: !7892)
!7973 = !DILocation(line: 3266, column: 54, scope: !7892)
!7974 = !DILocation(line: 3268, column: 31, scope: !7892)
!7975 = !DILocation(line: 3269, column: 18, scope: !7892)
!7976 = !DILocation(line: 3273, column: 3, scope: !7892)
!7977 = !DILocation(line: 3276, column: 3, scope: !7892)
!7978 = !DILocation(line: 3277, column: 16, scope: !7892)
!7979 = !DILocation(line: 3282, column: 3, scope: !7892)
!7980 = !DILocation(line: 3282, column: 8, scope: !7892)
!7981 = !DILocation(line: 3284, column: 3, scope: !7892)
!7982 = !DILocation(line: 3284, column: 19, scope: !7892)
!7983 = !DILocation(line: 3288, column: 3, scope: !7892)
!7984 = !DILocation(line: 3290, column: 3, scope: !7892)
!7985 = !DILocation(line: 3292, column: 24, scope: !7892)
!7986 = !DILocation(line: 3295, column: 26, scope: !7892)
!7987 = !DILocation(line: 3298, column: 7, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3298, column: 7)
!7989 = !DILocation(line: 3298, column: 7, scope: !7892)
!7990 = !DILocation(line: 3300, column: 14, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7988, file: !1, line: 3299, column: 5)
!7992 = !DILocation(line: 3301, column: 29, scope: !7991)
!7993 = !DILocation(line: 3302, column: 12, scope: !7991)
!7994 = !DILocation(line: 3303, column: 5, scope: !7991)
!7995 = !DILocation(line: 0, scope: !7988)
!7996 = !DILocation(line: 3310, column: 7, scope: !7892)
!7997 = !DILocation(line: 3313, column: 15, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3310, column: 7)
!7999 = !DILocation(line: 3313, column: 51, scope: !7998)
!8000 = !DILocation(line: 0, scope: !7998)
!8001 = !DILocation(line: 3315, column: 3, scope: !7892)
!8002 = !DILocation(line: 3318, column: 7, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3318, column: 7)
!8004 = !DILocation(line: 3318, column: 38, scope: !8003)
!8005 = !DILocation(line: 3318, column: 27, scope: !8003)
!8006 = !DILocation(line: 3320, column: 11, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !1, line: 3320, column: 11)
!8008 = distinct !DILexicalBlock(scope: !8003, file: !1, line: 3319, column: 5)
!8009 = !DILocation(line: 3320, column: 11, scope: !8008)
!8010 = !DILocation(line: 3321, column: 18, scope: !8007)
!8011 = !DILocation(line: 3321, column: 9, scope: !8007)
!8012 = !DILocation(line: 3325, column: 8, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3325, column: 7)
!8014 = !DILocation(line: 3325, column: 46, scope: !8013)
!8015 = !DILocation(line: 3325, column: 42, scope: !8013)
!8016 = !DILocation(line: 3328, column: 7, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3328, column: 7)
!8018 = !DILocation(line: 3328, column: 39, scope: !8017)
!8019 = !DILocation(line: 3328, column: 7, scope: !7892)
!8020 = !DILocation(line: 3332, column: 8, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3332, column: 7)
!8022 = !DILocation(line: 3332, column: 7, scope: !7892)
!8023 = !DILocation(line: 3335, column: 17, scope: !7892)
!8024 = !DILocation(line: 3336, column: 7, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3336, column: 7)
!8026 = !DILocation(line: 3336, column: 31, scope: !8025)
!8027 = !DILocation(line: 3336, column: 7, scope: !7892)
!8028 = !DILocation(line: 3339, column: 10, scope: !7892)
!8029 = !DILocation(line: 3341, column: 7, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3340, column: 7)
!8031 = !DILocation(line: 3347, column: 8, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3347, column: 7)
!8033 = !DILocation(line: 3347, column: 7, scope: !7892)
!8034 = !DILocation(line: 3350, column: 17, scope: !7892)
!8035 = !DILocation(line: 3351, column: 16, scope: !7892)
!8036 = !DILocation(line: 3355, column: 7, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3355, column: 7)
!8038 = !DILocation(line: 3355, column: 40, scope: !8037)
!8039 = !DILocation(line: 3355, column: 50, scope: !8037)
!8040 = !DILocation(line: 3355, column: 7, scope: !7892)
!8041 = !DILocation(line: 3357, column: 11, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !1, line: 3357, column: 11)
!8043 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 3356, column: 5)
!8044 = !DILocation(line: 3357, column: 11, scope: !8043)
!8045 = !DILocation(line: 3358, column: 11, scope: !8042)
!8046 = !DILocation(line: 3358, column: 2, scope: !8042)
!8047 = !DILocation(line: 3364, column: 35, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3364, column: 7)
!8049 = !DILocation(line: 3364, column: 60, scope: !8048)
!8050 = !DILocation(line: 3364, column: 8, scope: !8048)
!8051 = !DILocation(line: 3364, column: 7, scope: !7892)
!8052 = !DILocation(line: 3366, column: 11, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8054, file: !1, line: 3366, column: 11)
!8054 = distinct !DILexicalBlock(scope: !8048, file: !1, line: 3365, column: 5)
!8055 = !DILocation(line: 3366, column: 11, scope: !8054)
!8056 = !DILocation(line: 3367, column: 18, scope: !8053)
!8057 = !DILocation(line: 3367, column: 9, scope: !8053)
!8058 = !DILocation(line: 3372, column: 7, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3372, column: 7)
!8060 = !DILocation(line: 3372, column: 7, scope: !7892)
!8061 = !DILocation(line: 3376, column: 7, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8059, file: !1, line: 3373, column: 5)
!8063 = !DILocation(line: 3379, column: 12, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8062, file: !1, line: 3379, column: 11)
!8065 = !DILocation(line: 3380, column: 4, scope: !8064)
!8066 = !DILocation(line: 3380, column: 8, scope: !8064)
!8067 = !DILocation(line: 3380, column: 34, scope: !8064)
!8068 = !DILocation(line: 3384, column: 8, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3384, column: 7)
!8070 = !DILocation(line: 3384, column: 7, scope: !7892)
!8071 = !DILocation(line: 3386, column: 7, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8069, file: !1, line: 3385, column: 5)
!8073 = !DILocation(line: 3386, column: 35, scope: !8072)
!8074 = !DILocation(line: 3387, column: 7, scope: !8072)
!8075 = !DILocation(line: 3388, column: 7, scope: !8072)
!8076 = !DILocation(line: 3391, column: 7, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3391, column: 7)
!8078 = !DILocation(line: 3391, column: 7, scope: !7892)
!8079 = !DILocation(line: 3392, column: 14, scope: !8077)
!8080 = !DILocation(line: 3392, column: 5, scope: !8077)
!8081 = !DILocation(line: 3396, column: 7, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3396, column: 7)
!8083 = !DILocation(line: 3396, column: 7, scope: !7892)
!8084 = !DILocation(line: 3398, column: 20, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8082, file: !1, line: 3397, column: 5)
!8086 = !DILocation(line: 3400, column: 11, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 3400, column: 11)
!8088 = !DILocation(line: 3400, column: 11, scope: !8085)
!8089 = !DILocation(line: 3402, column: 16, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8087, file: !1, line: 3401, column: 2)
!8091 = !DILocation(line: 3402, column: 14, scope: !8090)
!8092 = !DILocation(line: 3403, column: 4, scope: !8090)
!8093 = !DILocation(line: 3405, column: 18, scope: !8085)
!8094 = !DILocation(line: 3406, column: 20, scope: !8085)
!8095 = !DILocation(line: 3409, column: 11, scope: !8085)
!8096 = !DILocation(line: 3412, column: 14, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !1, line: 3410, column: 2)
!8098 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 3409, column: 11)
!8099 = !DILocation(line: 3413, column: 15, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8097, file: !1, line: 3413, column: 15)
!8101 = !DILocation(line: 3413, column: 15, scope: !8097)
!8102 = !DILocation(line: 3415, column: 6, scope: !8097)
!8103 = !DILocation(line: 0, scope: !8098)
!8104 = !DILocation(line: 3419, column: 18, scope: !8085)
!8105 = !DILocation(line: 3419, column: 16, scope: !8085)
!8106 = !DILocation(line: 3420, column: 5, scope: !8085)
!8107 = !DILocation(line: 0, scope: !8082)
!8108 = !DILocation(line: 3428, column: 30, scope: !7892)
!8109 = !DILocation(line: 3429, column: 3, scope: !7892)
!8110 = !DILocation(line: 3534, column: 7, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3534, column: 7)
!8112 = !DILocation(line: 3534, column: 12, scope: !8111)
!8113 = !DILocation(line: 3534, column: 15, scope: !8111)
!8114 = !DILocation(line: 3535, column: 7, scope: !8111)
!8115 = !DILocation(line: 3535, column: 11, scope: !8111)
!8116 = !DILocation(line: 3536, column: 6, scope: !8111)
!8117 = !DILocation(line: 3536, column: 4, scope: !8111)
!8118 = !DILocation(line: 3536, column: 42, scope: !8111)
!8119 = !DILocation(line: 3534, column: 7, scope: !7892)
!8120 = !DILocation(line: 3538, column: 7, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8111, file: !1, line: 3537, column: 5)
!8122 = !DILocation(line: 3543, column: 8, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3542, column: 7)
!8124 = !DILocation(line: 3546, column: 13, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8123, file: !1, line: 3545, column: 5)
!8126 = !DILocation(line: 3549, column: 36, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8125, file: !1, line: 3549, column: 11)
!8128 = !DILocation(line: 3549, column: 11, scope: !8125)
!8129 = !DILocation(line: 3551, column: 10, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8127, file: !1, line: 3550, column: 2)
!8131 = !DILocation(line: 3552, column: 13, scope: !8130)
!8132 = !DILocation(line: 3553, column: 2, scope: !8130)
!8133 = !DILocation(line: 3556, column: 13, scope: !8123)
!8134 = !DILocation(line: 0, scope: !7954)
!8135 = !DILocation(line: 0, scope: !7944)
!8136 = !DILocation(line: 0, scope: !7959)
!8137 = !DILocation(line: 0, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !7958, file: !1, line: 3656, column: 12)
!8139 = !DILocation(line: 0, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8138, file: !1, line: 3657, column: 3)
!8141 = !DILocation(line: 0, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8140, file: !1, line: 3659, column: 9)
!8143 = !DILocation(line: 0, scope: !7963)
!8144 = !DILocation(line: 0, scope: !7961)
!8145 = !DILocation(line: 0, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !7946, file: !1, line: 3701, column: 15)
!8147 = !DILocation(line: 0, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !7946, file: !1, line: 3705, column: 8)
!8149 = !DILocation(line: 0, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !7949, file: !1, line: 3712, column: 11)
!8151 = !DILocation(line: 0, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !1, line: 3724, column: 8)
!8153 = distinct !DILexicalBlock(scope: !8154, file: !1, line: 3723, column: 15)
!8154 = distinct !DILexicalBlock(scope: !8150, file: !1, line: 3722, column: 9)
!8155 = !DILocation(line: 3559, column: 8, scope: !7951)
!8156 = !DILocation(line: 0, scope: !7951)
!8157 = !DILocation(line: 3280, column: 8, scope: !7892)
!8158 = !DILocation(line: 3272, column: 10, scope: !7892)
!8159 = !DILocation(line: 3558, column: 18, scope: !7892)
!8160 = !DILocation(line: 3261, column: 8, scope: !7892)
!8161 = !DILocation(line: 3559, column: 17, scope: !7950)
!8162 = !DILocation(line: 3559, column: 3, scope: !7951)
!8163 = !DILocation(line: 3562, column: 13, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !7949, file: !1, line: 3562, column: 11)
!8165 = !DILocation(line: 3562, column: 11, scope: !7949)
!8166 = !DILocation(line: 3564, column: 14, scope: !8164)
!8167 = !DILocation(line: 3563, column: 23, scope: !8164)
!8168 = !DILocation(line: 3563, column: 9, scope: !8164)
!8169 = !DILocation(line: 3569, column: 33, scope: !8164)
!8170 = !DILocation(line: 3569, column: 3, scope: !8164)
!8171 = !DILocation(line: 0, scope: !8164)
!8172 = !DILocation(line: 3571, column: 12, scope: !7948)
!8173 = !DILocation(line: 0, scope: !7948)
!8174 = !DILocation(line: 0, scope: !7949)
!8175 = !DILocation(line: 3571, column: 21, scope: !7947)
!8176 = !DILocation(line: 3571, column: 7, scope: !7948)
!8177 = !DILocation(line: 3573, column: 10, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !7946, file: !1, line: 3573, column: 8)
!8179 = !DILocation(line: 3573, column: 8, scope: !7946)
!8180 = !DILocation(line: 3574, column: 50, scope: !8178)
!8181 = !DILocation(line: 3574, column: 20, scope: !8178)
!8182 = !DILocation(line: 3574, column: 6, scope: !8178)
!8183 = !DILocation(line: 3578, column: 4, scope: !7946)
!8184 = !DILocation(line: 3581, column: 8, scope: !7945)
!8185 = !DILocation(line: 3582, column: 19, scope: !7945)
!8186 = !DILocation(line: 3583, column: 8, scope: !7945)
!8187 = !DILocation(line: 3586, column: 13, scope: !7944)
!8188 = !DILocation(line: 3587, column: 20, scope: !7944)
!8189 = !DILocation(line: 3587, column: 16, scope: !7944)
!8190 = !DILocation(line: 3587, column: 28, scope: !7944)
!8191 = !DILocation(line: 3587, column: 45, scope: !7944)
!8192 = !DILocation(line: 3589, column: 10, scope: !7944)
!8193 = !DILocation(line: 3591, column: 5, scope: !7944)
!8194 = !DILocation(line: 3597, column: 21, scope: !7954)
!8195 = !DILocation(line: 3599, column: 7, scope: !7954)
!8196 = !DILocation(line: 3600, column: 11, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !7954, file: !1, line: 3599, column: 7)
!8198 = !DILocation(line: 3600, column: 5, scope: !8197)
!8199 = !DILocation(line: 3605, column: 14, scope: !7954)
!8200 = !DILocation(line: 3606, column: 14, scope: !7954)
!8201 = !DILocation(line: 3607, column: 14, scope: !7954)
!8202 = !DILocation(line: 3608, column: 14, scope: !7954)
!8203 = !DILocation(line: 3609, column: 3, scope: !7954)
!8204 = !DILocation(line: 3610, column: 30, scope: !7954)
!8205 = !DILocation(line: 3610, column: 3, scope: !7954)
!8206 = !DILocation(line: 3611, column: 30, scope: !7954)
!8207 = !DILocation(line: 3611, column: 3, scope: !7954)
!8208 = !DILocation(line: 3612, column: 3, scope: !7954)
!8209 = !DILocation(line: 3615, column: 10, scope: !7954)
!8210 = !DILocation(line: 3617, column: 9, scope: !7954)
!8211 = !DILocation(line: 3618, column: 21, scope: !7954)
!8212 = !DILocation(line: 3622, column: 19, scope: !7945)
!8213 = !DILocation(line: 3623, column: 8, scope: !7945)
!8214 = !DILocation(line: 3625, column: 8, scope: !7945)
!8215 = !DILocation(line: 3626, column: 6, scope: !7945)
!8216 = !DILocation(line: 3629, column: 4, scope: !7946)
!8217 = !DILocation(line: 3631, column: 15, scope: !7946)
!8218 = !DILocation(line: 3632, column: 15, scope: !7946)
!8219 = !DILocation(line: 3633, column: 15, scope: !7946)
!8220 = !DILocation(line: 3634, column: 4, scope: !7946)
!8221 = !DILocation(line: 3635, column: 4, scope: !7946)
!8222 = !DILocation(line: 3636, column: 4, scope: !7946)
!8223 = !DILocation(line: 3641, column: 8, scope: !7959)
!8224 = !DILocation(line: 3645, column: 14, scope: !7958)
!8225 = !DILocation(line: 3646, column: 13, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !7958, file: !1, line: 3646, column: 12)
!8227 = !DILocation(line: 3646, column: 12, scope: !7958)
!8228 = !DILocation(line: 3647, column: 21, scope: !8226)
!8229 = !DILocation(line: 3647, column: 3, scope: !8226)
!8230 = !DILocation(line: 3648, column: 19, scope: !7958)
!8231 = !DILocation(line: 3649, column: 14, scope: !7958)
!8232 = !DILocation(line: 0, scope: !7958)
!8233 = !DILocation(line: 3651, column: 19, scope: !7958)
!8234 = !DILocation(line: 3652, column: 19, scope: !7958)
!8235 = !DILocation(line: 3653, column: 8, scope: !7958)
!8236 = !DILocation(line: 3654, column: 8, scope: !7958)
!8237 = !DILocation(line: 3656, column: 12, scope: !7958)
!8238 = !DILocation(line: 3658, column: 5, scope: !8140)
!8239 = !DILocation(line: 3659, column: 11, scope: !8142)
!8240 = !DILocation(line: 3659, column: 26, scope: !8142)
!8241 = !DILocation(line: 3660, column: 30, scope: !8142)
!8242 = !DILocation(line: 3660, column: 7, scope: !8142)
!8243 = !DILocation(line: 0, scope: !7946)
!8244 = !DILocation(line: 3667, column: 8, scope: !7964)
!8245 = !DILocation(line: 3667, column: 14, scope: !7964)
!8246 = !DILocation(line: 3669, column: 8, scope: !7963)
!8247 = !DILocation(line: 3670, column: 8, scope: !7963)
!8248 = !DILocation(line: 3671, column: 12, scope: !7963)
!8249 = !DILocation(line: 3675, column: 37, scope: !7961)
!8250 = !DILocation(line: 3678, column: 14, scope: !7961)
!8251 = !DILocation(line: 3679, column: 15, scope: !7961)
!8252 = !DILocation(line: 3682, column: 4, scope: !7961)
!8253 = !DILocation(line: 3683, column: 16, scope: !7961)
!8254 = !DILocation(line: 3684, column: 30, scope: !7961)
!8255 = !DILocation(line: 3685, column: 5, scope: !7961)
!8256 = !DILocation(line: 3686, column: 5, scope: !7961)
!8257 = !DILocation(line: 3688, column: 10, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !7961, file: !1, line: 3688, column: 5)
!8259 = !DILocation(line: 3688, column: 28, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8258, file: !1, line: 3688, column: 5)
!8261 = !DILocation(line: 3688, column: 5, scope: !8258)
!8262 = !DILocation(line: 0, scope: !8258)
!8263 = !DILocation(line: 3689, column: 11, scope: !8260)
!8264 = !DILocation(line: 3688, column: 5, scope: !8260)
!8265 = distinct !{!8265, !8261, !8266}
!8266 = !DILocation(line: 3689, column: 11, scope: !8258)
!8267 = !DILocation(line: 3691, column: 15, scope: !7961)
!8268 = !DILocation(line: 3692, column: 16, scope: !7961)
!8269 = !DILocation(line: 3693, column: 16, scope: !7961)
!8270 = !DILocation(line: 3694, column: 3, scope: !7961)
!8271 = !DILocation(line: 3696, column: 3, scope: !7962)
!8272 = !DILocation(line: 3701, column: 28, scope: !8146)
!8273 = !DILocation(line: 3702, column: 13, scope: !8146)
!8274 = !DILocation(line: 3705, column: 12, scope: !8148)
!8275 = !DILocation(line: 3706, column: 6, scope: !8148)
!8276 = !DILocation(line: 3571, column: 33, scope: !7947)
!8277 = !DILocation(line: 3571, column: 7, scope: !7947)
!8278 = distinct !{!8278, !8176, !8279}
!8279 = !DILocation(line: 3707, column: 2, scope: !7948)
!8280 = !DILocation(line: 3709, column: 15, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !7949, file: !1, line: 3709, column: 11)
!8282 = !DILocation(line: 3712, column: 11, scope: !7949)
!8283 = !DILocation(line: 3714, column: 52, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8285, file: !1, line: 3714, column: 15)
!8285 = distinct !DILexicalBlock(scope: !8150, file: !1, line: 3713, column: 9)
!8286 = !DILocation(line: 3714, column: 16, scope: !8284)
!8287 = !DILocation(line: 3714, column: 15, scope: !8285)
!8288 = !DILocation(line: 3717, column: 15, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8284, file: !1, line: 3716, column: 13)
!8290 = !DILocation(line: 3718, column: 15, scope: !8289)
!8291 = !DILocation(line: 3723, column: 15, scope: !8154)
!8292 = !DILocation(line: 3725, column: 48, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8152, file: !1, line: 3725, column: 12)
!8294 = !DILocation(line: 3725, column: 13, scope: !8293)
!8295 = !DILocation(line: 3725, column: 12, scope: !8152)
!8296 = !DILocation(line: 3728, column: 20, scope: !8152)
!8297 = !DILocation(line: 3728, column: 18, scope: !8152)
!8298 = !DILocation(line: 3729, column: 15, scope: !8152)
!8299 = !DILocation(line: 3730, column: 19, scope: !8152)
!8300 = !DILocation(line: 3730, column: 17, scope: !8152)
!8301 = !DILocation(line: 3731, column: 6, scope: !8152)
!8302 = !DILocation(line: 3734, column: 12, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8153, file: !1, line: 3733, column: 6)
!8304 = !DILocation(line: 3735, column: 54, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8303, file: !1, line: 3734, column: 12)
!8306 = !DILocation(line: 3735, column: 42, scope: !8305)
!8307 = !DILocation(line: 3735, column: 10, scope: !8305)
!8308 = !DILocation(line: 3737, column: 10, scope: !8305)
!8309 = !DILocation(line: 3737, column: 51, scope: !8305)
!8310 = !DILocation(line: 3738, column: 25, scope: !8303)
!8311 = !DILocation(line: 3559, column: 29, scope: !7950)
!8312 = !DILocation(line: 3559, column: 3, scope: !7950)
!8313 = distinct !{!8313, !8162, !8314}
!8314 = !DILocation(line: 3741, column: 5, scope: !7951)
!8315 = !DILocation(line: 3743, column: 7, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !7892, file: !1, line: 3743, column: 7)
!8317 = !DILocation(line: 3743, column: 7, scope: !7892)
!8318 = !DILocation(line: 3744, column: 5, scope: !8316)
!8319 = !DILocation(line: 3747, column: 1, scope: !7892)
!8320 = !DILocation(line: 0, scope: !3868)
!8321 = !DILocation(line: 1227, column: 29, scope: !3868)
!8322 = !DILocation(line: 1231, column: 30, scope: !3868)
!8323 = !DILocation(line: 1232, column: 3, scope: !3868)
!8324 = !DILocation(line: 1233, column: 3, scope: !3868)
!8325 = !DILocation(line: 1234, column: 3, scope: !3868)
!8326 = !DILocation(line: 1234, column: 22, scope: !3868)
!8327 = !DILocation(line: 1237, column: 3, scope: !3868)
!8328 = !DILocation(line: 1237, column: 20, scope: !3868)
!8329 = !DILocation(line: 1242, column: 3, scope: !3868)
!8330 = !DILocation(line: 1244, column: 8, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1244, column: 7)
!8332 = !DILocation(line: 1244, column: 7, scope: !3868)
!8333 = !DILocation(line: 1247, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1247, column: 7)
!8335 = !DILocation(line: 1247, column: 39, scope: !8334)
!8336 = !DILocation(line: 1247, column: 7, scope: !3868)
!8337 = !DILocation(line: 1251, column: 7, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1251, column: 7)
!8339 = !DILocation(line: 1251, column: 7, scope: !3868)
!8340 = !DILocation(line: 1255, column: 8, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1255, column: 7)
!8342 = !DILocation(line: 1255, column: 7, scope: !3868)
!8343 = !DILocation(line: 1258, column: 7, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1258, column: 7)
!8345 = !DILocation(line: 1258, column: 42, scope: !8344)
!8346 = !DILocation(line: 1258, column: 7, scope: !3868)
!8347 = !DILocation(line: 1263, column: 11, scope: !3868)
!8348 = !DILocation(line: 1268, column: 18, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1268, column: 7)
!8350 = !DILocation(line: 1271, column: 3, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1271, column: 3)
!8352 = !DILocation(line: 0, scope: !8351)
!8353 = !DILocation(line: 1271, column: 17, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8351, file: !1, line: 1271, column: 3)
!8355 = !DILocation(line: 1273, column: 35, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8354, file: !1, line: 1272, column: 5)
!8357 = !DILocation(line: 1273, column: 12, scope: !8356)
!8358 = !DILocation(line: 1276, column: 11, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8356, file: !1, line: 1276, column: 11)
!8360 = !DILocation(line: 1277, column: 4, scope: !8359)
!8361 = !DILocation(line: 1277, column: 38, scope: !8359)
!8362 = !DILocation(line: 1277, column: 8, scope: !8359)
!8363 = !DILocation(line: 1276, column: 11, scope: !8356)
!8364 = !DILocation(line: 1279, column: 8, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !1, line: 1279, column: 8)
!8366 = distinct !DILexicalBlock(scope: !8359, file: !1, line: 1278, column: 2)
!8367 = !DILocation(line: 1279, column: 8, scope: !8366)
!8368 = !DILocation(line: 1280, column: 15, scope: !8365)
!8369 = !DILocation(line: 1280, column: 6, scope: !8365)
!8370 = !DILocation(line: 1283, column: 18, scope: !8356)
!8371 = !DILocation(line: 1285, column: 72, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8356, file: !1, line: 1285, column: 11)
!8373 = !DILocation(line: 1285, column: 12, scope: !8372)
!8374 = !DILocation(line: 1285, column: 11, scope: !8356)
!8375 = !DILocation(line: 1287, column: 8, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !1, line: 1287, column: 8)
!8377 = distinct !DILexicalBlock(scope: !8372, file: !1, line: 1286, column: 2)
!8378 = !DILocation(line: 1287, column: 8, scope: !8377)
!8379 = !DILocation(line: 1288, column: 15, scope: !8376)
!8380 = !DILocation(line: 1288, column: 6, scope: !8376)
!8381 = !DILocation(line: 1271, column: 27, scope: !8354)
!8382 = !DILocation(line: 1271, column: 3, scope: !8354)
!8383 = distinct !{!8383, !8350, !8384}
!8384 = !DILocation(line: 1291, column: 5, scope: !8351)
!8385 = !DILocation(line: 1293, column: 16, scope: !3868)
!8386 = !DILocation(line: 1294, column: 8, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1294, column: 7)
!8388 = !DILocation(line: 1294, column: 7, scope: !3868)
!8389 = !DILocation(line: 1296, column: 15, scope: !3868)
!8390 = !DILocation(line: 1298, column: 14, scope: !3868)
!8391 = !DILocation(line: 1299, column: 17, scope: !3868)
!8392 = !DILocation(line: 1300, column: 8, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1300, column: 7)
!8394 = !DILocation(line: 1300, column: 7, scope: !3868)
!8395 = !DILocation(line: 1302, column: 16, scope: !3868)
!8396 = !DILocation(line: 1305, column: 31, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1305, column: 7)
!8398 = !DILocation(line: 1305, column: 17, scope: !8397)
!8399 = !DILocation(line: 1305, column: 7, scope: !3868)
!8400 = !DILocation(line: 1307, column: 23, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !1, line: 1307, column: 12)
!8402 = !DILocation(line: 1307, column: 12, scope: !8397)
!8403 = !DILocation(line: 1309, column: 36, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8401, file: !1, line: 1309, column: 12)
!8405 = !DILocation(line: 1309, column: 23, scope: !8404)
!8406 = !DILocation(line: 1309, column: 12, scope: !8401)
!8407 = !DILocation(line: 0, scope: !8397)
!8408 = !DILocation(line: 1318, column: 12, scope: !3868)
!8409 = !DILocation(line: 1319, column: 14, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1319, column: 7)
!8411 = !DILocation(line: 1319, column: 7, scope: !3868)
!8412 = !DILocation(line: 1321, column: 11, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !1, line: 1321, column: 11)
!8414 = distinct !DILexicalBlock(scope: !8410, file: !1, line: 1320, column: 5)
!8415 = !DILocation(line: 1321, column: 11, scope: !8414)
!8416 = !DILocation(line: 1322, column: 11, scope: !8413)
!8417 = !DILocation(line: 1322, column: 2, scope: !8413)
!8418 = !DILocation(line: 1327, column: 3, scope: !3868)
!8419 = !DILocation(line: 1329, column: 16, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1329, column: 7)
!8421 = !DILocation(line: 0, scope: !8420)
!8422 = !DILocation(line: 1329, column: 7, scope: !3868)
!8423 = !DILocation(line: 1330, column: 5, scope: !8420)
!8424 = !DILocation(line: 1336, column: 3, scope: !3868)
!8425 = !DILocation(line: 1338, column: 8, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1338, column: 7)
!8427 = !DILocation(line: 1338, column: 7, scope: !3868)
!8428 = !DILocation(line: 1340, column: 7, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8426, file: !1, line: 1339, column: 5)
!8430 = !DILocation(line: 1340, column: 35, scope: !8429)
!8431 = !DILocation(line: 1341, column: 11, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8429, file: !1, line: 1341, column: 11)
!8433 = !DILocation(line: 1341, column: 11, scope: !8429)
!8434 = !DILocation(line: 1342, column: 18, scope: !8432)
!8435 = !DILocation(line: 1342, column: 9, scope: !8432)
!8436 = !DILocation(line: 1343, column: 51, scope: !8429)
!8437 = !DILocation(line: 1343, column: 7, scope: !8429)
!8438 = !DILocation(line: 1344, column: 7, scope: !8429)
!8439 = !DILocation(line: 1349, column: 7, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1349, column: 7)
!8441 = !DILocation(line: 1349, column: 7, scope: !3868)
!8442 = !DILocation(line: 1350, column: 14, scope: !8440)
!8443 = !DILocation(line: 1350, column: 5, scope: !8440)
!8444 = !DILocation(line: 1353, column: 17, scope: !3868)
!8445 = !DILocation(line: 1354, column: 14, scope: !3868)
!8446 = !DILocation(line: 1357, column: 3, scope: !3868)
!8447 = !DILocation(line: 0, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !1, line: 1405, column: 8)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !1, line: 1403, column: 2)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !1, line: 1402, column: 7)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !1, line: 1402, column: 7)
!8452 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1358, column: 5)
!8453 = !DILocation(line: 0, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8449, file: !1, line: 1440, column: 8)
!8455 = !DILocation(line: 1402, column: 7, scope: !8451)
!8456 = !DILocation(line: 0, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !1, line: 1391, column: 8)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !1, line: 1361, column: 2)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !1, line: 1360, column: 7)
!8460 = distinct !DILexicalBlock(scope: !8452, file: !1, line: 1360, column: 7)
!8461 = !DILocation(line: 1360, column: 7, scope: !8460)
!8462 = !DILocation(line: 0, scope: !8460)
!8463 = !DILocation(line: 1360, column: 21, scope: !8459)
!8464 = !DILocation(line: 1363, column: 10, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8458, file: !1, line: 1363, column: 8)
!8466 = !DILocation(line: 1363, column: 8, scope: !8458)
!8467 = !DILocation(line: 1364, column: 14, scope: !8465)
!8468 = !DILocation(line: 1364, column: 12, scope: !8465)
!8469 = !DILocation(line: 1364, column: 6, scope: !8465)
!8470 = !DILocation(line: 1366, column: 6, scope: !8465)
!8471 = !DILocation(line: 1368, column: 9, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8458, file: !1, line: 1368, column: 4)
!8473 = !DILocation(line: 0, scope: !8472)
!8474 = !DILocation(line: 1368, column: 18, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8472, file: !1, line: 1368, column: 4)
!8476 = !DILocation(line: 1368, column: 4, scope: !8472)
!8477 = !DILocation(line: 1370, column: 36, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8475, file: !1, line: 1369, column: 6)
!8479 = !DILocation(line: 1370, column: 13, scope: !8478)
!8480 = !DILocation(line: 1373, column: 7, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8478, file: !1, line: 1371, column: 12)
!8482 = !DILocation(line: 1381, column: 8, scope: !8478)
!8483 = !DILocation(line: 1368, column: 28, scope: !8475)
!8484 = !DILocation(line: 1368, column: 4, scope: !8475)
!8485 = distinct !{!8485, !8476, !8486}
!8486 = !DILocation(line: 1382, column: 6, scope: !8472)
!8487 = !DILocation(line: 1384, column: 46, scope: !8458)
!8488 = !DILocation(line: 1376, column: 18, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8481, file: !1, line: 1375, column: 3)
!8490 = !DILocation(line: 1378, column: 55, scope: !8489)
!8491 = !DILocation(line: 1378, column: 23, scope: !8489)
!8492 = !DILocation(line: 1384, column: 15, scope: !8458)
!8493 = !DILocation(line: 1385, column: 15, scope: !8458)
!8494 = !DILocation(line: 1386, column: 4, scope: !8458)
!8495 = !DILocation(line: 1388, column: 4, scope: !8458)
!8496 = !DILocation(line: 1389, column: 4, scope: !8458)
!8497 = !DILocation(line: 1391, column: 8, scope: !8458)
!8498 = !DILocation(line: 1392, column: 50, scope: !8457)
!8499 = !DILocation(line: 1392, column: 38, scope: !8457)
!8500 = !DILocation(line: 1392, column: 6, scope: !8457)
!8501 = !DILocation(line: 1394, column: 6, scope: !8457)
!8502 = !DILocation(line: 1394, column: 47, scope: !8457)
!8503 = !DILocation(line: 1396, column: 21, scope: !8458)
!8504 = !DILocation(line: 1360, column: 32, scope: !8459)
!8505 = !DILocation(line: 1360, column: 7, scope: !8459)
!8506 = distinct !{!8506, !8461, !8507}
!8507 = !DILocation(line: 1397, column: 2, scope: !8460)
!8508 = !DILocation(line: 0, scope: !8451)
!8509 = !DILocation(line: 1402, column: 21, scope: !8450)
!8510 = !DILocation(line: 1405, column: 10, scope: !8448)
!8511 = !DILocation(line: 1405, column: 8, scope: !8449)
!8512 = !DILocation(line: 1406, column: 14, scope: !8448)
!8513 = !DILocation(line: 1406, column: 12, scope: !8448)
!8514 = !DILocation(line: 1406, column: 6, scope: !8448)
!8515 = !DILocation(line: 1408, column: 6, scope: !8448)
!8516 = !DILocation(line: 1410, column: 9, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8449, file: !1, line: 1410, column: 4)
!8518 = !DILocation(line: 0, scope: !8517)
!8519 = !DILocation(line: 1410, column: 18, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8517, file: !1, line: 1410, column: 4)
!8521 = !DILocation(line: 1410, column: 4, scope: !8517)
!8522 = !DILocation(line: 1412, column: 36, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8520, file: !1, line: 1411, column: 6)
!8524 = !DILocation(line: 1412, column: 13, scope: !8523)
!8525 = !DILocation(line: 1416, column: 9, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !1, line: 1414, column: 3)
!8527 = distinct !DILexicalBlock(scope: !8523, file: !1, line: 1413, column: 12)
!8528 = !DILocation(line: 1418, column: 41, scope: !8526)
!8529 = !DILocation(line: 1418, column: 9, scope: !8526)
!8530 = !DILocation(line: 1429, column: 8, scope: !8523)
!8531 = !DILocation(line: 1430, column: 8, scope: !8523)
!8532 = !DILocation(line: 1410, column: 28, scope: !8520)
!8533 = !DILocation(line: 1410, column: 4, scope: !8520)
!8534 = distinct !{!8534, !8521, !8535}
!8535 = !DILocation(line: 1431, column: 6, scope: !8517)
!8536 = !DILocation(line: 1433, column: 46, scope: !8449)
!8537 = !DILocation(line: 1422, column: 45, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8527, file: !1, line: 1421, column: 3)
!8539 = !DILocation(line: 1422, column: 18, scope: !8538)
!8540 = !DILocation(line: 1424, column: 41, scope: !8538)
!8541 = !DILocation(line: 1424, column: 9, scope: !8538)
!8542 = !DILocation(line: 1426, column: 41, scope: !8538)
!8543 = !DILocation(line: 1426, column: 9, scope: !8538)
!8544 = !DILocation(line: 1433, column: 15, scope: !8449)
!8545 = !DILocation(line: 1434, column: 15, scope: !8449)
!8546 = !DILocation(line: 1435, column: 4, scope: !8449)
!8547 = !DILocation(line: 1437, column: 4, scope: !8449)
!8548 = !DILocation(line: 1438, column: 4, scope: !8449)
!8549 = !DILocation(line: 1440, column: 8, scope: !8449)
!8550 = !DILocation(line: 1441, column: 38, scope: !8454)
!8551 = !DILocation(line: 1441, column: 6, scope: !8454)
!8552 = !DILocation(line: 1443, column: 6, scope: !8454)
!8553 = !DILocation(line: 1443, column: 47, scope: !8454)
!8554 = !DILocation(line: 1445, column: 21, scope: !8449)
!8555 = !DILocation(line: 1402, column: 32, scope: !8450)
!8556 = !DILocation(line: 1402, column: 7, scope: !8450)
!8557 = distinct !{!8557, !8455, !8558}
!8558 = !DILocation(line: 1446, column: 2, scope: !8451)
!8559 = !DILocation(line: 1448, column: 19, scope: !8452)
!8560 = !DILocation(line: 1448, column: 17, scope: !8452)
!8561 = !DILocation(line: 1450, column: 7, scope: !8452)
!8562 = !DILocation(line: 1457, column: 3, scope: !3868)
!8563 = !DILocation(line: 1460, column: 45, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 1460, column: 7)
!8565 = !DILocation(line: 1460, column: 7, scope: !8564)
!8566 = !DILocation(line: 1460, column: 7, scope: !3868)
!8567 = !DILocation(line: 1461, column: 33, scope: !8564)
!8568 = !DILocation(line: 1461, column: 5, scope: !8564)
!8569 = !DILocation(line: 1468, column: 10, scope: !3868)
!8570 = !DILocation(line: 1469, column: 14, scope: !3868)
!8571 = !DILocation(line: 1471, column: 3, scope: !3868)
!8572 = !DILocation(line: 1472, column: 3, scope: !3868)
!8573 = !DILocation(line: 1473, column: 3, scope: !3868)
!8574 = !DILocation(line: 1473, column: 31, scope: !3868)
!8575 = !DILocation(line: 1474, column: 3, scope: !3868)
!8576 = !DILocation(line: 1475, column: 3, scope: !3868)
!8577 = !DILocation(line: 1475, column: 52, scope: !3868)
!8578 = !DILocation(line: 1477, column: 3, scope: !3868)
!8579 = !DILocation(line: 1478, column: 1, scope: !3868)
!8580 = distinct !DISubprogram(name: "vectorizable_store", scope: !1, file: !1, line: 2879, type: !2164, scopeLine: 2881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8581)
!8581 = !{!8582, !8583, !8584, !8585, !8586, !8587, !8588, !8589, !8590, !8591, !8592, !8593, !8594, !8595, !8596, !8597, !8598, !8599, !8600, !8601, !8602, !8603, !8604, !8605, !8606, !8607, !8608, !8609, !8610, !8611, !8612, !8613, !8614, !8615, !8616, !8617, !8618, !8619, !8620, !8621, !8625, !8631}
!8582 = !DILocalVariable(name: "stmt", arg: 1, scope: !8580, file: !1, line: 2879, type: !2167)
!8583 = !DILocalVariable(name: "gsi", arg: 2, scope: !8580, file: !1, line: 2879, type: !3524)
!8584 = !DILocalVariable(name: "vec_stmt", arg: 3, scope: !8580, file: !1, line: 2879, type: !3531)
!8585 = !DILocalVariable(name: "slp_node", arg: 4, scope: !8580, file: !1, line: 2880, type: !3532)
!8586 = !DILocalVariable(name: "scalar_dest", scope: !8580, file: !1, line: 2882, type: !2354)
!8587 = !DILocalVariable(name: "data_ref", scope: !8580, file: !1, line: 2883, type: !2354)
!8588 = !DILocalVariable(name: "op", scope: !8580, file: !1, line: 2884, type: !2354)
!8589 = !DILocalVariable(name: "vec_oprnd", scope: !8580, file: !1, line: 2885, type: !2354)
!8590 = !DILocalVariable(name: "stmt_info", scope: !8580, file: !1, line: 2886, type: !3562)
!8591 = !DILocalVariable(name: "dr", scope: !8580, file: !1, line: 2887, type: !3582)
!8592 = !DILocalVariable(name: "first_dr", scope: !8580, file: !1, line: 2887, type: !3582)
!8593 = !DILocalVariable(name: "vectype", scope: !8580, file: !1, line: 2888, type: !2354)
!8594 = !DILocalVariable(name: "loop_vinfo", scope: !8580, file: !1, line: 2889, type: !3569)
!8595 = !DILocalVariable(name: "loop", scope: !8580, file: !1, line: 2890, type: !2802)
!8596 = !DILocalVariable(name: "vec_mode", scope: !8580, file: !1, line: 2891, type: !3)
!8597 = !DILocalVariable(name: "dummy", scope: !8580, file: !1, line: 2892, type: !2354)
!8598 = !DILocalVariable(name: "alignment_support_scheme", scope: !8580, file: !1, line: 2893, type: !3860)
!8599 = !DILocalVariable(name: "def", scope: !8580, file: !1, line: 2894, type: !2354)
!8600 = !DILocalVariable(name: "def_stmt", scope: !8580, file: !1, line: 2895, type: !2167)
!8601 = !DILocalVariable(name: "dt", scope: !8580, file: !1, line: 2896, type: !411)
!8602 = !DILocalVariable(name: "prev_stmt_info", scope: !8580, file: !1, line: 2897, type: !3562)
!8603 = !DILocalVariable(name: "dataref_ptr", scope: !8580, file: !1, line: 2898, type: !2354)
!8604 = !DILocalVariable(name: "nunits", scope: !8580, file: !1, line: 2899, type: !2256)
!8605 = !DILocalVariable(name: "ncopies", scope: !8580, file: !1, line: 2900, type: !2256)
!8606 = !DILocalVariable(name: "j", scope: !8580, file: !1, line: 2901, type: !2256)
!8607 = !DILocalVariable(name: "next_stmt", scope: !8580, file: !1, line: 2902, type: !2167)
!8608 = !DILocalVariable(name: "first_stmt", scope: !8580, file: !1, line: 2902, type: !2167)
!8609 = !DILocalVariable(name: "strided_store", scope: !8580, file: !1, line: 2903, type: !2166)
!8610 = !DILocalVariable(name: "group_size", scope: !8580, file: !1, line: 2904, type: !5)
!8611 = !DILocalVariable(name: "i", scope: !8580, file: !1, line: 2904, type: !5)
!8612 = !DILocalVariable(name: "dr_chain", scope: !8580, file: !1, line: 2905, type: !3603)
!8613 = !DILocalVariable(name: "oprnds", scope: !8580, file: !1, line: 2905, type: !3603)
!8614 = !DILocalVariable(name: "result_chain", scope: !8580, file: !1, line: 2905, type: !3603)
!8615 = !DILocalVariable(name: "inv_p", scope: !8580, file: !1, line: 2906, type: !2166)
!8616 = !DILocalVariable(name: "vec_oprnds", scope: !8580, file: !1, line: 2907, type: !3603)
!8617 = !DILocalVariable(name: "slp", scope: !8580, file: !1, line: 2908, type: !2166)
!8618 = !DILocalVariable(name: "vec_num", scope: !8580, file: !1, line: 2909, type: !5)
!8619 = !DILocalVariable(name: "bb_vinfo", scope: !8580, file: !1, line: 2910, type: !3818)
!8620 = !DILocalVariable(name: "ptr_incr", scope: !8580, file: !1, line: 3103, type: !2167)
!8621 = !DILocalVariable(name: "new_stmt", scope: !8622, file: !1, line: 3107, type: !2167)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !1, line: 3106, column: 5)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !1, line: 3105, column: 3)
!8624 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 3105, column: 3)
!8625 = !DILocalVariable(name: "mis", scope: !8626, file: !1, line: 3208, type: !2256)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !1, line: 3207, column: 11)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !1, line: 3204, column: 15)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !1, line: 3191, column: 2)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !1, line: 3190, column: 7)
!8630 = distinct !DILexicalBlock(scope: !8622, file: !1, line: 3190, column: 7)
!8631 = !DILocalVariable(name: "tmis", scope: !8626, file: !1, line: 3209, type: !2354)
!8632 = !DILocation(line: 0, scope: !8580)
!8633 = !DILocation(line: 2886, column: 29, scope: !8580)
!8634 = !DILocation(line: 2887, column: 31, scope: !8580)
!8635 = !DILocation(line: 2888, column: 18, scope: !8580)
!8636 = !DILocation(line: 2889, column: 30, scope: !8580)
!8637 = !DILocation(line: 2892, column: 3, scope: !8580)
!8638 = !DILocation(line: 2894, column: 3, scope: !8580)
!8639 = !DILocation(line: 2895, column: 3, scope: !8580)
!8640 = !DILocation(line: 2896, column: 3, scope: !8580)
!8641 = !DILocation(line: 2899, column: 16, scope: !8580)
!8642 = !DILocation(line: 2905, column: 3, scope: !8580)
!8643 = !DILocation(line: 2905, column: 19, scope: !8580)
!8644 = !DILocation(line: 2905, column: 37, scope: !8580)
!8645 = !DILocation(line: 2905, column: 53, scope: !8580)
!8646 = !DILocation(line: 2906, column: 3, scope: !8580)
!8647 = !DILocation(line: 2907, column: 3, scope: !8580)
!8648 = !DILocation(line: 2907, column: 19, scope: !8580)
!8649 = !DILocation(line: 2908, column: 24, scope: !8580)
!8650 = !DILocation(line: 2910, column: 26, scope: !8580)
!8651 = !DILocation(line: 2912, column: 7, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2912, column: 7)
!8653 = !DILocation(line: 2912, column: 7, scope: !8580)
!8654 = !DILocation(line: 2913, column: 12, scope: !8652)
!8655 = !DILocation(line: 2913, column: 5, scope: !8652)
!8656 = !DILocation(line: 2918, column: 7, scope: !8580)
!8657 = !DILocation(line: 2921, column: 15, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2918, column: 7)
!8659 = !DILocation(line: 2921, column: 51, scope: !8658)
!8660 = !DILocation(line: 0, scope: !8658)
!8661 = !DILocation(line: 2923, column: 3, scope: !8580)
!8662 = !DILocation(line: 2926, column: 7, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2926, column: 7)
!8664 = !DILocation(line: 2926, column: 12, scope: !8663)
!8665 = !DILocation(line: 2926, column: 15, scope: !8663)
!8666 = !DILocation(line: 2926, column: 61, scope: !8663)
!8667 = !DILocation(line: 2926, column: 50, scope: !8663)
!8668 = !DILocation(line: 2928, column: 11, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !1, line: 2928, column: 11)
!8670 = distinct !DILexicalBlock(scope: !8663, file: !1, line: 2927, column: 5)
!8671 = !DILocation(line: 2928, column: 11, scope: !8670)
!8672 = !DILocation(line: 2929, column: 18, scope: !8669)
!8673 = !DILocation(line: 2929, column: 9, scope: !8669)
!8674 = !DILocation(line: 2933, column: 8, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2933, column: 7)
!8676 = !DILocation(line: 2933, column: 46, scope: !8675)
!8677 = !DILocation(line: 2933, column: 42, scope: !8675)
!8678 = !DILocation(line: 2936, column: 7, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2936, column: 7)
!8680 = !DILocation(line: 2936, column: 39, scope: !8679)
!8681 = !DILocation(line: 2936, column: 7, scope: !8580)
!8682 = !DILocation(line: 2941, column: 8, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2941, column: 7)
!8684 = !DILocation(line: 2941, column: 7, scope: !8580)
!8685 = !DILocation(line: 2944, column: 17, scope: !8580)
!8686 = !DILocation(line: 2945, column: 7, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2945, column: 7)
!8688 = !DILocation(line: 2945, column: 31, scope: !8687)
!8689 = !DILocation(line: 2946, column: 7, scope: !8687)
!8690 = !DILocation(line: 2946, column: 34, scope: !8687)
!8691 = !DILocation(line: 2947, column: 7, scope: !8687)
!8692 = !DILocation(line: 2947, column: 34, scope: !8687)
!8693 = !DILocation(line: 2948, column: 7, scope: !8687)
!8694 = !DILocation(line: 2948, column: 34, scope: !8687)
!8695 = !DILocation(line: 2949, column: 7, scope: !8687)
!8696 = !DILocation(line: 2949, column: 34, scope: !8687)
!8697 = !DILocation(line: 2945, column: 7, scope: !8580)
!8698 = !DILocation(line: 2952, column: 3, scope: !8580)
!8699 = !DILocation(line: 2953, column: 8, scope: !8580)
!8700 = !DILocation(line: 2954, column: 8, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2954, column: 7)
!8702 = !DILocation(line: 2954, column: 7, scope: !8580)
!8703 = !DILocation(line: 2956, column: 11, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !1, line: 2956, column: 11)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !1, line: 2955, column: 5)
!8706 = !DILocation(line: 2956, column: 11, scope: !8705)
!8707 = !DILocation(line: 2957, column: 18, scope: !8704)
!8708 = !DILocation(line: 2957, column: 9, scope: !8704)
!8709 = !DILocation(line: 2963, column: 35, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2963, column: 7)
!8711 = !DILocation(line: 2963, column: 56, scope: !8710)
!8712 = !DILocation(line: 2963, column: 8, scope: !8710)
!8713 = !DILocation(line: 2963, column: 7, scope: !8580)
!8714 = !DILocation(line: 2965, column: 11, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !1, line: 2965, column: 11)
!8716 = distinct !DILexicalBlock(scope: !8710, file: !1, line: 2964, column: 5)
!8717 = !DILocation(line: 2965, column: 11, scope: !8716)
!8718 = !DILocation(line: 2966, column: 18, scope: !8715)
!8719 = !DILocation(line: 2966, column: 9, scope: !8715)
!8720 = !DILocation(line: 2970, column: 14, scope: !8580)
!8721 = !DILocation(line: 2973, column: 7, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2973, column: 7)
!8723 = !DILocation(line: 2973, column: 49, scope: !8722)
!8724 = !DILocation(line: 2973, column: 59, scope: !8722)
!8725 = !DILocation(line: 2973, column: 7, scope: !8580)
!8726 = !DILocation(line: 2976, column: 8, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2976, column: 7)
!8728 = !DILocation(line: 2976, column: 7, scope: !8580)
!8729 = !DILocation(line: 2979, column: 7, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2979, column: 7)
!8731 = !DILocation(line: 2979, column: 7, scope: !8580)
!8732 = !DILocation(line: 2983, column: 12, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !1, line: 2983, column: 11)
!8734 = distinct !DILexicalBlock(scope: !8730, file: !1, line: 2980, column: 5)
!8735 = !DILocation(line: 2984, column: 4, scope: !8733)
!8736 = !DILocation(line: 2984, column: 8, scope: !8733)
!8737 = !DILocation(line: 2984, column: 34, scope: !8733)
!8738 = !DILocation(line: 2987, column: 22, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8734, file: !1, line: 2987, column: 11)
!8740 = !DILocation(line: 2987, column: 11, scope: !8734)
!8741 = !DILocation(line: 2992, column: 11, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8739, file: !1, line: 2988, column: 2)
!8743 = !DILocation(line: 0, scope: !8742)
!8744 = !DILocation(line: 2994, column: 8, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8742, file: !1, line: 2993, column: 13)
!8746 = !DILocation(line: 2995, column: 13, scope: !8745)
!8747 = !DILocation(line: 2996, column: 20, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8745, file: !1, line: 2996, column: 19)
!8749 = !DILocation(line: 2996, column: 19, scope: !8745)
!8750 = !DILocation(line: 2999, column: 23, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !1, line: 2999, column: 23)
!8752 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 2998, column: 17)
!8753 = !DILocation(line: 2999, column: 23, scope: !8752)
!8754 = !DILocation(line: 3000, column: 30, scope: !8751)
!8755 = !DILocation(line: 3000, column: 21, scope: !8751)
!8756 = !DILocation(line: 3003, column: 27, scope: !8745)
!8757 = distinct !{!8757, !8741, !8758}
!8758 = !DILocation(line: 3004, column: 13, scope: !8742)
!8759 = !DILocation(line: 3008, column: 8, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 3008, column: 7)
!8761 = !DILocation(line: 3008, column: 7, scope: !8580)
!8762 = !DILocation(line: 3010, column: 7, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8760, file: !1, line: 3009, column: 5)
!8764 = !DILocation(line: 3010, column: 35, scope: !8763)
!8765 = !DILocation(line: 3011, column: 50, scope: !8763)
!8766 = !DILocation(line: 3011, column: 7, scope: !8763)
!8767 = !DILocation(line: 3012, column: 7, scope: !8763)
!8768 = !DILocation(line: 3017, column: 7, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 3017, column: 7)
!8770 = !DILocation(line: 3017, column: 7, scope: !8580)
!8771 = !DILocation(line: 3019, column: 18, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8769, file: !1, line: 3018, column: 5)
!8773 = !DILocation(line: 3020, column: 20, scope: !8772)
!8774 = !DILocation(line: 3022, column: 7, scope: !8772)
!8775 = !DILocation(line: 3022, column: 57, scope: !8772)
!8776 = !DILocation(line: 3025, column: 7, scope: !8772)
!8777 = !DILocation(line: 3029, column: 11, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8772, file: !1, line: 3029, column: 11)
!8779 = !DILocation(line: 3030, column: 6, scope: !8778)
!8780 = !DILocation(line: 3030, column: 4, scope: !8778)
!8781 = !DILocation(line: 3031, column: 4, scope: !8778)
!8782 = !DILocation(line: 3033, column: 14, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8778, file: !1, line: 3032, column: 2)
!8784 = !DILocation(line: 3034, column: 4, scope: !8783)
!8785 = !DILocation(line: 3037, column: 11, scope: !8772)
!8786 = !DILocation(line: 3041, column: 11, scope: !8772)
!8787 = !DILocation(line: 3042, column: 12, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8772, file: !1, line: 3041, column: 11)
!8789 = !DILocation(line: 3042, column: 2, scope: !8788)
!8790 = !DILocation(line: 0, scope: !8769)
!8791 = !DILocation(line: 3053, column: 7, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 3053, column: 7)
!8793 = !DILocation(line: 3053, column: 7, scope: !8580)
!8794 = !DILocation(line: 3054, column: 14, scope: !8792)
!8795 = !DILocation(line: 3054, column: 5, scope: !8792)
!8796 = !DILocation(line: 3056, column: 14, scope: !8580)
!8797 = !DILocation(line: 3056, column: 12, scope: !8580)
!8798 = !DILocation(line: 3057, column: 12, scope: !8580)
!8799 = !DILocation(line: 3057, column: 10, scope: !8580)
!8800 = !DILocation(line: 3059, column: 30, scope: !8580)
!8801 = !DILocation(line: 3060, column: 3, scope: !8580)
!8802 = !DILocation(line: 3103, column: 3, scope: !8580)
!8803 = !DILocation(line: 0, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !1, line: 3113, column: 2)
!8805 = distinct !DILexicalBlock(scope: !8622, file: !1, line: 3112, column: 11)
!8806 = !DILocation(line: 0, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8622, file: !1, line: 3180, column: 11)
!8808 = !DILocation(line: 0, scope: !8626)
!8809 = !DILocation(line: 0, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8628, file: !1, line: 3227, column: 15)
!8811 = !DILocation(line: 3105, column: 8, scope: !8624)
!8812 = !DILocation(line: 0, scope: !8624)
!8813 = !DILocation(line: 3105, column: 17, scope: !8623)
!8814 = !DILocation(line: 3105, column: 3, scope: !8624)
!8815 = !DILocation(line: 3112, column: 13, scope: !8805)
!8816 = !DILocation(line: 3112, column: 11, scope: !8622)
!8817 = !DILocation(line: 3167, column: 4, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !1, line: 3167, column: 4)
!8819 = distinct !DILexicalBlock(scope: !8805, file: !1, line: 3159, column: 2)
!8820 = !DILocation(line: 3114, column: 15, scope: !8804)
!8821 = !DILocation(line: 3131, column: 8, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !1, line: 3131, column: 8)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !1, line: 3122, column: 13)
!8824 = distinct !DILexicalBlock(scope: !8804, file: !1, line: 3114, column: 15)
!8825 = !DILocation(line: 3117, column: 15, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8824, file: !1, line: 3115, column: 13)
!8827 = !DILocation(line: 3119, column: 27, scope: !8826)
!8828 = !DILocation(line: 3120, column: 13, scope: !8826)
!8829 = !DILocation(line: 0, scope: !8823)
!8830 = !DILocation(line: 0, scope: !8822)
!8831 = !DILocation(line: 3131, column: 22, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8822, file: !1, line: 3131, column: 8)
!8833 = !DILocation(line: 3138, column: 5, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8832, file: !1, line: 3132, column: 3)
!8835 = !DILocation(line: 3140, column: 10, scope: !8834)
!8836 = !DILocation(line: 3142, column: 17, scope: !8834)
!8837 = !DILocation(line: 3144, column: 5, scope: !8834)
!8838 = !DILocation(line: 3145, column: 5, scope: !8834)
!8839 = !DILocation(line: 3146, column: 17, scope: !8834)
!8840 = !DILocation(line: 3131, column: 37, scope: !8832)
!8841 = !DILocation(line: 3131, column: 8, scope: !8832)
!8842 = distinct !{!8842, !8821, !8843}
!8843 = !DILocation(line: 3147, column: 3, scope: !8822)
!8844 = !DILocation(line: 3151, column: 4, scope: !8804)
!8845 = !DILocation(line: 3153, column: 18, scope: !8804)
!8846 = !DILocation(line: 3156, column: 4, scope: !8804)
!8847 = !DILocation(line: 0, scope: !8818)
!8848 = !DILocation(line: 3167, column: 18, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8818, file: !1, line: 3167, column: 4)
!8850 = !DILocation(line: 3169, column: 13, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8849, file: !1, line: 3168, column: 6)
!8852 = !DILocation(line: 3170, column: 8, scope: !8851)
!8853 = !DILocation(line: 3172, column: 52, scope: !8851)
!8854 = !DILocation(line: 3172, column: 20, scope: !8851)
!8855 = !DILocation(line: 3173, column: 8, scope: !8851)
!8856 = !DILocation(line: 3174, column: 8, scope: !8851)
!8857 = !DILocation(line: 3167, column: 33, scope: !8849)
!8858 = !DILocation(line: 3167, column: 4, scope: !8849)
!8859 = distinct !{!8859, !8817, !8860}
!8860 = !DILocation(line: 3175, column: 6, scope: !8818)
!8861 = !DILocation(line: 3177, column: 33, scope: !8819)
!8862 = !DILocation(line: 3177, column: 3, scope: !8819)
!8863 = !DILocation(line: 0, scope: !8805)
!8864 = !DILocation(line: 3180, column: 11, scope: !8622)
!8865 = !DILocation(line: 3182, column: 19, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8807, file: !1, line: 3181, column: 2)
!8867 = !DILocation(line: 3182, column: 17, scope: !8866)
!8868 = !DILocation(line: 3184, column: 35, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8866, file: !1, line: 3184, column: 8)
!8870 = !DILocation(line: 3184, column: 9, scope: !8869)
!8871 = !DILocation(line: 3184, column: 8, scope: !8866)
!8872 = !DILocation(line: 3190, column: 12, scope: !8630)
!8873 = !DILocation(line: 0, scope: !8622)
!8874 = !DILocation(line: 0, scope: !8630)
!8875 = !DILocation(line: 3190, column: 21, scope: !8629)
!8876 = !DILocation(line: 3190, column: 7, scope: !8630)
!8877 = !DILocation(line: 3192, column: 10, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8628, file: !1, line: 3192, column: 8)
!8879 = !DILocation(line: 3192, column: 8, scope: !8628)
!8880 = !DILocation(line: 3194, column: 50, scope: !8878)
!8881 = !DILocation(line: 3194, column: 20, scope: !8878)
!8882 = !DILocation(line: 3194, column: 6, scope: !8878)
!8883 = !DILocation(line: 3198, column: 18, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8628, file: !1, line: 3197, column: 8)
!8885 = !DILocation(line: 3204, column: 15, scope: !8627)
!8886 = !DILocation(line: 3204, column: 15, scope: !8628)
!8887 = !DILocation(line: 3205, column: 24, scope: !8627)
!8888 = !DILocation(line: 3205, column: 13, scope: !8627)
!8889 = !DILocation(line: 3208, column: 23, scope: !8626)
!8890 = !DILocation(line: 3209, column: 30, scope: !8626)
!8891 = !DILocation(line: 3209, column: 26, scope: !8626)
!8892 = !DILocation(line: 3209, column: 55, scope: !8626)
!8893 = !DILocation(line: 3209, column: 38, scope: !8626)
!8894 = !DILocation(line: 3210, column: 20, scope: !8626)
!8895 = !DILocation(line: 3211, column: 24, scope: !8626)
!8896 = !DILocation(line: 0, scope: !8627)
!8897 = !DILocation(line: 3216, column: 4, scope: !8628)
!8898 = !DILocation(line: 3220, column: 15, scope: !8628)
!8899 = !DILocation(line: 3221, column: 4, scope: !8628)
!8900 = !DILocation(line: 3222, column: 4, scope: !8628)
!8901 = !DILocation(line: 3190, column: 33, scope: !8629)
!8902 = !DILocation(line: 3190, column: 7, scope: !8629)
!8903 = distinct !{!8903, !8876, !8904}
!8904 = !DILocation(line: 3236, column: 2, scope: !8630)
!8905 = !DILocation(line: 3101, column: 18, scope: !8580)
!8906 = !DILocation(line: 3189, column: 17, scope: !8622)
!8907 = !DILocation(line: 3199, column: 13, scope: !8884)
!8908 = !DILocation(line: 3202, column: 18, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8884, file: !1, line: 3199, column: 13)
!8910 = !DILocation(line: 3202, column: 6, scope: !8909)
!8911 = !DILocation(line: 0, scope: !8884)
!8912 = !DILocation(line: 3227, column: 15, scope: !8628)
!8913 = !DILocation(line: 3228, column: 57, scope: !8810)
!8914 = !DILocation(line: 3228, column: 45, scope: !8810)
!8915 = !DILocation(line: 3228, column: 13, scope: !8810)
!8916 = !DILocation(line: 3230, column: 6, scope: !8810)
!8917 = !DILocation(line: 3230, column: 47, scope: !8810)
!8918 = !DILocation(line: 3232, column: 21, scope: !8628)
!8919 = !DILocation(line: 3233, column: 16, scope: !8628)
!8920 = !DILocation(line: 3234, column: 9, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8628, file: !1, line: 3234, column: 8)
!8922 = !DILocation(line: 3234, column: 8, scope: !8628)
!8923 = !DILocation(line: 3105, column: 29, scope: !8623)
!8924 = !DILocation(line: 3105, column: 3, scope: !8623)
!8925 = distinct !{!8925, !8814, !8926}
!8926 = !DILocation(line: 3237, column: 5, scope: !8624)
!8927 = !DILocation(line: 3239, column: 3, scope: !8580)
!8928 = !DILocation(line: 3240, column: 3, scope: !8580)
!8929 = !DILocation(line: 3241, column: 7, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 3241, column: 7)
!8931 = !DILocation(line: 3241, column: 7, scope: !8580)
!8932 = !DILocation(line: 3242, column: 5, scope: !8930)
!8933 = !DILocation(line: 3245, column: 1, scope: !8580)
!8934 = distinct !DISubprogram(name: "vect_transform_stmt", scope: !1, file: !1, line: 4136, type: !8935, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !8937)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!2166, !2167, !3524, !3903, !3532, !3736}
!8937 = !{!8938, !8939, !8940, !8941, !8942, !8943, !8944, !8945, !8946, !8947, !8948, !8951, !8952, !8953, !8954, !8955}
!8938 = !DILocalVariable(name: "stmt", arg: 1, scope: !8934, file: !1, line: 4136, type: !2167)
!8939 = !DILocalVariable(name: "gsi", arg: 2, scope: !8934, file: !1, line: 4136, type: !3524)
!8940 = !DILocalVariable(name: "strided_store", arg: 3, scope: !8934, file: !1, line: 4137, type: !3903)
!8941 = !DILocalVariable(name: "slp_node", arg: 4, scope: !8934, file: !1, line: 4137, type: !3532)
!8942 = !DILocalVariable(name: "slp_node_instance", arg: 5, scope: !8934, file: !1, line: 4138, type: !3736)
!8943 = !DILocalVariable(name: "is_store", scope: !8934, file: !1, line: 4140, type: !2166)
!8944 = !DILocalVariable(name: "vec_stmt", scope: !8934, file: !1, line: 4141, type: !2167)
!8945 = !DILocalVariable(name: "stmt_info", scope: !8934, file: !1, line: 4142, type: !3562)
!8946 = !DILocalVariable(name: "orig_stmt_in_pattern", scope: !8934, file: !1, line: 4143, type: !2167)
!8947 = !DILocalVariable(name: "done", scope: !8934, file: !1, line: 4144, type: !2166)
!8948 = !DILocalVariable(name: "innerloop", scope: !8949, file: !1, line: 4239, type: !2802)
!8949 = distinct !DILexicalBlock(scope: !8950, file: !1, line: 4238, column: 5)
!8950 = distinct !DILexicalBlock(scope: !8934, file: !1, line: 4230, column: 7)
!8951 = !DILocalVariable(name: "imm_iter", scope: !8949, file: !1, line: 4241, type: !4619)
!8952 = !DILocalVariable(name: "use_p", scope: !8949, file: !1, line: 4242, type: !3907)
!8953 = !DILocalVariable(name: "scalar_dest", scope: !8949, file: !1, line: 4243, type: !2354)
!8954 = !DILocalVariable(name: "exit_phi", scope: !8949, file: !1, line: 4244, type: !2167)
!8955 = !DILocalVariable(name: "stmt_vinfo", scope: !8956, file: !1, line: 4282, type: !3562)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !1, line: 4281, column: 2)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !1, line: 4280, column: 11)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !1, line: 4277, column: 5)
!8959 = distinct !DILexicalBlock(scope: !8934, file: !1, line: 4276, column: 7)
!8960 = !DILocation(line: 0, scope: !8934)
!8961 = !DILocation(line: 4141, column: 3, scope: !8934)
!8962 = !DILocation(line: 4141, column: 10, scope: !8934)
!8963 = !DILocation(line: 4142, column: 29, scope: !8934)
!8964 = !DILocation(line: 4146, column: 11, scope: !8934)
!8965 = !DILocation(line: 4146, column: 3, scope: !8934)
!8966 = !DILocation(line: 4149, column: 14, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8934, file: !1, line: 4147, column: 5)
!8968 = !DILocation(line: 4150, column: 7, scope: !8967)
!8969 = !DILocation(line: 4154, column: 14, scope: !8967)
!8970 = !DILocation(line: 4155, column: 7, scope: !8967)
!8971 = !DILocation(line: 4159, column: 14, scope: !8967)
!8972 = !DILocation(line: 4160, column: 7, scope: !8967)
!8973 = !DILocation(line: 4164, column: 7, scope: !8967)
!8974 = !DILocation(line: 4165, column: 14, scope: !8967)
!8975 = !DILocation(line: 4166, column: 7, scope: !8967)
!8976 = !DILocation(line: 4170, column: 14, scope: !8967)
!8977 = !DILocation(line: 4171, column: 7, scope: !8967)
!8978 = !DILocation(line: 4175, column: 14, scope: !8967)
!8979 = !DILocation(line: 4176, column: 7, scope: !8967)
!8980 = !DILocation(line: 4180, column: 14, scope: !8967)
!8981 = !DILocation(line: 4182, column: 7, scope: !8967)
!8982 = !DILocation(line: 4186, column: 14, scope: !8967)
!8983 = !DILocation(line: 4187, column: 7, scope: !8967)
!8984 = !DILocation(line: 4188, column: 11, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8967, file: !1, line: 4188, column: 11)
!8986 = !DILocation(line: 4188, column: 53, scope: !8985)
!8987 = !DILocation(line: 4188, column: 49, scope: !8985)
!8988 = !DILocation(line: 4194, column: 19, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !1, line: 4189, column: 2)
!8990 = !DILocation(line: 4195, column: 8, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8989, file: !1, line: 4195, column: 8)
!8992 = !DILocation(line: 4195, column: 8, scope: !8989)
!8993 = !DILocation(line: 4197, column: 4, scope: !8989)
!8994 = !DILocation(line: 4203, column: 7, scope: !8967)
!8995 = !DILocation(line: 4204, column: 14, scope: !8967)
!8996 = !DILocation(line: 4205, column: 7, scope: !8967)
!8997 = !DILocation(line: 4209, column: 7, scope: !8967)
!8998 = !DILocation(line: 4210, column: 14, scope: !8967)
!8999 = !DILocation(line: 4211, column: 7, scope: !8967)
!9000 = !DILocation(line: 4214, column: 7, scope: !8967)
!9001 = !DILocation(line: 4215, column: 14, scope: !8967)
!9002 = !DILocation(line: 4216, column: 7, scope: !8967)
!9003 = !DILocation(line: 4220, column: 12, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8967, file: !1, line: 4220, column: 11)
!9005 = !DILocation(line: 4220, column: 11, scope: !8967)
!9006 = !DILocation(line: 4222, column: 8, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !1, line: 4222, column: 8)
!9008 = distinct !DILexicalBlock(scope: !9004, file: !1, line: 4221, column: 2)
!9009 = !DILocation(line: 4222, column: 8, scope: !9008)
!9010 = !DILocation(line: 4223, column: 15, scope: !9007)
!9011 = !DILocation(line: 4223, column: 6, scope: !9007)
!9012 = !DILocation(line: 4224, column: 4, scope: !9008)
!9013 = !DILocation(line: 4225, column: 2, scope: !9008)
!9014 = !DILocation(line: 4230, column: 7, scope: !8950)
!9015 = !DILocation(line: 4231, column: 7, scope: !8950)
!9016 = !DILocation(line: 4231, column: 10, scope: !8950)
!9017 = !DILocation(line: 4232, column: 7, scope: !8950)
!9018 = !DILocation(line: 4232, column: 33, scope: !8950)
!9019 = !DILocation(line: 4232, column: 10, scope: !8950)
!9020 = !DILocation(line: 4234, column: 7, scope: !8950)
!9021 = !DILocation(line: 4234, column: 10, scope: !8950)
!9022 = !DILocation(line: 4234, column: 38, scope: !8950)
!9023 = !DILocation(line: 4235, column: 7, scope: !8950)
!9024 = !DILocation(line: 4235, column: 11, scope: !8950)
!9025 = !DILocation(line: 4235, column: 43, scope: !8950)
!9026 = !DILocation(line: 4236, column: 11, scope: !8950)
!9027 = !DILocation(line: 4236, column: 46, scope: !8950)
!9028 = !DILocation(line: 4230, column: 7, scope: !8934)
!9029 = !DILocation(line: 4239, column: 32, scope: !8949)
!9030 = !DILocation(line: 4240, column: 69, scope: !8949)
!9031 = !DILocation(line: 0, scope: !8949)
!9032 = !DILocation(line: 4241, column: 7, scope: !8949)
!9033 = !DILocation(line: 4246, column: 11, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8949, file: !1, line: 4246, column: 11)
!9035 = !DILocation(line: 4246, column: 11, scope: !8949)
!9036 = !DILocation(line: 4247, column: 18, scope: !9034)
!9037 = !DILocation(line: 4247, column: 9, scope: !9034)
!9038 = !DILocation(line: 4252, column: 11, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8949, file: !1, line: 4252, column: 11)
!9040 = !DILocation(line: 4252, column: 30, scope: !9039)
!9041 = !DILocation(line: 4252, column: 11, scope: !8949)
!9042 = !DILocation(line: 4253, column: 23, scope: !9039)
!9043 = !DILocation(line: 4253, column: 9, scope: !9039)
!9044 = !DILocation(line: 4255, column: 23, scope: !9039)
!9045 = !DILocation(line: 0, scope: !9039)
!9046 = !DILocation(line: 4257, column: 7, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !8949, file: !1, line: 4257, column: 7)
!9048 = !DILocation(line: 0, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !1, line: 4260, column: 12)
!9050 = distinct !DILexicalBlock(scope: !9051, file: !1, line: 4259, column: 14)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !1, line: 4258, column: 8)
!9052 = distinct !DILexicalBlock(scope: !9047, file: !1, line: 4257, column: 7)
!9053 = !DILocation(line: 0, scope: !9047)
!9054 = !DILocation(line: 4257, column: 7, scope: !9052)
!9055 = !DILocation(line: 4259, column: 60, scope: !9050)
!9056 = !DILocation(line: 4259, column: 49, scope: !9050)
!9057 = !DILocation(line: 4259, column: 15, scope: !9050)
!9058 = !DILocation(line: 4259, column: 14, scope: !9051)
!9059 = !DILocation(line: 4261, column: 25, scope: !9049)
!9060 = !DILocation(line: 4262, column: 64, scope: !9049)
!9061 = !DILocation(line: 4262, column: 14, scope: !9049)
!9062 = !DILocation(line: 4262, column: 62, scope: !9049)
!9063 = !DILocation(line: 4263, column: 12, scope: !9049)
!9064 = distinct !{!9064, !9046, !9065}
!9065 = !DILocation(line: 4264, column: 8, scope: !9047)
!9066 = !DILocation(line: 4265, column: 5, scope: !8950)
!9067 = !DILocation(line: 4265, column: 5, scope: !8949)
!9068 = !DILocation(line: 4269, column: 7, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !8934, file: !1, line: 4269, column: 7)
!9070 = !DILocation(line: 4270, column: 7, scope: !9069)
!9071 = !DILocation(line: 4270, column: 10, scope: !9069)
!9072 = !DILocation(line: 4270, column: 38, scope: !9069)
!9073 = !DILocation(line: 4269, column: 7, scope: !8934)
!9074 = !DILocation(line: 4272, column: 14, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9069, file: !1, line: 4271, column: 5)
!9076 = !DILocation(line: 4273, column: 7, scope: !9075)
!9077 = !DILocation(line: 4276, column: 7, scope: !8959)
!9078 = !DILocation(line: 4276, column: 7, scope: !8934)
!9079 = !DILocation(line: 4278, column: 41, scope: !8958)
!9080 = !DILocation(line: 4278, column: 7, scope: !8958)
!9081 = !DILocation(line: 4278, column: 39, scope: !8958)
!9082 = !DILocation(line: 4279, column: 30, scope: !8958)
!9083 = !DILocation(line: 4280, column: 11, scope: !8957)
!9084 = !DILocation(line: 4280, column: 11, scope: !8958)
!9085 = !DILocation(line: 4282, column: 31, scope: !8956)
!9086 = !DILocation(line: 0, scope: !8956)
!9087 = !DILocation(line: 4288, column: 8, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !8956, file: !1, line: 4288, column: 8)
!9089 = !DILocation(line: 4288, column: 8, scope: !8956)
!9090 = !DILocation(line: 4290, column: 8, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9088, file: !1, line: 4289, column: 6)
!9092 = !DILocation(line: 4291, column: 43, scope: !9091)
!9093 = !DILocation(line: 4291, column: 8, scope: !9091)
!9094 = !DILocation(line: 4291, column: 41, scope: !9091)
!9095 = !DILocation(line: 4292, column: 6, scope: !9091)
!9096 = !DILocation(line: 4297, column: 1, scope: !8934)
!9097 = !DILocation(line: 4296, column: 3, scope: !8934)
!9098 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !4841, file: !4841, line: 292, type: !9099, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9102)
!9099 = !DISubroutineType(types: !9100)
!9100 = !{!3907, !9101, !2354}
!9101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!9102 = !{!9103, !9104}
!9103 = !DILocalVariable(name: "imm", arg: 1, scope: !9098, file: !4841, line: 292, type: !9101)
!9104 = !DILocalVariable(name: "var", arg: 2, scope: !9098, file: !4841, line: 292, type: !2354)
!9105 = !DILocation(line: 0, scope: !9098)
!9106 = !DILocation(line: 294, column: 18, scope: !9098)
!9107 = !DILocation(line: 294, column: 8, scope: !9098)
!9108 = !DILocation(line: 294, column: 14, scope: !9098)
!9109 = !DILocation(line: 295, column: 30, scope: !9098)
!9110 = !DILocation(line: 295, column: 16, scope: !9098)
!9111 = !DILocation(line: 299, column: 7, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9098, file: !4841, line: 299, column: 7)
!9113 = !DILocation(line: 299, column: 7, scope: !9098)
!9114 = !DILocation(line: 301, column: 15, scope: !9098)
!9115 = !DILocation(line: 301, column: 3, scope: !9098)
!9116 = !DILocation(line: 302, column: 1, scope: !9098)
!9117 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !4841, file: !4841, line: 285, type: !9118, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9122)
!9118 = !DISubroutineType(types: !9119)
!9119 = !{!2166, !9120}
!9120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9121, size: 64)
!9121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4619)
!9122 = !{!9123}
!9123 = !DILocalVariable(name: "imm", arg: 1, scope: !9117, file: !4841, line: 285, type: !9120)
!9124 = !DILocation(line: 0, scope: !9117)
!9125 = !DILocation(line: 287, column: 16, scope: !9117)
!9126 = !DILocation(line: 287, column: 32, scope: !9117)
!9127 = !DILocation(line: 287, column: 24, scope: !9117)
!9128 = !DILocation(line: 287, column: 10, scope: !9117)
!9129 = !DILocation(line: 287, column: 3, scope: !9117)
!9130 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !4841, file: !4841, line: 306, type: !9131, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!3907, !9101}
!9133 = !{!9134, !9135}
!9134 = !DILocalVariable(name: "imm", arg: 1, scope: !9130, file: !4841, line: 306, type: !9101)
!9135 = !DILocalVariable(name: "old", scope: !9130, file: !4841, line: 308, type: !3907)
!9136 = !DILocation(line: 0, scope: !9130)
!9137 = !DILocation(line: 308, column: 28, scope: !9130)
!9138 = !DILocation(line: 319, column: 23, scope: !9130)
!9139 = !DILocation(line: 319, column: 16, scope: !9130)
!9140 = !DILocation(line: 320, column: 7, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9130, file: !4841, line: 320, column: 7)
!9142 = !DILocation(line: 320, column: 7, scope: !9130)
!9143 = !DILocation(line: 322, column: 15, scope: !9130)
!9144 = !DILocation(line: 322, column: 3, scope: !9130)
!9145 = !DILocation(line: 323, column: 1, scope: !9130)
!9146 = distinct !DISubprogram(name: "vect_remove_stores", scope: !1, file: !1, line: 4304, type: !9147, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9149)
!9147 = !DISubroutineType(types: !9148)
!9148 = !{null, !2167}
!9149 = !{!9150, !9151, !9152, !9153}
!9150 = !DILocalVariable(name: "first_stmt", arg: 1, scope: !9146, file: !1, line: 4304, type: !2167)
!9151 = !DILocalVariable(name: "next", scope: !9146, file: !1, line: 4306, type: !2167)
!9152 = !DILocalVariable(name: "tmp", scope: !9146, file: !1, line: 4307, type: !2167)
!9153 = !DILocalVariable(name: "next_si", scope: !9146, file: !1, line: 4308, type: !3525)
!9154 = !DILocation(line: 0, scope: !9146)
!9155 = !DILocation(line: 4308, column: 3, scope: !9146)
!9156 = !DILocation(line: 0, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9146, file: !1, line: 4311, column: 5)
!9158 = !DILocation(line: 4310, column: 3, scope: !9146)
!9159 = !DILocation(line: 4313, column: 17, scope: !9157)
!9160 = !DILocation(line: 4314, column: 7, scope: !9157)
!9161 = !DILocation(line: 4315, column: 13, scope: !9157)
!9162 = !DILocation(line: 4316, column: 7, scope: !9157)
!9163 = distinct !{!9163, !9158, !9164}
!9164 = !DILocation(line: 4318, column: 5, scope: !9146)
!9165 = !DILocation(line: 4319, column: 1, scope: !9146)
!9166 = distinct !DISubprogram(name: "free_stmt_vec_info", scope: !1, file: !1, line: 4396, type: !9147, scopeLine: 4397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9167)
!9167 = !{!9168, !9169}
!9168 = !DILocalVariable(name: "stmt", arg: 1, scope: !9166, file: !1, line: 4396, type: !2167)
!9169 = !DILocalVariable(name: "stmt_info", scope: !9166, file: !1, line: 4398, type: !3562)
!9170 = !DILocation(line: 0, scope: !9166)
!9171 = !DILocation(line: 4398, column: 29, scope: !9166)
!9172 = !DILocation(line: 4400, column: 8, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9166, file: !1, line: 4400, column: 7)
!9174 = !DILocation(line: 4400, column: 7, scope: !9166)
!9175 = !DILocation(line: 4403, column: 3, scope: !9166)
!9176 = !DILocation(line: 4404, column: 3, scope: !9166)
!9177 = !DILocation(line: 4405, column: 9, scope: !9166)
!9178 = !DILocation(line: 4405, column: 3, scope: !9166)
!9179 = !DILocation(line: 4406, column: 1, scope: !9166)
!9180 = distinct !DISubprogram(name: "is_loop_header_bb_p", scope: !389, file: !389, line: 690, type: !9181, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9183)
!9181 = !DISubroutineType(types: !9182)
!9182 = !{!2166, !2616}
!9183 = !{!9184}
!9184 = !DILocalVariable(name: "bb", arg: 1, scope: !9180, file: !389, line: 690, type: !2616)
!9185 = !DILocation(line: 0, scope: !9180)
!9186 = !DILocation(line: 692, column: 18, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9180, file: !389, line: 692, column: 7)
!9188 = !DILocation(line: 692, column: 32, scope: !9187)
!9189 = !DILocation(line: 692, column: 10, scope: !9187)
!9190 = !DILocation(line: 692, column: 7, scope: !9180)
!9191 = !DILocation(line: 694, column: 3, scope: !9180)
!9192 = !DILocation(line: 696, column: 1, scope: !9180)
!9193 = distinct !DISubprogram(name: "VEC_dr_p_heap_alloc", scope: !389, file: !389, line: 399, type: !9194, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9196)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!3790, !2256}
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "alloc_", arg: 1, scope: !9193, file: !389, line: 399, type: !2256)
!9198 = !DILocation(line: 0, scope: !9193)
!9199 = !DILocation(line: 399, column: 1, scope: !9193)
!9200 = distinct !DISubprogram(name: "init_stmt_vec_info_vec", scope: !1, file: !1, line: 4376, type: !9201, scopeLine: 4377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3951)
!9201 = !DISubroutineType(types: !9202)
!9202 = !{null}
!9203 = !DILocation(line: 4378, column: 3, scope: !9200)
!9204 = !DILocation(line: 4379, column: 23, scope: !9200)
!9205 = !DILocation(line: 4379, column: 21, scope: !9200)
!9206 = !DILocation(line: 4380, column: 1, scope: !9200)
!9207 = distinct !DISubprogram(name: "VEC_vec_void_p_heap_alloc", scope: !389, file: !389, line: 615, type: !9208, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9210)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{!3913, !2256}
!9210 = !{!9211}
!9211 = !DILocalVariable(name: "alloc_", arg: 1, scope: !9207, file: !389, line: 615, type: !2256)
!9212 = !DILocation(line: 0, scope: !9207)
!9213 = !DILocation(line: 615, column: 1, scope: !9207)
!9214 = distinct !DISubprogram(name: "free_stmt_vec_info_vec", scope: !1, file: !1, line: 4386, type: !9201, scopeLine: 4387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3951)
!9215 = !DILocation(line: 4388, column: 3, scope: !9214)
!9216 = !DILocation(line: 4389, column: 3, scope: !9214)
!9217 = !DILocation(line: 4390, column: 1, scope: !9214)
!9218 = distinct !DISubprogram(name: "VEC_vec_void_p_heap_free", scope: !389, file: !389, line: 615, type: !9219, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9222)
!9219 = !DISubroutineType(types: !9220)
!9220 = !{null, !9221}
!9221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!9222 = !{!9223}
!9223 = !DILocalVariable(name: "vec_", arg: 1, scope: !9218, file: !389, line: 615, type: !9221)
!9224 = !DILocation(line: 0, scope: !9218)
!9225 = !DILocation(line: 615, column: 1, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9218, file: !389, line: 615, column: 1)
!9227 = !DILocation(line: 615, column: 1, scope: !9218)
!9228 = distinct !DISubprogram(name: "VEC_dr_p_heap_free", scope: !389, file: !389, line: 399, type: !9229, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9232)
!9229 = !DISubroutineType(types: !9230)
!9230 = !{null, !9231}
!9231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!9232 = !{!9233}
!9233 = !DILocalVariable(name: "vec_", arg: 1, scope: !9228, file: !389, line: 399, type: !9231)
!9234 = !DILocation(line: 0, scope: !9228)
!9235 = !DILocation(line: 399, column: 1, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9228, file: !389, line: 399, column: 1)
!9237 = !DILocation(line: 399, column: 1, scope: !9228)
!9238 = distinct !DISubprogram(name: "gimple_nop_p", scope: !2092, file: !2092, line: 4304, type: !5909, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9239)
!9239 = !{!9240}
!9240 = !DILocalVariable(name: "g", arg: 1, scope: !9238, file: !2092, line: 4304, type: !4825)
!9241 = !DILocation(line: 0, scope: !9238)
!9242 = !DILocation(line: 4306, column: 10, scope: !9238)
!9243 = !DILocation(line: 4306, column: 26, scope: !9238)
!9244 = !DILocation(line: 4306, column: 3, scope: !9238)
!9245 = distinct !DISubprogram(name: "gimple_phi_result", scope: !2092, file: !2092, line: 3071, type: !5497, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9246)
!9246 = !{!9247}
!9247 = !DILocalVariable(name: "gs", arg: 1, scope: !9245, file: !2092, line: 3071, type: !4825)
!9248 = !DILocation(line: 0, scope: !9245)
!9249 = !DILocation(line: 3074, column: 25, scope: !9245)
!9250 = !DILocation(line: 3074, column: 3, scope: !9245)
!9251 = distinct !DISubprogram(name: "supportable_widening_operation", scope: !1, file: !1, line: 4627, type: !9252, scopeLine: 4632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9256)
!9252 = !DISubroutineType(types: !9253)
!9253 = !{!2166, !181, !2167, !2354, !2765, !2765, !9254, !9254, !3640, !9255}
!9254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!9255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!9256 = !{!9257, !9258, !9259, !9260, !9261, !9262, !9263, !9264, !9265, !9266, !9267, !9268, !9269, !9270, !9271, !9272, !9273, !9274, !9275, !9276, !9277, !9278, !9279, !9282, !9283, !9284, !9285, !9286, !9287}
!9257 = !DILocalVariable(name: "code", arg: 1, scope: !9251, file: !1, line: 4627, type: !181)
!9258 = !DILocalVariable(name: "stmt", arg: 2, scope: !9251, file: !1, line: 4627, type: !2167)
!9259 = !DILocalVariable(name: "vectype", arg: 3, scope: !9251, file: !1, line: 4627, type: !2354)
!9260 = !DILocalVariable(name: "decl1", arg: 4, scope: !9251, file: !1, line: 4628, type: !2765)
!9261 = !DILocalVariable(name: "decl2", arg: 5, scope: !9251, file: !1, line: 4628, type: !2765)
!9262 = !DILocalVariable(name: "code1", arg: 6, scope: !9251, file: !1, line: 4629, type: !9254)
!9263 = !DILocalVariable(name: "code2", arg: 7, scope: !9251, file: !1, line: 4629, type: !9254)
!9264 = !DILocalVariable(name: "multi_step_cvt", arg: 8, scope: !9251, file: !1, line: 4630, type: !3640)
!9265 = !DILocalVariable(name: "interm_types", arg: 9, scope: !9251, file: !1, line: 4631, type: !9255)
!9266 = !DILocalVariable(name: "stmt_info", scope: !9251, file: !1, line: 4633, type: !3562)
!9267 = !DILocalVariable(name: "loop_info", scope: !9251, file: !1, line: 4634, type: !3569)
!9268 = !DILocalVariable(name: "vect_loop", scope: !9251, file: !1, line: 4635, type: !2802)
!9269 = !DILocalVariable(name: "ordered_p", scope: !9251, file: !1, line: 4636, type: !2166)
!9270 = !DILocalVariable(name: "vec_mode", scope: !9251, file: !1, line: 4637, type: !3)
!9271 = !DILocalVariable(name: "icode1", scope: !9251, file: !1, line: 4638, type: !456)
!9272 = !DILocalVariable(name: "icode2", scope: !9251, file: !1, line: 4638, type: !456)
!9273 = !DILocalVariable(name: "optab1", scope: !9251, file: !1, line: 4639, type: !7367)
!9274 = !DILocalVariable(name: "optab2", scope: !9251, file: !1, line: 4639, type: !7367)
!9275 = !DILocalVariable(name: "type", scope: !9251, file: !1, line: 4640, type: !2354)
!9276 = !DILocalVariable(name: "wide_vectype", scope: !9251, file: !1, line: 4641, type: !2354)
!9277 = !DILocalVariable(name: "c1", scope: !9251, file: !1, line: 4642, type: !181)
!9278 = !DILocalVariable(name: "c2", scope: !9251, file: !1, line: 4642, type: !181)
!9279 = !DILocalVariable(name: "i", scope: !9280, file: !1, line: 4763, type: !2256)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 4762, column: 5)
!9281 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 4760, column: 7)
!9282 = !DILocalVariable(name: "prev_type", scope: !9280, file: !1, line: 4764, type: !2354)
!9283 = !DILocalVariable(name: "intermediate_type", scope: !9280, file: !1, line: 4764, type: !2354)
!9284 = !DILocalVariable(name: "intermediate_mode", scope: !9280, file: !1, line: 4765, type: !3)
!9285 = !DILocalVariable(name: "prev_mode", scope: !9280, file: !1, line: 4765, type: !3)
!9286 = !DILocalVariable(name: "optab3", scope: !9280, file: !1, line: 4766, type: !7367)
!9287 = !DILocalVariable(name: "optab4", scope: !9280, file: !1, line: 4766, type: !7367)
!9288 = !DILocation(line: 0, scope: !9251)
!9289 = !DILocation(line: 4633, column: 29, scope: !9251)
!9290 = !DILocation(line: 4634, column: 29, scope: !9251)
!9291 = !DILocation(line: 4635, column: 28, scope: !9251)
!9292 = !DILocation(line: 4640, column: 15, scope: !9251)
!9293 = !DILocation(line: 4641, column: 23, scope: !9251)
!9294 = !DILocation(line: 4664, column: 8, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 4664, column: 8)
!9296 = !DILocation(line: 4664, column: 40, scope: !9295)
!9297 = !DILocation(line: 4665, column: 8, scope: !9295)
!9298 = !DILocation(line: 4665, column: 12, scope: !9295)
!9299 = !DILocation(line: 4664, column: 8, scope: !9251)
!9300 = !DILocation(line: 4671, column: 15, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 4670, column: 7)
!9302 = !DILocation(line: 4671, column: 7, scope: !9301)
!9303 = !DILocation(line: 4672, column: 28, scope: !9301)
!9304 = !DILocation(line: 4672, column: 10, scope: !9301)
!9305 = !DILocation(line: 4673, column: 10, scope: !9301)
!9306 = !DILocation(line: 4674, column: 28, scope: !9301)
!9307 = !DILocation(line: 4674, column: 10, scope: !9301)
!9308 = !DILocation(line: 4674, column: 7, scope: !9301)
!9309 = !DILocation(line: 4675, column: 10, scope: !9301)
!9310 = !DILocation(line: 4670, column: 7, scope: !9251)
!9311 = !DILocation(line: 4677, column: 11, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !1, line: 4677, column: 11)
!9313 = distinct !DILexicalBlock(scope: !9301, file: !1, line: 4676, column: 5)
!9314 = !DILocation(line: 4677, column: 11, scope: !9313)
!9315 = !DILocation(line: 4678, column: 18, scope: !9312)
!9316 = !DILocation(line: 4678, column: 9, scope: !9312)
!9317 = !DILocation(line: 4680, column: 23, scope: !9313)
!9318 = !DILocation(line: 4680, column: 14, scope: !9313)
!9319 = !DILocation(line: 4681, column: 34, scope: !9313)
!9320 = !DILocation(line: 4681, column: 16, scope: !9313)
!9321 = !DILocation(line: 4681, column: 14, scope: !9313)
!9322 = !DILocation(line: 4682, column: 34, scope: !9313)
!9323 = !DILocation(line: 4682, column: 16, scope: !9313)
!9324 = !DILocation(line: 4682, column: 14, scope: !9313)
!9325 = !DILocation(line: 4683, column: 7, scope: !9313)
!9326 = !DILocation(line: 4686, column: 3, scope: !9251)
!9327 = !DILocation(line: 4712, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 4687, column: 5)
!9329 = !DILocation(line: 4725, column: 7, scope: !9328)
!9330 = !DILocation(line: 4734, column: 7, scope: !9328)
!9331 = !DILocation(line: 4735, column: 5, scope: !9328)
!9332 = !DILocation(line: 4737, column: 12, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 4737, column: 7)
!9334 = !DILocation(line: 4737, column: 7, scope: !9251)
!9335 = !DILocation(line: 4740, column: 16, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9333, file: !1, line: 4738, column: 5)
!9337 = !DILocation(line: 4741, column: 16, scope: !9336)
!9338 = !DILocation(line: 4742, column: 5, scope: !9336)
!9339 = !DILocation(line: 4745, column: 16, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9333, file: !1, line: 4744, column: 5)
!9341 = !DILocation(line: 4746, column: 16, scope: !9340)
!9342 = !DILocation(line: 0, scope: !9333)
!9343 = !DILocation(line: 4749, column: 8, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 4749, column: 7)
!9345 = !DILocation(line: 4749, column: 19, scope: !9344)
!9346 = !DILocation(line: 4749, column: 15, scope: !9344)
!9347 = !DILocation(line: 4752, column: 14, scope: !9251)
!9348 = !DILocation(line: 4753, column: 17, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9251, file: !1, line: 4753, column: 7)
!9350 = !DILocation(line: 4753, column: 51, scope: !9349)
!9351 = !DILocation(line: 4753, column: 62, scope: !9349)
!9352 = !DILocation(line: 4754, column: 8, scope: !9349)
!9353 = !DILocation(line: 4754, column: 55, scope: !9349)
!9354 = !DILocation(line: 4755, column: 56, scope: !9349)
!9355 = !DILocation(line: 4753, column: 7, scope: !9251)
!9356 = !DILocation(line: 4760, column: 7, scope: !9281)
!9357 = !DILocation(line: 4760, column: 25, scope: !9281)
!9358 = !DILocation(line: 4760, column: 36, scope: !9281)
!9359 = !DILocation(line: 4760, column: 44, scope: !9281)
!9360 = !DILocation(line: 4760, column: 41, scope: !9281)
!9361 = !DILocation(line: 4761, column: 8, scope: !9281)
!9362 = !DILocation(line: 4761, column: 11, scope: !9281)
!9363 = !DILocation(line: 4761, column: 29, scope: !9281)
!9364 = !DILocation(line: 4761, column: 40, scope: !9281)
!9365 = !DILocation(line: 4761, column: 48, scope: !9281)
!9366 = !DILocation(line: 4761, column: 45, scope: !9281)
!9367 = !DILocation(line: 4760, column: 7, scope: !9251)
!9368 = !DILocation(line: 0, scope: !9280)
!9369 = !DILocation(line: 4768, column: 12, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9280, file: !1, line: 4768, column: 11)
!9371 = !DILocation(line: 4771, column: 14, scope: !9280)
!9372 = !DILocation(line: 4772, column: 14, scope: !9280)
!9373 = !DILocation(line: 4777, column: 23, scope: !9280)
!9374 = !DILocation(line: 4777, column: 21, scope: !9280)
!9375 = !DILocation(line: 0, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9377, file: !1, line: 4802, column: 15)
!9377 = distinct !DILexicalBlock(scope: !9378, file: !1, line: 4779, column: 9)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !1, line: 4778, column: 7)
!9379 = distinct !DILexicalBlock(scope: !9280, file: !1, line: 4778, column: 7)
!9380 = !DILocation(line: 4778, column: 12, scope: !9379)
!9381 = !DILocation(line: 0, scope: !9379)
!9382 = !DILocation(line: 4778, column: 21, scope: !9378)
!9383 = !DILocation(line: 4778, column: 7, scope: !9379)
!9384 = !DILocation(line: 4780, column: 60, scope: !9377)
!9385 = !DILocation(line: 4781, column: 48, scope: !9377)
!9386 = !DILocation(line: 4782, column: 54, scope: !9377)
!9387 = !DILocation(line: 4781, column: 31, scope: !9377)
!9388 = !DILocation(line: 4783, column: 20, scope: !9377)
!9389 = !DILocation(line: 4784, column: 20, scope: !9377)
!9390 = !DILocation(line: 4786, column: 16, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9377, file: !1, line: 4786, column: 15)
!9392 = !DILocation(line: 4786, column: 27, scope: !9391)
!9393 = !DILocation(line: 4786, column: 23, scope: !9391)
!9394 = !DILocation(line: 4787, column: 28, scope: !9391)
!9395 = !DILocation(line: 4787, column: 62, scope: !9391)
!9396 = !DILocation(line: 4788, column: 57, scope: !9391)
!9397 = !DILocation(line: 4789, column: 15, scope: !9391)
!9398 = !DILocation(line: 4789, column: 18, scope: !9391)
!9399 = !DILocation(line: 4789, column: 36, scope: !9391)
!9400 = !DILocation(line: 4789, column: 47, scope: !9391)
!9401 = !DILocation(line: 4789, column: 52, scope: !9391)
!9402 = !DILocation(line: 4790, column: 15, scope: !9391)
!9403 = !DILocation(line: 4790, column: 62, scope: !9391)
!9404 = !DILocation(line: 4791, column: 57, scope: !9391)
!9405 = !DILocation(line: 4792, column: 15, scope: !9391)
!9406 = !DILocation(line: 4792, column: 18, scope: !9391)
!9407 = !DILocation(line: 4792, column: 36, scope: !9391)
!9408 = !DILocation(line: 4792, column: 47, scope: !9391)
!9409 = !DILocation(line: 4792, column: 52, scope: !9391)
!9410 = !DILocation(line: 4793, column: 15, scope: !9391)
!9411 = !DILocation(line: 4793, column: 28, scope: !9391)
!9412 = !DILocation(line: 4793, column: 70, scope: !9391)
!9413 = !DILocation(line: 4794, column: 57, scope: !9391)
!9414 = !DILocation(line: 4795, column: 15, scope: !9391)
!9415 = !DILocation(line: 4795, column: 70, scope: !9391)
!9416 = !DILocation(line: 4796, column: 57, scope: !9391)
!9417 = !DILocation(line: 4786, column: 15, scope: !9377)
!9418 = !DILocation(line: 4799, column: 11, scope: !9377)
!9419 = !DILocation(line: 4800, column: 28, scope: !9377)
!9420 = !DILocation(line: 4802, column: 15, scope: !9376)
!9421 = !DILocation(line: 4802, column: 33, scope: !9376)
!9422 = !DILocation(line: 4802, column: 44, scope: !9376)
!9423 = !DILocation(line: 4802, column: 52, scope: !9376)
!9424 = !DILocation(line: 4802, column: 49, scope: !9376)
!9425 = !DILocation(line: 4803, column: 15, scope: !9376)
!9426 = !DILocation(line: 4803, column: 18, scope: !9376)
!9427 = !DILocation(line: 4803, column: 36, scope: !9376)
!9428 = !DILocation(line: 4803, column: 47, scope: !9376)
!9429 = !DILocation(line: 4803, column: 55, scope: !9376)
!9430 = !DILocation(line: 4803, column: 52, scope: !9376)
!9431 = !DILocation(line: 4802, column: 15, scope: !9377)
!9432 = !DILocation(line: 4778, column: 27, scope: !9378)
!9433 = !DILocation(line: 4778, column: 7, scope: !9378)
!9434 = distinct !{!9434, !9383, !9435}
!9435 = !DILocation(line: 4808, column: 9, scope: !9379)
!9436 = !DILocation(line: 4813, column: 10, scope: !9251)
!9437 = !DILocation(line: 4814, column: 10, scope: !9251)
!9438 = !DILocation(line: 4815, column: 3, scope: !9251)
!9439 = !DILocation(line: 4816, column: 1, scope: !9251)
!9440 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !149, file: !149, line: 184, type: !9441, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!3603, !2256}
!9443 = !{!9444}
!9444 = !DILocalVariable(name: "alloc_", arg: 1, scope: !9440, file: !149, line: 184, type: !2256)
!9445 = !DILocation(line: 0, scope: !9440)
!9446 = !DILocation(line: 184, column: 1, scope: !9440)
!9447 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !149, file: !149, line: 182, type: !9448, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9451)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!2765, !9450, !2354}
!9450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!9451 = !{!9452, !9453, !9454}
!9452 = !DILocalVariable(name: "vec_", arg: 1, scope: !9447, file: !149, line: 182, type: !9450)
!9453 = !DILocalVariable(name: "obj_", arg: 2, scope: !9447, file: !149, line: 182, type: !2354)
!9454 = !DILocalVariable(name: "slot_", scope: !9447, file: !149, line: 182, type: !2765)
!9455 = !DILocation(line: 0, scope: !9447)
!9456 = !DILocation(line: 182, column: 1, scope: !9447)
!9457 = distinct !DISubprogram(name: "supportable_narrowing_operation", scope: !1, file: !1, line: 4839, type: !9458, scopeLine: 4843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9460)
!9458 = !DISubroutineType(types: !9459)
!9459 = !{!2166, !181, !4825, !2354, !9254, !3640, !9255}
!9460 = !{!9461, !9462, !9463, !9464, !9465, !9466, !9467, !9468, !9469, !9470, !9471, !9472, !9473, !9474, !9475, !9476, !9477, !9480}
!9461 = !DILocalVariable(name: "code", arg: 1, scope: !9457, file: !1, line: 4839, type: !181)
!9462 = !DILocalVariable(name: "stmt", arg: 2, scope: !9457, file: !1, line: 4840, type: !4825)
!9463 = !DILocalVariable(name: "vectype", arg: 3, scope: !9457, file: !1, line: 4840, type: !2354)
!9464 = !DILocalVariable(name: "code1", arg: 4, scope: !9457, file: !1, line: 4841, type: !9254)
!9465 = !DILocalVariable(name: "multi_step_cvt", arg: 5, scope: !9457, file: !1, line: 4841, type: !3640)
!9466 = !DILocalVariable(name: "interm_types", arg: 6, scope: !9457, file: !1, line: 4842, type: !9255)
!9467 = !DILocalVariable(name: "vec_mode", scope: !9457, file: !1, line: 4844, type: !3)
!9468 = !DILocalVariable(name: "icode1", scope: !9457, file: !1, line: 4845, type: !456)
!9469 = !DILocalVariable(name: "optab1", scope: !9457, file: !1, line: 4846, type: !7367)
!9470 = !DILocalVariable(name: "interm_optab", scope: !9457, file: !1, line: 4846, type: !7367)
!9471 = !DILocalVariable(name: "type", scope: !9457, file: !1, line: 4847, type: !2354)
!9472 = !DILocalVariable(name: "narrow_vectype", scope: !9457, file: !1, line: 4848, type: !2354)
!9473 = !DILocalVariable(name: "c1", scope: !9457, file: !1, line: 4849, type: !181)
!9474 = !DILocalVariable(name: "intermediate_type", scope: !9457, file: !1, line: 4850, type: !2354)
!9475 = !DILocalVariable(name: "prev_type", scope: !9457, file: !1, line: 4850, type: !2354)
!9476 = !DILocalVariable(name: "i", scope: !9457, file: !1, line: 4851, type: !2256)
!9477 = !DILocalVariable(name: "intermediate_mode", scope: !9478, file: !1, line: 4890, type: !3)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !1, line: 4889, column: 5)
!9479 = distinct !DILexicalBlock(scope: !9457, file: !1, line: 4888, column: 7)
!9480 = !DILocalVariable(name: "prev_mode", scope: !9478, file: !1, line: 4890, type: !3)
!9481 = !DILocation(line: 0, scope: !9457)
!9482 = !DILocation(line: 4847, column: 15, scope: !9457)
!9483 = !DILocation(line: 4848, column: 25, scope: !9457)
!9484 = !DILocation(line: 4853, column: 3, scope: !9457)
!9485 = !DILocation(line: 4861, column: 7, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9457, file: !1, line: 4854, column: 5)
!9487 = !DILocation(line: 4869, column: 7, scope: !9486)
!9488 = !DILocation(line: 4870, column: 5, scope: !9486)
!9489 = !DILocation(line: 4872, column: 12, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9457, file: !1, line: 4872, column: 7)
!9491 = !DILocation(line: 4872, column: 7, scope: !9457)
!9492 = !DILocation(line: 4874, column: 14, scope: !9490)
!9493 = !DILocation(line: 4874, column: 5, scope: !9490)
!9494 = !DILocation(line: 4876, column: 14, scope: !9490)
!9495 = !DILocation(line: 0, scope: !9490)
!9496 = !DILocation(line: 4878, column: 8, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9457, file: !1, line: 4878, column: 7)
!9498 = !DILocation(line: 4878, column: 7, scope: !9457)
!9499 = !DILocation(line: 4881, column: 14, scope: !9457)
!9500 = !DILocation(line: 4882, column: 17, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9457, file: !1, line: 4882, column: 7)
!9502 = !DILocation(line: 4882, column: 51, scope: !9501)
!9503 = !DILocation(line: 4883, column: 8, scope: !9501)
!9504 = !DILocation(line: 4882, column: 7, scope: !9457)
!9505 = !DILocation(line: 4888, column: 7, scope: !9479)
!9506 = !DILocation(line: 4888, column: 25, scope: !9479)
!9507 = !DILocation(line: 4888, column: 36, scope: !9479)
!9508 = !DILocation(line: 4888, column: 44, scope: !9479)
!9509 = !DILocation(line: 4888, column: 41, scope: !9479)
!9510 = !DILocation(line: 4888, column: 7, scope: !9457)
!9511 = !DILocation(line: 0, scope: !9478)
!9512 = !DILocation(line: 4897, column: 23, scope: !9478)
!9513 = !DILocation(line: 4897, column: 21, scope: !9478)
!9514 = !DILocation(line: 0, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9516, file: !1, line: 4917, column: 15)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !1, line: 4899, column: 9)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !1, line: 4898, column: 7)
!9518 = distinct !DILexicalBlock(scope: !9478, file: !1, line: 4898, column: 7)
!9519 = !DILocation(line: 4898, column: 12, scope: !9518)
!9520 = !DILocation(line: 0, scope: !9518)
!9521 = !DILocation(line: 4898, column: 21, scope: !9517)
!9522 = !DILocation(line: 4898, column: 7, scope: !9518)
!9523 = !DILocation(line: 4900, column: 60, scope: !9516)
!9524 = !DILocation(line: 4901, column: 48, scope: !9516)
!9525 = !DILocation(line: 4902, column: 54, scope: !9516)
!9526 = !DILocation(line: 4901, column: 31, scope: !9516)
!9527 = !DILocation(line: 4903, column: 26, scope: !9516)
!9528 = !DILocation(line: 4905, column: 16, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9516, file: !1, line: 4905, column: 15)
!9530 = !DILocation(line: 4906, column: 15, scope: !9529)
!9531 = !DILocation(line: 4906, column: 28, scope: !9529)
!9532 = !DILocation(line: 4906, column: 62, scope: !9529)
!9533 = !DILocation(line: 4907, column: 57, scope: !9529)
!9534 = !DILocation(line: 4908, column: 15, scope: !9529)
!9535 = !DILocation(line: 4908, column: 18, scope: !9529)
!9536 = !DILocation(line: 4908, column: 36, scope: !9529)
!9537 = !DILocation(line: 4908, column: 47, scope: !9529)
!9538 = !DILocation(line: 4908, column: 52, scope: !9529)
!9539 = !DILocation(line: 4909, column: 15, scope: !9529)
!9540 = !DILocation(line: 4910, column: 21, scope: !9529)
!9541 = !DILocation(line: 4910, column: 69, scope: !9529)
!9542 = !DILocation(line: 4911, column: 18, scope: !9529)
!9543 = !DILocation(line: 4905, column: 15, scope: !9516)
!9544 = !DILocation(line: 4914, column: 11, scope: !9516)
!9545 = !DILocation(line: 4915, column: 28, scope: !9516)
!9546 = !DILocation(line: 4917, column: 15, scope: !9515)
!9547 = !DILocation(line: 4917, column: 33, scope: !9515)
!9548 = !DILocation(line: 4917, column: 44, scope: !9515)
!9549 = !DILocation(line: 4917, column: 52, scope: !9515)
!9550 = !DILocation(line: 4917, column: 49, scope: !9515)
!9551 = !DILocation(line: 4917, column: 15, scope: !9516)
!9552 = !DILocation(line: 4898, column: 27, scope: !9517)
!9553 = !DILocation(line: 4898, column: 7, scope: !9517)
!9554 = distinct !{!9554, !9522, !9555}
!9555 = !DILocation(line: 4922, column: 9, scope: !9518)
!9556 = !DILocation(line: 4929, column: 1, scope: !9457)
!9557 = distinct !DISubprogram(name: "gimple_vdef", scope: !2092, file: !2092, line: 1375, type: !5497, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9558)
!9558 = !{!9559}
!9559 = !DILocalVariable(name: "g", arg: 1, scope: !9557, file: !2092, line: 1375, type: !4825)
!9560 = !DILocation(line: 0, scope: !9557)
!9561 = !DILocation(line: 1377, column: 8, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9557, file: !2092, line: 1377, column: 7)
!9563 = !DILocation(line: 1377, column: 7, scope: !9557)
!9564 = !DILocation(line: 1379, column: 23, scope: !9557)
!9565 = !DILocation(line: 1379, column: 3, scope: !9557)
!9566 = !DILocation(line: 1380, column: 1, scope: !9557)
!9567 = distinct !DISubprogram(name: "op_iter_init_phidef", scope: !4841, file: !4841, line: 939, type: !9568, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9570)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!3906, !4844, !2167, !2256}
!9570 = !{!9571, !9572, !9573, !9574, !9575}
!9571 = !DILocalVariable(name: "ptr", arg: 1, scope: !9567, file: !4841, line: 939, type: !4844)
!9572 = !DILocalVariable(name: "phi", arg: 2, scope: !9567, file: !4841, line: 939, type: !2167)
!9573 = !DILocalVariable(name: "flags", arg: 3, scope: !9567, file: !4841, line: 939, type: !2256)
!9574 = !DILocalVariable(name: "phi_def", scope: !9567, file: !4841, line: 941, type: !2354)
!9575 = !DILocalVariable(name: "comp", scope: !9567, file: !4841, line: 942, type: !2256)
!9576 = !DILocation(line: 0, scope: !9567)
!9577 = !DILocation(line: 941, column: 18, scope: !9567)
!9578 = !DILocation(line: 944, column: 3, scope: !9567)
!9579 = !DILocation(line: 945, column: 8, scope: !9567)
!9580 = !DILocation(line: 945, column: 13, scope: !9567)
!9581 = !DILocation(line: 949, column: 11, scope: !9567)
!9582 = !DILocation(line: 953, column: 7, scope: !9567)
!9583 = !DILocation(line: 955, column: 17, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9585, file: !4841, line: 954, column: 5)
!9585 = distinct !DILexicalBlock(scope: !9567, file: !4841, line: 953, column: 7)
!9586 = !DILocation(line: 956, column: 7, scope: !9584)
!9587 = !DILocation(line: 959, column: 8, scope: !9567)
!9588 = !DILocation(line: 959, column: 18, scope: !9567)
!9589 = !DILocation(line: 963, column: 10, scope: !9567)
!9590 = !DILocation(line: 963, column: 3, scope: !9567)
!9591 = !DILocation(line: 964, column: 1, scope: !9567)
!9592 = distinct !DISubprogram(name: "op_iter_init_def", scope: !4841, file: !4841, line: 780, type: !9568, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9593)
!9593 = !{!9594, !9595, !9596}
!9594 = !DILocalVariable(name: "ptr", arg: 1, scope: !9592, file: !4841, line: 780, type: !4844)
!9595 = !DILocalVariable(name: "stmt", arg: 2, scope: !9592, file: !4841, line: 780, type: !2167)
!9596 = !DILocalVariable(name: "flags", arg: 3, scope: !9592, file: !4841, line: 780, type: !2256)
!9597 = !DILocation(line: 0, scope: !9592)
!9598 = !DILocation(line: 784, column: 3, scope: !9592)
!9599 = !DILocation(line: 785, column: 8, scope: !9592)
!9600 = !DILocation(line: 785, column: 18, scope: !9592)
!9601 = !DILocation(line: 786, column: 10, scope: !9592)
!9602 = !DILocation(line: 786, column: 3, scope: !9592)
!9603 = distinct !DISubprogram(name: "is_gimple_debug", scope: !2092, file: !2092, line: 3249, type: !5909, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9604)
!9604 = !{!9605}
!9605 = !DILocalVariable(name: "gs", arg: 1, scope: !9603, file: !2092, line: 3249, type: !4825)
!9606 = !DILocation(line: 0, scope: !9603)
!9607 = !DILocation(line: 3251, column: 10, scope: !9603)
!9608 = !DILocation(line: 3251, column: 27, scope: !9603)
!9609 = !DILocation(line: 3251, column: 3, scope: !9603)
!9610 = distinct !DISubprogram(name: "op_iter_next_def", scope: !4841, file: !4841, line: 681, type: !9611, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9613)
!9611 = !DISubroutineType(types: !9612)
!9612 = !{!3906, !4844}
!9613 = !{!9614, !9615}
!9614 = !DILocalVariable(name: "ptr", arg: 1, scope: !9610, file: !4841, line: 681, type: !4844)
!9615 = !DILocalVariable(name: "def_p", scope: !9610, file: !4841, line: 683, type: !3906)
!9616 = !DILocation(line: 0, scope: !9610)
!9617 = !DILocation(line: 687, column: 12, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9610, file: !4841, line: 687, column: 7)
!9619 = !DILocation(line: 687, column: 7, scope: !9618)
!9620 = !DILocation(line: 687, column: 7, scope: !9610)
!9621 = !DILocation(line: 689, column: 15, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9618, file: !4841, line: 688, column: 5)
!9623 = !DILocation(line: 690, column: 30, scope: !9622)
!9624 = !DILocation(line: 690, column: 17, scope: !9622)
!9625 = !DILocation(line: 691, column: 7, scope: !9622)
!9626 = !DILocation(line: 693, column: 8, scope: !9610)
!9627 = !DILocation(line: 693, column: 13, scope: !9610)
!9628 = !DILocation(line: 694, column: 3, scope: !9610)
!9629 = !DILocation(line: 695, column: 1, scope: !9610)
!9630 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !2092, file: !2092, line: 1283, type: !5909, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9631)
!9631 = !{!9632}
!9632 = !DILocalVariable(name: "g", arg: 1, scope: !9630, file: !2092, line: 1283, type: !4825)
!9633 = !DILocation(line: 0, scope: !9630)
!9634 = !DILocation(line: 1285, column: 10, scope: !9630)
!9635 = !DILocation(line: 1285, column: 26, scope: !9630)
!9636 = !DILocation(line: 1285, column: 43, scope: !9630)
!9637 = !DILocation(line: 1285, column: 46, scope: !9630)
!9638 = !DILocation(line: 1285, column: 62, scope: !9630)
!9639 = !DILocation(line: 1285, column: 3, scope: !9630)
!9640 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !4841, file: !4841, line: 729, type: !9641, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9643)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{null, !4844}
!9643 = !{!9644}
!9644 = !DILocalVariable(name: "ptr", arg: 1, scope: !9640, file: !4841, line: 729, type: !4844)
!9645 = !DILocation(line: 0, scope: !9640)
!9646 = !DILocation(line: 731, column: 8, scope: !9640)
!9647 = !DILocation(line: 731, column: 13, scope: !9640)
!9648 = !DILocation(line: 732, column: 8, scope: !9640)
!9649 = !DILocation(line: 732, column: 13, scope: !9640)
!9650 = !DILocation(line: 733, column: 8, scope: !9640)
!9651 = !DILocation(line: 733, column: 18, scope: !9640)
!9652 = !DILocation(line: 734, column: 8, scope: !9640)
!9653 = !DILocation(line: 734, column: 14, scope: !9640)
!9654 = !DILocation(line: 735, column: 8, scope: !9640)
!9655 = !DILocation(line: 735, column: 16, scope: !9640)
!9656 = !DILocation(line: 736, column: 8, scope: !9640)
!9657 = !DILocation(line: 736, column: 17, scope: !9640)
!9658 = !DILocation(line: 737, column: 8, scope: !9640)
!9659 = !DILocation(line: 737, column: 13, scope: !9640)
!9660 = !DILocation(line: 738, column: 1, scope: !9640)
!9661 = distinct !DISubprogram(name: "op_iter_init", scope: !4841, file: !4841, line: 742, type: !9662, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9664)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{null, !4844, !2167, !2256}
!9664 = !{!9665, !9666, !9667}
!9665 = !DILocalVariable(name: "ptr", arg: 1, scope: !9661, file: !4841, line: 742, type: !4844)
!9666 = !DILocalVariable(name: "stmt", arg: 2, scope: !9661, file: !4841, line: 742, type: !2167)
!9667 = !DILocalVariable(name: "flags", arg: 3, scope: !9661, file: !4841, line: 742, type: !2256)
!9668 = !DILocation(line: 0, scope: !9661)
!9669 = !DILocation(line: 746, column: 3, scope: !9661)
!9670 = !DILocation(line: 748, column: 22, scope: !9661)
!9671 = !DILocation(line: 748, column: 15, scope: !9661)
!9672 = !DILocation(line: 748, column: 52, scope: !9661)
!9673 = !DILocation(line: 748, column: 8, scope: !9661)
!9674 = !DILocation(line: 748, column: 13, scope: !9661)
!9675 = !DILocation(line: 749, column: 15, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9661, file: !4841, line: 749, column: 7)
!9677 = !DILocation(line: 750, column: 7, scope: !9676)
!9678 = !DILocation(line: 750, column: 10, scope: !9676)
!9679 = !DILocation(line: 751, column: 7, scope: !9676)
!9680 = !DILocation(line: 751, column: 10, scope: !9676)
!9681 = !DILocation(line: 751, column: 29, scope: !9676)
!9682 = !DILocation(line: 749, column: 7, scope: !9661)
!9683 = !DILocation(line: 752, column: 22, scope: !9676)
!9684 = !DILocation(line: 752, column: 28, scope: !9676)
!9685 = !DILocation(line: 752, column: 15, scope: !9676)
!9686 = !DILocation(line: 752, column: 5, scope: !9676)
!9687 = !DILocation(line: 753, column: 22, scope: !9661)
!9688 = !DILocation(line: 753, column: 15, scope: !9661)
!9689 = !DILocation(line: 753, column: 52, scope: !9661)
!9690 = !DILocation(line: 753, column: 8, scope: !9661)
!9691 = !DILocation(line: 753, column: 13, scope: !9661)
!9692 = !DILocation(line: 754, column: 15, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9661, file: !4841, line: 754, column: 7)
!9694 = !DILocation(line: 755, column: 7, scope: !9693)
!9695 = !DILocation(line: 755, column: 10, scope: !9693)
!9696 = !DILocation(line: 756, column: 7, scope: !9693)
!9697 = !DILocation(line: 756, column: 10, scope: !9693)
!9698 = !DILocation(line: 756, column: 29, scope: !9693)
!9699 = !DILocation(line: 754, column: 7, scope: !9661)
!9700 = !DILocation(line: 757, column: 22, scope: !9693)
!9701 = !DILocation(line: 757, column: 28, scope: !9693)
!9702 = !DILocation(line: 757, column: 15, scope: !9693)
!9703 = !DILocation(line: 757, column: 5, scope: !9693)
!9704 = !DILocation(line: 758, column: 8, scope: !9661)
!9705 = !DILocation(line: 758, column: 13, scope: !9661)
!9706 = !DILocation(line: 760, column: 8, scope: !9661)
!9707 = !DILocation(line: 760, column: 14, scope: !9661)
!9708 = !DILocation(line: 761, column: 8, scope: !9661)
!9709 = !DILocation(line: 761, column: 16, scope: !9661)
!9710 = !DILocation(line: 762, column: 8, scope: !9661)
!9711 = !DILocation(line: 762, column: 17, scope: !9661)
!9712 = !DILocation(line: 763, column: 1, scope: !9661)
!9713 = distinct !DISubprogram(name: "gimple_def_ops", scope: !2092, file: !2092, line: 1292, type: !9714, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9716)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!2760, !4825}
!9716 = !{!9717}
!9717 = !DILocalVariable(name: "g", arg: 1, scope: !9713, file: !2092, line: 1292, type: !4825)
!9718 = !DILocation(line: 0, scope: !9713)
!9719 = !DILocation(line: 1294, column: 8, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9713, file: !2092, line: 1294, column: 7)
!9721 = !DILocation(line: 1294, column: 7, scope: !9713)
!9722 = !DILocation(line: 1296, column: 26, scope: !9713)
!9723 = !DILocation(line: 1296, column: 3, scope: !9713)
!9724 = !DILocation(line: 1297, column: 1, scope: !9713)
!9725 = distinct !DISubprogram(name: "gimple_use_ops", scope: !2092, file: !2092, line: 1313, type: !9726, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9728)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!2767, !4825}
!9728 = !{!9729}
!9729 = !DILocalVariable(name: "g", arg: 1, scope: !9725, file: !2092, line: 1313, type: !4825)
!9730 = !DILocation(line: 0, scope: !9725)
!9731 = !DILocation(line: 1315, column: 8, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9725, file: !2092, line: 1315, column: 7)
!9733 = !DILocation(line: 1315, column: 7, scope: !9725)
!9734 = !DILocation(line: 1317, column: 26, scope: !9725)
!9735 = !DILocation(line: 1317, column: 3, scope: !9725)
!9736 = !DILocation(line: 1318, column: 1, scope: !9725)
!9737 = distinct !DISubprogram(name: "gimple_vuse", scope: !2092, file: !2092, line: 1365, type: !5497, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9738)
!9738 = !{!9739}
!9739 = !DILocalVariable(name: "g", arg: 1, scope: !9737, file: !2092, line: 1365, type: !4825)
!9740 = !DILocation(line: 0, scope: !9737)
!9741 = !DILocation(line: 1367, column: 8, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9737, file: !2092, line: 1367, column: 7)
!9743 = !DILocation(line: 1367, column: 7, scope: !9737)
!9744 = !DILocation(line: 1369, column: 23, scope: !9737)
!9745 = !DILocation(line: 1369, column: 3, scope: !9737)
!9746 = !DILocation(line: 1370, column: 1, scope: !9737)
!9747 = distinct !DISubprogram(name: "gimple_has_ops", scope: !2092, file: !2092, line: 1274, type: !5909, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9748)
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "g", arg: 1, scope: !9747, file: !2092, line: 1274, type: !4825)
!9750 = !DILocation(line: 0, scope: !9747)
!9751 = !DILocation(line: 1276, column: 10, scope: !9747)
!9752 = !DILocation(line: 1276, column: 26, scope: !9747)
!9753 = !DILocation(line: 1276, column: 41, scope: !9747)
!9754 = !DILocation(line: 1276, column: 44, scope: !9747)
!9755 = !DILocation(line: 1276, column: 60, scope: !9747)
!9756 = !DILocation(line: 1276, column: 3, scope: !9747)
!9757 = distinct !DISubprogram(name: "VEC_gimple_heap_safe_push", scope: !2092, file: !2092, line: 34, type: !9758, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9760)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{!3531, !4702, !2167}
!9760 = !{!9761, !9762}
!9761 = !DILocalVariable(name: "vec_", arg: 1, scope: !9757, file: !2092, line: 34, type: !4702)
!9762 = !DILocalVariable(name: "obj_", arg: 2, scope: !9757, file: !2092, line: 34, type: !2167)
!9763 = !DILocation(line: 0, scope: !9757)
!9764 = !DILocation(line: 34, column: 1, scope: !9757)
!9765 = distinct !DISubprogram(name: "VEC_gimple_heap_reserve", scope: !2092, file: !2092, line: 34, type: !9766, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9768)
!9766 = !DISubroutineType(types: !9767)
!9767 = !{!2256, !4702, !2256}
!9768 = !{!9769, !9770, !9771}
!9769 = !DILocalVariable(name: "vec_", arg: 1, scope: !9765, file: !2092, line: 34, type: !4702)
!9770 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9765, file: !2092, line: 34, type: !2256)
!9771 = !DILocalVariable(name: "extend", scope: !9765, file: !2092, line: 34, type: !2256)
!9772 = !DILocation(line: 0, scope: !9765)
!9773 = !DILocation(line: 34, column: 1, scope: !9765)
!9774 = !DILocation(line: 34, column: 1, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9765, file: !2092, line: 34, column: 1)
!9776 = distinct !DISubprogram(name: "VEC_gimple_base_quick_push", scope: !2092, file: !2092, line: 33, type: !9777, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9779)
!9777 = !DISubroutineType(types: !9778)
!9778 = !{!3531, !4800, !2167}
!9779 = !{!9780, !9781, !9782}
!9780 = !DILocalVariable(name: "vec_", arg: 1, scope: !9776, file: !2092, line: 33, type: !4800)
!9781 = !DILocalVariable(name: "obj_", arg: 2, scope: !9776, file: !2092, line: 33, type: !2167)
!9782 = !DILocalVariable(name: "slot_", scope: !9776, file: !2092, line: 33, type: !3531)
!9783 = !DILocation(line: 0, scope: !9776)
!9784 = !DILocation(line: 33, column: 1, scope: !9776)
!9785 = distinct !DISubprogram(name: "VEC_gimple_base_space", scope: !2092, file: !2092, line: 33, type: !9786, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9788)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{!2256, !4800, !2256}
!9788 = !{!9789, !9790}
!9789 = !DILocalVariable(name: "vec_", arg: 1, scope: !9785, file: !2092, line: 33, type: !4800)
!9790 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9785, file: !2092, line: 33, type: !2256)
!9791 = !DILocation(line: 0, scope: !9785)
!9792 = !DILocation(line: 33, column: 1, scope: !9785)
!9793 = distinct !DISubprogram(name: "bb_seq", scope: !2092, file: !2092, line: 237, type: !9794, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9799)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!2218, !9796}
!9796 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !2168, line: 112, baseType: !9797)
!9797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9798, size: 64)
!9798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2193)
!9799 = !{!9800}
!9800 = !DILocalVariable(name: "bb", arg: 1, scope: !9793, file: !2092, line: 237, type: !9796)
!9801 = !DILocation(line: 0, scope: !9793)
!9802 = !DILocation(line: 239, column: 17, scope: !9793)
!9803 = !DILocation(line: 239, column: 23, scope: !9793)
!9804 = !DILocation(line: 239, column: 33, scope: !9793)
!9805 = !DILocation(line: 239, column: 43, scope: !9793)
!9806 = !DILocation(line: 239, column: 36, scope: !9793)
!9807 = !DILocation(line: 239, column: 10, scope: !9793)
!9808 = !DILocation(line: 239, column: 68, scope: !9793)
!9809 = !DILocation(line: 239, column: 3, scope: !9793)
!9810 = distinct !DISubprogram(name: "gimple_seq_first", scope: !2092, file: !2092, line: 159, type: !9811, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9816)
!9811 = !DISubroutineType(types: !9812)
!9812 = !{!2223, !9813}
!9813 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !2168, line: 67, baseType: !9814)
!9814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9815, size: 64)
!9815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2220)
!9816 = !{!9817}
!9817 = !DILocalVariable(name: "s", arg: 1, scope: !9810, file: !2092, line: 159, type: !9813)
!9818 = !DILocation(line: 0, scope: !9810)
!9819 = !DILocation(line: 161, column: 10, scope: !9810)
!9820 = !DILocation(line: 161, column: 17, scope: !9810)
!9821 = !DILocation(line: 161, column: 3, scope: !9810)
!9822 = distinct !DISubprogram(name: "gimple_uid", scope: !2092, file: !2092, line: 1265, type: !9823, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9825)
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!5, !4825}
!9825 = !{!9826}
!9826 = !DILocalVariable(name: "g", arg: 1, scope: !9822, file: !2092, line: 1265, type: !4825)
!9827 = !DILocation(line: 0, scope: !9822)
!9828 = !DILocation(line: 1267, column: 20, scope: !9822)
!9829 = !DILocation(line: 1267, column: 3, scope: !9822)
!9830 = distinct !DISubprogram(name: "VEC_vec_void_p_base_length", scope: !389, file: !389, line: 614, type: !9831, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9835)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!5, !9833}
!9833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9834, size: 64)
!9834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3918)
!9835 = !{!9836}
!9836 = !DILocalVariable(name: "vec_", arg: 1, scope: !9830, file: !389, line: 614, type: !9833)
!9837 = !DILocation(line: 0, scope: !9830)
!9838 = !DILocation(line: 614, column: 1, scope: !9830)
!9839 = distinct !DISubprogram(name: "VEC_vec_void_p_base_index", scope: !389, file: !389, line: 614, type: !9840, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9842)
!9840 = !DISubroutineType(types: !9841)
!9841 = !{!3912, !9833, !5}
!9842 = !{!9843, !9844}
!9843 = !DILocalVariable(name: "vec_", arg: 1, scope: !9839, file: !389, line: 614, type: !9833)
!9844 = !DILocalVariable(name: "ix_", arg: 2, scope: !9839, file: !389, line: 614, type: !5)
!9845 = !DILocation(line: 0, scope: !9839)
!9846 = !DILocation(line: 614, column: 1, scope: !9839)
!9847 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !2092, file: !2092, line: 3061, type: !9823, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9848)
!9848 = !{!9849}
!9849 = !DILocalVariable(name: "gs", arg: 1, scope: !9847, file: !2092, line: 3061, type: !4825)
!9850 = !DILocation(line: 0, scope: !9847)
!9851 = !DILocation(line: 3064, column: 25, scope: !9847)
!9852 = !DILocation(line: 3064, column: 3, scope: !9847)
!9853 = distinct !DISubprogram(name: "exist_non_indexing_operands_for_use_p", scope: !1, file: !1, line: 171, type: !9854, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9856)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!2166, !2354, !2167}
!9856 = !{!9857, !9858, !9859, !9860}
!9857 = !DILocalVariable(name: "use", arg: 1, scope: !9853, file: !1, line: 171, type: !2354)
!9858 = !DILocalVariable(name: "stmt", arg: 2, scope: !9853, file: !1, line: 171, type: !2167)
!9859 = !DILocalVariable(name: "operand", scope: !9853, file: !1, line: 173, type: !2354)
!9860 = !DILocalVariable(name: "stmt_info", scope: !9853, file: !1, line: 174, type: !3562)
!9861 = !DILocation(line: 0, scope: !9853)
!9862 = !DILocation(line: 174, column: 29, scope: !9853)
!9863 = !DILocation(line: 179, column: 8, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9853, file: !1, line: 179, column: 7)
!9865 = !DILocation(line: 179, column: 7, scope: !9853)
!9866 = !DILocation(line: 195, column: 8, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9853, file: !1, line: 195, column: 7)
!9868 = !DILocation(line: 195, column: 7, scope: !9853)
!9869 = !DILocation(line: 197, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9853, file: !1, line: 197, column: 7)
!9871 = !DILocation(line: 197, column: 44, scope: !9870)
!9872 = !DILocation(line: 197, column: 7, scope: !9853)
!9873 = !DILocation(line: 199, column: 13, scope: !9853)
!9874 = !DILocation(line: 200, column: 7, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9853, file: !1, line: 200, column: 7)
!9876 = !DILocation(line: 200, column: 27, scope: !9875)
!9877 = !DILocation(line: 200, column: 7, scope: !9853)
!9878 = !DILocation(line: 203, column: 15, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9853, file: !1, line: 203, column: 7)
!9880 = !DILocation(line: 207, column: 1, scope: !9853)
!9881 = distinct !DISubprogram(name: "gimple_set_op", scope: !2092, file: !2092, line: 1663, type: !9882, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9884)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{null, !2167, !5, !2354}
!9884 = !{!9885, !9886, !9887}
!9885 = !DILocalVariable(name: "gs", arg: 1, scope: !9881, file: !2092, line: 1663, type: !2167)
!9886 = !DILocalVariable(name: "i", arg: 2, scope: !9881, file: !2092, line: 1663, type: !5)
!9887 = !DILocalVariable(name: "op", arg: 3, scope: !9881, file: !2092, line: 1663, type: !2354)
!9888 = !DILocation(line: 0, scope: !9881)
!9889 = !DILocation(line: 1665, column: 3, scope: !9881)
!9890 = !DILocation(line: 1671, column: 3, scope: !9881)
!9891 = !DILocation(line: 1671, column: 22, scope: !9881)
!9892 = !DILocation(line: 1672, column: 1, scope: !9881)
!9893 = distinct !DISubprogram(name: "gimple_num_ops", scope: !2092, file: !2092, line: 1596, type: !9823, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9894)
!9894 = !{!9895}
!9895 = !DILocalVariable(name: "gs", arg: 1, scope: !9893, file: !2092, line: 1596, type: !4825)
!9896 = !DILocation(line: 0, scope: !9893)
!9897 = !DILocation(line: 1598, column: 21, scope: !9893)
!9898 = !DILocation(line: 1598, column: 3, scope: !9893)
!9899 = distinct !DISubprogram(name: "gimple_ops", scope: !2092, file: !2092, line: 1614, type: !5901, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9900)
!9900 = !{!9901, !9902}
!9901 = !DILocalVariable(name: "gs", arg: 1, scope: !9899, file: !2092, line: 1614, type: !2167)
!9902 = !DILocalVariable(name: "off", scope: !9899, file: !2092, line: 1616, type: !2674)
!9903 = !DILocation(line: 0, scope: !9899)
!9904 = !DILocation(line: 1621, column: 28, scope: !9899)
!9905 = !DILocation(line: 1621, column: 9, scope: !9899)
!9906 = !DILocation(line: 1622, column: 3, scope: !9899)
!9907 = !DILocation(line: 1624, column: 20, scope: !9899)
!9908 = !DILocation(line: 1624, column: 32, scope: !9899)
!9909 = !DILocation(line: 1624, column: 10, scope: !9899)
!9910 = !DILocation(line: 1624, column: 3, scope: !9899)
!9911 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !2092, file: !2092, line: 1073, type: !9912, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9914)
!9912 = !DISubroutineType(types: !9913)
!9913 = !{!2130, !2167}
!9914 = !{!9915}
!9915 = !DILocalVariable(name: "gs", arg: 1, scope: !9911, file: !2092, line: 1073, type: !2167)
!9916 = !DILocation(line: 0, scope: !9911)
!9917 = !DILocation(line: 1075, column: 24, scope: !9911)
!9918 = !DILocation(line: 1075, column: 10, scope: !9911)
!9919 = !DILocation(line: 1075, column: 3, scope: !9911)
!9920 = distinct !DISubprogram(name: "gss_for_code", scope: !2092, file: !2092, line: 1061, type: !9921, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9923)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{!2130, !2091}
!9923 = !{!9924}
!9924 = !DILocalVariable(name: "code", arg: 1, scope: !9920, file: !2092, line: 1061, type: !2091)
!9925 = !DILocation(line: 0, scope: !9920)
!9926 = !DILocation(line: 1066, column: 10, scope: !9920)
!9927 = !DILocation(line: 1066, column: 3, scope: !9920)
!9928 = distinct !DISubprogram(name: "gimple_op", scope: !2092, file: !2092, line: 1631, type: !9929, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9931)
!9929 = !DISubroutineType(types: !9930)
!9930 = !{!2354, !4825, !5}
!9931 = !{!9932, !9933}
!9932 = !DILocalVariable(name: "gs", arg: 1, scope: !9928, file: !2092, line: 1631, type: !4825)
!9933 = !DILocalVariable(name: "i", arg: 2, scope: !9928, file: !2092, line: 1631, type: !5)
!9934 = !DILocation(line: 0, scope: !9928)
!9935 = !DILocation(line: 1633, column: 7, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9928, file: !2092, line: 1633, column: 7)
!9937 = !DILocation(line: 1633, column: 7, scope: !9928)
!9938 = !DILocation(line: 1638, column: 14, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9936, file: !2092, line: 1634, column: 5)
!9940 = !DILocation(line: 1638, column: 7, scope: !9939)
!9941 = !DILocation(line: 0, scope: !9936)
!9942 = !DILocation(line: 1642, column: 1, scope: !9928)
!9943 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !2092, file: !2092, line: 3100, type: !9944, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9947)
!9944 = !DISubroutineType(types: !9945)
!9945 = !{!9946, !2167, !5}
!9946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!9947 = !{!9948, !9949}
!9948 = !DILocalVariable(name: "gs", arg: 1, scope: !9943, file: !2092, line: 3100, type: !2167)
!9949 = !DILocalVariable(name: "index", arg: 2, scope: !9943, file: !2092, line: 3100, type: !5)
!9950 = !DILocation(line: 0, scope: !9943)
!9951 = !DILocation(line: 3103, column: 3, scope: !9943)
!9952 = !DILocation(line: 3104, column: 12, scope: !9943)
!9953 = !DILocation(line: 3104, column: 3, scope: !9943)
!9954 = distinct !DISubprogram(name: "gimple_set_uid", scope: !2092, file: !2092, line: 1256, type: !9955, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9957)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{null, !2167, !5}
!9957 = !{!9958, !9959}
!9958 = !DILocalVariable(name: "g", arg: 1, scope: !9954, file: !2092, line: 1256, type: !2167)
!9959 = !DILocalVariable(name: "uid", arg: 2, scope: !9954, file: !2092, line: 1256, type: !5)
!9960 = !DILocation(line: 0, scope: !9954)
!9961 = !DILocation(line: 1258, column: 13, scope: !9954)
!9962 = !DILocation(line: 1258, column: 17, scope: !9954)
!9963 = !DILocation(line: 1259, column: 1, scope: !9954)
!9964 = distinct !DISubprogram(name: "VEC_vec_void_p_heap_safe_push", scope: !389, file: !389, line: 615, type: !9965, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9968)
!9965 = !DISubroutineType(types: !9966)
!9966 = !{!9967, !9221, !3912}
!9967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!9968 = !{!9969, !9970}
!9969 = !DILocalVariable(name: "vec_", arg: 1, scope: !9964, file: !389, line: 615, type: !9221)
!9970 = !DILocalVariable(name: "obj_", arg: 2, scope: !9964, file: !389, line: 615, type: !3912)
!9971 = !DILocation(line: 0, scope: !9964)
!9972 = !DILocation(line: 615, column: 1, scope: !9964)
!9973 = distinct !DISubprogram(name: "VEC_vec_void_p_base_replace", scope: !389, file: !389, line: 614, type: !9974, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9977)
!9974 = !DISubroutineType(types: !9975)
!9975 = !{!3912, !9976, !5, !3912}
!9976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!9977 = !{!9978, !9979, !9980, !9981}
!9978 = !DILocalVariable(name: "vec_", arg: 1, scope: !9973, file: !389, line: 614, type: !9976)
!9979 = !DILocalVariable(name: "ix_", arg: 2, scope: !9973, file: !389, line: 614, type: !5)
!9980 = !DILocalVariable(name: "obj_", arg: 3, scope: !9973, file: !389, line: 614, type: !3912)
!9981 = !DILocalVariable(name: "old_obj_", scope: !9973, file: !389, line: 614, type: !3912)
!9982 = !DILocation(line: 0, scope: !9973)
!9983 = !DILocation(line: 614, column: 1, scope: !9973)
!9984 = distinct !DISubprogram(name: "VEC_vec_void_p_heap_reserve", scope: !389, file: !389, line: 615, type: !9985, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9987)
!9985 = !DISubroutineType(types: !9986)
!9986 = !{!2256, !9221, !2256}
!9987 = !{!9988, !9989, !9990}
!9988 = !DILocalVariable(name: "vec_", arg: 1, scope: !9984, file: !389, line: 615, type: !9221)
!9989 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9984, file: !389, line: 615, type: !2256)
!9990 = !DILocalVariable(name: "extend", scope: !9984, file: !389, line: 615, type: !2256)
!9991 = !DILocation(line: 0, scope: !9984)
!9992 = !DILocation(line: 615, column: 1, scope: !9984)
!9993 = !DILocation(line: 615, column: 1, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9984, file: !389, line: 615, column: 1)
!9995 = distinct !DISubprogram(name: "VEC_vec_void_p_base_quick_push", scope: !389, file: !389, line: 614, type: !9996, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !9998)
!9996 = !DISubroutineType(types: !9997)
!9997 = !{!9967, !9976, !3912}
!9998 = !{!9999, !10000, !10001}
!9999 = !DILocalVariable(name: "vec_", arg: 1, scope: !9995, file: !389, line: 614, type: !9976)
!10000 = !DILocalVariable(name: "obj_", arg: 2, scope: !9995, file: !389, line: 614, type: !3912)
!10001 = !DILocalVariable(name: "slot_", scope: !9995, file: !389, line: 614, type: !9967)
!10002 = !DILocation(line: 0, scope: !9995)
!10003 = !DILocation(line: 614, column: 1, scope: !9995)
!10004 = distinct !DISubprogram(name: "VEC_vec_void_p_base_space", scope: !389, file: !389, line: 614, type: !10005, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10007)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{!2256, !9976, !2256}
!10007 = !{!10008, !10009}
!10008 = !DILocalVariable(name: "vec_", arg: 1, scope: !10004, file: !389, line: 614, type: !9976)
!10009 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10004, file: !389, line: 614, type: !2256)
!10010 = !DILocation(line: 0, scope: !10004)
!10011 = !DILocation(line: 614, column: 1, scope: !10004)
!10012 = distinct !DISubprogram(name: "gimple_call_fn", scope: !2092, file: !2092, line: 1911, type: !5497, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10013)
!10013 = !{!10014}
!10014 = !DILocalVariable(name: "gs", arg: 1, scope: !10012, file: !2092, line: 1911, type: !4825)
!10015 = !DILocation(line: 0, scope: !10012)
!10016 = !DILocation(line: 1914, column: 10, scope: !10012)
!10017 = !DILocation(line: 1914, column: 3, scope: !10012)
!10018 = distinct !DISubprogram(name: "gimple_expr_code", scope: !2092, file: !2092, line: 1438, type: !6293, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10019)
!10019 = !{!10020, !10021}
!10020 = !DILocalVariable(name: "stmt", arg: 1, scope: !10018, file: !2092, line: 1438, type: !4825)
!10021 = !DILocalVariable(name: "code", scope: !10018, file: !2092, line: 1440, type: !2091)
!10022 = !DILocation(line: 0, scope: !10018)
!10023 = !DILocation(line: 1440, column: 27, scope: !10018)
!10024 = !DILocation(line: 1441, column: 29, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10018, file: !2092, line: 1441, column: 7)
!10026 = !DILocation(line: 1442, column: 42, scope: !10025)
!10027 = !DILocation(line: 1442, column: 5, scope: !10025)
!10028 = !DILocation(line: 1446, column: 5, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10025, file: !2092, line: 1443, column: 12)
!10030 = !DILocation(line: 1448, column: 5, scope: !10018)
!10031 = !DILocation(line: 1450, column: 1, scope: !10018)
!10032 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !2092, file: !2092, line: 1686, type: !10033, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10035)
!10033 = !DISubroutineType(types: !10034)
!10034 = !{!2156, !181}
!10035 = !{!10036}
!10036 = !DILocalVariable(name: "code", arg: 1, scope: !10032, file: !2092, line: 1686, type: !181)
!10037 = !DILocation(line: 0, scope: !10032)
!10038 = !DILocation(line: 1688, column: 34, scope: !10032)
!10039 = !DILocation(line: 1688, column: 10, scope: !10032)
!10040 = !DILocation(line: 1688, column: 3, scope: !10032)
!10041 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !2092, file: !2092, line: 1966, type: !5497, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10042)
!10042 = !{!10043, !10044, !10045}
!10043 = !DILocalVariable(name: "gs", arg: 1, scope: !10041, file: !2092, line: 1966, type: !4825)
!10044 = !DILocalVariable(name: "fn", scope: !10041, file: !2092, line: 1968, type: !2354)
!10045 = !DILocalVariable(name: "type", scope: !10041, file: !2092, line: 1969, type: !2354)
!10046 = !DILocation(line: 0, scope: !10041)
!10047 = !DILocation(line: 1968, column: 13, scope: !10041)
!10048 = !DILocation(line: 1969, column: 15, scope: !10041)
!10049 = !DILocation(line: 1972, column: 10, scope: !10041)
!10050 = !DILocation(line: 1976, column: 10, scope: !10041)
!10051 = !DILocation(line: 1976, column: 3, scope: !10041)
!10052 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !2092, file: !2092, line: 1759, type: !5497, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10053)
!10053 = !{!10054}
!10054 = !DILocalVariable(name: "gs", arg: 1, scope: !10052, file: !2092, line: 1759, type: !4825)
!10055 = !DILocation(line: 0, scope: !10052)
!10056 = !DILocation(line: 1763, column: 7, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10052, file: !2092, line: 1763, column: 7)
!10058 = !DILocation(line: 1763, column: 27, scope: !10057)
!10059 = !DILocation(line: 1763, column: 7, scope: !10052)
!10060 = !DILocation(line: 1764, column: 12, scope: !10057)
!10061 = !DILocation(line: 1764, column: 5, scope: !10057)
!10062 = !DILocation(line: 0, scope: !10057)
!10063 = !DILocation(line: 1767, column: 1, scope: !10052)
!10064 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !149, file: !149, line: 182, type: !10065, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10069)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!5, !10067}
!10067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10068, size: 64)
!10068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2718)
!10069 = !{!10070}
!10070 = !DILocalVariable(name: "vec_", arg: 1, scope: !10064, file: !149, line: 182, type: !10067)
!10071 = !DILocation(line: 0, scope: !10064)
!10072 = !DILocation(line: 182, column: 1, scope: !10064)
!10073 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !149, file: !149, line: 182, type: !10074, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10076)
!10074 = !DISubroutineType(types: !10075)
!10075 = !{!2256, !10067, !5, !2765}
!10076 = !{!10077, !10078, !10079}
!10077 = !DILocalVariable(name: "vec_", arg: 1, scope: !10073, file: !149, line: 182, type: !10067)
!10078 = !DILocalVariable(name: "ix_", arg: 2, scope: !10073, file: !149, line: 182, type: !5)
!10079 = !DILocalVariable(name: "ptr", arg: 3, scope: !10073, file: !149, line: 182, type: !2765)
!10080 = !DILocation(line: 0, scope: !10073)
!10081 = !DILocation(line: 182, column: 1, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10073, file: !149, line: 182, column: 1)
!10083 = !DILocation(line: 182, column: 1, scope: !10073)
!10084 = !DILocation(line: 182, column: 1, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10082, file: !149, line: 182, column: 1)
!10086 = !DILocation(line: 182, column: 1, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10082, file: !149, line: 182, column: 1)
!10088 = !DILocation(line: 0, scope: !10082)
!10089 = distinct !DISubprogram(name: "vect_pow2", scope: !389, file: !389, line: 719, type: !4023, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10090)
!10090 = !{!10091, !10092, !10093}
!10091 = !DILocalVariable(name: "x", arg: 1, scope: !10089, file: !389, line: 719, type: !2256)
!10092 = !DILocalVariable(name: "i", scope: !10089, file: !389, line: 721, type: !2256)
!10093 = !DILocalVariable(name: "res", scope: !10089, file: !389, line: 721, type: !2256)
!10094 = !DILocation(line: 0, scope: !10089)
!10095 = !DILocation(line: 723, column: 8, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10089, file: !389, line: 723, column: 3)
!10097 = !DILocation(line: 0, scope: !10096)
!10098 = !DILocation(line: 723, column: 17, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10096, file: !389, line: 723, column: 3)
!10100 = !DILocation(line: 723, column: 3, scope: !10096)
!10101 = !DILocation(line: 724, column: 9, scope: !10099)
!10102 = !DILocation(line: 723, column: 23, scope: !10099)
!10103 = !DILocation(line: 723, column: 3, scope: !10099)
!10104 = distinct !{!10104, !10100, !10105}
!10105 = !DILocation(line: 724, column: 12, scope: !10096)
!10106 = !DILocation(line: 726, column: 3, scope: !10089)
!10107 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !149, file: !149, line: 182, type: !10108, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10110)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{!2354, !9450, !5, !2354}
!10110 = !{!10111, !10112, !10113, !10114}
!10111 = !DILocalVariable(name: "vec_", arg: 1, scope: !10107, file: !149, line: 182, type: !9450)
!10112 = !DILocalVariable(name: "ix_", arg: 2, scope: !10107, file: !149, line: 182, type: !5)
!10113 = !DILocalVariable(name: "obj_", arg: 3, scope: !10107, file: !149, line: 182, type: !2354)
!10114 = !DILocalVariable(name: "old_obj_", scope: !10107, file: !149, line: 182, type: !2354)
!10115 = !DILocation(line: 0, scope: !10107)
!10116 = !DILocation(line: 182, column: 1, scope: !10107)
!10117 = distinct !DISubprogram(name: "VEC_tree_heap_copy", scope: !149, file: !149, line: 184, type: !10118, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10120)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{!3603, !9450}
!10120 = !{!10121, !10122, !10123}
!10121 = !DILocalVariable(name: "vec_", arg: 1, scope: !10117, file: !149, line: 184, type: !9450)
!10122 = !DILocalVariable(name: "len_", scope: !10117, file: !149, line: 184, type: !2674)
!10123 = !DILocalVariable(name: "new_vec_", scope: !10117, file: !149, line: 184, type: !3603)
!10124 = !DILocation(line: 0, scope: !10117)
!10125 = !DILocation(line: 184, column: 1, scope: !10117)
!10126 = !DILocation(line: 184, column: 1, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10117, file: !149, line: 184, column: 1)
!10128 = !DILocation(line: 184, column: 1, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10127, file: !149, line: 184, column: 1)
!10130 = distinct !DISubprogram(name: "vect_create_vectorized_promotion_stmts", scope: !1, file: !1, line: 2558, type: !10131, scopeLine: 2567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10134)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{null, !9255, !9255, !2256, !2167, !3603, !3524, !3532, !181, !181, !2354, !2354, !2256, !10133}
!10133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!10134 = !{!10135, !10136, !10137, !10138, !10139, !10140, !10141, !10142, !10143, !10144, !10145, !10146, !10147, !10148, !10149, !10150, !10151, !10152, !10153, !10154, !10155, !10156, !10157}
!10135 = !DILocalVariable(name: "vec_oprnds0", arg: 1, scope: !10130, file: !1, line: 2558, type: !9255)
!10136 = !DILocalVariable(name: "vec_oprnds1", arg: 2, scope: !10130, file: !1, line: 2559, type: !9255)
!10137 = !DILocalVariable(name: "multi_step_cvt", arg: 3, scope: !10130, file: !1, line: 2560, type: !2256)
!10138 = !DILocalVariable(name: "stmt", arg: 4, scope: !10130, file: !1, line: 2560, type: !2167)
!10139 = !DILocalVariable(name: "vec_dsts", arg: 5, scope: !10130, file: !1, line: 2561, type: !3603)
!10140 = !DILocalVariable(name: "gsi", arg: 6, scope: !10130, file: !1, line: 2562, type: !3524)
!10141 = !DILocalVariable(name: "slp_node", arg: 7, scope: !10130, file: !1, line: 2563, type: !3532)
!10142 = !DILocalVariable(name: "code1", arg: 8, scope: !10130, file: !1, line: 2563, type: !181)
!10143 = !DILocalVariable(name: "code2", arg: 9, scope: !10130, file: !1, line: 2564, type: !181)
!10144 = !DILocalVariable(name: "decl1", arg: 10, scope: !10130, file: !1, line: 2564, type: !2354)
!10145 = !DILocalVariable(name: "decl2", arg: 11, scope: !10130, file: !1, line: 2565, type: !2354)
!10146 = !DILocalVariable(name: "op_type", arg: 12, scope: !10130, file: !1, line: 2565, type: !2256)
!10147 = !DILocalVariable(name: "prev_stmt_info", arg: 13, scope: !10130, file: !1, line: 2566, type: !10133)
!10148 = !DILocalVariable(name: "i", scope: !10130, file: !1, line: 2568, type: !2256)
!10149 = !DILocalVariable(name: "vop0", scope: !10130, file: !1, line: 2569, type: !2354)
!10150 = !DILocalVariable(name: "vop1", scope: !10130, file: !1, line: 2569, type: !2354)
!10151 = !DILocalVariable(name: "new_tmp1", scope: !10130, file: !1, line: 2569, type: !2354)
!10152 = !DILocalVariable(name: "new_tmp2", scope: !10130, file: !1, line: 2569, type: !2354)
!10153 = !DILocalVariable(name: "vec_dest", scope: !10130, file: !1, line: 2569, type: !2354)
!10154 = !DILocalVariable(name: "new_stmt1", scope: !10130, file: !1, line: 2570, type: !2167)
!10155 = !DILocalVariable(name: "new_stmt2", scope: !10130, file: !1, line: 2570, type: !2167)
!10156 = !DILocalVariable(name: "stmt_info", scope: !10130, file: !1, line: 2571, type: !3562)
!10157 = !DILocalVariable(name: "vec_tmp", scope: !10130, file: !1, line: 2572, type: !3603)
!10158 = !DILocation(line: 0, scope: !10130)
!10159 = !DILocation(line: 2569, column: 3, scope: !10130)
!10160 = !DILocation(line: 2571, column: 29, scope: !10130)
!10161 = !DILocation(line: 2572, column: 3, scope: !10130)
!10162 = !DILocation(line: 2574, column: 14, scope: !10130)
!10163 = !DILocation(line: 2575, column: 13, scope: !10130)
!10164 = !DILocation(line: 2575, column: 11, scope: !10130)
!10165 = !DILocation(line: 0, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !1, line: 2579, column: 11)
!10167 = distinct !DILexicalBlock(scope: !10168, file: !1, line: 2578, column: 5)
!10168 = distinct !DILexicalBlock(scope: !10169, file: !1, line: 2577, column: 3)
!10169 = distinct !DILexicalBlock(scope: !10130, file: !1, line: 2577, column: 3)
!10170 = !DILocation(line: 0, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10167, file: !1, line: 2600, column: 11)
!10172 = !DILocation(line: 0, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10174, file: !1, line: 2609, column: 15)
!10174 = distinct !DILexicalBlock(scope: !10171, file: !1, line: 2607, column: 9)
!10175 = !DILocation(line: 0, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10173, file: !1, line: 2610, column: 13)
!10177 = !DILocation(line: 0, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10179, file: !1, line: 2616, column: 19)
!10179 = distinct !DILexicalBlock(scope: !10173, file: !1, line: 2615, column: 13)
!10180 = !DILocation(line: 2577, column: 8, scope: !10169)
!10181 = !DILocation(line: 0, scope: !10169)
!10182 = !DILocation(line: 2577, column: 15, scope: !10168)
!10183 = !DILocation(line: 2577, column: 3, scope: !10169)
!10184 = !DILocation(line: 2579, column: 11, scope: !10167)
!10185 = !DILocation(line: 2580, column: 16, scope: !10166)
!10186 = !DILocation(line: 2580, column: 9, scope: !10166)
!10187 = !DILocation(line: 2585, column: 64, scope: !10167)
!10188 = !DILocation(line: 2585, column: 19, scope: !10167)
!10189 = !DILocation(line: 2587, column: 64, scope: !10167)
!10190 = !DILocation(line: 2587, column: 19, scope: !10167)
!10191 = !DILocation(line: 2589, column: 11, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10167, file: !1, line: 2589, column: 11)
!10193 = !DILocation(line: 2589, column: 11, scope: !10167)
!10194 = !DILocation(line: 2591, column: 22, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10192, file: !1, line: 2590, column: 9)
!10196 = !DILocation(line: 2592, column: 22, scope: !10195)
!10197 = !DILocation(line: 2593, column: 9, scope: !10195)
!10198 = !DILocation(line: 2596, column: 22, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10192, file: !1, line: 2595, column: 9)
!10200 = !DILocation(line: 2597, column: 22, scope: !10199)
!10201 = !DILocation(line: 0, scope: !10192)
!10202 = !DILocation(line: 2600, column: 11, scope: !10167)
!10203 = !DILocation(line: 2603, column: 11, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10171, file: !1, line: 2601, column: 9)
!10205 = !DILocation(line: 2604, column: 11, scope: !10204)
!10206 = !DILocation(line: 2605, column: 9, scope: !10204)
!10207 = !DILocation(line: 2609, column: 15, scope: !10174)
!10208 = !DILocation(line: 2611, column: 15, scope: !10176)
!10209 = !DILocation(line: 2612, column: 15, scope: !10176)
!10210 = !DILocation(line: 2613, column: 13, scope: !10176)
!10211 = !DILocation(line: 2616, column: 20, scope: !10178)
!10212 = !DILocation(line: 2616, column: 19, scope: !10179)
!10213 = !DILocation(line: 2617, column: 49, scope: !10178)
!10214 = !DILocation(line: 2617, column: 17, scope: !10178)
!10215 = !DILocation(line: 2619, column: 17, scope: !10178)
!10216 = !DILocation(line: 2619, column: 59, scope: !10178)
!10217 = !DILocation(line: 2621, column: 33, scope: !10179)
!10218 = !DILocation(line: 2621, column: 31, scope: !10179)
!10219 = !DILocation(line: 2622, column: 15, scope: !10179)
!10220 = !DILocation(line: 2622, column: 57, scope: !10179)
!10221 = !DILocation(line: 2623, column: 33, scope: !10179)
!10222 = !DILocation(line: 2623, column: 31, scope: !10179)
!10223 = !DILocation(line: 2577, column: 59, scope: !10168)
!10224 = !DILocation(line: 2577, column: 3, scope: !10168)
!10225 = distinct !{!10225, !10183, !10226}
!10226 = !DILocation(line: 2626, column: 5, scope: !10169)
!10227 = !DILocation(line: 2628, column: 7, scope: !10130)
!10228 = !DILocation(line: 2634, column: 22, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10230, file: !1, line: 2629, column: 5)
!10230 = distinct !DILexicalBlock(scope: !10130, file: !1, line: 2628, column: 7)
!10231 = !DILocation(line: 2634, column: 20, scope: !10229)
!10232 = !DILocation(line: 2635, column: 7, scope: !10229)
!10233 = !DILocation(line: 2637, column: 62, scope: !10229)
!10234 = !DILocation(line: 2636, column: 7, scope: !10229)
!10235 = !DILocation(line: 2641, column: 5, scope: !10229)
!10236 = !DILocation(line: 2642, column: 1, scope: !10130)
!10237 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !149, file: !149, line: 184, type: !10238, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10240)
!10238 = !DISubroutineType(types: !10239)
!10239 = !{null, !9255}
!10240 = !{!10241}
!10241 = !DILocalVariable(name: "vec_", arg: 1, scope: !10237, file: !149, line: 184, type: !9255)
!10242 = !DILocation(line: 0, scope: !10237)
!10243 = !DILocation(line: 184, column: 1, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10237, file: !149, line: 184, column: 1)
!10245 = !DILocation(line: 184, column: 1, scope: !10237)
!10246 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !149, file: !149, line: 182, type: !10247, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10249)
!10247 = !DISubroutineType(types: !10248)
!10248 = !{!2354, !9450}
!10249 = !{!10250, !10251}
!10250 = !DILocalVariable(name: "vec_", arg: 1, scope: !10246, file: !149, line: 182, type: !9450)
!10251 = !DILocalVariable(name: "obj_", scope: !10246, file: !149, line: 182, type: !2354)
!10252 = !DILocation(line: 0, scope: !10246)
!10253 = !DILocation(line: 182, column: 1, scope: !10246)
!10254 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !149, file: !149, line: 182, type: !10255, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10257)
!10255 = !DISubroutineType(types: !10256)
!10256 = !{!2354, !10067, !5}
!10257 = !{!10258, !10259}
!10258 = !DILocalVariable(name: "vec_", arg: 1, scope: !10254, file: !149, line: 182, type: !10067)
!10259 = !DILocalVariable(name: "ix_", arg: 2, scope: !10254, file: !149, line: 182, type: !5)
!10260 = !DILocation(line: 0, scope: !10254)
!10261 = !DILocation(line: 182, column: 1, scope: !10254)
!10262 = distinct !DISubprogram(name: "vect_gen_widened_results_half", scope: !1, file: !1, line: 1491, type: !10263, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10265)
!10263 = !DISubroutineType(types: !10264)
!10264 = !{!2167, !181, !2354, !2354, !2354, !2256, !2354, !3524, !2167}
!10265 = !{!10266, !10267, !10268, !10269, !10270, !10271, !10272, !10273, !10274, !10275}
!10266 = !DILocalVariable(name: "code", arg: 1, scope: !10262, file: !1, line: 1491, type: !181)
!10267 = !DILocalVariable(name: "decl", arg: 2, scope: !10262, file: !1, line: 1492, type: !2354)
!10268 = !DILocalVariable(name: "vec_oprnd0", arg: 3, scope: !10262, file: !1, line: 1493, type: !2354)
!10269 = !DILocalVariable(name: "vec_oprnd1", arg: 4, scope: !10262, file: !1, line: 1493, type: !2354)
!10270 = !DILocalVariable(name: "op_type", arg: 5, scope: !10262, file: !1, line: 1493, type: !2256)
!10271 = !DILocalVariable(name: "vec_dest", arg: 6, scope: !10262, file: !1, line: 1494, type: !2354)
!10272 = !DILocalVariable(name: "gsi", arg: 7, scope: !10262, file: !1, line: 1494, type: !3524)
!10273 = !DILocalVariable(name: "stmt", arg: 8, scope: !10262, file: !1, line: 1495, type: !2167)
!10274 = !DILocalVariable(name: "new_stmt", scope: !10262, file: !1, line: 1497, type: !2167)
!10275 = !DILocalVariable(name: "new_temp", scope: !10262, file: !1, line: 1498, type: !2354)
!10276 = !DILocation(line: 0, scope: !10262)
!10277 = !DILocation(line: 1501, column: 12, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10262, file: !1, line: 1501, column: 7)
!10279 = !DILocation(line: 1501, column: 7, scope: !10262)
!10280 = !DILocation(line: 1504, column: 19, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10282, file: !1, line: 1504, column: 11)
!10282 = distinct !DILexicalBlock(scope: !10278, file: !1, line: 1502, column: 5)
!10283 = !DILocation(line: 1504, column: 11, scope: !10282)
!10284 = !DILocation(line: 1505, column: 13, scope: !10281)
!10285 = !DILocation(line: 1505, column: 2, scope: !10281)
!10286 = !DILocation(line: 1507, column: 13, scope: !10281)
!10287 = !DILocation(line: 0, scope: !10281)
!10288 = !DILocation(line: 1508, column: 18, scope: !10282)
!10289 = !DILocation(line: 1509, column: 7, scope: !10282)
!10290 = !DILocation(line: 1510, column: 5, scope: !10282)
!10291 = !DILocation(line: 1514, column: 7, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10278, file: !1, line: 1512, column: 5)
!10293 = !DILocation(line: 1515, column: 19, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10292, file: !1, line: 1515, column: 11)
!10295 = !DILocation(line: 1515, column: 11, scope: !10292)
!10296 = !DILocation(line: 1517, column: 18, scope: !10292)
!10297 = !DILocation(line: 1519, column: 18, scope: !10292)
!10298 = !DILocation(line: 1520, column: 7, scope: !10292)
!10299 = !DILocation(line: 0, scope: !10278)
!10300 = !DILocation(line: 1522, column: 3, scope: !10262)
!10301 = !DILocation(line: 1524, column: 3, scope: !10262)
!10302 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !2092, file: !2092, line: 1898, type: !5418, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10303)
!10303 = !{!10304, !10305}
!10304 = !DILocalVariable(name: "gs", arg: 1, scope: !10302, file: !2092, line: 1898, type: !2167)
!10305 = !DILocalVariable(name: "lhs", arg: 2, scope: !10302, file: !2092, line: 1898, type: !2354)
!10306 = !DILocation(line: 0, scope: !10302)
!10307 = !DILocation(line: 1901, column: 3, scope: !10302)
!10308 = !DILocation(line: 1902, column: 7, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10302, file: !2092, line: 1902, column: 7)
!10310 = !DILocation(line: 1902, column: 11, scope: !10309)
!10311 = !DILocation(line: 1902, column: 14, scope: !10309)
!10312 = !DILocation(line: 1902, column: 30, scope: !10309)
!10313 = !DILocation(line: 1902, column: 7, scope: !10302)
!10314 = !DILocation(line: 1903, column: 5, scope: !10309)
!10315 = !DILocation(line: 1903, column: 29, scope: !10309)
!10316 = !DILocation(line: 1904, column: 1, scope: !10302)
!10317 = distinct !DISubprogram(name: "vect_get_loop_based_defs", scope: !1, file: !1, line: 2284, type: !10318, scopeLine: 2286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10320)
!10318 = !DISubroutineType(types: !10319)
!10319 = !{null, !2765, !2167, !411, !9255, !2256}
!10320 = !{!10321, !10322, !10323, !10324, !10325, !10326}
!10321 = !DILocalVariable(name: "oprnd", arg: 1, scope: !10317, file: !1, line: 2284, type: !2765)
!10322 = !DILocalVariable(name: "stmt", arg: 2, scope: !10317, file: !1, line: 2284, type: !2167)
!10323 = !DILocalVariable(name: "dt", arg: 3, scope: !10317, file: !1, line: 2284, type: !411)
!10324 = !DILocalVariable(name: "vec_oprnds", arg: 4, scope: !10317, file: !1, line: 2285, type: !9255)
!10325 = !DILocalVariable(name: "multi_step_cvt", arg: 5, scope: !10317, file: !1, line: 2285, type: !2256)
!10326 = !DILocalVariable(name: "vec_oprnd", scope: !10317, file: !1, line: 2287, type: !2354)
!10327 = !DILocation(line: 0, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10317, file: !1, line: 2292, column: 7)
!10329 = !DILocation(line: 2292, column: 7, scope: !10328)
!10330 = !DILocation(line: 2308, column: 5, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10317, file: !1, line: 2307, column: 7)
!10332 = !DILocation(line: 0, scope: !10317)
!10333 = !DILocation(line: 2292, column: 38, scope: !10328)
!10334 = !DILocation(line: 2292, column: 7, scope: !10317)
!10335 = !DILocation(line: 2293, column: 17, scope: !10328)
!10336 = !DILocation(line: 2293, column: 5, scope: !10328)
!10337 = !DILocation(line: 2295, column: 17, scope: !10328)
!10338 = !DILocation(line: 2297, column: 3, scope: !10317)
!10339 = !DILocation(line: 2300, column: 15, scope: !10317)
!10340 = !DILocation(line: 2301, column: 3, scope: !10317)
!10341 = !DILocation(line: 2303, column: 10, scope: !10317)
!10342 = !DILocation(line: 2307, column: 7, scope: !10331)
!10343 = !DILocation(line: 2307, column: 7, scope: !10317)
!10344 = !DILocation(line: 2308, column: 76, scope: !10331)
!10345 = !DILocation(line: 2309, column: 1, scope: !10317)
!10346 = distinct !DISubprogram(name: "vect_create_vectorized_demotion_stmts", scope: !1, file: !1, line: 2317, type: !10347, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10349)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !9255, !2256, !2167, !3603, !3524, !3532, !181, !10133}
!10349 = !{!10350, !10351, !10352, !10353, !10354, !10355, !10356, !10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364}
!10350 = !DILocalVariable(name: "vec_oprnds", arg: 1, scope: !10346, file: !1, line: 2317, type: !9255)
!10351 = !DILocalVariable(name: "multi_step_cvt", arg: 2, scope: !10346, file: !1, line: 2318, type: !2256)
!10352 = !DILocalVariable(name: "stmt", arg: 3, scope: !10346, file: !1, line: 2318, type: !2167)
!10353 = !DILocalVariable(name: "vec_dsts", arg: 4, scope: !10346, file: !1, line: 2319, type: !3603)
!10354 = !DILocalVariable(name: "gsi", arg: 5, scope: !10346, file: !1, line: 2320, type: !3524)
!10355 = !DILocalVariable(name: "slp_node", arg: 6, scope: !10346, file: !1, line: 2321, type: !3532)
!10356 = !DILocalVariable(name: "code", arg: 7, scope: !10346, file: !1, line: 2321, type: !181)
!10357 = !DILocalVariable(name: "prev_stmt_info", arg: 8, scope: !10346, file: !1, line: 2322, type: !10133)
!10358 = !DILocalVariable(name: "i", scope: !10346, file: !1, line: 2324, type: !5)
!10359 = !DILocalVariable(name: "vop0", scope: !10346, file: !1, line: 2325, type: !2354)
!10360 = !DILocalVariable(name: "vop1", scope: !10346, file: !1, line: 2325, type: !2354)
!10361 = !DILocalVariable(name: "new_tmp", scope: !10346, file: !1, line: 2325, type: !2354)
!10362 = !DILocalVariable(name: "vec_dest", scope: !10346, file: !1, line: 2325, type: !2354)
!10363 = !DILocalVariable(name: "new_stmt", scope: !10346, file: !1, line: 2326, type: !2167)
!10364 = !DILocalVariable(name: "stmt_info", scope: !10346, file: !1, line: 2327, type: !3562)
!10365 = !DILocation(line: 0, scope: !10346)
!10366 = !DILocation(line: 0, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10368, file: !1, line: 2349, column: 15)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !1, line: 2345, column: 9)
!10369 = distinct !DILexicalBlock(scope: !10370, file: !1, line: 2341, column: 11)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !1, line: 2332, column: 5)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !1, line: 2331, column: 3)
!10372 = distinct !DILexicalBlock(scope: !10346, file: !1, line: 2331, column: 3)
!10373 = !DILocation(line: 2372, column: 7, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10375, file: !1, line: 2368, column: 5)
!10375 = distinct !DILexicalBlock(scope: !10346, file: !1, line: 2367, column: 7)
!10376 = !DILocation(line: 2327, column: 29, scope: !10346)
!10377 = !DILocation(line: 2329, column: 14, scope: !10346)
!10378 = !DILocation(line: 0, scope: !10369)
!10379 = !DILocation(line: 0, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !1, line: 2353, column: 19)
!10381 = distinct !DILexicalBlock(scope: !10367, file: !1, line: 2352, column: 13)
!10382 = !DILocation(line: 2331, column: 8, scope: !10372)
!10383 = !DILocation(line: 0, scope: !10372)
!10384 = !DILocation(line: 2331, column: 19, scope: !10371)
!10385 = !DILocation(line: 2331, column: 17, scope: !10371)
!10386 = !DILocation(line: 2331, column: 3, scope: !10372)
!10387 = !DILocation(line: 2334, column: 14, scope: !10370)
!10388 = !DILocation(line: 2335, column: 14, scope: !10370)
!10389 = !DILocation(line: 2336, column: 18, scope: !10370)
!10390 = !DILocation(line: 2337, column: 17, scope: !10370)
!10391 = !DILocation(line: 2338, column: 7, scope: !10370)
!10392 = !DILocation(line: 2339, column: 7, scope: !10370)
!10393 = !DILocation(line: 2349, column: 15, scope: !10368)
!10394 = !DILocation(line: 2350, column: 13, scope: !10367)
!10395 = !DILocation(line: 2353, column: 20, scope: !10380)
!10396 = !DILocation(line: 2353, column: 19, scope: !10381)
!10397 = !DILocation(line: 2356, column: 17, scope: !10380)
!10398 = !DILocation(line: 2356, column: 59, scope: !10380)
!10399 = !DILocation(line: 2354, column: 49, scope: !10380)
!10400 = !DILocation(line: 2354, column: 17, scope: !10380)
!10401 = !DILocation(line: 2358, column: 33, scope: !10381)
!10402 = !DILocation(line: 2358, column: 31, scope: !10381)
!10403 = !DILocation(line: 2331, column: 53, scope: !10371)
!10404 = !DILocation(line: 2331, column: 3, scope: !10371)
!10405 = distinct !{!10405, !10386, !10406}
!10406 = !DILocation(line: 2361, column: 5, scope: !10372)
!10407 = !DILocation(line: 2367, column: 7, scope: !10375)
!10408 = !DILocation(line: 2343, column: 9, scope: !10369)
!10409 = !DILocation(line: 2367, column: 7, scope: !10346)
!10410 = !DILocation(line: 2371, column: 7, scope: !10374)
!10411 = !DILocation(line: 2372, column: 73, scope: !10374)
!10412 = !DILocation(line: 2376, column: 1, scope: !10346)
!10413 = distinct !DISubprogram(name: "VEC_tree_base_truncate", scope: !149, file: !149, line: 182, type: !10414, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10416)
!10414 = !DISubroutineType(types: !10415)
!10415 = !{null, !9450, !5}
!10416 = !{!10417, !10418}
!10417 = !DILocalVariable(name: "vec_", arg: 1, scope: !10413, file: !149, line: 182, type: !9450)
!10418 = !DILocalVariable(name: "size_", arg: 2, scope: !10413, file: !149, line: 182, type: !5)
!10419 = !DILocation(line: 0, scope: !10413)
!10420 = !DILocation(line: 182, column: 1, scope: !10413)
!10421 = !DILocation(line: 182, column: 1, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10413, file: !149, line: 182, column: 1)
!10423 = distinct !DISubprogram(name: "vect_get_vec_defs", scope: !1, file: !1, line: 1138, type: !10424, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10426)
!10424 = !DISubroutineType(types: !10425)
!10425 = !{null, !2354, !2354, !2167, !9255, !9255, !3532}
!10426 = !{!10427, !10428, !10429, !10430, !10431, !10432, !10433}
!10427 = !DILocalVariable(name: "op0", arg: 1, scope: !10423, file: !1, line: 1138, type: !2354)
!10428 = !DILocalVariable(name: "op1", arg: 2, scope: !10423, file: !1, line: 1138, type: !2354)
!10429 = !DILocalVariable(name: "stmt", arg: 3, scope: !10423, file: !1, line: 1138, type: !2167)
!10430 = !DILocalVariable(name: "vec_oprnds0", arg: 4, scope: !10423, file: !1, line: 1139, type: !9255)
!10431 = !DILocalVariable(name: "vec_oprnds1", arg: 5, scope: !10423, file: !1, line: 1139, type: !9255)
!10432 = !DILocalVariable(name: "slp_node", arg: 6, scope: !10423, file: !1, line: 1140, type: !3532)
!10433 = !DILocalVariable(name: "vec_oprnd", scope: !10434, file: !1, line: 1146, type: !2354)
!10434 = distinct !DILexicalBlock(scope: !10435, file: !1, line: 1145, column: 5)
!10435 = distinct !DILexicalBlock(scope: !10423, file: !1, line: 1142, column: 7)
!10436 = !DILocation(line: 0, scope: !10423)
!10437 = !DILocation(line: 1142, column: 7, scope: !10435)
!10438 = !DILocation(line: 1142, column: 7, scope: !10423)
!10439 = !DILocation(line: 1143, column: 5, scope: !10435)
!10440 = !DILocation(line: 1148, column: 22, scope: !10434)
!10441 = !DILocation(line: 1148, column: 20, scope: !10434)
!10442 = !DILocation(line: 1149, column: 19, scope: !10434)
!10443 = !DILocation(line: 0, scope: !10434)
!10444 = !DILocation(line: 1150, column: 7, scope: !10434)
!10445 = !DILocation(line: 1152, column: 11, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10434, file: !1, line: 1152, column: 11)
!10447 = !DILocation(line: 1152, column: 11, scope: !10434)
!10448 = !DILocation(line: 1154, column: 19, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10446, file: !1, line: 1153, column: 2)
!10450 = !DILocation(line: 1154, column: 17, scope: !10449)
!10451 = !DILocation(line: 1155, column: 16, scope: !10449)
!10452 = !DILocation(line: 1156, column: 4, scope: !10449)
!10453 = !DILocation(line: 1157, column: 2, scope: !10449)
!10454 = !DILocation(line: 1159, column: 1, scope: !10423)
!10455 = distinct !DISubprogram(name: "vect_get_vec_defs_for_stmt_copy", scope: !1, file: !1, line: 1117, type: !10456, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10458)
!10456 = !DISubroutineType(types: !10457)
!10457 = !{null, !5086, !9255, !9255}
!10458 = !{!10459, !10460, !10461, !10462}
!10459 = !DILocalVariable(name: "dt", arg: 1, scope: !10455, file: !1, line: 1117, type: !5086)
!10460 = !DILocalVariable(name: "vec_oprnds0", arg: 2, scope: !10455, file: !1, line: 1118, type: !9255)
!10461 = !DILocalVariable(name: "vec_oprnds1", arg: 3, scope: !10455, file: !1, line: 1119, type: !9255)
!10462 = !DILocalVariable(name: "vec_oprnd", scope: !10455, file: !1, line: 1121, type: !2354)
!10463 = !DILocation(line: 0, scope: !10455)
!10464 = !DILocation(line: 1121, column: 20, scope: !10455)
!10465 = !DILocation(line: 1123, column: 47, scope: !10455)
!10466 = !DILocation(line: 1123, column: 15, scope: !10455)
!10467 = !DILocation(line: 1124, column: 3, scope: !10455)
!10468 = !DILocation(line: 1126, column: 7, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10455, file: !1, line: 1126, column: 7)
!10470 = !DILocation(line: 1126, column: 19, scope: !10469)
!10471 = !DILocation(line: 1126, column: 22, scope: !10469)
!10472 = !DILocation(line: 1126, column: 7, scope: !10455)
!10473 = !DILocation(line: 1128, column: 19, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10469, file: !1, line: 1127, column: 5)
!10475 = !DILocation(line: 1129, column: 51, scope: !10474)
!10476 = !DILocation(line: 1129, column: 19, scope: !10474)
!10477 = !DILocation(line: 1130, column: 7, scope: !10474)
!10478 = !DILocation(line: 1131, column: 5, scope: !10474)
!10479 = !DILocation(line: 1132, column: 1, scope: !10455)
!10480 = distinct !DISubprogram(name: "aligned_access_p", scope: !389, file: !389, line: 739, type: !10481, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10483)
!10481 = !DISubroutineType(types: !10482)
!10482 = !{!2166, !3582}
!10483 = !{!10484}
!10484 = !DILocalVariable(name: "data_ref_info", arg: 1, scope: !10480, file: !389, line: 739, type: !3582)
!10485 = !DILocation(line: 0, scope: !10480)
!10486 = !DILocation(line: 741, column: 11, scope: !10480)
!10487 = !DILocation(line: 741, column: 43, scope: !10480)
!10488 = !DILocation(line: 741, column: 10, scope: !10480)
!10489 = !DILocation(line: 741, column: 3, scope: !10480)
!10490 = distinct !DISubprogram(name: "gimple_set_vdef", scope: !2092, file: !2092, line: 1414, type: !5418, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10491)
!10491 = !{!10492, !10493}
!10492 = !DILocalVariable(name: "g", arg: 1, scope: !10490, file: !2092, line: 1414, type: !2167)
!10493 = !DILocalVariable(name: "vdef", arg: 2, scope: !10490, file: !2092, line: 1414, type: !2354)
!10494 = !DILocation(line: 0, scope: !10490)
!10495 = !DILocation(line: 1416, column: 3, scope: !10490)
!10496 = !DILocation(line: 1417, column: 16, scope: !10490)
!10497 = !DILocation(line: 1417, column: 21, scope: !10490)
!10498 = !DILocation(line: 1418, column: 1, scope: !10490)
!10499 = distinct !DISubprogram(name: "gimple_set_vuse", scope: !2092, file: !2092, line: 1405, type: !5418, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10500)
!10500 = !{!10501, !10502}
!10501 = !DILocalVariable(name: "g", arg: 1, scope: !10499, file: !2092, line: 1405, type: !2167)
!10502 = !DILocalVariable(name: "vuse", arg: 2, scope: !10499, file: !2092, line: 1405, type: !2354)
!10503 = !DILocation(line: 0, scope: !10499)
!10504 = !DILocation(line: 1407, column: 3, scope: !10499)
!10505 = !DILocation(line: 1408, column: 16, scope: !10499)
!10506 = !DILocation(line: 1408, column: 21, scope: !10499)
!10507 = !DILocation(line: 1409, column: 1, scope: !10499)
!10508 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !2092, file: !2092, line: 2013, type: !9823, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10509)
!10509 = !{!10510, !10511}
!10510 = !DILocalVariable(name: "gs", arg: 1, scope: !10508, file: !2092, line: 2013, type: !4825)
!10511 = !DILocalVariable(name: "num_ops", scope: !10508, file: !2092, line: 2015, type: !5)
!10512 = !DILocation(line: 0, scope: !10508)
!10513 = !DILocation(line: 2017, column: 13, scope: !10508)
!10514 = !DILocation(line: 2018, column: 18, scope: !10508)
!10515 = !DILocation(line: 2018, column: 3, scope: !10508)
!10516 = distinct !DISubprogram(name: "gimple_call_arg", scope: !2092, file: !2092, line: 2025, type: !9929, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10517)
!10517 = !{!10518, !10519}
!10518 = !DILocalVariable(name: "gs", arg: 1, scope: !10516, file: !2092, line: 2025, type: !4825)
!10519 = !DILocalVariable(name: "index", arg: 2, scope: !10516, file: !2092, line: 2025, type: !5)
!10520 = !DILocation(line: 0, scope: !10516)
!10521 = !DILocation(line: 2028, column: 31, scope: !10516)
!10522 = !DILocation(line: 2028, column: 10, scope: !10516)
!10523 = !DILocation(line: 2028, column: 3, scope: !10516)
!10524 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !133, file: !133, line: 150, type: !10525, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !10529)
!10525 = !DISubroutineType(types: !10526)
!10526 = !{!5, !10527}
!10527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10528, size: 64)
!10528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2201)
!10529 = !{!10530}
!10530 = !DILocalVariable(name: "vec_", arg: 1, scope: !10524, file: !133, line: 150, type: !10527)
!10531 = !DILocation(line: 0, scope: !10524)
!10532 = !DILocation(line: 150, column: 1, scope: !10524)
