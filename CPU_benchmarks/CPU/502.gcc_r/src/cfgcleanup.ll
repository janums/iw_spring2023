; ModuleID = 'cfgcleanup.bc'
source_filename = "cfgcleanup.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.replace_label_data = type { %struct.rtx_def*, %struct.rtx_def*, i8 }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str = private unnamed_addr constant [13 x i8] c"cfgcleanup.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [27 x i8] c"Dead jumptable %i removed\0A\00", align 1
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@crossjumps_occured = internal unnamed_addr global i1 false, align 1, !dbg !0
@.str.3 = private unnamed_addr constant [8 x i8] c"sibling\00", align 1
@pass_jump = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_jump, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 119, i32 0, i32 0, i32 0, i32 2, i32 8 } }, align 8, !dbg !1916
@.str.4 = private unnamed_addr constant [5 x i8] c"jump\00", align 1
@pass_jump2 = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_jump2, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 119, i32 0, i32 0, i32 0, i32 2, i32 1025 } }, align 8, !dbg !1944
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@first_pass = internal unnamed_addr global i1 false, align 1, !dbg !1949
@.str.5 = private unnamed_addr constant [34 x i8] c"\0A\0Atry_optimize_cfg iteration %i\0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Deleted label in block %i.\0A\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"Deleting fallthru block %i.\0A\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"Merged %d and %d without moving.\0A\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"Moved block %d after %d and merged.\0A\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"Moved block %d before %d and merged.\0A\00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c"Simplifying condjump %i around jump %i\0A\00", align 1
@optimize = external dso_local local_unnamed_addr global i32, align 4
@.str.13 = private unnamed_addr constant [25 x i8] c"Infinite loop in BB %i.\0A\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"Conditionals threaded.\0A\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"Forwarding edge %i->%i to %i failed.\0A\00", align 1
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@flag_reorder_blocks_and_partition = external dso_local local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [33 x i8] c"Splitting bb %i before %i insns\0A\00", align 1
@.str.17 = private unnamed_addr constant [52 x i8] c"Cross jumping from bb %i to bb %i; %i common insns\0A\00", align 1
@.str.18 = private unnamed_addr constant [60 x i8] c"Outcomes of branch in bb %i and %i differ too much (%i %i)\0A\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"Conditionals in bb %i and %i match.\0A\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"Tablejumps in bb %i and %i match.\0A\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@flag_thread_jumps = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1954 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1967, metadata !DIExpression()), !dbg !1969
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1968, metadata !DIExpression()), !dbg !1969
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1970
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1971
  ret i32 %call, !dbg !1972
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1973 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1977
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1978
  ret i32 %call, !dbg !1979
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1980 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2034, metadata !DIExpression()), !dbg !2035
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2036
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2036
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2036
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2036
  %cmp = icmp uge i8* %0, %1, !dbg !2036
  %conv1 = zext i1 %cmp to i64, !dbg !2036
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2036
  %tobool = icmp eq i64 %expval, 0, !dbg !2036
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2036

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2036
  br label %cond.end, !dbg !2036

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2036
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2036
  %2 = load i8, i8* %0, align 1, !dbg !2036
  %conv3 = zext i8 %2 to i32, !dbg !2036
  br label %cond.end, !dbg !2036

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2036
  ret i32 %cond, !dbg !2037
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2038 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2040, metadata !DIExpression()), !dbg !2041
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2042
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2042
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2042
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2042
  %cmp = icmp uge i8* %0, %1, !dbg !2042
  %conv1 = zext i1 %cmp to i64, !dbg !2042
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2042
  %tobool = icmp eq i64 %expval, 0, !dbg !2042
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2042

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2042
  br label %cond.end, !dbg !2042

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2042
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2042
  %2 = load i8, i8* %0, align 1, !dbg !2042
  %conv3 = zext i8 %2 to i32, !dbg !2042
  br label %cond.end, !dbg !2042

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2042
  ret i32 %cond, !dbg !2043
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2044 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2045
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2045
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2045
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2045
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2045
  %cmp = icmp uge i8* %1, %2, !dbg !2045
  %conv1 = zext i1 %cmp to i64, !dbg !2045
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2045
  %tobool = icmp eq i64 %expval, 0, !dbg !2045
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2045

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2045
  br label %cond.end, !dbg !2045

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2045
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2045
  %3 = load i8, i8* %1, align 1, !dbg !2045
  %conv3 = zext i8 %3 to i32, !dbg !2045
  br label %cond.end, !dbg !2045

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2045
  ret i32 %cond, !dbg !2046
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2047 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2051, metadata !DIExpression()), !dbg !2052
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2053
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2054
  ret i32 %call, !dbg !2055
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2056 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2060, metadata !DIExpression()), !dbg !2062
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2061, metadata !DIExpression()), !dbg !2062
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2063
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2063
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2063
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2063
  %cmp = icmp uge i8* %0, %1, !dbg !2063
  %conv1 = zext i1 %cmp to i64, !dbg !2063
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2063
  %tobool = icmp eq i64 %expval, 0, !dbg !2063
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2063

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2063
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2063
  br label %cond.end, !dbg !2063

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2063
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2063
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2063
  store i8 %conv2, i8* %0, align 1, !dbg !2063
  %conv6 = and i32 %__c, 255, !dbg !2063
  br label %cond.end, !dbg !2063

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2063
  ret i32 %cond, !dbg !2064
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2065 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2067, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2068, metadata !DIExpression()), !dbg !2069
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2070
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2070
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2070
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2070
  %cmp = icmp uge i8* %0, %1, !dbg !2070
  %conv1 = zext i1 %cmp to i64, !dbg !2070
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2070
  %tobool = icmp eq i64 %expval, 0, !dbg !2070
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2070

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2070
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2070
  br label %cond.end, !dbg !2070

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2070
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2070
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2070
  store i8 %conv2, i8* %0, align 1, !dbg !2070
  %conv6 = and i32 %__c, 255, !dbg !2070
  br label %cond.end, !dbg !2070

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2070
  ret i32 %cond, !dbg !2071
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2072 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2074, metadata !DIExpression()), !dbg !2075
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2076
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2076
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2076
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2076
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2076
  %cmp = icmp uge i8* %1, %2, !dbg !2076
  %conv1 = zext i1 %cmp to i64, !dbg !2076
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2076
  %tobool = icmp eq i64 %expval, 0, !dbg !2076
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2076

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2076
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2076
  br label %cond.end, !dbg !2076

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2076
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2076
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2076
  store i8 %conv4, i8* %1, align 1, !dbg !2076
  %conv6 = and i32 %__c, 255, !dbg !2076
  br label %cond.end, !dbg !2076

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2076
  ret i32 %cond, !dbg !2077
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2078 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2084, metadata !DIExpression()), !dbg !2087
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2085, metadata !DIExpression()), !dbg !2087
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2086, metadata !DIExpression()), !dbg !2087
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2088
  ret i64 %call, !dbg !2089
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2090 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2092, metadata !DIExpression()), !dbg !2093
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2094
  %0 = load i32, i32* %_flags, align 8, !dbg !2094
  %and = lshr i32 %0, 4, !dbg !2094
  %and.lobit = and i32 %and, 1, !dbg !2094
  ret i32 %and.lobit, !dbg !2095
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2096 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2098, metadata !DIExpression()), !dbg !2099
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2100
  %0 = load i32, i32* %_flags, align 8, !dbg !2100
  %and = lshr i32 %0, 5, !dbg !2100
  %and.lobit = and i32 %and, 1, !dbg !2100
  ret i32 %and.lobit, !dbg !2101
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2102 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2105, metadata !DIExpression()), !dbg !2106
  %__c.off = add i32 %__c, 128, !dbg !2107
  %0 = icmp ult i32 %__c.off, 384, !dbg !2107
  br i1 %0, label %cond.true, label %cond.end, !dbg !2107

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2108
  %1 = load i32*, i32** %call, align 8, !dbg !2109
  %idxprom = sext i32 %__c to i64, !dbg !2110
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2110
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2110
  br label %cond.end, !dbg !2111

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2111
  ret i32 %cond, !dbg !2112
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2113 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2115, metadata !DIExpression()), !dbg !2116
  %__c.off = add i32 %__c, 128, !dbg !2117
  %0 = icmp ult i32 %__c.off, 384, !dbg !2117
  br i1 %0, label %cond.true, label %cond.end, !dbg !2117

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2118
  %1 = load i32*, i32** %call, align 8, !dbg !2119
  %idxprom = sext i32 %__c to i64, !dbg !2120
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2120
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2120
  br label %cond.end, !dbg !2121

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2121
  ret i32 %cond, !dbg !2122
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2123 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2128, metadata !DIExpression()), !dbg !2129
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2130
  %conv = trunc i64 %call to i32, !dbg !2131
  ret i32 %conv, !dbg !2132
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2133 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2137, metadata !DIExpression()), !dbg !2138
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2139
  ret i64 %call, !dbg !2140
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2141 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2146, metadata !DIExpression()), !dbg !2147
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2148
  ret i64 %call, !dbg !2149
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2150 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2156, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2157, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2158, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2159, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2160, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i64 0, metadata !2161, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2162, metadata !DIExpression()), !dbg !2166
  br label %while.cond, !dbg !2167

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2168
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2166
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2162, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2161, metadata !DIExpression()), !dbg !2166
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2169
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2167

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2170
  %div = lshr i64 %add, 1, !dbg !2172
  call void @llvm.dbg.value(metadata i64 %div, metadata !2163, metadata !DIExpression()), !dbg !2166
  %mul = mul i64 %div, %__size, !dbg !2173
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2174
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2164, metadata !DIExpression()), !dbg !2166
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2175
  call void @llvm.dbg.value(metadata i32 %call, metadata !2165, metadata !DIExpression()), !dbg !2166
  %cmp1 = icmp slt i32 %call, 0, !dbg !2176
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2178

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2179
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2181

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2182
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2161, metadata !DIExpression()), !dbg !2166
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2166
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2166
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2162, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2161, metadata !DIExpression()), !dbg !2166
  br label %while.cond, !dbg !2167, !llvm.loop !2183

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2166
  ret i8* %retval.0, !dbg !2185
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2186 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2192, metadata !DIExpression()), !dbg !2193
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2194
  ret double %call, !dbg !2195
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2196 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2205, metadata !DIExpression()), !dbg !2208
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2206, metadata !DIExpression()), !dbg !2208
  call void @llvm.dbg.value(metadata i32 %base, metadata !2207, metadata !DIExpression()), !dbg !2208
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2209
  ret i64 %call, !dbg !2210
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2211 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2217, metadata !DIExpression()), !dbg !2220
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2218, metadata !DIExpression()), !dbg !2220
  call void @llvm.dbg.value(metadata i32 %base, metadata !2219, metadata !DIExpression()), !dbg !2220
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2221
  ret i64 %call, !dbg !2222
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2223 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2234, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2235, metadata !DIExpression()), !dbg !2237
  call void @llvm.dbg.value(metadata i32 %base, metadata !2236, metadata !DIExpression()), !dbg !2237
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2238
  ret i64 %call, !dbg !2239
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2240 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2244, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2245, metadata !DIExpression()), !dbg !2247
  call void @llvm.dbg.value(metadata i32 %base, metadata !2246, metadata !DIExpression()), !dbg !2247
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2248
  ret i64 %call, !dbg !2249
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2250 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2290, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2291, metadata !DIExpression()), !dbg !2292
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2293
  ret i32 %call, !dbg !2294
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2295 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2297, metadata !DIExpression()), !dbg !2299
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2298, metadata !DIExpression()), !dbg !2299
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2300
  ret i32 %call, !dbg !2301
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2302 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2306, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2307, metadata !DIExpression()), !dbg !2308
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2309
  ret i32 %call, !dbg !2310
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2311 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2315, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2316, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2317, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2318, metadata !DIExpression()), !dbg !2319
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2320
  ret i32 %call, !dbg !2321
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2322 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2326, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2327, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2328, metadata !DIExpression()), !dbg !2329
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2328, metadata !DIExpression(DW_OP_deref)), !dbg !2329
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2330
  ret i32 %call, !dbg !2331
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2332 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2336, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2337, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2338, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2339, metadata !DIExpression()), !dbg !2340
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2339, metadata !DIExpression(DW_OP_deref)), !dbg !2340
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2341
  ret i32 %call, !dbg !2342
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2343 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2367, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2368, metadata !DIExpression()), !dbg !2369
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2370
  ret i32 %call, !dbg !2371
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2372 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2374, metadata !DIExpression()), !dbg !2376
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2375, metadata !DIExpression()), !dbg !2376
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2377
  ret i32 %call, !dbg !2378
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2379 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2383, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2384, metadata !DIExpression()), !dbg !2385
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2386
  ret i32 %call, !dbg !2387
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2392, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2393, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2394, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2395, metadata !DIExpression()), !dbg !2396
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2397
  ret i32 %call, !dbg !2398
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @delete_unreachable_blocks() local_unnamed_addr #4 !dbg !2399 {
entry:
  %h = alloca %struct.VEC_basic_block_heap*, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !2401, metadata !DIExpression()), !dbg !2419
  tail call void @find_unreachable_blocks() #6, !dbg !2420
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2421
  %tobool = icmp eq i32 %0, 0, !dbg !2421
  br i1 %tobool, label %if.else35, label %land.lhs.true, !dbg !2422

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @current_ir_type() #6, !dbg !2423
  %cmp = icmp eq i32 %call, 0, !dbg !2424
  br i1 %cmp, label %land.lhs.true1, label %if.else35, !dbg !2425

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = tail call zeroext i8 @dom_info_available_p(i32 1) #6, !dbg !2426
  %tobool3 = icmp eq i8 %call2, 0, !dbg !2426
  br i1 %tobool3, label %if.else35, label %if.then, !dbg !2427

if.then:                                          ; preds = %land.lhs.true1
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2428
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2428
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2428
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !2428
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2428
  %prev_bb4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 5, !dbg !2429
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb4, align 8, !dbg !2429
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !2402, metadata !DIExpression()), !dbg !2419
  %5 = bitcast %struct.VEC_basic_block_heap** %h to i8*, !dbg !2430
  br label %for.cond, !dbg !2431

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = phi %struct.control_flow_graph* [ %2, %if.then ], [ %.pre2, %for.inc ], !dbg !2432
  %b.0 = phi %struct.basic_block_def* [ %4, %if.then ], [ %prev_bb.2, %for.inc ], !dbg !2433
  %changed.0 = phi i8 [ 0, %if.then ], [ %changed.1, %for.inc ], !dbg !2434
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.0, metadata !2402, metadata !DIExpression()), !dbg !2419
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 0, !dbg !2432
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2432
  %cmp7 = icmp eq %struct.basic_block_def* %b.0, %7, !dbg !2435
  br i1 %cmp7, label %if.end55.loopexit1, label %for.body, !dbg !2436

for.body:                                         ; preds = %for.cond
  %prev_bb9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 5, !dbg !2437
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb9, align 8, !dbg !2437
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !2403, metadata !DIExpression()), !dbg !2419
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 13, !dbg !2438
  %9 = load i32, i32* %flags, align 8, !dbg !2438
  %and = and i32 %9, 2, !dbg !2439
  %tobool10 = icmp eq i32 %and, 0, !dbg !2439
  br i1 %tobool10, label %if.then11, label %for.inc, !dbg !2440

if.then11:                                        ; preds = %for.body
  %call12 = call %struct.basic_block_def* @first_dom_son(i32 1, %struct.basic_block_def* %b.0) #6, !dbg !2441
  %tobool13 = icmp eq %struct.basic_block_def* %call12, null, !dbg !2441
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !2442

if.then14:                                        ; preds = %if.then11
  call void @delete_basic_block(%struct.basic_block_def* %b.0) #6, !dbg !2443
  br label %for.inc, !dbg !2443

if.else:                                          ; preds = %if.then11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !2444
  %call15 = call %struct.VEC_basic_block_heap* @get_all_dominated_blocks(i32 1, %struct.basic_block_def* %b.0) #6, !dbg !2445
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call15, metadata !2404, metadata !DIExpression()), !dbg !2430
  store %struct.VEC_basic_block_heap* %call15, %struct.VEC_basic_block_heap** %h, align 8, !dbg !2446
  br label %while.cond, !dbg !2447

while.cond:                                       ; preds = %cond.end32, %if.else
  %10 = phi %struct.VEC_basic_block_heap* [ %call15, %if.else ], [ %.pre3, %cond.end32 ], !dbg !2448
  %prev_bb.0 = phi %struct.basic_block_def* [ %8, %if.else ], [ %12, %cond.end32 ], !dbg !2449
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.0, metadata !2403, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %10, metadata !2404, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %10, metadata !2404, metadata !DIExpression()), !dbg !2430
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %10, i64 0, i32 0, !dbg !2448
  %call17 = call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %base) #8, !dbg !2448
  %tobool18 = icmp eq i32 %call17, 0, !dbg !2447
  br i1 %tobool18, label %while.end, label %while.body, !dbg !2447

while.body:                                       ; preds = %while.cond
  %11 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %h, align 8, !dbg !2450
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %11, metadata !2404, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %11, metadata !2404, metadata !DIExpression()), !dbg !2430
  %base21 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %11, i64 0, i32 0, !dbg !2450
  %call25 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_pop(%struct.VEC_basic_block_base* %base21) #8, !dbg !2450
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call25, metadata !2402, metadata !DIExpression()), !dbg !2419
  %prev_bb26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call25, i64 0, i32 5, !dbg !2452
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb26, align 8, !dbg !2452
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !2403, metadata !DIExpression()), !dbg !2419
  %flags27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call25, i64 0, i32 13, !dbg !2453
  %13 = load i32, i32* %flags27, align 8, !dbg !2453
  %and28 = and i32 %13, 2, !dbg !2453
  %tobool29 = icmp eq i32 %and28, 0, !dbg !2453
  br i1 %tobool29, label %cond.end32, label %cond.true30, !dbg !2453

cond.true30:                                      ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2095, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2453
  br label %cond.end32, !dbg !2453

cond.end32:                                       ; preds = %while.body, %cond.true30
  call void @delete_basic_block(%struct.basic_block_def* %call25) #6, !dbg !2454
  %.pre3 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %h, align 8, !dbg !2448
  br label %while.cond, !dbg !2447, !llvm.loop !2455

while.end:                                        ; preds = %while.cond
  %prev_bb.0.lcssa = phi %struct.basic_block_def* [ %prev_bb.0, %while.cond ], !dbg !2449
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.0.lcssa, metadata !2403, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.0.lcssa, metadata !2403, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.0.lcssa, metadata !2403, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %h, metadata !2404, metadata !DIExpression(DW_OP_deref)), !dbg !2430
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %h) #8, !dbg !2457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !2458
  br label %for.inc

for.inc:                                          ; preds = %for.body, %while.end, %if.then14
  %prev_bb.2 = phi %struct.basic_block_def* [ %8, %for.body ], [ %prev_bb.0.lcssa, %while.end ], [ %8, %if.then14 ], !dbg !2459
  %changed.1 = phi i8 [ %changed.0, %for.body ], [ 1, %while.end ], [ 1, %if.then14 ], !dbg !2419
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.2, metadata !2403, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %prev_bb.2, metadata !2402, metadata !DIExpression()), !dbg !2419
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2432
  %cfg6.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2460
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6.phi.trans.insert, align 8, !dbg !2432
  br label %for.cond, !dbg !2461, !llvm.loop !2462

if.else35:                                        ; preds = %land.lhs.true1, %entry, %land.lhs.true
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2464
  %cfg37 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !2464
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg37, align 8, !dbg !2464
  %x_exit_block_ptr38 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 1, !dbg !2464
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr38, align 8, !dbg !2464
  %prev_bb39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 5, !dbg !2467
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb39, align 8, !dbg !2467
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %17, metadata !2402, metadata !DIExpression()), !dbg !2419
  br label %for.cond40, !dbg !2468

for.cond40:                                       ; preds = %for.inc53, %if.else35
  %.pre46 = phi %struct.function* [ %14, %if.else35 ], [ %.pre4, %for.inc53 ]
  %18 = phi %struct.control_flow_graph* [ %15, %if.else35 ], [ %.pre5, %for.inc53 ], !dbg !2469
  %b.1 = phi %struct.basic_block_def* [ %17, %if.else35 ], [ %20, %for.inc53 ], !dbg !2471
  %changed.2 = phi i8 [ 0, %if.else35 ], [ %changed.3, %for.inc53 ], !dbg !2434
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.1, metadata !2402, metadata !DIExpression()), !dbg !2419
  %x_entry_block_ptr43 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 0, !dbg !2469
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr43, align 8, !dbg !2469
  %cmp44 = icmp eq %struct.basic_block_def* %b.1, %19, !dbg !2472
  br i1 %cmp44, label %if.end55.loopexit, label %for.body46, !dbg !2473

for.body46:                                       ; preds = %for.cond40
  %prev_bb47 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.1, i64 0, i32 5, !dbg !2474
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb47, align 8, !dbg !2474
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !2403, metadata !DIExpression()), !dbg !2419
  %flags48 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.1, i64 0, i32 13, !dbg !2476
  %21 = load i32, i32* %flags48, align 8, !dbg !2476
  %and49 = and i32 %21, 2, !dbg !2478
  %tobool50 = icmp eq i32 %and49, 0, !dbg !2478
  br i1 %tobool50, label %if.then51, label %for.inc53, !dbg !2479

if.then51:                                        ; preds = %for.body46
  tail call void @delete_basic_block(%struct.basic_block_def* %b.1) #6, !dbg !2480
  call void @llvm.dbg.value(metadata i8 1, metadata !2401, metadata !DIExpression()), !dbg !2419
  %.pre4.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2469
  br label %for.inc53, !dbg !2482

for.inc53:                                        ; preds = %for.body46, %if.then51
  %.pre4 = phi %struct.function* [ %.pre46, %for.body46 ], [ %.pre4.pre, %if.then51 ], !dbg !2469
  %changed.3 = phi i8 [ %changed.2, %for.body46 ], [ 1, %if.then51 ], !dbg !2419
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !2402, metadata !DIExpression()), !dbg !2419
  %cfg42.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre4, i64 0, i32 1, !dbg !2483
  %.pre5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg42.phi.trans.insert, align 8, !dbg !2469
  br label %for.cond40, !dbg !2484, !llvm.loop !2485

if.end55.loopexit:                                ; preds = %for.cond40
  %changed.2.lcssa = phi i8 [ %changed.2, %for.cond40 ], !dbg !2434
  call void @llvm.dbg.value(metadata i8 %changed.2.lcssa, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata i8 %changed.2.lcssa, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata i8 %changed.2.lcssa, metadata !2401, metadata !DIExpression()), !dbg !2419
  br label %if.end55, !dbg !2487

if.end55.loopexit1:                               ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !2434
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2401, metadata !DIExpression()), !dbg !2419
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2401, metadata !DIExpression()), !dbg !2419
  br label %if.end55, !dbg !2487

if.end55:                                         ; preds = %if.end55.loopexit1, %if.end55.loopexit
  %changed.4 = phi i8 [ %changed.2.lcssa, %if.end55.loopexit ], [ %changed.0.lcssa, %if.end55.loopexit1 ], !dbg !2434
  call void @llvm.dbg.value(metadata i8 %changed.4, metadata !2401, metadata !DIExpression()), !dbg !2419
  %tobool56 = icmp eq i8 %changed.4, 0, !dbg !2487
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !2489

if.then57:                                        ; preds = %if.end55
  call void @tidy_fallthru_edges() #6, !dbg !2490
  br label %if.end58, !dbg !2490

if.end58:                                         ; preds = %if.end55, %if.then57
  ret i8 %changed.4, !dbg !2491
}

declare dso_local void @find_unreachable_blocks() local_unnamed_addr #1

declare dso_local i32 @current_ir_type() local_unnamed_addr #1

declare dso_local zeroext i8 @dom_info_available_p(i32) local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @first_dom_son(i32, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @delete_basic_block(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.VEC_basic_block_heap* @get_all_dominated_blocks(i32, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !2492 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !2498, metadata !DIExpression()), !dbg !2499
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !2500
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2500

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !2500
  %0 = load i32, i32* %num, align 8, !dbg !2500
  br label %cond.end, !dbg !2500

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2500
  ret i32 %cond, !dbg !2500
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_pop(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !2501 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !2506, metadata !DIExpression()), !dbg !2508
  %num1 = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !2509
  %0 = load i32, i32* %num1, align 8, !dbg !2509
  %dec = add i32 %0, -1, !dbg !2509
  store i32 %dec, i32* %num1, align 8, !dbg !2509
  %idxprom = zext i32 %dec to i64, !dbg !2509
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2509
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2509
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !2507, metadata !DIExpression()), !dbg !2508
  ret %struct.basic_block_def* %1, !dbg !2509
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !2510 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !2515, metadata !DIExpression()), !dbg !2516
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !2517
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !2517
  br i1 %tobool, label %if.end, label %if.then, !dbg !2519

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !2519
  tail call void @free(i8* nonnull %1) #6, !dbg !2517
  br label %if.end, !dbg !2517

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !2519
  ret void, !dbg !2519
}

declare dso_local void @tidy_fallthru_edges() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @delete_dead_jumptables() local_unnamed_addr #4 !dbg !2520 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2537
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2537
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2537
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !2537
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2537
  br label %for.cond, !dbg !2537

for.cond:                                         ; preds = %for.inc58, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.inc58 ], !dbg !2538
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc58 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2539
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2539
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2524, metadata !DIExpression()), !dbg !2540
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !2538
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2538
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !2538
  br i1 %cmp, label %for.end60, label %for.body, !dbg !2537

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !2541
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2541
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2541
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 1, !dbg !2541
  %6 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2541
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2541
  %rt_rtx = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !2541
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2541
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !2525, metadata !DIExpression()), !dbg !2542
  br label %for.cond3, !dbg !2543

for.cond3:                                        ; preds = %for.inc, %for.body
  %insn.0 = phi %struct.rtx_def* [ %8, %for.body ], [ %next.0, %for.inc ], !dbg !2544
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2525, metadata !DIExpression()), !dbg !2542
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !2545
  br i1 %tobool, label %for.inc58, label %land.rhs, !dbg !2546

land.rhs:                                         ; preds = %for.cond3
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !2547
  %bf.load = load i32, i32* %9, align 8, !dbg !2547
  %bf.clear = and i32 %bf.load, 65535, !dbg !2547
  %cmp4 = icmp eq i32 %bf.clear, 13, !dbg !2547
  br i1 %cmp4, label %land.rhs5, label %land.end, !dbg !2547

land.rhs5:                                        ; preds = %land.rhs
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !2547
  %10 = getelementptr inbounds %union.u, %union.u* %u6, i64 1, i32 0, i32 0, i64 0, !dbg !2547
  %rt_int = bitcast %union.rtunion_def* %10 to i32*, !dbg !2547
  %11 = load i32, i32* %rt_int, align 8, !dbg !2547
  %cmp9 = icmp eq i32 %11, 10, !dbg !2547
  br label %land.end

land.end:                                         ; preds = %land.rhs5, %land.rhs
  %12 = phi i1 [ false, %land.rhs ], [ %cmp9, %land.rhs5 ], !dbg !2548
  br i1 %12, label %for.inc58, label %for.body11, !dbg !2549

for.body11:                                       ; preds = %land.end
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2550
  %rt_rtx15 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !2550
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !2550
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !2529, metadata !DIExpression()), !dbg !2542
  %cmp18 = icmp eq i32 %bf.clear, 12, !dbg !2551
  br i1 %cmp18, label %land.lhs.true, label %for.inc, !dbg !2552

land.lhs.true:                                    ; preds = %for.body11
  %arrayidx21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 2, !dbg !2553
  %rt_int22 = bitcast i64* %arrayidx21 to i32*, !dbg !2553
  %15 = load i32, i32* %rt_int22, align 8, !dbg !2553
  %bf.lshr = lshr i32 %bf.load, 28, !dbg !2554
  %bf.clear24 = and i32 %bf.lshr, 1, !dbg !2554
  %cmp25 = icmp eq i32 %15, %bf.clear24, !dbg !2555
  br i1 %cmp25, label %land.lhs.true26, label %for.inc, !dbg !2556

land.lhs.true26:                                  ; preds = %land.lhs.true
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 0, !dbg !2557
  %bf.load27 = load i32, i32* %16, align 8, !dbg !2557
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !2557
  %cmp29 = icmp eq i32 %bf.clear28, 9, !dbg !2557
  br i1 %cmp29, label %land.lhs.true30, label %for.inc, !dbg !2557

land.lhs.true30:                                  ; preds = %land.lhs.true26
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, !dbg !2557
  %17 = getelementptr inbounds %union.u, %union.u* %u31, i64 1, i32 0, i32 0, i64 0, !dbg !2557
  %18 = bitcast %union.rtunion_def* %17 to i32**, !dbg !2557
  %19 = load i32*, i32** %18, align 8, !dbg !2557
  %bf.load35 = load i32, i32* %19, align 8, !dbg !2557
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !2557
  %cmp37 = icmp eq i32 %bf.clear36, 20, !dbg !2557
  br i1 %cmp37, label %if.then, label %lor.lhs.false, !dbg !2557

lor.lhs.false:                                    ; preds = %land.lhs.true30
  %cmp44 = icmp eq i32 %bf.clear36, 21, !dbg !2557
  br i1 %cmp44, label %if.then, label %for.inc, !dbg !2558

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true30
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2530, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !2536, metadata !DIExpression()), !dbg !2559
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2560
  %tobool45 = icmp eq %struct._IO_FILE* %20, null, !dbg !2560
  br i1 %tobool45, label %if.end, label %if.then46, !dbg !2562

if.then46:                                        ; preds = %if.then
  %arrayidx49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2563
  %rt_int50 = bitcast %union.rtunion_def* %arrayidx49 to i32*, !dbg !2563
  %21 = load i32, i32* %rt_int50, align 8, !dbg !2563
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i32 %21) #6, !dbg !2564
  br label %if.end, !dbg !2564

if.end:                                           ; preds = %if.then, %if.then46
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2565
  %rt_rtx54 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !2565
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !2565
  call void @llvm.dbg.value(metadata %struct.rtx_def* %23, metadata !2529, metadata !DIExpression()), !dbg !2542
  %call55 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %14) #6, !dbg !2566
  %call56 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* nonnull %insn.0) #6, !dbg !2567
  br label %for.inc, !dbg !2568

for.inc:                                          ; preds = %for.body11, %land.lhs.true, %land.lhs.true26, %lor.lhs.false, %if.end
  %next.0 = phi %struct.rtx_def* [ %23, %if.end ], [ %14, %lor.lhs.false ], [ %14, %land.lhs.true26 ], [ %14, %land.lhs.true ], [ %14, %for.body11 ], !dbg !2569
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !2529, metadata !DIExpression()), !dbg !2542
  call void @llvm.dbg.value(metadata %struct.rtx_def* %next.0, metadata !2525, metadata !DIExpression()), !dbg !2542
  br label %for.cond3, !dbg !2570, !llvm.loop !2571

for.inc58:                                        ; preds = %land.end, %for.cond3
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2538
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2573
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !2538
  br label %for.cond, !dbg !2538, !llvm.loop !2574

for.end60:                                        ; preds = %for.cond
  ret void, !dbg !2576
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @cleanup_cfg(i32 %mode) local_unnamed_addr #4 !dbg !2577 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2581, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata i8 0, metadata !2582, metadata !DIExpression()), !dbg !2583
  %call = tail call i32 @current_ir_type() #6, !dbg !2584
  %cmp = icmp eq i32 %call, 2, !dbg !2586
  %or = or i32 %mode, 32, !dbg !2587
  %spec.select = select i1 %cmp, i32 %or, i32 %mode, !dbg !2588
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2581, metadata !DIExpression()), !dbg !2583
  %0 = load i8, i8* @timevar_enable, align 1, !dbg !2589
  %tobool = icmp eq i8 %0, 0, !dbg !2589
  br i1 %tobool, label %do.end, label %if.then1, !dbg !2592

if.then1:                                         ; preds = %entry
  tail call void @timevar_push_1(i32 23) #6, !dbg !2589
  br label %do.end, !dbg !2589

do.end:                                           ; preds = %entry, %if.then1
  %call3 = tail call zeroext i8 @delete_unreachable_blocks() #8, !dbg !2593
  %tobool4 = icmp eq i8 %call3, 0, !dbg !2593
  br i1 %tobool4, label %if.end13, label %if.then5, !dbg !2595

if.then5:                                         ; preds = %do.end
  call void @llvm.dbg.value(metadata i8 1, metadata !2582, metadata !DIExpression()), !dbg !2583
  %and = and i32 %spec.select, 16, !dbg !2596
  %1 = load i32, i32* @reload_completed, align 4, !dbg !2599
  %2 = or i32 %and, %1, !dbg !2600
  %3 = icmp eq i32 %2, 0, !dbg !2600
  br i1 %3, label %if.then8, label %if.end13, !dbg !2600

if.then8:                                         ; preds = %if.then5
  %call9 = tail call %struct.rtx_def* @get_insns() #6, !dbg !2601
  %call10 = tail call i32 @max_reg_num() #6, !dbg !2602
  %call11 = tail call i32 @delete_trivially_dead_insns(%struct.rtx_def* %call9, i32 %call10) #6, !dbg !2603
  br label %if.end13, !dbg !2603

if.end13:                                         ; preds = %if.then5, %do.end, %if.then8
  %changed.0 = phi i8 [ 0, %do.end ], [ 1, %if.then8 ], [ 1, %if.then5 ], !dbg !2583
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !2582, metadata !DIExpression()), !dbg !2583
  tail call void @compact_blocks() #6, !dbg !2604
  %and14 = and i32 %spec.select, 2, !dbg !2605
  %tobool15 = icmp eq i32 %and14, 0, !dbg !2605
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !2607

if.then16:                                        ; preds = %if.end13
  tail call void @add_noreturn_fake_exit_edges() #6, !dbg !2608
  br label %if.end17, !dbg !2608

if.end17:                                         ; preds = %if.end13, %if.then16
  %call18 = tail call zeroext i8 @dbg_cnt(i32 2) #6, !dbg !2609
  %tobool19 = icmp eq i8 %call18, 0, !dbg !2609
  br i1 %tobool19, label %cleanup, label %while.cond.preheader, !dbg !2611

while.cond.preheader:                             ; preds = %if.end17
  %and25 = and i32 %spec.select, 16, !dbg !2612
  %tobool26 = icmp eq i32 %and25, 0, !dbg !2612
  br i1 %tobool26, label %while.cond.preheader.split.us, label %while.cond.preheader.while.cond.preheader.split_crit_edge, !dbg !2615

while.cond.preheader.while.cond.preheader.split_crit_edge: ; preds = %while.cond.preheader
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !2582, metadata !DIExpression()), !dbg !2583
  %call22 = tail call fastcc zeroext i8 @try_optimize_cfg(i32 %spec.select) #8, !dbg !2616
  %tobool23 = icmp eq i8 %call22, 0, !dbg !2615
  br i1 %tobool23, label %while.end.us-lcssa, label %while.body, !dbg !2615

while.cond.preheader.split.us:                    ; preds = %while.cond.preheader
  %and28 = and i32 %spec.select, 1, !dbg !2617
  %tobool29 = icmp eq i32 %and28, 0, !dbg !2617
  br i1 %tobool29, label %while.cond.preheader.split.us.split.us, label %while.cond.preheader.split.us.while.cond.preheader.split.us.split_crit_edge, !dbg !2615

while.cond.preheader.split.us.while.cond.preheader.split.us.split_crit_edge: ; preds = %while.cond.preheader.split.us
  br label %while.cond.us, !dbg !2615

while.cond.preheader.split.us.split.us:           ; preds = %while.cond.preheader.split.us
  br label %while.cond.us.us, !dbg !2615

while.cond.us.us:                                 ; preds = %if.end46.us.us, %while.cond.preheader.split.us.split.us
  %changed.1.us.us = phi i8 [ 1, %if.end46.us.us ], [ %changed.0, %while.cond.preheader.split.us.split.us ], !dbg !2583
  call void @llvm.dbg.value(metadata i8 %changed.1.us.us, metadata !2582, metadata !DIExpression()), !dbg !2583
  %call22.us.us = tail call fastcc zeroext i8 @try_optimize_cfg(i32 %spec.select) #8, !dbg !2616
  %tobool23.us.us = icmp eq i8 %call22.us.us, 0, !dbg !2615
  br i1 %tobool23.us.us, label %while.end.us-lcssa.us.us-lcssa.us, label %while.body.us.us, !dbg !2615

while.body.us.us:                                 ; preds = %while.cond.us.us
  %call24.us.us = tail call zeroext i8 @delete_unreachable_blocks() #8, !dbg !2620
  call void @llvm.dbg.value(metadata i8 1, metadata !2582, metadata !DIExpression()), !dbg !2583
  br i1 %tobool15, label %if.end46.us.us, label %land.lhs.true40.us.us, !dbg !2621

land.lhs.true40.us.us:                            ; preds = %while.body.us.us
  %.b = load i1, i1* @crossjumps_occured, align 1, !dbg !2623
  br i1 %.b, label %if.then42.us.us, label %if.end46.us.us, !dbg !2624

if.then42.us.us:                                  ; preds = %land.lhs.true40.us.us
  tail call void @run_fast_dce() #6, !dbg !2625
  br label %if.end46.us.us, !dbg !2625

if.end46.us.us:                                   ; preds = %land.lhs.true40.us.us, %if.then42.us.us, %while.body.us.us
  br label %while.cond.us.us, !dbg !2615, !llvm.loop !2626

while.end.us-lcssa.us.us-lcssa.us:                ; preds = %while.cond.us.us
  %changed.1.us.us.lcssa = phi i8 [ %changed.1.us.us, %while.cond.us.us ], !dbg !2583
  call void @llvm.dbg.value(metadata i8 %changed.1.us.us.lcssa, metadata !2582, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata i8 %changed.1.us.us.lcssa, metadata !2582, metadata !DIExpression()), !dbg !2583
  br label %while.end.us-lcssa.us, !dbg !2628

while.cond.us:                                    ; preds = %if.end46.us, %while.cond.preheader.split.us.while.cond.preheader.split.us.split_crit_edge
  %changed.1.us = phi i8 [ 1, %if.end46.us ], [ %changed.0, %while.cond.preheader.split.us.while.cond.preheader.split.us.split_crit_edge ], !dbg !2583
  call void @llvm.dbg.value(metadata i8 %changed.1.us, metadata !2582, metadata !DIExpression()), !dbg !2583
  %call22.us = tail call fastcc zeroext i8 @try_optimize_cfg(i32 %spec.select) #8, !dbg !2616
  %tobool23.us = icmp eq i8 %call22.us, 0, !dbg !2615
  br i1 %tobool23.us, label %while.end.us-lcssa.us.us-lcssa, label %while.body.us, !dbg !2615

while.body.us:                                    ; preds = %while.cond.us
  %call24.us = tail call zeroext i8 @delete_unreachable_blocks() #8, !dbg !2620
  call void @llvm.dbg.value(metadata i8 1, metadata !2582, metadata !DIExpression()), !dbg !2583
  %4 = load i32, i32* @reload_completed, align 4, !dbg !2630
  %tobool31.us = icmp eq i32 %4, 0, !dbg !2630
  br i1 %tobool31.us, label %land.lhs.true32.us, label %if.else.us, !dbg !2631

land.lhs.true32.us:                               ; preds = %while.body.us
  %call33.us = tail call %struct.rtx_def* @get_insns() #6, !dbg !2632
  %call34.us = tail call i32 @max_reg_num() #6, !dbg !2633
  %call35.us = tail call i32 @delete_trivially_dead_insns(%struct.rtx_def* %call33.us, i32 %call34.us) #6, !dbg !2634
  %tobool36.us = icmp eq i32 %call35.us, 0, !dbg !2634
  br i1 %tobool36.us, label %while.end.us-lcssa.us.us-lcssa, label %if.else.us, !dbg !2635

if.else.us:                                       ; preds = %while.body.us, %land.lhs.true32.us
  br i1 %tobool15, label %if.end46.us, label %land.lhs.true40.us, !dbg !2621

land.lhs.true40.us:                               ; preds = %if.else.us
  %.b2 = load i1, i1* @crossjumps_occured, align 1, !dbg !2623
  br i1 %.b2, label %if.then42.us, label %if.end46.us, !dbg !2624

if.then42.us:                                     ; preds = %land.lhs.true40.us
  tail call void @run_fast_dce() #6, !dbg !2625
  br label %if.end46.us, !dbg !2625

if.end46.us:                                      ; preds = %land.lhs.true40.us, %if.then42.us, %if.else.us
  br label %while.cond.us, !dbg !2615, !llvm.loop !2626

while.end.us-lcssa.us.us-lcssa:                   ; preds = %while.cond.us, %land.lhs.true32.us
  %changed.2.ph.us.ph = phi i8 [ %changed.1.us, %while.cond.us ], [ 1, %land.lhs.true32.us ]
  br label %while.end.us-lcssa.us, !dbg !2628

while.end.us-lcssa.us:                            ; preds = %while.end.us-lcssa.us.us-lcssa.us, %while.end.us-lcssa.us.us-lcssa
  %changed.2.ph.us = phi i8 [ %changed.2.ph.us.ph, %while.end.us-lcssa.us.us-lcssa ], [ %changed.1.us.us.lcssa, %while.end.us-lcssa.us.us-lcssa.us ]
  br label %while.end, !dbg !2628

while.body:                                       ; preds = %while.cond.preheader.while.cond.preheader.split_crit_edge
  %call24 = tail call zeroext i8 @delete_unreachable_blocks() #8, !dbg !2620
  call void @llvm.dbg.value(metadata i8 1, metadata !2582, metadata !DIExpression()), !dbg !2583
  br label %while.end.us-lcssa, !dbg !2636

while.end.us-lcssa:                               ; preds = %while.body, %while.cond.preheader.while.cond.preheader.split_crit_edge
  %changed.2.ph = phi i8 [ 1, %while.body ], [ %changed.0, %while.cond.preheader.while.cond.preheader.split_crit_edge ]
  br label %while.end, !dbg !2628

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %changed.2 = phi i8 [ %changed.2.ph, %while.end.us-lcssa ], [ %changed.2.ph.us, %while.end.us-lcssa.us ], !dbg !2583
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !2582, metadata !DIExpression()), !dbg !2583
  br i1 %tobool15, label %if.end50, label %if.then49, !dbg !2637

if.then49:                                        ; preds = %while.end
  tail call void @remove_fake_exit_edges() #6, !dbg !2638
  br label %if.end50, !dbg !2638

if.end50:                                         ; preds = %while.end, %if.then49
  %and51 = and i32 %spec.select, 32, !dbg !2639
  %tobool52 = icmp eq i32 %and51, 0, !dbg !2639
  br i1 %tobool52, label %if.then53, label %do.body55, !dbg !2641

if.then53:                                        ; preds = %if.end50
  tail call void @delete_dead_jumptables() #8, !dbg !2642
  br label %do.body55, !dbg !2642

do.body55:                                        ; preds = %if.end50, %if.then53
  %5 = load i8, i8* @timevar_enable, align 1, !dbg !2643
  %tobool56 = icmp eq i8 %5, 0, !dbg !2643
  br i1 %tobool56, label %cleanup, label %if.then57, !dbg !2646

if.then57:                                        ; preds = %do.body55
  tail call void @timevar_pop_1(i32 23) #6, !dbg !2643
  br label %cleanup, !dbg !2643

cleanup:                                          ; preds = %do.body55, %if.end17, %if.then57
  %retval.0 = phi i8 [ %changed.0, %if.end17 ], [ %changed.2, %if.then57 ], [ %changed.2, %do.body55 ], !dbg !2583
  ret i8 %retval.0, !dbg !2647
}

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #1

declare dso_local i32 @delete_trivially_dead_insns(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

declare dso_local i32 @max_reg_num() local_unnamed_addr #1

declare dso_local void @compact_blocks() local_unnamed_addr #1

declare dso_local void @add_noreturn_fake_exit_edges() local_unnamed_addr #1

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_optimize_cfg(i32 %mode) unnamed_addr #4 !dbg !2648 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !2650, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i8 0, metadata !2651, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i32 0, metadata !2653, metadata !DIExpression()), !dbg !2672
  %and = and i32 %mode, 10, !dbg !2673
  %tobool = icmp eq i32 %and, 0, !dbg !2673
  br i1 %tobool, label %if.end, label %if.then, !dbg !2675

if.then:                                          ; preds = %entry
  tail call void @clear_bb_flags() #6, !dbg !2676
  br label %if.end, !dbg !2676

if.end:                                           ; preds = %entry, %if.then
  store i1 false, i1* @crossjumps_occured, align 1, !dbg !2677
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2678
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2678
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2678
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !2678
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2678
  br label %for.cond, !dbg !2678

for.cond:                                         ; preds = %for.body, %if.end
  %3 = phi %struct.control_flow_graph* [ %1, %if.end ], [ %.pre9, %for.body ], !dbg !2680
  %.pn = phi %struct.basic_block_def* [ %2, %if.end ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2682
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2682
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2654, metadata !DIExpression()), !dbg !2672
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !2680
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2680
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !2680
  br i1 %cmp, label %for.end, label %for.body, !dbg !2678

for.body:                                         ; preds = %for.cond
  tail call fastcc void @update_forwarder_flag(%struct.basic_block_def* %bb.0) #8, !dbg !2683
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2680
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2684
  %.pre9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !2680
  br label %for.cond, !dbg !2680, !llvm.loop !2685

for.end:                                          ; preds = %for.cond
  %5 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 32), align 8, !dbg !2687
  %call = tail call zeroext i8 %5() #6, !dbg !2688
  %tobool4 = icmp eq i8 %call, 0, !dbg !2688
  br i1 %tobool4, label %if.then5, label %if.end336, !dbg !2689

if.then5:                                         ; preds = %for.end
  store i1 true, i1* @first_pass, align 1, !dbg !2690
  %and133 = and i32 %mode, 32, !dbg !2691
  %tobool134 = icmp eq i32 %and133, 0, !dbg !2691
  %6 = and i32 %mode, 33, !dbg !2693
  %7 = icmp eq i32 %6, 1, !dbg !2693
  %and293 = lshr i32 %mode, 5, !dbg !2695
  %8 = trunc i32 %and293 to i8, !dbg !2695
  %9 = and i8 %8, 1, !dbg !2695
  %and305 = and i32 %mode, 2, !dbg !2697
  %tobool306 = icmp eq i32 %and305, 0, !dbg !2697
  br label %do.body, !dbg !2699

do.body:                                          ; preds = %if.end331, %if.then5
  %iterations.0 = phi i32 [ 0, %if.then5 ], [ %inc, %if.end331 ], !dbg !2672
  %changed_overall.0 = phi i32 [ 0, %if.then5 ], [ %or, %if.end331 ], !dbg !2672
  call void @llvm.dbg.value(metadata i32 %iterations.0, metadata !2653, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i8 0, metadata !2652, metadata !DIExpression()), !dbg !2672
  %inc = add nuw nsw i32 %iterations.0, 1, !dbg !2700
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2653, metadata !DIExpression()), !dbg !2672
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2701
  %tobool6 = icmp eq %struct._IO_FILE* %10, null, !dbg !2701
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !2703

if.then7:                                         ; preds = %do.body
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 %inc) #6, !dbg !2704
  br label %if.end9, !dbg !2704

if.end9:                                          ; preds = %do.body, %if.then7
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2705
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !2705
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !2705
  %x_entry_block_ptr12 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 0, !dbg !2705
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr12, align 8, !dbg !2705
  %next_bb13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 6, !dbg !2706
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb13, align 8, !dbg !2706
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %14, metadata !2655, metadata !DIExpression()), !dbg !2672
  br label %for.cond14, !dbg !2707

for.cond14:                                       ; preds = %cleanup, %if.end9
  %15 = phi %struct.control_flow_graph* [ %12, %if.end9 ], [ %.pre11, %cleanup ], !dbg !2708
  %b.0 = phi %struct.basic_block_def* [ %14, %if.end9 ], [ %b.5, %cleanup ], !dbg !2709
  %changed.0 = phi i8 [ 0, %if.end9 ], [ %changed.3, %cleanup ], !dbg !2710
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !2652, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.0, metadata !2655, metadata !DIExpression()), !dbg !2672
  %x_exit_block_ptr17 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 1, !dbg !2708
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr17, align 8, !dbg !2708
  %cmp18 = icmp eq %struct.basic_block_def* %b.0, %16, !dbg !2711
  br i1 %cmp18, label %for.end320, label %for.body19, !dbg !2712

for.body19:                                       ; preds = %for.cond14
  call void @llvm.dbg.value(metadata i8 0, metadata !2665, metadata !DIExpression()), !dbg !2713
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 0, !dbg !2714
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !2714
  %tobool20 = icmp eq %struct.VEC_edge_gc* %17, null, !dbg !2714
  br i1 %tobool20, label %cond.end, label %cond.true, !dbg !2714

cond.true:                                        ; preds = %for.body19
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %17, i64 0, i32 0, !dbg !2714
  br label %cond.end, !dbg !2714

cond.end:                                         ; preds = %for.body19, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %for.body19 ], !dbg !2714
  %call22 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !2714
  %cmp23 = icmp eq i32 %call22, 0, !dbg !2716
  br i1 %cmp23, label %if.then42, label %lor.lhs.false, !dbg !2717

lor.lhs.false:                                    ; preds = %cond.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 1, !dbg !2718
  %18 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2718
  %tobool24 = icmp eq %struct.VEC_edge_gc* %18, null, !dbg !2718
  br i1 %tobool24, label %cond.end29, label %cond.true25, !dbg !2718

cond.true25:                                      ; preds = %lor.lhs.false
  %base27 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %18, i64 0, i32 0, !dbg !2718
  br label %cond.end29, !dbg !2718

cond.end29:                                       ; preds = %lor.lhs.false, %cond.true25
  %cond30 = phi %struct.VEC_edge_base* [ %base27, %cond.true25 ], [ null, %lor.lhs.false ], !dbg !2718
  %call31 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond30) #8, !dbg !2718
  %cmp32 = icmp eq i32 %call31, 0, !dbg !2719
  br i1 %cmp32, label %land.lhs.true, label %if.end57, !dbg !2720

land.lhs.true:                                    ; preds = %cond.end29
  %call33 = tail call fastcc zeroext i8 @trivially_empty_bb_p(%struct.basic_block_def* %b.0) #8, !dbg !2721
  %tobool34 = icmp eq i8 %call33, 0, !dbg !2721
  br i1 %tobool34, label %if.end57, label %land.lhs.true35, !dbg !2722

land.lhs.true35:                                  ; preds = %land.lhs.true
  %19 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2723
  %cfg37 = getelementptr inbounds %struct.function, %struct.function* %19, i64 0, i32 1, !dbg !2723
  %20 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg37, align 8, !dbg !2723
  %x_entry_block_ptr38 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %20, i64 0, i32 0, !dbg !2723
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr38, align 8, !dbg !2723
  %call39 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %21) #8, !dbg !2724
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call39, i64 0, i32 1, !dbg !2725
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2725
  %cmp40 = icmp eq %struct.basic_block_def* %22, %b.0, !dbg !2726
  br i1 %cmp40, label %if.end57, label %if.then42, !dbg !2727

if.then42:                                        ; preds = %land.lhs.true35, %cond.end
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 5, !dbg !2728
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !2728
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %23, metadata !2657, metadata !DIExpression()), !dbg !2713
  tail call void @delete_basic_block(%struct.basic_block_def* %b.0) #6, !dbg !2730
  %spec.select = select i1 %tobool134, i8 1, i8 %changed.0, !dbg !2731
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !2652, metadata !DIExpression()), !dbg !2672
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2732
  %cfg48 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !2732
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg48, align 8, !dbg !2732
  %x_entry_block_ptr49 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 0, !dbg !2732
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr49, align 8, !dbg !2732
  %cmp50 = icmp eq %struct.basic_block_def* %23, %26, !dbg !2733
  br i1 %cmp50, label %cond.true52, label %cleanup, !dbg !2734, !llvm.loop !2735

cond.true52:                                      ; preds = %if.then42
  %next_bb53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 6, !dbg !2737
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb53, align 8, !dbg !2737
  br label %cleanup, !dbg !2734, !llvm.loop !2735

if.end57:                                         ; preds = %land.lhs.true35, %land.lhs.true, %cond.end29
  %call58 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %b.0) #8, !dbg !2738
  %tobool60 = icmp eq i8 %call58, 0, !dbg !2738
  br i1 %tobool60, label %if.end132, label %land.lhs.true61, !dbg !2739

land.lhs.true61:                                  ; preds = %if.end57
  %call62 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %b.0) #8, !dbg !2740
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call62, i64 0, i32 7, !dbg !2741
  %28 = load i32, i32* %flags, align 8, !dbg !2741
  %and63 = and i32 %28, 1, !dbg !2742
  %tobool64 = icmp eq i32 %and63, 0, !dbg !2742
  br i1 %tobool64, label %if.end132, label %land.lhs.true65, !dbg !2743

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %call66 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %b.0) #8, !dbg !2744
  %flags67 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call66, i64 0, i32 7, !dbg !2745
  %29 = load i32, i32* %flags67, align 8, !dbg !2745
  %and68 = and i32 %29, 14, !dbg !2746
  %tobool69 = icmp eq i32 %and68, 0, !dbg !2746
  br i1 %tobool69, label %land.lhs.true70, label %if.end132, !dbg !2747

land.lhs.true70:                                  ; preds = %land.lhs.true65
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 7, !dbg !2748
  %30 = bitcast %union.basic_block_il_dependent* %il to i32***, !dbg !2748
  %31 = load i32**, i32*** %30, align 8, !dbg !2748
  %32 = load i32*, i32** %31, align 8, !dbg !2748
  %bf.load = load i32, i32* %32, align 8, !dbg !2748
  %bf.clear = and i32 %bf.load, 65535, !dbg !2748
  %cmp71 = icmp eq i32 %bf.clear, 12, !dbg !2748
  br i1 %cmp71, label %land.lhs.true73, label %if.end132, !dbg !2749

land.lhs.true73:                                  ; preds = %land.lhs.true70
  %call74 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %b.0) #8, !dbg !2750
  %33 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2751
  %cfg76 = getelementptr inbounds %struct.function, %struct.function* %33, i64 0, i32 1, !dbg !2751
  %34 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg76, align 8, !dbg !2751
  %x_entry_block_ptr77 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %34, i64 0, i32 0, !dbg !2751
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr77, align 8, !dbg !2751
  %cmp78 = icmp eq %struct.basic_block_def* %call74, %35, !dbg !2752
  br i1 %cmp78, label %if.then98, label %lor.lhs.false80, !dbg !2753

lor.lhs.false80:                                  ; preds = %land.lhs.true73
  %call81 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %b.0) #8, !dbg !2754
  %il82 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call81, i64 0, i32 7, !dbg !2754
  %rtl83 = bitcast %union.basic_block_il_dependent* %il82 to %struct.rtl_bb_info**, !dbg !2754
  %36 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl83, align 8, !dbg !2754
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %36, i64 0, i32 1, !dbg !2754
  %37 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !2754
  %38 = load i32*, i32** %37, align 8, !dbg !2754
  %bf.load84 = load i32, i32* %38, align 8, !dbg !2754
  %bf.clear85 = and i32 %bf.load84, 65535, !dbg !2754
  %cmp86 = icmp eq i32 %bf.clear85, 9, !dbg !2754
  br i1 %cmp86, label %lor.lhs.false88, label %if.then98, !dbg !2755

lor.lhs.false88:                                  ; preds = %lor.lhs.false80
  %rtl90 = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2756
  %39 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl90, align 8, !dbg !2756
  %head_91 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %39, i64 0, i32 0, !dbg !2756
  %40 = load %struct.rtx_def*, %struct.rtx_def** %head_91, align 8, !dbg !2756
  %call92 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %b.0) #8, !dbg !2757
  %il93 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call92, i64 0, i32 7, !dbg !2757
  %rtl94 = bitcast %union.basic_block_il_dependent* %il93 to %struct.rtl_bb_info**, !dbg !2757
  %41 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl94, align 8, !dbg !2757
  %end_95 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %41, i64 0, i32 1, !dbg !2757
  %42 = load %struct.rtx_def*, %struct.rtx_def** %end_95, align 8, !dbg !2757
  %call96 = tail call zeroext i8 @label_is_jump_target_p(%struct.rtx_def* %40, %struct.rtx_def* %42) #6, !dbg !2758
  %tobool97 = icmp eq i8 %call96, 0, !dbg !2758
  br i1 %tobool97, label %if.then98, label %if.end132, !dbg !2759

if.then98:                                        ; preds = %lor.lhs.false88, %lor.lhs.false80, %land.lhs.true73
  %rtl100 = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2760
  %43 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl100, align 8, !dbg !2760
  %head_101 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %43, i64 0, i32 0, !dbg !2760
  %44 = load %struct.rtx_def*, %struct.rtx_def** %head_101, align 8, !dbg !2760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %44, metadata !2666, metadata !DIExpression()), !dbg !2761
  tail call void @delete_insn_chain(%struct.rtx_def* %44, %struct.rtx_def* %44, i8 zeroext 0) #6, !dbg !2762
  %45 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl100, align 8, !dbg !2763
  %head_104 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %45, i64 0, i32 0, !dbg !2763
  %46 = load %struct.rtx_def*, %struct.rtx_def** %head_104, align 8, !dbg !2763
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i64 0, i32 1, !dbg !2763
  %47 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !2763
  %rt_int = bitcast %union.rtunion_def* %47 to i32*, !dbg !2763
  %48 = load i32, i32* %rt_int, align 8, !dbg !2763
  %cmp105 = icmp eq i32 %48, 1, !dbg !2764
  br i1 %cmp105, label %if.then107, label %if.end127, !dbg !2765

if.then107:                                       ; preds = %if.then98
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !2766
  %rt_rtx = bitcast %union.rtunion_def* %49 to %struct.rtx_def**, !dbg !2766
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2766
  call void @llvm.dbg.value(metadata %struct.rtx_def* %50, metadata !2669, metadata !DIExpression()), !dbg !2767
  tail call void @reorder_insns_nobb(%struct.rtx_def* %44, %struct.rtx_def* %44, %struct.rtx_def* %50) #6, !dbg !2768
  %51 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl100, align 8, !dbg !2769
  %head_116 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %51, i64 0, i32 0, !dbg !2769
  store %struct.rtx_def* %50, %struct.rtx_def** %head_116, align 8, !dbg !2770
  %52 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl100, align 8, !dbg !2771
  %end_119 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %52, i64 0, i32 1, !dbg !2771
  %53 = load %struct.rtx_def*, %struct.rtx_def** %end_119, align 8, !dbg !2771
  %cmp120 = icmp eq %struct.rtx_def* %53, %50, !dbg !2773
  br i1 %cmp120, label %if.then122, label %if.end127, !dbg !2774

if.then122:                                       ; preds = %if.then107
  store %struct.rtx_def* %44, %struct.rtx_def** %end_119, align 8, !dbg !2775
  br label %if.end127, !dbg !2776

if.end127:                                        ; preds = %if.then107, %if.then122, %if.then98
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2777
  %tobool128 = icmp eq %struct._IO_FILE* %54, null, !dbg !2777
  br i1 %tobool128, label %if.end132, label %if.then129, !dbg !2779

if.then129:                                       ; preds = %if.end127
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 9, !dbg !2780
  %55 = load i32, i32* %index, align 8, !dbg !2780
  %call130 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %54, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 %55) #6, !dbg !2781
  br label %if.end132, !dbg !2781

if.end132:                                        ; preds = %lor.lhs.false88, %if.end127, %land.lhs.true65, %land.lhs.true61, %if.end57, %if.then129, %land.lhs.true70
  br i1 %tobool134, label %land.lhs.true135, label %if.end187, !dbg !2782

land.lhs.true135:                                 ; preds = %if.end132
  %call136 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %b.0) #8, !dbg !2783
  %tobool138 = icmp eq i8 %call136, 0, !dbg !2783
  br i1 %tobool138, label %if.end187, label %land.lhs.true139, !dbg !2784

land.lhs.true139:                                 ; preds = %land.lhs.true135
  %call140 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %b.0) #8, !dbg !2785
  %flags141 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call140, i64 0, i32 7, !dbg !2786
  %56 = load i32, i32* %flags141, align 8, !dbg !2786
  %and142 = and i32 %56, 1, !dbg !2787
  %tobool143 = icmp eq i32 %and142, 0, !dbg !2787
  br i1 %tobool143, label %if.end187, label %land.lhs.true144, !dbg !2788

land.lhs.true144:                                 ; preds = %land.lhs.true139
  %il145 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 7, !dbg !2789
  %57 = bitcast %union.basic_block_il_dependent* %il145 to i32***, !dbg !2789
  %58 = load i32**, i32*** %57, align 8, !dbg !2789
  %59 = load i32*, i32** %58, align 8, !dbg !2789
  %bf.load148 = load i32, i32* %59, align 8, !dbg !2789
  %bf.clear149 = and i32 %bf.load148, 65535, !dbg !2789
  %cmp150 = icmp eq i32 %bf.clear149, 12, !dbg !2789
  br i1 %cmp150, label %if.end187, label %land.lhs.true152, !dbg !2790

land.lhs.true152:                                 ; preds = %land.lhs.true144
  %flags153 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 13, !dbg !2791
  %60 = load i32, i32* %flags153, align 8, !dbg !2791
  %and154 = and i32 %60, 1024, !dbg !2791
  %tobool155 = icmp eq i32 %and154, 0, !dbg !2791
  br i1 %tobool155, label %if.end187, label %land.lhs.true156, !dbg !2792

land.lhs.true156:                                 ; preds = %land.lhs.true152
  %call157 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %b.0) #8, !dbg !2793
  %flags158 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call157, i64 0, i32 7, !dbg !2794
  %61 = load i32, i32* %flags158, align 8, !dbg !2794
  %and159 = and i32 %61, 1, !dbg !2795
  %tobool160 = icmp eq i32 %and159, 0, !dbg !2795
  br i1 %tobool160, label %if.end187, label %land.lhs.true161, !dbg !2796

land.lhs.true161:                                 ; preds = %land.lhs.true156
  %62 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2797
  %cfg163 = getelementptr inbounds %struct.function, %struct.function* %62, i64 0, i32 1, !dbg !2797
  %63 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg163, align 8, !dbg !2797
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %63, i64 0, i32 3, !dbg !2797
  %64 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !2797
  %cmp164 = icmp sgt i32 %64, 3, !dbg !2798
  br i1 %cmp164, label %if.then166, label %if.end187, !dbg !2799

if.then166:                                       ; preds = %land.lhs.true161
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2800
  %tobool167 = icmp eq %struct._IO_FILE* %65, null, !dbg !2800
  br i1 %tobool167, label %if.end171, label %if.then168, !dbg !2803

if.then168:                                       ; preds = %if.then166
  %index169 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 9, !dbg !2804
  %66 = load i32, i32* %index169, align 8, !dbg !2804
  %call170 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %65, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i32 %66) #6, !dbg !2805
  %.pre12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2806
  %cfg174.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre12, i64 0, i32 1, !dbg !2807
  %.pre13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg174.phi.trans.insert, align 8, !dbg !2806
  br label %if.end171, !dbg !2805

if.end171:                                        ; preds = %if.then166, %if.then168
  %67 = phi %struct.control_flow_graph* [ %63, %if.then166 ], [ %.pre13, %if.then168 ], !dbg !2806
  %prev_bb172 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 5, !dbg !2808
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb172, align 8, !dbg !2808
  %x_entry_block_ptr175 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %67, i64 0, i32 0, !dbg !2806
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr175, align 8, !dbg !2806
  %cmp176 = icmp eq %struct.basic_block_def* %68, %69, !dbg !2809
  br i1 %cmp176, label %cond.true178, label %cond.false180, !dbg !2810

cond.true178:                                     ; preds = %if.end171
  %next_bb179 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 6, !dbg !2811
  %cond183.pre = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb179, align 8, !dbg !2810
  br label %cond.end182, !dbg !2810

cond.false180:                                    ; preds = %if.end171
  br label %cond.end182, !dbg !2810

cond.end182:                                      ; preds = %cond.false180, %cond.true178
  %cond183 = phi %struct.basic_block_def* [ %cond183.pre, %cond.true178 ], [ %68, %cond.false180 ], !dbg !2810
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond183, metadata !2657, metadata !DIExpression()), !dbg !2713
  %call184 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %b.0) #8, !dbg !2812
  %call185 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %b.0) #8, !dbg !2813
  %call186 = tail call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %call184, %struct.basic_block_def* %call185) #6, !dbg !2814
  tail call void @delete_basic_block(%struct.basic_block_def* %b.0) #6, !dbg !2815
  call void @llvm.dbg.value(metadata i8 1, metadata !2652, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond183, metadata !2655, metadata !DIExpression()), !dbg !2672
  br label %cleanup, !dbg !2816, !llvm.loop !2735

if.end187:                                        ; preds = %land.lhs.true156, %land.lhs.true152, %land.lhs.true139, %land.lhs.true135, %if.end132, %land.lhs.true161, %land.lhs.true144
  %call188 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %b.0) #8, !dbg !2817
  %tobool190 = icmp eq i8 %call188, 0, !dbg !2817
  br i1 %tobool190, label %if.end256, label %land.lhs.true191, !dbg !2819

land.lhs.true191:                                 ; preds = %if.end187
  %call192 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %b.0) #8, !dbg !2820
  call void @llvm.dbg.value(metadata %struct.edge_def* %call192, metadata !2664, metadata !DIExpression()), !dbg !2713
  %tobool193 = icmp eq %struct.edge_def* %call192, null, !dbg !2821
  br i1 %tobool193, label %if.end256, label %land.lhs.true194, !dbg !2822

land.lhs.true194:                                 ; preds = %land.lhs.true191
  %flags195 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call192, i64 0, i32 7, !dbg !2823
  %70 = load i32, i32* %flags195, align 8, !dbg !2823
  %and196 = and i32 %70, 14, !dbg !2824
  %tobool197 = icmp eq i32 %and196, 0, !dbg !2824
  br i1 %tobool197, label %land.lhs.true198, label %if.end256, !dbg !2825

land.lhs.true198:                                 ; preds = %land.lhs.true194
  %dest199 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call192, i64 0, i32 1, !dbg !2826
  %71 = load %struct.basic_block_def*, %struct.basic_block_def** %dest199, align 8, !dbg !2826
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %71, metadata !2657, metadata !DIExpression()), !dbg !2713
  %72 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2827
  %cfg201 = getelementptr inbounds %struct.function, %struct.function* %72, i64 0, i32 1, !dbg !2827
  %73 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg201, align 8, !dbg !2827
  %x_exit_block_ptr202 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %73, i64 0, i32 1, !dbg !2827
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr202, align 8, !dbg !2827
  %cmp203 = icmp eq %struct.basic_block_def* %71, %74, !dbg !2828
  br i1 %cmp203, label %if.end256, label %land.lhs.true205, !dbg !2829

land.lhs.true205:                                 ; preds = %land.lhs.true198
  %call206 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %71) #8, !dbg !2830
  %tobool208 = icmp ne i8 %call206, 0, !dbg !2830
  %cmp210 = icmp ne %struct.basic_block_def* %b.0, %71, !dbg !2831
  %or.cond = and i1 %tobool208, %cmp210, !dbg !2832
  br i1 %or.cond, label %if.then212, label %if.end256, !dbg !2832

if.then212:                                       ; preds = %land.lhs.true205
  br i1 %tobool134, label %if.else, label %land.lhs.true215, !dbg !2833

land.lhs.true215:                                 ; preds = %if.then212
  %call216 = tail call zeroext i8 @can_merge_blocks_p(%struct.basic_block_def* %b.0, %struct.basic_block_def* %71) #6, !dbg !2836
  %tobool218 = icmp eq i8 %call216, 0, !dbg !2836
  br i1 %tobool218, label %if.else, label %if.then219, !dbg !2837

if.then219:                                       ; preds = %land.lhs.true215
  tail call void @merge_blocks(%struct.basic_block_def* %b.0, %struct.basic_block_def* %71) #6, !dbg !2838
  tail call fastcc void @update_forwarder_flag(%struct.basic_block_def* %b.0) #8, !dbg !2840
  call void @llvm.dbg.value(metadata i8 1, metadata !2665, metadata !DIExpression()), !dbg !2713
  br label %if.end256, !dbg !2841

if.else:                                          ; preds = %land.lhs.true215, %if.then212
  br i1 %tobool134, label %land.lhs.true222, label %if.end256, !dbg !2842

land.lhs.true222:                                 ; preds = %if.else
  %il223 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.0, i64 0, i32 7, !dbg !2844
  %rtl224 = bitcast %union.basic_block_il_dependent* %il223 to %struct.rtl_bb_info**, !dbg !2844
  %75 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl224, align 8, !dbg !2844
  %end_225 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %75, i64 0, i32 1, !dbg !2844
  %76 = bitcast %struct.rtx_def** %end_225 to i32**, !dbg !2844
  %77 = load i32*, i32** %76, align 8, !dbg !2844
  %bf.load226 = load i32, i32* %77, align 8, !dbg !2844
  %bf.clear227 = and i32 %bf.load226, 65535, !dbg !2844
  %cmp228 = icmp eq i32 %bf.clear227, 9, !dbg !2844
  %78 = bitcast i32* %77 to %struct.rtx_def*, !dbg !2845
  br i1 %cmp228, label %lor.lhs.false230, label %land.lhs.true250, !dbg !2845

lor.lhs.false230:                                 ; preds = %land.lhs.true222
  %79 = load i32, i32* @reload_completed, align 4, !dbg !2846
  %tobool231 = icmp eq i32 %79, 0, !dbg !2846
  br i1 %tobool231, label %cond.false238, label %cond.true232, !dbg !2847

cond.true232:                                     ; preds = %lor.lhs.false230
  %call236 = tail call i32 @simplejump_p(%struct.rtx_def* %78) #6, !dbg !2848
  %tobool237 = icmp eq i32 %call236, 0, !dbg !2848
  br i1 %tobool237, label %if.end256, label %land.lhs.true250, !dbg !2846

cond.false238:                                    ; preds = %lor.lhs.false230
  %call242 = tail call i32 @onlyjump_p(%struct.rtx_def* %78) #6, !dbg !2849
  %tobool243 = icmp eq i32 %call242, 0, !dbg !2849
  br i1 %tobool243, label %if.end256, label %land.lhs.true244, !dbg !2850

land.lhs.true244:                                 ; preds = %cond.false238
  %80 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl224, align 8, !dbg !2851
  %end_247 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %80, i64 0, i32 1, !dbg !2851
  %81 = load %struct.rtx_def*, %struct.rtx_def** %end_247, align 8, !dbg !2851
  %call248 = tail call zeroext i8 @tablejump_p(%struct.rtx_def* %81, %struct.rtx_def** null, %struct.rtx_def** null) #6, !dbg !2852
  %tobool249 = icmp eq i8 %call248, 0, !dbg !2852
  br i1 %tobool249, label %land.lhs.true250, label %if.end256, !dbg !2847

land.lhs.true250:                                 ; preds = %cond.true232, %land.lhs.true244, %land.lhs.true222
  %call251 = tail call fastcc %struct.basic_block_def* @merge_blocks_move(%struct.edge_def* nonnull %call192, %struct.basic_block_def* %b.0, %struct.basic_block_def* %71, i32 %mode) #8, !dbg !2853
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call251, metadata !2656, metadata !DIExpression()), !dbg !2672
  %tobool252 = icmp ne %struct.basic_block_def* %call251, null, !dbg !2854
  %spec.select1 = zext i1 %tobool252 to i8, !dbg !2855
  %spec.select2 = select i1 %tobool252, %struct.basic_block_def* %call251, %struct.basic_block_def* %b.0, !dbg !2855
  br label %if.end256, !dbg !2855

if.end256:                                        ; preds = %cond.true232, %land.lhs.true244, %cond.false238, %if.else, %land.lhs.true198, %land.lhs.true194, %land.lhs.true191, %if.end187, %land.lhs.true250, %if.then219, %land.lhs.true205
  %changed_here.2 = phi i8 [ 0, %land.lhs.true194 ], [ 0, %land.lhs.true205 ], [ 0, %land.lhs.true198 ], [ 0, %land.lhs.true191 ], [ 0, %if.end187 ], [ 1, %if.then219 ], [ 0, %if.else ], [ 0, %cond.true232 ], [ 0, %land.lhs.true244 ], [ 0, %cond.false238 ], [ %spec.select1, %land.lhs.true250 ], !dbg !2713
  %b.3 = phi %struct.basic_block_def* [ %b.0, %land.lhs.true194 ], [ %b.0, %land.lhs.true205 ], [ %b.0, %land.lhs.true198 ], [ %b.0, %land.lhs.true191 ], [ %b.0, %if.end187 ], [ %b.0, %if.then219 ], [ %b.0, %if.else ], [ %b.0, %cond.true232 ], [ %b.0, %land.lhs.true244 ], [ %b.0, %cond.false238 ], [ %spec.select2, %land.lhs.true250 ], !dbg !2856
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.3, metadata !2655, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i8 %changed_here.2, metadata !2665, metadata !DIExpression()), !dbg !2713
  br i1 %7, label %land.lhs.true262, label %if.end267, !dbg !2857

land.lhs.true262:                                 ; preds = %if.end256
  %call263 = tail call fastcc zeroext i8 @try_simplify_condjump(%struct.basic_block_def* %b.3) #8, !dbg !2858
  %tobool265 = icmp eq i8 %call263, 0, !dbg !2858
  %spec.select4 = select i1 %tobool265, i8 %changed_here.2, i8 1, !dbg !2859
  br label %if.end267, !dbg !2859

if.end267:                                        ; preds = %if.end256, %land.lhs.true262
  %changed_here.3 = phi i8 [ %changed_here.2, %if.end256 ], [ %spec.select4, %land.lhs.true262 ], !dbg !2713
  call void @llvm.dbg.value(metadata i8 %changed_here.3, metadata !2665, metadata !DIExpression()), !dbg !2713
  %call268 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %b.3) #8, !dbg !2860
  %tobool270 = icmp eq i8 %call268, 0, !dbg !2860
  br i1 %tobool270, label %if.end300, label %land.lhs.true271, !dbg !2861

land.lhs.true271:                                 ; preds = %if.end267
  %call272 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %b.3) #8, !dbg !2862
  %82 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2863
  %cfg274 = getelementptr inbounds %struct.function, %struct.function* %82, i64 0, i32 1, !dbg !2863
  %83 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg274, align 8, !dbg !2863
  %x_exit_block_ptr275 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %83, i64 0, i32 1, !dbg !2863
  %84 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr275, align 8, !dbg !2863
  %cmp276 = icmp eq %struct.basic_block_def* %call272, %84, !dbg !2864
  br i1 %cmp276, label %if.end300, label %land.lhs.true278, !dbg !2865

land.lhs.true278:                                 ; preds = %land.lhs.true271
  %il279 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.3, i64 0, i32 7, !dbg !2866
  %rtl280 = bitcast %union.basic_block_il_dependent* %il279 to %struct.rtl_bb_info**, !dbg !2866
  %85 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl280, align 8, !dbg !2866
  %end_281 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %85, i64 0, i32 1, !dbg !2866
  %86 = load %struct.rtx_def*, %struct.rtx_def** %end_281, align 8, !dbg !2866
  %call282 = tail call i32 @onlyjump_p(%struct.rtx_def* %86) #6, !dbg !2867
  %tobool283 = icmp eq i32 %call282, 0, !dbg !2867
  br i1 %tobool283, label %if.end300, label %land.lhs.true284, !dbg !2868

land.lhs.true284:                                 ; preds = %land.lhs.true278
  %87 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl280, align 8, !dbg !2869
  %end_287 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %87, i64 0, i32 1, !dbg !2869
  %88 = load %struct.rtx_def*, %struct.rtx_def** %end_287, align 8, !dbg !2869
  %call288 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %88, i32 29, %struct.rtx_def* null) #6, !dbg !2870
  %tobool289 = icmp eq %struct.rtx_def* %call288, null, !dbg !2870
  br i1 %tobool289, label %land.lhs.true290, label %if.end300, !dbg !2871

land.lhs.true290:                                 ; preds = %land.lhs.true284
  %call291 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %b.3) #8, !dbg !2872
  %call292 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %b.3) #8, !dbg !2873
  %call297 = tail call %struct.edge_def* @try_redirect_by_replacing_jump(%struct.edge_def* %call291, %struct.basic_block_def* %call292, i8 zeroext %9) #6, !dbg !2874
  %tobool298 = icmp eq %struct.edge_def* %call297, null, !dbg !2874
  br i1 %tobool298, label %if.end300, label %if.then299, !dbg !2875

if.then299:                                       ; preds = %land.lhs.true290
  tail call fastcc void @update_forwarder_flag(%struct.basic_block_def* %b.3) #8, !dbg !2876
  call void @llvm.dbg.value(metadata i8 1, metadata !2665, metadata !DIExpression()), !dbg !2713
  br label %if.end300, !dbg !2878

if.end300:                                        ; preds = %land.lhs.true290, %land.lhs.true284, %land.lhs.true278, %land.lhs.true271, %if.end267, %if.then299
  %changed_here.4 = phi i8 [ %changed_here.3, %land.lhs.true284 ], [ 1, %if.then299 ], [ %changed_here.3, %land.lhs.true290 ], [ %changed_here.3, %land.lhs.true278 ], [ %changed_here.3, %land.lhs.true271 ], [ %changed_here.3, %if.end267 ], !dbg !2713
  call void @llvm.dbg.value(metadata i8 %changed_here.4, metadata !2665, metadata !DIExpression()), !dbg !2713
  %call301 = tail call fastcc zeroext i8 @try_forward_edges(i32 %mode, %struct.basic_block_def* %b.3) #8, !dbg !2879
  %tobool302 = icmp eq i8 %call301, 0, !dbg !2879
  %spec.select5 = select i1 %tobool302, i8 %changed_here.4, i8 1, !dbg !2881
  call void @llvm.dbg.value(metadata i8 %spec.select5, metadata !2665, metadata !DIExpression()), !dbg !2713
  br i1 %tobool306, label %if.end312, label %land.lhs.true307, !dbg !2882

land.lhs.true307:                                 ; preds = %if.end300
  %call308 = tail call fastcc zeroext i8 @try_crossjump_bb(i32 %mode, %struct.basic_block_def* %b.3) #8, !dbg !2883
  %tobool310 = icmp eq i8 %call308, 0, !dbg !2883
  %spec.select6 = select i1 %tobool310, i8 %spec.select5, i8 1, !dbg !2884
  br label %if.end312, !dbg !2884

if.end312:                                        ; preds = %if.end300, %land.lhs.true307
  %changed_here.6 = phi i8 [ %spec.select5, %if.end300 ], [ %spec.select6, %land.lhs.true307 ], !dbg !2713
  call void @llvm.dbg.value(metadata i8 %changed_here.6, metadata !2665, metadata !DIExpression()), !dbg !2713
  %tobool313 = icmp eq i8 %changed_here.6, 0, !dbg !2885
  br i1 %tobool313, label %if.then314, label %cleanup, !dbg !2887

if.then314:                                       ; preds = %if.end312
  %next_bb315 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.3, i64 0, i32 6, !dbg !2888
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb315, align 8, !dbg !2888
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %89, metadata !2655, metadata !DIExpression()), !dbg !2672
  br label %cleanup, !dbg !2889

cleanup:                                          ; preds = %if.end312, %if.then314, %cond.true52, %if.then42, %cond.end182
  %b.5 = phi %struct.basic_block_def* [ %cond183, %cond.end182 ], [ %27, %cond.true52 ], [ %23, %if.then42 ], [ %89, %if.then314 ], [ %b.3, %if.end312 ], !dbg !2709
  %changed.3 = phi i8 [ 1, %cond.end182 ], [ %spec.select, %cond.true52 ], [ %spec.select, %if.then42 ], [ %changed.0, %if.then314 ], [ 1, %if.end312 ], !dbg !2890
  call void @llvm.dbg.value(metadata i8 %changed.3, metadata !2652, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.5, metadata !2655, metadata !DIExpression()), !dbg !2672
  %.pre10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2708
  %cfg16.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre10, i64 0, i32 1, !dbg !2891
  %.pre11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg16.phi.trans.insert, align 8, !dbg !2708
  br label %for.cond14

for.end320:                                       ; preds = %for.cond14
  %b.0.lcssa = phi %struct.basic_block_def* [ %b.0, %for.cond14 ], !dbg !2709
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond14 ], !dbg !2710
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.0.lcssa, metadata !2655, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2652, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.0.lcssa, metadata !2655, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2652, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2652, metadata !DIExpression()), !dbg !2672
  br i1 %tobool306, label %if.end331, label %land.lhs.true323, !dbg !2892

land.lhs.true323:                                 ; preds = %for.end320
  %call327 = tail call fastcc zeroext i8 @try_crossjump_bb(i32 %mode, %struct.basic_block_def* %b.0.lcssa) #8, !dbg !2894
  %tobool329 = icmp eq i8 %call327, 0, !dbg !2894
  %spec.select7 = select i1 %tobool329, i8 %changed.0.lcssa, i8 1, !dbg !2895
  br label %if.end331, !dbg !2895

if.end331:                                        ; preds = %for.end320, %land.lhs.true323
  %changed.4 = phi i8 [ %changed.0.lcssa, %for.end320 ], [ %spec.select7, %land.lhs.true323 ], !dbg !2890
  call void @llvm.dbg.value(metadata i8 %changed.4, metadata !2652, metadata !DIExpression()), !dbg !2672
  %conv332 = zext i8 %changed.4 to i32, !dbg !2896
  %or = or i32 %changed_overall.0, %conv332, !dbg !2897
  store i1 false, i1* @first_pass, align 1, !dbg !2898
  %tobool335 = icmp eq i8 %changed.4, 0, !dbg !2899
  br i1 %tobool335, label %if.end336.loopexit, label %do.body, !dbg !2899, !llvm.loop !2900

if.end336.loopexit:                               ; preds = %if.end331
  %or.lcssa = phi i32 [ %or, %if.end331 ], !dbg !2897
  %conv334.le = trunc i32 %or.lcssa to i8, !dbg !2897
  br label %if.end336, !dbg !2902

if.end336:                                        ; preds = %if.end336.loopexit, %for.end
  %changed_overall.1 = phi i8 [ 0, %for.end ], [ %conv334.le, %if.end336.loopexit ], !dbg !2672
  call void @llvm.dbg.value(metadata i8 %changed_overall.1, metadata !2651, metadata !DIExpression()), !dbg !2672
  %90 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2902
  %cfg338 = getelementptr inbounds %struct.function, %struct.function* %90, i64 0, i32 1, !dbg !2902
  %91 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg338, align 8, !dbg !2902
  %x_entry_block_ptr339 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %91, i64 0, i32 0, !dbg !2902
  br label %for.cond340, !dbg !2902

for.cond340:                                      ; preds = %for.body342, %if.end336
  %b.6.in = phi %struct.basic_block_def** [ %x_entry_block_ptr339, %if.end336 ], [ %next_bb346, %for.body342 ]
  %b.6 = load %struct.basic_block_def*, %struct.basic_block_def** %b.6.in, align 8, !dbg !2904
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b.6, metadata !2655, metadata !DIExpression()), !dbg !2672
  %tobool341 = icmp eq %struct.basic_block_def* %b.6, null, !dbg !2902
  br i1 %tobool341, label %for.end347, label %for.body342, !dbg !2902

for.body342:                                      ; preds = %for.cond340
  %flags343 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.6, i64 0, i32 13, !dbg !2905
  %92 = load i32, i32* %flags343, align 8, !dbg !2907
  %and344 = and i32 %92, -3073, !dbg !2907
  store i32 %and344, i32* %flags343, align 8, !dbg !2907
  %next_bb346 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b.6, i64 0, i32 6, !dbg !2908
  br label %for.cond340, !dbg !2908, !llvm.loop !2909

for.end347:                                       ; preds = %for.cond340
  ret i8 %changed_overall.1, !dbg !2911
}

declare dso_local void @run_fast_dce() local_unnamed_addr #1

declare dso_local void @remove_fake_exit_edges() local_unnamed_addr #1

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_jump() #4 !dbg !2912 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 39), align 1, !dbg !2913
  %tobool = icmp eq i8 %0, 0, !dbg !2915
  br i1 %tobool, label %if.end, label %if.then, !dbg !2916

if.then:                                          ; preds = %entry
  tail call void @fixup_tail_calls() #6, !dbg !2917
  br label %if.end, !dbg !2917

if.end:                                           ; preds = %entry, %if.then
  ret i32 0, !dbg !2918
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_jump2() #4 !dbg !2919 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !2920
  %call1 = tail call i32 @max_reg_num() #6, !dbg !2921
  %call2 = tail call i32 @delete_trivially_dead_insns(%struct.rtx_def* %call, i32 %call1) #6, !dbg !2922
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2923
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !2923
  br i1 %tobool, label %if.end, label %if.then, !dbg !2925

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !2926
  tail call void @dump_flow_info(%struct._IO_FILE* nonnull %0, i32 %1) #6, !dbg !2927
  br label %if.end, !dbg !2927

if.end:                                           ; preds = %entry, %if.then
  %2 = load i32, i32* @optimize, align 4, !dbg !2928
  %tobool3 = icmp ne i32 %2, 0, !dbg !2928
  %cond = zext i1 %tobool3 to i32, !dbg !2928
  %3 = load i32, i32* @flag_thread_jumps, align 4, !dbg !2929
  %tobool4 = icmp eq i32 %3, 0, !dbg !2929
  %cond5 = select i1 %tobool4, i32 0, i32 8, !dbg !2929
  %or = or i32 %cond5, %cond, !dbg !2930
  %call6 = tail call zeroext i8 @cleanup_cfg(i32 %or) #8, !dbg !2931
  ret i32 0, !dbg !2932
}

declare dso_local void @free(i8*) local_unnamed_addr #1

declare dso_local void @clear_bb_flags() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @update_forwarder_flag(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !2933 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2937, metadata !DIExpression()), !dbg !2938
  %call = tail call zeroext i8 @forwarder_block_p(%struct.basic_block_def* %bb) #6, !dbg !2939
  %tobool = icmp eq i8 %call, 0, !dbg !2939
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !2941
  %0 = load i32, i32* %flags, align 8, !dbg !2941
  br i1 %tobool, label %if.else, label %if.then, !dbg !2942

if.then:                                          ; preds = %entry
  %or = or i32 %0, 1024, !dbg !2943
  br label %if.end, !dbg !2944

if.else:                                          ; preds = %entry
  %and = and i32 %0, -1025, !dbg !2945
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ %and, %if.else ], [ %or, %if.then ], !dbg !2941
  store i32 %storemerge, i32* %flags, align 8, !dbg !2941
  ret void, !dbg !2946
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !2947 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !2953, metadata !DIExpression()), !dbg !2954
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !2955
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2955

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !2955
  %0 = load i32, i32* %num, align 8, !dbg !2955
  br label %cond.end, !dbg !2955

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2955
  ret i32 %cond, !dbg !2955
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @trivially_empty_bb_p(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !2956 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2960, metadata !DIExpression()), !dbg !2962
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !2963
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2963
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2963
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !2963
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !2964
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !2964
  br label %while.cond, !dbg !2967

while.cond:                                       ; preds = %if.end5, %entry
  %insn.0.in = phi %struct.rtx_def** [ %end_, %entry ], [ %rt_rtx, %if.end5 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !2962
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !2961, metadata !DIExpression()), !dbg !2962
  %cmp = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !2968
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2969

if.end:                                           ; preds = %while.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !2970
  %bf.load = load i32, i32* %2, align 8, !dbg !2970
  %bf.clear = and i32 %bf.load, 65535, !dbg !2970
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !2970
  br i1 %cmp3, label %if.end5, label %cleanup, !dbg !2972

if.end5:                                          ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !2973
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !2973
  br label %while.cond, !dbg !2967, !llvm.loop !2974

cleanup:                                          ; preds = %if.end, %while.cond
  %retval.0 = phi i8 [ 1, %while.cond ], [ 0, %if.end ], !dbg !2976
  ret i8 %retval.0, !dbg !2977
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !2978 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2985, metadata !DIExpression()), !dbg !2986
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !2987
  %tobool = icmp eq i8 %call, 0, !dbg !2987
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2987

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2987
  br label %cond.end, !dbg !2987

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !2988
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !2988
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !2988
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !2988

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !2988
  br label %cond.end5, !dbg !2988

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !2988
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !2988
  ret %struct.edge_def* %call7, !dbg !2989
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !2990 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2994, metadata !DIExpression()), !dbg !2995
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !2996
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !2996
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !2996
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2996

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !2996
  br label %cond.end, !dbg !2996

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2996
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !2996
  %cmp = icmp eq i32 %call, 1, !dbg !2997
  %conv2 = zext i1 %cmp to i8, !dbg !2996
  ret i8 %conv2, !dbg !2998
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !2999 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3001, metadata !DIExpression()), !dbg !3002
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #8, !dbg !3003
  %tobool = icmp eq i8 %call, 0, !dbg !3003
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3003

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3003
  br label %cond.end, !dbg !3003

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !3004
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3004
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3004
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !3004

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3004
  br label %cond.end5, !dbg !3004

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !3004
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !3004
  ret %struct.edge_def* %call7, !dbg !3005
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3006 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3010, metadata !DIExpression()), !dbg !3011
  %call = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #8, !dbg !3012
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !3013
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3013
  ret %struct.basic_block_def* %0, !dbg !3014
}

declare dso_local zeroext i8 @label_is_jump_target_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @delete_insn_chain(%struct.rtx_def*, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local void @reorder_insns_nobb(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3015 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3017, metadata !DIExpression()), !dbg !3018
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !3019
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !3020
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3020
  ret %struct.basic_block_def* %0, !dbg !3021
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3022 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3024, metadata !DIExpression()), !dbg !3025
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3026
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3026
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3026
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3026

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3026
  br label %cond.end, !dbg !3026

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3026
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3026
  %cmp = icmp eq i32 %call, 1, !dbg !3027
  %conv2 = zext i1 %cmp to i8, !dbg !3026
  ret i8 %conv2, !dbg !3028
}

declare dso_local zeroext i8 @can_merge_blocks_p(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @merge_blocks(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @simplejump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @onlyjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @tablejump_p(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @merge_blocks_move(%struct.edge_def* %e, %struct.basic_block_def* %b, %struct.basic_block_def* %c, i32 %mode) unnamed_addr #4 !dbg !3029 {
entry:
  %tmp_edge = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp33 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3033, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !3034, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %c, metadata !3035, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3036, metadata !DIExpression()), !dbg !3058
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 13, !dbg !3059
  %0 = load i32, i32* %flags, align 8, !dbg !3059
  %flags1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %c, i64 0, i32 13, !dbg !3061
  %1 = load i32, i32* %flags1, align 8, !dbg !3061
  %2 = xor i32 %0, %1, !dbg !3062
  %3 = and i32 %2, 96, !dbg !3062
  %cmp = icmp eq i32 %3, 0, !dbg !3062
  br i1 %cmp, label %if.end, label %cleanup98, !dbg !3063

if.end:                                           ; preds = %entry
  %flags3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !3064
  %4 = load i32, i32* %flags3, align 8, !dbg !3064
  %and4 = and i32 %4, 1, !dbg !3065
  %tobool = icmp eq i32 %and4, 0, !dbg !3065
  br i1 %tobool, label %if.else, label %if.then5, !dbg !3066

if.then5:                                         ; preds = %if.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !3067
  %5 = load i32, i32* %index, align 8, !dbg !3067
  call void @llvm.dbg.value(metadata i32 %5, metadata !3038, metadata !DIExpression()), !dbg !3068
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %c, i64 0, i32 9, !dbg !3069
  %6 = load i32, i32* %index6, align 8, !dbg !3069
  call void @llvm.dbg.value(metadata i32 %6, metadata !3041, metadata !DIExpression()), !dbg !3068
  tail call void @merge_blocks(%struct.basic_block_def* %b, %struct.basic_block_def* %c) #6, !dbg !3070
  tail call fastcc void @update_forwarder_flag(%struct.basic_block_def* %b) #8, !dbg !3071
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3072
  %tobool7 = icmp eq %struct._IO_FILE* %7, null, !dbg !3072
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3074

if.then8:                                         ; preds = %if.then5
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %5, i32 %6) #6, !dbg !3075
  br label %if.end9, !dbg !3075

if.end9:                                          ; preds = %if.then5, %if.then8
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 5, !dbg !3076
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !3076
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3077
  %cfg = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !3077
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3077
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 0, !dbg !3077
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3077
  %cmp10 = icmp eq %struct.basic_block_def* %8, %11, !dbg !3078
  br i1 %cmp10, label %cleanup98, label %cond.false, !dbg !3079

cond.false:                                       ; preds = %if.end9
  br label %cleanup98, !dbg !3079

if.else:                                          ; preds = %if.end
  %and12 = and i32 %mode, 1, !dbg !3080
  %tobool13 = icmp eq i32 %and12, 0, !dbg !3080
  br i1 %tobool13, label %cleanup98, label %if.then14, !dbg !3081

if.then14:                                        ; preds = %if.else
  %12 = bitcast %struct.edge_def** %tmp_edge to i8*, !dbg !3082
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7, !dbg !3082
  %13 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3083
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7, !dbg !3083
  %and16 = and i32 %0, 1024, !dbg !3084
  %tobool17 = icmp eq i32 %and16, 0, !dbg !3084
  br i1 %tobool17, label %lor.lhs.false, label %cleanup91, !dbg !3086

lor.lhs.false:                                    ; preds = %if.then14
  %and19 = and i32 %1, 1024, !dbg !3087
  %tobool20 = icmp eq i32 %and19, 0, !dbg !3087
  br i1 %tobool20, label %if.end22, label %cleanup91, !dbg !3088

if.end22:                                         ; preds = %lor.lhs.false
  %14 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3089
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7, !dbg !3089
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %c, i64 0, i32 1, !dbg !3089
  %call23 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !3089
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3089
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call23, 0, !dbg !3089
  store i32 %16, i32* %15, align 8, !dbg !3089
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3089
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call23, 1, !dbg !3089
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %17, align 8, !dbg !3089
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !3089
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7, !dbg !3089
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3091
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3091
  br label %for.cond, !dbg !3089

for.cond:                                         ; preds = %for.inc, %if.end22
  %21 = load i32, i32* %19, align 8, !dbg !3093
  %22 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !3093
  call void @llvm.dbg.value(metadata %struct.edge_def** %tmp_edge, metadata !3042, metadata !DIExpression(DW_OP_deref)), !dbg !3094
  %call24 = call fastcc zeroext i8 @ei_cond(i32 %21, %struct.VEC_edge_gc** %22, %struct.edge_def** nonnull %tmp_edge) #8, !dbg !3093
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3089
  br i1 %tobool25, label %for.cond.for.end_crit_edge, label %for.body, !dbg !3089

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %.pre = load %struct.edge_def*, %struct.edge_def** %tmp_edge, align 8, !dbg !3095
  br label %for.end, !dbg !3089

for.body:                                         ; preds = %for.cond
  %23 = load %struct.edge_def*, %struct.edge_def** %tmp_edge, align 8, !dbg !3096
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !3042, metadata !DIExpression()), !dbg !3094
  %flags26 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 7, !dbg !3098
  %24 = load i32, i32* %flags26, align 8, !dbg !3098
  %and27 = and i32 %24, 1, !dbg !3099
  %tobool28 = icmp eq i32 %and27, 0, !dbg !3099
  br i1 %tobool28, label %for.inc, label %for.end.loopexit, !dbg !3100

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3048, metadata !DIExpression(DW_OP_deref)), !dbg !3094
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3093
  br label %for.cond, !dbg !3093, !llvm.loop !3101

for.end.loopexit:                                 ; preds = %for.body
  %.lcssa5 = phi %struct.edge_def* [ %23, %for.body ], !dbg !3096
  br label %for.end, !dbg !3103

for.end:                                          ; preds = %for.end.loopexit, %for.cond.for.end_crit_edge
  %25 = phi %struct.edge_def* [ %.pre, %for.cond.for.end_crit_edge ], [ %.lcssa5, %for.end.loopexit ], !dbg !3095
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !3042, metadata !DIExpression()), !dbg !3094
  %cmp31 = icmp eq %struct.edge_def* %25, null, !dbg !3103
  call void @llvm.dbg.value(metadata i1 %cmp31, metadata !3046, metadata !DIExpression()), !dbg !3094
  %26 = bitcast %struct.edge_iterator* %tmp33 to i8*, !dbg !3104
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7, !dbg !3104
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 0, !dbg !3104
  %call34 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !3104
  %27 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp33, i64 0, i32 0, !dbg !3104
  %28 = extractvalue { i32, %struct.VEC_edge_gc** } %call34, 0, !dbg !3104
  store i32 %28, i32* %27, align 8, !dbg !3104
  %29 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp33, i64 0, i32 1, !dbg !3104
  %30 = extractvalue { i32, %struct.VEC_edge_gc** } %call34, 1, !dbg !3104
  store %struct.VEC_edge_gc** %30, %struct.VEC_edge_gc*** %29, align 8, !dbg !3104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %26, i64 16, i1 false), !dbg !3104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7, !dbg !3104
  br label %for.cond35, !dbg !3104

for.cond35:                                       ; preds = %for.inc44, %for.end
  %31 = load i32, i32* %19, align 8, !dbg !3106
  %32 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !3106
  call void @llvm.dbg.value(metadata %struct.edge_def** %tmp_edge, metadata !3042, metadata !DIExpression(DW_OP_deref)), !dbg !3094
  %call36 = call fastcc zeroext i8 @ei_cond(i32 %31, %struct.VEC_edge_gc** %32, %struct.edge_def** nonnull %tmp_edge) #8, !dbg !3106
  %tobool37 = icmp eq i8 %call36, 0, !dbg !3104
  br i1 %tobool37, label %for.cond35.for.end45_crit_edge, label %for.body38, !dbg !3104

for.cond35.for.end45_crit_edge:                   ; preds = %for.cond35
  %.pre3 = load %struct.edge_def*, %struct.edge_def** %tmp_edge, align 8, !dbg !3108
  br label %for.end45, !dbg !3104

for.body38:                                       ; preds = %for.cond35
  %33 = load %struct.edge_def*, %struct.edge_def** %tmp_edge, align 8, !dbg !3109
  call void @llvm.dbg.value(metadata %struct.edge_def* %33, metadata !3042, metadata !DIExpression()), !dbg !3094
  %flags39 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %33, i64 0, i32 7, !dbg !3111
  %34 = load i32, i32* %flags39, align 8, !dbg !3111
  %and40 = and i32 %34, 1, !dbg !3112
  %tobool41 = icmp eq i32 %and40, 0, !dbg !3112
  br i1 %tobool41, label %for.inc44, label %for.end45.loopexit, !dbg !3113

for.inc44:                                        ; preds = %for.body38
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3048, metadata !DIExpression(DW_OP_deref)), !dbg !3094
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3106
  br label %for.cond35, !dbg !3106, !llvm.loop !3114

for.end45.loopexit:                               ; preds = %for.body38
  %.lcssa = phi %struct.edge_def* [ %33, %for.body38 ], !dbg !3109
  br label %for.end45, !dbg !3116

for.end45:                                        ; preds = %for.end45.loopexit, %for.cond35.for.end45_crit_edge
  %35 = phi %struct.edge_def* [ %.pre3, %for.cond35.for.end45_crit_edge ], [ %.lcssa, %for.end45.loopexit ], !dbg !3108
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !3042, metadata !DIExpression()), !dbg !3094
  %cmp46 = icmp eq %struct.edge_def* %35, null, !dbg !3116
  call void @llvm.dbg.value(metadata i1 %cmp46, metadata !3047, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !3042, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata %struct.edge_def* %35, metadata !3045, metadata !DIExpression()), !dbg !3094
  %prev_bb49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 5, !dbg !3117
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb49, align 8, !dbg !3117
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %36, metadata !3037, metadata !DIExpression()), !dbg !3058
  %cmp50 = icmp eq %struct.basic_block_def* %36, %c, !dbg !3118
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !3120

if.then52:                                        ; preds = %for.end45
  %prev_bb53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %c, i64 0, i32 5, !dbg !3121
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb53, align 8, !dbg !3121
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %37, metadata !3037, metadata !DIExpression()), !dbg !3058
  br label %if.end54, !dbg !3122

if.end54:                                         ; preds = %if.then52, %for.end45
  %next.0 = phi %struct.basic_block_def* [ %37, %if.then52 ], [ %36, %for.end45 ], !dbg !3094
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %next.0, metadata !3037, metadata !DIExpression()), !dbg !3058
  br i1 %cmp31, label %if.then56, label %if.end66, !dbg !3123

if.then56:                                        ; preds = %if.end54
  call fastcc void @merge_blocks_move_successor_nojumps(%struct.basic_block_def* %b, %struct.basic_block_def* %c) #8, !dbg !3124
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3127
  %cfg58 = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, i32 1, !dbg !3127
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg58, align 8, !dbg !3127
  %x_entry_block_ptr59 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i64 0, i32 0, !dbg !3127
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr59, align 8, !dbg !3127
  %cmp60 = icmp eq %struct.basic_block_def* %next.0, %40, !dbg !3128
  br i1 %cmp60, label %cond.true62, label %cleanup91, !dbg !3129

cond.true62:                                      ; preds = %if.then56
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %next.0, i64 0, i32 6, !dbg !3130
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3130
  br label %cleanup91, !dbg !3129

if.end66:                                         ; preds = %if.end54
  br i1 %cmp46, label %if.end80, label %if.then68, !dbg !3131

if.then68:                                        ; preds = %if.end66
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %35, i64 0, i32 0, !dbg !3132
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3132
  %43 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3134
  %cfg70 = getelementptr inbounds %struct.function, %struct.function* %43, i64 0, i32 1, !dbg !3134
  %44 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg70, align 8, !dbg !3134
  %x_entry_block_ptr71 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %44, i64 0, i32 0, !dbg !3134
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr71, align 8, !dbg !3134
  %cmp72 = icmp eq %struct.basic_block_def* %42, %45, !dbg !3135
  br i1 %cmp72, label %cleanup, label %if.end75, !dbg !3136

if.end75:                                         ; preds = %if.then68
  %call76 = call %struct.basic_block_def* @force_nonfallthru(%struct.edge_def* nonnull %35) #6, !dbg !3137
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call76, metadata !3055, metadata !DIExpression()), !dbg !3138
  %tobool77 = icmp eq %struct.basic_block_def* %call76, null, !dbg !3139
  br i1 %tobool77, label %cleanup, label %if.then78, !dbg !3141

if.then78:                                        ; preds = %if.end75
  call fastcc void @notice_new_block(%struct.basic_block_def* nonnull %call76) #8, !dbg !3142
  br label %cleanup, !dbg !3142

cleanup:                                          ; preds = %if.end75, %if.then78, %if.then68
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then68 ], [ true, %if.then78 ], [ true, %if.end75 ]
  br i1 %cleanup.dest.slot.0, label %if.end80, label %cleanup91

if.end80:                                         ; preds = %if.end66, %cleanup
  call fastcc void @merge_blocks_move_predecessor_nojumps(%struct.basic_block_def* %b, %struct.basic_block_def* %c) #8, !dbg !3143
  %46 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3144
  %cfg82 = getelementptr inbounds %struct.function, %struct.function* %46, i64 0, i32 1, !dbg !3144
  %47 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg82, align 8, !dbg !3144
  %x_entry_block_ptr83 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %47, i64 0, i32 0, !dbg !3144
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr83, align 8, !dbg !3144
  %cmp84 = icmp eq %struct.basic_block_def* %next.0, %48, !dbg !3145
  br i1 %cmp84, label %cond.true86, label %cleanup91, !dbg !3146

cond.true86:                                      ; preds = %if.end80
  %next_bb87 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %next.0, i64 0, i32 6, !dbg !3147
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb87, align 8, !dbg !3147
  br label %cleanup91, !dbg !3146

cleanup91:                                        ; preds = %lor.lhs.false, %if.then14, %cond.true86, %if.end80, %cond.true62, %if.then56, %cleanup
  %retval.1 = phi %struct.basic_block_def* [ null, %cleanup ], [ null, %lor.lhs.false ], [ null, %if.then14 ], [ %41, %cond.true62 ], [ %next.0, %if.then56 ], [ %49, %cond.true86 ], [ %next.0, %if.end80 ], !dbg !3094
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7, !dbg !3148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7, !dbg !3148
  br label %cleanup98

cleanup98:                                        ; preds = %if.else, %entry, %cond.false, %if.end9, %cleanup91
  %retval.2 = phi %struct.basic_block_def* [ %retval.1, %cleanup91 ], [ null, %entry ], [ %8, %cond.false ], [ %b, %if.end9 ], [ null, %if.else ], !dbg !3058
  ret %struct.basic_block_def* %retval.2, !dbg !3149
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_simplify_condjump(%struct.basic_block_def* %cbranch_block) unnamed_addr #4 !dbg !3150 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cbranch_block, metadata !3152, metadata !DIExpression()), !dbg !3159
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cbranch_block, i64 0, i32 1, !dbg !3160
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3160
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3160
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3160

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3160
  br label %cond.end, !dbg !3160

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3160
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3160
  %cmp = icmp eq i32 %call, 2, !dbg !3162
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3163

if.end:                                           ; preds = %cond.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cbranch_block, i64 0, i32 7, !dbg !3164
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3164
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3164
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !3164
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !3158, metadata !DIExpression()), !dbg !3159
  %call2 = tail call i32 @any_condjump_p(%struct.rtx_def* %2) #6, !dbg !3165
  %tobool3 = icmp eq i32 %call2, 0, !dbg !3165
  br i1 %tobool3, label %cleanup, label %if.end5, !dbg !3167

if.end5:                                          ; preds = %if.end
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3168
  %tobool7 = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !3168
  br i1 %tobool7, label %cond.end12, label %cond.true8, !dbg !3168

cond.true8:                                       ; preds = %if.end5
  %base10 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !3168
  br label %cond.end12, !dbg !3168

cond.end12:                                       ; preds = %if.end5, %cond.true8
  %cond13 = phi %struct.VEC_edge_base* [ %base10, %cond.true8 ], [ null, %if.end5 ], !dbg !3168
  %call14 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond13, i32 0) #8, !dbg !3168
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call14, i64 0, i32 7, !dbg !3168
  %4 = load i32, i32* %flags, align 8, !dbg !3168
  %and = and i32 %4, 1, !dbg !3168
  %tobool15 = icmp eq i32 %and, 0, !dbg !3168
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3168
  %tobool18 = icmp ne %struct.VEC_edge_gc* %5, null, !dbg !3168
  br i1 %tobool15, label %cond.false26, label %cond.true16, !dbg !3168

cond.true16:                                      ; preds = %cond.end12
  br i1 %tobool18, label %cond.true19, label %cond.end23, !dbg !3168

cond.true19:                                      ; preds = %cond.true16
  %base21 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !3168
  br label %cond.end23, !dbg !3168

cond.end23:                                       ; preds = %cond.true16, %cond.true19
  %cond24 = phi %struct.VEC_edge_base* [ %base21, %cond.true19 ], [ null, %cond.true16 ], !dbg !3168
  %call25 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond24, i32 0) #8, !dbg !3168
  br label %cond.end36, !dbg !3168

cond.false26:                                     ; preds = %cond.end12
  br i1 %tobool18, label %cond.true29, label %cond.end33, !dbg !3168

cond.true29:                                      ; preds = %cond.false26
  %base31 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !3168
  br label %cond.end33, !dbg !3168

cond.end33:                                       ; preds = %cond.false26, %cond.true29
  %cond34 = phi %struct.VEC_edge_base* [ %base31, %cond.true29 ], [ null, %cond.false26 ], !dbg !3168
  %call35 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond34, i32 1) #8, !dbg !3168
  br label %cond.end36, !dbg !3168

cond.end36:                                       ; preds = %cond.end33, %cond.end23
  %cond37 = phi %struct.edge_def* [ %call25, %cond.end23 ], [ %call35, %cond.end33 ], !dbg !3168
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond37, metadata !3157, metadata !DIExpression()), !dbg !3159
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3169
  %tobool39 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !3169
  br i1 %tobool39, label %cond.end44, label %cond.true40, !dbg !3169

cond.true40:                                      ; preds = %cond.end36
  %base42 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !3169
  br label %cond.end44, !dbg !3169

cond.end44:                                       ; preds = %cond.end36, %cond.true40
  %cond45 = phi %struct.VEC_edge_base* [ %base42, %cond.true40 ], [ null, %cond.end36 ], !dbg !3169
  %call46 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond45, i32 0) #8, !dbg !3169
  %flags47 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call46, i64 0, i32 7, !dbg !3169
  %7 = load i32, i32* %flags47, align 8, !dbg !3169
  %and48 = and i32 %7, 1, !dbg !3169
  %tobool49 = icmp eq i32 %and48, 0, !dbg !3169
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3169
  %tobool52 = icmp ne %struct.VEC_edge_gc* %8, null, !dbg !3169
  br i1 %tobool49, label %cond.false60, label %cond.true50, !dbg !3169

cond.true50:                                      ; preds = %cond.end44
  br i1 %tobool52, label %cond.true53, label %cond.end57, !dbg !3169

cond.true53:                                      ; preds = %cond.true50
  %base55 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !3169
  br label %cond.end57, !dbg !3169

cond.end57:                                       ; preds = %cond.true50, %cond.true53
  %cond58 = phi %struct.VEC_edge_base* [ %base55, %cond.true53 ], [ null, %cond.true50 ], !dbg !3169
  %call59 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond58, i32 1) #8, !dbg !3169
  br label %cond.end70, !dbg !3169

cond.false60:                                     ; preds = %cond.end44
  br i1 %tobool52, label %cond.true63, label %cond.end67, !dbg !3169

cond.true63:                                      ; preds = %cond.false60
  %base65 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !3169
  br label %cond.end67, !dbg !3169

cond.end67:                                       ; preds = %cond.false60, %cond.true63
  %cond68 = phi %struct.VEC_edge_base* [ %base65, %cond.true63 ], [ null, %cond.false60 ], !dbg !3169
  %call69 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond68, i32 0) #8, !dbg !3169
  br label %cond.end70, !dbg !3169

cond.end70:                                       ; preds = %cond.end67, %cond.end57
  %cond71 = phi %struct.edge_def* [ %call59, %cond.end57 ], [ %call69, %cond.end67 ], !dbg !3169
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond71, metadata !3156, metadata !DIExpression()), !dbg !3159
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond37, i64 0, i32 1, !dbg !3170
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3170
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !3153, metadata !DIExpression()), !dbg !3159
  %call72 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %9) #8, !dbg !3171
  %tobool73 = icmp eq i8 %call72, 0, !dbg !3171
  br i1 %tobool73, label %cleanup, label %lor.lhs.false, !dbg !3173

lor.lhs.false:                                    ; preds = %cond.end70
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 6, !dbg !3174
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3174
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3175
  %cfg = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !3175
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3175
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 1, !dbg !3175
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3175
  %cmp74 = icmp eq %struct.basic_block_def* %10, %13, !dbg !3176
  br i1 %cmp74, label %cleanup, label %lor.lhs.false75, !dbg !3177

lor.lhs.false75:                                  ; preds = %lor.lhs.false
  %flags76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 13, !dbg !3178
  %14 = load i32, i32* %flags76, align 8, !dbg !3178
  %and77 = and i32 %14, 1024, !dbg !3178
  %tobool78 = icmp eq i32 %and77, 0, !dbg !3178
  br i1 %tobool78, label %cleanup, label %if.end80, !dbg !3179

if.end80:                                         ; preds = %lor.lhs.false75
  %call81 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %9) #8, !dbg !3180
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call81, metadata !3154, metadata !DIExpression()), !dbg !3159
  %15 = load i32, i32* %flags76, align 8, !dbg !3181
  %flags84 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call81, i64 0, i32 13, !dbg !3183
  %16 = load i32, i32* %flags84, align 8, !dbg !3183
  %17 = xor i32 %15, %16, !dbg !3184
  %18 = and i32 %17, 96, !dbg !3184
  %cmp86 = icmp eq i32 %18, 0, !dbg !3184
  br i1 %cmp86, label %lor.lhs.false87, label %cleanup, !dbg !3185

lor.lhs.false87:                                  ; preds = %if.end80
  %flags88 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond71, i64 0, i32 7, !dbg !3186
  %19 = load i32, i32* %flags88, align 8, !dbg !3186
  %and89 = and i32 %19, 8192, !dbg !3187
  %tobool90 = icmp eq i32 %and89, 0, !dbg !3187
  br i1 %tobool90, label %if.end92, label %cleanup, !dbg !3188

if.end92:                                         ; preds = %lor.lhs.false87
  %dest93 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond71, i64 0, i32 1, !dbg !3189
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest93, align 8, !dbg !3189
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !3155, metadata !DIExpression()), !dbg !3159
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3190
  %cfg95 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 1, !dbg !3190
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg95, align 8, !dbg !3190
  %x_exit_block_ptr96 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i64 0, i32 1, !dbg !3190
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr96, align 8, !dbg !3190
  %cmp97 = icmp eq %struct.basic_block_def* %20, %23, !dbg !3192
  br i1 %cmp97, label %cleanup, label %lor.lhs.false98, !dbg !3193

lor.lhs.false98:                                  ; preds = %if.end92
  %call99 = tail call zeroext i8 @can_fallthru(%struct.basic_block_def* %9, %struct.basic_block_def* %20) #6, !dbg !3194
  %tobool100 = icmp eq i8 %call99, 0, !dbg !3194
  br i1 %tobool100, label %cleanup, label %if.end102, !dbg !3195

if.end102:                                        ; preds = %lor.lhs.false98
  %call103 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* %call81) #6, !dbg !3196
  %call104 = tail call i32 @invert_jump(%struct.rtx_def* %2, %struct.rtx_def* %call103, i32 0) #6, !dbg !3198
  %tobool105 = icmp eq i32 %call104, 0, !dbg !3198
  br i1 %tobool105, label %cleanup, label %if.end107, !dbg !3199

if.end107:                                        ; preds = %if.end102
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3200
  %tobool108 = icmp eq %struct._IO_FILE* %24, null, !dbg !3200
  br i1 %tobool108, label %if.end118, label %if.then109, !dbg !3202

if.then109:                                       ; preds = %if.end107
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3203
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3203
  %25 = load i32, i32* %rt_int, align 8, !dbg !3203
  %il110 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 7, !dbg !3204
  %rtl111 = bitcast %union.basic_block_il_dependent* %il110 to %struct.rtl_bb_info**, !dbg !3204
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl111, align 8, !dbg !3204
  %end_112 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i64 0, i32 1, !dbg !3204
  %27 = load %struct.rtx_def*, %struct.rtx_def** %end_112, align 8, !dbg !3204
  %arrayidx115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3204
  %rt_int116 = bitcast %union.rtunion_def* %arrayidx115 to i32*, !dbg !3204
  %28 = load i32, i32* %rt_int116, align 8, !dbg !3204
  %call117 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %24, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), i32 %25, i32 %28) #6, !dbg !3205
  br label %if.end118, !dbg !3205

if.end118:                                        ; preds = %if.end107, %if.then109
  %call119 = tail call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %cond71, %struct.basic_block_def* %20) #6, !dbg !3206
  call void @llvm.dbg.value(metadata %struct.edge_def* %call119, metadata !3156, metadata !DIExpression()), !dbg !3159
  %call120 = tail call %struct.edge_def* @redirect_edge_succ_nodup(%struct.edge_def* %cond37, %struct.basic_block_def* %call81) #6, !dbg !3207
  call void @llvm.dbg.value(metadata %struct.edge_def* %call120, metadata !3157, metadata !DIExpression()), !dbg !3159
  %flags121 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call119, i64 0, i32 7, !dbg !3208
  %29 = load i32, i32* %flags121, align 8, !dbg !3209
  %or = or i32 %29, 1, !dbg !3209
  store i32 %or, i32* %flags121, align 8, !dbg !3209
  %flags122 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call120, i64 0, i32 7, !dbg !3210
  %30 = load i32, i32* %flags122, align 8, !dbg !3211
  %and123 = and i32 %30, -2, !dbg !3211
  store i32 %and123, i32* %flags122, align 8, !dbg !3211
  tail call void @update_br_prob_note(%struct.basic_block_def* %cbranch_block) #6, !dbg !3212
  tail call void @delete_basic_block(%struct.basic_block_def* %9) #6, !dbg !3213
  tail call void @tidy_fallthru_edge(%struct.edge_def* %call119) #6, !dbg !3214
  tail call fastcc void @update_forwarder_flag(%struct.basic_block_def* %cbranch_block) #8, !dbg !3215
  br label %cleanup, !dbg !3216

cleanup:                                          ; preds = %if.end102, %lor.lhs.false98, %lor.lhs.false87, %if.end80, %lor.lhs.false75, %cond.end70, %if.end, %cond.end, %if.end92, %lor.lhs.false, %if.end118
  %retval.0 = phi i8 [ 1, %if.end118 ], [ 0, %cond.end ], [ 0, %if.end ], [ 0, %lor.lhs.false75 ], [ 0, %lor.lhs.false ], [ 0, %cond.end70 ], [ 0, %lor.lhs.false87 ], [ 0, %if.end80 ], [ 0, %lor.lhs.false98 ], [ 0, %if.end92 ], [ 0, %if.end102 ], !dbg !3159
  ret i8 %retval.0, !dbg !3217
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @try_redirect_by_replacing_jump(%struct.edge_def*, %struct.basic_block_def*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_forward_edges(i32 %mode, %struct.basic_block_def* %b) unnamed_addr #4 !dbg !3218 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3222, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !3223, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i8 0, metadata !3224, metadata !DIExpression()), !dbg !3264
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3265
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3265
  call void @llvm.dbg.value(metadata %struct.edge_def** null, metadata !3227, metadata !DIExpression()), !dbg !3264
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 7, !dbg !3266
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3266
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3266
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !3266
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3266
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %2, i32 29, %struct.rtx_def* null) #6, !dbg !3268
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !3268
  br i1 %tobool, label %if.end, label %cleanup322, !dbg !3269

if.end:                                           ; preds = %entry
  %3 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3270
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7, !dbg !3270
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 1, !dbg !3270
  %call1 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !3270
  %4 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3270
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 0, !dbg !3270
  store i32 %5, i32* %4, align 8, !dbg !3270
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3270
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 1, !dbg !3270
  store %struct.VEC_edge_gc** %7, %struct.VEC_edge_gc*** %6, align 8, !dbg !3270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !3270
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7, !dbg !3270
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3271
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3271
  %and121 = and i32 %mode, 8, !dbg !3272
  %tobool122 = icmp ne i32 %and121, 0, !dbg !3272
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 11, !dbg !3273
  %flags232 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 13, !dbg !3274
  %index223 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !3276
  br label %for.cond, !dbg !3281

for.cond:                                         ; preds = %for.cond.backedge, %if.end
  %10 = phi i8* [ null, %if.end ], [ %90, %for.cond.backedge ], !dbg !3282
  %threaded_edges.0 = phi %struct.edge_def** [ null, %if.end ], [ %threaded_edges.9, %for.cond.backedge ], !dbg !3282
  %changed.0 = phi i8 [ 0, %if.end ], [ %changed.2, %for.cond.backedge ], !dbg !3283
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !3224, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.0, metadata !3227, metadata !DIExpression()), !dbg !3264
  %11 = load i32, i32* %8, align 8, !dbg !3284
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %9, align 8, !dbg !3284
  %call2 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %11, %struct.VEC_edge_gc** %12) #8, !dbg !3284
  call void @llvm.dbg.value(metadata %struct.edge_def* %call2, metadata !3226, metadata !DIExpression()), !dbg !3264
  %tobool3 = icmp eq %struct.edge_def* %call2, null, !dbg !3285
  br i1 %tobool3, label %for.end318, label %for.body, !dbg !3285

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i8 0, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 0, metadata !3236, metadata !DIExpression()), !dbg !3286
  %.b = load i1, i1* @first_pass, align 1, !dbg !3287
  %13 = zext i1 %.b to i8, !dbg !3287
  %call4 = call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %b) #6, !dbg !3288
  %or7 = or i8 %call4, %13, !dbg !3289
  call void @llvm.dbg.value(metadata i8 %or7, metadata !3237, metadata !DIExpression()), !dbg !3286
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 7, !dbg !3290
  %14 = load i32, i32* %flags, align 8, !dbg !3290
  %and = and i32 %14, 14, !dbg !3292
  %tobool7 = icmp eq i32 %and, 0, !dbg !3292
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3293

if.then8:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3225, metadata !DIExpression(DW_OP_deref)), !dbg !3264
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3294
  br label %cleanup309, !dbg !3296, !llvm.loop !3297

if.end9:                                          ; preds = %for.body
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 1, !dbg !3299
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3299
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %15, metadata !3232, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %15, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 2, metadata !3233, metadata !DIExpression()), !dbg !3286
  %goto_locus10 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 5, !dbg !3300
  %16 = load i32, i32* %goto_locus10, align 8, !dbg !3300
  call void @llvm.dbg.value(metadata i32 %16, metadata !3234, metadata !DIExpression()), !dbg !3286
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3301
  %cfg = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !3301
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3301
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 1, !dbg !3301
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3301
  %cmp = icmp eq %struct.basic_block_def* %15, %19, !dbg !3303
  br i1 %cmp, label %if.end18, label %land.lhs.true, !dbg !3304

land.lhs.true:                                    ; preds = %if.end9
  %il12 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 7, !dbg !3305
  %rtl13 = bitcast %union.basic_block_il_dependent* %il12 to %struct.rtl_bb_info**, !dbg !3305
  %20 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl13, align 8, !dbg !3305
  %end_14 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i64 0, i32 1, !dbg !3305
  %21 = load %struct.rtx_def*, %struct.rtx_def** %end_14, align 8, !dbg !3305
  %call15 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %21, i32 29, %struct.rtx_def* null) #6, !dbg !3306
  %tobool16 = icmp eq %struct.rtx_def* %call15, null, !dbg !3306
  br i1 %tobool16, label %if.end18, label %cleanup309, !dbg !3307

if.end18:                                         ; preds = %land.lhs.true, %if.end9
  br label %while.cond, !dbg !3308

while.cond:                                       ; preds = %cleanup183, %if.end18
  %may_thread.0 = phi i8 [ %or7, %if.end18 ], [ %or268, %cleanup183 ], !dbg !3286
  %nthreaded_edges.0 = phi i32 [ 0, %if.end18 ], [ %nthreaded_edges.5, %cleanup183 ], !dbg !3309
  %threaded.0 = phi i8 [ 0, %if.end18 ], [ %threaded.1, %cleanup183 ], !dbg !3310
  %goto_locus.0 = phi i32 [ %16, %if.end18 ], [ %goto_locus.9, %cleanup183 ], !dbg !3311
  %counter.0 = phi i32 [ 2, %if.end18 ], [ %counter.12, %cleanup183 ], !dbg !3286
  %target.0 = phi %struct.basic_block_def* [ %15, %if.end18 ], [ %target.1, %cleanup183 ], !dbg !3312
  %22 = phi i8* [ %10, %if.end18 ], [ %63, %cleanup183 ], !dbg !3282
  %threaded_edges.1 = phi %struct.edge_def** [ %threaded_edges.0, %if.end18 ], [ %threaded_edges.7, %cleanup183 ], !dbg !3282
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.1, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target.0, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.0, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.0, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %threaded.0, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.0, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %may_thread.0, metadata !3237, metadata !DIExpression()), !dbg !3286
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3313
  %cfg20 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 1, !dbg !3313
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20, align 8, !dbg !3313
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i64 0, i32 3, !dbg !3313
  %25 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3313
  %cmp21 = icmp slt i32 %counter.0, %25, !dbg !3314
  br i1 %cmp21, label %while.body, label %while.end.loopexit, !dbg !3308

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !3238, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.value(metadata i8 0, metadata !3240, metadata !DIExpression()), !dbg !3315
  %call23 = call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %target.0) #6, !dbg !3316
  %or268 = or i8 %may_thread.0, %call23, !dbg !3317
  call void @llvm.dbg.value(metadata i8 %or268, metadata !3237, metadata !DIExpression()), !dbg !3286
  %flags28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target.0, i64 0, i32 13, !dbg !3318
  %26 = load i32, i32* %flags28, align 8, !dbg !3318
  %and29 = and i32 %26, 1024, !dbg !3318
  %tobool30 = icmp eq i32 %and29, 0, !dbg !3318
  br i1 %tobool30, label %if.else120, label %land.lhs.true31, !dbg !3319

land.lhs.true31:                                  ; preds = %while.body
  %call32 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %target.0) #8, !dbg !3320
  %flags33 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call32, i64 0, i32 7, !dbg !3321
  %27 = load i32, i32* %flags33, align 8, !dbg !3321
  %and34 = and i32 %27, 8192, !dbg !3322
  %tobool35 = icmp eq i32 %and34, 0, !dbg !3322
  br i1 %tobool35, label %land.lhs.true36, label %if.else120, !dbg !3323

land.lhs.true36:                                  ; preds = %land.lhs.true31
  %call37 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %target.0) #8, !dbg !3324
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3325
  %cfg39 = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 1, !dbg !3325
  %29 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg39, align 8, !dbg !3325
  %x_exit_block_ptr40 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %29, i64 0, i32 1, !dbg !3325
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr40, align 8, !dbg !3325
  %cmp41 = icmp eq %struct.basic_block_def* %call37, %30, !dbg !3326
  br i1 %cmp41, label %if.else120, label %if.then43, !dbg !3327

if.then43:                                        ; preds = %land.lhs.true36
  %call44 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %target.0) #8, !dbg !3328
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call44, metadata !3238, metadata !DIExpression()), !dbg !3315
  %cmp45 = icmp eq %struct.basic_block_def* %target.0, %call44, !dbg !3329
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !3330

if.then47:                                        ; preds = %if.then43
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3331
  %cfg49 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 1, !dbg !3331
  %32 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg49, align 8, !dbg !3331
  %x_n_basic_blocks50 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %32, i64 0, i32 3, !dbg !3331
  %33 = load i32, i32* %x_n_basic_blocks50, align 8, !dbg !3331
  call void @llvm.dbg.value(metadata i32 %33, metadata !3233, metadata !DIExpression()), !dbg !3286
  br label %if.end174, !dbg !3332

if.else:                                          ; preds = %if.then43
  %34 = load i32, i32* @optimize, align 4, !dbg !3333
  %tobool51 = icmp eq i32 %34, 0, !dbg !3333
  br i1 %tobool51, label %if.then52, label %if.end174, !dbg !3334

if.then52:                                        ; preds = %if.else
  %call53 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %target.0) #8, !dbg !3335
  %goto_locus54 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call53, i64 0, i32 5, !dbg !3336
  %35 = load i32, i32* %goto_locus54, align 8, !dbg !3336
  call void @llvm.dbg.value(metadata i32 %35, metadata !3241, metadata !DIExpression()), !dbg !3337
  %tobool55 = icmp ne i32 %35, 0, !dbg !3338
  %tobool57 = icmp ne i32 %goto_locus.0, 0, !dbg !3340
  %or.cond = and i1 %tobool55, %tobool57, !dbg !3341
  br i1 %or.cond, label %land.lhs.true58, label %if.else65, !dbg !3341

land.lhs.true58:                                  ; preds = %if.then52
  %call59 = call zeroext i8 @locator_eq(i32 %35, i32 %goto_locus.0) #6, !dbg !3342
  %tobool60 = icmp eq i8 %call59, 0, !dbg !3342
  br i1 %tobool60, label %if.then61, label %if.else65, !dbg !3343

if.then61:                                        ; preds = %land.lhs.true58
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3344
  %cfg63 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, i32 1, !dbg !3344
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg63, align 8, !dbg !3344
  %x_n_basic_blocks64 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i64 0, i32 3, !dbg !3344
  %38 = load i32, i32* %x_n_basic_blocks64, align 8, !dbg !3344
  call void @llvm.dbg.value(metadata i32 %38, metadata !3233, metadata !DIExpression()), !dbg !3286
  br label %if.end69, !dbg !3345

if.else65:                                        ; preds = %land.lhs.true58, %if.then52
  %tobool66 = icmp eq i32 %35, 0, !dbg !3346
  %spec.select = select i1 %tobool66, i32 %goto_locus.0, i32 %35, !dbg !3348
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3234, metadata !DIExpression()), !dbg !3286
  br label %if.end69

if.end69:                                         ; preds = %if.else65, %if.then61
  %goto_locus.2 = phi i32 [ %spec.select, %if.else65 ], [ %goto_locus.0, %if.then61 ], !dbg !3286
  %counter.1 = phi i32 [ %counter.0, %if.else65 ], [ %38, %if.then61 ], !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.1, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.2, metadata !3234, metadata !DIExpression()), !dbg !3286
  %il70 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target.0, i64 0, i32 7, !dbg !3349
  %rtl71 = bitcast %union.basic_block_il_dependent* %il70 to %struct.rtl_bb_info**, !dbg !3349
  %39 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl71, align 8, !dbg !3349
  %end_72 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %39, i64 0, i32 1, !dbg !3349
  %40 = bitcast %struct.rtx_def** %end_72 to i32**, !dbg !3349
  %41 = load i32*, i32** %40, align 8, !dbg !3349
  %bf.load = load i32, i32* %41, align 8, !dbg !3349
  %bf.clear = and i32 %bf.load, 65535, !dbg !3349
  %cmp73 = icmp eq i32 %bf.clear, 8, !dbg !3349
  br i1 %cmp73, label %if.then98, label %lor.lhs.false, !dbg !3349

lor.lhs.false:                                    ; preds = %if.end69
  %cmp80 = icmp eq i32 %bf.clear, 7, !dbg !3349
  br i1 %cmp80, label %if.then98, label %lor.lhs.false82, !dbg !3349

lor.lhs.false82:                                  ; preds = %lor.lhs.false
  %cmp88 = icmp eq i32 %bf.clear, 9, !dbg !3349
  br i1 %cmp88, label %if.then98, label %lor.lhs.false90, !dbg !3349

lor.lhs.false90:                                  ; preds = %lor.lhs.false82
  %cmp96 = icmp eq i32 %bf.clear, 10, !dbg !3349
  br i1 %cmp96, label %if.then98, label %if.end174, !dbg !3351

if.then98:                                        ; preds = %lor.lhs.false90, %lor.lhs.false82, %lor.lhs.false, %if.end69
  %arrayidx = getelementptr inbounds i32, i32* %41, i64 10, !dbg !3352
  %42 = load i32, i32* %arrayidx, align 8, !dbg !3352
  call void @llvm.dbg.value(metadata i32 %42, metadata !3241, metadata !DIExpression()), !dbg !3337
  %tobool102 = icmp ne i32 %42, 0, !dbg !3354
  %tobool104 = icmp ne i32 %goto_locus.2, 0, !dbg !3356
  %or.cond3 = and i1 %tobool102, %tobool104, !dbg !3357
  br i1 %or.cond3, label %land.lhs.true105, label %if.else112, !dbg !3357

land.lhs.true105:                                 ; preds = %if.then98
  %call106 = call zeroext i8 @locator_eq(i32 %42, i32 %goto_locus.2) #6, !dbg !3358
  %tobool107 = icmp eq i8 %call106, 0, !dbg !3358
  br i1 %tobool107, label %if.then108, label %if.else112, !dbg !3359

if.then108:                                       ; preds = %land.lhs.true105
  %43 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3360
  %cfg110 = getelementptr inbounds %struct.function, %struct.function* %43, i64 0, i32 1, !dbg !3360
  %44 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg110, align 8, !dbg !3360
  %x_n_basic_blocks111 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %44, i64 0, i32 3, !dbg !3360
  %45 = load i32, i32* %x_n_basic_blocks111, align 8, !dbg !3360
  call void @llvm.dbg.value(metadata i32 %45, metadata !3233, metadata !DIExpression()), !dbg !3286
  br label %if.end174, !dbg !3361

if.else112:                                       ; preds = %land.lhs.true105, %if.then98
  %tobool113 = icmp eq i32 %42, 0, !dbg !3362
  %spec.select4 = select i1 %tobool113, i32 %goto_locus.2, i32 %42, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !3234, metadata !DIExpression()), !dbg !3286
  br label %if.end174

if.else120:                                       ; preds = %land.lhs.true36, %land.lhs.true31, %while.body
  %tobool125 = icmp ne i8 %or268, 0, !dbg !3365
  %or.cond5 = and i1 %tobool122, %tobool125, !dbg !3366
  br i1 %or.cond5, label %if.then126, label %if.end174, !dbg !3366

if.then126:                                       ; preds = %if.else120
  %call127 = call fastcc %struct.edge_def* @thread_jump(%struct.edge_def* nonnull %call2, %struct.basic_block_def* %target.0) #8, !dbg !3367
  call void @llvm.dbg.value(metadata %struct.edge_def* %call127, metadata !3247, metadata !DIExpression()), !dbg !3368
  %tobool128 = icmp eq %struct.edge_def* %call127, null, !dbg !3369
  br i1 %tobool128, label %cleanup170, label %if.then129, !dbg !3370

if.then129:                                       ; preds = %if.then126
  %tobool130 = icmp eq %struct.edge_def** %threaded_edges.1, null, !dbg !3371
  br i1 %tobool130, label %if.then131, label %for.cond138.preheader, !dbg !3372

for.cond138.preheader:                            ; preds = %if.then129
  %46 = sext i32 %nthreaded_edges.0 to i64, !dbg !3373
  br label %for.cond138, !dbg !3373

if.then131:                                       ; preds = %if.then129
  %47 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3375
  %cfg133 = getelementptr inbounds %struct.function, %struct.function* %47, i64 0, i32 1, !dbg !3375
  %48 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg133, align 8, !dbg !3375
  %x_n_basic_blocks134 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %48, i64 0, i32 3, !dbg !3375
  %49 = load i32, i32* %x_n_basic_blocks134, align 8, !dbg !3375
  %conv135 = sext i32 %49 to i64, !dbg !3375
  %mul = shl nsw i64 %conv135, 3, !dbg !3375
  %call136 = call i8* @xmalloc(i64 %mul) #6, !dbg !3375
  %50 = bitcast i8* %call136 to %struct.edge_def**, !dbg !3375
  call void @llvm.dbg.value(metadata %struct.edge_def** %50, metadata !3227, metadata !DIExpression()), !dbg !3264
  br label %if.end154, !dbg !3376

for.cond138:                                      ; preds = %for.cond138.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond138.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3377
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3250, metadata !DIExpression()), !dbg !3378
  %cmp139 = icmp slt i64 %indvars.iv, %46, !dbg !3379
  br i1 %cmp139, label %for.body141, label %for.end, !dbg !3373

for.body141:                                      ; preds = %for.cond138
  %arrayidx142 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %threaded_edges.1, i64 %indvars.iv, !dbg !3381
  %51 = load %struct.edge_def*, %struct.edge_def** %arrayidx142, align 8, !dbg !3381
  %cmp143 = icmp eq %struct.edge_def* %51, %call127, !dbg !3383
  br i1 %cmp143, label %for.end, label %for.inc, !dbg !3384

for.inc:                                          ; preds = %for.body141
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3385
  call void @llvm.dbg.value(metadata i32 undef, metadata !3250, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3378
  br label %for.cond138, !dbg !3386, !llvm.loop !3387

for.end:                                          ; preds = %for.body141, %for.cond138
  %cmp139.lcssa = phi i1 [ %cmp139, %for.body141 ], [ %cmp139, %for.cond138 ], !dbg !3379
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3250, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3250, metadata !DIExpression()), !dbg !3378
  br i1 %cmp139.lcssa, label %if.then149, label %cleanup, !dbg !3389

if.then149:                                       ; preds = %for.end
  %52 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3390
  %cfg151 = getelementptr inbounds %struct.function, %struct.function* %52, i64 0, i32 1, !dbg !3390
  %53 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg151, align 8, !dbg !3390
  %x_n_basic_blocks152 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %53, i64 0, i32 3, !dbg !3390
  %54 = load i32, i32* %x_n_basic_blocks152, align 8, !dbg !3390
  call void @llvm.dbg.value(metadata i32 %54, metadata !3233, metadata !DIExpression()), !dbg !3286
  br label %cleanup, !dbg !3393

cleanup:                                          ; preds = %for.end, %if.then149
  %counter.6 = phi i32 [ %54, %if.then149 ], [ %counter.0, %for.end ], !dbg !3286
  %cleanup.dest.slot.0 = phi i32 [ 5, %if.then149 ], [ 0, %for.end ]
  call void @llvm.dbg.value(metadata i32 %counter.6, metadata !3233, metadata !DIExpression()), !dbg !3286
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end154, label %cleanup170

if.end154:                                        ; preds = %cleanup, %if.then131
  %counter.7 = phi i32 [ %counter.0, %if.then131 ], [ %counter.6, %cleanup ], !dbg !3286
  %55 = phi i8* [ %call136, %if.then131 ], [ %22, %cleanup ], !dbg !3264
  %threaded_edges.2 = phi %struct.edge_def** [ %50, %if.then131 ], [ %threaded_edges.1, %cleanup ], !dbg !3264
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.2, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 %counter.7, metadata !3233, metadata !DIExpression()), !dbg !3286
  %dest155 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call127, i64 0, i32 1, !dbg !3394
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %dest155, align 8, !dbg !3394
  %cmp156 = icmp eq %struct.basic_block_def* %56, %b, !dbg !3396
  br i1 %cmp156, label %cleanup170, label %if.end159, !dbg !3397

if.end159:                                        ; preds = %if.end154
  %57 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3398
  %cfg161 = getelementptr inbounds %struct.function, %struct.function* %57, i64 0, i32 1, !dbg !3398
  %58 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg161, align 8, !dbg !3398
  %x_n_basic_blocks162 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %58, i64 0, i32 3, !dbg !3398
  %59 = load i32, i32* %x_n_basic_blocks162, align 8, !dbg !3398
  %sub = add nsw i32 %59, -2, !dbg !3398
  %cmp163 = icmp slt i32 %nthreaded_edges.0, %sub, !dbg !3398
  br i1 %cmp163, label %cond.end, label %cond.true, !dbg !3398

cond.true:                                        ; preds = %if.end159
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3398
  br label %cond.end, !dbg !3398

cond.end:                                         ; preds = %if.end159, %cond.true
  %inc165 = add nsw i32 %nthreaded_edges.0, 1, !dbg !3399
  call void @llvm.dbg.value(metadata i32 %inc165, metadata !3236, metadata !DIExpression()), !dbg !3286
  %idxprom166 = sext i32 %nthreaded_edges.0 to i64, !dbg !3400
  %arrayidx167 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %threaded_edges.2, i64 %idxprom166, !dbg !3400
  store %struct.edge_def* %call127, %struct.edge_def** %arrayidx167, align 8, !dbg !3401
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %dest155, align 8, !dbg !3402
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %60, metadata !3238, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.value(metadata i8 1, metadata !3240, metadata !DIExpression()), !dbg !3315
  br label %cleanup170, !dbg !3403

cleanup170:                                       ; preds = %if.then126, %cond.end, %if.end154, %cleanup
  %new_target_threaded.1 = phi i8 [ 0, %cleanup ], [ 0, %if.end154 ], [ 1, %cond.end ], [ 0, %if.then126 ], !dbg !3315
  %new_target.1 = phi %struct.basic_block_def* [ null, %cleanup ], [ null, %if.end154 ], [ %60, %cond.end ], [ null, %if.then126 ], !dbg !3315
  %nthreaded_edges.2 = phi i32 [ %nthreaded_edges.0, %cleanup ], [ %nthreaded_edges.0, %if.end154 ], [ %inc165, %cond.end ], [ %nthreaded_edges.0, %if.then126 ], !dbg !3286
  %counter.9 = phi i32 [ %counter.6, %cleanup ], [ %counter.7, %if.end154 ], [ %counter.7, %cond.end ], [ %counter.0, %if.then126 ], !dbg !3404
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 5, %if.end154 ], [ 0, %cond.end ], [ 0, %if.then126 ]
  %61 = phi i8* [ %22, %cleanup ], [ %55, %if.end154 ], [ %55, %cond.end ], [ %22, %if.then126 ], !dbg !3282
  %threaded_edges.4 = phi %struct.edge_def** [ %threaded_edges.1, %cleanup ], [ %threaded_edges.2, %if.end154 ], [ %threaded_edges.2, %cond.end ], [ %threaded_edges.1, %if.then126 ], !dbg !3282
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.4, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 %counter.9, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.2, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_target.1, metadata !3238, metadata !DIExpression()), !dbg !3315
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end174, label %cleanup183

if.end174:                                        ; preds = %if.else, %if.else120, %cleanup170, %if.then47, %lor.lhs.false90, %if.else112, %if.then108
  %new_target_threaded.3 = phi i8 [ 0, %if.else ], [ 0, %if.then108 ], [ 0, %if.else112 ], [ 0, %lor.lhs.false90 ], [ 0, %if.then47 ], [ 0, %if.else120 ], [ %new_target_threaded.1, %cleanup170 ], !dbg !3405
  %new_target.3 = phi %struct.basic_block_def* [ %call44, %if.else ], [ %call44, %if.then108 ], [ %call44, %if.else112 ], [ %call44, %lor.lhs.false90 ], [ %target.0, %if.then47 ], [ null, %if.else120 ], [ %new_target.1, %cleanup170 ], !dbg !3315
  %nthreaded_edges.4 = phi i32 [ %nthreaded_edges.0, %if.else ], [ %nthreaded_edges.0, %if.then108 ], [ %nthreaded_edges.0, %if.else112 ], [ %nthreaded_edges.0, %lor.lhs.false90 ], [ %nthreaded_edges.0, %if.then47 ], [ %nthreaded_edges.0, %if.else120 ], [ %nthreaded_edges.2, %cleanup170 ], !dbg !3309
  %goto_locus.8 = phi i32 [ %goto_locus.0, %if.else ], [ %goto_locus.2, %if.then108 ], [ %spec.select4, %if.else112 ], [ %goto_locus.2, %lor.lhs.false90 ], [ %goto_locus.0, %if.then47 ], [ %goto_locus.0, %if.else120 ], [ %goto_locus.0, %cleanup170 ], !dbg !3311
  %counter.11 = phi i32 [ %counter.0, %if.else ], [ %45, %if.then108 ], [ %counter.1, %if.else112 ], [ %counter.1, %lor.lhs.false90 ], [ %33, %if.then47 ], [ %counter.0, %if.else120 ], [ %counter.9, %cleanup170 ], !dbg !3406
  %62 = phi i8* [ %22, %if.else ], [ %22, %if.then108 ], [ %22, %if.else112 ], [ %22, %lor.lhs.false90 ], [ %22, %if.then47 ], [ %22, %if.else120 ], [ %61, %cleanup170 ], !dbg !3282
  %threaded_edges.6 = phi %struct.edge_def** [ %threaded_edges.1, %if.else ], [ %threaded_edges.1, %if.then108 ], [ %threaded_edges.1, %if.else112 ], [ %threaded_edges.1, %lor.lhs.false90 ], [ %threaded_edges.1, %if.then47 ], [ %threaded_edges.1, %if.else120 ], [ %threaded_edges.4, %cleanup170 ], !dbg !3282
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.6, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 %counter.11, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.8, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.4, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_target.3, metadata !3238, metadata !DIExpression()), !dbg !3315
  %tobool175 = icmp eq %struct.basic_block_def* %new_target.3, null, !dbg !3407
  br i1 %tobool175, label %cleanup183, label %if.end177, !dbg !3409

if.end177:                                        ; preds = %if.end174
  %inc178 = add nsw i32 %counter.11, 1, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %inc178, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_target.3, metadata !3228, metadata !DIExpression()), !dbg !3286
  %or181 = or i8 %new_target_threaded.3, %threaded.0, !dbg !3411
  call void @llvm.dbg.value(metadata i8 %or181, metadata !3235, metadata !DIExpression()), !dbg !3286
  br label %cleanup183, !dbg !3412

cleanup183:                                       ; preds = %if.end174, %cleanup170, %if.end177
  %nthreaded_edges.5 = phi i32 [ %nthreaded_edges.2, %cleanup170 ], [ %nthreaded_edges.4, %if.end177 ], [ %nthreaded_edges.4, %if.end174 ], !dbg !3309
  %threaded.1 = phi i8 [ %threaded.0, %cleanup170 ], [ %or181, %if.end177 ], [ %threaded.0, %if.end174 ], !dbg !3286
  %goto_locus.9 = phi i32 [ %goto_locus.0, %cleanup170 ], [ %goto_locus.8, %if.end177 ], [ %goto_locus.8, %if.end174 ], !dbg !3311
  %counter.12 = phi i32 [ %counter.9, %cleanup170 ], [ %inc178, %if.end177 ], [ %counter.11, %if.end174 ], !dbg !3315
  %target.1 = phi %struct.basic_block_def* [ %target.0, %cleanup170 ], [ %new_target.3, %if.end177 ], [ %target.0, %if.end174 ], !dbg !3286
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup170 ], [ 0, %if.end177 ], [ 5, %if.end174 ]
  %63 = phi i8* [ %61, %cleanup170 ], [ %62, %if.end177 ], [ %62, %if.end174 ], !dbg !3282
  %threaded_edges.7 = phi %struct.edge_def** [ %threaded_edges.4, %cleanup170 ], [ %threaded_edges.6, %if.end177 ], [ %threaded_edges.6, %if.end174 ], !dbg !3282
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.7, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target.1, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.12, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.9, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %threaded.1, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.5, metadata !3236, metadata !DIExpression()), !dbg !3286
  %switch = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %switch, label %while.cond, label %cleanup183.while.end_crit_edge, !llvm.loop !3413

cleanup183.while.end_crit_edge:                   ; preds = %cleanup183
  %nthreaded_edges.5.lcssa = phi i32 [ %nthreaded_edges.5, %cleanup183 ], !dbg !3309
  %threaded.1.lcssa = phi i8 [ %threaded.1, %cleanup183 ], !dbg !3286
  %goto_locus.9.lcssa = phi i32 [ %goto_locus.9, %cleanup183 ], !dbg !3311
  %counter.12.lcssa = phi i32 [ %counter.12, %cleanup183 ], !dbg !3315
  %target.1.lcssa = phi %struct.basic_block_def* [ %target.1, %cleanup183 ], !dbg !3286
  %.lcssa46 = phi i8* [ %63, %cleanup183 ], !dbg !3282
  %threaded_edges.7.lcssa = phi %struct.edge_def** [ %threaded_edges.7, %cleanup183 ], !dbg !3282
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.5.lcssa, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %threaded.1.lcssa, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.9.lcssa, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.12.lcssa, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target.1.lcssa, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.7.lcssa, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.5.lcssa, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %threaded.1.lcssa, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.9.lcssa, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.12.lcssa, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target.1.lcssa, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.7.lcssa, metadata !3227, metadata !DIExpression()), !dbg !3264
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3414
  %cfg188.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3415
  %.pre15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg188.phi.trans.insert, align 8, !dbg !3414
  %x_n_basic_blocks189.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre15, i64 0, i32 3, !dbg !3415
  %.pre16 = load i32, i32* %x_n_basic_blocks189.phi.trans.insert, align 8, !dbg !3414
  br label %while.end

while.end.loopexit:                               ; preds = %while.cond
  %nthreaded_edges.0.lcssa = phi i32 [ %nthreaded_edges.0, %while.cond ], !dbg !3309
  %threaded.0.lcssa = phi i8 [ %threaded.0, %while.cond ], !dbg !3310
  %goto_locus.0.lcssa = phi i32 [ %goto_locus.0, %while.cond ], !dbg !3311
  %counter.0.lcssa = phi i32 [ %counter.0, %while.cond ], !dbg !3286
  %target.0.lcssa = phi %struct.basic_block_def* [ %target.0, %while.cond ], !dbg !3312
  %.lcssa39 = phi i8* [ %22, %while.cond ], !dbg !3282
  %threaded_edges.1.lcssa = phi %struct.edge_def** [ %threaded_edges.1, %while.cond ], !dbg !3282
  %.lcssa36 = phi %struct.function* [ %23, %while.cond ], !dbg !3313
  %.lcssa = phi i32 [ %25, %while.cond ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.0.lcssa, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %threaded.0.lcssa, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.0.lcssa, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.0.lcssa, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target.0.lcssa, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.1.lcssa, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.0.lcssa, metadata !3236, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %threaded.0.lcssa, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.0.lcssa, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.0.lcssa, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target.0.lcssa, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.1.lcssa, metadata !3227, metadata !DIExpression()), !dbg !3264
  br label %while.end, !dbg !3414

while.end:                                        ; preds = %while.end.loopexit, %cleanup183.while.end_crit_edge
  %64 = phi i32 [ %.pre16, %cleanup183.while.end_crit_edge ], [ %.lcssa, %while.end.loopexit ], !dbg !3414
  %65 = phi %struct.function* [ %.pre, %cleanup183.while.end_crit_edge ], [ %.lcssa36, %while.end.loopexit ], !dbg !3414
  %nthreaded_edges.6 = phi i32 [ %nthreaded_edges.5.lcssa, %cleanup183.while.end_crit_edge ], [ %nthreaded_edges.0.lcssa, %while.end.loopexit ], !dbg !3309
  %threaded.2 = phi i8 [ %threaded.1.lcssa, %cleanup183.while.end_crit_edge ], [ %threaded.0.lcssa, %while.end.loopexit ], !dbg !3310
  %goto_locus.10 = phi i32 [ %goto_locus.9.lcssa, %cleanup183.while.end_crit_edge ], [ %goto_locus.0.lcssa, %while.end.loopexit ], !dbg !3311
  %counter.13 = phi i32 [ %counter.12.lcssa, %cleanup183.while.end_crit_edge ], [ %counter.0.lcssa, %while.end.loopexit ], !dbg !3286
  %target.2 = phi %struct.basic_block_def* [ %target.1.lcssa, %cleanup183.while.end_crit_edge ], [ %target.0.lcssa, %while.end.loopexit ], !dbg !3312
  %66 = phi i8* [ %.lcssa46, %cleanup183.while.end_crit_edge ], [ %.lcssa39, %while.end.loopexit ], !dbg !3282
  %threaded_edges.8 = phi %struct.edge_def** [ %threaded_edges.7.lcssa, %cleanup183.while.end_crit_edge ], [ %threaded_edges.1.lcssa, %while.end.loopexit ], !dbg !3282
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.8, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target.2, metadata !3228, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %counter.13, metadata !3233, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %goto_locus.10, metadata !3234, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i8 %threaded.2, metadata !3235, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %nthreaded_edges.6, metadata !3236, metadata !DIExpression()), !dbg !3286
  %cfg188 = getelementptr inbounds %struct.function, %struct.function* %65, i64 0, i32 1, !dbg !3414
  %cmp190 = icmp slt i32 %counter.13, %64, !dbg !3416
  br i1 %cmp190, label %if.else197, label %if.then192, !dbg !3417

if.then192:                                       ; preds = %while.end
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3418
  %tobool193 = icmp eq %struct._IO_FILE* %67, null, !dbg !3418
  br i1 %tobool193, label %if.end308, label %if.then194, !dbg !3421

if.then194:                                       ; preds = %if.then192
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target.2, i64 0, i32 9, !dbg !3422
  %68 = load i32, i32* %index, align 8, !dbg !3422
  %call195 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %67, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i32 %68) #6, !dbg !3423
  br label %if.end308, !dbg !3423

if.else197:                                       ; preds = %while.end
  %cmp198 = icmp eq %struct.basic_block_def* %target.2, %15, !dbg !3424
  br i1 %cmp198, label %if.end308, label %if.else201, !dbg !3425

if.else201:                                       ; preds = %if.else197
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 9, !dbg !3426
  %69 = load i64, i64* %count, align 8, !dbg !3426
  call void @llvm.dbg.value(metadata i64 %69, metadata !3255, metadata !DIExpression()), !dbg !3273
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call2, i64 0, i32 8, !dbg !3427
  %70 = load i32, i32* %probability, align 4, !dbg !3427
  call void @llvm.dbg.value(metadata i32 %70, metadata !3259, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i32 0, metadata !3261, metadata !DIExpression()), !dbg !3273
  store i32 %goto_locus.10, i32* %goto_locus10, align 8, !dbg !3428
  %tobool204 = icmp eq i8 %threaded.2, 0, !dbg !3429
  br i1 %tobool204, label %if.else217, label %land.lhs.true205, !dbg !3430

land.lhs.true205:                                 ; preds = %if.else201
  %71 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg188, align 8, !dbg !3431
  %x_exit_block_ptr208 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %71, i64 0, i32 1, !dbg !3431
  %72 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr208, align 8, !dbg !3431
  %cmp209 = icmp eq %struct.basic_block_def* %target.2, %72, !dbg !3432
  br i1 %cmp209, label %if.else217, label %if.then211, !dbg !3433

if.then211:                                       ; preds = %land.lhs.true205
  %call212 = call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* nonnull %call2, %struct.basic_block_def* %target.2) #6, !dbg !3434
  call fastcc void @notice_new_block(%struct.basic_block_def* %call212) #8, !dbg !3436
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3437
  %tobool213 = icmp eq %struct._IO_FILE* %73, null, !dbg !3437
  br i1 %tobool213, label %if.end230, label %if.then214, !dbg !3439

if.then214:                                       ; preds = %if.then211
  %call215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %73, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3440
  br label %if.end230, !dbg !3440

if.else217:                                       ; preds = %land.lhs.true205, %if.else201
  %call218 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* nonnull %call2, %struct.basic_block_def* %target.2) #6, !dbg !3441
  %tobool219 = icmp eq %struct.edge_def* %call218, null, !dbg !3441
  br i1 %tobool219, label %if.then220, label %if.end230, !dbg !3442

if.then220:                                       ; preds = %if.else217
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3443
  %tobool221 = icmp eq %struct._IO_FILE* %74, null, !dbg !3443
  br i1 %tobool221, label %if.end228, label %if.then222, !dbg !3444

if.then222:                                       ; preds = %if.then220
  %75 = load i32, i32* %index223, align 8, !dbg !3445
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3446
  %index225 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %76, i64 0, i32 9, !dbg !3447
  %77 = load i32, i32* %index225, align 8, !dbg !3447
  %index226 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %target.2, i64 0, i32 9, !dbg !3448
  %78 = load i32, i32* %index226, align 8, !dbg !3448
  %call227 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %74, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0), i32 %75, i32 %77, i32 %78) #6, !dbg !3449
  br label %if.end228, !dbg !3449

if.end228:                                        ; preds = %if.then220, %if.then222
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3225, metadata !DIExpression(DW_OP_deref)), !dbg !3264
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3450
  br label %cleanup309, !dbg !3451, !llvm.loop !3297

if.end230:                                        ; preds = %if.then211, %if.else217, %if.then214
  %79 = load i32, i32* %frequency, align 8, !dbg !3452
  %mul231 = mul nsw i32 %70, %79, !dbg !3453
  %add = add nsw i32 %mul231, 5000, !dbg !3454
  %div = sdiv i32 %add, 10000, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %div, metadata !3260, metadata !DIExpression()), !dbg !3273
  %80 = load i32, i32* %flags232, align 8, !dbg !3456
  %and233 = and i32 %80, 1024, !dbg !3456
  %tobool234 = icmp eq i32 %and233, 0, !dbg !3456
  br i1 %tobool234, label %land.lhs.true235, label %if.end242, !dbg !3457

land.lhs.true235:                                 ; preds = %if.end230
  %call236 = call zeroext i8 @forwarder_block_p(%struct.basic_block_def* %b) #6, !dbg !3458
  %tobool238 = icmp eq i8 %call236, 0, !dbg !3458
  br i1 %tobool238, label %if.end242, label %if.then239, !dbg !3459

if.then239:                                       ; preds = %land.lhs.true235
  %81 = load i32, i32* %flags232, align 8, !dbg !3460
  %or241 = or i32 %81, 1024, !dbg !3460
  store i32 %or241, i32* %flags232, align 8, !dbg !3460
  br label %if.end242, !dbg !3461

if.end242:                                        ; preds = %land.lhs.true235, %if.end230, %if.then239
  br label %do.body, !dbg !3462

do.body:                                          ; preds = %if.end299, %if.end242
  %first.0 = phi %struct.basic_block_def* [ %15, %if.end242 ], [ %89, %if.end299 ], !dbg !3286
  %n.0 = phi i32 [ 0, %if.end242 ], [ %n.2, %if.end299 ], !dbg !3273
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !3261, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %first.0, metadata !3232, metadata !DIExpression()), !dbg !3286
  %call244 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %first.0) #8, !dbg !3463
  %tobool245 = icmp eq i8 %call244, 0, !dbg !3463
  br i1 %tobool245, label %if.then246, label %if.else262, !dbg !3465

if.then246:                                       ; preds = %do.body
  %cmp247 = icmp slt i32 %n.0, %nthreaded_edges.6, !dbg !3466
  br i1 %cmp247, label %cond.end251, label %cond.true249, !dbg !3466

cond.true249:                                     ; preds = %if.then246
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 600, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3466
  br label %cond.end251, !dbg !3466

cond.end251:                                      ; preds = %if.then246, %cond.true249
  %inc253 = add nsw i32 %n.0, 1, !dbg !3468
  call void @llvm.dbg.value(metadata i32 %inc253, metadata !3261, metadata !DIExpression()), !dbg !3273
  %idxprom254 = sext i32 %n.0 to i64, !dbg !3469
  %arrayidx255 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %threaded_edges.8, i64 %idxprom254, !dbg !3469
  %82 = load %struct.edge_def*, %struct.edge_def** %arrayidx255, align 8, !dbg !3469
  call void @llvm.dbg.value(metadata %struct.edge_def* %82, metadata !3262, metadata !DIExpression()), !dbg !3470
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %82, i64 0, i32 0, !dbg !3471
  %83 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3471
  %cmp256 = icmp eq %struct.basic_block_def* %83, %first.0, !dbg !3471
  br i1 %cmp256, label %cond.end260, label %cond.true258, !dbg !3471

cond.true258:                                     ; preds = %cond.end251
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 602, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3471
  br label %cond.end260, !dbg !3471

cond.end260:                                      ; preds = %cond.end251, %cond.true258
  call void @update_bb_profile_for_threading(%struct.basic_block_def* %first.0, i32 %div, i64 %69, %struct.edge_def* %82) #6, !dbg !3472
  call void @update_br_prob_note(%struct.basic_block_def* %first.0) #6, !dbg !3473
  br label %if.end291, !dbg !3474

if.else262:                                       ; preds = %do.body
  %count263 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.0, i64 0, i32 8, !dbg !3475
  %84 = load i64, i64* %count263, align 8, !dbg !3477
  %sub264 = sub nsw i64 %84, %69, !dbg !3477
  %cmp266 = icmp slt i64 %sub264, 0, !dbg !3478
  br i1 %cmp266, label %if.then268, label %if.end270, !dbg !3480

if.then268:                                       ; preds = %if.else262
  br label %if.end270, !dbg !3481

if.end270:                                        ; preds = %if.then268, %if.else262
  %storemerge34 = phi i64 [ 0, %if.then268 ], [ %sub264, %if.else262 ], !dbg !3482
  store i64 %storemerge34, i64* %count263, align 8, !dbg !3482
  %frequency271 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %first.0, i64 0, i32 11, !dbg !3483
  %85 = load i32, i32* %frequency271, align 8, !dbg !3484
  %sub272 = sub nsw i32 %85, %div, !dbg !3484
  %cmp274 = icmp slt i32 %sub272, 0, !dbg !3485
  br i1 %cmp274, label %if.then276, label %if.end278, !dbg !3487

if.then276:                                       ; preds = %if.end270
  br label %if.end278, !dbg !3488

if.end278:                                        ; preds = %if.then276, %if.end270
  %storemerge33 = phi i32 [ 0, %if.then276 ], [ %sub272, %if.end270 ], !dbg !3482
  store i32 %storemerge33, i32* %frequency271, align 8, !dbg !3482
  %cmp279 = icmp slt i32 %n.0, %nthreaded_edges.6, !dbg !3489
  br i1 %cmp279, label %land.lhs.true281, label %if.end289, !dbg !3491

land.lhs.true281:                                 ; preds = %if.end278
  %idxprom282 = sext i32 %n.0 to i64, !dbg !3492
  %arrayidx283 = getelementptr inbounds %struct.edge_def*, %struct.edge_def** %threaded_edges.8, i64 %idxprom282, !dbg !3492
  %86 = load %struct.edge_def*, %struct.edge_def** %arrayidx283, align 8, !dbg !3492
  %src284 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %86, i64 0, i32 0, !dbg !3493
  %87 = load %struct.basic_block_def*, %struct.basic_block_def** %src284, align 8, !dbg !3493
  %cmp285 = icmp eq %struct.basic_block_def* %first.0, %87, !dbg !3494
  %inc288 = zext i1 %cmp285 to i32, !dbg !3495
  %spec.select6 = add nsw i32 %n.0, %inc288, !dbg !3495
  br label %if.end289, !dbg !3495

if.end289:                                        ; preds = %land.lhs.true281, %if.end278
  %n.1 = phi i32 [ %n.0, %if.end278 ], [ %spec.select6, %land.lhs.true281 ], !dbg !3273
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !3261, metadata !DIExpression()), !dbg !3273
  %call290 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %first.0) #8, !dbg !3496
  call void @llvm.dbg.value(metadata %struct.edge_def* %call290, metadata !3262, metadata !DIExpression()), !dbg !3470
  br label %if.end291

if.end291:                                        ; preds = %if.end289, %cond.end260
  %n.2 = phi i32 [ %n.1, %if.end289 ], [ %inc253, %cond.end260 ], !dbg !3497
  %t243.0 = phi %struct.edge_def* [ %call290, %if.end289 ], [ %82, %cond.end260 ], !dbg !3497
  call void @llvm.dbg.value(metadata %struct.edge_def* %t243.0, metadata !3262, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !3261, metadata !DIExpression()), !dbg !3273
  %count292 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %t243.0, i64 0, i32 9, !dbg !3498
  %88 = load i64, i64* %count292, align 8, !dbg !3499
  %sub293 = sub nsw i64 %88, %69, !dbg !3499
  %cmp295 = icmp slt i64 %sub293, 0, !dbg !3500
  br i1 %cmp295, label %if.then297, label %if.end299, !dbg !3502

if.then297:                                       ; preds = %if.end291
  br label %if.end299, !dbg !3503

if.end299:                                        ; preds = %if.then297, %if.end291
  %storemerge = phi i64 [ 0, %if.then297 ], [ %sub293, %if.end291 ], !dbg !3470
  store i64 %storemerge, i64* %count292, align 8, !dbg !3470
  %dest300 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %t243.0, i64 0, i32 1, !dbg !3504
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %dest300, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %89, metadata !3232, metadata !DIExpression()), !dbg !3286
  %cmp301 = icmp eq %struct.basic_block_def* %89, %target.2, !dbg !3505
  br i1 %cmp301, label %cleanup309.loopexit, label %do.body, !dbg !3506, !llvm.loop !3297

if.end308:                                        ; preds = %if.then192, %if.else197, %if.then194
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3225, metadata !DIExpression(DW_OP_deref)), !dbg !3264
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3507
  br label %cleanup309, !dbg !3508

cleanup309.loopexit:                              ; preds = %if.end299
  br label %cleanup309

cleanup309:                                       ; preds = %cleanup309.loopexit, %land.lhs.true, %if.end228, %if.end308, %if.then8
  %cleanup.dest.slot.4 = phi i32 [ 3, %if.then8 ], [ 0, %if.end308 ], [ 1, %land.lhs.true ], [ 3, %if.end228 ], [ 3, %cleanup309.loopexit ]
  %90 = phi i8* [ %10, %if.then8 ], [ %66, %if.end308 ], [ %10, %land.lhs.true ], [ %66, %if.end228 ], [ %66, %cleanup309.loopexit ], !dbg !3282
  %threaded_edges.9 = phi %struct.edge_def** [ %threaded_edges.0, %if.then8 ], [ %threaded_edges.8, %if.end308 ], [ %threaded_edges.0, %land.lhs.true ], [ %threaded_edges.8, %if.end228 ], [ %threaded_edges.8, %cleanup309.loopexit ], !dbg !3282
  %changed.2 = phi i8 [ %changed.0, %if.then8 ], [ %changed.0, %if.end308 ], [ %changed.0, %land.lhs.true ], [ %changed.0, %if.end228 ], [ 1, %cleanup309.loopexit ], !dbg !3264
  call void @llvm.dbg.value(metadata i8 %changed.2, metadata !3224, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.9, metadata !3227, metadata !DIExpression()), !dbg !3264
  switch i32 %cleanup.dest.slot.4, label %cleanup322.loopexit [
    i32 0, label %for.cond.backedge
    i32 3, label %for.cond.backedge
  ]

for.cond.backedge:                                ; preds = %cleanup309, %cleanup309
  br label %for.cond, !dbg !3264, !llvm.loop !3297

for.end318:                                       ; preds = %for.cond
  %.lcssa49 = phi i8* [ %10, %for.cond ], !dbg !3282
  %threaded_edges.0.lcssa = phi %struct.edge_def** [ %threaded_edges.0, %for.cond ], !dbg !3282
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !3283
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.0.lcssa, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !3224, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.0.lcssa, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !3224, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata %struct.edge_def** %threaded_edges.0.lcssa, metadata !3227, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !3224, metadata !DIExpression()), !dbg !3264
  %tobool319 = icmp eq %struct.edge_def** %threaded_edges.0.lcssa, null, !dbg !3509
  br i1 %tobool319, label %cleanup322, label %if.then320, !dbg !3511

if.then320:                                       ; preds = %for.end318
  call void @free(i8* %.lcssa49) #6, !dbg !3512
  br label %cleanup322, !dbg !3512

cleanup322.loopexit:                              ; preds = %cleanup309
  br label %cleanup322, !dbg !3513

cleanup322:                                       ; preds = %cleanup322.loopexit, %for.end318, %entry, %if.then320
  %retval.2 = phi i8 [ 0, %entry ], [ %changed.0.lcssa, %if.then320 ], [ %changed.0.lcssa, %for.end318 ], [ 0, %cleanup322.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3513
  ret i8 %retval.2, !dbg !3513
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_crossjump_bb(i32 %mode, %struct.basic_block_def* %bb) unnamed_addr #4 !dbg !3514 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3516, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3517, metadata !DIExpression()), !dbg !3528
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3529
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3529
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3530
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !3530
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !3531
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3531
  %tobool = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !3531
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3531

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !3531
  br label %cond.end, !dbg !3531

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3531
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3531
  %cmp = icmp ult i32 %call, 2, !dbg !3533
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3534

if.end:                                           ; preds = %cond.end
  %call2 = tail call zeroext i8 @optimize_bb_for_size_p(%struct.basic_block_def* %bb) #6, !dbg !3535
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3535
  br i1 %tobool3, label %if.end10, label %land.lhs.true, !dbg !3537

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3538
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3538
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3538
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !3538
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3538
  %cmp4 = icmp eq %struct.basic_block_def* %5, %bb, !dbg !3539
  br i1 %cmp4, label %if.end10, label %land.lhs.true6, !dbg !3540

land.lhs.true6:                                   ; preds = %land.lhs.true
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !3541
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3541
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3541
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !3541
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3541
  %call7 = tail call i32 @computed_jump_p(%struct.rtx_def* %7) #6, !dbg !3542
  %tobool8 = icmp eq i32 %call7, 0, !dbg !3542
  br i1 %tobool8, label %if.end10, label %cleanup, !dbg !3543

if.end10:                                         ; preds = %land.lhs.true6, %land.lhs.true, %if.end
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3544
  %tobool12 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !3544
  br i1 %tobool12, label %cond.end17, label %cond.true13, !dbg !3544

cond.true13:                                      ; preds = %if.end10
  %base15 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !3544
  br label %cond.end17, !dbg !3544

cond.end17:                                       ; preds = %if.end10, %cond.true13
  %cond18 = phi %struct.VEC_edge_base* [ %base15, %cond.true13 ], [ null, %if.end10 ], !dbg !3544
  %call19 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond18, i32 0) #8, !dbg !3544
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 0, !dbg !3544
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3544
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 13, !dbg !3544
  %10 = load i32, i32* %flags, align 8, !dbg !3544
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3546
  %tobool21 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !3546
  br i1 %tobool21, label %cond.end26, label %cond.true22, !dbg !3546

cond.true22:                                      ; preds = %cond.end17
  %base24 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !3546
  br label %cond.end26, !dbg !3546

cond.end26:                                       ; preds = %cond.end17, %cond.true22
  %cond27 = phi %struct.VEC_edge_base* [ %base24, %cond.true22 ], [ null, %cond.end17 ], !dbg !3546
  %call28 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond27, i32 1) #8, !dbg !3546
  %src29 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call28, i64 0, i32 0, !dbg !3546
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src29, align 8, !dbg !3546
  %flags30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 13, !dbg !3546
  %13 = load i32, i32* %flags30, align 8, !dbg !3546
  %14 = xor i32 %10, %13, !dbg !3547
  %15 = and i32 %14, 96, !dbg !3547
  %cmp32 = icmp eq i32 %15, 0, !dbg !3547
  br i1 %cmp32, label %lor.lhs.false, label %cleanup, !dbg !3548

lor.lhs.false:                                    ; preds = %cond.end26
  %16 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3549
  %tobool35 = icmp eq %struct.VEC_edge_gc* %16, null, !dbg !3549
  br i1 %tobool35, label %cond.end40, label %cond.true36, !dbg !3549

cond.true36:                                      ; preds = %lor.lhs.false
  %base38 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %16, i64 0, i32 0, !dbg !3549
  br label %cond.end40, !dbg !3549

cond.end40:                                       ; preds = %lor.lhs.false, %cond.true36
  %cond41 = phi %struct.VEC_edge_base* [ %base38, %cond.true36 ], [ null, %lor.lhs.false ], !dbg !3549
  %call42 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond41, i32 0) #8, !dbg !3549
  %flags43 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call42, i64 0, i32 7, !dbg !3550
  %17 = load i32, i32* %flags43, align 8, !dbg !3550
  %and44 = and i32 %17, 8192, !dbg !3551
  %tobool45 = icmp eq i32 %and44, 0, !dbg !3551
  br i1 %tobool45, label %if.end47, label %cleanup, !dbg !3552

if.end47:                                         ; preds = %cond.end40
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !3520, metadata !DIExpression()), !dbg !3528
  %18 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3553
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %18, i64 53, i32 1, !dbg !3553
  %19 = load i32, i32* %value, align 8, !dbg !3553
  call void @llvm.dbg.value(metadata i32 %19, metadata !3522, metadata !DIExpression()), !dbg !3528
  %20 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3554
  %tobool49 = icmp eq %struct.VEC_edge_gc* %20, null, !dbg !3554
  br i1 %tobool49, label %cond.end54, label %cond.true50, !dbg !3554

cond.true50:                                      ; preds = %if.end47
  %base52 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %20, i64 0, i32 0, !dbg !3554
  br label %cond.end54, !dbg !3554

cond.end54:                                       ; preds = %if.end47, %cond.true50
  %cond55 = phi %struct.VEC_edge_base* [ %base52, %cond.true50 ], [ null, %if.end47 ], !dbg !3554
  %call56 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond55) #8, !dbg !3554
  %cmp57 = icmp ugt i32 %call56, %19, !dbg !3556
  br i1 %cmp57, label %cleanup, label %if.end60, !dbg !3557

if.end60:                                         ; preds = %cond.end54
  %21 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3558
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7, !dbg !3558
  %call62 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !3558
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3558
  %23 = extractvalue { i32, %struct.VEC_edge_gc** } %call62, 0, !dbg !3558
  store i32 %23, i32* %22, align 8, !dbg !3558
  %24 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3558
  %25 = extractvalue { i32, %struct.VEC_edge_gc** } %call62, 1, !dbg !3558
  store %struct.VEC_edge_gc** %25, %struct.VEC_edge_gc*** %24, align 8, !dbg !3558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %21, i64 16, i1 false), !dbg !3558
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7, !dbg !3558
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3560
  %27 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3560
  br label %for.cond, !dbg !3558

for.cond:                                         ; preds = %for.inc, %if.end60
  %28 = load i32, i32* %26, align 8, !dbg !3562
  %29 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %27, align 8, !dbg !3562
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3518, metadata !DIExpression(DW_OP_deref)), !dbg !3528
  %call63 = call fastcc zeroext i8 @ei_cond(i32 %28, %struct.VEC_edge_gc** %29, %struct.edge_def** nonnull %e) #8, !dbg !3562
  %tobool64 = icmp eq i8 %call63, 0, !dbg !3558
  br i1 %tobool64, label %for.end.loopexit, label %for.body, !dbg !3558

for.body:                                         ; preds = %for.cond
  %30 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3563
  call void @llvm.dbg.value(metadata %struct.edge_def* %30, metadata !3518, metadata !DIExpression()), !dbg !3528
  %flags65 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %30, i64 0, i32 7, !dbg !3566
  %31 = load i32, i32* %flags65, align 8, !dbg !3566
  %and66 = and i32 %31, 1, !dbg !3567
  %tobool67 = icmp eq i32 %and66, 0, !dbg !3567
  br i1 %tobool67, label %for.inc, label %if.then68, !dbg !3568

if.then68:                                        ; preds = %for.body
  %.lcssa = phi %struct.edge_def* [ %30, %for.body ], !dbg !3563
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !3518, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !3520, metadata !DIExpression()), !dbg !3528
  br label %for.end, !dbg !3569

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3527, metadata !DIExpression(DW_OP_deref)), !dbg !3528
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !3562
  br label %for.cond, !dbg !3562, !llvm.loop !3571

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !3573

for.end:                                          ; preds = %for.end.loopexit, %if.then68
  %fallthru.0 = phi %struct.edge_def* [ %.lcssa, %if.then68 ], [ null, %for.end.loopexit ], !dbg !3528
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru.0, metadata !3520, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 0, metadata !3521, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 0, metadata !3523, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3525, metadata !DIExpression()), !dbg !3528
  %tobool92 = icmp eq %struct.edge_def* %fallthru.0, null, !dbg !3575
  %src104 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %fallthru.0, i64 0, i32 0, !dbg !3579
  br label %for.cond70.outer, !dbg !3573

for.cond70.outer.loopexit.us-lcssa:               ; preds = %if.end108
  br label %for.cond70.outer.backedge, !dbg !3582

for.cond70.outer:                                 ; preds = %for.cond70.outer.backedge, %for.end
  %ix.0.ph = phi i32 [ 0, %for.end ], [ %ix.0.ph.be, %for.cond70.outer.backedge ]
  %changed.0.ph = phi i8 [ 0, %for.end ], [ %changed.0.ph.be, %for.cond70.outer.backedge ]
  br i1 %tobool92, label %for.cond70.outer.split.us, label %for.cond70.outer.for.cond70.outer.split_crit_edge, !dbg !3582

for.cond70.outer.for.cond70.outer.split_crit_edge: ; preds = %for.cond70.outer
  br label %for.cond70, !dbg !3582

for.cond70.outer.split.us:                        ; preds = %for.cond70.outer
  br label %for.cond70.us, !dbg !3582

for.cond70.us:                                    ; preds = %for.cond70.backedge.us, %for.cond70.outer.split.us
  %ix.0.us = phi i32 [ %ix.0.ph, %for.cond70.outer.split.us ], [ %inc.us, %for.cond70.backedge.us ], !dbg !3583
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3525, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 %changed.0.ph, metadata !3521, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 %ix.0.us, metadata !3523, metadata !DIExpression()), !dbg !3528
  %32 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3584
  %tobool72.us = icmp eq %struct.VEC_edge_gc* %32, null, !dbg !3584
  br i1 %tobool72.us, label %cond.end77.us, label %cond.true73.us, !dbg !3584

cond.true73.us:                                   ; preds = %for.cond70.us
  %base75.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %32, i64 0, i32 0, !dbg !3584
  br label %cond.end77.us, !dbg !3584

cond.end77.us:                                    ; preds = %cond.true73.us, %for.cond70.us
  %cond78.us = phi %struct.VEC_edge_base* [ %base75.us, %cond.true73.us ], [ null, %for.cond70.us ], !dbg !3584
  %call79.us = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond78.us) #8, !dbg !3584
  %cmp80.us = icmp ult i32 %ix.0.us, %call79.us, !dbg !3585
  br i1 %cmp80.us, label %for.body82.us, label %for.end182.us-lcssa.us, !dbg !3582

for.body82.us:                                    ; preds = %cond.end77.us
  %33 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3586
  %tobool84.us = icmp eq %struct.VEC_edge_gc* %33, null, !dbg !3586
  br i1 %tobool84.us, label %cond.end89.us, label %cond.true85.us, !dbg !3586

cond.true85.us:                                   ; preds = %for.body82.us
  %base87.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %33, i64 0, i32 0, !dbg !3586
  br label %cond.end89.us, !dbg !3586

cond.end89.us:                                    ; preds = %cond.true85.us, %for.body82.us
  %cond90.us = phi %struct.VEC_edge_base* [ %base87.us, %cond.true85.us ], [ null, %for.body82.us ], !dbg !3586
  %call91.us = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond90.us, i32 %ix.0.us) #8, !dbg !3586
  call void @llvm.dbg.value(metadata %struct.edge_def* %call91.us, metadata !3518, metadata !DIExpression()), !dbg !3528
  store %struct.edge_def* %call91.us, %struct.edge_def** %e, align 8, !dbg !3587
  %inc.us = add i32 %ix.0.us, 1, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !3523, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.edge_def* %call91.us, metadata !3518, metadata !DIExpression()), !dbg !3528
  %src114.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call91.us, i64 0, i32 0, !dbg !3589
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %src114.us, align 8, !dbg !3589
  %succs.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %34, i64 0, i32 1, !dbg !3589
  %35 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs.us, align 8, !dbg !3589
  %tobool115.us = icmp eq %struct.VEC_edge_gc* %35, null, !dbg !3589
  br i1 %tobool115.us, label %cond.end121.us, label %cond.true116.us, !dbg !3589

cond.true116.us:                                  ; preds = %cond.end89.us
  call void @llvm.dbg.value(metadata %struct.edge_def* %call91.us, metadata !3518, metadata !DIExpression()), !dbg !3528
  %base119.us = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %35, i64 0, i32 0, !dbg !3589
  br label %cond.end121.us, !dbg !3589

cond.end121.us:                                   ; preds = %cond.true116.us, %cond.end89.us
  %cond122.us = phi %struct.VEC_edge_base* [ %base119.us, %cond.true116.us ], [ null, %cond.end89.us ], !dbg !3589
  %call123.us = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond122.us, i32 0) #8, !dbg !3589
  %36 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3591
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !3518, metadata !DIExpression()), !dbg !3528
  %cmp124.us = icmp eq %struct.edge_def* %call123.us, %36, !dbg !3592
  br i1 %cmp124.us, label %for.cond128.preheader.us-lcssa.us, label %for.cond70.backedge.us, !dbg !3593

for.cond70.backedge.us:                           ; preds = %cond.end121.us
  br label %for.cond70.us, !dbg !3528, !llvm.loop !3594

for.end182.us-lcssa.us:                           ; preds = %cond.end77.us
  %changed.0.ph.lcssa7 = phi i8 [ %changed.0.ph, %cond.end77.us ]
  br label %for.end182, !dbg !3596

for.cond128.preheader.us-lcssa.us:                ; preds = %cond.end121.us
  %inc.us.lcssa = phi i32 [ %inc.us, %cond.end121.us ], !dbg !3588
  br label %for.cond128.preheader, !dbg !3598

for.cond70:                                       ; preds = %for.cond70.backedge, %for.cond70.outer.for.cond70.outer.split_crit_edge
  %ix.0 = phi i32 [ %ix.0.ph, %for.cond70.outer.for.cond70.outer.split_crit_edge ], [ %inc, %for.cond70.backedge ], !dbg !3583
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3525, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i8 %changed.0.ph, metadata !3521, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 %ix.0, metadata !3523, metadata !DIExpression()), !dbg !3528
  %37 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3584
  %tobool72 = icmp eq %struct.VEC_edge_gc* %37, null, !dbg !3584
  br i1 %tobool72, label %cond.end77, label %cond.true73, !dbg !3584

cond.true73:                                      ; preds = %for.cond70
  %base75 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %37, i64 0, i32 0, !dbg !3584
  br label %cond.end77, !dbg !3584

cond.end77:                                       ; preds = %for.cond70, %cond.true73
  %cond78 = phi %struct.VEC_edge_base* [ %base75, %cond.true73 ], [ null, %for.cond70 ], !dbg !3584
  %call79 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond78) #8, !dbg !3584
  %cmp80 = icmp ult i32 %ix.0, %call79, !dbg !3585
  br i1 %cmp80, label %for.body82, label %for.end182.us-lcssa, !dbg !3582

for.body82:                                       ; preds = %cond.end77
  %38 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3586
  %tobool84 = icmp eq %struct.VEC_edge_gc* %38, null, !dbg !3586
  br i1 %tobool84, label %cond.end89, label %cond.true85, !dbg !3586

cond.true85:                                      ; preds = %for.body82
  %base87 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %38, i64 0, i32 0, !dbg !3586
  br label %cond.end89, !dbg !3586

cond.end89:                                       ; preds = %for.body82, %cond.true85
  %cond90 = phi %struct.VEC_edge_base* [ %base87, %cond.true85 ], [ null, %for.body82 ], !dbg !3586
  %call91 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond90, i32 %ix.0) #8, !dbg !3586
  call void @llvm.dbg.value(metadata %struct.edge_def* %call91, metadata !3518, metadata !DIExpression()), !dbg !3528
  store %struct.edge_def* %call91, %struct.edge_def** %e, align 8, !dbg !3587
  %inc = add i32 %ix.0, 1, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3523, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata %struct.edge_def* %call91, metadata !3518, metadata !DIExpression()), !dbg !3528
  %cmp94 = icmp eq %struct.edge_def* %call91, %fallthru.0, !dbg !3600
  br i1 %cmp94, label %for.cond70.backedge, label %if.end97, !dbg !3602

for.cond70.backedge:                              ; preds = %cond.end89, %cond.end121, %land.lhs.true103
  br label %for.cond70, !dbg !3528, !llvm.loop !3594

if.end97:                                         ; preds = %cond.end89
  %.b2 = load i1, i1* @first_pass, align 1, !dbg !3603
  br i1 %.b2, label %if.end108, label %land.lhs.true99, !dbg !3604

land.lhs.true99:                                  ; preds = %if.end97
  call void @llvm.dbg.value(metadata %struct.edge_def* %call91, metadata !3518, metadata !DIExpression()), !dbg !3528
  %src100 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call91, i64 0, i32 0, !dbg !3605
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %src100, align 8, !dbg !3605
  %call101 = call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %39) #6, !dbg !3606
  %tobool102 = icmp eq i8 %call101, 0, !dbg !3606
  br i1 %tobool102, label %land.lhs.true103, label %if.end108, !dbg !3607

land.lhs.true103:                                 ; preds = %land.lhs.true99
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %src104, align 8, !dbg !3608
  %call105 = call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %40) #6, !dbg !3609
  %tobool106 = icmp eq i8 %call105, 0, !dbg !3609
  br i1 %tobool106, label %for.cond70.backedge, label %if.end108, !dbg !3610

if.end108:                                        ; preds = %if.end97, %land.lhs.true103, %land.lhs.true99
  %41 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3611
  call void @llvm.dbg.value(metadata %struct.edge_def* %41, metadata !3518, metadata !DIExpression()), !dbg !3528
  %call109 = call fastcc zeroext i8 @try_crossjump_to_edge(i32 %mode, %struct.edge_def* %41, %struct.edge_def* nonnull %fallthru.0) #8, !dbg !3613
  %tobool110 = icmp eq i8 %call109, 0, !dbg !3613
  br i1 %tobool110, label %if.end113, label %for.cond70.outer.loopexit.us-lcssa, !dbg !3614, !llvm.loop !3594

if.end113:                                        ; preds = %if.end108
  %42 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3589
  call void @llvm.dbg.value(metadata %struct.edge_def* %42, metadata !3518, metadata !DIExpression()), !dbg !3528
  %src114 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %42, i64 0, i32 0, !dbg !3589
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %src114, align 8, !dbg !3589
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i64 0, i32 1, !dbg !3589
  %44 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3589
  %tobool115 = icmp eq %struct.VEC_edge_gc* %44, null, !dbg !3589
  br i1 %tobool115, label %cond.end121, label %cond.true116, !dbg !3589

cond.true116:                                     ; preds = %if.end113
  call void @llvm.dbg.value(metadata %struct.edge_def* %42, metadata !3518, metadata !DIExpression()), !dbg !3528
  %base119 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %44, i64 0, i32 0, !dbg !3589
  br label %cond.end121, !dbg !3589

cond.end121:                                      ; preds = %if.end113, %cond.true116
  %cond122 = phi %struct.VEC_edge_base* [ %base119, %cond.true116 ], [ null, %if.end113 ], !dbg !3589
  %call123 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond122, i32 0) #8, !dbg !3589
  %45 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3591
  call void @llvm.dbg.value(metadata %struct.edge_def* %45, metadata !3518, metadata !DIExpression()), !dbg !3528
  %cmp124 = icmp eq %struct.edge_def* %call123, %45, !dbg !3592
  br i1 %cmp124, label %for.cond128.preheader.us-lcssa, label %for.cond70.backedge, !dbg !3593

for.cond128.preheader.us-lcssa:                   ; preds = %cond.end121
  %inc.lcssa6 = phi i32 [ %inc, %cond.end121 ], !dbg !3588
  br label %for.cond128.preheader, !dbg !3598

for.cond128.preheader:                            ; preds = %for.cond128.preheader.us-lcssa.us, %for.cond128.preheader.us-lcssa
  %inc.lcssa1 = phi i32 [ %inc.lcssa6, %for.cond128.preheader.us-lcssa ], [ %inc.us.lcssa, %for.cond128.preheader.us-lcssa.us ], !dbg !3588
  br label %for.cond128, !dbg !3598

for.cond128:                                      ; preds = %for.cond128.backedge, %for.cond128.preheader
  %ix2.0 = phi i32 [ 0, %for.cond128.preheader ], [ %inc150, %for.cond128.backedge ], !dbg !3615
  call void @llvm.dbg.value(metadata i32 %ix2.0, metadata !3524, metadata !DIExpression()), !dbg !3528
  %46 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3616
  %tobool130 = icmp eq %struct.VEC_edge_gc* %46, null, !dbg !3616
  br i1 %tobool130, label %cond.end135, label %cond.true131, !dbg !3616

cond.true131:                                     ; preds = %for.cond128
  %base133 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %46, i64 0, i32 0, !dbg !3616
  br label %cond.end135, !dbg !3616

cond.end135:                                      ; preds = %for.cond128, %cond.true131
  %cond136 = phi %struct.VEC_edge_base* [ %base133, %cond.true131 ], [ null, %for.cond128 ], !dbg !3616
  %call137 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond136) #8, !dbg !3616
  %cmp138 = icmp ult i32 %ix2.0, %call137, !dbg !3618
  br i1 %cmp138, label %for.body140, label %for.end181, !dbg !3598

for.body140:                                      ; preds = %cond.end135
  %47 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3619
  %tobool142 = icmp eq %struct.VEC_edge_gc* %47, null, !dbg !3619
  br i1 %tobool142, label %cond.end147, label %cond.true143, !dbg !3619

cond.true143:                                     ; preds = %for.body140
  %base145 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %47, i64 0, i32 0, !dbg !3619
  br label %cond.end147, !dbg !3619

cond.end147:                                      ; preds = %for.body140, %cond.true143
  %cond148 = phi %struct.VEC_edge_base* [ %base145, %cond.true143 ], [ null, %for.body140 ], !dbg !3619
  %call149 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond148, i32 %ix2.0) #8, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.edge_def* %call149, metadata !3519, metadata !DIExpression()), !dbg !3528
  %inc150 = add i32 %ix2.0, 1, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %inc150, metadata !3524, metadata !DIExpression()), !dbg !3528
  %48 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3622
  call void @llvm.dbg.value(metadata %struct.edge_def* %48, metadata !3518, metadata !DIExpression()), !dbg !3528
  %cmp151 = icmp eq %struct.edge_def* %call149, %48, !dbg !3624
  %cmp155 = icmp eq %struct.edge_def* %call149, %fallthru.0, !dbg !3625
  %or.cond = or i1 %cmp151, %cmp155, !dbg !3627
  br i1 %or.cond, label %for.cond128.backedge, label %if.end158, !dbg !3627

for.cond128.backedge:                             ; preds = %cond.end147, %if.end158, %land.lhs.true171, %if.end176
  br label %for.cond128, !dbg !3528, !llvm.loop !3628

if.end158:                                        ; preds = %cond.end147
  call void @llvm.dbg.value(metadata %struct.edge_def* %48, metadata !3518, metadata !DIExpression()), !dbg !3528
  %src159 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %48, i64 0, i32 0, !dbg !3630
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %src159, align 8, !dbg !3630
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i64 0, i32 9, !dbg !3632
  %50 = load i32, i32* %index, align 8, !dbg !3632
  %src160 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call149, i64 0, i32 0, !dbg !3633
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %src160, align 8, !dbg !3633
  %index161 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i64 0, i32 9, !dbg !3634
  %52 = load i32, i32* %index161, align 8, !dbg !3634
  %cmp162 = icmp sgt i32 %50, %52, !dbg !3635
  br i1 %cmp162, label %for.cond128.backedge, label %if.end165, !dbg !3636

if.end165:                                        ; preds = %if.end158
  %.b = load i1, i1* @first_pass, align 1, !dbg !3637
  br i1 %.b, label %if.end176, label %land.lhs.true167, !dbg !3639

land.lhs.true167:                                 ; preds = %if.end165
  call void @llvm.dbg.value(metadata %struct.edge_def* %48, metadata !3518, metadata !DIExpression()), !dbg !3528
  %call169 = call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %49) #6, !dbg !3640
  %tobool170 = icmp eq i8 %call169, 0, !dbg !3640
  br i1 %tobool170, label %land.lhs.true171, label %if.end176, !dbg !3641

land.lhs.true171:                                 ; preds = %land.lhs.true167
  %53 = load %struct.basic_block_def*, %struct.basic_block_def** %src160, align 8, !dbg !3642
  %call173 = call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %53) #6, !dbg !3643
  %tobool174 = icmp eq i8 %call173, 0, !dbg !3643
  br i1 %tobool174, label %for.cond128.backedge, label %if.end176, !dbg !3644

if.end176:                                        ; preds = %if.end165, %land.lhs.true171, %land.lhs.true167
  %54 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3645
  call void @llvm.dbg.value(metadata %struct.edge_def* %54, metadata !3518, metadata !DIExpression()), !dbg !3528
  %call177 = call fastcc zeroext i8 @try_crossjump_to_edge(i32 %mode, %struct.edge_def* %54, %struct.edge_def* %call149) #8, !dbg !3647
  %tobool178 = icmp eq i8 %call177, 0, !dbg !3647
  br i1 %tobool178, label %for.cond128.backedge, label %for.end181, !dbg !3648

for.end181:                                       ; preds = %if.end176, %cond.end135
  %ix.1 = phi i32 [ %inc.lcssa1, %cond.end135 ], [ 0, %if.end176 ], !dbg !3649
  %changed.1 = phi i8 [ %changed.0.ph, %cond.end135 ], [ 1, %if.end176 ], !dbg !3528
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !3521, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.value(metadata i32 %ix.1, metadata !3523, metadata !DIExpression()), !dbg !3528
  br label %for.cond70.outer.backedge, !dbg !3650

for.cond70.outer.backedge:                        ; preds = %for.end181, %for.cond70.outer.loopexit.us-lcssa
  %ix.0.ph.be = phi i32 [ %ix.1, %for.end181 ], [ 0, %for.cond70.outer.loopexit.us-lcssa ]
  %changed.0.ph.be = phi i8 [ %changed.1, %for.end181 ], [ 1, %for.cond70.outer.loopexit.us-lcssa ]
  br label %for.cond70.outer, !dbg !3582, !llvm.loop !3594

for.end182.us-lcssa:                              ; preds = %cond.end77
  %changed.0.ph.lcssa = phi i8 [ %changed.0.ph, %cond.end77 ]
  br label %for.end182, !dbg !3596

for.end182:                                       ; preds = %for.end182.us-lcssa.us, %for.end182.us-lcssa
  %changed.0.ph8 = phi i8 [ %changed.0.ph.lcssa7, %for.end182.us-lcssa.us ], [ %changed.0.ph.lcssa, %for.end182.us-lcssa ]
  %tobool183 = icmp eq i8 %changed.0.ph8, 0, !dbg !3596
  br i1 %tobool183, label %cleanup, label %if.then184, !dbg !3651

if.then184:                                       ; preds = %for.end182
  store i1 true, i1* @crossjumps_occured, align 1, !dbg !3652
  br label %cleanup, !dbg !3653

cleanup:                                          ; preds = %land.lhs.true6, %for.end182, %cond.end40, %cond.end26, %if.then184, %cond.end54, %cond.end
  %retval.0 = phi i8 [ 0, %cond.end ], [ 0, %land.lhs.true6 ], [ 0, %cond.end40 ], [ 0, %cond.end26 ], [ 0, %cond.end54 ], [ %changed.0.ph8, %if.then184 ], [ 0, %for.end182 ], !dbg !3528
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !3654
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3654
  ret i8 %retval.0, !dbg !3654
}

declare dso_local zeroext i8 @forwarder_block_p(%struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3655 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !3659, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3660, metadata !DIExpression()), !dbg !3661
  br label %land.end, !dbg !3662

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3662
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3662
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !3662
  ret %struct.edge_def* %0, !dbg !3662
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !3663 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !3667, metadata !DIExpression()), !dbg !3669
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !3670
  store i32 0, i32* %index, align 8, !dbg !3671
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !3672
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !3673
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3674
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !3674
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !3674
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !3675 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !3680, metadata !DIExpression()), !dbg !3681
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !3682
  %tobool = icmp eq i8 %call, 0, !dbg !3682
  br i1 %tobool, label %if.then, label %if.else, !dbg !3684

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !3685
  br label %return, !dbg !3687

if.else:                                          ; preds = %entry
  br label %return, !dbg !3688

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !3690
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3690
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !3690
  ret i8 %retval.0, !dbg !3691
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !3692 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3697, metadata !DIExpression()), !dbg !3698
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !3699
  %0 = load i32, i32* %index, align 8, !dbg !3699
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !3699
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3699
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !3699
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3699
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3699

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !3699
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3699
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !3699
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3699
  br label %cond.end, !dbg !3699

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3699
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3699
  %cmp = icmp ult i32 %0, %call2, !dbg !3699
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !3699

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3699
  br label %cond.end5, !dbg !3699

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !3700
  %inc = add i32 %5, 1, !dbg !3700
  store i32 %inc, i32* %index, align 8, !dbg !3700
  ret void, !dbg !3701
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_blocks_move_successor_nojumps(%struct.basic_block_def* %a, %struct.basic_block_def* %b) unnamed_addr #4 !dbg !3702 {
entry:
  %label = alloca %struct.rtx_def*, align 8
  %table = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !3706, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !3707, metadata !DIExpression()), !dbg !3712
  %0 = bitcast %struct.rtx_def** %label to i8*, !dbg !3713
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3713
  %1 = bitcast %struct.rtx_def** %table to i8*, !dbg !3713
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3713
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 13, !dbg !3714
  %2 = load i32, i32* %flags, align 8, !dbg !3714
  %flags1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 13, !dbg !3716
  %3 = load i32, i32* %flags1, align 8, !dbg !3716
  %4 = xor i32 %2, %3, !dbg !3717
  %5 = and i32 %4, 96, !dbg !3717
  %cmp = icmp eq i32 %5, 0, !dbg !3717
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3718

if.end:                                           ; preds = %entry
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 7, !dbg !3719
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3719
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3719
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !3719
  %7 = bitcast %struct.rtx_def** %end_ to i64*, !dbg !3719
  %8 = load i64, i64* %7, align 8, !dbg !3719
  %.cast = inttoptr i64 %8 to %struct.rtx_def*, !dbg !3720
  call void @llvm.dbg.value(metadata %struct.rtx_def** %label, metadata !3710, metadata !DIExpression(DW_OP_deref)), !dbg !3712
  call void @llvm.dbg.value(metadata %struct.rtx_def** %table, metadata !3711, metadata !DIExpression(DW_OP_deref)), !dbg !3712
  %call = call zeroext i8 @tablejump_p(%struct.rtx_def* %.cast, %struct.rtx_def** nonnull %label, %struct.rtx_def** nonnull %table) #6, !dbg !3722
  %tobool = icmp eq i8 %call, 0, !dbg !3722
  br i1 %tobool, label %if.end16, label %land.lhs.true, !dbg !3723

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %label, align 8, !dbg !3724
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !3710, metadata !DIExpression()), !dbg !3712
  %call6 = call %struct.rtx_def* @prev_active_insn(%struct.rtx_def* %9) #6, !dbg !3725
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3726
  %end_9 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !3726
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_9, align 8, !dbg !3726
  %cmp10 = icmp eq %struct.rtx_def* %call6, %11, !dbg !3727
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !3728

if.then12:                                        ; preds = %land.lhs.true
  %12 = bitcast %struct.rtx_def** %table to i64*, !dbg !3729
  %13 = load i64, i64* %12, align 8, !dbg !3729
  %14 = bitcast %struct.rtx_def** %end_9 to i64*, !dbg !3731
  store i64 %13, i64* %14, align 8, !dbg !3731
  br label %if.end16, !dbg !3732

if.end16:                                         ; preds = %if.end, %if.then12, %land.lhs.true
  %15 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3733
  %end_19 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %15, i64 0, i32 1, !dbg !3733
  %16 = load %struct.rtx_def*, %struct.rtx_def** %end_19, align 8, !dbg !3733
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3733
  %rt_rtx = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !3733
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3733
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !3708, metadata !DIExpression()), !dbg !3712
  %tobool20 = icmp eq %struct.rtx_def* %18, null, !dbg !3734
  br i1 %tobool20, label %if.end26, label %land.lhs.true21, !dbg !3736

land.lhs.true21:                                  ; preds = %if.end16
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 0, !dbg !3737
  %bf.load = load i32, i32* %19, align 8, !dbg !3737
  %bf.clear = and i32 %bf.load, 65535, !dbg !3737
  %cmp22 = icmp eq i32 %bf.clear, 11, !dbg !3737
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !3738

if.then24:                                        ; preds = %land.lhs.true21
  %call25 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* nonnull %18) #6, !dbg !3739
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3740
  %end_31.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre, i64 0, i32 1, !dbg !3712
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** %end_31.phi.trans.insert, align 8, !dbg !3741
  br label %if.end26, !dbg !3739

if.end26:                                         ; preds = %if.end16, %if.then24, %land.lhs.true21
  %20 = phi %struct.rtx_def* [ %16, %if.end16 ], [ %.pre1, %if.then24 ], [ %16, %land.lhs.true21 ], !dbg !3741
  %21 = phi %struct.rtl_bb_info* [ %15, %if.end16 ], [ %.pre, %if.then24 ], [ %15, %land.lhs.true21 ], !dbg !3740
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i64 0, i32 0, !dbg !3740
  %22 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3740
  %il32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 7, !dbg !3742
  %rtl33 = bitcast %union.basic_block_il_dependent* %il32 to %struct.rtl_bb_info**, !dbg !3742
  %23 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl33, align 8, !dbg !3742
  %end_34 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %23, i64 0, i32 1, !dbg !3742
  %24 = load %struct.rtx_def*, %struct.rtx_def** %end_34, align 8, !dbg !3742
  call void @reorder_insns_nobb(%struct.rtx_def* %22, %struct.rtx_def* %20, %struct.rtx_def* %24) #6, !dbg !3743
  %25 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3744
  %end_37 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %25, i64 0, i32 1, !dbg !3744
  %26 = bitcast %struct.rtx_def** %end_37 to i64*, !dbg !3745
  store i64 %8, i64* %26, align 8, !dbg !3745
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3746
  %tobool38 = icmp eq %struct._IO_FILE* %27, null, !dbg !3746
  br i1 %tobool38, label %if.end42, label %if.then39, !dbg !3748

if.then39:                                        ; preds = %if.end26
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !3749
  %28 = load i32, i32* %index, align 8, !dbg !3749
  %index40 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 9, !dbg !3750
  %29 = load i32, i32* %index40, align 8, !dbg !3750
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %27, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i32 %28, i32 %29) #6, !dbg !3751
  br label %if.end42, !dbg !3751

if.end42:                                         ; preds = %if.end26, %if.then39
  call void @merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #6, !dbg !3752
  br label %cleanup, !dbg !3753

cleanup:                                          ; preds = %entry, %if.end42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3753
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3753
  ret void, !dbg !3753
}

declare dso_local %struct.basic_block_def* @force_nonfallthru(%struct.edge_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @notice_new_block(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !3754 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3756, metadata !DIExpression()), !dbg !3757
  %tobool = icmp eq %struct.basic_block_def* %bb, null, !dbg !3758
  br i1 %tobool, label %if.end3, label %if.end, !dbg !3760

if.end:                                           ; preds = %entry
  %call = tail call zeroext i8 @forwarder_block_p(%struct.basic_block_def* nonnull %bb) #6, !dbg !3761
  %tobool1 = icmp eq i8 %call, 0, !dbg !3761
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !3763

if.then2:                                         ; preds = %if.end
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !3764
  %0 = load i32, i32* %flags, align 8, !dbg !3765
  %or = or i32 %0, 1024, !dbg !3765
  store i32 %or, i32* %flags, align 8, !dbg !3765
  br label %if.end3, !dbg !3766

if.end3:                                          ; preds = %if.end, %entry, %if.then2
  ret void, !dbg !3767
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_blocks_move_predecessor_nojumps(%struct.basic_block_def* %a, %struct.basic_block_def* %b) unnamed_addr #4 !dbg !3768 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %a, metadata !3770, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !3771, metadata !DIExpression()), !dbg !3773
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 13, !dbg !3774
  %0 = load i32, i32* %flags, align 8, !dbg !3774
  %flags1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 13, !dbg !3776
  %1 = load i32, i32* %flags1, align 8, !dbg !3776
  %2 = xor i32 %0, %1, !dbg !3777
  %3 = and i32 %2, 96, !dbg !3777
  %cmp = icmp eq i32 %3, 0, !dbg !3777
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !3778

if.end:                                           ; preds = %entry
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 7, !dbg !3779
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3779
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3779
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !3779
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3779
  %call = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %5) #6, !dbg !3780
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !3772, metadata !DIExpression()), !dbg !3773
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !3781
  %bf.load = load i32, i32* %6, align 8, !dbg !3781
  %bf.clear = and i32 %bf.load, 65535, !dbg !3781
  %cmp3 = icmp eq i32 %bf.clear, 11, !dbg !3781
  br i1 %cmp3, label %cond.end, label %cond.true, !dbg !3781

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 667, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3781
  br label %cond.end, !dbg !3781

cond.end:                                         ; preds = %if.end, %cond.true
  %call4 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %call) #6, !dbg !3782
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3783
  %end_7 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !3783
  %8 = load %struct.rtx_def*, %struct.rtx_def** %end_7, align 8, !dbg !3783
  %il8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 7, !dbg !3785
  %rtl9 = bitcast %union.basic_block_il_dependent* %il8 to %struct.rtl_bb_info**, !dbg !3785
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !3785
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 0, !dbg !3785
  %10 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3785
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3785
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !3785
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3785
  %cmp10 = icmp eq %struct.rtx_def* %8, %12, !dbg !3786
  br i1 %cmp10, label %if.end25, label %if.then11, !dbg !3787

if.then11:                                        ; preds = %cond.end
  %head_14 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 0, !dbg !3788
  %13 = load %struct.rtx_def*, %struct.rtx_def** %head_14, align 8, !dbg !3788
  tail call void @reorder_insns_nobb(%struct.rtx_def* %13, %struct.rtx_def* %8, %struct.rtx_def* %12) #6, !dbg !3789
  br label %if.end25, !dbg !3789

if.end25:                                         ; preds = %cond.end, %if.then11
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %a) #6, !dbg !3790
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3791
  %tobool = icmp eq %struct._IO_FILE* %14, null, !dbg !3791
  br i1 %tobool, label %if.end29, label %if.then26, !dbg !3793

if.then26:                                        ; preds = %if.end25
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %a, i64 0, i32 9, !dbg !3794
  %15 = load i32, i32* %index, align 8, !dbg !3794
  %index27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 9, !dbg !3795
  %16 = load i32, i32* %index27, align 8, !dbg !3795
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i32 %15, i32 %16) #6, !dbg !3796
  br label %if.end29, !dbg !3796

if.end29:                                         ; preds = %if.end25, %if.then26
  tail call void @unlink_block(%struct.basic_block_def* %a) #6, !dbg !3797
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 5, !dbg !3798
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !3798
  tail call void @link_block(%struct.basic_block_def* %a, %struct.basic_block_def* %17) #6, !dbg !3799
  tail call void @merge_blocks(%struct.basic_block_def* %a, %struct.basic_block_def* %b) #6, !dbg !3800
  br label %cleanup.cont, !dbg !3801

cleanup.cont:                                     ; preds = %entry, %if.end29
  ret void, !dbg !3801
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3802 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !3807
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3807
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3807

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !3807
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3807
  br label %cond.end, !dbg !3807

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3807
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3807
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !3808
  %conv3 = zext i1 %cmp to i8, !dbg !3809
  ret i8 %conv3, !dbg !3810
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3811 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !3816
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3816
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3816

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !3816
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3816
  br label %cond.end, !dbg !3816

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3816
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !3816
  ret %struct.edge_def* %call2, !dbg !3817
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3818 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !3823
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3823

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3823
  br label %cond.end, !dbg !3823

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !3824
  ret %struct.VEC_edge_gc* %0, !dbg !3825
}

declare dso_local %struct.rtx_def* @prev_active_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @df_set_bb_dirty(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @unlink_block(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @link_block(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @can_fallthru(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @invert_jump(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @block_label(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @update_br_prob_note(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @tidy_fallthru_edge(%struct.edge_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !3826 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !3829
  %tobool = icmp eq i8 %call, 0, !dbg !3829
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3830

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !3831
  br label %cond.end, !dbg !3830

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !3830
  ret %struct.edge_def* %cond, !dbg !3832
}

declare dso_local zeroext i8 @df_get_bb_dirty(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @locator_eq(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @thread_jump(%struct.edge_def* %e, %struct.basic_block_def* %b) unnamed_addr #4 !dbg !3833 {
entry:
  %cond2 = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !3837, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %b, metadata !3838, metadata !DIExpression()), !dbg !3867
  %0 = bitcast %struct.rtx_def** %cond2 to i8*, !dbg !3868
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3868
  call void @llvm.dbg.value(metadata i8 0, metadata !3847, metadata !DIExpression()), !dbg !3867
  %1 = bitcast i32* %i to i8*, !dbg !3869
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !3869
  call void @llvm.dbg.value(metadata i8 0, metadata !3850, metadata !DIExpression()), !dbg !3867
  %2 = bitcast %struct.bitmap_iterator* %rsi to i8*, !dbg !3870
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #7, !dbg !3870
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 13, !dbg !3871
  %3 = load i32, i32* %flags, align 8, !dbg !3871
  %and = and i32 %3, 2048, !dbg !3873
  %tobool = icmp eq i32 %and, 0, !dbg !3873
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3874

if.end:                                           ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !3875
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3875
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 1, !dbg !3875
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3875
  %tobool1 = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !3875
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !3875

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !3875
  br label %cond.end, !dbg !3875

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3875
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !3875
  %cmp = icmp eq i32 %call, 2, !dbg !3877
  br i1 %cmp, label %if.end5, label %cleanup, !dbg !3878

if.end5:                                          ; preds = %cond.end
  %succs6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 1, !dbg !3879
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs6, align 8, !dbg !3879
  %tobool7 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !3879
  br i1 %tobool7, label %cond.end12, label %cond.true8, !dbg !3879

cond.true8:                                       ; preds = %if.end5
  %base10 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !3879
  br label %cond.end12, !dbg !3879

cond.end12:                                       ; preds = %if.end5, %cond.true8
  %cond13 = phi %struct.VEC_edge_base* [ %base10, %cond.true8 ], [ null, %if.end5 ], !dbg !3879
  %call14 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond13) #8, !dbg !3879
  %cmp15 = icmp eq i32 %call14, 2, !dbg !3881
  br i1 %cmp15, label %if.end18, label %if.then16, !dbg !3882

if.then16:                                        ; preds = %cond.end12
  %7 = load i32, i32* %flags, align 8, !dbg !3883
  %or = or i32 %7, 2048, !dbg !3883
  store i32 %or, i32* %flags, align 8, !dbg !3883
  br label %cleanup, !dbg !3885

if.end18:                                         ; preds = %cond.end12
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3886
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 7, !dbg !3886
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3886
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3886
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !3886
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3886
  %call20 = tail call i32 @any_condjump_p(%struct.rtx_def* %10) #6, !dbg !3888
  %tobool21 = icmp eq i32 %call20, 0, !dbg !3888
  br i1 %tobool21, label %cleanup, label %if.end23, !dbg !3889

if.end23:                                         ; preds = %if.end18
  %il24 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %b, i64 0, i32 7, !dbg !3890
  %rtl25 = bitcast %union.basic_block_il_dependent* %il24 to %struct.rtl_bb_info**, !dbg !3890
  %11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3890
  %end_26 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %11, i64 0, i32 1, !dbg !3890
  %12 = load %struct.rtx_def*, %struct.rtx_def** %end_26, align 8, !dbg !3890
  %call27 = tail call i32 @any_condjump_p(%struct.rtx_def* %12) #6, !dbg !3892
  %tobool28 = icmp eq i32 %call27, 0, !dbg !3892
  br i1 %tobool28, label %if.then34, label %lor.lhs.false, !dbg !3893

lor.lhs.false:                                    ; preds = %if.end23
  %13 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3894
  %end_31 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i64 0, i32 1, !dbg !3894
  %14 = load %struct.rtx_def*, %struct.rtx_def** %end_31, align 8, !dbg !3894
  %call32 = tail call i32 @onlyjump_p(%struct.rtx_def* %14) #6, !dbg !3895
  %tobool33 = icmp eq i32 %call32, 0, !dbg !3895
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !3896

if.then34:                                        ; preds = %lor.lhs.false, %if.end23
  %15 = load i32, i32* %flags, align 8, !dbg !3897
  %or36 = or i32 %15, 2048, !dbg !3897
  store i32 %or36, i32* %flags, align 8, !dbg !3897
  br label %cleanup, !dbg !3899

if.end37:                                         ; preds = %lor.lhs.false
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3900
  %il39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 7, !dbg !3900
  %rtl40 = bitcast %union.basic_block_il_dependent* %il39 to %struct.rtl_bb_info**, !dbg !3900
  %17 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl40, align 8, !dbg !3900
  %end_41 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %17, i64 0, i32 1, !dbg !3900
  %18 = load %struct.rtx_def*, %struct.rtx_def** %end_41, align 8, !dbg !3900
  %call42 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %18) #6, !dbg !3901
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call42, metadata !3839, metadata !DIExpression()), !dbg !3867
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3902
  %end_45 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 1, !dbg !3902
  %20 = load %struct.rtx_def*, %struct.rtx_def** %end_45, align 8, !dbg !3902
  %call46 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %20) #6, !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call46, metadata !3840, metadata !DIExpression()), !dbg !3867
  %flags47 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !3904
  %21 = load i32, i32* %flags47, align 8, !dbg !3904
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call42, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3906
  %rt_rtx = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !3906
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3906
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3906
  %rt_rtx53 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !3906
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !3906
  %26 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !3907
  %cmp54 = icmp eq %struct.rtx_def* %25, %26, !dbg !3908
  %27 = and i32 %21, 1, !dbg !3909
  %28 = icmp ne i32 %27, 0, !dbg !3909
  %cmp56 = xor i1 %cmp54, %28, !dbg !3909
  call void @llvm.dbg.value(metadata i1 %cmp56, metadata !3847, metadata !DIExpression()), !dbg !3867
  %arrayidx66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3910
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !3910
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !3910
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !3841, metadata !DIExpression()), !dbg !3867
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call46, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3911
  %rt_rtx71 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !3911
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !3911
  %arrayidx74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3911
  %32 = bitcast %union.rtunion_def* %arrayidx74 to i64*, !dbg !3911
  %33 = load i64, i64* %32, align 8, !dbg !3911
  %34 = bitcast %struct.rtx_def** %cond2 to i64*, !dbg !3912
  store i64 %33, i64* %34, align 8, !dbg !3912
  %35 = inttoptr i64 %33 to i32*, !dbg !3913
  %36 = inttoptr i64 %33 to %struct.rtx_def*, !dbg !3913
  br i1 %cmp56, label %if.then77, label %if.else, !dbg !3913

if.then77:                                        ; preds = %if.end37
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3914
  %il79 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i64 0, i32 7, !dbg !3914
  %rtl80 = bitcast %union.basic_block_il_dependent* %il79 to %struct.rtl_bb_info**, !dbg !3914
  %38 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl80, align 8, !dbg !3914
  %end_81 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %38, i64 0, i32 1, !dbg !3914
  %39 = load %struct.rtx_def*, %struct.rtx_def** %end_81, align 8, !dbg !3914
  %call82 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %29, %struct.rtx_def* %39) #6, !dbg !3916
  call void @llvm.dbg.value(metadata i32 %call82, metadata !3844, metadata !DIExpression()), !dbg !3867
  br label %if.end83, !dbg !3917

if.else:                                          ; preds = %if.end37
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 0, !dbg !3918
  %bf.load = load i32, i32* %40, align 8, !dbg !3918
  %bf.clear = and i32 %bf.load, 65535, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !3844, metadata !DIExpression()), !dbg !3867
  br label %if.end83

if.end83:                                         ; preds = %if.else, %if.then77
  %code1.0 = phi i32 [ %call82, %if.then77 ], [ %bf.clear, %if.else ], !dbg !3919
  call void @llvm.dbg.value(metadata i32 %code1.0, metadata !3844, metadata !DIExpression()), !dbg !3867
  %bf.load84 = load i32, i32* %35, align 8, !dbg !3920
  %bf.clear85 = and i32 %bf.load84, 65535, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %bf.clear85, metadata !3845, metadata !DIExpression()), !dbg !3867
  %.cast = inttoptr i64 %33 to %struct.rtx_def*, !dbg !3921
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.cast, metadata !3842, metadata !DIExpression()), !dbg !3867
  %41 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3922
  %end_88 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %41, i64 0, i32 1, !dbg !3922
  %42 = load %struct.rtx_def*, %struct.rtx_def** %end_88, align 8, !dbg !3922
  %call89 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %.cast, %struct.rtx_def* %42) #6, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %call89, metadata !3846, metadata !DIExpression()), !dbg !3867
  %call90 = tail call i32 @comparison_dominates_p(i32 %code1.0, i32 %bf.clear85) #6, !dbg !3924
  %tobool91 = icmp eq i32 %call90, 0, !dbg !3924
  br i1 %tobool91, label %land.lhs.true, label %if.end95, !dbg !3926

land.lhs.true:                                    ; preds = %if.end83
  %call92 = tail call i32 @comparison_dominates_p(i32 %code1.0, i32 %call89) #6, !dbg !3927
  %tobool93 = icmp eq i32 %call92, 0, !dbg !3927
  br i1 %tobool93, label %cleanup, label %if.end95, !dbg !3928

if.end95:                                         ; preds = %land.lhs.true, %if.end83
  %arrayidx98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3929
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !3929
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !3929
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !3842, metadata !DIExpression()), !dbg !3867
  %arrayidx102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3931
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !3931
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !3931
  %call104 = tail call i32 @rtx_equal_p(%struct.rtx_def* %43, %struct.rtx_def* %44) #6, !dbg !3932
  %tobool105 = icmp eq i32 %call104, 0, !dbg !3932
  br i1 %tobool105, label %cleanup, label %lor.lhs.false106, !dbg !3933

lor.lhs.false106:                                 ; preds = %if.end95
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3934
  %rt_rtx110 = bitcast %union.rtunion_def* %45 to %struct.rtx_def**, !dbg !3934
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !3934
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !3842, metadata !DIExpression()), !dbg !3867
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3935
  %rt_rtx114 = bitcast %union.rtunion_def* %47 to %struct.rtx_def**, !dbg !3935
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !3935
  %call115 = tail call i32 @rtx_equal_p(%struct.rtx_def* %46, %struct.rtx_def* %48) #6, !dbg !3936
  %tobool116 = icmp eq i32 %call115, 0, !dbg !3936
  br i1 %tobool116, label %cleanup, label %if.end118, !dbg !3937

if.end118:                                        ; preds = %lor.lhs.false106
  %49 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3938
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %49, i64 0, i32 0, !dbg !3938
  %50 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3938
  br label %for.cond, !dbg !3940

for.cond:                                         ; preds = %for.inc, %if.end118
  %.pre5 = phi %struct.rtl_bb_info* [ %49, %if.end118 ], [ %.pre, %for.inc ]
  %51 = phi %struct.rtl_bb_info* [ %49, %if.end118 ], [ %.pre, %for.inc ], !dbg !3941
  %.pn = phi %struct.rtx_def* [ %50, %if.end118 ], [ %insn.0, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3943
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !3943
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3943
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3843, metadata !DIExpression()), !dbg !3867
  %end_127 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %51, i64 0, i32 1, !dbg !3941
  %52 = load %struct.rtx_def*, %struct.rtx_def** %end_127, align 8, !dbg !3941
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3941
  %rt_rtx131 = bitcast %union.rtunion_def* %53 to %struct.rtx_def**, !dbg !3941
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !3941
  %cmp132 = icmp eq %struct.rtx_def* %insn.0, %54, !dbg !3944
  br i1 %cmp132, label %for.end, label %for.body, !dbg !3945

for.body:                                         ; preds = %for.cond
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3946
  %bf.load134 = load i32, i32* %55, align 8, !dbg !3946
  %bf.clear135 = and i32 %bf.load134, 65535, !dbg !3946
  %cmp136 = icmp eq i32 %bf.clear135, 8, !dbg !3946
  br i1 %cmp136, label %land.lhs.true153, label %lor.lhs.false138, !dbg !3946

lor.lhs.false138:                                 ; preds = %for.body
  %cmp141 = icmp eq i32 %bf.clear135, 7, !dbg !3946
  br i1 %cmp141, label %land.lhs.true153, label %lor.lhs.false143, !dbg !3946

lor.lhs.false143:                                 ; preds = %lor.lhs.false138
  %cmp146 = icmp eq i32 %bf.clear135, 9, !dbg !3946
  br i1 %cmp146, label %land.lhs.true153, label %lor.lhs.false148, !dbg !3946

lor.lhs.false148:                                 ; preds = %lor.lhs.false143
  %cmp151 = icmp eq i32 %bf.clear135, 10, !dbg !3946
  br i1 %cmp151, label %land.lhs.true153, label %for.inc, !dbg !3948

land.lhs.true153:                                 ; preds = %lor.lhs.false148, %lor.lhs.false143, %lor.lhs.false138, %for.body
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !3949
  %56 = getelementptr inbounds %union.u, %union.u* %u154, i64 1, i32 0, i32 0, i64 0, !dbg !3949
  %rt_rtx157 = bitcast %union.rtunion_def* %56 to %struct.rtx_def**, !dbg !3949
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !3949
  %call158 = tail call i32 @side_effects_p(%struct.rtx_def* %57) #6, !dbg !3950
  %tobool159 = icmp eq i32 %call158, 0, !dbg !3950
  br i1 %tobool159, label %land.lhs.true153.for.inc_crit_edge, label %if.then160, !dbg !3951

land.lhs.true153.for.inc_crit_edge:               ; preds = %land.lhs.true153
  %.pre.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3941
  br label %for.inc, !dbg !3951

if.then160:                                       ; preds = %land.lhs.true153
  %58 = load i32, i32* %flags, align 8, !dbg !3952
  %or162 = or i32 %58, 2048, !dbg !3952
  store i32 %or162, i32* %flags, align 8, !dbg !3952
  br label %cleanup, !dbg !3954

for.inc:                                          ; preds = %land.lhs.true153.for.inc_crit_edge, %lor.lhs.false148
  %.pre = phi %struct.rtl_bb_info* [ %.pre.pre, %land.lhs.true153.for.inc_crit_edge ], [ %.pre5, %lor.lhs.false148 ], !dbg !3941
  br label %for.cond, !dbg !3955, !llvm.loop !3956

for.end:                                          ; preds = %for.cond
  tail call void @cselib_init(i32 0) #6, !dbg !3958
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3959
  %il169 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i64 0, i32 7, !dbg !3959
  %rtl170 = bitcast %union.basic_block_il_dependent* %il169 to %struct.rtl_bb_info**, !dbg !3959
  %60 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl170, align 8, !dbg !3959
  %head_171 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %60, i64 0, i32 0, !dbg !3959
  %61 = load %struct.rtx_def*, %struct.rtx_def** %head_171, align 8, !dbg !3959
  br label %for.cond176, !dbg !3961

for.cond176:                                      ; preds = %for.inc209, %for.end
  %.pre79 = phi %struct.basic_block_def* [ %59, %for.end ], [ %.pre7, %for.inc209 ]
  %62 = phi %struct.rtl_bb_info* [ %60, %for.end ], [ %.pre8, %for.inc209 ], !dbg !3962
  %.pn3 = phi %struct.rtx_def* [ %61, %for.end ], [ %insn.1, %for.inc209 ]
  %insn.1.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3964
  %insn.1.in = bitcast %union.rtunion_def* %insn.1.in.in to %struct.rtx_def**, !dbg !3964
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !3964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !3843, metadata !DIExpression()), !dbg !3867
  %end_180 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %62, i64 0, i32 1, !dbg !3962
  %63 = load %struct.rtx_def*, %struct.rtx_def** %end_180, align 8, !dbg !3962
  %64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3962
  %rt_rtx184 = bitcast %union.rtunion_def* %64 to %struct.rtx_def**, !dbg !3962
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !3962
  %cmp185 = icmp eq %struct.rtx_def* %insn.1, %65, !dbg !3965
  br i1 %cmp185, label %for.end214, label %for.body187, !dbg !3966

for.body187:                                      ; preds = %for.cond176
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !3967
  %bf.load188 = load i32, i32* %66, align 8, !dbg !3967
  %bf.clear189 = and i32 %bf.load188, 65535, !dbg !3967
  %cmp190 = icmp eq i32 %bf.clear189, 8, !dbg !3967
  br i1 %cmp190, label %if.then207, label %lor.lhs.false192, !dbg !3967

lor.lhs.false192:                                 ; preds = %for.body187
  %cmp195 = icmp eq i32 %bf.clear189, 7, !dbg !3967
  br i1 %cmp195, label %if.then207, label %lor.lhs.false197, !dbg !3967

lor.lhs.false197:                                 ; preds = %lor.lhs.false192
  %cmp200 = icmp eq i32 %bf.clear189, 9, !dbg !3967
  br i1 %cmp200, label %if.then207, label %lor.lhs.false202, !dbg !3967

lor.lhs.false202:                                 ; preds = %lor.lhs.false197
  %cmp205 = icmp eq i32 %bf.clear189, 10, !dbg !3967
  br i1 %cmp205, label %if.then207, label %for.inc209, !dbg !3969

if.then207:                                       ; preds = %lor.lhs.false202, %lor.lhs.false197, %lor.lhs.false192, %for.body187
  tail call void @cselib_process_insn(%struct.rtx_def* %insn.1) #6, !dbg !3970
  %.pre7.pre = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3962
  br label %for.inc209, !dbg !3970

for.inc209:                                       ; preds = %lor.lhs.false202, %if.then207
  %.pre7 = phi %struct.basic_block_def* [ %.pre79, %lor.lhs.false202 ], [ %.pre7.pre, %if.then207 ], !dbg !3962
  %il178.phi.trans.insert = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pre7, i64 0, i32 7, !dbg !3971
  %rtl179.phi.trans.insert = bitcast %union.basic_block_il_dependent* %il178.phi.trans.insert to %struct.rtl_bb_info**, !dbg !3971
  %.pre8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl179.phi.trans.insert, align 8, !dbg !3962
  br label %for.cond176, !dbg !3972, !llvm.loop !3973

for.end214:                                       ; preds = %for.cond176
  %call215 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3975
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call215, metadata !3849, metadata !DIExpression()), !dbg !3867
  tail call void @bitmap_clear(%struct.bitmap_head_def* %call215) #6, !dbg !3976
  %67 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3977
  %head_218 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %67, i64 0, i32 0, !dbg !3977
  %68 = load %struct.rtx_def*, %struct.rtx_def** %head_218, align 8, !dbg !3977
  br label %for.cond223, !dbg !3978

for.cond223:                                      ; preds = %if.end290, %for.end214
  %69 = phi %struct.rtl_bb_info* [ %67, %for.end214 ], [ %.pre11, %if.end290 ], !dbg !3979
  %.pn4 = phi %struct.rtx_def* [ %68, %for.end214 ], [ %insn.2, %if.end290 ]
  %failed.0 = phi i8 [ 0, %for.end214 ], [ %failed.3, %if.end290 ], !dbg !3980
  %insn.2.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pn4, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3981
  %insn.2.in = bitcast %union.rtunion_def* %insn.2.in.in to %struct.rtx_def**, !dbg !3981
  %insn.2 = load %struct.rtx_def*, %struct.rtx_def** %insn.2.in, align 8, !dbg !3981
  call void @llvm.dbg.value(metadata i8 %failed.0, metadata !3850, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !3843, metadata !DIExpression()), !dbg !3867
  %end_226 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %69, i64 0, i32 1, !dbg !3979
  %70 = load %struct.rtx_def*, %struct.rtx_def** %end_226, align 8, !dbg !3979
  %71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3979
  %rt_rtx230 = bitcast %union.rtunion_def* %71 to %struct.rtx_def**, !dbg !3979
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx230, align 8, !dbg !3979
  %cmp231 = icmp ne %struct.rtx_def* %insn.2, %72, !dbg !3982
  %tobool233 = icmp eq i8 %failed.0, 0, !dbg !3983
  %or.cond = and i1 %cmp231, %tobool233, !dbg !3984
  br i1 %or.cond, label %for.body234, label %for.end296, !dbg !3984

for.body234:                                      ; preds = %for.cond223
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !3985
  %bf.load235 = load i32, i32* %73, align 8, !dbg !3985
  %bf.clear236 = and i32 %bf.load235, 65535, !dbg !3985
  %cmp237 = icmp eq i32 %bf.clear236, 8, !dbg !3985
  br i1 %cmp237, label %if.then254, label %lor.lhs.false239, !dbg !3985

lor.lhs.false239:                                 ; preds = %for.body234
  %cmp242 = icmp eq i32 %bf.clear236, 7, !dbg !3985
  br i1 %cmp242, label %if.then254, label %lor.lhs.false244, !dbg !3985

lor.lhs.false244:                                 ; preds = %lor.lhs.false239
  %cmp247 = icmp eq i32 %bf.clear236, 9, !dbg !3985
  br i1 %cmp247, label %if.then254, label %lor.lhs.false249, !dbg !3985

lor.lhs.false249:                                 ; preds = %lor.lhs.false244
  %cmp252 = icmp eq i32 %bf.clear236, 10, !dbg !3985
  br i1 %cmp252, label %if.then254, label %if.end290, !dbg !3986

if.then254:                                       ; preds = %lor.lhs.false249, %lor.lhs.false244, %lor.lhs.false239, %for.body234
  %u255 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, !dbg !3987
  %74 = getelementptr inbounds %union.u, %union.u* %u255, i64 1, i32 0, i32 0, i64 0, !dbg !3987
  %rt_rtx258 = bitcast %union.rtunion_def* %74 to %struct.rtx_def**, !dbg !3987
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx258, align 8, !dbg !3987
  call void @llvm.dbg.value(metadata %struct.rtx_def* %75, metadata !3860, metadata !DIExpression()), !dbg !3988
  %76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i64 0, i32 0, !dbg !3989
  %bf.load259 = load i32, i32* %76, align 8, !dbg !3989
  %bf.clear260 = and i32 %bf.load259, 65535, !dbg !3989
  %cmp261 = icmp eq i32 %bf.clear260, 15, !dbg !3991
  br i1 %cmp261, label %if.then263, label %if.else283, !dbg !3992

if.then263:                                       ; preds = %if.then254
  call void @llvm.dbg.value(metadata i32 0, metadata !3848, metadata !DIExpression()), !dbg !3867
  %arrayidx267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3993
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx267 to %struct.rtvec_def**, !dbg !3993
  br label %for.cond264, !dbg !3997

for.cond264:                                      ; preds = %for.body270, %if.then263
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body270 ], [ 0, %if.then263 ], !dbg !3998
  %failed.1 = phi i8 [ %or2792, %for.body270 ], [ 0, %if.then263 ], !dbg !3867
  %77 = trunc i64 %indvars.iv to i32, !dbg !3998
  store i32 %77, i32* %i, align 4, !dbg !3998
  call void @llvm.dbg.value(metadata i8 %failed.1, metadata !3850, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3848, metadata !DIExpression()), !dbg !3867
  %78 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3999
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %78, i64 0, i32 0, !dbg !3999
  %79 = load i32, i32* %num_elem, align 8, !dbg !3999
  %80 = zext i32 %79 to i64, !dbg !4000
  %cmp268 = icmp ult i64 %indvars.iv, %80, !dbg !4000
  br i1 %cmp268, label %for.body270, label %if.end290.loopexit, !dbg !4001

for.body270:                                      ; preds = %for.cond264
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3848, metadata !DIExpression()), !dbg !3867
  %arrayidx275 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %78, i64 0, i32 1, i64 %indvars.iv, !dbg !4002
  %81 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx275, align 8, !dbg !4002
  %call276 = tail call fastcc zeroext i8 @mark_effect(%struct.rtx_def* %81, %struct.bitmap_head_def* %call215) #8, !dbg !4003
  %or2792 = or i8 %failed.1, %call276, !dbg !4004
  call void @llvm.dbg.value(metadata i8 %or2792, metadata !3850, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3848, metadata !DIExpression()), !dbg !3867
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4005
  br label %for.cond264, !dbg !4006, !llvm.loop !4007

if.else283:                                       ; preds = %if.then254
  %call284 = tail call fastcc zeroext i8 @mark_effect(%struct.rtx_def* %75, %struct.bitmap_head_def* %call215) #8, !dbg !4009
  call void @llvm.dbg.value(metadata i8 %call284, metadata !3850, metadata !DIExpression()), !dbg !3867
  br label %if.end290

if.end290.loopexit:                               ; preds = %for.cond264
  %failed.1.lcssa = phi i8 [ %failed.1, %for.cond264 ], !dbg !3867
  call void @llvm.dbg.value(metadata i8 %failed.1.lcssa, metadata !3850, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 %failed.1.lcssa, metadata !3850, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 %failed.1.lcssa, metadata !3850, metadata !DIExpression()), !dbg !3867
  br label %if.end290, !dbg !4010

if.end290:                                        ; preds = %if.end290.loopexit, %if.else283, %lor.lhs.false249
  %failed.3 = phi i8 [ 0, %lor.lhs.false249 ], [ %call284, %if.else283 ], [ %failed.1.lcssa, %if.end290.loopexit ], !dbg !3980
  call void @llvm.dbg.value(metadata i8 %failed.3, metadata !3850, metadata !DIExpression()), !dbg !3867
  tail call void @cselib_process_insn(%struct.rtx_def* %insn.2) #6, !dbg !4010
  %.pre11 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl25, align 8, !dbg !3979
  br label %for.cond223, !dbg !4011, !llvm.loop !4012

for.end296:                                       ; preds = %for.cond223
  %tobool233.lcssa = phi i1 [ %tobool233, %for.cond223 ], !dbg !3983
  call void @llvm.dbg.value(metadata i8 %failed.0, metadata !3850, metadata !DIExpression()), !dbg !3867
  br i1 %tobool233.lcssa, label %if.end301, label %if.then298, !dbg !4015

if.then298:                                       ; preds = %for.end296
  %82 = load i32, i32* %flags, align 8, !dbg !4016
  %or300 = or i32 %82, 2048, !dbg !4016
  store i32 %or300, i32* %flags, align 8, !dbg !4016
  br label %failed_exit, !dbg !4019

if.end301:                                        ; preds = %for.end296
  %83 = bitcast %struct.bitmap_head_def* %call215 to i8*, !dbg !4020
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cond2, metadata !3842, metadata !DIExpression(DW_OP_deref)), !dbg !3867
  %call302 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %cond2, i32 (%struct.rtx_def**, i8*)* nonnull @mentions_nonequal_regs, i8* %83) #6, !dbg !4022
  %tobool303 = icmp eq i32 %call302, 0, !dbg !4022
  br i1 %tobool303, label %if.end305, label %failed_exit, !dbg !4023

if.end305:                                        ; preds = %if.end301
  call void @llvm.dbg.value(metadata i32* %i, metadata !3848, metadata !DIExpression(DW_OP_deref)), !dbg !3867
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3851, metadata !DIExpression(DW_OP_deref)), !dbg !3867
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %rsi, %struct.bitmap_head_def* %call215, i32 0, i32* nonnull %i) #8, !dbg !4024
  call void @llvm.dbg.value(metadata i32* %i, metadata !3848, metadata !DIExpression(DW_OP_deref)), !dbg !3867
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %rsi, metadata !3851, metadata !DIExpression(DW_OP_deref)), !dbg !3867
  %call307 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %rsi, i32* nonnull %i) #8, !dbg !4026
  %tobool308 = icmp eq i8 %call307, 0, !dbg !4024
  br i1 %tobool308, label %for.end311, label %failed_exit, !dbg !4024

for.end311:                                       ; preds = %if.end305
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call215) #6, !dbg !4028
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3849, metadata !DIExpression()), !dbg !3867
  call void @cselib_finish() #6, !dbg !4029
  %call312 = call i32 @comparison_dominates_p(i32 %code1.0, i32 %bf.clear85) #6, !dbg !4030
  %cmp313 = icmp ne i32 %call312, 0, !dbg !4032
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !4033
  %85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4033
  %rt_rtx322 = bitcast %union.rtunion_def* %85 to %struct.rtx_def**, !dbg !4033
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx322, align 8, !dbg !4033
  %87 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !4034
  %cmp323 = icmp eq %struct.rtx_def* %86, %87, !dbg !4035
  %cmp325 = xor i1 %cmp313, %cmp323, !dbg !4036
  %88 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs6, align 8, !dbg !4037
  %tobool329 = icmp ne %struct.VEC_edge_gc* %88, null, !dbg !4037
  br i1 %cmp325, label %if.then327, label %if.else362, !dbg !4038

if.then327:                                       ; preds = %for.end311
  br i1 %tobool329, label %cond.true330, label %cond.end334, !dbg !4039

cond.true330:                                     ; preds = %if.then327
  %base332 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %88, i64 0, i32 0, !dbg !4039
  br label %cond.end334, !dbg !4039

cond.end334:                                      ; preds = %if.then327, %cond.true330
  %cond335 = phi %struct.VEC_edge_base* [ %base332, %cond.true330 ], [ null, %if.then327 ], !dbg !4039
  %call336 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond335, i32 0) #8, !dbg !4039
  %flags337 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call336, i64 0, i32 7, !dbg !4039
  %89 = load i32, i32* %flags337, align 8, !dbg !4039
  %and338 = and i32 %89, 1, !dbg !4039
  %tobool339 = icmp eq i32 %and338, 0, !dbg !4039
  %90 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs6, align 8, !dbg !4039
  %tobool342 = icmp ne %struct.VEC_edge_gc* %90, null, !dbg !4039
  br i1 %tobool339, label %cond.false350, label %cond.true340, !dbg !4039

cond.true340:                                     ; preds = %cond.end334
  br i1 %tobool342, label %cond.true343, label %cond.end347, !dbg !4039

cond.true343:                                     ; preds = %cond.true340
  %base345 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %90, i64 0, i32 0, !dbg !4039
  br label %cond.end347, !dbg !4039

cond.end347:                                      ; preds = %cond.true340, %cond.true343
  %cond348 = phi %struct.VEC_edge_base* [ %base345, %cond.true343 ], [ null, %cond.true340 ], !dbg !4039
  %call349 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond348, i32 1) #8, !dbg !4039
  br label %cleanup, !dbg !4039

cond.false350:                                    ; preds = %cond.end334
  br i1 %tobool342, label %cond.true353, label %cond.end357, !dbg !4039

cond.true353:                                     ; preds = %cond.false350
  %base355 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %90, i64 0, i32 0, !dbg !4039
  br label %cond.end357, !dbg !4039

cond.end357:                                      ; preds = %cond.false350, %cond.true353
  %cond358 = phi %struct.VEC_edge_base* [ %base355, %cond.true353 ], [ null, %cond.false350 ], !dbg !4039
  %call359 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond358, i32 0) #8, !dbg !4039
  br label %cleanup, !dbg !4039

if.else362:                                       ; preds = %for.end311
  br i1 %tobool329, label %cond.true365, label %cond.end369, !dbg !4040

cond.true365:                                     ; preds = %if.else362
  %base367 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %88, i64 0, i32 0, !dbg !4040
  br label %cond.end369, !dbg !4040

cond.end369:                                      ; preds = %if.else362, %cond.true365
  %cond370 = phi %struct.VEC_edge_base* [ %base367, %cond.true365 ], [ null, %if.else362 ], !dbg !4040
  %call371 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond370, i32 0) #8, !dbg !4040
  %flags372 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call371, i64 0, i32 7, !dbg !4040
  %91 = load i32, i32* %flags372, align 8, !dbg !4040
  %and373 = and i32 %91, 1, !dbg !4040
  %tobool374 = icmp eq i32 %and373, 0, !dbg !4040
  %92 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs6, align 8, !dbg !4040
  %tobool377 = icmp ne %struct.VEC_edge_gc* %92, null, !dbg !4040
  br i1 %tobool374, label %cond.false385, label %cond.true375, !dbg !4040

cond.true375:                                     ; preds = %cond.end369
  br i1 %tobool377, label %cond.true378, label %cond.end382, !dbg !4040

cond.true378:                                     ; preds = %cond.true375
  %base380 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %92, i64 0, i32 0, !dbg !4040
  br label %cond.end382, !dbg !4040

cond.end382:                                      ; preds = %cond.true375, %cond.true378
  %cond383 = phi %struct.VEC_edge_base* [ %base380, %cond.true378 ], [ null, %cond.true375 ], !dbg !4040
  %call384 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond383, i32 0) #8, !dbg !4040
  br label %cleanup, !dbg !4040

cond.false385:                                    ; preds = %cond.end369
  br i1 %tobool377, label %cond.true388, label %cond.end392, !dbg !4040

cond.true388:                                     ; preds = %cond.false385
  %base390 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %92, i64 0, i32 0, !dbg !4040
  br label %cond.end392, !dbg !4040

cond.end392:                                      ; preds = %cond.false385, %cond.true388
  %cond393 = phi %struct.VEC_edge_base* [ %base390, %cond.true388 ], [ null, %cond.false385 ], !dbg !4040
  %call394 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond393, i32 1) #8, !dbg !4040
  br label %cleanup, !dbg !4040

failed_exit:                                      ; preds = %if.end305, %if.end301, %if.then298
  call void @llvm.dbg.label(metadata !3866), !dbg !4041
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call215) #6, !dbg !4042
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3849, metadata !DIExpression()), !dbg !3867
  call void @cselib_finish() #6, !dbg !4043
  br label %cleanup, !dbg !4044

cleanup:                                          ; preds = %lor.lhs.false106, %if.end95, %land.lhs.true, %if.end18, %cond.end, %entry, %cond.end382, %cond.end392, %cond.end347, %cond.end357, %failed_exit, %if.then160, %if.then34, %if.then16
  %retval.0 = phi %struct.edge_def* [ null, %if.then16 ], [ null, %if.then160 ], [ null, %failed_exit ], [ null, %if.then34 ], [ null, %entry ], [ null, %cond.end ], [ null, %if.end18 ], [ null, %land.lhs.true ], [ null, %lor.lhs.false106 ], [ null, %if.end95 ], [ %call349, %cond.end347 ], [ %call359, %cond.end357 ], [ %call384, %cond.end382 ], [ %call394, %cond.end392 ], !dbg !3867
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #7, !dbg !4045
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !4045
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4045
  ret %struct.edge_def* %retval.0, !dbg !4045
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @update_bb_profile_for_threading(%struct.basic_block_def*, i32, i64, %struct.edge_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @comparison_dominates_p(i32, i32) local_unnamed_addr #1

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @side_effects_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @cselib_init(i32) local_unnamed_addr #1

declare dso_local void @cselib_process_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #1

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @mark_effect(%struct.rtx_def* %exp, %struct.bitmap_head_def* %nonequal) unnamed_addr #4 !dbg !4046 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %exp, metadata !4050, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %nonequal, metadata !4051, metadata !DIExpression()), !dbg !4063
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 0, !dbg !4064
  %bf.load = load i32, i32* %0, align 8, !dbg !4064
  %trunc = trunc i32 %bf.load to i16, !dbg !4065
  switch i16 %trunc, label %cleanup [
    i16 25, label %sw.bb
    i16 23, label %sw.bb19
  ], !dbg !4065

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4066
  %1 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4066
  %2 = load i32*, i32** %1, align 8, !dbg !4066
  %bf.load1 = load i32, i32* %2, align 8, !dbg !4066
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4066
  %cmp = icmp eq i32 %bf.clear2, 37, !dbg !4066
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4067

if.then:                                          ; preds = %sw.bb
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !4067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !4053, metadata !DIExpression()), !dbg !4063
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #8, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %call, metadata !4052, metadata !DIExpression()), !dbg !4063
  %call7 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %nonequal, i32 %call) #6, !dbg !4069
  %cmp8 = icmp slt i32 %call, 53, !dbg !4070
  br i1 %cmp8, label %if.then9, label %cleanup, !dbg !4071

if.then9:                                         ; preds = %if.then
  %idxprom = sext i32 %call to i64, !dbg !4072
  %bf.load11 = load i32, i32* %2, align 8, !dbg !4073
  %bf.lshr = lshr i32 %bf.load11, 16, !dbg !4073
  %bf.clear12 = and i32 %bf.lshr, 255, !dbg !4073
  %idxprom13 = zext i32 %bf.clear12 to i64, !dbg !4072
  %arrayidx14 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom13, !dbg !4072
  %4 = load i8, i8* %arrayidx14, align 1, !dbg !4072
  %conv = zext i8 %4 to i32, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4054, metadata !DIExpression()), !dbg !4074
  br label %while.cond, !dbg !4075

while.cond:                                       ; preds = %while.body, %if.then9
  %n.0 = phi i32 [ %conv, %if.then9 ], [ %dec, %while.body ], !dbg !4074
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !4054, metadata !DIExpression()), !dbg !4074
  %dec = add nsw i32 %n.0, -1, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %dec, metadata !4054, metadata !DIExpression()), !dbg !4074
  %cmp15 = icmp sgt i32 %dec, 0, !dbg !4077
  br i1 %cmp15, label %while.body, label %cleanup.loopexit, !dbg !4075

while.body:                                       ; preds = %while.cond
  %add = add nsw i32 %call, %dec, !dbg !4078
  %call17 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %nonequal, i32 %add) #6, !dbg !4078
  br label %while.cond, !dbg !4075, !llvm.loop !4079

sw.bb19:                                          ; preds = %entry
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4080
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !4080
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4080
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %exp, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4082
  %rt_rtx27 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !4082
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !4082
  %call28 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %5, %struct.rtx_def* %7) #6, !dbg !4083
  %tobool = icmp eq i32 %call28, 0, !dbg !4083
  br i1 %tobool, label %if.end30, label %cleanup, !dbg !4084

if.end30:                                         ; preds = %sw.bb19
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !4085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !4053, metadata !DIExpression()), !dbg !4063
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !4086
  %cmp35 = icmp eq %struct.rtx_def* %8, %9, !dbg !4088
  br i1 %cmp35, label %cleanup, label %if.end38, !dbg !4089

if.end38:                                         ; preds = %if.end30
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !4090
  %bf.load39 = load i32, i32* %10, align 8, !dbg !4090
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !4090
  %cmp41 = icmp eq i32 %bf.clear40, 37, !dbg !4090
  br i1 %cmp41, label %if.end44, label %cleanup, !dbg !4092

if.end44:                                         ; preds = %if.end38
  %call45 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %8) #8, !dbg !4093
  call void @llvm.dbg.value(metadata i32 %call45, metadata !4052, metadata !DIExpression()), !dbg !4063
  %call46 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %nonequal, i32 %call45) #6, !dbg !4094
  %cmp47 = icmp slt i32 %call45, 53, !dbg !4095
  br i1 %cmp47, label %if.then49, label %cleanup, !dbg !4096

if.then49:                                        ; preds = %if.end44
  %idxprom51 = sext i32 %call45 to i64, !dbg !4097
  %bf.load53 = load i32, i32* %10, align 8, !dbg !4098
  %bf.lshr54 = lshr i32 %bf.load53, 16, !dbg !4098
  %bf.clear55 = and i32 %bf.lshr54, 255, !dbg !4098
  %idxprom56 = zext i32 %bf.clear55 to i64, !dbg !4097
  %arrayidx57 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom51, i64 %idxprom56, !dbg !4097
  %11 = load i8, i8* %arrayidx57, align 1, !dbg !4097
  %conv58 = zext i8 %11 to i32, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %conv58, metadata !4060, metadata !DIExpression()), !dbg !4099
  br label %while.cond59, !dbg !4100

while.cond59:                                     ; preds = %while.body63, %if.then49
  %n50.0 = phi i32 [ %conv58, %if.then49 ], [ %dec60, %while.body63 ], !dbg !4099
  call void @llvm.dbg.value(metadata i32 %n50.0, metadata !4060, metadata !DIExpression()), !dbg !4099
  %dec60 = add nsw i32 %n50.0, -1, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %dec60, metadata !4060, metadata !DIExpression()), !dbg !4099
  %cmp61 = icmp sgt i32 %dec60, 0, !dbg !4102
  br i1 %cmp61, label %while.body63, label %cleanup.loopexit1, !dbg !4100

while.body63:                                     ; preds = %while.cond59
  %add64 = add nsw i32 %call45, %dec60, !dbg !4103
  %call65 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %nonequal, i32 %add64) #6, !dbg !4103
  br label %while.cond59, !dbg !4100, !llvm.loop !4104

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup, !dbg !4105

cleanup.loopexit1:                                ; preds = %while.cond59
  br label %cleanup, !dbg !4105

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %sw.bb19, %entry, %if.end44, %if.end38, %if.end30, %sw.bb, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ 0, %sw.bb ], [ 0, %sw.bb19 ], [ 0, %if.end30 ], [ 1, %if.end38 ], [ 0, %if.end44 ], [ 0, %entry ], [ 0, %cleanup.loopexit ], [ 0, %cleanup.loopexit1 ], !dbg !4106
  ret i8 %retval.0, !dbg !4105
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @mentions_nonequal_regs(%struct.rtx_def** %x, i8* %data) #4 !dbg !4107 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x, metadata !4112, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i8* %data, metadata !4113, metadata !DIExpression()), !dbg !4121
  %0 = bitcast i8* %data to %struct.bitmap_head_def*, !dbg !4122
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %0, metadata !4114, metadata !DIExpression()), !dbg !4121
  %1 = bitcast %struct.rtx_def** %x to i32**, !dbg !4123
  %2 = load i32*, i32** %1, align 8, !dbg !4123
  %bf.load = load i32, i32* %2, align 8, !dbg !4123
  %bf.clear = and i32 %bf.load, 65535, !dbg !4123
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !4123
  br i1 %cmp, label %if.then, label %if.end19, !dbg !4124

if.then:                                          ; preds = %entry
  %3 = bitcast i32* %2 to %struct.rtx_def*, !dbg !4124
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #8, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %call, metadata !4115, metadata !DIExpression()), !dbg !4126
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %call) #6, !dbg !4127
  %tobool = icmp eq i32 %call1, 0, !dbg !4127
  br i1 %tobool, label %if.end, label %cleanup16, !dbg !4129

if.end:                                           ; preds = %if.then
  %cmp3 = icmp slt i32 %call, 53, !dbg !4130
  br i1 %cmp3, label %if.then4, label %if.end15, !dbg !4131

if.then4:                                         ; preds = %if.end
  %idxprom = sext i32 %call to i64, !dbg !4132
  %4 = load i32*, i32** %1, align 8, !dbg !4133
  %bf.load5 = load i32, i32* %4, align 8, !dbg !4133
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !4133
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4133
  %idxprom7 = zext i32 %bf.clear6 to i64, !dbg !4132
  %arrayidx8 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom7, !dbg !4132
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !4132
  %conv = zext i8 %5 to i32, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4118, metadata !DIExpression()), !dbg !4134
  br label %while.cond, !dbg !4135

while.cond:                                       ; preds = %while.body, %if.then4
  %n.0 = phi i32 [ %conv, %if.then4 ], [ %dec, %while.body ], !dbg !4134
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !4118, metadata !DIExpression()), !dbg !4134
  %dec = add nsw i32 %n.0, -1, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %dec, metadata !4118, metadata !DIExpression()), !dbg !4134
  %cmp9 = icmp sgt i32 %dec, 0, !dbg !4137
  br i1 %cmp9, label %while.body, label %cleanup, !dbg !4135

while.body:                                       ; preds = %while.cond
  %add = add nsw i32 %call, %dec, !dbg !4138
  %call11 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %add) #6, !dbg !4138
  %tobool12 = icmp eq i32 %call11, 0, !dbg !4138
  br i1 %tobool12, label %while.cond, label %cleanup, !dbg !4140, !llvm.loop !4141

cleanup:                                          ; preds = %while.body, %while.cond
  %cleanup.dest.slot.0 = phi i32 [ 1, %while.body ], [ 0, %while.cond ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end15, label %cleanup16

if.end15:                                         ; preds = %cleanup, %if.end
  br label %cleanup16, !dbg !4143

cleanup16:                                        ; preds = %if.then, %cleanup, %if.end15
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end15 ], [ 1, %if.then ]
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end19, label %cleanup20

if.end19:                                         ; preds = %cleanup16, %entry
  br label %cleanup20, !dbg !4144

cleanup20:                                        ; preds = %cleanup16, %if.end19
  %retval.3 = phi i32 [ 1, %cleanup16 ], [ 0, %if.end19 ], !dbg !4121
  ret i32 %retval.3, !dbg !4145
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4146 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4155, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !4156, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 0, metadata !4157, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4158, metadata !DIExpression()), !dbg !4159
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !4160
  %1 = load i64, i64* %0, align 8, !dbg !4160
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4161
  store i64 %1, i64* %2, align 8, !dbg !4161
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4162
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4163
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4164
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4167
  br label %while.body, !dbg !4167

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !4168
  br i1 %tobool, label %if.then, label %if.end, !dbg !4169

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !4170
  br label %while.end, !dbg !4172

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !4173

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !4167, !llvm.loop !4174

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !4176

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !4176
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !4178
  %7 = load i32, i32* %indx9, align 8, !dbg !4178
  %cmp11 = icmp eq i32 %7, 0, !dbg !4179
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !4180

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !4181
  %8 = load i32, i32* %indx14, align 8, !dbg !4181
  %mul = shl i32 %8, 7, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4157, metadata !DIExpression()), !dbg !4159
  br label %if.end15, !dbg !4183

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4157, metadata !DIExpression()), !dbg !4159
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4184
  store i32 0, i32* %word_no, align 8, !dbg !4185
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !4186
  %9 = load i64, i64* %arrayidx, align 8, !dbg !4186
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4187
  store i64 %9, i64* %bits21, align 8, !dbg !4188
  %tobool23 = icmp eq i64 %9, 0, !dbg !4189
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !4189
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %add, metadata !4157, metadata !DIExpression()), !dbg !4159
  store i32 %add, i32* %bit_no, align 4, !dbg !4191
  ret void, !dbg !4192
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4193 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4197, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4198, metadata !DIExpression()), !dbg !4202
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4203
  %0 = load i64, i64* %bits, align 8, !dbg !4203
  %tobool = icmp eq i64 %0, 0, !dbg !4204
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4205

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !4206
  br label %next_bit, !dbg !4209

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4199), !dbg !4210
  br label %while.cond, !dbg !4209

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4211
  %and = and i64 %2, 1, !dbg !4212
  %tobool2 = icmp eq i64 %and, 0, !dbg !4213
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4209

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4214
  store i64 %shr, i64* %bits, align 8, !dbg !4214
  %3 = load i32, i32* %bit_no, align 4, !dbg !4216
  %add = add i32 %3, 1, !dbg !4216
  store i32 %add, i32* %bit_no, align 4, !dbg !4216
  %.pre = load i64, i64* %bits, align 8, !dbg !4211
  br label %while.cond, !dbg !4209, !llvm.loop !4217

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4219
  %sub = add i32 %4, 63, !dbg !4220
  %div = and i32 %sub, -64, !dbg !4221
  store i32 %div, i32* %bit_no, align 4, !dbg !4222
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4223
  %5 = load i32, i32* %word_no, align 8, !dbg !4224
  %inc = add i32 %5, 1, !dbg !4224
  store i32 %inc, i32* %word_no, align 8, !dbg !4224
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4225
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4225
  br label %while.body6, !dbg !4226

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !4227

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !4228
  %cmp = icmp eq i32 %8, 2, !dbg !4229
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4225
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !4227

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !4206
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !4206
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4206
  store i64 %10, i64* %bits, align 8, !dbg !4230
  %tobool14 = icmp eq i64 %10, 0, !dbg !4231
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !4233

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !4234
  %add17 = add i32 %11, 64, !dbg !4234
  store i32 %add17, i32* %bit_no, align 4, !dbg !4234
  %12 = load i32, i32* %word_no, align 8, !dbg !4235
  %inc19 = add i32 %12, 1, !dbg !4235
  store i32 %inc19, i32* %word_no, align 8, !dbg !4235
  br label %while.cond7, !dbg !4227, !llvm.loop !4236

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !4225
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4238
  %14 = load i64, i64* %13, align 8, !dbg !4238
  store i64 %14, i64* %6, align 8, !dbg !4239
  %tobool24 = icmp eq i64 %14, 0, !dbg !4240
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !4242

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !4242
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4243
  %16 = load i32, i32* %indx, align 8, !dbg !4243
  %mul28 = shl i32 %16, 7, !dbg !4244
  store i32 %mul28, i32* %bit_no, align 4, !dbg !4245
  store i32 0, i32* %word_no, align 8, !dbg !4246
  br label %while.body6, !dbg !4226, !llvm.loop !4247

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4249

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !4249

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4202
  ret i8 %retval.0, !dbg !4249
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @cselib_finish() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !4250 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4257, metadata !DIExpression()), !dbg !4258
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4259
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4259
  %0 = load i32, i32* %rt_uint, align 8, !dbg !4259
  ret i32 %0, !dbg !4260
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

declare dso_local i32 @rtx_equal_for_cselib_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @optimize_bb_for_size_p(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @computed_jump_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_crossjump_to_edge(i32 %mode, %struct.edge_def* %e1, %struct.edge_def* %e2) unnamed_addr #4 !dbg !4261 {
entry:
  %newpos1 = alloca %struct.rtx_def*, align 8
  %newpos2 = alloca %struct.rtx_def*, align 8
  %s = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %label1 = alloca %struct.rtx_def*, align 8
  %label2 = alloca %struct.rtx_def*, align 8
  %table1 = alloca %struct.rtx_def*, align 8
  %table2 = alloca %struct.rtx_def*, align 8
  %rr = alloca %struct.replace_label_data, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %s2 = alloca %struct.edge_def*, align 8
  %ei212 = alloca %struct.edge_iterator, align 8
  %tmp220 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4265, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1, metadata !4266, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2, metadata !4267, metadata !DIExpression()), !dbg !4303
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1, i64 0, i32 0, !dbg !4304
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4304
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4269, metadata !DIExpression()), !dbg !4303
  %src3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2, i64 0, i32 0, !dbg !4305
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src3, align 8, !dbg !4305
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4270, metadata !DIExpression()), !dbg !4303
  %2 = bitcast %struct.rtx_def** %newpos1 to i8*, !dbg !4306
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4306
  %3 = bitcast %struct.rtx_def** %newpos2 to i8*, !dbg !4306
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !4306
  %4 = bitcast %struct.edge_def** %s to i8*, !dbg !4307
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4307
  %5 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4308
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7, !dbg !4308
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4275, metadata !DIExpression()), !dbg !4303
  store %struct.rtx_def* null, %struct.rtx_def** %newpos2, align 8, !dbg !4309
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !4274, metadata !DIExpression()), !dbg !4303
  store %struct.rtx_def* null, %struct.rtx_def** %newpos1, align 8, !dbg !4310
  %6 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !4311
  %tobool = icmp ne i32 %6, 0, !dbg !4311
  %7 = load i32, i32* @reload_completed, align 4, !dbg !4313
  %tobool4 = icmp ne i32 %7, 0, !dbg !4313
  %or.cond = and i1 %tobool, %tobool4, !dbg !4314
  br i1 %or.cond, label %cleanup410, label %if.end, !dbg !4314

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %0) #8, !dbg !4315
  %tobool5 = icmp eq i8 %call, 0, !dbg !4315
  br i1 %tobool5, label %if.end11, label %land.lhs.true6, !dbg !4317

land.lhs.true6:                                   ; preds = %if.end
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 13, !dbg !4318
  %8 = load i32, i32* %flags, align 8, !dbg !4318
  %and = and i32 %8, 1024, !dbg !4318
  %tobool7 = icmp eq i32 %and, 0, !dbg !4318
  br i1 %tobool7, label %if.end11, label %if.then8, !dbg !4319

if.then8:                                         ; preds = %land.lhs.true6
  %call9 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %0) #8, !dbg !4320
  call void @llvm.dbg.value(metadata %struct.edge_def* %call9, metadata !4266, metadata !DIExpression()), !dbg !4303
  %src10 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call9, i64 0, i32 0, !dbg !4321
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %src10, align 8, !dbg !4321
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !4269, metadata !DIExpression()), !dbg !4303
  br label %if.end11, !dbg !4322

if.end11:                                         ; preds = %land.lhs.true6, %if.end, %if.then8
  %src1.0 = phi %struct.basic_block_def* [ %9, %if.then8 ], [ %0, %land.lhs.true6 ], [ %0, %if.end ], !dbg !4303
  %e1.addr.0 = phi %struct.edge_def* [ %call9, %if.then8 ], [ %e1, %land.lhs.true6 ], [ %e1, %if.end ]
  call void @llvm.dbg.value(metadata %struct.edge_def* %e1.addr.0, metadata !4266, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %src1.0, metadata !4269, metadata !DIExpression()), !dbg !4303
  %call12 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %1) #8, !dbg !4323
  %tobool14 = icmp eq i8 %call12, 0, !dbg !4323
  br i1 %tobool14, label %if.end22, label %land.lhs.true15, !dbg !4325

land.lhs.true15:                                  ; preds = %if.end11
  %flags16 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 13, !dbg !4326
  %10 = load i32, i32* %flags16, align 8, !dbg !4326
  %and17 = and i32 %10, 1024, !dbg !4326
  %tobool18 = icmp eq i32 %and17, 0, !dbg !4326
  br i1 %tobool18, label %if.end22, label %if.then19, !dbg !4327

if.then19:                                        ; preds = %land.lhs.true15
  %call20 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %1) #8, !dbg !4328
  call void @llvm.dbg.value(metadata %struct.edge_def* %call20, metadata !4267, metadata !DIExpression()), !dbg !4303
  %src21 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 0, !dbg !4329
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %src21, align 8, !dbg !4329
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %11, metadata !4270, metadata !DIExpression()), !dbg !4303
  br label %if.end22, !dbg !4330

if.end22:                                         ; preds = %land.lhs.true15, %if.end11, %if.then19
  %src2.0 = phi %struct.basic_block_def* [ %11, %if.then19 ], [ %1, %land.lhs.true15 ], [ %1, %if.end11 ], !dbg !4303
  %e2.addr.0 = phi %struct.edge_def* [ %call20, %if.then19 ], [ %e2, %land.lhs.true15 ], [ %e2, %if.end11 ]
  call void @llvm.dbg.value(metadata %struct.edge_def* %e2.addr.0, metadata !4267, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %src2.0, metadata !4270, metadata !DIExpression()), !dbg !4303
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4331
  %cfg = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 1, !dbg !4331
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4331
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 0, !dbg !4331
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4331
  %cmp = icmp eq %struct.basic_block_def* %src1.0, %14, !dbg !4333
  br i1 %cmp, label %cleanup410, label %lor.lhs.false, !dbg !4334

lor.lhs.false:                                    ; preds = %if.end22
  %cmp27 = icmp eq %struct.basic_block_def* %src2.0, %14, !dbg !4335
  %cmp31 = icmp eq %struct.basic_block_def* %src1.0, %src2.0, !dbg !4336
  %or.cond1 = or i1 %cmp27, %cmp31, !dbg !4338
  br i1 %or.cond1, label %cleanup410, label %if.end34, !dbg !4338

if.end34:                                         ; preds = %lor.lhs.false
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1.addr.0, i64 0, i32 1, !dbg !4339
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4339
  %flags35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 13, !dbg !4339
  %16 = load i32, i32* %flags35, align 8, !dbg !4339
  %and36 = and i32 %16, 1024, !dbg !4339
  %tobool37 = icmp eq i32 %and36, 0, !dbg !4339
  br i1 %tobool37, label %if.end45, label %land.lhs.true38, !dbg !4341

land.lhs.true38:                                  ; preds = %if.end34
  %call40 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %15) #8, !dbg !4342
  %flags41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call40, i64 0, i32 13, !dbg !4342
  %17 = load i32, i32* %flags41, align 8, !dbg !4342
  %and42 = and i32 %17, 1024, !dbg !4342
  %tobool43 = icmp eq i32 %and42, 0, !dbg !4342
  br i1 %tobool43, label %if.end45, label %cleanup410, !dbg !4343

if.end45:                                         ; preds = %land.lhs.true38, %if.end34
  %dest46 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e2.addr.0, i64 0, i32 1, !dbg !4344
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest46, align 8, !dbg !4344
  %flags47 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i64 0, i32 13, !dbg !4344
  %19 = load i32, i32* %flags47, align 8, !dbg !4344
  %and48 = and i32 %19, 1024, !dbg !4344
  %tobool49 = icmp eq i32 %and48, 0, !dbg !4344
  br i1 %tobool49, label %if.end57, label %land.lhs.true50, !dbg !4346

land.lhs.true50:                                  ; preds = %if.end45
  %call52 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %18) #8, !dbg !4347
  %flags53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call52, i64 0, i32 13, !dbg !4347
  %20 = load i32, i32* %flags53, align 8, !dbg !4347
  %and54 = and i32 %20, 1024, !dbg !4347
  %tobool55 = icmp eq i32 %and54, 0, !dbg !4347
  br i1 %tobool55, label %if.end57, label %cleanup410, !dbg !4348

if.end57:                                         ; preds = %land.lhs.true50, %if.end45
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src1.0, i64 0, i32 0, !dbg !4349
  %21 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4349
  %tobool58 = icmp eq %struct.VEC_edge_gc* %21, null, !dbg !4349
  br i1 %tobool58, label %cond.end, label %cond.true, !dbg !4349

cond.true:                                        ; preds = %if.end57
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %21, i64 0, i32 0, !dbg !4349
  br label %cond.end, !dbg !4349

cond.end:                                         ; preds = %if.end57, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end57 ], !dbg !4349
  %call60 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4349
  %cmp61 = icmp eq i32 %call60, 0, !dbg !4351
  br i1 %cmp61, label %cleanup410, label %lor.lhs.false63, !dbg !4352

lor.lhs.false63:                                  ; preds = %cond.end
  %preds64 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src2.0, i64 0, i32 0, !dbg !4353
  %22 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds64, align 8, !dbg !4353
  %tobool65 = icmp eq %struct.VEC_edge_gc* %22, null, !dbg !4353
  br i1 %tobool65, label %cond.end70, label %cond.true66, !dbg !4353

cond.true66:                                      ; preds = %lor.lhs.false63
  %base68 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %22, i64 0, i32 0, !dbg !4353
  br label %cond.end70, !dbg !4353

cond.end70:                                       ; preds = %lor.lhs.false63, %cond.true66
  %cond71 = phi %struct.VEC_edge_base* [ %base68, %cond.true66 ], [ null, %lor.lhs.false63 ], !dbg !4353
  %call72 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond71) #8, !dbg !4353
  %cmp73 = icmp eq i32 %call72, 0, !dbg !4354
  br i1 %cmp73, label %cleanup410, label %if.end76, !dbg !4355

if.end76:                                         ; preds = %cond.end70
  %call77 = tail call fastcc zeroext i8 @outgoing_edges_match(i32 %mode, %struct.basic_block_def* %src1.0, %struct.basic_block_def* %src2.0) #8, !dbg !4356
  %tobool78 = icmp eq i8 %call77, 0, !dbg !4356
  br i1 %tobool78, label %cleanup410, label %if.end80, !dbg !4358

if.end80:                                         ; preds = %if.end76
  call void @llvm.dbg.value(metadata %struct.rtx_def** %newpos1, metadata !4274, metadata !DIExpression(DW_OP_deref)), !dbg !4303
  call void @llvm.dbg.value(metadata %struct.rtx_def** %newpos2, metadata !4275, metadata !DIExpression(DW_OP_deref)), !dbg !4303
  %call81 = call fastcc i32 @flow_find_cross_jump(i32 %mode, %struct.basic_block_def* %src1.0, %struct.basic_block_def* %src2.0, %struct.rtx_def** nonnull %newpos1, %struct.rtx_def** nonnull %newpos2) #8, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %call81, metadata !4268, metadata !DIExpression()), !dbg !4303
  %23 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4360
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %23, i64 54, i32 1, !dbg !4360
  %24 = load i32, i32* %value, align 8, !dbg !4360
  %cmp82 = icmp slt i32 %call81, %24, !dbg !4362
  br i1 %cmp82, label %land.lhs.true84, label %if.end88, !dbg !4363

land.lhs.true84:                                  ; preds = %if.end80
  %25 = load %struct.rtx_def*, %struct.rtx_def** %newpos1, align 8, !dbg !4364
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !4274, metadata !DIExpression()), !dbg !4303
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src1.0, i64 0, i32 7, !dbg !4365
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4365
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4365
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i64 0, i32 0, !dbg !4365
  %27 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4365
  %cmp85 = icmp eq %struct.rtx_def* %25, %27, !dbg !4366
  br i1 %cmp85, label %if.end88, label %cleanup410, !dbg !4367

if.end88:                                         ; preds = %land.lhs.true84, %if.end80
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4368
  %call90 = call fastcc zeroext i8 @block_has_preserve_label(%struct.basic_block_def* %28) #8, !dbg !4370
  %tobool92 = icmp eq i8 %call90, 0, !dbg !4370
  br i1 %tobool92, label %if.end98, label %land.lhs.true93, !dbg !4371

land.lhs.true93:                                  ; preds = %if.end88
  %flags94 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e1.addr.0, i64 0, i32 7, !dbg !4372
  %29 = load i32, i32* %flags94, align 8, !dbg !4372
  %and95 = and i32 %29, 2, !dbg !4373
  %tobool96 = icmp eq i32 %and95, 0, !dbg !4373
  br i1 %tobool96, label %if.end98, label %cleanup410, !dbg !4374

if.end98:                                         ; preds = %land.lhs.true93, %if.end88
  %30 = bitcast %struct.rtx_def** %label1 to i8*, !dbg !4375
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7, !dbg !4375
  %31 = bitcast %struct.rtx_def** %label2 to i8*, !dbg !4375
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7, !dbg !4375
  %32 = bitcast %struct.rtx_def** %table1 to i8*, !dbg !4376
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7, !dbg !4376
  %33 = bitcast %struct.rtx_def** %table2 to i8*, !dbg !4376
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7, !dbg !4376
  %il99 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src1.0, i64 0, i32 7, !dbg !4377
  %rtl100 = bitcast %union.basic_block_il_dependent* %il99 to %struct.rtl_bb_info**, !dbg !4377
  %34 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl100, align 8, !dbg !4377
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %34, i64 0, i32 1, !dbg !4377
  %35 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4377
  call void @llvm.dbg.value(metadata %struct.rtx_def** %label1, metadata !4278, metadata !DIExpression(DW_OP_deref)), !dbg !4378
  call void @llvm.dbg.value(metadata %struct.rtx_def** %table1, metadata !4281, metadata !DIExpression(DW_OP_deref)), !dbg !4378
  %call101 = call zeroext i8 @tablejump_p(%struct.rtx_def* %35, %struct.rtx_def** nonnull %label1, %struct.rtx_def** nonnull %table1) #6, !dbg !4379
  %tobool103 = icmp eq i8 %call101, 0, !dbg !4379
  br i1 %tobool103, label %if.end98.if.end126_crit_edge, label %land.lhs.true104, !dbg !4380

if.end98.if.end126_crit_edge:                     ; preds = %if.end98
  br label %if.end126, !dbg !4380

land.lhs.true104:                                 ; preds = %if.end98
  %il105 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src2.0, i64 0, i32 7, !dbg !4381
  %rtl106 = bitcast %union.basic_block_il_dependent* %il105 to %struct.rtl_bb_info**, !dbg !4381
  %36 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl106, align 8, !dbg !4381
  %end_107 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %36, i64 0, i32 1, !dbg !4381
  %37 = load %struct.rtx_def*, %struct.rtx_def** %end_107, align 8, !dbg !4381
  call void @llvm.dbg.value(metadata %struct.rtx_def** %label2, metadata !4280, metadata !DIExpression(DW_OP_deref)), !dbg !4378
  call void @llvm.dbg.value(metadata %struct.rtx_def** %table2, metadata !4282, metadata !DIExpression(DW_OP_deref)), !dbg !4378
  %call108 = call zeroext i8 @tablejump_p(%struct.rtx_def* %37, %struct.rtx_def** nonnull %label2, %struct.rtx_def** nonnull %table2) #6, !dbg !4382
  %tobool110 = icmp eq i8 %call108, 0, !dbg !4382
  br i1 %tobool110, label %if.end126, label %land.lhs.true111, !dbg !4383

land.lhs.true111:                                 ; preds = %land.lhs.true104
  %38 = load %struct.rtx_def*, %struct.rtx_def** %label1, align 8, !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %38, metadata !4278, metadata !DIExpression()), !dbg !4378
  %39 = load %struct.rtx_def*, %struct.rtx_def** %label2, align 8, !dbg !4385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %39, metadata !4280, metadata !DIExpression()), !dbg !4378
  %cmp112 = icmp eq %struct.rtx_def* %38, %39, !dbg !4386
  br i1 %cmp112, label %if.end126, label %if.then114, !dbg !4387

if.then114:                                       ; preds = %land.lhs.true111
  %40 = ptrtoint %struct.rtx_def* %39 to i64, !dbg !4387
  %41 = ptrtoint %struct.rtx_def* %38 to i64, !dbg !4387
  %42 = bitcast %struct.replace_label_data* %rr to i8*, !dbg !4388
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #7, !dbg !4388
  %43 = bitcast %struct.rtx_def** %insn to i8*, !dbg !4389
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #7, !dbg !4389
  %44 = bitcast %struct.replace_label_data* %rr to i64*, !dbg !4390
  store i64 %41, i64* %44, align 8, !dbg !4390
  %r2 = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %rr, i64 0, i32 1, !dbg !4391
  %45 = bitcast %struct.rtx_def** %r2 to i64*, !dbg !4392
  store i64 %40, i64* %45, align 8, !dbg !4392
  %update_label_nuses = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %rr, i64 0, i32 2, !dbg !4393
  store i8 1, i8* %update_label_nuses, align 8, !dbg !4394
  %call115 = call %struct.rtx_def* @get_insns() #6, !dbg !4395
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call115, metadata !4292, metadata !DIExpression()), !dbg !4397
  br label %for.cond, !dbg !4398

for.cond:                                         ; preds = %for.inc, %if.then114
  %46 = phi %struct.rtx_def* [ %call115, %if.then114 ], [ %51, %for.inc ], !dbg !4399
  store %struct.rtx_def* %46, %struct.rtx_def** %insn, align 8, !dbg !4399
  call void @llvm.dbg.value(metadata %struct.rtx_def* %46, metadata !4292, metadata !DIExpression()), !dbg !4397
  %tobool116 = icmp eq %struct.rtx_def* %46, null, !dbg !4400
  br i1 %tobool116, label %for.end, label %for.body, !dbg !4400

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %46, metadata !4292, metadata !DIExpression()), !dbg !4397
  %47 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl100, align 8, !dbg !4401
  %end_119 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %47, i64 0, i32 1, !dbg !4401
  %48 = load %struct.rtx_def*, %struct.rtx_def** %end_119, align 8, !dbg !4401
  %cmp120 = icmp eq %struct.rtx_def* %46, %48, !dbg !4405
  br i1 %cmp120, label %for.inc, label %if.then122, !dbg !4406

if.then122:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn, metadata !4292, metadata !DIExpression(DW_OP_deref)), !dbg !4397
  %call123 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %insn, i32 (%struct.rtx_def**, i8*)* nonnull @replace_label, i8* nonnull %42) #6, !dbg !4407
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4408
  br label %for.inc, !dbg !4407

for.inc:                                          ; preds = %for.body, %if.then122
  %49 = phi %struct.rtx_def* [ %46, %for.body ], [ %.pre, %if.then122 ], !dbg !4408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %49, metadata !4292, metadata !DIExpression()), !dbg !4397
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4408
  %rt_rtx = bitcast %union.rtunion_def* %50 to %struct.rtx_def**, !dbg !4408
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4408
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !4292, metadata !DIExpression()), !dbg !4397
  br label %for.cond, !dbg !4409, !llvm.loop !4410

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #7, !dbg !4412
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7, !dbg !4412
  br label %if.end126, !dbg !4413

if.end126:                                        ; preds = %if.end98.if.end126_crit_edge, %land.lhs.true111, %land.lhs.true104, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7, !dbg !4414
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7, !dbg !4414
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7, !dbg !4414
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7, !dbg !4414
  %52 = load %struct.rtx_def*, %struct.rtx_def** %newpos2, align 8, !dbg !4415
  call void @llvm.dbg.value(metadata %struct.rtx_def* %52, metadata !4275, metadata !DIExpression()), !dbg !4303
  %il127 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src2.0, i64 0, i32 7, !dbg !4417
  %rtl128 = bitcast %union.basic_block_il_dependent* %il127 to %struct.rtl_bb_info**, !dbg !4417
  %53 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl128, align 8, !dbg !4417
  %head_129 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %53, i64 0, i32 0, !dbg !4417
  %54 = load %struct.rtx_def*, %struct.rtx_def** %head_129, align 8, !dbg !4417
  %cmp130 = icmp eq %struct.rtx_def* %52, %54, !dbg !4418
  %55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 0, !dbg !4419
  br i1 %cmp130, label %land.lhs.true132, label %if.else, !dbg !4419

land.lhs.true132:                                 ; preds = %if.end126
  %56 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds64, align 8, !dbg !4420
  %tobool134 = icmp eq %struct.VEC_edge_gc* %56, null, !dbg !4420
  br i1 %tobool134, label %cond.end139, label %cond.true135, !dbg !4420

cond.true135:                                     ; preds = %land.lhs.true132
  %base137 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %56, i64 0, i32 0, !dbg !4420
  br label %cond.end139, !dbg !4420

cond.end139:                                      ; preds = %land.lhs.true132, %cond.true135
  %cond140 = phi %struct.VEC_edge_base* [ %base137, %cond.true135 ], [ null, %land.lhs.true132 ], !dbg !4420
  %call141 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond140, i32 0) #8, !dbg !4420
  %flags142 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call141, i64 0, i32 7, !dbg !4421
  %57 = load i32, i32* %flags142, align 8, !dbg !4421
  %and143 = and i32 %57, 8, !dbg !4422
  %tobool144 = icmp eq i32 %and143, 0, !dbg !4422
  br i1 %tobool144, label %if.end200, label %cond.end139.if.else_crit_edge, !dbg !4423

cond.end139.if.else_crit_edge:                    ; preds = %cond.end139
  %.pre5 = load %struct.rtx_def*, %struct.rtx_def** %newpos2, align 8, !dbg !4424
  %.pre6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl128, align 8, !dbg !4427
  %head_148.phi.trans.insert = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %.pre6, i64 0, i32 0, !dbg !4428
  %.pre7 = load %struct.rtx_def*, %struct.rtx_def** %head_148.phi.trans.insert, align 8, !dbg !4427
  %58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre5, i64 0, i32 0, !dbg !4423
  br label %if.else, !dbg !4423

if.else:                                          ; preds = %cond.end139.if.else_crit_edge, %if.end126
  %59 = phi i32* [ %58, %cond.end139.if.else_crit_edge ], [ %55, %if.end126 ]
  %60 = phi i32* [ %58, %cond.end139.if.else_crit_edge ], [ %55, %if.end126 ]
  %61 = phi i32* [ %58, %cond.end139.if.else_crit_edge ], [ %55, %if.end126 ]
  %62 = phi %struct.rtx_def* [ %.pre7, %cond.end139.if.else_crit_edge ], [ %54, %if.end126 ], !dbg !4427
  %63 = phi %struct.rtx_def* [ %.pre5, %cond.end139.if.else_crit_edge ], [ %52, %if.end126 ], !dbg !4424
  call void @llvm.dbg.value(metadata %struct.rtx_def* %63, metadata !4275, metadata !DIExpression()), !dbg !4303
  %cmp149 = icmp eq %struct.rtx_def* %63, %62, !dbg !4429
  br i1 %cmp149, label %if.then151, label %if.end189, !dbg !4430

if.then151:                                       ; preds = %if.else
  %bf.load = load i32, i32* %61, align 8, !dbg !4431
  %bf.clear = and i32 %bf.load, 65535, !dbg !4431
  %cmp152 = icmp eq i32 %bf.clear, 12, !dbg !4431
  br i1 %cmp152, label %if.then154, label %if.then151.if.end159_crit_edge, !dbg !4434

if.then151.if.end159_crit_edge:                   ; preds = %if.then151
  %.pre12 = bitcast %struct.rtx_def** %newpos2 to i64*, !dbg !4435
  br label %if.end159, !dbg !4434

if.then154:                                       ; preds = %if.then151
  call void @llvm.dbg.value(metadata %struct.rtx_def* %63, metadata !4275, metadata !DIExpression()), !dbg !4303
  %64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4436
  %65 = bitcast %union.rtunion_def* %64 to i64*, !dbg !4436
  %66 = load i64, i64* %65, align 8, !dbg !4436
  %67 = bitcast %struct.rtx_def** %newpos2 to i64*, !dbg !4437
  store i64 %66, i64* %67, align 8, !dbg !4437
  %68 = inttoptr i64 %66 to i32*, !dbg !4438
  %69 = inttoptr i64 %66 to %struct.rtx_def*, !dbg !4438
  br label %if.end159, !dbg !4438

if.end159:                                        ; preds = %if.then151.if.end159_crit_edge, %if.then154
  %.pre-phi13 = phi i64* [ %.pre12, %if.then151.if.end159_crit_edge ], [ %67, %if.then154 ], !dbg !4435
  %70 = phi %struct.rtx_def* [ %62, %if.then151.if.end159_crit_edge ], [ %69, %if.then154 ]
  %71 = phi %struct.rtx_def* [ %62, %if.then151.if.end159_crit_edge ], [ %69, %if.then154 ]
  %72 = phi i32* [ %59, %if.then151.if.end159_crit_edge ], [ %68, %if.then154 ]
  %73 = phi %struct.rtx_def* [ %62, %if.then151.if.end159_crit_edge ], [ %69, %if.then154 ]
  %74 = phi i32* [ %60, %if.then151.if.end159_crit_edge ], [ %68, %if.then154 ]
  br label %while.cond, !dbg !4439

while.cond:                                       ; preds = %while.body, %if.end159
  %75 = phi %struct.rtx_def* [ %83, %while.body ], [ %70, %if.end159 ]
  %76 = phi %struct.rtx_def* [ %83, %while.body ], [ %71, %if.end159 ]
  %77 = phi i32* [ %82, %while.body ], [ %72, %if.end159 ]
  %78 = phi %struct.rtx_def* [ %83, %while.body ], [ %73, %if.end159 ]
  %79 = phi i32* [ %82, %while.body ], [ %74, %if.end159 ], !dbg !4440
  %bf.load160 = load i32, i32* %79, align 8, !dbg !4440
  %bf.clear161 = and i32 %bf.load160, 65535, !dbg !4440
  %cmp162 = icmp eq i32 %bf.clear161, 7, !dbg !4440
  call void @llvm.dbg.value(metadata i32* %79, metadata !4275, metadata !DIExpression()), !dbg !4303
  br i1 %cmp162, label %while.body, label %while.end, !dbg !4439

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32* %79, metadata !4275, metadata !DIExpression()), !dbg !4303
  %arrayidx166 = getelementptr inbounds i32, i32* %79, i64 6, !dbg !4441
  %80 = bitcast i32* %arrayidx166 to i64*, !dbg !4441
  %81 = load i64, i64* %80, align 8, !dbg !4441
  store i64 %81, i64* %.pre-phi13, align 8, !dbg !4442
  %82 = inttoptr i64 %81 to i32*, !dbg !4439
  %83 = inttoptr i64 %81 to %struct.rtx_def*, !dbg !4439
  br label %while.cond, !dbg !4439, !llvm.loop !4443

while.end:                                        ; preds = %while.cond
  %.lcssa29 = phi %struct.rtx_def* [ %75, %while.cond ]
  %.lcssa28 = phi %struct.rtx_def* [ %76, %while.cond ]
  %.lcssa27 = phi i32* [ %77, %while.cond ]
  %.lcssa26 = phi %struct.rtx_def* [ %78, %while.cond ]
  %bf.clear161.lcssa = phi i32 [ %bf.clear161, %while.cond ], !dbg !4440
  %cmp170 = icmp eq i32 %bf.clear161.lcssa, 13, !dbg !4444
  br i1 %cmp170, label %if.then172, label %if.end177, !dbg !4446

if.then172:                                       ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.lcssa26, metadata !4275, metadata !DIExpression()), !dbg !4303
  %84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa26, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4447
  %85 = bitcast %union.rtunion_def* %84 to i64*, !dbg !4447
  %86 = load i64, i64* %85, align 8, !dbg !4447
  store i64 %86, i64* %.pre-phi13, align 8, !dbg !4448
  %87 = inttoptr i64 %86 to i32*, !dbg !4449
  %88 = inttoptr i64 %86 to %struct.rtx_def*, !dbg !4449
  br label %if.end177, !dbg !4449

if.end177:                                        ; preds = %if.then172, %while.end
  %89 = phi %struct.rtx_def* [ %88, %if.then172 ], [ %.lcssa29, %while.end ]
  %90 = phi %struct.rtx_def* [ %88, %if.then172 ], [ %.lcssa28, %while.end ]
  %91 = phi i32* [ %87, %if.then172 ], [ %.lcssa27, %while.end ]
  br label %while.cond178, !dbg !4450

while.cond178:                                    ; preds = %while.body183, %if.end177
  %92 = phi %struct.rtx_def* [ %99, %while.body183 ], [ %89, %if.end177 ]
  %93 = phi %struct.rtx_def* [ %99, %while.body183 ], [ %90, %if.end177 ]
  %94 = phi i32* [ %98, %while.body183 ], [ %91, %if.end177 ], !dbg !4451
  %bf.load179 = load i32, i32* %94, align 8, !dbg !4451
  %bf.clear180 = and i32 %bf.load179, 65535, !dbg !4451
  %cmp181 = icmp eq i32 %bf.clear180, 7, !dbg !4451
  br i1 %cmp181, label %while.body183, label %if.end189.loopexit, !dbg !4450

while.body183:                                    ; preds = %while.cond178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %92, metadata !4275, metadata !DIExpression()), !dbg !4303
  %95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4452
  %96 = bitcast %union.rtunion_def* %95 to i64*, !dbg !4452
  %97 = load i64, i64* %96, align 8, !dbg !4452
  store i64 %97, i64* %.pre-phi13, align 8, !dbg !4453
  %98 = inttoptr i64 %97 to i32*, !dbg !4450
  %99 = inttoptr i64 %97 to %struct.rtx_def*, !dbg !4450
  br label %while.cond178, !dbg !4450, !llvm.loop !4454

if.end189.loopexit:                               ; preds = %while.cond178
  %.lcssa25 = phi %struct.rtx_def* [ %93, %while.cond178 ]
  br label %if.end189, !dbg !4455

if.end189:                                        ; preds = %if.end189.loopexit, %if.else
  %100 = phi %struct.rtx_def* [ %.lcssa25, %if.end189.loopexit ], [ %63, %if.else ]
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4455
  %tobool190 = icmp eq %struct._IO_FILE* %101, null, !dbg !4455
  br i1 %tobool190, label %if.end193, label %if.then191, !dbg !4457

if.then191:                                       ; preds = %if.end189
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src2.0, i64 0, i32 9, !dbg !4458
  %102 = load i32, i32* %index, align 8, !dbg !4458
  %call192 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %101, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0), i32 %102, i32 %call81) #6, !dbg !4459
  %.pre8 = load %struct.rtx_def*, %struct.rtx_def** %newpos2, align 8, !dbg !4460
  br label %if.end193, !dbg !4459

if.end193:                                        ; preds = %if.end189, %if.then191
  %103 = phi %struct.rtx_def* [ %100, %if.end189 ], [ %.pre8, %if.then191 ], !dbg !4460
  call void @llvm.dbg.value(metadata %struct.rtx_def* %103, metadata !4275, metadata !DIExpression()), !dbg !4303
  %104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, !dbg !4460
  %105 = load i8*, i8** %104, align 8, !dbg !4460
  %call198 = call %struct.edge_def* @split_block(%struct.basic_block_def* %src2.0, i8* %105) #6, !dbg !4461
  %dest199 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call198, i64 0, i32 1, !dbg !4462
  %106 = load %struct.basic_block_def*, %struct.basic_block_def** %dest199, align 8, !dbg !4462
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %106, metadata !4271, metadata !DIExpression()), !dbg !4303
  br label %if.end200

if.end200:                                        ; preds = %cond.end139, %if.end193
  %redirect_to.0 = phi %struct.basic_block_def* [ %106, %if.end193 ], [ %src2.0, %cond.end139 ], !dbg !4463
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %redirect_to.0, metadata !4271, metadata !DIExpression()), !dbg !4303
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4464
  %tobool201 = icmp eq %struct._IO_FILE* %107, null, !dbg !4464
  br i1 %tobool201, label %if.end206, label %if.then202, !dbg !4466

if.then202:                                       ; preds = %if.end200
  %index203 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src1.0, i64 0, i32 9, !dbg !4467
  %108 = load i32, i32* %index203, align 8, !dbg !4467
  %index204 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src2.0, i64 0, i32 9, !dbg !4468
  %109 = load i32, i32* %index204, align 8, !dbg !4468
  %call205 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %107, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0), i32 %108, i32 %109, i32 %call81) #6, !dbg !4469
  br label %if.end206, !dbg !4469

if.end206:                                        ; preds = %if.end200, %if.then202
  call void @df_set_bb_dirty(%struct.basic_block_def* %redirect_to.0) #6, !dbg !4470
  %110 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #7, !dbg !4471
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %redirect_to.0, i64 0, i32 1, !dbg !4471
  %call207 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4471
  %111 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4471
  %112 = extractvalue { i32, %struct.VEC_edge_gc** } %call207, 0, !dbg !4471
  store i32 %112, i32* %111, align 8, !dbg !4471
  %113 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4471
  %114 = extractvalue { i32, %struct.VEC_edge_gc** } %call207, 1, !dbg !4471
  store %struct.VEC_edge_gc** %114, %struct.VEC_edge_gc*** %113, align 8, !dbg !4471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %110, i64 16, i1 false), !dbg !4471
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #7, !dbg !4471
  %115 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4472
  %116 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4472
  %117 = bitcast %struct.edge_def** %s2 to i8*, !dbg !4473
  %118 = bitcast %struct.edge_iterator* %ei212 to i8*, !dbg !4473
  %119 = bitcast %struct.edge_iterator* %tmp220 to i8*, !dbg !4474
  %succs221 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src1.0, i64 0, i32 1, !dbg !4474
  %120 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp220, i64 0, i32 0, !dbg !4474
  %121 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp220, i64 0, i32 1, !dbg !4474
  %122 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei212, i64 0, i32 0, !dbg !4475
  %123 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei212, i64 0, i32 1, !dbg !4475
  %frequency310 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %redirect_to.0, i64 0, i32 11, !dbg !4476
  %frequency313 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src1.0, i64 0, i32 11, !dbg !4476
  br label %for.cond208, !dbg !4471

for.cond208:                                      ; preds = %if.end334, %if.end206
  %124 = load i32, i32* %115, align 8, !dbg !4478
  %125 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %116, align 8, !dbg !4478
  call void @llvm.dbg.value(metadata %struct.edge_def** %s, metadata !4276, metadata !DIExpression(DW_OP_deref)), !dbg !4303
  %call209 = call fastcc zeroext i8 @ei_cond(i32 %124, %struct.VEC_edge_gc** %125, %struct.edge_def** nonnull %s) #8, !dbg !4478
  %tobool210 = icmp eq i8 %call209, 0, !dbg !4471
  br i1 %tobool210, label %for.end336, label %for.body211, !dbg !4471

for.body211:                                      ; preds = %for.cond208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #7, !dbg !4479
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #7, !dbg !4480
  %126 = load %struct.edge_def*, %struct.edge_def** %s, align 8, !dbg !4481
  call void @llvm.dbg.value(metadata %struct.edge_def* %126, metadata !4276, metadata !DIExpression()), !dbg !4303
  %dest213 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %126, i64 0, i32 1, !dbg !4482
  %127 = load %struct.basic_block_def*, %struct.basic_block_def** %dest213, align 8, !dbg !4482
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %127, metadata !4298, metadata !DIExpression()), !dbg !4473
  %flags214 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %127, i64 0, i32 13, !dbg !4483
  %128 = load i32, i32* %flags214, align 8, !dbg !4483
  %and215 = and i32 %128, 1024, !dbg !4483
  %tobool216 = icmp eq i32 %and215, 0, !dbg !4483
  br i1 %tobool216, label %if.end219, label %if.then217, !dbg !4485

if.then217:                                       ; preds = %for.body211
  %call218 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %127) #8, !dbg !4486
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call218, metadata !4298, metadata !DIExpression()), !dbg !4473
  br label %if.end219, !dbg !4487

if.end219:                                        ; preds = %for.body211, %if.then217
  %d.0 = phi %struct.basic_block_def* [ %call218, %if.then217 ], [ %127, %for.body211 ], !dbg !4473
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %d.0, metadata !4298, metadata !DIExpression()), !dbg !4473
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #7, !dbg !4488
  %call222 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs221) #8, !dbg !4488
  %129 = extractvalue { i32, %struct.VEC_edge_gc** } %call222, 0, !dbg !4488
  store i32 %129, i32* %120, align 8, !dbg !4488
  %130 = extractvalue { i32, %struct.VEC_edge_gc** } %call222, 1, !dbg !4488
  store %struct.VEC_edge_gc** %130, %struct.VEC_edge_gc*** %121, align 8, !dbg !4488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* nonnull align 8 %119, i64 16, i1 false), !dbg !4488
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #7, !dbg !4488
  br label %for.cond223, !dbg !4488

for.cond223:                                      ; preds = %for.inc238, %if.end219
  %131 = load i32, i32* %122, align 8, !dbg !4489
  %132 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %123, align 8, !dbg !4489
  call void @llvm.dbg.value(metadata %struct.edge_def** %s2, metadata !4293, metadata !DIExpression(DW_OP_deref)), !dbg !4473
  %call224 = call fastcc zeroext i8 @ei_cond(i32 %131, %struct.VEC_edge_gc** %132, %struct.edge_def** nonnull %s2) #8, !dbg !4489
  %tobool225 = icmp eq i8 %call224, 0, !dbg !4488
  br i1 %tobool225, label %for.end239, label %for.body226, !dbg !4488

for.body226:                                      ; preds = %for.cond223
  %133 = load %struct.edge_def*, %struct.edge_def** %s2, align 8, !dbg !4490
  call void @llvm.dbg.value(metadata %struct.edge_def* %133, metadata !4293, metadata !DIExpression()), !dbg !4473
  %dest227 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %133, i64 0, i32 1, !dbg !4491
  %134 = load %struct.basic_block_def*, %struct.basic_block_def** %dest227, align 8, !dbg !4491
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %134, metadata !4299, metadata !DIExpression()), !dbg !4492
  %flags228 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %134, i64 0, i32 13, !dbg !4493
  %135 = load i32, i32* %flags228, align 8, !dbg !4493
  %and229 = and i32 %135, 1024, !dbg !4493
  %tobool230 = icmp eq i32 %and229, 0, !dbg !4493
  br i1 %tobool230, label %if.end233, label %if.then231, !dbg !4495

if.then231:                                       ; preds = %for.body226
  %call232 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %134) #8, !dbg !4496
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call232, metadata !4299, metadata !DIExpression()), !dbg !4492
  br label %if.end233, !dbg !4497

if.end233:                                        ; preds = %for.body226, %if.then231
  %d2.0 = phi %struct.basic_block_def* [ %call232, %if.then231 ], [ %134, %for.body226 ], !dbg !4492
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %d2.0, metadata !4299, metadata !DIExpression()), !dbg !4492
  %cmp234 = icmp eq %struct.basic_block_def* %d.0, %d2.0, !dbg !4498
  br i1 %cmp234, label %for.end239, label %for.inc238

for.inc238:                                       ; preds = %if.end233
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei212, metadata !4297, metadata !DIExpression(DW_OP_deref)), !dbg !4473
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei212) #8, !dbg !4489
  br label %for.cond223, !dbg !4489, !llvm.loop !4500

for.end239:                                       ; preds = %for.cond223, %if.end233
  %136 = load %struct.edge_def*, %struct.edge_def** %s2, align 8, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.edge_def* %136, metadata !4293, metadata !DIExpression()), !dbg !4473
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %136, i64 0, i32 9, !dbg !4503
  %137 = load i64, i64* %count, align 8, !dbg !4503
  %138 = load %struct.edge_def*, %struct.edge_def** %s, align 8, !dbg !4504
  call void @llvm.dbg.value(metadata %struct.edge_def* %138, metadata !4276, metadata !DIExpression()), !dbg !4303
  %count240 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %138, i64 0, i32 9, !dbg !4505
  %139 = load i64, i64* %count240, align 8, !dbg !4506
  %add = add nsw i64 %139, %137, !dbg !4506
  store i64 %add, i64* %count240, align 8, !dbg !4506
  call void @llvm.dbg.value(metadata %struct.edge_def* %138, metadata !4276, metadata !DIExpression()), !dbg !4303
  %dest241 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %138, i64 0, i32 1, !dbg !4507
  %140 = load %struct.basic_block_def*, %struct.basic_block_def** %dest241, align 8, !dbg !4507
  %flags242 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %140, i64 0, i32 13, !dbg !4507
  %141 = load i32, i32* %flags242, align 8, !dbg !4507
  %and243 = and i32 %141, 1024, !dbg !4507
  %tobool244 = icmp eq i32 %and243, 0, !dbg !4507
  br i1 %tobool244, label %if.end260, label %if.then245, !dbg !4509

if.then245:                                       ; preds = %for.end239
  call void @llvm.dbg.value(metadata %struct.edge_def* %136, metadata !4293, metadata !DIExpression()), !dbg !4473
  %142 = load i64, i64* %count, align 8, !dbg !4510
  call void @llvm.dbg.value(metadata %struct.edge_def* %138, metadata !4276, metadata !DIExpression()), !dbg !4303
  %call248 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %140) #8, !dbg !4512
  %count249 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call248, i64 0, i32 9, !dbg !4513
  %143 = load i64, i64* %count249, align 8, !dbg !4514
  %add250 = add nsw i64 %143, %142, !dbg !4514
  store i64 %add250, i64* %count249, align 8, !dbg !4514
  %144 = load %struct.edge_def*, %struct.edge_def** %s2, align 8, !dbg !4515
  call void @llvm.dbg.value(metadata %struct.edge_def* %144, metadata !4293, metadata !DIExpression()), !dbg !4473
  %count251 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %144, i64 0, i32 9, !dbg !4516
  %145 = load i64, i64* %count251, align 8, !dbg !4516
  %146 = load %struct.edge_def*, %struct.edge_def** %s, align 8, !dbg !4517
  call void @llvm.dbg.value(metadata %struct.edge_def* %146, metadata !4276, metadata !DIExpression()), !dbg !4303
  %dest252 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %146, i64 0, i32 1, !dbg !4518
  %147 = load %struct.basic_block_def*, %struct.basic_block_def** %dest252, align 8, !dbg !4518
  %count253 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %147, i64 0, i32 8, !dbg !4519
  %148 = load i64, i64* %count253, align 8, !dbg !4520
  %add254 = add nsw i64 %148, %145, !dbg !4520
  store i64 %add254, i64* %count253, align 8, !dbg !4520
  call void @llvm.dbg.value(metadata %struct.edge_def* %146, metadata !4276, metadata !DIExpression()), !dbg !4303
  %src255 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %146, i64 0, i32 0, !dbg !4521
  %149 = load %struct.basic_block_def*, %struct.basic_block_def** %src255, align 8, !dbg !4521
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %149, i64 0, i32 11, !dbg !4521
  %150 = load i32, i32* %frequency, align 8, !dbg !4521
  call void @llvm.dbg.value(metadata %struct.edge_def* %146, metadata !4276, metadata !DIExpression()), !dbg !4303
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %146, i64 0, i32 8, !dbg !4521
  %151 = load i32, i32* %probability, align 4, !dbg !4521
  %mul = mul nsw i32 %150, %151, !dbg !4521
  %add256 = add nsw i32 %mul, 5000, !dbg !4521
  %div = sdiv i32 %add256, 10000, !dbg !4521
  call void @llvm.dbg.value(metadata %struct.edge_def* %146, metadata !4276, metadata !DIExpression()), !dbg !4303
  %152 = load %struct.basic_block_def*, %struct.basic_block_def** %dest252, align 8, !dbg !4522
  %frequency258 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %152, i64 0, i32 11, !dbg !4523
  %153 = load i32, i32* %frequency258, align 8, !dbg !4524
  %add259 = add nsw i32 %153, %div, !dbg !4524
  store i32 %add259, i32* %frequency258, align 8, !dbg !4524
  br label %if.end260, !dbg !4525

if.end260:                                        ; preds = %for.end239, %if.then245
  %154 = phi %struct.edge_def* [ %138, %for.end239 ], [ %146, %if.then245 ]
  %155 = phi %struct.edge_def* [ %136, %for.end239 ], [ %144, %if.then245 ], !dbg !4526
  call void @llvm.dbg.value(metadata %struct.edge_def* %155, metadata !4293, metadata !DIExpression()), !dbg !4473
  %dest261 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %155, i64 0, i32 1, !dbg !4526
  %156 = load %struct.basic_block_def*, %struct.basic_block_def** %dest261, align 8, !dbg !4526
  %flags262 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %156, i64 0, i32 13, !dbg !4526
  %157 = load i32, i32* %flags262, align 8, !dbg !4526
  %and263 = and i32 %157, 1024, !dbg !4526
  %tobool264 = icmp eq i32 %and263, 0, !dbg !4526
  br i1 %tobool264, label %if.end309, label %if.then265, !dbg !4528

if.then265:                                       ; preds = %if.end260
  call void @llvm.dbg.value(metadata %struct.edge_def* %155, metadata !4293, metadata !DIExpression()), !dbg !4473
  %count266 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %155, i64 0, i32 9, !dbg !4529
  %158 = load i64, i64* %count266, align 8, !dbg !4529
  call void @llvm.dbg.value(metadata %struct.edge_def* %155, metadata !4293, metadata !DIExpression()), !dbg !4473
  %call268 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %156) #8, !dbg !4531
  %count269 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call268, i64 0, i32 9, !dbg !4532
  %159 = load i64, i64* %count269, align 8, !dbg !4533
  %sub = sub nsw i64 %159, %158, !dbg !4533
  store i64 %sub, i64* %count269, align 8, !dbg !4533
  %160 = load %struct.edge_def*, %struct.edge_def** %s2, align 8, !dbg !4534
  call void @llvm.dbg.value(metadata %struct.edge_def* %160, metadata !4293, metadata !DIExpression()), !dbg !4473
  %dest270 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %160, i64 0, i32 1, !dbg !4536
  %161 = load %struct.basic_block_def*, %struct.basic_block_def** %dest270, align 8, !dbg !4536
  %call271 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %161) #8, !dbg !4537
  %count272 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call271, i64 0, i32 9, !dbg !4538
  %162 = load i64, i64* %count272, align 8, !dbg !4538
  %cmp273 = icmp slt i64 %162, 0, !dbg !4539
  br i1 %cmp273, label %if.then275, label %if.end279, !dbg !4540

if.then275:                                       ; preds = %if.then265
  %163 = load %struct.edge_def*, %struct.edge_def** %s2, align 8, !dbg !4541
  call void @llvm.dbg.value(metadata %struct.edge_def* %163, metadata !4293, metadata !DIExpression()), !dbg !4473
  %dest276 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %163, i64 0, i32 1, !dbg !4542
  %164 = load %struct.basic_block_def*, %struct.basic_block_def** %dest276, align 8, !dbg !4542
  %call277 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %164) #8, !dbg !4543
  %count278 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call277, i64 0, i32 9, !dbg !4544
  store i64 0, i64* %count278, align 8, !dbg !4545
  br label %if.end279, !dbg !4543

if.end279:                                        ; preds = %if.then275, %if.then265
  %165 = load %struct.edge_def*, %struct.edge_def** %s2, align 8, !dbg !4546
  call void @llvm.dbg.value(metadata %struct.edge_def* %165, metadata !4293, metadata !DIExpression()), !dbg !4473
  %count280 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %165, i64 0, i32 9, !dbg !4547
  %166 = load i64, i64* %count280, align 8, !dbg !4547
  call void @llvm.dbg.value(metadata %struct.edge_def* %165, metadata !4293, metadata !DIExpression()), !dbg !4473
  %dest281 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %165, i64 0, i32 1, !dbg !4548
  %167 = load %struct.basic_block_def*, %struct.basic_block_def** %dest281, align 8, !dbg !4548
  %count282 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %167, i64 0, i32 8, !dbg !4549
  %168 = load i64, i64* %count282, align 8, !dbg !4550
  %sub283 = sub nsw i64 %168, %166, !dbg !4550
  store i64 %sub283, i64* %count282, align 8, !dbg !4550
  %169 = load %struct.edge_def*, %struct.edge_def** %s, align 8, !dbg !4551
  call void @llvm.dbg.value(metadata %struct.edge_def* %169, metadata !4276, metadata !DIExpression()), !dbg !4303
  %src284 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %169, i64 0, i32 0, !dbg !4551
  %170 = load %struct.basic_block_def*, %struct.basic_block_def** %src284, align 8, !dbg !4551
  %frequency285 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %170, i64 0, i32 11, !dbg !4551
  %171 = load i32, i32* %frequency285, align 8, !dbg !4551
  call void @llvm.dbg.value(metadata %struct.edge_def* %169, metadata !4276, metadata !DIExpression()), !dbg !4303
  %probability286 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %169, i64 0, i32 8, !dbg !4551
  %172 = load i32, i32* %probability286, align 4, !dbg !4551
  %mul287 = mul nsw i32 %171, %172, !dbg !4551
  %add288 = add nsw i32 %mul287, 5000, !dbg !4551
  %div289 = sdiv i32 %add288, 10000, !dbg !4551
  call void @llvm.dbg.value(metadata %struct.edge_def* %165, metadata !4293, metadata !DIExpression()), !dbg !4473
  %173 = load %struct.basic_block_def*, %struct.basic_block_def** %dest281, align 8, !dbg !4552
  %frequency291 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %173, i64 0, i32 11, !dbg !4553
  %174 = load i32, i32* %frequency291, align 8, !dbg !4554
  %sub292 = sub nsw i32 %174, %div289, !dbg !4554
  store i32 %sub292, i32* %frequency291, align 8, !dbg !4554
  call void @llvm.dbg.value(metadata %struct.edge_def* %165, metadata !4293, metadata !DIExpression()), !dbg !4473
  %175 = load %struct.basic_block_def*, %struct.basic_block_def** %dest281, align 8, !dbg !4555
  %frequency294 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %175, i64 0, i32 11, !dbg !4557
  %176 = load i32, i32* %frequency294, align 8, !dbg !4557
  %cmp295 = icmp slt i32 %176, 0, !dbg !4558
  br i1 %cmp295, label %if.then297, label %if.end300, !dbg !4559

if.then297:                                       ; preds = %if.end279
  call void @llvm.dbg.value(metadata %struct.edge_def* %165, metadata !4293, metadata !DIExpression()), !dbg !4473
  store i32 0, i32* %frequency294, align 8, !dbg !4560
  %.pre9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest281, align 8, !dbg !4561
  br label %if.end300, !dbg !4563

if.end300:                                        ; preds = %if.then297, %if.end279
  %177 = phi %struct.basic_block_def* [ %.pre9, %if.then297 ], [ %175, %if.end279 ], !dbg !4561
  call void @llvm.dbg.value(metadata %struct.edge_def* %165, metadata !4293, metadata !DIExpression()), !dbg !4473
  %count302 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %177, i64 0, i32 8, !dbg !4564
  %178 = load i64, i64* %count302, align 8, !dbg !4564
  %cmp303 = icmp slt i64 %178, 0, !dbg !4565
  br i1 %cmp303, label %if.then305, label %if.end309, !dbg !4566

if.then305:                                       ; preds = %if.end300
  call void @llvm.dbg.value(metadata %struct.edge_def* %165, metadata !4293, metadata !DIExpression()), !dbg !4473
  store i64 0, i64* %count302, align 8, !dbg !4567
  br label %if.end309, !dbg !4568

if.end309:                                        ; preds = %if.end260, %if.end300, %if.then305
  %179 = phi %struct.edge_def* [ %155, %if.end260 ], [ %165, %if.end300 ], [ %165, %if.then305 ]
  %180 = phi %struct.edge_def* [ %154, %if.end260 ], [ %169, %if.end300 ], [ %169, %if.then305 ]
  %181 = load i32, i32* %frequency310, align 8, !dbg !4569
  %tobool311 = icmp eq i32 %181, 0, !dbg !4570
  br i1 %tobool311, label %land.lhs.true312, label %if.end309.if.else321_crit_edge, !dbg !4571

if.end309.if.else321_crit_edge:                   ; preds = %if.end309
  %.pre10 = load i32, i32* %frequency313, align 8, !dbg !4572
  br label %if.else321, !dbg !4571

land.lhs.true312:                                 ; preds = %if.end309
  %182 = load i32, i32* %frequency313, align 8, !dbg !4573
  %tobool314 = icmp eq i32 %182, 0, !dbg !4574
  br i1 %tobool314, label %if.then315, label %if.else321, !dbg !4575

if.then315:                                       ; preds = %land.lhs.true312
  call void @llvm.dbg.value(metadata %struct.edge_def* %180, metadata !4276, metadata !DIExpression()), !dbg !4303
  %probability316 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %180, i64 0, i32 8, !dbg !4576
  %183 = load i32, i32* %probability316, align 4, !dbg !4576
  call void @llvm.dbg.value(metadata %struct.edge_def* %179, metadata !4293, metadata !DIExpression()), !dbg !4473
  %probability317 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %179, i64 0, i32 8, !dbg !4577
  %184 = load i32, i32* %probability317, align 4, !dbg !4577
  %add318 = add nsw i32 %183, %184, !dbg !4578
  %div319 = sdiv i32 %add318, 2, !dbg !4579
  call void @llvm.dbg.value(metadata %struct.edge_def* %180, metadata !4276, metadata !DIExpression()), !dbg !4303
  store i32 %div319, i32* %probability316, align 4, !dbg !4580
  br label %if.end334, !dbg !4581

if.else321:                                       ; preds = %if.end309.if.else321_crit_edge, %land.lhs.true312
  %185 = phi i32 [ %.pre10, %if.end309.if.else321_crit_edge ], [ %182, %land.lhs.true312 ], !dbg !4572
  call void @llvm.dbg.value(metadata %struct.edge_def* %180, metadata !4276, metadata !DIExpression()), !dbg !4303
  %probability322 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %180, i64 0, i32 8, !dbg !4582
  %186 = load i32, i32* %probability322, align 4, !dbg !4582
  %mul324 = mul nsw i32 %186, %181, !dbg !4583
  call void @llvm.dbg.value(metadata %struct.edge_def* %179, metadata !4293, metadata !DIExpression()), !dbg !4473
  %probability325 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %179, i64 0, i32 8, !dbg !4584
  %187 = load i32, i32* %probability325, align 4, !dbg !4584
  %mul327 = mul nsw i32 %187, %185, !dbg !4585
  %add328 = add nsw i32 %mul324, %mul327, !dbg !4586
  %add331 = add nsw i32 %181, %185, !dbg !4587
  %div332 = sdiv i32 %add328, %add331, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.edge_def* %180, metadata !4276, metadata !DIExpression()), !dbg !4303
  store i32 %div332, i32* %probability322, align 4, !dbg !4589
  br label %if.end334

if.end334:                                        ; preds = %if.else321, %if.then315
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #7, !dbg !4590
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #7, !dbg !4590
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4277, metadata !DIExpression(DW_OP_deref)), !dbg !4303
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4478
  br label %for.cond208, !dbg !4478, !llvm.loop !4591

for.end336:                                       ; preds = %for.cond208
  %count337 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src1.0, i64 0, i32 8, !dbg !4593
  %188 = load i64, i64* %count337, align 8, !dbg !4593
  %count338 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %redirect_to.0, i64 0, i32 8, !dbg !4594
  %189 = load i64, i64* %count338, align 8, !dbg !4595
  %add339 = add nsw i64 %189, %188, !dbg !4595
  store i64 %add339, i64* %count338, align 8, !dbg !4595
  %190 = load i32, i32* %frequency313, align 8, !dbg !4596
  %191 = load i32, i32* %frequency310, align 8, !dbg !4597
  %add342 = add nsw i32 %191, %190, !dbg !4597
  %cmp344 = icmp sgt i32 %add342, 10000, !dbg !4598
  br i1 %cmp344, label %if.then346, label %if.end348, !dbg !4600

if.then346:                                       ; preds = %for.end336
  br label %if.end348, !dbg !4601

if.end348:                                        ; preds = %if.then346, %for.end336
  %storemerge = phi i32 [ 10000, %if.then346 ], [ %add342, %for.end336 ], !dbg !4303
  store i32 %storemerge, i32* %frequency310, align 8, !dbg !4303
  call void @update_br_prob_note(%struct.basic_block_def* %redirect_to.0) #6, !dbg !4602
  %192 = bitcast %struct.rtx_def** %newpos1 to i32**, !dbg !4603
  %193 = load i32*, i32** %192, align 8, !dbg !4603
  %bf.load349 = load i32, i32* %193, align 8, !dbg !4603
  %bf.clear350 = and i32 %bf.load349, 65535, !dbg !4603
  %cmp351 = icmp eq i32 %bf.clear350, 12, !dbg !4603
  %194 = bitcast i32* %193 to %struct.rtx_def*, !dbg !4605
  br i1 %cmp351, label %if.then353, label %if.end348.if.end358_crit_edge, !dbg !4605

if.end348.if.end358_crit_edge:                    ; preds = %if.end348
  %.pre11 = bitcast %struct.rtx_def** %newpos1 to i64*, !dbg !4303
  br label %if.end358, !dbg !4605

if.then353:                                       ; preds = %if.end348
  call void @llvm.dbg.value(metadata %struct.rtx_def* %194, metadata !4274, metadata !DIExpression()), !dbg !4303
  %195 = getelementptr inbounds i32, i32* %193, i64 6, !dbg !4606
  %196 = bitcast i32* %195 to i64*, !dbg !4606
  %197 = load i64, i64* %196, align 8, !dbg !4606
  %198 = bitcast %struct.rtx_def** %newpos1 to i64*, !dbg !4607
  store i64 %197, i64* %198, align 8, !dbg !4607
  %199 = inttoptr i64 %197 to i32*, !dbg !4608
  %200 = inttoptr i64 %197 to %struct.rtx_def*, !dbg !4608
  br label %if.end358, !dbg !4608

if.end358:                                        ; preds = %if.end348.if.end358_crit_edge, %if.then353
  %.pre-phi = phi i64* [ %.pre11, %if.end348.if.end358_crit_edge ], [ %198, %if.then353 ], !dbg !4303
  %201 = phi i32* [ %193, %if.end348.if.end358_crit_edge ], [ %199, %if.then353 ]
  %202 = phi %struct.rtx_def* [ %194, %if.end348.if.end358_crit_edge ], [ %200, %if.then353 ]
  %203 = phi %struct.rtx_def* [ %194, %if.end348.if.end358_crit_edge ], [ %200, %if.then353 ]
  %204 = phi i32* [ %193, %if.end348.if.end358_crit_edge ], [ %199, %if.then353 ]
  br label %while.cond359, !dbg !4609

while.cond359:                                    ; preds = %while.body364, %if.end358
  %205 = phi i32* [ %211, %while.body364 ], [ %201, %if.end358 ]
  %206 = phi %struct.rtx_def* [ %212, %while.body364 ], [ %202, %if.end358 ]
  %207 = phi %struct.rtx_def* [ %212, %while.body364 ], [ %203, %if.end358 ]
  %208 = phi i32* [ %211, %while.body364 ], [ %204, %if.end358 ], !dbg !4610
  %bf.load360 = load i32, i32* %208, align 8, !dbg !4610
  %bf.clear361 = and i32 %bf.load360, 65535, !dbg !4610
  %cmp362 = icmp eq i32 %bf.clear361, 7, !dbg !4610
  call void @llvm.dbg.value(metadata i32* %208, metadata !4274, metadata !DIExpression()), !dbg !4303
  br i1 %cmp362, label %while.body364, label %while.end369, !dbg !4609

while.body364:                                    ; preds = %while.cond359
  call void @llvm.dbg.value(metadata i32* %208, metadata !4274, metadata !DIExpression()), !dbg !4303
  %arrayidx367 = getelementptr inbounds i32, i32* %208, i64 6, !dbg !4611
  %209 = bitcast i32* %arrayidx367 to i64*, !dbg !4611
  %210 = load i64, i64* %209, align 8, !dbg !4611
  store i64 %210, i64* %.pre-phi, align 8, !dbg !4612
  %211 = inttoptr i64 %210 to i32*, !dbg !4609
  %212 = inttoptr i64 %210 to %struct.rtx_def*, !dbg !4609
  br label %while.cond359, !dbg !4609, !llvm.loop !4613

while.end369:                                     ; preds = %while.cond359
  %.lcssa24 = phi i32* [ %205, %while.cond359 ]
  %.lcssa23 = phi %struct.rtx_def* [ %206, %while.cond359 ]
  %.lcssa22 = phi %struct.rtx_def* [ %207, %while.cond359 ]
  %bf.clear361.lcssa = phi i32 [ %bf.clear361, %while.cond359 ], !dbg !4610
  %cmp372 = icmp eq i32 %bf.clear361.lcssa, 13, !dbg !4614
  br i1 %cmp372, label %land.lhs.true374, label %if.end385, !dbg !4614

land.lhs.true374:                                 ; preds = %while.end369
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.lcssa22, metadata !4274, metadata !DIExpression()), !dbg !4303
  %u375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa22, i64 0, i32 1, !dbg !4614
  %213 = getelementptr inbounds %union.u, %union.u* %u375, i64 1, i32 0, i32 0, i64 0, !dbg !4614
  %rt_int = bitcast %union.rtunion_def* %213 to i32*, !dbg !4614
  %214 = load i32, i32* %rt_int, align 8, !dbg !4614
  %cmp378 = icmp eq i32 %214, 10, !dbg !4614
  br i1 %cmp378, label %if.then380, label %if.end385, !dbg !4616

if.then380:                                       ; preds = %land.lhs.true374
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.lcssa23, metadata !4274, metadata !DIExpression()), !dbg !4303
  %215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.lcssa23, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4617
  %216 = bitcast %union.rtunion_def* %215 to i64*, !dbg !4617
  %217 = load i64, i64* %216, align 8, !dbg !4617
  store i64 %217, i64* %.pre-phi, align 8, !dbg !4618
  %218 = inttoptr i64 %217 to i32*, !dbg !4619
  br label %if.end385, !dbg !4619

if.end385:                                        ; preds = %if.then380, %land.lhs.true374, %while.end369
  %219 = phi i32* [ %218, %if.then380 ], [ %.lcssa24, %land.lhs.true374 ], [ %.lcssa24, %while.end369 ]
  br label %while.cond386, !dbg !4620

while.cond386:                                    ; preds = %while.body391, %if.end385
  %220 = phi i32* [ %223, %while.body391 ], [ %219, %if.end385 ], !dbg !4621
  %bf.load387 = load i32, i32* %220, align 8, !dbg !4621
  %bf.clear388 = and i32 %bf.load387, 65535, !dbg !4621
  %cmp389 = icmp eq i32 %bf.clear388, 7, !dbg !4621
  call void @llvm.dbg.value(metadata i32* %220, metadata !4274, metadata !DIExpression()), !dbg !4303
  br i1 %cmp389, label %while.body391, label %while.end396, !dbg !4620

while.body391:                                    ; preds = %while.cond386
  %arrayidx394 = getelementptr inbounds i32, i32* %220, i64 6, !dbg !4622
  %221 = bitcast i32* %arrayidx394 to i64*, !dbg !4622
  %222 = load i64, i64* %221, align 8, !dbg !4622
  store i64 %222, i64* %.pre-phi, align 8, !dbg !4623
  %223 = inttoptr i64 %222 to i32*, !dbg !4620
  br label %while.cond386, !dbg !4620, !llvm.loop !4624

while.end396:                                     ; preds = %while.cond386
  %.lcssa = phi i32* [ %220, %while.cond386 ], !dbg !4621
  call void @llvm.dbg.value(metadata i32* %.lcssa, metadata !4274, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i32* %.lcssa, metadata !4274, metadata !DIExpression()), !dbg !4303
  %arrayidx399 = getelementptr inbounds i32, i32* %.lcssa, i64 4, !dbg !4625
  %224 = bitcast i32* %arrayidx399 to i8**, !dbg !4625
  %225 = load i8*, i8** %224, align 8, !dbg !4625
  %call401 = call %struct.edge_def* @split_block(%struct.basic_block_def* %src1.0, i8* %225) #6, !dbg !4626
  %src402 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call401, i64 0, i32 0, !dbg !4627
  %226 = load %struct.basic_block_def*, %struct.basic_block_def** %src402, align 8, !dbg !4627
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %226, metadata !4272, metadata !DIExpression()), !dbg !4303
  %call403 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %226) #8, !dbg !4628
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call403, metadata !4273, metadata !DIExpression()), !dbg !4303
  %call404 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %226) #8, !dbg !4629
  %call405 = call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %call404, %struct.basic_block_def* %redirect_to.0) #6, !dbg !4630
  call void @delete_basic_block(%struct.basic_block_def* %call403) #6, !dbg !4631
  call fastcc void @update_forwarder_flag(%struct.basic_block_def* %226) #8, !dbg !4632
  %cmp406 = icmp eq %struct.basic_block_def* %redirect_to.0, %src2.0, !dbg !4633
  br i1 %cmp406, label %cleanup410, label %if.then408, !dbg !4635

if.then408:                                       ; preds = %while.end396
  call fastcc void @update_forwarder_flag(%struct.basic_block_def* %src2.0) #8, !dbg !4636
  br label %cleanup410, !dbg !4636

cleanup410:                                       ; preds = %land.lhs.true38, %land.lhs.true50, %land.lhs.true84, %land.lhs.true93, %while.end396, %if.end76, %if.then408, %cond.end, %cond.end70, %if.end22, %lor.lhs.false, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end22 ], [ 0, %land.lhs.true38 ], [ 0, %land.lhs.true50 ], [ 0, %cond.end70 ], [ 0, %cond.end ], [ 0, %if.end76 ], [ 0, %land.lhs.true84 ], [ 0, %land.lhs.true93 ], [ 1, %if.then408 ], [ 1, %while.end396 ], !dbg !4303
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7, !dbg !4637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !4637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !4637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4637
  ret i8 %retval.0, !dbg !4637
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @outgoing_edges_match(i32 %mode, %struct.basic_block_def* %bb1, %struct.basic_block_def* %bb2) unnamed_addr #4 !dbg !4638 {
entry:
  %e1 = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %label1 = alloca %struct.rtx_def*, align 8
  %label2 = alloca %struct.rtx_def*, align 8
  %table1 = alloca %struct.rtx_def*, align 8
  %table2 = alloca %struct.rtx_def*, align 8
  %rr = alloca %struct.replace_label_data, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp759 = alloca %struct.edge_iterator, align 8
  %e2766 = alloca %struct.edge_def*, align 8
  %ei767 = alloca %struct.edge_iterator, align 8
  %tmp785 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %mode, metadata !4642, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb1, metadata !4643, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb2, metadata !4644, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 0, metadata !4645, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 0, metadata !4646, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !4647, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !4648, metadata !DIExpression()), !dbg !4706
  %0 = bitcast %struct.edge_def** %e1 to i8*, !dbg !4707
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4707
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4708
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !4708
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb1) #8, !dbg !4709
  %tobool = icmp eq i8 %call, 0, !dbg !4709
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4711

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb1) #8, !dbg !4712
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 7, !dbg !4713
  %2 = load i32, i32* %flags, align 8, !dbg !4713
  %and = and i32 %2, 30, !dbg !4714
  %cmp = icmp eq i32 %and, 0, !dbg !4715
  br i1 %cmp, label %land.lhs.true3, label %if.end, !dbg !4716

land.lhs.true3:                                   ; preds = %land.lhs.true
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 7, !dbg !4717
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4717
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4717
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !4717
  %4 = bitcast %struct.rtx_def** %end_ to i32**, !dbg !4717
  %5 = load i32*, i32** %4, align 8, !dbg !4717
  %bf.load = load i32, i32* %5, align 8, !dbg !4717
  %bf.clear = and i32 %bf.load, 65535, !dbg !4717
  %cmp4 = icmp eq i32 %bf.clear, 9, !dbg !4717
  br i1 %cmp4, label %lor.lhs.false, label %if.then, !dbg !4718

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %6 = bitcast i32* %5 to %struct.rtx_def*, !dbg !4718
  %call9 = tail call i32 @simplejump_p(%struct.rtx_def* %6) #6, !dbg !4719
  %tobool10 = icmp eq i32 %call9, 0, !dbg !4719
  br i1 %tobool10, label %if.end, label %if.then, !dbg !4720

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true3
  %call11 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb2) #8, !dbg !4721
  %tobool13 = icmp eq i8 %call11, 0, !dbg !4721
  br i1 %tobool13, label %land.end, label %land.lhs.true14, !dbg !4722

land.lhs.true14:                                  ; preds = %if.then
  %call15 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb2) #8, !dbg !4723
  %flags16 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 7, !dbg !4724
  %7 = load i32, i32* %flags16, align 8, !dbg !4724
  %and17 = and i32 %7, 30, !dbg !4725
  %cmp18 = icmp eq i32 %and17, 0, !dbg !4726
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !4727

land.rhs:                                         ; preds = %land.lhs.true14
  %il20 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 7, !dbg !4728
  %rtl21 = bitcast %union.basic_block_il_dependent* %il20 to %struct.rtl_bb_info**, !dbg !4728
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl21, align 8, !dbg !4728
  %end_22 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 1, !dbg !4728
  %9 = bitcast %struct.rtx_def** %end_22 to i32**, !dbg !4728
  %10 = load i32*, i32** %9, align 8, !dbg !4728
  %bf.load23 = load i32, i32* %10, align 8, !dbg !4728
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4728
  %cmp25 = icmp eq i32 %bf.clear24, 9, !dbg !4728
  br i1 %cmp25, label %lor.rhs, label %land.end, !dbg !4729

lor.rhs:                                          ; preds = %land.rhs
  %11 = bitcast i32* %10 to %struct.rtx_def*, !dbg !4729
  %call30 = tail call i32 @simplejump_p(%struct.rtx_def* %11) #6, !dbg !4730
  %tobool31 = icmp ne i32 %call30, 0, !dbg !4729
  %phitmp13 = zext i1 %tobool31 to i8, !dbg !4729
  br label %land.end, !dbg !4729

land.end:                                         ; preds = %if.then, %land.rhs, %lor.rhs, %land.lhs.true14
  %12 = phi i8 [ 0, %land.lhs.true14 ], [ 0, %if.then ], [ 1, %land.rhs ], [ %phitmp13, %lor.rhs ]
  br label %cleanup828, !dbg !4731

if.end:                                           ; preds = %lor.lhs.false, %entry, %land.lhs.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 1, !dbg !4732
  %13 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4732
  %tobool33 = icmp eq %struct.VEC_edge_gc* %13, null, !dbg !4732
  br i1 %tobool33, label %cond.end, label %cond.true, !dbg !4732

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %13, i64 0, i32 0, !dbg !4732
  br label %cond.end, !dbg !4732

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !4732
  %call35 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4732
  %cmp36 = icmp eq i32 %call35, 2, !dbg !4733
  br i1 %cmp36, label %land.lhs.true38, label %cond.end.if.end441_crit_edge, !dbg !4734

cond.end.if.end441_crit_edge:                     ; preds = %cond.end
  br label %if.end441, !dbg !4734

land.lhs.true38:                                  ; preds = %cond.end
  %il39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 7, !dbg !4735
  %rtl40 = bitcast %union.basic_block_il_dependent* %il39 to %struct.rtl_bb_info**, !dbg !4735
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl40, align 8, !dbg !4735
  %end_41 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 1, !dbg !4735
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_41, align 8, !dbg !4735
  %call42 = tail call i32 @any_condjump_p(%struct.rtx_def* %15) #6, !dbg !4736
  %tobool43 = icmp eq i32 %call42, 0, !dbg !4736
  br i1 %tobool43, label %if.end441, label %land.lhs.true44, !dbg !4737

land.lhs.true44:                                  ; preds = %land.lhs.true38
  %16 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl40, align 8, !dbg !4738
  %end_47 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %16, i64 0, i32 1, !dbg !4738
  %17 = load %struct.rtx_def*, %struct.rtx_def** %end_47, align 8, !dbg !4738
  %call48 = tail call i32 @onlyjump_p(%struct.rtx_def* %17) #6, !dbg !4739
  %tobool49 = icmp eq i32 %call48, 0, !dbg !4739
  br i1 %tobool49, label %if.end441, label %if.then50, !dbg !4740

if.then50:                                        ; preds = %land.lhs.true44
  %succs51 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 1, !dbg !4741
  %18 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs51, align 8, !dbg !4741
  %tobool52 = icmp eq %struct.VEC_edge_gc* %18, null, !dbg !4741
  br i1 %tobool52, label %cond.end57, label %cond.true53, !dbg !4741

cond.true53:                                      ; preds = %if.then50
  %base55 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %18, i64 0, i32 0, !dbg !4741
  br label %cond.end57, !dbg !4741

cond.end57:                                       ; preds = %if.then50, %cond.true53
  %cond58 = phi %struct.VEC_edge_base* [ %base55, %cond.true53 ], [ null, %if.then50 ], !dbg !4741
  %call59 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond58) #8, !dbg !4741
  %cmp60 = icmp eq i32 %call59, 2, !dbg !4743
  br i1 %cmp60, label %lor.lhs.false62, label %cleanup828, !dbg !4744

lor.lhs.false62:                                  ; preds = %cond.end57
  %il63 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 7, !dbg !4745
  %rtl64 = bitcast %union.basic_block_il_dependent* %il63 to %struct.rtl_bb_info**, !dbg !4745
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl64, align 8, !dbg !4745
  %end_65 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 1, !dbg !4745
  %20 = load %struct.rtx_def*, %struct.rtx_def** %end_65, align 8, !dbg !4745
  %call66 = tail call i32 @any_condjump_p(%struct.rtx_def* %20) #6, !dbg !4746
  %tobool67 = icmp eq i32 %call66, 0, !dbg !4746
  br i1 %tobool67, label %cleanup828, label %lor.lhs.false68, !dbg !4747

lor.lhs.false68:                                  ; preds = %lor.lhs.false62
  %21 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl64, align 8, !dbg !4748
  %end_71 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i64 0, i32 1, !dbg !4748
  %22 = load %struct.rtx_def*, %struct.rtx_def** %end_71, align 8, !dbg !4748
  %call72 = tail call i32 @onlyjump_p(%struct.rtx_def* %22) #6, !dbg !4749
  %tobool73 = icmp eq i32 %call72, 0, !dbg !4749
  br i1 %tobool73, label %cleanup828, label %if.end75, !dbg !4750

if.end75:                                         ; preds = %lor.lhs.false68
  %23 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4751
  %tobool77 = icmp eq %struct.VEC_edge_gc* %23, null, !dbg !4751
  br i1 %tobool77, label %cond.end82, label %cond.true78, !dbg !4751

cond.true78:                                      ; preds = %if.end75
  %base80 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %23, i64 0, i32 0, !dbg !4751
  br label %cond.end82, !dbg !4751

cond.end82:                                       ; preds = %if.end75, %cond.true78
  %cond83 = phi %struct.VEC_edge_base* [ %base80, %cond.true78 ], [ null, %if.end75 ], !dbg !4751
  %call84 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond83, i32 0) #8, !dbg !4751
  %flags85 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call84, i64 0, i32 7, !dbg !4751
  %24 = load i32, i32* %flags85, align 8, !dbg !4751
  %and86 = and i32 %24, 1, !dbg !4751
  %tobool87 = icmp eq i32 %and86, 0, !dbg !4751
  %25 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4751
  %tobool90 = icmp ne %struct.VEC_edge_gc* %25, null, !dbg !4751
  br i1 %tobool87, label %cond.false98, label %cond.true88, !dbg !4751

cond.true88:                                      ; preds = %cond.end82
  br i1 %tobool90, label %cond.true91, label %cond.end95, !dbg !4751

cond.true91:                                      ; preds = %cond.true88
  %base93 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %25, i64 0, i32 0, !dbg !4751
  br label %cond.end95, !dbg !4751

cond.end95:                                       ; preds = %cond.true88, %cond.true91
  %cond96 = phi %struct.VEC_edge_base* [ %base93, %cond.true91 ], [ null, %cond.true88 ], !dbg !4751
  %call97 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond96, i32 1) #8, !dbg !4751
  br label %cond.end108, !dbg !4751

cond.false98:                                     ; preds = %cond.end82
  br i1 %tobool90, label %cond.true101, label %cond.end105, !dbg !4751

cond.true101:                                     ; preds = %cond.false98
  %base103 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %25, i64 0, i32 0, !dbg !4751
  br label %cond.end105, !dbg !4751

cond.end105:                                      ; preds = %cond.false98, %cond.true101
  %cond106 = phi %struct.VEC_edge_base* [ %base103, %cond.true101 ], [ null, %cond.false98 ], !dbg !4751
  %call107 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond106, i32 0) #8, !dbg !4751
  br label %cond.end108, !dbg !4751

cond.end108:                                      ; preds = %cond.end105, %cond.end95
  %cond109 = phi %struct.edge_def* [ %call97, %cond.end95 ], [ %call107, %cond.end105 ], !dbg !4751
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond109, metadata !4652, metadata !DIExpression()), !dbg !4752
  %26 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs51, align 8, !dbg !4753
  %tobool111 = icmp eq %struct.VEC_edge_gc* %26, null, !dbg !4753
  br i1 %tobool111, label %cond.end116, label %cond.true112, !dbg !4753

cond.true112:                                     ; preds = %cond.end108
  %base114 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %26, i64 0, i32 0, !dbg !4753
  br label %cond.end116, !dbg !4753

cond.end116:                                      ; preds = %cond.end108, %cond.true112
  %cond117 = phi %struct.VEC_edge_base* [ %base114, %cond.true112 ], [ null, %cond.end108 ], !dbg !4753
  %call118 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond117, i32 0) #8, !dbg !4753
  %flags119 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call118, i64 0, i32 7, !dbg !4753
  %27 = load i32, i32* %flags119, align 8, !dbg !4753
  %and120 = and i32 %27, 1, !dbg !4753
  %tobool121 = icmp eq i32 %and120, 0, !dbg !4753
  %28 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs51, align 8, !dbg !4753
  %tobool124 = icmp ne %struct.VEC_edge_gc* %28, null, !dbg !4753
  br i1 %tobool121, label %cond.false132, label %cond.true122, !dbg !4753

cond.true122:                                     ; preds = %cond.end116
  br i1 %tobool124, label %cond.true125, label %cond.end129, !dbg !4753

cond.true125:                                     ; preds = %cond.true122
  %base127 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %28, i64 0, i32 0, !dbg !4753
  br label %cond.end129, !dbg !4753

cond.end129:                                      ; preds = %cond.true122, %cond.true125
  %cond130 = phi %struct.VEC_edge_base* [ %base127, %cond.true125 ], [ null, %cond.true122 ], !dbg !4753
  %call131 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond130, i32 1) #8, !dbg !4753
  br label %cond.end142, !dbg !4753

cond.false132:                                    ; preds = %cond.end116
  br i1 %tobool124, label %cond.true135, label %cond.end139, !dbg !4753

cond.true135:                                     ; preds = %cond.false132
  %base137 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %28, i64 0, i32 0, !dbg !4753
  br label %cond.end139, !dbg !4753

cond.end139:                                      ; preds = %cond.false132, %cond.true135
  %cond140 = phi %struct.VEC_edge_base* [ %base137, %cond.true135 ], [ null, %cond.false132 ], !dbg !4753
  %call141 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond140, i32 0) #8, !dbg !4753
  br label %cond.end142, !dbg !4753

cond.end142:                                      ; preds = %cond.end139, %cond.end129
  %cond143 = phi %struct.edge_def* [ %call131, %cond.end129 ], [ %call141, %cond.end139 ], !dbg !4753
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond143, metadata !4656, metadata !DIExpression()), !dbg !4752
  %29 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4754
  %tobool145 = icmp eq %struct.VEC_edge_gc* %29, null, !dbg !4754
  br i1 %tobool145, label %cond.end150, label %cond.true146, !dbg !4754

cond.true146:                                     ; preds = %cond.end142
  %base148 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %29, i64 0, i32 0, !dbg !4754
  br label %cond.end150, !dbg !4754

cond.end150:                                      ; preds = %cond.end142, %cond.true146
  %cond151 = phi %struct.VEC_edge_base* [ %base148, %cond.true146 ], [ null, %cond.end142 ], !dbg !4754
  %call152 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond151, i32 0) #8, !dbg !4754
  %flags153 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call152, i64 0, i32 7, !dbg !4754
  %30 = load i32, i32* %flags153, align 8, !dbg !4754
  %and154 = and i32 %30, 1, !dbg !4754
  %tobool155 = icmp eq i32 %and154, 0, !dbg !4754
  %31 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4754
  %tobool158 = icmp ne %struct.VEC_edge_gc* %31, null, !dbg !4754
  br i1 %tobool155, label %cond.false166, label %cond.true156, !dbg !4754

cond.true156:                                     ; preds = %cond.end150
  br i1 %tobool158, label %cond.true159, label %cond.end163, !dbg !4754

cond.true159:                                     ; preds = %cond.true156
  %base161 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %31, i64 0, i32 0, !dbg !4754
  br label %cond.end163, !dbg !4754

cond.end163:                                      ; preds = %cond.true156, %cond.true159
  %cond164 = phi %struct.VEC_edge_base* [ %base161, %cond.true159 ], [ null, %cond.true156 ], !dbg !4754
  %call165 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond164, i32 0) #8, !dbg !4754
  br label %cond.end176, !dbg !4754

cond.false166:                                    ; preds = %cond.end150
  br i1 %tobool158, label %cond.true169, label %cond.end173, !dbg !4754

cond.true169:                                     ; preds = %cond.false166
  %base171 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %31, i64 0, i32 0, !dbg !4754
  br label %cond.end173, !dbg !4754

cond.end173:                                      ; preds = %cond.false166, %cond.true169
  %cond174 = phi %struct.VEC_edge_base* [ %base171, %cond.true169 ], [ null, %cond.false166 ], !dbg !4754
  %call175 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond174, i32 1) #8, !dbg !4754
  br label %cond.end176, !dbg !4754

cond.end176:                                      ; preds = %cond.end173, %cond.end163
  %cond177 = phi %struct.edge_def* [ %call165, %cond.end163 ], [ %call175, %cond.end173 ], !dbg !4754
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond177, metadata !4655, metadata !DIExpression()), !dbg !4752
  %32 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs51, align 8, !dbg !4755
  %tobool179 = icmp eq %struct.VEC_edge_gc* %32, null, !dbg !4755
  br i1 %tobool179, label %cond.end184, label %cond.true180, !dbg !4755

cond.true180:                                     ; preds = %cond.end176
  %base182 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %32, i64 0, i32 0, !dbg !4755
  br label %cond.end184, !dbg !4755

cond.end184:                                      ; preds = %cond.end176, %cond.true180
  %cond185 = phi %struct.VEC_edge_base* [ %base182, %cond.true180 ], [ null, %cond.end176 ], !dbg !4755
  %call186 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond185, i32 0) #8, !dbg !4755
  %flags187 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call186, i64 0, i32 7, !dbg !4755
  %33 = load i32, i32* %flags187, align 8, !dbg !4755
  %and188 = and i32 %33, 1, !dbg !4755
  %tobool189 = icmp eq i32 %and188, 0, !dbg !4755
  %34 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs51, align 8, !dbg !4755
  %tobool192 = icmp ne %struct.VEC_edge_gc* %34, null, !dbg !4755
  br i1 %tobool189, label %cond.false200, label %cond.true190, !dbg !4755

cond.true190:                                     ; preds = %cond.end184
  br i1 %tobool192, label %cond.true193, label %cond.end197, !dbg !4755

cond.true193:                                     ; preds = %cond.true190
  %base195 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %34, i64 0, i32 0, !dbg !4755
  br label %cond.end197, !dbg !4755

cond.end197:                                      ; preds = %cond.true190, %cond.true193
  %cond198 = phi %struct.VEC_edge_base* [ %base195, %cond.true193 ], [ null, %cond.true190 ], !dbg !4755
  %call199 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond198, i32 0) #8, !dbg !4755
  br label %cond.end210, !dbg !4755

cond.false200:                                    ; preds = %cond.end184
  br i1 %tobool192, label %cond.true203, label %cond.end207, !dbg !4755

cond.true203:                                     ; preds = %cond.false200
  %base205 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %34, i64 0, i32 0, !dbg !4755
  br label %cond.end207, !dbg !4755

cond.end207:                                      ; preds = %cond.false200, %cond.true203
  %cond208 = phi %struct.VEC_edge_base* [ %base205, %cond.true203 ], [ null, %cond.false200 ], !dbg !4755
  %call209 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond208, i32 1) #8, !dbg !4755
  br label %cond.end210, !dbg !4755

cond.end210:                                      ; preds = %cond.end207, %cond.end197
  %cond211 = phi %struct.edge_def* [ %call199, %cond.end197 ], [ %call209, %cond.end207 ], !dbg !4755
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond211, metadata !4657, metadata !DIExpression()), !dbg !4752
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond177, i64 0, i32 1, !dbg !4756
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4756
  %flags212 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i64 0, i32 13, !dbg !4756
  %36 = load i32, i32* %flags212, align 8, !dbg !4756
  %and213 = and i32 %36, 1024, !dbg !4756
  %tobool214 = icmp eq i32 %and213, 0, !dbg !4756
  br i1 %tobool214, label %if.end218, label %if.then215, !dbg !4758

if.then215:                                       ; preds = %cond.end210
  %call217 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %35) #8, !dbg !4759
  call void @llvm.dbg.value(metadata %struct.edge_def* %call217, metadata !4655, metadata !DIExpression()), !dbg !4752
  br label %if.end218, !dbg !4760

if.end218:                                        ; preds = %cond.end210, %if.then215
  %f1.0 = phi %struct.edge_def* [ %call217, %if.then215 ], [ %cond177, %cond.end210 ], !dbg !4752
  call void @llvm.dbg.value(metadata %struct.edge_def* %f1.0, metadata !4655, metadata !DIExpression()), !dbg !4752
  %dest219 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond211, i64 0, i32 1, !dbg !4761
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %dest219, align 8, !dbg !4761
  %flags220 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i64 0, i32 13, !dbg !4761
  %38 = load i32, i32* %flags220, align 8, !dbg !4761
  %and221 = and i32 %38, 1024, !dbg !4761
  %tobool222 = icmp eq i32 %and221, 0, !dbg !4761
  br i1 %tobool222, label %if.end226, label %if.then223, !dbg !4763

if.then223:                                       ; preds = %if.end218
  %call225 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %37) #8, !dbg !4764
  call void @llvm.dbg.value(metadata %struct.edge_def* %call225, metadata !4657, metadata !DIExpression()), !dbg !4752
  br label %if.end226, !dbg !4765

if.end226:                                        ; preds = %if.end218, %if.then223
  %f2.0 = phi %struct.edge_def* [ %call225, %if.then223 ], [ %cond211, %if.end218 ], !dbg !4752
  call void @llvm.dbg.value(metadata %struct.edge_def* %f2.0, metadata !4657, metadata !DIExpression()), !dbg !4752
  %dest227 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %f1.0, i64 0, i32 1, !dbg !4766
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest227, align 8, !dbg !4766
  %flags228 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 13, !dbg !4766
  %40 = load i32, i32* %flags228, align 8, !dbg !4766
  %and229 = and i32 %40, 1024, !dbg !4766
  %tobool230 = icmp eq i32 %and229, 0, !dbg !4766
  br i1 %tobool230, label %lor.lhs.false231, label %cleanup828, !dbg !4768

lor.lhs.false231:                                 ; preds = %if.end226
  %dest232 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %f2.0, i64 0, i32 1, !dbg !4769
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %dest232, align 8, !dbg !4769
  %flags233 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i64 0, i32 13, !dbg !4769
  %42 = load i32, i32* %flags233, align 8, !dbg !4769
  %and234 = and i32 %42, 1024, !dbg !4769
  %tobool235 = icmp eq i32 %and234, 0, !dbg !4769
  br i1 %tobool235, label %lor.lhs.false236, label %cleanup828, !dbg !4770

lor.lhs.false236:                                 ; preds = %lor.lhs.false231
  %dest237 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond109, i64 0, i32 1, !dbg !4771
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %dest237, align 8, !dbg !4771
  %flags238 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i64 0, i32 13, !dbg !4771
  %44 = load i32, i32* %flags238, align 8, !dbg !4771
  %and239 = and i32 %44, 1024, !dbg !4771
  %tobool240 = icmp eq i32 %and239, 0, !dbg !4771
  br i1 %tobool240, label %lor.lhs.false241, label %cleanup828, !dbg !4772

lor.lhs.false241:                                 ; preds = %lor.lhs.false236
  %dest242 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond143, i64 0, i32 1, !dbg !4773
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %dest242, align 8, !dbg !4773
  %flags243 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i64 0, i32 13, !dbg !4773
  %46 = load i32, i32* %flags243, align 8, !dbg !4773
  %and244 = and i32 %46, 1024, !dbg !4773
  %tobool245 = icmp eq i32 %and244, 0, !dbg !4773
  br i1 %tobool245, label %if.end247, label %cleanup828, !dbg !4774

if.end247:                                        ; preds = %lor.lhs.false241
  %cmp250 = icmp eq %struct.basic_block_def* %39, %41, !dbg !4775
  br i1 %cmp250, label %land.lhs.true252, label %if.else, !dbg !4777

land.lhs.true252:                                 ; preds = %if.end247
  %cmp255 = icmp eq %struct.basic_block_def* %43, %45, !dbg !4778
  br i1 %cmp255, label %if.end270, label %if.else, !dbg !4779

if.else:                                          ; preds = %land.lhs.true252, %if.end247
  %cmp260 = icmp eq %struct.basic_block_def* %39, %45, !dbg !4780
  br i1 %cmp260, label %land.lhs.true262, label %cleanup828, !dbg !4782

land.lhs.true262:                                 ; preds = %if.else
  %cmp265 = icmp eq %struct.basic_block_def* %43, %41, !dbg !4783
  br i1 %cmp265, label %if.end270, label %cleanup828, !dbg !4784

if.end270:                                        ; preds = %land.lhs.true262, %land.lhs.true252
  %reverse.0 = phi i8 [ 0, %land.lhs.true252 ], [ 1, %land.lhs.true262 ], !dbg !4785
  call void @llvm.dbg.value(metadata i8 %reverse.0, metadata !4658, metadata !DIExpression()), !dbg !4752
  %47 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl40, align 8, !dbg !4786
  %end_273 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %47, i64 0, i32 1, !dbg !4786
  %48 = load %struct.rtx_def*, %struct.rtx_def** %end_273, align 8, !dbg !4786
  %call274 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %48) #6, !dbg !4787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call274, metadata !4660, metadata !DIExpression()), !dbg !4752
  %49 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl64, align 8, !dbg !4788
  %end_277 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %49, i64 0, i32 1, !dbg !4788
  %50 = load %struct.rtx_def*, %struct.rtx_def** %end_277, align 8, !dbg !4788
  %call278 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %50) #6, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call278, metadata !4661, metadata !DIExpression()), !dbg !4752
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call274, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4790
  %rt_rtx = bitcast %union.rtunion_def* %51 to %struct.rtx_def**, !dbg !4790
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4790
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4790
  %rt_rtx282 = bitcast %union.rtunion_def* %53 to %struct.rtx_def**, !dbg !4790
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx282, align 8, !dbg !4790
  %55 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !4792
  %cmp283 = icmp eq %struct.rtx_def* %54, %55, !dbg !4793
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call278, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4794
  %rt_rtx288 = bitcast %union.rtunion_def* %56 to %struct.rtx_def**, !dbg !4794
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx288, align 8, !dbg !4794
  %58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4794
  %rt_rtx292 = bitcast %union.rtunion_def* %58 to %struct.rtx_def**, !dbg !4794
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx292, align 8, !dbg !4794
  %cmp293 = icmp eq %struct.rtx_def* %59, %55, !dbg !4795
  %cmp295 = xor i1 %cmp283, %cmp293, !dbg !4796
  br i1 %cmp295, label %if.then297, label %if.end300, !dbg !4797

if.then297:                                       ; preds = %if.end270
  %60 = xor i8 %reverse.0, 1, !dbg !4798
  call void @llvm.dbg.value(metadata i8 %60, metadata !4658, metadata !DIExpression()), !dbg !4752
  br label %if.end300, !dbg !4799

if.end300:                                        ; preds = %if.then297, %if.end270
  %reverse.1 = phi i8 [ %60, %if.then297 ], [ %reverse.0, %if.end270 ], !dbg !4752
  call void @llvm.dbg.value(metadata i8 %reverse.1, metadata !4658, metadata !DIExpression()), !dbg !4752
  %arrayidx307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4800
  %rt_rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**, !dbg !4800
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx308, align 8, !dbg !4800
  call void @llvm.dbg.value(metadata %struct.rtx_def* %61, metadata !4662, metadata !DIExpression()), !dbg !4752
  %arrayidx315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4801
  %rt_rtx316 = bitcast %union.rtunion_def* %arrayidx315 to %struct.rtx_def**, !dbg !4801
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx316, align 8, !dbg !4801
  call void @llvm.dbg.value(metadata %struct.rtx_def* %62, metadata !4663, metadata !DIExpression()), !dbg !4752
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 0, !dbg !4802
  %bf.load317 = load i32, i32* %63, align 8, !dbg !4802
  %bf.clear318 = and i32 %bf.load317, 65535, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %bf.clear318, metadata !4664, metadata !DIExpression()), !dbg !4752
  %tobool319 = icmp eq i8 %reverse.1, 0, !dbg !4803
  br i1 %tobool319, label %if.else325, label %if.then320, !dbg !4805

if.then320:                                       ; preds = %if.end300
  %64 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl64, align 8, !dbg !4806
  %end_323 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %64, i64 0, i32 1, !dbg !4806
  %65 = load %struct.rtx_def*, %struct.rtx_def** %end_323, align 8, !dbg !4806
  %call324 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %62, %struct.rtx_def* %65) #6, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %call324, metadata !4665, metadata !DIExpression()), !dbg !4752
  br label %if.end328, !dbg !4808

if.else325:                                       ; preds = %if.end300
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 0, !dbg !4809
  %bf.load326 = load i32, i32* %66, align 8, !dbg !4809
  %bf.clear327 = and i32 %bf.load326, 65535, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %bf.clear327, metadata !4665, metadata !DIExpression()), !dbg !4752
  br label %if.end328

if.end328:                                        ; preds = %if.else325, %if.then320
  %code2.0 = phi i32 [ %call324, %if.then320 ], [ %bf.clear327, %if.else325 ], !dbg !4810
  call void @llvm.dbg.value(metadata i32 %code2.0, metadata !4665, metadata !DIExpression()), !dbg !4752
  %cmp329 = icmp eq i32 %code2.0, 0, !dbg !4811
  br i1 %cmp329, label %cleanup828, label %if.end332, !dbg !4813

if.end332:                                        ; preds = %if.end328
  %cmp333 = icmp eq i32 %bf.clear318, %code2.0, !dbg !4814
  br i1 %cmp333, label %land.lhs.true335, label %lor.rhs357, !dbg !4815

land.lhs.true335:                                 ; preds = %if.end332
  %arrayidx338 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4816
  %rt_rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**, !dbg !4816
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !4816
  %arrayidx342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4817
  %rt_rtx343 = bitcast %union.rtunion_def* %arrayidx342 to %struct.rtx_def**, !dbg !4817
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx343, align 8, !dbg !4817
  %call344 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %67, %struct.rtx_def* %68) #6, !dbg !4818
  %tobool345 = icmp eq i32 %call344, 0, !dbg !4818
  br i1 %tobool345, label %lor.rhs357, label %land.lhs.true346, !dbg !4819

land.lhs.true346:                                 ; preds = %land.lhs.true335
  %69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4820
  %rt_rtx350 = bitcast %union.rtunion_def* %69 to %struct.rtx_def**, !dbg !4820
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx350, align 8, !dbg !4820
  %71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4821
  %rt_rtx354 = bitcast %union.rtunion_def* %71 to %struct.rtx_def**, !dbg !4821
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx354, align 8, !dbg !4821
  %call355 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %70, %struct.rtx_def* %72) #6, !dbg !4822
  %tobool356 = icmp eq i32 %call355, 0, !dbg !4822
  br i1 %tobool356, label %lor.rhs357, label %lor.end385, !dbg !4823

lor.rhs357:                                       ; preds = %land.lhs.true346, %land.lhs.true335, %if.end332
  %call358 = tail call i32 @swap_condition(i32 %code2.0) #6, !dbg !4824
  %cmp359 = icmp eq i32 %bf.clear318, %call358, !dbg !4825
  br i1 %cmp359, label %land.lhs.true361, label %lor.end385, !dbg !4826

land.lhs.true361:                                 ; preds = %lor.rhs357
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4827
  %rt_rtx365 = bitcast %union.rtunion_def* %73 to %struct.rtx_def**, !dbg !4827
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx365, align 8, !dbg !4827
  %arrayidx368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4828
  %rt_rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**, !dbg !4828
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx369, align 8, !dbg !4828
  %call370 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %74, %struct.rtx_def* %75) #6, !dbg !4829
  %tobool371 = icmp eq i32 %call370, 0, !dbg !4829
  br i1 %tobool371, label %lor.end385, label %land.rhs372, !dbg !4830

land.rhs372:                                      ; preds = %land.lhs.true361
  %arrayidx375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4831
  %rt_rtx376 = bitcast %union.rtunion_def* %arrayidx375 to %struct.rtx_def**, !dbg !4831
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx376, align 8, !dbg !4831
  %77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4832
  %rt_rtx380 = bitcast %union.rtunion_def* %77 to %struct.rtx_def**, !dbg !4832
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx380, align 8, !dbg !4832
  %call381 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %76, %struct.rtx_def* %78) #6, !dbg !4833
  %tobool382 = icmp ne i32 %call381, 0, !dbg !4830
  %phitmp = zext i1 %tobool382 to i8
  br label %lor.end385

lor.end385:                                       ; preds = %land.lhs.true346, %land.lhs.true361, %lor.rhs357, %land.rhs372
  %79 = phi i8 [ 1, %land.lhs.true346 ], [ 0, %land.lhs.true361 ], [ 0, %lor.rhs357 ], [ %phitmp, %land.rhs372 ]
  call void @llvm.dbg.value(metadata i8 %79, metadata !4659, metadata !DIExpression()), !dbg !4752
  %tobool388 = icmp eq i8 %79, 0, !dbg !4834
  br i1 %tobool388, label %if.end419, label %land.lhs.true389, !dbg !4835

land.lhs.true389:                                 ; preds = %lor.end385
  %call390 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %bb1) #6, !dbg !4836
  %tobool392 = icmp eq i8 %call390, 0, !dbg !4836
  br i1 %tobool392, label %if.end419, label %land.lhs.true393, !dbg !4837

land.lhs.true393:                                 ; preds = %land.lhs.true389
  %call394 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %bb2) #6, !dbg !4838
  %tobool396 = icmp eq i8 %call394, 0, !dbg !4838
  br i1 %tobool396, label %if.end419, label %if.then397, !dbg !4839

if.then397:                                       ; preds = %land.lhs.true393
  %80 = load %struct.basic_block_def*, %struct.basic_block_def** %dest237, align 8, !dbg !4840
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %dest242, align 8, !dbg !4842
  %cmp400 = icmp eq %struct.basic_block_def* %80, %81, !dbg !4843
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond143, i64 0, i32 8, !dbg !4844
  %82 = load i32, i32* %probability, align 4, !dbg !4844
  %sub = sub nsw i32 10000, %82, !dbg !4845
  %prob2.0 = select i1 %cmp400, i32 %82, i32 %sub, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %prob2.0, metadata !4666, metadata !DIExpression()), !dbg !4846
  %probability406 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond109, i64 0, i32 8, !dbg !4847
  %83 = load i32, i32* %probability406, align 4, !dbg !4847
  %sub407 = sub nsw i32 %83, %prob2.0, !dbg !4849
  %call408 = tail call i32 @abs(i32 %sub407) #6, !dbg !4850
  %cmp409 = icmp sgt i32 %call408, 5000, !dbg !4851
  br i1 %cmp409, label %if.then411, label %cleanup, !dbg !4852

if.then411:                                       ; preds = %if.then397
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4853
  %tobool412 = icmp eq %struct._IO_FILE* %84, null, !dbg !4853
  br i1 %tobool412, label %cleanup, label %if.then413, !dbg !4856

if.then413:                                       ; preds = %if.then411
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 9, !dbg !4857
  %85 = load i32, i32* %index, align 8, !dbg !4857
  %index414 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 9, !dbg !4858
  %86 = load i32, i32* %index414, align 8, !dbg !4858
  %87 = load i32, i32* %probability406, align 4, !dbg !4859
  %call416 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %84, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.18, i64 0, i64 0), i32 %85, i32 %86, i32 %87, i32 %prob2.0) #6, !dbg !4860
  br label %cleanup, !dbg !4860

cleanup:                                          ; preds = %if.then411, %if.then397, %if.then413
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then413 ], [ false, %if.then411 ], [ true, %if.then397 ]
  br i1 %cleanup.dest.slot.0, label %if.end419, label %cleanup828

if.end419:                                        ; preds = %land.lhs.true393, %land.lhs.true389, %lor.end385, %cleanup
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4861
  %tobool420 = icmp ne %struct._IO_FILE* %88, null, !dbg !4861
  %tobool423 = icmp ne i8 %79, 0, !dbg !4863
  %or.cond = and i1 %tobool420, %tobool423, !dbg !4864
  br i1 %or.cond, label %if.then424, label %cleanup828, !dbg !4864

if.then424:                                       ; preds = %if.end419
  %index425 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 9, !dbg !4865
  %89 = load i32, i32* %index425, align 8, !dbg !4865
  %index426 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 9, !dbg !4866
  %90 = load i32, i32* %index426, align 8, !dbg !4866
  %call427 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %88, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i32 %89, i32 %90) #6, !dbg !4867
  br label %cleanup828, !dbg !4867

if.end441:                                        ; preds = %cond.end.if.end441_crit_edge, %land.lhs.true44, %land.lhs.true38
  %91 = bitcast %struct.rtx_def** %label1 to i8*, !dbg !4868
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #7, !dbg !4868
  %92 = bitcast %struct.rtx_def** %label2 to i8*, !dbg !4868
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #7, !dbg !4868
  %93 = bitcast %struct.rtx_def** %table1 to i8*, !dbg !4869
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #7, !dbg !4869
  %94 = bitcast %struct.rtx_def** %table2 to i8*, !dbg !4869
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #7, !dbg !4869
  %il442 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 7, !dbg !4870
  %rtl443 = bitcast %union.basic_block_il_dependent* %il442 to %struct.rtl_bb_info**, !dbg !4870
  %95 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl443, align 8, !dbg !4870
  %end_444 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %95, i64 0, i32 1, !dbg !4870
  %96 = load %struct.rtx_def*, %struct.rtx_def** %end_444, align 8, !dbg !4870
  call void @llvm.dbg.value(metadata %struct.rtx_def** %label1, metadata !4669, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  call void @llvm.dbg.value(metadata %struct.rtx_def** %table1, metadata !4672, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  %call445 = call zeroext i8 @tablejump_p(%struct.rtx_def* %96, %struct.rtx_def** nonnull %label1, %struct.rtx_def** nonnull %table1) #6, !dbg !4872
  %tobool447 = icmp eq i8 %call445, 0, !dbg !4872
  br i1 %tobool447, label %cleanup605, label %land.lhs.true448, !dbg !4873

land.lhs.true448:                                 ; preds = %if.end441
  %il449 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 7, !dbg !4874
  %rtl450 = bitcast %union.basic_block_il_dependent* %il449 to %struct.rtl_bb_info**, !dbg !4874
  %97 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl450, align 8, !dbg !4874
  %end_451 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %97, i64 0, i32 1, !dbg !4874
  %98 = load %struct.rtx_def*, %struct.rtx_def** %end_451, align 8, !dbg !4874
  call void @llvm.dbg.value(metadata %struct.rtx_def** %label2, metadata !4671, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  call void @llvm.dbg.value(metadata %struct.rtx_def** %table2, metadata !4673, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  %call452 = call zeroext i8 @tablejump_p(%struct.rtx_def* %98, %struct.rtx_def** nonnull %label2, %struct.rtx_def** nonnull %table2) #6, !dbg !4875
  %tobool454 = icmp eq i8 %call452, 0, !dbg !4875
  br i1 %tobool454, label %cleanup605, label %land.lhs.true455, !dbg !4876

land.lhs.true455:                                 ; preds = %land.lhs.true448
  %99 = load %struct.rtx_def*, %struct.rtx_def** %table1, align 8, !dbg !4877
  call void @llvm.dbg.value(metadata %struct.rtx_def* %99, metadata !4672, metadata !DIExpression()), !dbg !4871
  %u456 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i64 0, i32 1, !dbg !4877
  %100 = getelementptr inbounds %union.u, %union.u* %u456, i64 1, i32 0, i32 0, i64 0, !dbg !4877
  %101 = bitcast %union.rtunion_def* %100 to i32**, !dbg !4877
  %102 = load i32*, i32** %101, align 8, !dbg !4877
  %bf.load460 = load i32, i32* %102, align 8, !dbg !4877
  %103 = load %struct.rtx_def*, %struct.rtx_def** %table2, align 8, !dbg !4878
  call void @llvm.dbg.value(metadata %struct.rtx_def* %103, metadata !4673, metadata !DIExpression()), !dbg !4871
  %u462 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i64 0, i32 1, !dbg !4878
  %104 = getelementptr inbounds %union.u, %union.u* %u462, i64 1, i32 0, i32 0, i64 0, !dbg !4878
  %105 = bitcast %union.rtunion_def* %104 to i32**, !dbg !4878
  %106 = load i32*, i32** %105, align 8, !dbg !4878
  %bf.load466 = load i32, i32* %106, align 8, !dbg !4878
  %107 = xor i32 %bf.load460, %bf.load466, !dbg !4879
  %108 = and i32 %107, 65535, !dbg !4879
  %cmp468 = icmp eq i32 %108, 0, !dbg !4879
  br i1 %cmp468, label %if.then470, label %cleanup605, !dbg !4880

if.then470:                                       ; preds = %land.lhs.true455
  %109 = load %struct.rtx_def*, %struct.rtx_def** %label1, align 8, !dbg !4881
  call void @llvm.dbg.value(metadata %struct.rtx_def* %109, metadata !4669, metadata !DIExpression()), !dbg !4871
  %110 = load %struct.rtx_def*, %struct.rtx_def** %label2, align 8, !dbg !4882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %110, metadata !4671, metadata !DIExpression()), !dbg !4871
  %cmp471 = icmp eq %struct.rtx_def* %109, %110, !dbg !4883
  br i1 %cmp471, label %if.end603, label %land.lhs.true473, !dbg !4884

land.lhs.true473:                                 ; preds = %if.then470
  call void @llvm.dbg.value(metadata %struct.rtx_def* %110, metadata !4671, metadata !DIExpression()), !dbg !4871
  %111 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl443, align 8, !dbg !4885
  %end_476 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %111, i64 0, i32 1, !dbg !4885
  %112 = load %struct.rtx_def*, %struct.rtx_def** %end_476, align 8, !dbg !4885
  %call477 = call i32 @rtx_referenced_p(%struct.rtx_def* %110, %struct.rtx_def* %112) #6, !dbg !4886
  %tobool478 = icmp eq i32 %call477, 0, !dbg !4886
  br i1 %tobool478, label %if.then479, label %if.end603, !dbg !4887

if.then479:                                       ; preds = %land.lhs.true473
  call void @llvm.dbg.value(metadata i8 0, metadata !4674, metadata !DIExpression()), !dbg !4888
  %113 = load %struct.rtx_def*, %struct.rtx_def** %table1, align 8, !dbg !4889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %113, metadata !4672, metadata !DIExpression()), !dbg !4871
  %u480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i64 0, i32 1, !dbg !4889
  %114 = getelementptr inbounds %union.u, %union.u* %u480, i64 1, i32 0, i32 0, i64 0, !dbg !4889
  %rt_rtx483 = bitcast %union.rtunion_def* %114 to %struct.rtx_def**, !dbg !4889
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx483, align 8, !dbg !4889
  call void @llvm.dbg.value(metadata %struct.rtx_def* %115, metadata !4679, metadata !DIExpression()), !dbg !4888
  %116 = load %struct.rtx_def*, %struct.rtx_def** %table2, align 8, !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %116, metadata !4673, metadata !DIExpression()), !dbg !4871
  %u484 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i64 0, i32 1, !dbg !4890
  %117 = getelementptr inbounds %union.u, %union.u* %u484, i64 1, i32 0, i32 0, i64 0, !dbg !4890
  %rt_rtx487 = bitcast %union.rtunion_def* %117 to %struct.rtx_def**, !dbg !4890
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx487, align 8, !dbg !4890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %118, metadata !4680, metadata !DIExpression()), !dbg !4888
  %119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i64 0, i32 0, !dbg !4891
  %bf.load488 = load i32, i32* %119, align 8, !dbg !4891
  %bf.clear489 = and i32 %bf.load488, 65535, !dbg !4891
  %cmp490 = icmp eq i32 %bf.clear489, 20, !dbg !4892
  br i1 %cmp490, label %land.lhs.true492, label %if.else496, !dbg !4893

land.lhs.true492:                                 ; preds = %if.then479
  %call493 = call i32 @rtx_equal_p(%struct.rtx_def* %115, %struct.rtx_def* %118) #6, !dbg !4894
  %tobool494 = icmp eq i32 %call493, 0, !dbg !4894
  br i1 %tobool494, label %land.lhs.true492.if.else496_crit_edge, label %if.end565, !dbg !4895

land.lhs.true492.if.else496_crit_edge:            ; preds = %land.lhs.true492
  %bf.load497.pre = load i32, i32* %119, align 8, !dbg !4896
  br label %if.else496, !dbg !4895

if.else496:                                       ; preds = %land.lhs.true492.if.else496_crit_edge, %if.then479
  %bf.load497 = phi i32 [ %bf.load497.pre, %land.lhs.true492.if.else496_crit_edge ], [ %bf.load488, %if.then479 ], !dbg !4896
  %bf.clear498 = and i32 %bf.load497, 65535, !dbg !4896
  %cmp499 = icmp eq i32 %bf.clear498, 21, !dbg !4897
  br i1 %cmp499, label %land.lhs.true501, label %if.end565, !dbg !4898

land.lhs.true501:                                 ; preds = %if.else496
  %120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4899
  %rt_rtvec = bitcast %union.rtunion_def* %120 to %struct.rtvec_def**, !dbg !4899
  %121 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4899
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %121, i64 0, i32 0, !dbg !4899
  %122 = load i32, i32* %num_elem, align 8, !dbg !4899
  %123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4900
  %rt_rtvec508 = bitcast %union.rtunion_def* %123 to %struct.rtvec_def**, !dbg !4900
  %124 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec508, align 8, !dbg !4900
  %num_elem509 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %124, i64 0, i32 0, !dbg !4900
  %125 = load i32, i32* %num_elem509, align 8, !dbg !4900
  %cmp510 = icmp eq i32 %122, %125, !dbg !4901
  br i1 %cmp510, label %land.lhs.true512, label %if.end565, !dbg !4902

land.lhs.true512:                                 ; preds = %land.lhs.true501
  %126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4903
  %rt_rtx516 = bitcast %union.rtunion_def* %126 to %struct.rtx_def**, !dbg !4903
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx516, align 8, !dbg !4903
  %128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4904
  %rt_rtx520 = bitcast %union.rtunion_def* %128 to %struct.rtx_def**, !dbg !4904
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx520, align 8, !dbg !4904
  %call521 = call i32 @rtx_equal_p(%struct.rtx_def* %127, %struct.rtx_def* %129) #6, !dbg !4905
  %tobool522 = icmp eq i32 %call521, 0, !dbg !4905
  br i1 %tobool522, label %if.end565, label %land.lhs.true523, !dbg !4906

land.lhs.true523:                                 ; preds = %land.lhs.true512
  %arrayidx526 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i64 0, i32 1, i32 0, i32 1, !dbg !4907
  %rt_rtx527 = bitcast %struct.object_block** %arrayidx526 to %struct.rtx_def**, !dbg !4907
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx527, align 8, !dbg !4907
  %arrayidx530 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i64 0, i32 1, i32 0, i32 1, !dbg !4908
  %rt_rtx531 = bitcast %struct.object_block** %arrayidx530 to %struct.rtx_def**, !dbg !4908
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx531, align 8, !dbg !4908
  %call532 = call i32 @rtx_equal_p(%struct.rtx_def* %130, %struct.rtx_def* %131) #6, !dbg !4909
  %tobool533 = icmp eq i32 %call532, 0, !dbg !4909
  br i1 %tobool533, label %if.end565, label %if.then534, !dbg !4910

if.then534:                                       ; preds = %land.lhs.true523
  call void @llvm.dbg.value(metadata i8 1, metadata !4674, metadata !DIExpression()), !dbg !4888
  %132 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4911
  %num_elem539 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %132, i64 0, i32 0, !dbg !4911
  %133 = load i32, i32* %num_elem539, align 8, !dbg !4911
  call void @llvm.dbg.value(metadata i32 %133, metadata !4681, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4913
  %134 = sext i32 %133 to i64, !dbg !4914
  br label %for.cond, !dbg !4914

for.cond:                                         ; preds = %for.body, %if.then534
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %134, %if.then534 ], !dbg !4915
  %identical.0 = phi i8 [ %spec.select, %for.body ], [ 1, %if.then534 ], !dbg !4915
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4681, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata i8 %identical.0, metadata !4674, metadata !DIExpression()), !dbg !4888
  %cmp541 = icmp sgt i64 %indvars.iv, 0, !dbg !4917
  %tobool545 = icmp ne i8 %identical.0, 0, !dbg !4919
  %135 = and i1 %cmp541, %tobool545, !dbg !4919
  br i1 %135, label %for.body, label %if.end565.loopexit, !dbg !4920

for.body:                                         ; preds = %for.cond
  %136 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4921
  %arrayidx552 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %136, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4921
  %137 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx552, align 8, !dbg !4921
  %138 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec508, align 8, !dbg !4923
  %arrayidx559 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %138, i64 0, i32 1, i64 %indvars.iv.next, !dbg !4923
  %139 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx559, align 8, !dbg !4923
  %call560 = call i32 @rtx_equal_p(%struct.rtx_def* %137, %struct.rtx_def* %139) #6, !dbg !4924
  %tobool561 = icmp eq i32 %call560, 0, !dbg !4924
  %spec.select = select i1 %tobool561, i8 0, i8 %identical.0, !dbg !4925
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !4674, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i32 undef, metadata !4681, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4913
  br label %for.cond, !dbg !4926, !llvm.loop !4927

if.end565.loopexit:                               ; preds = %for.cond
  %identical.0.lcssa = phi i8 [ %identical.0, %for.cond ], !dbg !4915
  call void @llvm.dbg.value(metadata i8 %identical.0.lcssa, metadata !4674, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 %identical.0.lcssa, metadata !4674, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 %identical.0.lcssa, metadata !4674, metadata !DIExpression()), !dbg !4888
  br label %if.end565, !dbg !4929

if.end565:                                        ; preds = %if.end565.loopexit, %land.lhs.true492, %land.lhs.true523, %land.lhs.true512, %if.else496, %land.lhs.true501
  %identical.3 = phi i8 [ 1, %land.lhs.true492 ], [ 0, %land.lhs.true523 ], [ 0, %land.lhs.true512 ], [ 0, %land.lhs.true501 ], [ 0, %if.else496 ], [ %identical.0.lcssa, %if.end565.loopexit ], !dbg !4930
  call void @llvm.dbg.value(metadata i8 %identical.3, metadata !4674, metadata !DIExpression()), !dbg !4888
  %tobool566 = icmp eq i8 %identical.3, 0, !dbg !4929
  br i1 %tobool566, label %cleanup598, label %if.then567, !dbg !4931

if.then567:                                       ; preds = %if.end565
  %140 = bitcast %struct.replace_label_data* %rr to i8*, !dbg !4932
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #7, !dbg !4932
  %141 = bitcast %struct.rtx_def** %label1 to i64*, !dbg !4933
  %142 = load i64, i64* %141, align 8, !dbg !4933
  %143 = bitcast %struct.replace_label_data* %rr to i64*, !dbg !4934
  store i64 %142, i64* %143, align 8, !dbg !4934
  %144 = bitcast %struct.rtx_def** %label2 to i64*, !dbg !4935
  %145 = load i64, i64* %144, align 8, !dbg !4935
  %r2 = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %rr, i64 0, i32 1, !dbg !4936
  %146 = bitcast %struct.rtx_def** %r2 to i64*, !dbg !4937
  store i64 %145, i64* %146, align 8, !dbg !4937
  %update_label_nuses = getelementptr inbounds %struct.replace_label_data, %struct.replace_label_data* %rr, i64 0, i32 2, !dbg !4938
  store i8 0, i8* %update_label_nuses, align 8, !dbg !4939
  %147 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl443, align 8, !dbg !4940
  %end_571 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %147, i64 0, i32 1, !dbg !4940
  %call572 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %end_571, i32 (%struct.rtx_def**, i8*)* nonnull @replace_label, i8* nonnull %140) #6, !dbg !4941
  %148 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl443, align 8, !dbg !4942
  %end_575 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %148, i64 0, i32 1, !dbg !4942
  %149 = load %struct.rtx_def*, %struct.rtx_def** %end_575, align 8, !dbg !4942
  %150 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl450, align 8, !dbg !4943
  %end_578 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %150, i64 0, i32 1, !dbg !4943
  %151 = load %struct.rtx_def*, %struct.rtx_def** %end_578, align 8, !dbg !4943
  %call579 = call fastcc zeroext i8 @old_insns_match_p(i32 %mode, %struct.rtx_def* %149, %struct.rtx_def* %151) #8, !dbg !4944
  call void @llvm.dbg.value(metadata i8 %call579, metadata !4688, metadata !DIExpression()), !dbg !4945
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4946
  %tobool580 = icmp ne %struct._IO_FILE* %152, null, !dbg !4946
  %tobool583 = icmp ne i8 %call579, 0, !dbg !4948
  %or.cond7 = and i1 %tobool580, %tobool583, !dbg !4949
  br i1 %or.cond7, label %if.then584, label %if.end588, !dbg !4949

if.then584:                                       ; preds = %if.then567
  %index585 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 9, !dbg !4950
  %153 = load i32, i32* %index585, align 8, !dbg !4950
  %index586 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 9, !dbg !4951
  %154 = load i32, i32* %index586, align 8, !dbg !4951
  %call587 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %152, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0), i32 %153, i32 %154) #6, !dbg !4952
  br label %if.end588, !dbg !4952

if.end588:                                        ; preds = %if.then584, %if.then567
  %155 = load i64, i64* %144, align 8, !dbg !4953
  store i64 %155, i64* %143, align 8, !dbg !4954
  %156 = load i64, i64* %141, align 8, !dbg !4955
  store i64 %156, i64* %146, align 8, !dbg !4956
  %157 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl443, align 8, !dbg !4957
  %end_593 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %157, i64 0, i32 1, !dbg !4957
  %call594 = call i32 @for_each_rtx(%struct.rtx_def** nonnull %end_593, i32 (%struct.rtx_def**, i8*)* nonnull @replace_label, i8* nonnull %140) #6, !dbg !4958
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #7, !dbg !4959
  br label %cleanup598

cleanup598:                                       ; preds = %if.end565, %if.end588
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.end588 ], [ 0, %if.end565 ]
  %retval.2 = phi i8 [ %call579, %if.end588 ], [ undef, %if.end565 ]
  %cond5 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond5, label %if.end603, label %cleanup605

if.end603:                                        ; preds = %land.lhs.true473, %if.then470, %cleanup598
  br label %cleanup605, !dbg !4960

cleanup605:                                       ; preds = %land.lhs.true448, %if.end441, %land.lhs.true455, %cleanup598, %if.end603
  %cleanup.dest.slot.2 = phi i32 [ 1, %if.end603 ], [ %cleanup.dest.slot.1, %cleanup598 ], [ 0, %land.lhs.true455 ], [ 0, %land.lhs.true448 ], [ 0, %if.end441 ]
  %retval.3 = phi i8 [ 0, %if.end603 ], [ %retval.2, %cleanup598 ], [ undef, %land.lhs.true455 ], [ undef, %land.lhs.true448 ], [ undef, %if.end441 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #7, !dbg !4961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #7, !dbg !4961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #7, !dbg !4961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #7, !dbg !4961
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %cleanup.cont610, label %cleanup828

cleanup.cont610:                                  ; preds = %cleanup605
  %158 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl443, align 8, !dbg !4962
  %end_613 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %158, i64 0, i32 1, !dbg !4962
  %159 = load %struct.rtx_def*, %struct.rtx_def** %end_613, align 8, !dbg !4962
  %il614 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 7, !dbg !4964
  %rtl615 = bitcast %union.basic_block_il_dependent* %il614 to %struct.rtl_bb_info**, !dbg !4964
  %160 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl615, align 8, !dbg !4964
  %end_616 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %160, i64 0, i32 1, !dbg !4964
  %161 = load %struct.rtx_def*, %struct.rtx_def** %end_616, align 8, !dbg !4964
  %call617 = call fastcc zeroext i8 @old_insns_match_p(i32 %mode, %struct.rtx_def* %159, %struct.rtx_def* %161) #8, !dbg !4965
  %tobool618 = icmp eq i8 %call617, 0, !dbg !4965
  br i1 %tobool618, label %cleanup828, label %if.end620, !dbg !4966

if.end620:                                        ; preds = %cleanup.cont610
  %162 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4967
  %tobool622 = icmp eq %struct.VEC_edge_gc* %162, null, !dbg !4967
  br i1 %tobool622, label %cond.end627, label %cond.true623, !dbg !4967

cond.true623:                                     ; preds = %if.end620
  %base625 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %162, i64 0, i32 0, !dbg !4967
  br label %cond.end627, !dbg !4967

cond.end627:                                      ; preds = %if.end620, %cond.true623
  %cond628 = phi %struct.VEC_edge_base* [ %base625, %cond.true623 ], [ null, %if.end620 ], !dbg !4967
  %call629 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond628) #8, !dbg !4967
  %succs630 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 1, !dbg !4969
  %163 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs630, align 8, !dbg !4969
  %tobool631 = icmp eq %struct.VEC_edge_gc* %163, null, !dbg !4969
  br i1 %tobool631, label %cond.end636, label %cond.true632, !dbg !4969

cond.true632:                                     ; preds = %cond.end627
  %base634 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %163, i64 0, i32 0, !dbg !4969
  br label %cond.end636, !dbg !4969

cond.end636:                                      ; preds = %cond.end627, %cond.true632
  %cond637 = phi %struct.VEC_edge_base* [ %base634, %cond.true632 ], [ null, %cond.end627 ], !dbg !4969
  %call638 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond637) #8, !dbg !4969
  %cmp639 = icmp eq i32 %call629, %call638, !dbg !4970
  br i1 %cmp639, label %if.end642, label %cleanup828, !dbg !4971

if.end642:                                        ; preds = %cond.end636
  %164 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4972
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #7, !dbg !4972
  %call644 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4972
  %165 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4972
  %166 = extractvalue { i32, %struct.VEC_edge_gc** } %call644, 0, !dbg !4972
  store i32 %166, i32* %165, align 8, !dbg !4972
  %167 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4972
  %168 = extractvalue { i32, %struct.VEC_edge_gc** } %call644, 1, !dbg !4972
  store %struct.VEC_edge_gc** %168, %struct.VEC_edge_gc*** %167, align 8, !dbg !4972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %164, i64 16, i1 false), !dbg !4972
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #7, !dbg !4972
  %169 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4974
  %170 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4974
  br label %for.cond645, !dbg !4972

for.cond645:                                      ; preds = %cond.end655, %if.end642
  %fallthru2.0 = phi %struct.edge_def* [ null, %if.end642 ], [ %fallthru2.1, %cond.end655 ], !dbg !4706
  %fallthru1.0 = phi %struct.edge_def* [ null, %if.end642 ], [ %spec.select9, %cond.end655 ], !dbg !4706
  %nehedges2.0 = phi i32 [ 0, %if.end642 ], [ %nehedges2.1, %cond.end655 ], !dbg !4706
  %nehedges1.0 = phi i32 [ 0, %if.end642 ], [ %spec.select8, %cond.end655 ], !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges1.0, metadata !4645, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges2.0, metadata !4646, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru1.0, metadata !4647, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru2.0, metadata !4648, metadata !DIExpression()), !dbg !4706
  %171 = load i32, i32* %169, align 8, !dbg !4976
  %172 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %170, align 8, !dbg !4976
  call void @llvm.dbg.value(metadata %struct.edge_def** %e1, metadata !4649, metadata !DIExpression(DW_OP_deref)), !dbg !4706
  %call646 = call fastcc zeroext i8 @ei_cond(i32 %171, %struct.VEC_edge_gc** %172, %struct.edge_def** nonnull %e1) #8, !dbg !4976
  %tobool647 = icmp eq i8 %call646, 0, !dbg !4972
  br i1 %tobool647, label %for.end681, label %for.body648, !dbg !4972

for.body648:                                      ; preds = %for.cond645
  %173 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs630, align 8, !dbg !4977
  %tobool650 = icmp eq %struct.VEC_edge_gc* %173, null, !dbg !4977
  br i1 %tobool650, label %cond.end655, label %cond.true651, !dbg !4977

cond.true651:                                     ; preds = %for.body648
  %base653 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %173, i64 0, i32 0, !dbg !4977
  br label %cond.end655, !dbg !4977

cond.end655:                                      ; preds = %for.body648, %cond.true651
  %cond656 = phi %struct.VEC_edge_base* [ %base653, %cond.true651 ], [ null, %for.body648 ], !dbg !4977
  %174 = load i32, i32* %169, align 8, !dbg !4977
  %call658 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond656, i32 %174) #8, !dbg !4977
  call void @llvm.dbg.value(metadata %struct.edge_def* %call658, metadata !4650, metadata !DIExpression()), !dbg !4706
  %175 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !4979
  call void @llvm.dbg.value(metadata %struct.edge_def* %175, metadata !4649, metadata !DIExpression()), !dbg !4706
  %flags659 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %175, i64 0, i32 7, !dbg !4981
  %176 = load i32, i32* %flags659, align 8, !dbg !4981
  %and660 = lshr i32 %176, 3, !dbg !4982
  %and660.lobit = and i32 %and660, 1, !dbg !4982
  %spec.select8 = add nuw nsw i32 %nehedges1.0, %and660.lobit, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %spec.select8, metadata !4645, metadata !DIExpression()), !dbg !4706
  %flags664 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call658, i64 0, i32 7, !dbg !4983
  %177 = load i32, i32* %flags664, align 8, !dbg !4983
  %and665 = lshr i32 %177, 3, !dbg !4985
  %and665.lobit = and i32 %and665, 1, !dbg !4985
  %nehedges2.1 = add nuw nsw i32 %nehedges2.0, %and665.lobit, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %nehedges2.1, metadata !4646, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %175, metadata !4649, metadata !DIExpression()), !dbg !4706
  %and671 = and i32 %176, 1, !dbg !4986
  %tobool672 = icmp eq i32 %and671, 0, !dbg !4986
  call void @llvm.dbg.value(metadata %struct.edge_def* %175, metadata !4649, metadata !DIExpression()), !dbg !4706
  %spec.select9 = select i1 %tobool672, %struct.edge_def* %fallthru1.0, %struct.edge_def* %175, !dbg !4988
  call void @llvm.dbg.value(metadata %struct.edge_def* %spec.select9, metadata !4647, metadata !DIExpression()), !dbg !4706
  %and676 = and i32 %177, 1, !dbg !4989
  %tobool677 = icmp eq i32 %and676, 0, !dbg !4989
  %fallthru2.1 = select i1 %tobool677, %struct.edge_def* %fallthru2.0, %struct.edge_def* %call658, !dbg !4991
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru2.1, metadata !4648, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4651, metadata !DIExpression(DW_OP_deref)), !dbg !4706
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !4976
  br label %for.cond645, !dbg !4976, !llvm.loop !4992

for.end681:                                       ; preds = %for.cond645
  %fallthru2.0.lcssa = phi %struct.edge_def* [ %fallthru2.0, %for.cond645 ], !dbg !4706
  %fallthru1.0.lcssa = phi %struct.edge_def* [ %fallthru1.0, %for.cond645 ], !dbg !4706
  %nehedges2.0.lcssa = phi i32 [ %nehedges2.0, %for.cond645 ], !dbg !4706
  %nehedges1.0.lcssa = phi i32 [ %nehedges1.0, %for.cond645 ], !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru2.0.lcssa, metadata !4648, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru1.0.lcssa, metadata !4647, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges2.0.lcssa, metadata !4646, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges1.0.lcssa, metadata !4645, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru2.0.lcssa, metadata !4648, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru1.0.lcssa, metadata !4647, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges2.0.lcssa, metadata !4646, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges1.0.lcssa, metadata !4645, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru2.0.lcssa, metadata !4648, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.edge_def* %fallthru1.0.lcssa, metadata !4647, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges2.0.lcssa, metadata !4646, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata i32 %nehedges1.0.lcssa, metadata !4645, metadata !DIExpression()), !dbg !4706
  %cmp682 = icmp eq i32 %nehedges1.0.lcssa, %nehedges2.0.lcssa, !dbg !4994
  br i1 %cmp682, label %lor.lhs.false684, label %cleanup828, !dbg !4996

lor.lhs.false684:                                 ; preds = %for.end681
  %cmp685 = icmp ne %struct.edge_def* %fallthru1.0.lcssa, null, !dbg !4997
  %cmp687 = icmp ne %struct.edge_def* %fallthru2.0.lcssa, null, !dbg !4998
  %cmp689 = xor i1 %cmp685, %cmp687, !dbg !4999
  br i1 %cmp689, label %cleanup828, label %if.end692, !dbg !5000

if.end692:                                        ; preds = %lor.lhs.false684
  %tobool693 = icmp eq %struct.edge_def* %fallthru1.0.lcssa, null, !dbg !5001
  br i1 %tobool693, label %if.end725, label %if.then694, !dbg !5002

if.then694:                                       ; preds = %if.end692
  %dest695 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %fallthru1.0.lcssa, i64 0, i32 1, !dbg !5003
  %178 = load %struct.basic_block_def*, %struct.basic_block_def** %dest695, align 8, !dbg !5003
  %call696 = call zeroext i8 @forwarder_block_p(%struct.basic_block_def* %178) #6, !dbg !5004
  %tobool698 = icmp eq i8 %call696, 0, !dbg !5004
  %179 = load %struct.basic_block_def*, %struct.basic_block_def** %dest695, align 8, !dbg !5005
  br i1 %tobool698, label %cond.end704, label %cond.true699, !dbg !5004

cond.true699:                                     ; preds = %if.then694
  %call701 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %179) #8, !dbg !5006
  br label %cond.end704, !dbg !5004

cond.end704:                                      ; preds = %if.then694, %cond.true699
  %cond705 = phi %struct.basic_block_def* [ %call701, %cond.true699 ], [ %179, %if.then694 ], !dbg !5004
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond705, metadata !4689, metadata !DIExpression()), !dbg !5005
  %dest706 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %fallthru2.0.lcssa, i64 0, i32 1, !dbg !5007
  %180 = load %struct.basic_block_def*, %struct.basic_block_def** %dest706, align 8, !dbg !5007
  %call707 = call zeroext i8 @forwarder_block_p(%struct.basic_block_def* %180) #6, !dbg !5008
  %tobool709 = icmp eq i8 %call707, 0, !dbg !5008
  %181 = load %struct.basic_block_def*, %struct.basic_block_def** %dest706, align 8, !dbg !5005
  br i1 %tobool709, label %cond.end715, label %cond.true710, !dbg !5008

cond.true710:                                     ; preds = %cond.end704
  %call712 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %181) #8, !dbg !5009
  br label %cond.end715, !dbg !5008

cond.end715:                                      ; preds = %cond.end704, %cond.true710
  %cond716 = phi %struct.basic_block_def* [ %call712, %cond.true710 ], [ %181, %cond.end704 ], !dbg !5008
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cond716, metadata !4692, metadata !DIExpression()), !dbg !5005
  %cmp717 = icmp ne %struct.basic_block_def* %cond705, %cond716, !dbg !5010
  %.retval.3 = select i1 %cmp717, i8 0, i8 %retval.3, !dbg !5012
  br i1 %cmp717, label %cleanup828, label %if.end725

if.end725:                                        ; preds = %cond.end715, %if.end692
  %retval.5 = phi i8 [ %retval.3, %if.end692 ], [ %.retval.3, %cond.end715 ], !dbg !4706
  %182 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl443, align 8, !dbg !5013
  %end_728 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %182, i64 0, i32 1, !dbg !5013
  %183 = load %struct.rtx_def*, %struct.rtx_def** %end_728, align 8, !dbg !5013
  %call729 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %183, i32 25, %struct.rtx_def* null) #6, !dbg !5014
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call729, metadata !4693, metadata !DIExpression()), !dbg !5015
  %184 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl615, align 8, !dbg !5016
  %end_732 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %184, i64 0, i32 1, !dbg !5016
  %185 = load %struct.rtx_def*, %struct.rtx_def** %end_732, align 8, !dbg !5016
  %call733 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %185, i32 25, %struct.rtx_def* null) #6, !dbg !5017
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call733, metadata !4695, metadata !DIExpression()), !dbg !5015
  %tobool734 = icmp eq %struct.rtx_def* %call729, null, !dbg !5018
  %tobool736 = icmp ne %struct.rtx_def* %call733, null, !dbg !5020
  %or.cond10 = and i1 %tobool734, %tobool736, !dbg !5021
  br i1 %or.cond10, label %cleanup755, label %if.end738, !dbg !5021

if.end738:                                        ; preds = %if.end725
  br i1 %tobool734, label %if.end754, label %land.lhs.true740, !dbg !5022

land.lhs.true740:                                 ; preds = %if.end738
  %tobool741 = icmp eq %struct.rtx_def* %call733, null, !dbg !5024
  br i1 %tobool741, label %cleanup755, label %lor.lhs.false742, !dbg !5025

lor.lhs.false742:                                 ; preds = %land.lhs.true740
  %arrayidx745 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call729, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5026
  %rt_rtx746 = bitcast %union.rtunion_def* %arrayidx745 to %struct.rtx_def**, !dbg !5026
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx746, align 8, !dbg !5026
  %arrayidx749 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call733, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5027
  %rt_rtx750 = bitcast %union.rtunion_def* %arrayidx749 to %struct.rtx_def**, !dbg !5027
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx750, align 8, !dbg !5027
  %cmp751 = icmp eq %struct.rtx_def* %186, %187, !dbg !5028
  br i1 %cmp751, label %if.end754, label %cleanup755, !dbg !5029

if.end754:                                        ; preds = %lor.lhs.false742, %if.end738
  br label %cleanup755, !dbg !5030

cleanup755:                                       ; preds = %lor.lhs.false742, %land.lhs.true740, %if.end725, %if.end754
  %cleanup.dest.slot.4 = phi i1 [ true, %if.end754 ], [ false, %if.end725 ], [ false, %lor.lhs.false742 ], [ false, %land.lhs.true740 ]
  %retval.6 = phi i8 [ %retval.5, %if.end754 ], [ 0, %if.end725 ], [ 0, %lor.lhs.false742 ], [ 0, %land.lhs.true740 ], !dbg !4706
  br i1 %cleanup.dest.slot.4, label %cleanup.cont758, label %cleanup828

cleanup.cont758:                                  ; preds = %cleanup755
  %188 = bitcast %struct.edge_iterator* %tmp759 to i8*, !dbg !5031
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #7, !dbg !5031
  %call761 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs630) #8, !dbg !5031
  %189 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp759, i64 0, i32 0, !dbg !5031
  %190 = extractvalue { i32, %struct.VEC_edge_gc** } %call761, 0, !dbg !5031
  store i32 %190, i32* %189, align 8, !dbg !5031
  %191 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp759, i64 0, i32 1, !dbg !5031
  %192 = extractvalue { i32, %struct.VEC_edge_gc** } %call761, 1, !dbg !5031
  store %struct.VEC_edge_gc** %192, %struct.VEC_edge_gc*** %191, align 8, !dbg !5031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %188, i64 16, i1 false), !dbg !5031
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #7, !dbg !5031
  %193 = bitcast %struct.edge_def** %e2766 to i8*, !dbg !5032
  %194 = bitcast %struct.edge_iterator* %ei767 to i8*, !dbg !5032
  %195 = bitcast %struct.edge_iterator* %tmp785 to i8*, !dbg !5033
  %196 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp785, i64 0, i32 0, !dbg !5033
  %197 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp785, i64 0, i32 1, !dbg !5033
  %198 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei767, i64 0, i32 0, !dbg !5034
  %199 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei767, i64 0, i32 1, !dbg !5034
  br label %for.cond762, !dbg !5031

for.cond762:                                      ; preds = %for.inc826, %cleanup.cont758
  %retval.7 = phi i8 [ %retval.6, %cleanup.cont758 ], [ %retval.7., %for.inc826 ], !dbg !5035
  %200 = load i32, i32* %169, align 8, !dbg !5036
  %201 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %170, align 8, !dbg !5036
  call void @llvm.dbg.value(metadata %struct.edge_def** %e1, metadata !4649, metadata !DIExpression(DW_OP_deref)), !dbg !4706
  %call763 = call fastcc zeroext i8 @ei_cond(i32 %200, %struct.VEC_edge_gc** %201, %struct.edge_def** nonnull %e1) #8, !dbg !5036
  %tobool764 = icmp eq i8 %call763, 0, !dbg !5031
  br i1 %tobool764, label %cleanup828.loopexit, label %for.body765, !dbg !5031

for.body765:                                      ; preds = %for.cond762
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #7, !dbg !5037
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %194) #7, !dbg !5038
  %202 = load %struct.edge_def*, %struct.edge_def** %e1, align 8, !dbg !5039
  call void @llvm.dbg.value(metadata %struct.edge_def* %202, metadata !4649, metadata !DIExpression()), !dbg !4706
  %dest769 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %202, i64 0, i32 1, !dbg !5040
  %203 = load %struct.basic_block_def*, %struct.basic_block_def** %dest769, align 8, !dbg !5040
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %203, metadata !4701, metadata !DIExpression()), !dbg !5032
  %flags770 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %203, i64 0, i32 13, !dbg !5041
  %204 = load i32, i32* %flags770, align 8, !dbg !5041
  %and771 = and i32 %204, 1024, !dbg !5041
  %tobool772 = icmp eq i32 %and771, 0, !dbg !5041
  br i1 %tobool772, label %if.end784, label %if.then773, !dbg !5043

if.then773:                                       ; preds = %for.body765
  %succs774 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %203, i64 0, i32 1, !dbg !5044
  %205 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs774, align 8, !dbg !5044
  %tobool775 = icmp eq %struct.VEC_edge_gc* %205, null, !dbg !5044
  br i1 %tobool775, label %cond.end780, label %cond.true776, !dbg !5044

cond.true776:                                     ; preds = %if.then773
  %base778 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %205, i64 0, i32 0, !dbg !5044
  br label %cond.end780, !dbg !5044

cond.end780:                                      ; preds = %if.then773, %cond.true776
  %cond781 = phi %struct.VEC_edge_base* [ %base778, %cond.true776 ], [ null, %if.then773 ], !dbg !5044
  %call782 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond781, i32 0) #8, !dbg !5044
  %dest783 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call782, i64 0, i32 1, !dbg !5045
  %206 = load %struct.basic_block_def*, %struct.basic_block_def** %dest783, align 8, !dbg !5045
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %206, metadata !4701, metadata !DIExpression()), !dbg !5032
  br label %if.end784, !dbg !5046

if.end784:                                        ; preds = %for.body765, %cond.end780
  %d1768.0 = phi %struct.basic_block_def* [ %206, %cond.end780 ], [ %203, %for.body765 ], !dbg !5032
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %d1768.0, metadata !4701, metadata !DIExpression()), !dbg !5032
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #7, !dbg !5047
  %call787 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !5047
  %207 = extractvalue { i32, %struct.VEC_edge_gc** } %call787, 0, !dbg !5047
  store i32 %207, i32* %196, align 8, !dbg !5047
  %208 = extractvalue { i32, %struct.VEC_edge_gc** } %call787, 1, !dbg !5047
  store %struct.VEC_edge_gc** %208, %struct.VEC_edge_gc*** %197, align 8, !dbg !5047
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %194, i8* nonnull align 8 %195, i64 16, i1 false), !dbg !5047
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #7, !dbg !5047
  br label %for.cond788, !dbg !5047

for.cond788:                                      ; preds = %for.inc816, %if.end784
  %209 = load i32, i32* %198, align 8, !dbg !5048
  %210 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %199, align 8, !dbg !5048
  call void @llvm.dbg.value(metadata %struct.edge_def** %e2766, metadata !4696, metadata !DIExpression(DW_OP_deref)), !dbg !5032
  %call789 = call fastcc zeroext i8 @ei_cond(i32 %209, %struct.VEC_edge_gc** %210, %struct.edge_def** nonnull %e2766) #8, !dbg !5048
  %tobool790 = icmp eq i8 %call789, 0, !dbg !5047
  br i1 %tobool790, label %for.end817, label %for.body791, !dbg !5047

for.body791:                                      ; preds = %for.cond788
  %211 = load %struct.edge_def*, %struct.edge_def** %e2766, align 8, !dbg !5049
  call void @llvm.dbg.value(metadata %struct.edge_def* %211, metadata !4696, metadata !DIExpression()), !dbg !5032
  %dest793 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %211, i64 0, i32 1, !dbg !5050
  %212 = load %struct.basic_block_def*, %struct.basic_block_def** %dest793, align 8, !dbg !5050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %212, metadata !4702, metadata !DIExpression()), !dbg !5051
  %flags794 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %212, i64 0, i32 13, !dbg !5052
  %213 = load i32, i32* %flags794, align 8, !dbg !5052
  %and795 = and i32 %213, 1024, !dbg !5052
  %tobool796 = icmp eq i32 %and795, 0, !dbg !5052
  br i1 %tobool796, label %if.end808, label %if.then797, !dbg !5054

if.then797:                                       ; preds = %for.body791
  %succs798 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %212, i64 0, i32 1, !dbg !5055
  %214 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs798, align 8, !dbg !5055
  %tobool799 = icmp eq %struct.VEC_edge_gc* %214, null, !dbg !5055
  br i1 %tobool799, label %cond.end804, label %cond.true800, !dbg !5055

cond.true800:                                     ; preds = %if.then797
  %base802 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %214, i64 0, i32 0, !dbg !5055
  br label %cond.end804, !dbg !5055

cond.end804:                                      ; preds = %if.then797, %cond.true800
  %cond805 = phi %struct.VEC_edge_base* [ %base802, %cond.true800 ], [ null, %if.then797 ], !dbg !5055
  %call806 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond805, i32 0) #8, !dbg !5055
  %dest807 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call806, i64 0, i32 1, !dbg !5056
  %215 = load %struct.basic_block_def*, %struct.basic_block_def** %dest807, align 8, !dbg !5056
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %215, metadata !4702, metadata !DIExpression()), !dbg !5051
  br label %if.end808, !dbg !5057

if.end808:                                        ; preds = %for.body791, %cond.end804
  %d2792.0 = phi %struct.basic_block_def* [ %215, %cond.end804 ], [ %212, %for.body791 ], !dbg !5051
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %d2792.0, metadata !4702, metadata !DIExpression()), !dbg !5051
  %cmp809 = icmp eq %struct.basic_block_def* %d1768.0, %d2792.0, !dbg !5058
  br i1 %cmp809, label %for.end817, label %for.inc816

for.inc816:                                       ; preds = %if.end808
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei767, metadata !4700, metadata !DIExpression(DW_OP_deref)), !dbg !5032
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei767) #8, !dbg !5048
  br label %for.cond788, !dbg !5048, !llvm.loop !5060

for.end817:                                       ; preds = %for.cond788, %if.end808
  %216 = load %struct.edge_def*, %struct.edge_def** %e2766, align 8, !dbg !5062
  call void @llvm.dbg.value(metadata %struct.edge_def* %216, metadata !4696, metadata !DIExpression()), !dbg !5032
  %tobool818 = icmp ne %struct.edge_def* %216, null, !dbg !5062
  %retval.7. = select i1 %tobool818, i8 %retval.7, i8 0, !dbg !5064
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %194) #7, !dbg !5065
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #7, !dbg !5065
  br i1 %tobool818, label %for.inc826, label %cleanup828.loopexit

for.inc826:                                       ; preds = %for.end817
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4651, metadata !DIExpression(DW_OP_deref)), !dbg !4706
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !5036
  br label %for.cond762, !dbg !5036, !llvm.loop !5066

cleanup828.loopexit:                              ; preds = %for.end817, %for.cond762
  %retval.9.ph = phi i8 [ 1, %for.cond762 ], [ %retval.7., %for.end817 ]
  br label %cleanup828, !dbg !5068

cleanup828:                                       ; preds = %cleanup828.loopexit, %lor.lhs.false241, %lor.lhs.false236, %lor.lhs.false231, %if.end226, %lor.lhs.false68, %lor.lhs.false62, %cond.end57, %cond.end715, %for.end681, %cond.end636, %cleanup.cont610, %lor.lhs.false684, %cleanup, %land.lhs.true262, %if.else, %if.end328, %if.then424, %if.end419, %cleanup755, %cleanup605, %land.end
  %retval.9 = phi i8 [ %12, %land.end ], [ %retval.3, %cleanup605 ], [ %.retval.3, %cond.end715 ], [ %retval.6, %cleanup755 ], [ 0, %cleanup ], [ 0, %lor.lhs.false68 ], [ 0, %lor.lhs.false62 ], [ 0, %cond.end57 ], [ 0, %lor.lhs.false241 ], [ 0, %lor.lhs.false236 ], [ 0, %lor.lhs.false231 ], [ 0, %if.end226 ], [ 0, %land.lhs.true262 ], [ 0, %if.else ], [ 0, %if.end328 ], [ %79, %if.then424 ], [ %79, %if.end419 ], [ 0, %cleanup.cont610 ], [ 0, %cond.end636 ], [ 0, %lor.lhs.false684 ], [ 0, %for.end681 ], [ %retval.9.ph, %cleanup828.loopexit ], !dbg !4706
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5068
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5068
  ret i8 %retval.9, !dbg !5068
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @flow_find_cross_jump(i32 %mode, %struct.basic_block_def* %bb1, %struct.basic_block_def* %bb2, %struct.rtx_def** %f1, %struct.rtx_def** %f2) unnamed_addr #4 !dbg !5069 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5073, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb1, metadata !5074, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb2, metadata !5075, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def** %f1, metadata !5076, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def** %f2, metadata !5077, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 0, metadata !5084, metadata !DIExpression()), !dbg !5090
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb1, i64 0, i32 7, !dbg !5091
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5091
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5091
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5091
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5091
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5083, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5082, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5080, metadata !DIExpression()), !dbg !5090
  %call = tail call i32 @onlyjump_p(%struct.rtx_def* %1) #6, !dbg !5092
  %tobool = icmp eq i32 %call, 0, !dbg !5092
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5094

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @returnjump_p(%struct.rtx_def* %1) #6, !dbg !5095
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5095
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !5096

land.lhs.true:                                    ; preds = %lor.lhs.false
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, !dbg !5097
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5097
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !5097
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5097
  %call3 = tail call i32 @side_effects_p(%struct.rtx_def* %3) #6, !dbg !5098
  %tobool4 = icmp eq i32 %call3, 0, !dbg !5098
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5099

if.then:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5080, metadata !DIExpression()), !dbg !5090
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5100
  %rt_rtx8 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5100
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !5100
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5078, metadata !DIExpression()), !dbg !5090
  br label %if.end, !dbg !5102

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false, %if.then
  %i1.0 = phi %struct.rtx_def* [ %5, %if.then ], [ %1, %land.lhs.true ], [ %1, %lor.lhs.false ], !dbg !5090
  %last1.0 = phi %struct.rtx_def* [ %1, %if.then ], [ null, %land.lhs.true ], [ null, %lor.lhs.false ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.0, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.0, metadata !5078, metadata !DIExpression()), !dbg !5090
  %il9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb2, i64 0, i32 7, !dbg !5103
  %rtl10 = bitcast %union.basic_block_il_dependent* %il9 to %struct.rtl_bb_info**, !dbg !5103
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl10, align 8, !dbg !5103
  %end_11 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !5103
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_11, align 8, !dbg !5103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5079, metadata !DIExpression()), !dbg !5090
  %call12 = tail call i32 @onlyjump_p(%struct.rtx_def* %7) #6, !dbg !5104
  %tobool13 = icmp eq i32 %call12, 0, !dbg !5104
  br i1 %tobool13, label %lor.lhs.false14, label %if.then24, !dbg !5106

lor.lhs.false14:                                  ; preds = %if.end
  %call15 = tail call i32 @returnjump_p(%struct.rtx_def* %7) #6, !dbg !5107
  %tobool16 = icmp eq i32 %call15, 0, !dbg !5107
  br i1 %tobool16, label %if.end38, label %land.lhs.true17, !dbg !5108

land.lhs.true17:                                  ; preds = %lor.lhs.false14
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, !dbg !5109
  %8 = getelementptr inbounds %union.u, %union.u* %u18, i64 1, i32 0, i32 0, i64 0, !dbg !5109
  %rt_rtx21 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5109
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !5109
  %call22 = tail call i32 @side_effects_p(%struct.rtx_def* %9) #6, !dbg !5110
  %tobool23 = icmp eq i32 %call22, 0, !dbg !5110
  br i1 %tobool23, label %if.then24, label %if.end38, !dbg !5111

if.then24:                                        ; preds = %land.lhs.true17, %if.end
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5081, metadata !DIExpression()), !dbg !5090
  %call25 = tail call i32 @simplejump_p(%struct.rtx_def* %7) #6, !dbg !5112
  %tobool26 = icmp eq i32 %call25, 0, !dbg !5112
  br i1 %tobool26, label %land.lhs.true27, label %if.end33, !dbg !5115

land.lhs.true27:                                  ; preds = %if.then24
  %call28 = tail call i32 @returnjump_p(%struct.rtx_def* %7) #6, !dbg !5116
  %tobool29 = icmp eq i32 %call28, 0, !dbg !5116
  %tobool31 = icmp ne %struct.rtx_def* %last1.0, null, !dbg !5117
  %or.cond = and i1 %tobool29, %tobool31, !dbg !5118
  %spec.select = zext i1 %or.cond to i32, !dbg !5118
  br label %if.end33, !dbg !5118

if.end33:                                         ; preds = %if.then24, %land.lhs.true27
  %ninsns.0 = phi i32 [ 0, %if.then24 ], [ %spec.select, %land.lhs.true27 ], !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.0, metadata !5084, metadata !DIExpression()), !dbg !5090
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5119
  %rt_rtx37 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !5119
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !5119
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5079, metadata !DIExpression()), !dbg !5090
  br label %if.end38, !dbg !5120

if.end38:                                         ; preds = %land.lhs.true17, %lor.lhs.false14, %if.end33
  %i2.0 = phi %struct.rtx_def* [ %11, %if.end33 ], [ %7, %land.lhs.true17 ], [ %7, %lor.lhs.false14 ], !dbg !5090
  %last2.0 = phi %struct.rtx_def* [ %7, %if.end33 ], [ null, %land.lhs.true17 ], [ null, %lor.lhs.false14 ], !dbg !5090
  %ninsns.1 = phi i32 [ %ninsns.0, %if.end33 ], [ 0, %land.lhs.true17 ], [ 0, %lor.lhs.false14 ], !dbg !5121
  call void @llvm.dbg.value(metadata i32 %ninsns.1, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.0, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.0, metadata !5079, metadata !DIExpression()), !dbg !5090
  br label %while.cond, !dbg !5122

while.cond:                                       ; preds = %if.end157, %if.end38
  %i2.1 = phi %struct.rtx_def* [ %i2.0, %if.end38 ], [ %31, %if.end157 ], !dbg !5090
  %i1.1 = phi %struct.rtx_def* [ %i1.0, %if.end38 ], [ %29, %if.end157 ], !dbg !5090
  %last1.1 = phi %struct.rtx_def* [ %last1.0, %if.end38 ], [ %last1.2, %if.end157 ], !dbg !5090
  %last2.1 = phi %struct.rtx_def* [ %last2.0, %if.end38 ], [ %last2.2, %if.end157 ], !dbg !5090
  %ninsns.2 = phi i32 [ %ninsns.1, %if.end38 ], [ %ninsns.3, %if.end157 ], !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.1, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.1, metadata !5079, metadata !DIExpression()), !dbg !5090
  br label %while.cond39, !dbg !5123

while.cond39:                                     ; preds = %while.body59, %while.cond
  %i1.2 = phi %struct.rtx_def* [ %i1.1, %while.cond ], [ %16, %while.body59 ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2, metadata !5078, metadata !DIExpression()), !dbg !5090
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1.2, i64 0, i32 0, !dbg !5124
  %bf.load = load i32, i32* %12, align 8, !dbg !5124
  %bf.clear = and i32 %bf.load, 65535, !dbg !5124
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !5124
  br i1 %cmp, label %land.lhs.true52, label %lor.lhs.false40, !dbg !5124

lor.lhs.false40:                                  ; preds = %while.cond39
  %cmp43 = icmp eq i32 %bf.clear, 7, !dbg !5124
  br i1 %cmp43, label %land.lhs.true52, label %lor.lhs.false44, !dbg !5124

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  %cmp47 = icmp eq i32 %bf.clear, 9, !dbg !5124
  br i1 %cmp47, label %land.lhs.true52, label %lor.lhs.false48, !dbg !5124

lor.lhs.false48:                                  ; preds = %lor.lhs.false44
  %cmp51 = icmp eq i32 %bf.clear, 10, !dbg !5124
  br i1 %cmp51, label %land.lhs.true52, label %land.rhs, !dbg !5124

land.lhs.true52:                                  ; preds = %lor.lhs.false48, %lor.lhs.false44, %lor.lhs.false40, %while.cond39
  %cmp55 = icmp eq i32 %bf.clear, 7, !dbg !5124
  br i1 %cmp55, label %land.rhs, label %while.end, !dbg !5125

land.rhs:                                         ; preds = %land.lhs.true52, %lor.lhs.false48
  %13 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5126
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i64 0, i32 0, !dbg !5126
  %14 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5126
  %cmp58 = icmp eq %struct.rtx_def* %i1.2, %14, !dbg !5127
  br i1 %cmp58, label %while.end, label %while.body59, !dbg !5123

while.body59:                                     ; preds = %land.rhs
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5128
  %rt_rtx63 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !5128
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !5128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !5078, metadata !DIExpression()), !dbg !5090
  br label %while.cond39, !dbg !5123, !llvm.loop !5129

while.end:                                        ; preds = %land.rhs, %land.lhs.true52
  %i1.2.lcssa = phi %struct.rtx_def* [ %i1.2, %land.rhs ], [ %i1.2, %land.lhs.true52 ], !dbg !5090
  %.lcssa = phi i32* [ %12, %land.rhs ], [ %12, %land.lhs.true52 ], !dbg !5124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2.lcssa, metadata !5078, metadata !DIExpression()), !dbg !5090
  br label %while.cond64, !dbg !5130

while.cond64:                                     ; preds = %while.body90, %while.end
  %i2.2 = phi %struct.rtx_def* [ %i2.1, %while.end ], [ %21, %while.body90 ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2, metadata !5079, metadata !DIExpression()), !dbg !5090
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i2.2, i64 0, i32 0, !dbg !5131
  %bf.load65 = load i32, i32* %17, align 8, !dbg !5131
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !5131
  %cmp67 = icmp eq i32 %bf.clear66, 8, !dbg !5131
  br i1 %cmp67, label %land.lhs.true80, label %lor.lhs.false68, !dbg !5131

lor.lhs.false68:                                  ; preds = %while.cond64
  %cmp71 = icmp eq i32 %bf.clear66, 7, !dbg !5131
  br i1 %cmp71, label %land.lhs.true80, label %lor.lhs.false72, !dbg !5131

lor.lhs.false72:                                  ; preds = %lor.lhs.false68
  %cmp75 = icmp eq i32 %bf.clear66, 9, !dbg !5131
  br i1 %cmp75, label %land.lhs.true80, label %lor.lhs.false76, !dbg !5131

lor.lhs.false76:                                  ; preds = %lor.lhs.false72
  %cmp79 = icmp eq i32 %bf.clear66, 10, !dbg !5131
  br i1 %cmp79, label %land.lhs.true80, label %land.rhs84, !dbg !5131

land.lhs.true80:                                  ; preds = %lor.lhs.false76, %lor.lhs.false72, %lor.lhs.false68, %while.cond64
  %cmp83 = icmp eq i32 %bf.clear66, 7, !dbg !5131
  br i1 %cmp83, label %land.rhs84, label %while.end95, !dbg !5132

land.rhs84:                                       ; preds = %land.lhs.true80, %lor.lhs.false76
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl10, align 8, !dbg !5133
  %head_87 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i64 0, i32 0, !dbg !5133
  %19 = load %struct.rtx_def*, %struct.rtx_def** %head_87, align 8, !dbg !5133
  %cmp88 = icmp eq %struct.rtx_def* %i2.2, %19, !dbg !5134
  br i1 %cmp88, label %while.end95, label %while.body90, !dbg !5130

while.body90:                                     ; preds = %land.rhs84
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i2.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5135
  %rt_rtx94 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !5135
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !5135
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !5079, metadata !DIExpression()), !dbg !5090
  br label %while.cond64, !dbg !5130, !llvm.loop !5136

while.end95:                                      ; preds = %land.rhs84, %land.lhs.true80
  %i2.2.lcssa = phi %struct.rtx_def* [ %i2.2, %land.rhs84 ], [ %i2.2, %land.lhs.true80 ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2.lcssa, metadata !5079, metadata !DIExpression()), !dbg !5090
  %22 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5137
  %head_98 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %22, i64 0, i32 0, !dbg !5137
  %23 = load %struct.rtx_def*, %struct.rtx_def** %head_98, align 8, !dbg !5137
  %cmp99 = icmp eq %struct.rtx_def* %i1.2.lcssa, %23, !dbg !5139
  br i1 %cmp99, label %while.end166, label %lor.lhs.false100, !dbg !5140

lor.lhs.false100:                                 ; preds = %while.end95
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl10, align 8, !dbg !5141
  %head_103 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 0, !dbg !5141
  %25 = load %struct.rtx_def*, %struct.rtx_def** %head_103, align 8, !dbg !5141
  %cmp104 = icmp eq %struct.rtx_def* %i2.2.lcssa, %25, !dbg !5142
  br i1 %cmp104, label %while.end166, label %if.end106, !dbg !5143

if.end106:                                        ; preds = %lor.lhs.false100
  %call107 = tail call fastcc zeroext i8 @old_insns_match_p(i32 %mode, %struct.rtx_def* %i1.2.lcssa, %struct.rtx_def* %i2.2.lcssa) #8, !dbg !5144
  %tobool108 = icmp eq i8 %call107, 0, !dbg !5144
  br i1 %tobool108, label %while.end166, label %if.end110, !dbg !5146

if.end110:                                        ; preds = %if.end106
  tail call fastcc void @merge_memattrs(%struct.rtx_def* %i1.2.lcssa, %struct.rtx_def* %i2.2.lcssa) #8, !dbg !5147
  %bf.load111 = load i32, i32* %.lcssa, align 8, !dbg !5148
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !5148
  %cmp113 = icmp eq i32 %bf.clear112, 8, !dbg !5148
  br i1 %cmp113, label %if.then126, label %lor.lhs.false114, !dbg !5148

lor.lhs.false114:                                 ; preds = %if.end110
  %cmp117 = icmp eq i32 %bf.clear112, 7, !dbg !5148
  br i1 %cmp117, label %if.then126, label %lor.lhs.false118, !dbg !5148

lor.lhs.false118:                                 ; preds = %lor.lhs.false114
  %cmp121 = icmp eq i32 %bf.clear112, 9, !dbg !5148
  br i1 %cmp121, label %if.then126, label %lor.lhs.false122, !dbg !5148

lor.lhs.false122:                                 ; preds = %lor.lhs.false118
  %cmp125 = icmp eq i32 %bf.clear112, 10, !dbg !5148
  br i1 %cmp125, label %if.then126, label %if.end157, !dbg !5149

if.then126:                                       ; preds = %lor.lhs.false122, %lor.lhs.false118, %lor.lhs.false114, %if.end110
  %call127 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %i1.2.lcssa) #6, !dbg !5150
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call127, metadata !5085, metadata !DIExpression()), !dbg !5151
  %call128 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %i2.2.lcssa) #6, !dbg !5152
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call128, metadata !5089, metadata !DIExpression()), !dbg !5151
  %tobool129 = icmp eq %struct.rtx_def* %call127, null, !dbg !5153
  %tobool131 = icmp ne %struct.rtx_def* %call128, null, !dbg !5155
  %or.cond1 = or i1 %tobool129, %tobool131, !dbg !5156
  br i1 %or.cond1, label %if.else, label %if.then132, !dbg !5156

if.then132:                                       ; preds = %if.then126
  tail call void @remove_note(%struct.rtx_def* %i1.2.lcssa, %struct.rtx_def* %call127) #6, !dbg !5157
  br label %if.end155, !dbg !5157

if.else:                                          ; preds = %if.then126
  %or.cond2 = and i1 %tobool129, %tobool131, !dbg !5158
  br i1 %or.cond2, label %if.then136, label %if.else137, !dbg !5158

if.then136:                                       ; preds = %if.else
  tail call void @remove_note(%struct.rtx_def* %i2.2.lcssa, %struct.rtx_def* nonnull %call128) #6, !dbg !5160
  br label %if.end155, !dbg !5160

if.else137:                                       ; preds = %if.else
  %tobool138 = icmp ne %struct.rtx_def* %call127, null, !dbg !5161
  %or.cond3 = and i1 %tobool138, %tobool131, !dbg !5163
  br i1 %or.cond3, label %land.lhs.true141, label %if.end155, !dbg !5163

land.lhs.true141:                                 ; preds = %if.else137
  %arrayidx144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call127, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5164
  %rt_rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**, !dbg !5164
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx145, align 8, !dbg !5164
  %arrayidx148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call128, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5165
  %rt_rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**, !dbg !5165
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx149, align 8, !dbg !5165
  %call150 = tail call i32 @rtx_equal_p(%struct.rtx_def* %26, %struct.rtx_def* %27) #6, !dbg !5166
  %tobool151 = icmp eq i32 %call150, 0, !dbg !5166
  br i1 %tobool151, label %if.then152, label %if.end155, !dbg !5167

if.then152:                                       ; preds = %land.lhs.true141
  tail call void @remove_note(%struct.rtx_def* %i1.2.lcssa, %struct.rtx_def* nonnull %call127) #6, !dbg !5168
  tail call void @remove_note(%struct.rtx_def* %i2.2.lcssa, %struct.rtx_def* nonnull %call128) #6, !dbg !5170
  br label %if.end155, !dbg !5171

if.end155:                                        ; preds = %land.lhs.true141, %if.then136, %if.then152, %if.else137, %if.then132
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1, metadata !5082, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1, metadata !5083, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1.2.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2.2.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  %inc156 = add nsw i32 %ninsns.2, 1, !dbg !5172
  call void @llvm.dbg.value(metadata i32 %inc156, metadata !5084, metadata !DIExpression()), !dbg !5090
  br label %if.end157, !dbg !5173

if.end157:                                        ; preds = %if.end155, %lor.lhs.false122
  %last1.2 = phi %struct.rtx_def* [ %i1.2.lcssa, %if.end155 ], [ %last1.1, %lor.lhs.false122 ], !dbg !5090
  %last2.2 = phi %struct.rtx_def* [ %i2.2.lcssa, %if.end155 ], [ %last2.1, %lor.lhs.false122 ], !dbg !5090
  %ninsns.3 = phi i32 [ %inc156, %if.end155 ], [ %ninsns.2, %lor.lhs.false122 ], !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.3, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.2, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.2, metadata !5080, metadata !DIExpression()), !dbg !5090
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1.2.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5174
  %rt_rtx161 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !5174
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx161, align 8, !dbg !5174
  call void @llvm.dbg.value(metadata %struct.rtx_def* %29, metadata !5078, metadata !DIExpression()), !dbg !5090
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i2.2.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5175
  %rt_rtx165 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !5175
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx165, align 8, !dbg !5175
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !5079, metadata !DIExpression()), !dbg !5090
  br label %while.cond, !dbg !5122, !llvm.loop !5176

while.end166:                                     ; preds = %if.end106, %while.end95, %lor.lhs.false100
  %last1.1.lcssa = phi %struct.rtx_def* [ %last1.1, %if.end106 ], [ %last1.1, %while.end95 ], [ %last1.1, %lor.lhs.false100 ], !dbg !5090
  %last2.1.lcssa = phi %struct.rtx_def* [ %last2.1, %if.end106 ], [ %last2.1, %while.end95 ], [ %last2.1, %lor.lhs.false100 ], !dbg !5090
  %ninsns.2.lcssa = phi i32 [ %ninsns.2, %if.end106 ], [ %ninsns.2, %while.end95 ], [ %ninsns.2, %lor.lhs.false100 ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.1.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.1.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %ninsns.2.lcssa, metadata !5084, metadata !DIExpression()), !dbg !5090
  %tobool167 = icmp eq i32 %ninsns.2.lcssa, 0, !dbg !5178
  br i1 %tobool167, label %if.end314, label %while.cond169.preheader, !dbg !5180

while.cond169.preheader:                          ; preds = %while.end166
  %32 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5181
  %head_172 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %32, i64 0, i32 0, !dbg !5181
  %33 = load %struct.rtx_def*, %struct.rtx_def** %head_172, align 8, !dbg !5181
  br label %while.cond169, !dbg !5183

while.cond169:                                    ; preds = %while.cond169.preheader, %while.body217
  %last1.3 = phi %struct.rtx_def* [ %37, %while.body217 ], [ %last1.1.lcssa, %while.cond169.preheader ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.3, metadata !5080, metadata !DIExpression()), !dbg !5090
  %cmp173 = icmp eq %struct.rtx_def* %last1.3, %33, !dbg !5184
  br i1 %cmp173, label %while.end222, label %land.rhs174, !dbg !5185

land.rhs174:                                      ; preds = %while.cond169
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last1.3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5186
  %35 = bitcast %union.rtunion_def* %34 to i32**, !dbg !5186
  %36 = load i32*, i32** %35, align 8, !dbg !5186
  %bf.load179 = load i32, i32* %36, align 8, !dbg !5186
  %bf.clear180 = and i32 %bf.load179, 65535, !dbg !5186
  %cmp181 = icmp eq i32 %bf.clear180, 8, !dbg !5186
  %37 = bitcast i32* %36 to %struct.rtx_def*, !dbg !5186
  br i1 %cmp181, label %land.rhs206, label %lor.lhs.false182, !dbg !5186

lor.lhs.false182:                                 ; preds = %land.rhs174
  %cmp189 = icmp eq i32 %bf.clear180, 7, !dbg !5186
  br i1 %cmp189, label %land.rhs206, label %lor.lhs.false190, !dbg !5186

lor.lhs.false190:                                 ; preds = %lor.lhs.false182
  %cmp197 = icmp eq i32 %bf.clear180, 9, !dbg !5186
  br i1 %cmp197, label %land.rhs206, label %lor.lhs.false198, !dbg !5186

lor.lhs.false198:                                 ; preds = %lor.lhs.false190
  %cmp205 = icmp eq i32 %bf.clear180, 10, !dbg !5186
  br i1 %cmp205, label %land.rhs206, label %land.end214, !dbg !5186

land.rhs206:                                      ; preds = %lor.lhs.false198, %lor.lhs.false190, %lor.lhs.false182, %land.rhs174
  %cmp213 = icmp ne i32 %bf.clear180, 7, !dbg !5186
  br label %land.end214

land.end214:                                      ; preds = %land.rhs206, %lor.lhs.false198
  %38 = phi i1 [ false, %lor.lhs.false198 ], [ %cmp213, %land.rhs206 ], !dbg !5181
  br i1 %38, label %while.end222, label %while.body217, !dbg !5183

while.body217:                                    ; preds = %land.end214
  call void @llvm.dbg.value(metadata %struct.rtx_def* %37, metadata !5080, metadata !DIExpression()), !dbg !5090
  br label %while.cond169, !dbg !5183, !llvm.loop !5187

while.end222:                                     ; preds = %land.end214, %while.cond169
  %last1.3.lcssa = phi %struct.rtx_def* [ %last1.3, %land.end214 ], [ %last1.3, %while.cond169 ], !dbg !5090
  %cmp173.lcssa = phi i1 [ %cmp173, %land.end214 ], [ %cmp173, %while.cond169 ], !dbg !5184
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.3.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.3.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.3.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.3.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.3.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.3.lcssa, metadata !5080, metadata !DIExpression()), !dbg !5090
  br i1 %cmp173.lcssa, label %if.end240, label %land.lhs.true227, !dbg !5189

land.lhs.true227:                                 ; preds = %while.end222
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last1.3.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5191
  %40 = bitcast %union.rtunion_def* %39 to i32**, !dbg !5191
  %41 = load i32*, i32** %40, align 8, !dbg !5191
  %bf.load232 = load i32, i32* %41, align 8, !dbg !5191
  %bf.clear233 = and i32 %bf.load232, 65535, !dbg !5191
  %cmp234 = icmp eq i32 %bf.clear233, 12, !dbg !5191
  br i1 %cmp234, label %if.then235, label %if.end240, !dbg !5192

if.then235:                                       ; preds = %land.lhs.true227
  %42 = bitcast i32* %41 to %struct.rtx_def*, !dbg !5192
  call void @llvm.dbg.value(metadata %struct.rtx_def* %42, metadata !5080, metadata !DIExpression()), !dbg !5090
  br label %if.end240, !dbg !5193

if.end240:                                        ; preds = %while.end222, %if.then235, %land.lhs.true227
  %last1.4 = phi %struct.rtx_def* [ %42, %if.then235 ], [ %last1.3.lcssa, %land.lhs.true227 ], [ %33, %while.end222 ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last1.4, metadata !5080, metadata !DIExpression()), !dbg !5090
  %43 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl10, align 8, !dbg !5181
  %head_244 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %43, i64 0, i32 0, !dbg !5181
  %44 = load %struct.rtx_def*, %struct.rtx_def** %head_244, align 8, !dbg !5181
  br label %while.cond241, !dbg !5194

while.cond241:                                    ; preds = %while.body290, %if.end240
  %last2.3 = phi %struct.rtx_def* [ %last2.1.lcssa, %if.end240 ], [ %48, %while.body290 ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.3, metadata !5081, metadata !DIExpression()), !dbg !5090
  %cmp245 = icmp eq %struct.rtx_def* %last2.3, %44, !dbg !5195
  br i1 %cmp245, label %while.end295, label %land.rhs246, !dbg !5196

land.rhs246:                                      ; preds = %while.cond241
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last2.3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5197
  %46 = bitcast %union.rtunion_def* %45 to i32**, !dbg !5197
  %47 = load i32*, i32** %46, align 8, !dbg !5197
  %bf.load251 = load i32, i32* %47, align 8, !dbg !5197
  %bf.clear252 = and i32 %bf.load251, 65535, !dbg !5197
  %cmp253 = icmp eq i32 %bf.clear252, 8, !dbg !5197
  %48 = bitcast i32* %47 to %struct.rtx_def*, !dbg !5197
  br i1 %cmp253, label %land.rhs278, label %lor.lhs.false254, !dbg !5197

lor.lhs.false254:                                 ; preds = %land.rhs246
  %cmp261 = icmp eq i32 %bf.clear252, 7, !dbg !5197
  br i1 %cmp261, label %land.rhs278, label %lor.lhs.false262, !dbg !5197

lor.lhs.false262:                                 ; preds = %lor.lhs.false254
  %cmp269 = icmp eq i32 %bf.clear252, 9, !dbg !5197
  br i1 %cmp269, label %land.rhs278, label %lor.lhs.false270, !dbg !5197

lor.lhs.false270:                                 ; preds = %lor.lhs.false262
  %cmp277 = icmp eq i32 %bf.clear252, 10, !dbg !5197
  br i1 %cmp277, label %land.rhs278, label %land.end287, !dbg !5197

land.rhs278:                                      ; preds = %lor.lhs.false270, %lor.lhs.false262, %lor.lhs.false254, %land.rhs246
  %cmp285 = icmp ne i32 %bf.clear252, 7, !dbg !5197
  br label %land.end287

land.end287:                                      ; preds = %land.rhs278, %lor.lhs.false270
  %49 = phi i1 [ false, %lor.lhs.false270 ], [ %cmp285, %land.rhs278 ], !dbg !5181
  br i1 %49, label %while.end295, label %while.body290, !dbg !5194

while.body290:                                    ; preds = %land.end287
  call void @llvm.dbg.value(metadata %struct.rtx_def* %48, metadata !5081, metadata !DIExpression()), !dbg !5090
  br label %while.cond241, !dbg !5194, !llvm.loop !5198

while.end295:                                     ; preds = %land.end287, %while.cond241
  %last2.3.lcssa = phi %struct.rtx_def* [ %last2.3, %land.end287 ], [ %last2.3, %while.cond241 ], !dbg !5090
  %cmp245.lcssa = phi i1 [ %cmp245, %land.end287 ], [ %cmp245, %while.cond241 ], !dbg !5195
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.3.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.3.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.3.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.3.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.3.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.3.lcssa, metadata !5081, metadata !DIExpression()), !dbg !5090
  br i1 %cmp245.lcssa, label %if.end313, label %land.lhs.true300, !dbg !5200

land.lhs.true300:                                 ; preds = %while.end295
  %50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last2.3.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5202
  %51 = bitcast %union.rtunion_def* %50 to i32**, !dbg !5202
  %52 = load i32*, i32** %51, align 8, !dbg !5202
  %bf.load305 = load i32, i32* %52, align 8, !dbg !5202
  %bf.clear306 = and i32 %bf.load305, 65535, !dbg !5202
  %cmp307 = icmp eq i32 %bf.clear306, 12, !dbg !5202
  br i1 %cmp307, label %if.then308, label %if.end313, !dbg !5203

if.then308:                                       ; preds = %land.lhs.true300
  %53 = bitcast i32* %52 to %struct.rtx_def*, !dbg !5203
  call void @llvm.dbg.value(metadata %struct.rtx_def* %53, metadata !5081, metadata !DIExpression()), !dbg !5090
  br label %if.end313, !dbg !5204

if.end313:                                        ; preds = %while.end295, %if.then308, %land.lhs.true300
  %last2.4 = phi %struct.rtx_def* [ %53, %if.then308 ], [ %last2.3.lcssa, %land.lhs.true300 ], [ %44, %while.end295 ], !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last2.4, metadata !5081, metadata !DIExpression()), !dbg !5090
  store %struct.rtx_def* %last1.4, %struct.rtx_def** %f1, align 8, !dbg !5205
  store %struct.rtx_def* %last2.4, %struct.rtx_def** %f2, align 8, !dbg !5206
  br label %if.end314, !dbg !5207

if.end314:                                        ; preds = %while.end166, %if.end313
  ret i32 %ninsns.2.lcssa, !dbg !5208
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @block_has_preserve_label(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !5209 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5211, metadata !DIExpression()), !dbg !5212
  %tobool = icmp eq %struct.basic_block_def* %bb, null, !dbg !5213
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5214

land.lhs.true:                                    ; preds = %entry
  %call = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* nonnull %bb) #6, !dbg !5215
  %tobool1 = icmp eq %struct.rtx_def* %call, null, !dbg !5215
  br i1 %tobool1, label %land.end, label %land.rhs, !dbg !5216

land.rhs:                                         ; preds = %land.lhs.true
  %call2 = tail call %struct.rtx_def* @block_label(%struct.basic_block_def* nonnull %bb) #6, !dbg !5217
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call2, i64 0, i32 0, !dbg !5217
  %bf.load = load i32, i32* %0, align 8, !dbg !5217
  %bf.lshr = lshr i32 %bf.load, 28, !dbg !5217
  %1 = trunc i32 %bf.lshr to i8
  %2 = and i8 %1, 1
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %entry, %land.rhs
  %3 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %2, %land.rhs ]
  ret i8 %3, !dbg !5218
}

declare dso_local i32 @replace_label(%struct.rtx_def**, i8*) #1

declare dso_local %struct.edge_def* @split_block(%struct.basic_block_def*, i8*) local_unnamed_addr #1

declare dso_local i32 @rtx_renumbered_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #1

declare dso_local zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @abs(i32) local_unnamed_addr #1

declare dso_local i32 @rtx_referenced_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @old_insns_match_p(i32 %mode, %struct.rtx_def* %i1, %struct.rtx_def* %i2) unnamed_addr #4 !dbg !5219 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5223, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i1, metadata !5224, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata %struct.rtx_def* %i2, metadata !5225, metadata !DIExpression()), !dbg !5233
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1, i64 0, i32 0, !dbg !5234
  %bf.load = load i32, i32* %0, align 8, !dbg !5234
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i2, i64 0, i32 0, !dbg !5236
  %bf.load1 = load i32, i32* %1, align 8, !dbg !5236
  %2 = xor i32 %bf.load, %bf.load1, !dbg !5237
  %3 = and i32 %2, 65535, !dbg !5237
  %cmp = icmp eq i32 %3, 0, !dbg !5237
  br i1 %cmp, label %if.end, label %cleanup155, !dbg !5238

if.end:                                           ; preds = %entry
  %bf.clear4 = and i32 %bf.load, 65535, !dbg !5239
  %cmp5 = icmp eq i32 %bf.clear4, 13, !dbg !5239
  br i1 %cmp5, label %land.lhs.true, label %if.end18, !dbg !5239

land.lhs.true:                                    ; preds = %if.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1, i64 0, i32 1, !dbg !5239
  %4 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5239
  %rt_int = bitcast %union.rtunion_def* %4 to i32*, !dbg !5239
  %5 = load i32, i32* %rt_int, align 8, !dbg !5239
  %cmp6 = icmp eq i32 %5, 10, !dbg !5239
  br i1 %cmp6, label %land.lhs.true7, label %if.end18, !dbg !5241

land.lhs.true7:                                   ; preds = %land.lhs.true
  %bf.clear9 = and i32 %bf.load1, 65535, !dbg !5242
  %cmp10 = icmp eq i32 %bf.clear9, 13, !dbg !5242
  br i1 %cmp10, label %land.lhs.true11, label %if.end18, !dbg !5242

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i2, i64 0, i32 1, !dbg !5242
  %6 = getelementptr inbounds %union.u, %union.u* %u12, i64 1, i32 0, i32 0, i64 0, !dbg !5242
  %rt_int15 = bitcast %union.rtunion_def* %6 to i32*, !dbg !5242
  %7 = load i32, i32* %rt_int15, align 8, !dbg !5242
  %cmp16 = icmp eq i32 %7, 10, !dbg !5242
  br i1 %cmp16, label %cleanup155, label %if.end18, !dbg !5243

if.end18:                                         ; preds = %land.lhs.true11, %land.lhs.true7, %land.lhs.true, %if.end
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i1, i64 0, i32 1, !dbg !5244
  %8 = getelementptr inbounds %union.u, %union.u* %u19, i64 1, i32 0, i32 0, i64 0, !dbg !5244
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5244
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5244
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5226, metadata !DIExpression()), !dbg !5233
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %i2, i64 0, i32 1, !dbg !5245
  %10 = getelementptr inbounds %union.u, %union.u* %u22, i64 1, i32 0, i32 0, i64 0, !dbg !5245
  %rt_rtx25 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !5245
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !5245
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5227, metadata !DIExpression()), !dbg !5233
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 0, !dbg !5246
  %bf.load26 = load i32, i32* %12, align 8, !dbg !5246
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !5248
  %bf.load28 = load i32, i32* %13, align 8, !dbg !5248
  %14 = xor i32 %bf.load26, %bf.load28, !dbg !5249
  %15 = and i32 %14, 65535, !dbg !5249
  %cmp30 = icmp eq i32 %15, 0, !dbg !5249
  br i1 %cmp30, label %if.end32, label %cleanup155, !dbg !5250

if.end32:                                         ; preds = %if.end18
  %cmp35 = icmp eq i32 %bf.clear4, 10, !dbg !5251
  br i1 %cmp35, label %land.lhs.true36, label %if.end52, !dbg !5253

land.lhs.true36:                                  ; preds = %if.end32
  %arrayidx39 = getelementptr inbounds %union.u, %union.u* %u19, i64 1, i32 0, i32 1, !dbg !5254
  %rt_rtx40 = bitcast %struct.object_block** %arrayidx39 to %struct.rtx_def**, !dbg !5254
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !5254
  %arrayidx43 = getelementptr inbounds %union.u, %union.u* %u22, i64 1, i32 0, i32 1, !dbg !5255
  %rt_rtx44 = bitcast %struct.object_block** %arrayidx43 to %struct.rtx_def**, !dbg !5255
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !5255
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %16, %struct.rtx_def* %17) #6, !dbg !5256
  %tobool = icmp eq i32 %call, 0, !dbg !5256
  br i1 %tobool, label %cleanup155, label %lor.lhs.false, !dbg !5257

lor.lhs.false:                                    ; preds = %land.lhs.true36
  %bf.load45 = load i32, i32* %0, align 8, !dbg !5258
  %bf.load47 = load i32, i32* %1, align 8, !dbg !5259
  %bf.lshr1 = xor i32 %bf.load45, %bf.load47, !dbg !5260
  %18 = and i32 %bf.lshr1, 16777216, !dbg !5260
  %cmp50 = icmp eq i32 %18, 0, !dbg !5260
  br i1 %cmp50, label %if.end52, label %cleanup155, !dbg !5261

if.end52:                                         ; preds = %lor.lhs.false, %if.end32
  %and = and i32 %mode, 4, !dbg !5262
  %tobool53 = icmp eq i32 %and, 0, !dbg !5262
  br i1 %tobool53, label %if.end147, label %land.lhs.true54, !dbg !5263

land.lhs.true54:                                  ; preds = %if.end52
  %call55 = tail call i32 @stack_regs_mentioned(%struct.rtx_def* %i1) #6, !dbg !5264
  %tobool56 = icmp eq i32 %call55, 0, !dbg !5264
  br i1 %tobool56, label %if.end147, label %if.then57, !dbg !5265

if.then57:                                        ; preds = %land.lhs.true54
  call void @llvm.dbg.value(metadata i64 0, metadata !5231, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i64 0, metadata !5232, metadata !DIExpression()), !dbg !5266
  %19 = getelementptr inbounds %union.u, %union.u* %u19, i64 1, i32 0, i32 0, i64 2, !dbg !5267
  br label %for.cond, !dbg !5269

for.cond:                                         ; preds = %for.inc, %if.then57
  %note.0.in.in = phi %union.rtunion_def* [ %19, %if.then57 ], [ %26, %for.inc ]
  %i1_regset.0 = phi i64 [ 0, %if.then57 ], [ %i1_regset.1, %for.inc ], !dbg !5266
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !5270
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !5270
  call void @llvm.dbg.value(metadata i64 %i1_regset.0, metadata !5231, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !5228, metadata !DIExpression()), !dbg !5266
  %tobool62 = icmp eq %struct.rtx_def* %note.0, null, !dbg !5271
  br i1 %tobool62, label %for.end, label %for.body, !dbg !5271

for.body:                                         ; preds = %for.cond
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !5272
  %bf.load63 = load i32, i32* %20, align 8, !dbg !5272
  %bf.clear65 = and i32 %bf.load63, 16711680, !dbg !5272
  %cmp66 = icmp eq i32 %bf.clear65, 65536, !dbg !5275
  br i1 %cmp66, label %land.lhs.true67, label %for.inc, !dbg !5276

land.lhs.true67:                                  ; preds = %for.body
  %arrayidx70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5277
  %21 = bitcast %union.rtunion_def* %arrayidx70 to i32**, !dbg !5277
  %22 = load i32*, i32** %21, align 8, !dbg !5277
  %bf.load72 = load i32, i32* %22, align 8, !dbg !5277
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !5277
  %cmp74 = icmp eq i32 %bf.clear73, 37, !dbg !5277
  br i1 %cmp74, label %land.lhs.true75, label %for.inc, !dbg !5277

land.lhs.true75:                                  ; preds = %land.lhs.true67
  %23 = bitcast i32* %22 to %struct.rtx_def*, !dbg !5277
  %call80 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %23) #8, !dbg !5277
  %24 = and i32 %call80, -8, !dbg !5277
  %cmp81 = icmp eq i32 %24, 8, !dbg !5277
  br i1 %cmp81, label %if.then83, label %for.inc, !dbg !5278

if.then83:                                        ; preds = %land.lhs.true75
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !5277
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !5279
  %call88 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %25) #8, !dbg !5279
  %sh_prom = zext i32 %call88 to i64, !dbg !5279
  %shl = shl i64 1, %sh_prom, !dbg !5279
  %or = or i64 %i1_regset.0, %shl, !dbg !5279
  call void @llvm.dbg.value(metadata i64 %or, metadata !5231, metadata !DIExpression()), !dbg !5266
  br label %for.inc, !dbg !5279

for.inc:                                          ; preds = %for.body, %land.lhs.true67, %land.lhs.true75, %if.then83
  %i1_regset.1 = phi i64 [ %or, %if.then83 ], [ %i1_regset.0, %land.lhs.true75 ], [ %i1_regset.0, %land.lhs.true67 ], [ %i1_regset.0, %for.body ], !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i1_regset.1, metadata !5231, metadata !DIExpression()), !dbg !5266
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5280
  br label %for.cond, !dbg !5281, !llvm.loop !5282

for.end:                                          ; preds = %for.cond
  %i1_regset.0.lcssa = phi i64 [ %i1_regset.0, %for.cond ], !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i1_regset.0.lcssa, metadata !5231, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i1_regset.0.lcssa, metadata !5231, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i1_regset.0.lcssa, metadata !5231, metadata !DIExpression()), !dbg !5266
  %27 = getelementptr inbounds %union.u, %union.u* %u22, i64 1, i32 0, i32 0, i64 2, !dbg !5284
  br label %for.cond98, !dbg !5286

for.cond98:                                       ; preds = %for.inc135, %for.end
  %note.1.in.in = phi %union.rtunion_def* [ %27, %for.end ], [ %34, %for.inc135 ]
  %i2_regset.0 = phi i64 [ 0, %for.end ], [ %i2_regset.1, %for.inc135 ], !dbg !5266
  %note.1.in = bitcast %union.rtunion_def* %note.1.in.in to %struct.rtx_def**, !dbg !5287
  %note.1 = load %struct.rtx_def*, %struct.rtx_def** %note.1.in, align 8, !dbg !5287
  call void @llvm.dbg.value(metadata i64 %i2_regset.0, metadata !5232, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.1, metadata !5228, metadata !DIExpression()), !dbg !5266
  %tobool99 = icmp eq %struct.rtx_def* %note.1, null, !dbg !5288
  br i1 %tobool99, label %for.end140, label %for.body100, !dbg !5288

for.body100:                                      ; preds = %for.cond98
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 0, !dbg !5289
  %bf.load101 = load i32, i32* %28, align 8, !dbg !5289
  %bf.clear103 = and i32 %bf.load101, 16711680, !dbg !5289
  %cmp104 = icmp eq i32 %bf.clear103, 65536, !dbg !5292
  br i1 %cmp104, label %land.lhs.true106, label %for.inc135, !dbg !5293

land.lhs.true106:                                 ; preds = %for.body100
  %arrayidx109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5294
  %29 = bitcast %union.rtunion_def* %arrayidx109 to i32**, !dbg !5294
  %30 = load i32*, i32** %29, align 8, !dbg !5294
  %bf.load111 = load i32, i32* %30, align 8, !dbg !5294
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !5294
  %cmp113 = icmp eq i32 %bf.clear112, 37, !dbg !5294
  br i1 %cmp113, label %land.lhs.true115, label %for.inc135, !dbg !5294

land.lhs.true115:                                 ; preds = %land.lhs.true106
  %31 = bitcast i32* %30 to %struct.rtx_def*, !dbg !5294
  %call120 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %31) #8, !dbg !5294
  %32 = and i32 %call120, -8, !dbg !5294
  %cmp123 = icmp eq i32 %32, 8, !dbg !5294
  br i1 %cmp123, label %if.then125, label %for.inc135, !dbg !5295

if.then125:                                       ; preds = %land.lhs.true115
  %rt_rtx119 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**, !dbg !5294
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx119, align 8, !dbg !5296
  %call130 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %33) #8, !dbg !5296
  %sh_prom131 = zext i32 %call130 to i64, !dbg !5296
  %shl132 = shl i64 1, %sh_prom131, !dbg !5296
  %or133 = or i64 %i2_regset.0, %shl132, !dbg !5296
  call void @llvm.dbg.value(metadata i64 %or133, metadata !5232, metadata !DIExpression()), !dbg !5266
  br label %for.inc135, !dbg !5296

for.inc135:                                       ; preds = %for.body100, %land.lhs.true106, %land.lhs.true115, %if.then125
  %i2_regset.1 = phi i64 [ %or133, %if.then125 ], [ %i2_regset.0, %land.lhs.true115 ], [ %i2_regset.0, %land.lhs.true106 ], [ %i2_regset.0, %for.body100 ], !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i2_regset.1, metadata !5232, metadata !DIExpression()), !dbg !5266
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5297
  br label %for.cond98, !dbg !5298, !llvm.loop !5299

for.end140:                                       ; preds = %for.cond98
  %i2_regset.0.lcssa = phi i64 [ %i2_regset.0, %for.cond98 ], !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i2_regset.0.lcssa, metadata !5232, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i2_regset.0.lcssa, metadata !5232, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i64 %i2_regset.0.lcssa, metadata !5232, metadata !DIExpression()), !dbg !5266
  %call141 = tail call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %i1_regset.0.lcssa, i64 %i2_regset.0.lcssa) #8, !dbg !5301
  %tobool142 = icmp eq i8 %call141, 0, !dbg !5301
  br i1 %tobool142, label %cleanup155, label %if.end147

if.end147:                                        ; preds = %for.end140, %land.lhs.true54, %if.end52
  %35 = load i32, i32* @reload_completed, align 4, !dbg !5303
  %tobool148 = icmp eq i32 %35, 0, !dbg !5303
  br i1 %tobool148, label %cond.false, label %cond.true, !dbg !5305

cond.true:                                        ; preds = %if.end147
  %call149 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %9, %struct.rtx_def* %11) #6, !dbg !5306
  %tobool150 = icmp eq i32 %call149, 0, !dbg !5306
  br i1 %tobool150, label %if.end154, label %cleanup155, !dbg !5303

cond.false:                                       ; preds = %if.end147
  %call151 = tail call i32 @rtx_equal_p(%struct.rtx_def* %9, %struct.rtx_def* %11) #6, !dbg !5307
  %tobool152 = icmp eq i32 %call151, 0, !dbg !5307
  br i1 %tobool152, label %if.end154, label %cleanup155, !dbg !5305

if.end154:                                        ; preds = %cond.true, %cond.false
  br label %cleanup155, !dbg !5308

cleanup155:                                       ; preds = %lor.lhs.false, %land.lhs.true36, %for.end140, %cond.true, %cond.false, %if.end18, %entry, %land.lhs.true11, %if.end154
  %retval.1 = phi i8 [ 0, %for.end140 ], [ 0, %if.end154 ], [ 0, %entry ], [ 1, %land.lhs.true11 ], [ 0, %if.end18 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true36 ], [ 1, %cond.false ], [ 1, %cond.true ]
  ret i8 %retval.1, !dbg !5309
}

declare dso_local i32 @stack_regs_mentioned(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_equal_p(i64 %x, i64 %y) unnamed_addr #0 !dbg !5310 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !5315, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.value(metadata i64 %y, metadata !5316, metadata !DIExpression()), !dbg !5317
  %cmp = icmp eq i64 %x, %y, !dbg !5318
  %conv1 = zext i1 %cmp to i8, !dbg !5319
  ret i8 %conv1, !dbg !5320
}

declare dso_local i32 @returnjump_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_memattrs(%struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !5321 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5325, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !5326, metadata !DIExpression()), !dbg !5337
  %cmp = icmp eq %struct.rtx_def* %x, %y, !dbg !5338
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5340

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq %struct.rtx_def* %x, null, !dbg !5341
  %cmp2 = icmp eq %struct.rtx_def* %y, null, !dbg !5343
  %or.cond = or i1 %cmp1, %cmp2, !dbg !5344
  br i1 %or.cond, label %cleanup, label %if.end4, !dbg !5344

if.end4:                                          ; preds = %if.end
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5345
  %bf.load = load i32, i32* %0, align 8, !dbg !5345
  %bf.clear = and i32 %bf.load, 65535, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5329, metadata !DIExpression()), !dbg !5337
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !5346
  %bf.load5 = load i32, i32* %1, align 8, !dbg !5346
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5346
  %cmp7 = icmp eq i32 %bf.clear, %bf.clear6, !dbg !5348
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !5349

if.end9:                                          ; preds = %if.end4
  %bf.lshr1 = xor i32 %bf.load, %bf.load5, !dbg !5350
  %2 = and i32 %bf.lshr1, 16711680, !dbg !5350
  %cmp15 = icmp eq i32 %2, 0, !dbg !5350
  br i1 %cmp15, label %if.end17, label %cleanup, !dbg !5352

if.end17:                                         ; preds = %if.end9
  %cmp18 = icmp eq i32 %bf.clear, 43, !dbg !5353
  br i1 %cmp18, label %land.lhs.true, label %if.end421, !dbg !5354

land.lhs.true:                                    ; preds = %if.end17
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5355
  %rt_mem = bitcast %union.rtunion_def* %3 to %struct.mem_attrs**, !dbg !5355
  %4 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5355
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5356
  %rt_mem22 = bitcast %union.rtunion_def* %5 to %struct.mem_attrs**, !dbg !5356
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5356
  %cmp23 = icmp eq %struct.mem_attrs* %4, %6, !dbg !5357
  br i1 %cmp23, label %if.end421, label %if.then24, !dbg !5358

if.then24:                                        ; preds = %land.lhs.true
  %tobool = icmp eq %struct.mem_attrs* %4, null, !dbg !5359
  br i1 %tobool, label %if.then29, label %if.else, !dbg !5360

if.then29:                                        ; preds = %if.then24
  store %struct.mem_attrs* null, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5361
  br label %if.end421, !dbg !5362

if.else:                                          ; preds = %if.then24
  %tobool38 = icmp eq %struct.mem_attrs* %6, null, !dbg !5363
  br i1 %tobool38, label %if.then39, label %if.else44, !dbg !5364

if.then39:                                        ; preds = %if.else
  store %struct.mem_attrs* null, %struct.mem_attrs** %rt_mem, align 8, !dbg !5365
  br label %if.end421, !dbg !5366

if.else44:                                        ; preds = %if.else
  br i1 false, label %if.else44.cond.end_crit_edge, label %cond.false, !dbg !5367

if.else44.cond.end_crit_edge:                     ; preds = %if.else44
  br label %cond.end, !dbg !5367

cond.false:                                       ; preds = %if.else44
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %4, i64 0, i32 3, !dbg !5367
  %7 = load i32, i32* %alias, align 8, !dbg !5367
  br label %cond.end, !dbg !5367

cond.end:                                         ; preds = %if.else44.cond.end_crit_edge, %cond.false
  %cond = phi i32 [ %7, %cond.false ], [ undef, %if.else44.cond.end_crit_edge ], !dbg !5367
  br i1 false, label %cond.end.cond.end66_crit_edge, label %cond.false60, !dbg !5369

cond.end.cond.end66_crit_edge:                    ; preds = %cond.end
  br label %cond.end66, !dbg !5369

cond.false60:                                     ; preds = %cond.end
  %alias65 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %6, i64 0, i32 3, !dbg !5369
  %8 = load i32, i32* %alias65, align 8, !dbg !5369
  br label %cond.end66, !dbg !5369

cond.end66:                                       ; preds = %cond.end.cond.end66_crit_edge, %cond.false60
  %cond67 = phi i32 [ %8, %cond.false60 ], [ undef, %cond.end.cond.end66_crit_edge ], !dbg !5369
  %cmp68 = icmp eq i32 %cond, %cond67, !dbg !5370
  br i1 %cmp68, label %if.end70, label %if.then69, !dbg !5371

if.then69:                                        ; preds = %cond.end66
  tail call void @set_mem_alias_set(%struct.rtx_def* %x, i32 0) #6, !dbg !5372
  tail call void @set_mem_alias_set(%struct.rtx_def* %y, i32 0) #6, !dbg !5374
  %.pre = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5375
  br label %if.end70, !dbg !5377

if.end70:                                         ; preds = %cond.end66, %if.then69
  %9 = phi %struct.mem_attrs* [ %4, %cond.end66 ], [ %.pre, %if.then69 ], !dbg !5375
  %cmp75 = icmp eq %struct.mem_attrs* %9, null, !dbg !5375
  br i1 %cmp75, label %cond.end82, label %cond.false77, !dbg !5375

cond.false77:                                     ; preds = %if.end70
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i64 0, i32 0, !dbg !5375
  %10 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !5375
  br label %cond.end82, !dbg !5375

cond.end82:                                       ; preds = %if.end70, %cond.false77
  %cond83 = phi %union.tree_node* [ %10, %cond.false77 ], [ null, %if.end70 ], !dbg !5375
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5378
  %cmp88 = icmp eq %struct.mem_attrs* %11, null, !dbg !5378
  br i1 %cmp88, label %cond.end96, label %cond.false90, !dbg !5378

cond.false90:                                     ; preds = %cond.end82
  %expr95 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %11, i64 0, i32 0, !dbg !5378
  %12 = load %union.tree_node*, %union.tree_node** %expr95, align 8, !dbg !5378
  br label %cond.end96, !dbg !5378

cond.end96:                                       ; preds = %cond.end82, %cond.false90
  %cond97 = phi %union.tree_node* [ %12, %cond.false90 ], [ null, %cond.end82 ], !dbg !5378
  %call = tail call i32 @mem_expr_equal_p(%union.tree_node* %cond83, %union.tree_node* %cond97) #6, !dbg !5379
  %tobool98 = icmp eq i32 %call, 0, !dbg !5379
  br i1 %tobool98, label %if.then99, label %if.else100, !dbg !5380

if.then99:                                        ; preds = %cond.end96
  tail call void @set_mem_expr(%struct.rtx_def* %x, %union.tree_node* null) #6, !dbg !5381
  tail call void @set_mem_expr(%struct.rtx_def* %y, %union.tree_node* null) #6, !dbg !5383
  tail call void @set_mem_offset(%struct.rtx_def* %x, %struct.rtx_def* null) #6, !dbg !5384
  tail call void @set_mem_offset(%struct.rtx_def* %y, %struct.rtx_def* null) #6, !dbg !5385
  br label %if.end131, !dbg !5386

if.else100:                                       ; preds = %cond.end96
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5387
  %cmp105 = icmp eq %struct.mem_attrs* %13, null, !dbg !5387
  br i1 %cmp105, label %cond.end112, label %cond.false107, !dbg !5387

cond.false107:                                    ; preds = %if.else100
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %13, i64 0, i32 1, !dbg !5387
  %14 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !5387
  br label %cond.end112, !dbg !5387

cond.end112:                                      ; preds = %if.else100, %cond.false107
  %cond113 = phi %struct.rtx_def* [ %14, %cond.false107 ], [ null, %if.else100 ], !dbg !5387
  %15 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5389
  %cmp118 = icmp eq %struct.mem_attrs* %15, null, !dbg !5389
  br i1 %cmp118, label %cond.end126, label %cond.false120, !dbg !5389

cond.false120:                                    ; preds = %cond.end112
  %offset125 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %15, i64 0, i32 1, !dbg !5389
  %16 = load %struct.rtx_def*, %struct.rtx_def** %offset125, align 8, !dbg !5389
  br label %cond.end126, !dbg !5389

cond.end126:                                      ; preds = %cond.end112, %cond.false120
  %cond127 = phi %struct.rtx_def* [ %16, %cond.false120 ], [ null, %cond.end112 ], !dbg !5389
  %cmp128 = icmp eq %struct.rtx_def* %cond113, %cond127, !dbg !5390
  br i1 %cmp128, label %if.end131, label %if.then129, !dbg !5391

if.then129:                                       ; preds = %cond.end126
  tail call void @set_mem_offset(%struct.rtx_def* %x, %struct.rtx_def* null) #6, !dbg !5392
  tail call void @set_mem_offset(%struct.rtx_def* %y, %struct.rtx_def* null) #6, !dbg !5394
  br label %if.end131, !dbg !5395

if.end131:                                        ; preds = %cond.end126, %if.then129, %if.then99
  %17 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5396
  %cmp136 = icmp eq %struct.mem_attrs* %17, null, !dbg !5396
  br i1 %cmp136, label %cond.false143, label %cond.true137, !dbg !5398

cond.true137:                                     ; preds = %if.end131
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %17, i64 0, i32 2, !dbg !5396
  %18 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !5396
  %tobool142 = icmp eq %struct.rtx_def* %18, null, !dbg !5396
  br i1 %tobool142, label %if.end338, label %if.else158, !dbg !5396

cond.false143:                                    ; preds = %if.end131
  %bf.load144 = load i32, i32* %0, align 8, !dbg !5396
  %bf.clear146 = and i32 %bf.load144, 16711680, !dbg !5396
  %cmp147 = icmp eq i32 %bf.clear146, 65536, !dbg !5396
  br i1 %cmp147, label %if.end338, label %cond.true148, !dbg !5398

cond.true148:                                     ; preds = %cond.false143
  %bf.lshr150 = lshr i32 %bf.load144, 16, !dbg !5396
  %bf.clear151 = and i32 %bf.lshr150, 255, !dbg !5396
  %idxprom = zext i32 %bf.clear151 to i64, !dbg !5396
  %arrayidx152 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5396
  %19 = load i8, i8* %arrayidx152, align 1, !dbg !5396
  %conv153 = zext i8 %19 to i64, !dbg !5396
  %call154 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv153) #6, !dbg !5396
  %tobool155 = icmp eq %struct.rtx_def* %call154, null, !dbg !5396
  br i1 %tobool155, label %if.end338, label %if.else158, !dbg !5396

if.else158:                                       ; preds = %cond.true137, %cond.true148
  %20 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5399
  %cmp163 = icmp eq %struct.mem_attrs* %20, null, !dbg !5399
  br i1 %cmp163, label %cond.false172, label %cond.true165, !dbg !5401

cond.true165:                                     ; preds = %if.else158
  %size170 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %20, i64 0, i32 2, !dbg !5399
  %21 = load %struct.rtx_def*, %struct.rtx_def** %size170, align 8, !dbg !5399
  %tobool171 = icmp eq %struct.rtx_def* %21, null, !dbg !5399
  br i1 %tobool171, label %if.end338, label %if.else190, !dbg !5399

cond.false172:                                    ; preds = %if.else158
  %bf.load173 = load i32, i32* %1, align 8, !dbg !5399
  %bf.clear175 = and i32 %bf.load173, 16711680, !dbg !5399
  %cmp176 = icmp eq i32 %bf.clear175, 65536, !dbg !5399
  br i1 %cmp176, label %if.end338, label %cond.true178, !dbg !5401

cond.true178:                                     ; preds = %cond.false172
  %bf.lshr180 = lshr i32 %bf.load173, 16, !dbg !5399
  %bf.clear181 = and i32 %bf.lshr180, 255, !dbg !5399
  %idxprom182 = zext i32 %bf.clear181 to i64, !dbg !5399
  %arrayidx183 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom182, !dbg !5399
  %22 = load i8, i8* %arrayidx183, align 1, !dbg !5399
  %conv185 = zext i8 %22 to i64, !dbg !5399
  %call186 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv185) #6, !dbg !5399
  %tobool187 = icmp eq %struct.rtx_def* %call186, null, !dbg !5399
  br i1 %tobool187, label %if.end338, label %if.else190, !dbg !5399

if.else190:                                       ; preds = %cond.true165, %cond.true178
  %23 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5402
  %cmp195 = icmp eq %struct.mem_attrs* %23, null, !dbg !5402
  br i1 %cmp195, label %cond.false203, label %cond.true197, !dbg !5402

cond.true197:                                     ; preds = %if.else190
  %size202 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %23, i64 0, i32 2, !dbg !5402
  %24 = load %struct.rtx_def*, %struct.rtx_def** %size202, align 8, !dbg !5402
  br label %cond.end221, !dbg !5402

cond.false203:                                    ; preds = %if.else190
  %bf.load210 = load i32, i32* %0, align 8, !dbg !5402
  %bf.lshr211 = lshr i32 %bf.load210, 16, !dbg !5402
  %bf.clear212 = and i32 %bf.lshr211, 255, !dbg !5402
  %idxprom213 = zext i32 %bf.clear212 to i64, !dbg !5402
  %arrayidx214 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom213, !dbg !5402
  %25 = load i8, i8* %arrayidx214, align 1, !dbg !5402
  %conv216 = zext i8 %25 to i64, !dbg !5402
  %call217 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv216) #6, !dbg !5402
  br label %cond.end221, !dbg !5402

cond.end221:                                      ; preds = %cond.false203, %cond.true197
  %cond222 = phi %struct.rtx_def* [ %24, %cond.true197 ], [ %call217, %cond.false203 ], !dbg !5402
  %u223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond222, i64 0, i32 1, !dbg !5402
  %arrayidx224 = bitcast %union.u* %u223 to i64*, !dbg !5402
  %26 = load i64, i64* %arrayidx224, align 8, !dbg !5402
  %27 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5402
  %cmp229 = icmp eq %struct.mem_attrs* %27, null, !dbg !5402
  br i1 %cmp229, label %cond.false237, label %cond.true231, !dbg !5402

cond.true231:                                     ; preds = %cond.end221
  %size236 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %27, i64 0, i32 2, !dbg !5402
  %28 = load %struct.rtx_def*, %struct.rtx_def** %size236, align 8, !dbg !5402
  br label %cond.end255, !dbg !5402

cond.false237:                                    ; preds = %cond.end221
  %bf.load244 = load i32, i32* %1, align 8, !dbg !5402
  %bf.lshr245 = lshr i32 %bf.load244, 16, !dbg !5402
  %bf.clear246 = and i32 %bf.lshr245, 255, !dbg !5402
  %idxprom247 = zext i32 %bf.clear246 to i64, !dbg !5402
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom247, !dbg !5402
  %29 = load i8, i8* %arrayidx248, align 1, !dbg !5402
  %conv250 = zext i8 %29 to i64, !dbg !5402
  %call251 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv250) #6, !dbg !5402
  br label %cond.end255, !dbg !5402

cond.end255:                                      ; preds = %cond.false237, %cond.true231
  %cond256 = phi %struct.rtx_def* [ %28, %cond.true231 ], [ %call251, %cond.false237 ], !dbg !5402
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond256, i64 0, i32 1, !dbg !5402
  %arrayidx259 = bitcast %union.u* %u257 to i64*, !dbg !5402
  %30 = load i64, i64* %arrayidx259, align 8, !dbg !5402
  %cmp260 = icmp sgt i64 %26, %30, !dbg !5402
  br i1 %cmp260, label %cond.true262, label %cond.false298, !dbg !5402

cond.true262:                                     ; preds = %cond.end255
  %31 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5402
  %cmp267 = icmp eq %struct.mem_attrs* %31, null, !dbg !5402
  br i1 %cmp267, label %cond.false275, label %cond.true269, !dbg !5402

cond.true269:                                     ; preds = %cond.true262
  %size274 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %31, i64 0, i32 2, !dbg !5402
  %32 = load %struct.rtx_def*, %struct.rtx_def** %size274, align 8, !dbg !5402
  br label %cond.end293, !dbg !5402

cond.false275:                                    ; preds = %cond.true262
  %bf.load282 = load i32, i32* %0, align 8, !dbg !5402
  %bf.lshr283 = lshr i32 %bf.load282, 16, !dbg !5402
  %bf.clear284 = and i32 %bf.lshr283, 255, !dbg !5402
  %idxprom285 = zext i32 %bf.clear284 to i64, !dbg !5402
  %arrayidx286 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom285, !dbg !5402
  %33 = load i8, i8* %arrayidx286, align 1, !dbg !5402
  %conv288 = zext i8 %33 to i64, !dbg !5402
  %call289 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv288) #6, !dbg !5402
  br label %cond.end293, !dbg !5402

cond.end293:                                      ; preds = %cond.false275, %cond.true269
  %cond294 = phi %struct.rtx_def* [ %32, %cond.true269 ], [ %call289, %cond.false275 ], !dbg !5402
  br label %cond.end334, !dbg !5402

cond.false298:                                    ; preds = %cond.end255
  %34 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5402
  %cmp303 = icmp eq %struct.mem_attrs* %34, null, !dbg !5402
  br i1 %cmp303, label %cond.false311, label %cond.true305, !dbg !5402

cond.true305:                                     ; preds = %cond.false298
  %size310 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %34, i64 0, i32 2, !dbg !5402
  %35 = load %struct.rtx_def*, %struct.rtx_def** %size310, align 8, !dbg !5402
  br label %cond.end329, !dbg !5402

cond.false311:                                    ; preds = %cond.false298
  %bf.load318 = load i32, i32* %1, align 8, !dbg !5402
  %bf.lshr319 = lshr i32 %bf.load318, 16, !dbg !5402
  %bf.clear320 = and i32 %bf.lshr319, 255, !dbg !5402
  %idxprom321 = zext i32 %bf.clear320 to i64, !dbg !5402
  %arrayidx322 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom321, !dbg !5402
  %36 = load i8, i8* %arrayidx322, align 1, !dbg !5402
  %conv324 = zext i8 %36 to i64, !dbg !5402
  %call325 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv324) #6, !dbg !5402
  br label %cond.end329, !dbg !5402

cond.end329:                                      ; preds = %cond.false311, %cond.true305
  %cond330 = phi %struct.rtx_def* [ %35, %cond.true305 ], [ %call325, %cond.false311 ], !dbg !5402
  br label %cond.end334, !dbg !5402

cond.end334:                                      ; preds = %cond.end329, %cond.end293
  %cond294.pn = phi %struct.rtx_def* [ %cond294, %cond.end293 ], [ %cond330, %cond.end329 ]
  %cond335.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond294.pn, i64 0, i32 1, !dbg !5402
  %cond335.in = bitcast %union.u* %cond335.in.in to i64*, !dbg !5402
  %cond335 = load i64, i64* %cond335.in, align 8, !dbg !5402
  %call336 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %cond335) #6, !dbg !5402
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call336, metadata !5331, metadata !DIExpression()), !dbg !5403
  br label %if.end338

if.end338:                                        ; preds = %cond.true137, %cond.true165, %cond.true178, %cond.false172, %cond.true148, %cond.false143, %cond.end334
  %mem_size.1 = phi %struct.rtx_def* [ null, %cond.false143 ], [ null, %cond.true148 ], [ null, %cond.true137 ], [ %call336, %cond.end334 ], [ null, %cond.false172 ], [ null, %cond.true178 ], [ null, %cond.true165 ], !dbg !5404
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem_size.1, metadata !5331, metadata !DIExpression()), !dbg !5403
  tail call void @set_mem_size(%struct.rtx_def* %x, %struct.rtx_def* %mem_size.1) #6, !dbg !5405
  tail call void @set_mem_size(%struct.rtx_def* %y, %struct.rtx_def* %mem_size.1) #6, !dbg !5406
  %37 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5407
  %cmp343 = icmp eq %struct.mem_attrs* %37, null, !dbg !5407
  br i1 %cmp343, label %cond.end351, label %cond.true345, !dbg !5407

cond.true345:                                     ; preds = %if.end338
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %37, i64 0, i32 4, !dbg !5407
  %38 = load i32, i32* %align, align 4, !dbg !5407
  br label %cond.end351, !dbg !5407

cond.end351:                                      ; preds = %if.end338, %cond.true345
  %cond352 = phi i32 [ %38, %cond.true345 ], [ 8, %if.end338 ], !dbg !5407
  %39 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !5407
  %cmp357 = icmp eq %struct.mem_attrs* %39, null, !dbg !5407
  br i1 %cmp357, label %cond.end366, label %cond.true359, !dbg !5407

cond.true359:                                     ; preds = %cond.end351
  %align364 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %39, i64 0, i32 4, !dbg !5407
  %40 = load i32, i32* %align364, align 4, !dbg !5407
  br label %cond.end366, !dbg !5407

cond.end366:                                      ; preds = %cond.end351, %cond.true359
  %cond367 = phi i32 [ %40, %cond.true359 ], [ 8, %cond.end351 ], !dbg !5407
  %cmp368 = icmp ult i32 %cond352, %cond367, !dbg !5407
  br i1 %cmp368, label %cond.true370, label %cond.false386, !dbg !5407

cond.true370:                                     ; preds = %cond.end366
  br i1 %cmp343, label %cond.end402, label %cond.true377, !dbg !5407

cond.true377:                                     ; preds = %cond.true370
  %align382 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %37, i64 0, i32 4, !dbg !5407
  %41 = load i32, i32* %align382, align 4, !dbg !5407
  br label %cond.end402, !dbg !5407

cond.false386:                                    ; preds = %cond.end366
  br i1 %cmp357, label %cond.end402, label %cond.true393, !dbg !5407

cond.true393:                                     ; preds = %cond.false386
  %align398 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %39, i64 0, i32 4, !dbg !5407
  %42 = load i32, i32* %align398, align 4, !dbg !5407
  br label %cond.end402, !dbg !5407

cond.end402:                                      ; preds = %cond.true370, %cond.false386, %cond.true393, %cond.true377
  %cond403 = phi i32 [ %41, %cond.true377 ], [ 8, %cond.true370 ], [ %42, %cond.true393 ], [ 8, %cond.false386 ], !dbg !5407
  tail call void @set_mem_align(%struct.rtx_def* %x, i32 %cond403) #6, !dbg !5408
  %43 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5409
  %cmp408 = icmp eq %struct.mem_attrs* %43, null, !dbg !5409
  br i1 %cmp408, label %cond.end417, label %cond.true410, !dbg !5409

cond.true410:                                     ; preds = %cond.end402
  %align415 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %43, i64 0, i32 4, !dbg !5409
  %44 = load i32, i32* %align415, align 4, !dbg !5409
  br label %cond.end417, !dbg !5409

cond.end417:                                      ; preds = %cond.end402, %cond.true410
  %cond418 = phi i32 [ %44, %cond.true410 ], [ 8, %cond.end402 ], !dbg !5409
  tail call void @set_mem_align(%struct.rtx_def* %y, i32 %cond418) #6, !dbg !5410
  br label %if.end421

if.end421:                                        ; preds = %land.lhs.true, %if.then29, %cond.end417, %if.then39, %if.end17
  %idxprom422 = zext i32 %bf.clear to i64, !dbg !5411
  %arrayidx423 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom422, !dbg !5411
  %45 = load i8*, i8** %arrayidx423, align 8, !dbg !5411
  call void @llvm.dbg.value(metadata i8* %45, metadata !5330, metadata !DIExpression()), !dbg !5337
  %arrayidx425 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom422, !dbg !5412
  %46 = load i8, i8* %arrayidx425, align 1, !dbg !5412
  call void @llvm.dbg.value(metadata i8 %46, metadata !5327, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5337
  %u432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !5414
  %fld433 = bitcast %union.u* %u432 to [1 x %union.rtunion_def]*, !dbg !5414
  %u476 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, !dbg !5419
  %fld477 = bitcast %union.u* %u476 to [1 x %union.rtunion_def]*, !dbg !5419
  %47 = zext i8 %46 to i64, !dbg !5420
  br label %for.cond, !dbg !5420

for.cond:                                         ; preds = %for.inc481, %if.end421
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc481 ], [ %47, %if.end421 ]
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !5421
  call void @llvm.dbg.value(metadata i32 undef, metadata !5327, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5337
  %cmp427 = icmp sgt i64 %indvars.iv4, 0, !dbg !5422
  br i1 %cmp427, label %for.body, label %cleanup.loopexit, !dbg !5423

for.body:                                         ; preds = %for.cond
  %arrayidx430 = getelementptr inbounds i8, i8* %45, i64 %indvars.iv.next5, !dbg !5424
  %48 = load i8, i8* %arrayidx430, align 1, !dbg !5424
  %conv431 = sext i8 %48 to i32, !dbg !5424
  switch i32 %conv431, label %for.inc481 [
    i32 69, label %sw.bb
    i32 101, label %sw.bb471
  ], !dbg !5425

sw.bb:                                            ; preds = %for.body
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld433, i64 0, i64 %indvars.iv.next5, !dbg !5414
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtvec_def**, !dbg !5414
  %49 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5414
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %49, i64 0, i32 0, !dbg !5414
  %50 = load i32, i32* %num_elem, align 8, !dbg !5414
  %arrayidx439 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld477, i64 0, i64 %indvars.iv.next5, !dbg !5426
  %rt_rtvec440 = bitcast %union.rtunion_def* %arrayidx439 to %struct.rtvec_def**, !dbg !5426
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec440, align 8, !dbg !5426
  %num_elem441 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i64 0, i32 0, !dbg !5426
  %52 = load i32, i32* %num_elem441, align 8, !dbg !5426
  %cmp442 = icmp eq i32 %50, %52, !dbg !5427
  br i1 %cmp442, label %for.cond446.preheader, label %cleanup.loopexit, !dbg !5428

for.cond446.preheader:                            ; preds = %sw.bb
  br label %for.cond446, !dbg !5429

for.cond446:                                      ; preds = %for.cond446.preheader, %for.body455
  %indvars.iv = phi i64 [ 0, %for.cond446.preheader ], [ %indvars.iv.next, %for.body455 ], !dbg !5431
  %53 = phi i32 [ %50, %for.cond446.preheader ], [ %.pre3, %for.body455 ], !dbg !5431
  %54 = phi %struct.rtvec_def* [ %49, %for.cond446.preheader ], [ %.pre2, %for.body455 ], !dbg !5431
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5328, metadata !DIExpression()), !dbg !5337
  %55 = sext i32 %53 to i64, !dbg !5433
  %cmp453 = icmp slt i64 %indvars.iv, %55, !dbg !5433
  br i1 %cmp453, label %for.body455, label %for.inc481.loopexit, !dbg !5429

for.body455:                                      ; preds = %for.cond446
  %arrayidx462 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %54, i64 0, i32 1, i64 %indvars.iv, !dbg !5434
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx462, align 8, !dbg !5434
  %57 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec440, align 8, !dbg !5435
  %arrayidx470 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %57, i64 0, i32 1, i64 %indvars.iv, !dbg !5435
  %58 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx470, align 8, !dbg !5435
  tail call fastcc void @merge_memattrs(%struct.rtx_def* %56, %struct.rtx_def* %58) #8, !dbg !5436
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5437
  call void @llvm.dbg.value(metadata i32 undef, metadata !5328, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5337
  %.pre2 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5431
  %num_elem452.phi.trans.insert = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %.pre2, i64 0, i32 0, !dbg !5438
  %.pre3 = load i32, i32* %num_elem452.phi.trans.insert, align 8, !dbg !5431
  br label %for.cond446, !dbg !5439, !llvm.loop !5440

sw.bb471:                                         ; preds = %for.body
  %arrayidx475 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld433, i64 0, i64 %indvars.iv.next5, !dbg !5442
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx475 to %struct.rtx_def**, !dbg !5442
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5442
  %arrayidx479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld477, i64 0, i64 %indvars.iv.next5, !dbg !5443
  %rt_rtx480 = bitcast %union.rtunion_def* %arrayidx479 to %struct.rtx_def**, !dbg !5443
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx480, align 8, !dbg !5443
  tail call fastcc void @merge_memattrs(%struct.rtx_def* %59, %struct.rtx_def* %60) #8, !dbg !5444
  br label %for.inc481, !dbg !5445

for.inc481.loopexit:                              ; preds = %for.cond446
  br label %for.inc481, !dbg !5446

for.inc481:                                       ; preds = %for.inc481.loopexit, %for.body, %sw.bb471
  call void @llvm.dbg.value(metadata i32 undef, metadata !5327, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5337
  br label %for.cond, !dbg !5446, !llvm.loop !5447

cleanup.loopexit:                                 ; preds = %for.cond, %sw.bb
  br label %cleanup, !dbg !5449

cleanup:                                          ; preds = %cleanup.loopexit, %if.end9, %if.end4, %if.end, %entry
  ret void, !dbg !5449
}

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_mem_alias_set(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local i32 @mem_expr_equal_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @set_mem_expr(%struct.rtx_def*, %union.tree_node*) local_unnamed_addr #1

declare dso_local void @set_mem_offset(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

declare dso_local void @set_mem_size(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_mem_align(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @fixup_tail_calls() local_unnamed_addr #1

declare dso_local void @dump_flow_info(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1950, !1951, !1952}
!llvm.ident = !{!1953}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1 = distinct !DIGlobalVariable(name: "crossjumps_occured", scope: !2, file: !3, line: 66, type: !752, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !750, globals: !1915, nameTableKind: None)
!3 = !DIFile(filename: "cfgcleanup.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !154, !158, !163, !182, !189, !196, !390, !533, !540, !716}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !146, line: 31, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149, !150, !151, !152, !153}
!148 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !146, line: 91, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157}
!156 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !159, line: 474, baseType: !7, size: 32, elements: !160)
!159 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !164, line: 280, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!166 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !164, line: 1817, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188}
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !164, line: 1805, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !164, line: 39, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!198 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!228 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!229 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!230 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!231 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!232 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!233 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!234 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!235 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!236 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!237 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!238 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!239 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!241 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!242 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!243 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!244 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!245 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!246 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!247 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!248 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!249 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!250 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!251 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!252 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!253 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!254 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!255 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!256 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!257 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!258 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!259 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!260 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!261 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!262 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!263 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!264 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!265 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!266 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!267 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!268 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!269 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!270 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!271 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!272 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!273 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!274 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!275 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!276 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!277 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!278 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!280 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!281 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!282 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!283 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!284 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!287 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!288 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!293 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!294 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!295 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!296 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!297 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!298 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!299 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!300 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!301 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!302 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!303 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!304 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!305 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!306 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!307 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!308 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!309 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!310 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!311 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!312 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!313 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!314 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!315 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!316 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!317 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!318 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!320 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!321 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!322 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!323 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!324 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!325 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!326 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!327 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!328 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!329 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!330 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!331 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!332 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!333 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!334 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!335 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!336 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!337 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!338 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!339 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!340 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!341 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!342 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!343 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!344 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!345 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!346 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!347 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!348 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!349 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!350 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!363 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!364 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!365 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!366 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!367 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!383 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!384 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!385 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!386 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!387 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!388 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!389 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !391, line: 45, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532}
!393 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!401 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!402 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!403 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!404 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!405 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!406 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!407 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!408 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!410 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!411 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!412 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!413 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!414 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!415 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!416 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!417 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!418 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!419 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!420 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!421 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!422 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!423 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!424 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!425 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!427 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!428 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!429 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!430 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!431 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!432 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!433 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!434 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!435 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!436 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!437 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!438 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!439 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!440 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!441 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!442 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!443 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!444 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!445 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!446 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!447 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!448 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!449 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!450 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!451 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!452 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!453 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!454 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!455 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!456 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!457 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!458 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!459 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!460 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!461 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!462 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!463 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!464 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!465 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!466 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!467 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!468 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!469 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!470 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!471 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!472 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!473 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!474 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!475 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!476 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!477 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!478 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!479 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!480 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!481 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!482 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!483 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!484 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!485 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!486 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!487 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!488 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!489 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!490 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!491 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!492 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!493 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!494 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!495 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!496 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!497 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!498 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!499 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!500 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!501 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!502 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!503 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!504 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!505 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!506 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!507 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!508 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!509 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!510 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!511 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!512 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!513 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!514 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!515 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!516 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!517 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!518 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!519 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!521 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!522 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!524 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!525 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!526 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!527 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!528 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!529 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!530 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!531 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!532 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !534, line: 104, baseType: !7, size: 32, elements: !535)
!534 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!535 = !{!536, !537, !538, !539}
!536 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!537 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!538 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!539 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!540 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !541, line: 74, baseType: !7, size: 32, elements: !542)
!541 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!542 = !{!543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!543 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!609 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!610 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!611 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!612 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!613 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!614 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!615 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!616 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!617 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!618 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!619 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!620 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!621 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!622 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!623 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!624 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!625 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!626 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!627 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!628 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!629 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!630 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!631 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!632 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!633 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!634 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!635 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!636 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!637 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!638 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!639 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!640 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!641 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!642 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!643 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!644 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!645 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!646 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!647 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!648 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!649 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!650 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!651 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!652 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!653 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!654 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!655 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!656 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!657 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!658 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!659 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!660 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!661 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!662 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!663 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!664 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!665 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!666 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!667 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!668 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!669 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!670 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!671 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!672 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!673 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!674 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!675 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!676 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!677 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!678 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!679 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!680 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!681 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!682 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!683 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!684 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!685 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!686 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!687 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!688 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!689 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!690 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!691 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!692 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!693 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!694 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!695 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!696 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!697 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!698 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!699 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!709 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!715 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !391, line: 836, baseType: !7, size: 32, elements: !717)
!717 = !{!718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749}
!718 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!719 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!720 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!721 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!722 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!723 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!724 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!725 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!726 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!727 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!728 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!729 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!730 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!731 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!732 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!733 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!734 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!735 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!736 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!737 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!738 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!739 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!740 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!741 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!742 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!743 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!744 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!745 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!746 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!747 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!748 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!749 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!750 = !{!751, !752, !753, !754, !757, !758, !390, !760, !1909, !7, !1910, !5, !1911, !1912, !716, !851, !1914}
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!753 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !756)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !761, line: 50, baseType: !762)
!761 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !391, line: 240, size: 384, elements: !764)
!764 = !{!765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !763, file: !391, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !763, file: !391, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !763, file: !391, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !763, file: !391, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !763, file: !391, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !763, file: !391, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !763, file: !391, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !763, file: !391, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !763, file: !391, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !763, file: !391, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !763, file: !391, line: 321, baseType: !776, size: 320, offset: 64)
!776 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !391, line: 315, size: 320, elements: !777)
!777 = !{!778, !1844, !1846, !1907, !1908}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !776, file: !391, line: 316, baseType: !779, size: 64)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !780, size: 64, elements: !795)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !391, line: 183, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !391, line: 166, size: 64, elements: !782)
!782 = !{!783, !784, !785, !786, !787, !797, !798, !810, !834, !896, !1822, !1823, !1834, !1841}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !781, file: !391, line: 168, baseType: !753, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !781, file: !391, line: 169, baseType: !7, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !781, file: !391, line: 170, baseType: !758, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !781, file: !391, line: 171, baseType: !760, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !781, file: !391, line: 172, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !761, line: 53, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !391, line: 359, size: 128, elements: !791)
!791 = !{!792, !793}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !790, file: !391, line: 360, baseType: !753, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !790, file: !391, line: 361, baseType: !794, size: 64, offset: 64)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 64, elements: !795)
!795 = !{!796}
!796 = !DISubrange(count: 1)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !781, file: !391, line: 173, baseType: !5, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !781, file: !391, line: 174, baseType: !799, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !391, line: 133, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 115, size: 32, elements: !801)
!801 = !{!802, !803, !804, !805, !806, !807, !808, !809}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !800, file: !391, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !800, file: !391, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !800, file: !391, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !800, file: !391, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !800, file: !391, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !800, file: !391, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !800, file: !391, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !800, file: !391, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !781, file: !391, line: 175, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !813, line: 23, size: 320, elements: !814)
!813 = !DIFile(filename: "./cselib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!814 = !{!815, !816, !817, !818, !825, !833}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !812, file: !813, line: 25, baseType: !7, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !812, file: !813, line: 28, baseType: !753, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "val_rtx", scope: !812, file: !813, line: 31, baseType: !760, size: 64, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !812, file: !813, line: 35, baseType: !819, size: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_loc_list", file: !813, line: 45, size: 192, elements: !821)
!821 = !{!822, !823, !824}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !820, file: !813, line: 47, baseType: !819, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !820, file: !813, line: 49, baseType: !760, size: 64, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "setting_insn", scope: !820, file: !813, line: 51, baseType: !760, size: 64, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !812, file: !813, line: 39, baseType: !826, size: 64, offset: 192)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_list", file: !813, line: 55, size: 128, elements: !828)
!828 = !{!829, !830}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !827, file: !813, line: 56, baseType: !826, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !827, file: !813, line: 57, baseType: !831, size: 64, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "cselib_val", file: !813, line: 42, baseType: !812)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "next_containing_mem", scope: !812, file: !813, line: 41, baseType: !811, size: 64, offset: 256)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !781, file: !391, line: 176, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !837, line: 75, size: 256, elements: !838)
!837 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!838 = !{!839, !854, !855, !856}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !836, file: !837, line: 76, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !837, line: 68, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !837, line: 63, size: 320, elements: !843)
!843 = !{!844, !846, !847, !848}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !842, file: !837, line: 64, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !842, file: !837, line: 65, baseType: !845, size: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !842, file: !837, line: 66, baseType: !7, size: 32, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !842, file: !837, line: 67, baseType: !849, size: 128, offset: 192)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, size: 128, elements: !852)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !837, line: 29, baseType: !851)
!851 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!852 = !{!853}
!853 = !DISubrange(count: 2)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !836, file: !837, line: 77, baseType: !840, size: 64, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !836, file: !837, line: 78, baseType: !7, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !836, file: !837, line: 79, baseType: !857, size: 64, offset: 192)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !837, line: 49, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !837, line: 45, size: 832, elements: !860)
!860 = !{!861, !862, !863}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !859, file: !837, line: 46, baseType: !845, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !859, file: !837, line: 47, baseType: !835, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !859, file: !837, line: 48, baseType: !864, size: 704, offset: 128)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !865, line: 164, size: 704, elements: !866)
!865 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!866 = !{!867, !869, !879, !880, !881, !882, !883, !884, !888, !892, !893, !894, !895}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !864, file: !865, line: 166, baseType: !868, size: 64)
!868 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !864, file: !865, line: 167, baseType: !870, size: 64, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !865, line: 157, size: 192, elements: !872)
!872 = !{!873, !874, !875}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !871, file: !865, line: 159, baseType: !755, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !871, file: !865, line: 160, baseType: !870, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !871, file: !865, line: 161, baseType: !876, size: 32, offset: 128)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 32, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 4)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !864, file: !865, line: 168, baseType: !755, size: 64, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !864, file: !865, line: 169, baseType: !755, size: 64, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !864, file: !865, line: 170, baseType: !755, size: 64, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !864, file: !865, line: 171, baseType: !868, size: 64, offset: 320)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !864, file: !865, line: 172, baseType: !753, size: 32, offset: 384)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !864, file: !865, line: 176, baseType: !885, size: 64, offset: 448)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{!870, !757, !868}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !864, file: !865, line: 177, baseType: !889, size: 64, offset: 512)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !757, !870}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !864, file: !865, line: 178, baseType: !757, size: 64, offset: 576)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !864, file: !865, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !864, file: !865, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !864, file: !865, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !781, file: !391, line: 177, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !761, line: 56, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !164, line: 3371, size: 1792, elements: !900)
!900 = !{!901, !934, !940, !951, !970, !981, !986, !993, !999, !1012, !1024, !1062, !1067, !1095, !1103, !1104, !1109, !1118, !1124, !1129, !1133, !1137, !1449, !1498, !1504, !1511, !1518, !1541, !1566, !1583, !1595, !1617, !1632, !1804}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !899, file: !164, line: 3372, baseType: !902, size: 64)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !164, line: 360, size: 64, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !902, file: !164, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !902, file: !164, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !902, file: !164, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !902, file: !164, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !902, file: !164, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !902, file: !164, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !902, file: !164, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !902, file: !164, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !902, file: !164, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !902, file: !164, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !902, file: !164, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !902, file: !164, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !902, file: !164, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !902, file: !164, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !902, file: !164, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !902, file: !164, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !902, file: !164, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !902, file: !164, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !902, file: !164, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !902, file: !164, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !902, file: !164, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !902, file: !164, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !902, file: !164, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !902, file: !164, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !902, file: !164, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !902, file: !164, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !902, file: !164, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !902, file: !164, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !902, file: !164, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !902, file: !164, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !899, file: !164, line: 3373, baseType: !935, size: 192)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !164, line: 402, size: 192, elements: !936)
!936 = !{!937, !938, !939}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !935, file: !164, line: 403, baseType: !902, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !935, file: !164, line: 404, baseType: !897, size: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !935, file: !164, line: 405, baseType: !897, size: 64, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !899, file: !164, line: 3374, baseType: !941, size: 320)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !164, line: 1384, size: 320, elements: !942)
!942 = !{!943, !944}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !941, file: !164, line: 1385, baseType: !935, size: 192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !941, file: !164, line: 1386, baseType: !945, size: 128, offset: 192)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !946, line: 58, baseType: !947)
!946 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !946, line: 54, size: 128, elements: !948)
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !947, file: !946, line: 56, baseType: !851, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !947, file: !946, line: 57, baseType: !868, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !899, file: !164, line: 3375, baseType: !952, size: 256)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !164, line: 1397, size: 256, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !952, file: !164, line: 1398, baseType: !935, size: 192)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !952, file: !164, line: 1399, baseType: !956, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !958, line: 52, size: 256, elements: !959)
!958 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!959 = !{!960, !961, !962, !963, !964, !965, !966}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !957, file: !958, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !957, file: !958, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !957, file: !958, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !957, file: !958, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !957, file: !958, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !957, file: !958, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !957, file: !958, line: 62, baseType: !967, size: 192, offset: 64)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 192, elements: !968)
!968 = !{!969}
!969 = !DISubrange(count: 3)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !899, file: !164, line: 3376, baseType: !971, size: 256)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !164, line: 1408, size: 256, elements: !972)
!972 = !{!973, !974}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !971, file: !164, line: 1409, baseType: !935, size: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !971, file: !164, line: 1410, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !977, line: 27, size: 192, elements: !978)
!977 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!978 = !{!979, !980}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !976, file: !977, line: 29, baseType: !945, size: 128)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !976, file: !977, line: 30, baseType: !5, size: 32, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !899, file: !164, line: 3377, baseType: !982, size: 256)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !164, line: 1437, size: 256, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !982, file: !164, line: 1438, baseType: !935, size: 192)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !982, file: !164, line: 1439, baseType: !897, size: 64, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !899, file: !164, line: 3378, baseType: !987, size: 256)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !164, line: 1418, size: 256, elements: !988)
!988 = !{!989, !990, !991}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !987, file: !164, line: 1419, baseType: !935, size: 192)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !987, file: !164, line: 1420, baseType: !753, size: 32, offset: 192)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !987, file: !164, line: 1421, baseType: !992, size: 8, offset: 224)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 8, elements: !795)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !899, file: !164, line: 3379, baseType: !994, size: 320)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !164, line: 1428, size: 320, elements: !995)
!995 = !{!996, !997, !998}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !994, file: !164, line: 1429, baseType: !935, size: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !994, file: !164, line: 1430, baseType: !897, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !994, file: !164, line: 1431, baseType: !897, size: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !899, file: !164, line: 3380, baseType: !1000, size: 320)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !164, line: 1460, size: 320, elements: !1001)
!1001 = !{!1002, !1003}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1000, file: !164, line: 1461, baseType: !935, size: 192)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1000, file: !164, line: 1462, baseType: !1004, size: 128, offset: 192)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1005, line: 31, size: 128, elements: !1006)
!1005 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1006 = !{!1007, !1010, !1011}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1004, file: !1005, line: 32, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !752)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1004, file: !1005, line: 33, baseType: !7, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1004, file: !1005, line: 34, baseType: !7, size: 32, offset: 96)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !899, file: !164, line: 3381, baseType: !1013, size: 384)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !164, line: 2507, size: 384, elements: !1014)
!1014 = !{!1015, !1016, !1021, !1022, !1023}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1013, file: !164, line: 2508, baseType: !935, size: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1013, file: !164, line: 2509, baseType: !1017, size: 32, offset: 192)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1018, line: 58, baseType: !1019)
!1018 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1020, line: 44, baseType: !7)
!1020 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1013, file: !164, line: 2510, baseType: !7, size: 32, offset: 224)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1013, file: !164, line: 2511, baseType: !897, size: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1013, file: !164, line: 2512, baseType: !897, size: 64, offset: 320)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !899, file: !164, line: 3382, baseType: !1025, size: 896)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !164, line: 2652, size: 896, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1025, file: !164, line: 2653, baseType: !1013, size: 384)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1025, file: !164, line: 2654, baseType: !897, size: 64, offset: 384)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1025, file: !164, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1025, file: !164, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1025, file: !164, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1025, file: !164, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1025, file: !164, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1025, file: !164, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1025, file: !164, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1025, file: !164, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1025, file: !164, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1025, file: !164, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1025, file: !164, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1025, file: !164, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1025, file: !164, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1025, file: !164, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1025, file: !164, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1025, file: !164, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1025, file: !164, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1025, file: !164, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1025, file: !164, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1025, file: !164, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1025, file: !164, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1025, file: !164, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1025, file: !164, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1025, file: !164, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1025, file: !164, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1025, file: !164, line: 2703, baseType: !7, size: 32, offset: 512)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1025, file: !164, line: 2705, baseType: !897, size: 64, offset: 576)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1025, file: !164, line: 2706, baseType: !897, size: 64, offset: 640)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1025, file: !164, line: 2707, baseType: !897, size: 64, offset: 704)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1025, file: !164, line: 2708, baseType: !897, size: 64, offset: 768)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1025, file: !164, line: 2711, baseType: !1060, size: 64, offset: 832)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !164, line: 2711, flags: DIFlagFwdDecl)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !899, file: !164, line: 3383, baseType: !1063, size: 960)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !164, line: 2756, size: 960, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1063, file: !164, line: 2757, baseType: !1025, size: 896)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1063, file: !164, line: 2758, baseType: !760, size: 64, offset: 896)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !899, file: !164, line: 3384, baseType: !1068, size: 1472)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !164, line: 3114, size: 1472, elements: !1069)
!1069 = !{!1070, !1091, !1092, !1093, !1094}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1068, file: !164, line: 3115, baseType: !1071, size: 1216)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !164, line: 2984, size: 1216, elements: !1072)
!1072 = !{!1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1071, file: !164, line: 2985, baseType: !1063, size: 960)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1071, file: !164, line: 2986, baseType: !897, size: 64, offset: 960)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1071, file: !164, line: 2987, baseType: !897, size: 64, offset: 1024)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1071, file: !164, line: 2988, baseType: !897, size: 64, offset: 1088)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1071, file: !164, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1071, file: !164, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1071, file: !164, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1071, file: !164, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1071, file: !164, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1071, file: !164, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1071, file: !164, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1071, file: !164, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1071, file: !164, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1071, file: !164, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1071, file: !164, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1071, file: !164, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1071, file: !164, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1071, file: !164, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1068, file: !164, line: 3117, baseType: !897, size: 64, offset: 1216)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1068, file: !164, line: 3119, baseType: !897, size: 64, offset: 1280)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1068, file: !164, line: 3121, baseType: !897, size: 64, offset: 1344)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1068, file: !164, line: 3123, baseType: !897, size: 64, offset: 1408)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !899, file: !164, line: 3385, baseType: !1096, size: 1088)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !164, line: 2874, size: 1088, elements: !1097)
!1097 = !{!1098, !1099, !1100}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1096, file: !164, line: 2875, baseType: !1063, size: 960)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1096, file: !164, line: 2876, baseType: !760, size: 64, offset: 960)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1096, file: !164, line: 2877, baseType: !1101, size: 64, offset: 1024)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !164, line: 2856, flags: DIFlagFwdDecl)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !899, file: !164, line: 3386, baseType: !1071, size: 1216)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !899, file: !164, line: 3387, baseType: !1105, size: 1280)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !164, line: 3093, size: 1280, elements: !1106)
!1106 = !{!1107, !1108}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1105, file: !164, line: 3094, baseType: !1071, size: 1216)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1105, file: !164, line: 3095, baseType: !1101, size: 64, offset: 1216)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !899, file: !164, line: 3388, baseType: !1110, size: 1216)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !164, line: 2824, size: 1216, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1117}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1110, file: !164, line: 2825, baseType: !1025, size: 896)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1110, file: !164, line: 2827, baseType: !897, size: 64, offset: 896)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1110, file: !164, line: 2828, baseType: !897, size: 64, offset: 960)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1110, file: !164, line: 2829, baseType: !897, size: 64, offset: 1024)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1110, file: !164, line: 2830, baseType: !897, size: 64, offset: 1088)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1110, file: !164, line: 2831, baseType: !897, size: 64, offset: 1152)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !899, file: !164, line: 3389, baseType: !1119, size: 1024)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !164, line: 2850, size: 1024, elements: !1120)
!1120 = !{!1121, !1122, !1123}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1119, file: !164, line: 2851, baseType: !1063, size: 960)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1119, file: !164, line: 2852, baseType: !753, size: 32, offset: 960)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1119, file: !164, line: 2853, baseType: !753, size: 32, offset: 992)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !899, file: !164, line: 3390, baseType: !1125, size: 1024)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !164, line: 2857, size: 1024, elements: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1125, file: !164, line: 2858, baseType: !1063, size: 960)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1125, file: !164, line: 2859, baseType: !1101, size: 64, offset: 960)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !899, file: !164, line: 3391, baseType: !1130, size: 960)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !164, line: 2862, size: 960, elements: !1131)
!1131 = !{!1132}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1130, file: !164, line: 2863, baseType: !1063, size: 960)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !899, file: !164, line: 3392, baseType: !1134, size: 1472)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !164, line: 3304, size: 1472, elements: !1135)
!1135 = !{!1136}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1134, file: !164, line: 3305, baseType: !1068, size: 1472)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !899, file: !164, line: 3393, baseType: !1138, size: 1792)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !164, line: 3248, size: 1792, elements: !1139)
!1139 = !{!1140, !1141, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1138, file: !164, line: 3249, baseType: !1068, size: 1472)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1138, file: !164, line: 3251, baseType: !1142, size: 64, offset: 1472)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1144, line: 463, size: 1152, elements: !1145)
!1144 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1145 = !{!1146, !1149, !1309, !1310, !1313, !1372, !1373, !1374, !1375, !1376, !1377, !1401, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1143, file: !1144, line: 464, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1144, line: 464, flags: DIFlagFwdDecl)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1143, file: !1144, line: 467, baseType: !1150, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1152)
!1152 = !{!1153, !1284, !1285, !1298, !1299, !1300, !1301, !1302, !1303, !1305, !1307, !1308}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1151, file: !135, line: 377, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !761, line: 111, baseType: !1155)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !1157)
!1157 = !{!1158, !1193, !1194, !1195, !1254, !1258, !1259, !1260, !1278, !1279, !1280, !1281, !1282, !1283}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1156, file: !135, line: 219, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !1162)
!1162 = !{!1163}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1161, file: !135, line: 151, baseType: !1164, size: 128)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !1166)
!1166 = !{!1167, !1168, !1169}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1165, file: !135, line: 150, baseType: !7, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1165, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1165, file: !135, line: 150, baseType: !1170, size: 64, offset: 64)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1171, size: 64, elements: !795)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !761, line: 108, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1185, !1186, !1187, !1188, !1189, !1190, !1191}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1173, file: !135, line: 124, baseType: !1155, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1173, file: !135, line: 125, baseType: !1155, size: 64, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1173, file: !135, line: 131, baseType: !1178, size: 64, offset: 128)
!1178 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !1179)
!1179 = !{!1180, !1184}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1178, file: !135, line: 129, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !761, line: 66, baseType: !1182)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !761, line: 65, flags: DIFlagFwdDecl)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1178, file: !135, line: 130, baseType: !760, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1173, file: !135, line: 134, baseType: !757, size: 64, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1173, file: !135, line: 137, baseType: !897, size: 64, offset: 256)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1173, file: !135, line: 138, baseType: !1017, size: 32, offset: 320)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1173, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1173, file: !135, line: 144, baseType: !753, size: 32, offset: 384)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1173, file: !135, line: 145, baseType: !753, size: 32, offset: 416)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1173, file: !135, line: 146, baseType: !1192, size: 64, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !868)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1156, file: !135, line: 220, baseType: !1159, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1156, file: !135, line: 223, baseType: !757, size: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1156, file: !135, line: 226, baseType: !1196, size: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !146, line: 100, size: 1216, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203, !1208, !1209, !1210, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1244, !1252, !1253}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1197, file: !146, line: 102, baseType: !753, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1197, file: !146, line: 105, baseType: !7, size: 32, offset: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1197, file: !146, line: 108, baseType: !1155, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1197, file: !146, line: 111, baseType: !1155, size: 64, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1197, file: !146, line: 114, baseType: !1204, size: 64, offset: 192)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !146, line: 41, size: 64, elements: !1205)
!1205 = !{!1206, !1207}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1204, file: !146, line: 42, baseType: !145, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1204, file: !146, line: 43, baseType: !7, size: 32, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1197, file: !146, line: 117, baseType: !7, size: 32, offset: 256)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1197, file: !146, line: 120, baseType: !7, size: 32, offset: 288)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1197, file: !146, line: 123, baseType: !1211, size: 64, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !146, line: 87, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !146, line: 87, size: 128, elements: !1214)
!1214 = !{!1215}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1213, file: !146, line: 87, baseType: !1216, size: 128)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !146, line: 85, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !146, line: 85, size: 128, elements: !1218)
!1218 = !{!1219, !1220, !1221}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1217, file: !146, line: 85, baseType: !7, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1217, file: !146, line: 85, baseType: !7, size: 32, offset: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1217, file: !146, line: 85, baseType: !1222, size: 64, offset: 64)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1223, size: 64, elements: !795)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !146, line: 84, baseType: !1196)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1197, file: !146, line: 126, baseType: !1196, size: 64, offset: 384)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1197, file: !146, line: 129, baseType: !1196, size: 64, offset: 448)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1197, file: !146, line: 132, baseType: !757, size: 64, offset: 512)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1197, file: !146, line: 139, baseType: !897, size: 64, offset: 576)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1197, file: !146, line: 143, baseType: !945, size: 128, offset: 640)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1197, file: !146, line: 146, baseType: !945, size: 128, offset: 768)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1197, file: !146, line: 148, baseType: !752, size: 8, offset: 896)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1197, file: !146, line: 149, baseType: !752, size: 8, offset: 904)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1197, file: !146, line: 153, baseType: !154, size: 32, offset: 928)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1197, file: !146, line: 156, baseType: !1234, size: 64, offset: 960)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !146, line: 48, size: 320, elements: !1236)
!1236 = !{!1237, !1241, !1242, !1243}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1235, file: !146, line: 50, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !761, line: 58, baseType: !1239)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !761, line: 57, flags: DIFlagFwdDecl)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1235, file: !146, line: 59, baseType: !945, size: 128, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1235, file: !146, line: 64, baseType: !752, size: 8, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1235, file: !146, line: 67, baseType: !1234, size: 64, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1197, file: !146, line: 159, baseType: !1245, size: 64, offset: 1024)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !146, line: 72, size: 256, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1246, file: !146, line: 74, baseType: !1172, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1246, file: !146, line: 77, baseType: !1245, size: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !146, line: 78, baseType: !1245, size: 64, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1246, file: !146, line: 81, baseType: !1245, size: 64, offset: 192)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1197, file: !146, line: 162, baseType: !752, size: 8, offset: 1088)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1197, file: !146, line: 166, baseType: !897, size: 64, offset: 1152)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1156, file: !135, line: 229, baseType: !1255, size: 128, offset: 256)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1256, size: 128, elements: !852)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1156, file: !135, line: 232, baseType: !1155, size: 64, offset: 384)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1156, file: !135, line: 233, baseType: !1155, size: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1156, file: !135, line: 238, baseType: !1261, size: 64, offset: 512)
!1261 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1262)
!1262 = !{!1263, !1269}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1261, file: !135, line: 236, baseType: !1264, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1265, file: !135, line: 275, baseType: !1181, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1265, file: !135, line: 278, baseType: !1181, size: 64, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1261, file: !135, line: 237, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1277}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1271, file: !135, line: 261, baseType: !760, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1271, file: !135, line: 262, baseType: !760, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1271, file: !135, line: 266, baseType: !760, size: 64, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1271, file: !135, line: 267, baseType: !760, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1271, file: !135, line: 270, baseType: !753, size: 32, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1156, file: !135, line: 241, baseType: !1192, size: 64, offset: 576)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1156, file: !135, line: 244, baseType: !753, size: 32, offset: 640)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1156, file: !135, line: 247, baseType: !753, size: 32, offset: 672)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1156, file: !135, line: 250, baseType: !753, size: 32, offset: 704)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1156, file: !135, line: 253, baseType: !753, size: 32, offset: 736)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1156, file: !135, line: 256, baseType: !753, size: 32, offset: 768)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1151, file: !135, line: 378, baseType: !1154, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1151, file: !135, line: 381, baseType: !1286, size: 64, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1288, file: !135, line: 282, baseType: !1291, size: 128)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1293)
!1293 = !{!1294, !1295, !1296}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1292, file: !135, line: 281, baseType: !7, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1292, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1292, file: !135, line: 281, baseType: !1297, size: 64, offset: 64)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1154, size: 64, elements: !795)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1151, file: !135, line: 384, baseType: !753, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1151, file: !135, line: 387, baseType: !753, size: 32, offset: 224)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1151, file: !135, line: 390, baseType: !753, size: 32, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1151, file: !135, line: 394, baseType: !1286, size: 64, offset: 320)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1151, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1151, file: !135, line: 399, baseType: !1304, size: 64, offset: 416)
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !852)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1151, file: !135, line: 402, baseType: !1306, size: 64, offset: 480)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !852)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1151, file: !135, line: 406, baseType: !753, size: 32, offset: 544)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1151, file: !135, line: 409, baseType: !753, size: 32, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1143, file: !1144, line: 470, baseType: !1182, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1143, file: !1144, line: 473, baseType: !1311, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1144, line: 166, flags: DIFlagFwdDecl)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1143, file: !1144, line: 476, baseType: !1314, size: 64, offset: 256)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !146, line: 187, size: 256, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1371}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1315, file: !146, line: 189, baseType: !753, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1315, file: !146, line: 192, baseType: !1211, size: 64, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1315, file: !146, line: 197, baseType: !1320, size: 64, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1321, line: 144, baseType: !1322)
!1321 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1321, line: 100, size: 896, elements: !1324)
!1324 = !{!1325, !1333, !1338, !1343, !1345, !1348, !1349, !1350, !1351, !1352, !1357, !1359, !1360, !1365, !1370}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1323, file: !1321, line: 102, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1321, line: 52, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!1330, !1331}
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1321, line: 47, baseType: !7)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1323, file: !1321, line: 105, baseType: !1334, size: 64, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1321, line: 59, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!753, !1331, !1331}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1323, file: !1321, line: 108, baseType: !1339, size: 64, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1321, line: 63, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{null, !757}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1323, file: !1321, line: 111, baseType: !1344, size: 64, offset: 192)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1323, file: !1321, line: 114, baseType: !1346, size: 64, offset: 256)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1347, line: 46, baseType: !851)
!1347 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1323, file: !1321, line: 117, baseType: !1346, size: 64, offset: 320)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1323, file: !1321, line: 120, baseType: !1346, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1323, file: !1321, line: 124, baseType: !7, size: 32, offset: 448)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1323, file: !1321, line: 128, baseType: !7, size: 32, offset: 480)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1323, file: !1321, line: 131, baseType: !1353, size: 64, offset: 512)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1321, line: 75, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!757, !1346, !1346}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1323, file: !1321, line: 132, baseType: !1358, size: 64, offset: 576)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1321, line: 78, baseType: !1340)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1323, file: !1321, line: 135, baseType: !757, size: 64, offset: 640)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1323, file: !1321, line: 136, baseType: !1361, size: 64, offset: 704)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1321, line: 82, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!757, !757, !1346, !1346}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1323, file: !1321, line: 137, baseType: !1366, size: 64, offset: 768)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1321, line: 83, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !757, !757}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1323, file: !1321, line: 141, baseType: !7, size: 32, offset: 832)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1315, file: !146, line: 200, baseType: !1196, size: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1143, file: !1144, line: 479, baseType: !1320, size: 64, offset: 320)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1143, file: !1144, line: 484, baseType: !897, size: 64, offset: 384)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1143, file: !1144, line: 488, baseType: !897, size: 64, offset: 448)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1143, file: !1144, line: 493, baseType: !897, size: 64, offset: 512)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1143, file: !1144, line: 496, baseType: !897, size: 64, offset: 576)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1143, file: !1144, line: 501, baseType: !1378, size: 64, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !159, line: 2355, size: 576, elements: !1380)
!1380 = !{!1381, !1384, !1385, !1386, !1387, !1389, !1390, !1395, !1396, !1397, !1398, !1399, !1400}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1379, file: !159, line: 2356, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !159, line: 2356, flags: DIFlagFwdDecl)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1379, file: !159, line: 2357, baseType: !758, size: 64, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1379, file: !159, line: 2358, baseType: !753, size: 32, offset: 128)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1379, file: !159, line: 2359, baseType: !753, size: 32, offset: 160)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1379, file: !159, line: 2360, baseType: !1388, size: 128, offset: 192)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 128, elements: !877)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1379, file: !159, line: 2364, baseType: !753, size: 32, offset: 320)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1379, file: !159, line: 2367, baseType: !1391, size: 128, offset: 384)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !159, line: 2349, size: 128, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1391, file: !159, line: 2351, baseType: !760, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1391, file: !159, line: 2352, baseType: !868, size: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1379, file: !159, line: 2371, baseType: !158, size: 32, offset: 512)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1379, file: !159, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1379, file: !159, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1379, file: !159, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1379, file: !159, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1379, file: !159, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1143, file: !1144, line: 504, baseType: !1402, size: 64, offset: 704)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1144, line: 504, flags: DIFlagFwdDecl)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1143, file: !1144, line: 507, baseType: !1320, size: 64, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1143, file: !1144, line: 510, baseType: !753, size: 32, offset: 832)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1143, file: !1144, line: 513, baseType: !753, size: 32, offset: 864)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1143, file: !1144, line: 516, baseType: !1017, size: 32, offset: 896)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1143, file: !1144, line: 519, baseType: !1017, size: 32, offset: 928)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1143, file: !1144, line: 522, baseType: !7, size: 32, offset: 960)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1143, file: !1144, line: 523, baseType: !7, size: 32, offset: 992)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1143, file: !1144, line: 528, baseType: !758, size: 64, offset: 1024)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1143, file: !1144, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1143, file: !1144, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1143, file: !1144, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1143, file: !1144, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1143, file: !1144, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1143, file: !1144, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1143, file: !1144, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1143, file: !1144, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1143, file: !1144, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1143, file: !1144, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1143, file: !1144, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1143, file: !1144, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1143, file: !1144, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1143, file: !1144, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1143, file: !1144, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1143, file: !1144, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1138, file: !164, line: 3254, baseType: !897, size: 64, offset: 1536)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1138, file: !164, line: 3257, baseType: !897, size: 64, offset: 1600)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1138, file: !164, line: 3258, baseType: !897, size: 64, offset: 1664)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1138, file: !164, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1138, file: !164, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1138, file: !164, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1138, file: !164, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1138, file: !164, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1138, file: !164, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1138, file: !164, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1138, file: !164, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1138, file: !164, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1138, file: !164, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1138, file: !164, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1138, file: !164, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1138, file: !164, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1138, file: !164, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1138, file: !164, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1138, file: !164, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1138, file: !164, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1138, file: !164, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !899, file: !164, line: 3394, baseType: !1450, size: 1344)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !164, line: 2279, size: 1344, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1477, !1478, !1479, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1450, file: !164, line: 2280, baseType: !935, size: 192)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1450, file: !164, line: 2281, baseType: !897, size: 64, offset: 192)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1450, file: !164, line: 2282, baseType: !897, size: 64, offset: 256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1450, file: !164, line: 2283, baseType: !897, size: 64, offset: 320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1450, file: !164, line: 2284, baseType: !897, size: 64, offset: 384)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1450, file: !164, line: 2285, baseType: !7, size: 32, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1450, file: !164, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1450, file: !164, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1450, file: !164, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1450, file: !164, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1450, file: !164, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1450, file: !164, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1450, file: !164, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1450, file: !164, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1450, file: !164, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1450, file: !164, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1450, file: !164, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1450, file: !164, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1450, file: !164, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1450, file: !164, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1450, file: !164, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1450, file: !164, line: 2305, baseType: !7, size: 32, offset: 512)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1450, file: !164, line: 2306, baseType: !1475, size: 32, offset: 544)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1476, line: 31, baseType: !753)
!1476 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1450, file: !164, line: 2307, baseType: !897, size: 64, offset: 576)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1450, file: !164, line: 2308, baseType: !897, size: 64, offset: 640)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1450, file: !164, line: 2314, baseType: !1480, size: 64, offset: 704)
!1480 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !164, line: 2309, size: 64, elements: !1481)
!1481 = !{!1482, !1483, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1480, file: !164, line: 2310, baseType: !753, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1480, file: !164, line: 2311, baseType: !758, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1480, file: !164, line: 2312, baseType: !1485, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !164, line: 2277, flags: DIFlagFwdDecl)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1450, file: !164, line: 2315, baseType: !897, size: 64, offset: 768)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1450, file: !164, line: 2316, baseType: !897, size: 64, offset: 832)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1450, file: !164, line: 2317, baseType: !897, size: 64, offset: 896)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1450, file: !164, line: 2318, baseType: !897, size: 64, offset: 960)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1450, file: !164, line: 2319, baseType: !897, size: 64, offset: 1024)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1450, file: !164, line: 2320, baseType: !897, size: 64, offset: 1088)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1450, file: !164, line: 2321, baseType: !897, size: 64, offset: 1152)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1450, file: !164, line: 2322, baseType: !897, size: 64, offset: 1216)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1450, file: !164, line: 2324, baseType: !1496, size: 64, offset: 1280)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !164, line: 2324, flags: DIFlagFwdDecl)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !899, file: !164, line: 3395, baseType: !1499, size: 320)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !164, line: 1469, size: 320, elements: !1500)
!1500 = !{!1501, !1502, !1503}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1499, file: !164, line: 1470, baseType: !935, size: 192)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1499, file: !164, line: 1471, baseType: !897, size: 64, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1499, file: !164, line: 1472, baseType: !897, size: 64, offset: 256)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !899, file: !164, line: 3396, baseType: !1505, size: 320)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !164, line: 1482, size: 320, elements: !1506)
!1506 = !{!1507, !1508, !1509}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1505, file: !164, line: 1483, baseType: !935, size: 192)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1505, file: !164, line: 1484, baseType: !753, size: 32, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1505, file: !164, line: 1485, baseType: !1510, size: 64, offset: 256)
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 64, elements: !795)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !899, file: !164, line: 3397, baseType: !1512, size: 384)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !164, line: 1829, size: 384, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1512, file: !164, line: 1830, baseType: !935, size: 192)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1512, file: !164, line: 1831, baseType: !1017, size: 32, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1512, file: !164, line: 1832, baseType: !897, size: 64, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1512, file: !164, line: 1835, baseType: !1510, size: 64, offset: 320)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !899, file: !164, line: 3398, baseType: !1519, size: 704)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !164, line: 1898, size: 704, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1528}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1519, file: !164, line: 1899, baseType: !935, size: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1519, file: !164, line: 1902, baseType: !897, size: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1519, file: !164, line: 1905, baseType: !1238, size: 64, offset: 256)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1519, file: !164, line: 1908, baseType: !7, size: 32, offset: 320)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1519, file: !164, line: 1911, baseType: !1526, size: 64, offset: 384)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !164, line: 1876, flags: DIFlagFwdDecl)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1519, file: !164, line: 1914, baseType: !1529, size: 256, offset: 448)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !164, line: 1883, size: 256, elements: !1530)
!1530 = !{!1531, !1533, !1534, !1539}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1529, file: !164, line: 1884, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1529, file: !164, line: 1885, baseType: !1532, size: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1529, file: !164, line: 1891, baseType: !1535, size: 64, offset: 128)
!1535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1529, file: !164, line: 1891, size: 64, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1535, file: !164, line: 1891, baseType: !1238, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1535, file: !164, line: 1891, baseType: !897, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1529, file: !164, line: 1892, baseType: !1540, size: 64, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !899, file: !164, line: 3399, baseType: !1542, size: 704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !164, line: 2008, size: 704, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1542, file: !164, line: 2009, baseType: !935, size: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1542, file: !164, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1542, file: !164, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1542, file: !164, line: 2014, baseType: !1017, size: 32, offset: 224)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1542, file: !164, line: 2016, baseType: !897, size: 64, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1542, file: !164, line: 2017, baseType: !1550, size: 64, offset: 320)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !164, line: 183, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !164, line: 183, size: 128, elements: !1553)
!1553 = !{!1554}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1552, file: !164, line: 183, baseType: !1555, size: 128)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !164, line: 182, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !164, line: 182, size: 128, elements: !1557)
!1557 = !{!1558, !1559, !1560}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1556, file: !164, line: 182, baseType: !7, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1556, file: !164, line: 182, baseType: !7, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1556, file: !164, line: 182, baseType: !1510, size: 64, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1542, file: !164, line: 2019, baseType: !897, size: 64, offset: 384)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1542, file: !164, line: 2020, baseType: !897, size: 64, offset: 448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1542, file: !164, line: 2021, baseType: !897, size: 64, offset: 512)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1542, file: !164, line: 2022, baseType: !897, size: 64, offset: 576)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1542, file: !164, line: 2023, baseType: !897, size: 64, offset: 640)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !899, file: !164, line: 3400, baseType: !1567, size: 832)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !164, line: 2430, size: 832, elements: !1568)
!1568 = !{!1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1567, file: !164, line: 2431, baseType: !935, size: 192)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1567, file: !164, line: 2433, baseType: !897, size: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1567, file: !164, line: 2434, baseType: !897, size: 64, offset: 256)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1567, file: !164, line: 2435, baseType: !897, size: 64, offset: 320)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1567, file: !164, line: 2436, baseType: !897, size: 64, offset: 384)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1567, file: !164, line: 2437, baseType: !1550, size: 64, offset: 448)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1567, file: !164, line: 2438, baseType: !897, size: 64, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1567, file: !164, line: 2440, baseType: !897, size: 64, offset: 576)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1567, file: !164, line: 2441, baseType: !897, size: 64, offset: 640)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1567, file: !164, line: 2443, baseType: !1579, size: 128, offset: 704)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !164, line: 182, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !164, line: 182, size: 128, elements: !1581)
!1581 = !{!1582}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1580, file: !164, line: 182, baseType: !1555, size: 128)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !899, file: !164, line: 3401, baseType: !1584, size: 320)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !164, line: 3327, size: 320, elements: !1585)
!1585 = !{!1586, !1587, !1594}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1584, file: !164, line: 3329, baseType: !935, size: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1584, file: !164, line: 3330, baseType: !1588, size: 64, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !164, line: 3320, size: 192, elements: !1590)
!1590 = !{!1591, !1592, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1589, file: !164, line: 3322, baseType: !1588, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1589, file: !164, line: 3323, baseType: !1588, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1589, file: !164, line: 3324, baseType: !897, size: 64, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1584, file: !164, line: 3331, baseType: !1588, size: 64, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !899, file: !164, line: 3402, baseType: !1596, size: 256)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !164, line: 1540, size: 256, elements: !1597)
!1597 = !{!1598, !1599}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1596, file: !164, line: 1541, baseType: !935, size: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1596, file: !164, line: 1542, baseType: !1600, size: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !164, line: 1538, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !164, line: 1538, size: 192, elements: !1603)
!1603 = !{!1604}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1602, file: !164, line: 1538, baseType: !1605, size: 192)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !164, line: 1537, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !164, line: 1537, size: 192, elements: !1607)
!1607 = !{!1608, !1609, !1610}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1606, file: !164, line: 1537, baseType: !7, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1606, file: !164, line: 1537, baseType: !7, size: 32, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1606, file: !164, line: 1537, baseType: !1611, size: 128, offset: 64)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1612, size: 128, elements: !795)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !164, line: 1535, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !164, line: 1532, size: 128, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1613, file: !164, line: 1533, baseType: !897, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1613, file: !164, line: 1534, baseType: !897, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !899, file: !164, line: 3403, baseType: !1618, size: 512)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !164, line: 1938, size: 512, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623, !1629, !1630, !1631}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1618, file: !164, line: 1939, baseType: !935, size: 192)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1618, file: !164, line: 1940, baseType: !1017, size: 32, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1618, file: !164, line: 1941, baseType: !163, size: 32, offset: 224)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1618, file: !164, line: 1946, baseType: !1624, size: 32, offset: 256)
!1624 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !164, line: 1942, size: 32, elements: !1625)
!1625 = !{!1626, !1627, !1628}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1624, file: !164, line: 1943, baseType: !182, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1624, file: !164, line: 1944, baseType: !189, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1624, file: !164, line: 1945, baseType: !196, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1618, file: !164, line: 1950, baseType: !1181, size: 64, offset: 320)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1618, file: !164, line: 1951, baseType: !1181, size: 64, offset: 384)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1618, file: !164, line: 1953, baseType: !1510, size: 64, offset: 448)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !899, file: !164, line: 3404, baseType: !1633, size: 1664)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !164, line: 3337, size: 1664, elements: !1634)
!1634 = !{!1635, !1636}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1633, file: !164, line: 3338, baseType: !935, size: 192)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1633, file: !164, line: 3341, baseType: !1637, size: 1472, offset: 192)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1638, line: 410, size: 1472, elements: !1639)
!1638 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1639 = !{!1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1637, file: !1638, line: 412, baseType: !753, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1637, file: !1638, line: 413, baseType: !753, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1637, file: !1638, line: 414, baseType: !753, size: 32, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1637, file: !1638, line: 415, baseType: !753, size: 32, offset: 96)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1637, file: !1638, line: 416, baseType: !753, size: 32, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1637, file: !1638, line: 417, baseType: !753, size: 32, offset: 160)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1637, file: !1638, line: 418, baseType: !752, size: 8, offset: 192)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1637, file: !1638, line: 419, baseType: !752, size: 8, offset: 200)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1637, file: !1638, line: 420, baseType: !1649, size: 8, offset: 208)
!1649 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1637, file: !1638, line: 421, baseType: !1649, size: 8, offset: 216)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1637, file: !1638, line: 422, baseType: !1649, size: 8, offset: 224)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1637, file: !1638, line: 423, baseType: !1649, size: 8, offset: 232)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1637, file: !1638, line: 424, baseType: !1649, size: 8, offset: 240)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1637, file: !1638, line: 425, baseType: !1649, size: 8, offset: 248)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1637, file: !1638, line: 426, baseType: !1649, size: 8, offset: 256)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1637, file: !1638, line: 427, baseType: !1649, size: 8, offset: 264)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1637, file: !1638, line: 428, baseType: !1649, size: 8, offset: 272)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1637, file: !1638, line: 429, baseType: !1649, size: 8, offset: 280)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1637, file: !1638, line: 430, baseType: !1649, size: 8, offset: 288)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1637, file: !1638, line: 431, baseType: !1649, size: 8, offset: 296)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1637, file: !1638, line: 432, baseType: !1649, size: 8, offset: 304)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1637, file: !1638, line: 433, baseType: !1649, size: 8, offset: 312)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1637, file: !1638, line: 434, baseType: !1649, size: 8, offset: 320)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1637, file: !1638, line: 435, baseType: !1649, size: 8, offset: 328)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1637, file: !1638, line: 436, baseType: !1649, size: 8, offset: 336)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1637, file: !1638, line: 437, baseType: !1649, size: 8, offset: 344)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1637, file: !1638, line: 438, baseType: !1649, size: 8, offset: 352)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1637, file: !1638, line: 439, baseType: !1649, size: 8, offset: 360)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1637, file: !1638, line: 440, baseType: !1649, size: 8, offset: 368)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1637, file: !1638, line: 441, baseType: !1649, size: 8, offset: 376)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1637, file: !1638, line: 442, baseType: !1649, size: 8, offset: 384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1637, file: !1638, line: 443, baseType: !1649, size: 8, offset: 392)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1637, file: !1638, line: 444, baseType: !1649, size: 8, offset: 400)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1637, file: !1638, line: 445, baseType: !1649, size: 8, offset: 408)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1637, file: !1638, line: 446, baseType: !1649, size: 8, offset: 416)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1637, file: !1638, line: 447, baseType: !1649, size: 8, offset: 424)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1637, file: !1638, line: 448, baseType: !1649, size: 8, offset: 432)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1637, file: !1638, line: 449, baseType: !1649, size: 8, offset: 440)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1637, file: !1638, line: 450, baseType: !1649, size: 8, offset: 448)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1637, file: !1638, line: 451, baseType: !1649, size: 8, offset: 456)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1637, file: !1638, line: 452, baseType: !1649, size: 8, offset: 464)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1637, file: !1638, line: 453, baseType: !1649, size: 8, offset: 472)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1637, file: !1638, line: 454, baseType: !1649, size: 8, offset: 480)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1637, file: !1638, line: 455, baseType: !1649, size: 8, offset: 488)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1637, file: !1638, line: 456, baseType: !1649, size: 8, offset: 496)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1637, file: !1638, line: 457, baseType: !1649, size: 8, offset: 504)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1637, file: !1638, line: 458, baseType: !1649, size: 8, offset: 512)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1637, file: !1638, line: 459, baseType: !1649, size: 8, offset: 520)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1637, file: !1638, line: 460, baseType: !1649, size: 8, offset: 528)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1637, file: !1638, line: 461, baseType: !1649, size: 8, offset: 536)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1637, file: !1638, line: 462, baseType: !1649, size: 8, offset: 544)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1637, file: !1638, line: 463, baseType: !1649, size: 8, offset: 552)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1637, file: !1638, line: 464, baseType: !1649, size: 8, offset: 560)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1637, file: !1638, line: 465, baseType: !1649, size: 8, offset: 568)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1637, file: !1638, line: 466, baseType: !1649, size: 8, offset: 576)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1637, file: !1638, line: 467, baseType: !1649, size: 8, offset: 584)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1637, file: !1638, line: 468, baseType: !1649, size: 8, offset: 592)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1637, file: !1638, line: 469, baseType: !1649, size: 8, offset: 600)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1637, file: !1638, line: 470, baseType: !1649, size: 8, offset: 608)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1637, file: !1638, line: 471, baseType: !1649, size: 8, offset: 616)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1637, file: !1638, line: 472, baseType: !1649, size: 8, offset: 624)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1637, file: !1638, line: 473, baseType: !1649, size: 8, offset: 632)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1637, file: !1638, line: 474, baseType: !1649, size: 8, offset: 640)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1637, file: !1638, line: 475, baseType: !1649, size: 8, offset: 648)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1637, file: !1638, line: 476, baseType: !1649, size: 8, offset: 656)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1637, file: !1638, line: 477, baseType: !1649, size: 8, offset: 664)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1637, file: !1638, line: 478, baseType: !1649, size: 8, offset: 672)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1637, file: !1638, line: 479, baseType: !1649, size: 8, offset: 680)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1637, file: !1638, line: 480, baseType: !1649, size: 8, offset: 688)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1637, file: !1638, line: 481, baseType: !1649, size: 8, offset: 696)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1637, file: !1638, line: 482, baseType: !1649, size: 8, offset: 704)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1637, file: !1638, line: 483, baseType: !1649, size: 8, offset: 712)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1637, file: !1638, line: 484, baseType: !1649, size: 8, offset: 720)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1637, file: !1638, line: 485, baseType: !1649, size: 8, offset: 728)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1637, file: !1638, line: 486, baseType: !1649, size: 8, offset: 736)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1637, file: !1638, line: 487, baseType: !1649, size: 8, offset: 744)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1637, file: !1638, line: 488, baseType: !1649, size: 8, offset: 752)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1637, file: !1638, line: 489, baseType: !1649, size: 8, offset: 760)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1637, file: !1638, line: 490, baseType: !1649, size: 8, offset: 768)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1637, file: !1638, line: 491, baseType: !1649, size: 8, offset: 776)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1637, file: !1638, line: 492, baseType: !1649, size: 8, offset: 784)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1637, file: !1638, line: 493, baseType: !1649, size: 8, offset: 792)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1637, file: !1638, line: 494, baseType: !1649, size: 8, offset: 800)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1637, file: !1638, line: 495, baseType: !1649, size: 8, offset: 808)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1637, file: !1638, line: 496, baseType: !1649, size: 8, offset: 816)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1637, file: !1638, line: 497, baseType: !1649, size: 8, offset: 824)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1637, file: !1638, line: 498, baseType: !1649, size: 8, offset: 832)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1637, file: !1638, line: 499, baseType: !1649, size: 8, offset: 840)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1637, file: !1638, line: 500, baseType: !1649, size: 8, offset: 848)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1637, file: !1638, line: 501, baseType: !1649, size: 8, offset: 856)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1637, file: !1638, line: 502, baseType: !1649, size: 8, offset: 864)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1637, file: !1638, line: 503, baseType: !1649, size: 8, offset: 872)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1637, file: !1638, line: 504, baseType: !1649, size: 8, offset: 880)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1637, file: !1638, line: 505, baseType: !1649, size: 8, offset: 888)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1637, file: !1638, line: 506, baseType: !1649, size: 8, offset: 896)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1637, file: !1638, line: 507, baseType: !1649, size: 8, offset: 904)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1637, file: !1638, line: 508, baseType: !1649, size: 8, offset: 912)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1637, file: !1638, line: 509, baseType: !1649, size: 8, offset: 920)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1637, file: !1638, line: 510, baseType: !1649, size: 8, offset: 928)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1637, file: !1638, line: 511, baseType: !1649, size: 8, offset: 936)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1637, file: !1638, line: 512, baseType: !1649, size: 8, offset: 944)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1637, file: !1638, line: 513, baseType: !1649, size: 8, offset: 952)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1637, file: !1638, line: 514, baseType: !1649, size: 8, offset: 960)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1637, file: !1638, line: 515, baseType: !1649, size: 8, offset: 968)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1637, file: !1638, line: 516, baseType: !1649, size: 8, offset: 976)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1637, file: !1638, line: 517, baseType: !1649, size: 8, offset: 984)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1637, file: !1638, line: 518, baseType: !1649, size: 8, offset: 992)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1637, file: !1638, line: 519, baseType: !1649, size: 8, offset: 1000)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1637, file: !1638, line: 520, baseType: !1649, size: 8, offset: 1008)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1637, file: !1638, line: 521, baseType: !1649, size: 8, offset: 1016)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1637, file: !1638, line: 522, baseType: !1649, size: 8, offset: 1024)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1637, file: !1638, line: 523, baseType: !1649, size: 8, offset: 1032)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1637, file: !1638, line: 524, baseType: !1649, size: 8, offset: 1040)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1637, file: !1638, line: 525, baseType: !1649, size: 8, offset: 1048)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1637, file: !1638, line: 526, baseType: !1649, size: 8, offset: 1056)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1637, file: !1638, line: 527, baseType: !1649, size: 8, offset: 1064)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1637, file: !1638, line: 528, baseType: !1649, size: 8, offset: 1072)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1637, file: !1638, line: 529, baseType: !1649, size: 8, offset: 1080)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1637, file: !1638, line: 530, baseType: !1649, size: 8, offset: 1088)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1637, file: !1638, line: 531, baseType: !1649, size: 8, offset: 1096)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1637, file: !1638, line: 532, baseType: !1649, size: 8, offset: 1104)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1637, file: !1638, line: 533, baseType: !1649, size: 8, offset: 1112)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1637, file: !1638, line: 534, baseType: !1649, size: 8, offset: 1120)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1637, file: !1638, line: 535, baseType: !1649, size: 8, offset: 1128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1637, file: !1638, line: 536, baseType: !1649, size: 8, offset: 1136)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1637, file: !1638, line: 537, baseType: !1649, size: 8, offset: 1144)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1637, file: !1638, line: 538, baseType: !1649, size: 8, offset: 1152)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1637, file: !1638, line: 539, baseType: !1649, size: 8, offset: 1160)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1637, file: !1638, line: 540, baseType: !1649, size: 8, offset: 1168)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1637, file: !1638, line: 541, baseType: !1649, size: 8, offset: 1176)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1637, file: !1638, line: 542, baseType: !1649, size: 8, offset: 1184)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1637, file: !1638, line: 543, baseType: !1649, size: 8, offset: 1192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1637, file: !1638, line: 544, baseType: !1649, size: 8, offset: 1200)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1637, file: !1638, line: 545, baseType: !1649, size: 8, offset: 1208)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1637, file: !1638, line: 546, baseType: !1649, size: 8, offset: 1216)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1637, file: !1638, line: 547, baseType: !1649, size: 8, offset: 1224)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1637, file: !1638, line: 548, baseType: !1649, size: 8, offset: 1232)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1637, file: !1638, line: 549, baseType: !1649, size: 8, offset: 1240)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1637, file: !1638, line: 550, baseType: !1649, size: 8, offset: 1248)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1637, file: !1638, line: 551, baseType: !1649, size: 8, offset: 1256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1637, file: !1638, line: 552, baseType: !1649, size: 8, offset: 1264)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1637, file: !1638, line: 553, baseType: !1649, size: 8, offset: 1272)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1637, file: !1638, line: 554, baseType: !1649, size: 8, offset: 1280)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1637, file: !1638, line: 555, baseType: !1649, size: 8, offset: 1288)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1637, file: !1638, line: 556, baseType: !1649, size: 8, offset: 1296)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1637, file: !1638, line: 557, baseType: !1649, size: 8, offset: 1304)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1637, file: !1638, line: 558, baseType: !1649, size: 8, offset: 1312)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1637, file: !1638, line: 559, baseType: !1649, size: 8, offset: 1320)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1637, file: !1638, line: 560, baseType: !1649, size: 8, offset: 1328)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1637, file: !1638, line: 561, baseType: !1649, size: 8, offset: 1336)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1637, file: !1638, line: 562, baseType: !1649, size: 8, offset: 1344)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1637, file: !1638, line: 563, baseType: !1649, size: 8, offset: 1352)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1637, file: !1638, line: 564, baseType: !1649, size: 8, offset: 1360)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1637, file: !1638, line: 565, baseType: !1649, size: 8, offset: 1368)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1637, file: !1638, line: 566, baseType: !1649, size: 8, offset: 1376)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1637, file: !1638, line: 567, baseType: !1649, size: 8, offset: 1384)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1637, file: !1638, line: 568, baseType: !1649, size: 8, offset: 1392)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1637, file: !1638, line: 569, baseType: !1649, size: 8, offset: 1400)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1637, file: !1638, line: 570, baseType: !1649, size: 8, offset: 1408)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1637, file: !1638, line: 571, baseType: !1649, size: 8, offset: 1416)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1637, file: !1638, line: 572, baseType: !1649, size: 8, offset: 1424)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1637, file: !1638, line: 573, baseType: !1649, size: 8, offset: 1432)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1637, file: !1638, line: 574, baseType: !1649, size: 8, offset: 1440)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !899, file: !164, line: 3405, baseType: !1805, size: 384)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !164, line: 3352, size: 384, elements: !1806)
!1806 = !{!1807, !1808}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1805, file: !164, line: 3353, baseType: !935, size: 192)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1805, file: !164, line: 3356, baseType: !1809, size: 192, offset: 192)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1638, line: 578, size: 192, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1809, file: !1638, line: 580, baseType: !753, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1809, file: !1638, line: 581, baseType: !753, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1809, file: !1638, line: 582, baseType: !753, size: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1809, file: !1638, line: 583, baseType: !753, size: 32, offset: 96)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1809, file: !1638, line: 584, baseType: !752, size: 8, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1809, file: !1638, line: 585, baseType: !752, size: 8, offset: 136)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1809, file: !1638, line: 586, baseType: !752, size: 8, offset: 144)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1809, file: !1638, line: 587, baseType: !752, size: 8, offset: 152)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1809, file: !1638, line: 588, baseType: !752, size: 8, offset: 160)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1809, file: !1638, line: 589, baseType: !752, size: 8, offset: 168)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1809, file: !1638, line: 590, baseType: !752, size: 8, offset: 176)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !781, file: !391, line: 178, baseType: !1155, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !781, file: !391, line: 179, baseType: !1824, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !391, line: 150, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !391, line: 142, size: 320, elements: !1827)
!1827 = !{!1828, !1829, !1830, !1831, !1832, !1833}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1826, file: !391, line: 144, baseType: !897, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1826, file: !391, line: 145, baseType: !760, size: 64, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1826, file: !391, line: 146, baseType: !760, size: 64, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1826, file: !391, line: 147, baseType: !1475, size: 32, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1826, file: !391, line: 148, baseType: !7, size: 32, offset: 224)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1826, file: !391, line: 149, baseType: !752, size: 8, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !781, file: !391, line: 180, baseType: !1835, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !391, line: 162, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !391, line: 159, size: 128, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1837, file: !391, line: 160, baseType: !897, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1837, file: !391, line: 161, baseType: !868, size: 64, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !781, file: !391, line: 181, baseType: !1842, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !391, line: 181, flags: DIFlagFwdDecl)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !776, file: !391, line: 317, baseType: !1845, size: 64)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !868, size: 64, elements: !795)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !776, file: !391, line: 318, baseType: !1847, size: 320)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !391, line: 188, size: 320, elements: !1848)
!1848 = !{!1849, !1851, !1906}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1847, file: !391, line: 190, baseType: !1850, size: 192)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !780, size: 192, elements: !968)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1847, file: !391, line: 193, baseType: !1852, size: 64, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !391, line: 206, size: 320, elements: !1854)
!1854 = !{!1855, !1891, !1892, !1893, !1905}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1853, file: !391, line: 208, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !761, line: 62, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1859, line: 538, size: 256, elements: !1860)
!1859 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1860 = !{!1861, !1865, !1871, !1882}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1858, file: !1859, line: 539, baseType: !1862, size: 32)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1859, line: 482, size: 32, elements: !1863)
!1863 = !{!1864}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1862, file: !1859, line: 484, baseType: !7, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1858, file: !1859, line: 540, baseType: !1866, size: 192)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1859, line: 488, size: 192, elements: !1867)
!1867 = !{!1868, !1869, !1870}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1866, file: !1859, line: 489, baseType: !1862, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1866, file: !1859, line: 492, baseType: !758, size: 64, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1866, file: !1859, line: 496, baseType: !897, size: 64, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1858, file: !1859, line: 541, baseType: !1872, size: 256)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1859, line: 504, size: 256, elements: !1873)
!1873 = !{!1874, !1875, !1880, !1881}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1872, file: !1859, line: 505, baseType: !1862, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1872, file: !1859, line: 509, baseType: !1876, size: 64, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1859, line: 501, baseType: !1877)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{null, !1331}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1872, file: !1859, line: 510, baseType: !1331, size: 64, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1872, file: !1859, line: 513, baseType: !1856, size: 64, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1858, file: !1859, line: 542, baseType: !1883, size: 128)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1859, line: 530, size: 128, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1883, file: !1859, line: 531, baseType: !1862, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1883, file: !1859, line: 534, baseType: !1887, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1859, line: 525, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!752, !897, !758, !851, !851}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1853, file: !391, line: 211, baseType: !7, size: 32, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1853, file: !391, line: 214, baseType: !868, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1853, file: !391, line: 224, baseType: !1894, size: 64, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !391, line: 202, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !391, line: 202, size: 128, elements: !1897)
!1897 = !{!1898}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1896, file: !391, line: 202, baseType: !1899, size: 128)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !391, line: 200, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !391, line: 200, size: 128, elements: !1901)
!1901 = !{!1902, !1903, !1904}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1900, file: !391, line: 200, baseType: !7, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1900, file: !391, line: 200, baseType: !7, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1900, file: !391, line: 200, baseType: !794, size: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1853, file: !391, line: 234, baseType: !1894, size: 64, offset: 256)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1847, file: !391, line: 197, baseType: !868, size: 64, offset: 256)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !776, file: !391, line: 319, baseType: !957, size: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !776, file: !391, line: 320, baseType: !976, size: 192)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !761, line: 47, baseType: !835)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !135, line: 37, baseType: !1910)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1913, line: 42, baseType: !851)
!1913 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1914 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1915 = !{!1916, !1944, !1946, !1947}
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "pass_jump", scope: !2, file: !3, line: 2254, type: !1918, isLocal: false, isDefinition: true)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !534, line: 162, size: 640, elements: !1919)
!1919 = !{!1920}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1918, file: !534, line: 164, baseType: !1921, size: 640)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !534, line: 114, size: 640, elements: !1922)
!1922 = !{!1923, !1924, !1925, !1929, !1933, !1935, !1936, !1937, !1939, !1940, !1941, !1942, !1943}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1921, file: !534, line: 117, baseType: !533, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1921, file: !534, line: 121, baseType: !758, size: 64, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !1921, file: !534, line: 125, baseType: !1926, size: 64, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!752}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1921, file: !534, line: 130, baseType: !1930, size: 64, offset: 192)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!7}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !1921, file: !534, line: 133, baseType: !1934, size: 64, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1921, file: !534, line: 136, baseType: !1934, size: 64, offset: 320)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !1921, file: !534, line: 139, baseType: !753, size: 32, offset: 384)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !1921, file: !534, line: 143, baseType: !1938, size: 32, offset: 416)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !541, line: 80, baseType: !540)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !1921, file: !534, line: 146, baseType: !7, size: 32, offset: 448)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !1921, file: !534, line: 147, baseType: !7, size: 32, offset: 480)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !1921, file: !534, line: 148, baseType: !7, size: 32, offset: 512)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !1921, file: !534, line: 151, baseType: !7, size: 32, offset: 544)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !1921, file: !534, line: 152, baseType: !7, size: 32, offset: 576)
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "pass_jump2", scope: !2, file: !3, line: 2286, type: !1918, isLocal: false, isDefinition: true)
!1946 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "first_pass", scope: !2, file: !3, line: 63, type: !752, isLocal: true, isDefinition: true)
!1949 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1950 = !{i32 2, !"Dwarf Version", i32 4}
!1951 = !{i32 2, !"Debug Info Version", i32 3}
!1952 = !{i32 1, !"wchar_size", i32 4}
!1953 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1954 = distinct !DISubprogram(name: "vprintf", scope: !1955, file: !1955, line: 39, type: !1956, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1966)
!1955 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!753, !1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !758)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1961)
!1961 = !{!1962, !1963, !1964, !1965}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1960, file: !3, baseType: !7, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1960, file: !3, baseType: !7, size: 32, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1960, file: !3, baseType: !757, size: 64, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1960, file: !3, baseType: !757, size: 64, offset: 128)
!1966 = !{!1967, !1968}
!1967 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1954, file: !1955, line: 39, type: !1958)
!1968 = !DILocalVariable(name: "__arg", arg: 2, scope: !1954, file: !1955, line: 39, type: !1959)
!1969 = !DILocation(line: 0, scope: !1954)
!1970 = !DILocation(line: 41, column: 20, scope: !1954)
!1971 = !DILocation(line: 41, column: 10, scope: !1954)
!1972 = !DILocation(line: 41, column: 3, scope: !1954)
!1973 = distinct !DISubprogram(name: "getchar", scope: !1955, file: !1955, line: 47, type: !1974, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1976)
!1974 = !DISubroutineType(types: !1975)
!1975 = !{!753}
!1976 = !{}
!1977 = !DILocation(line: 49, column: 16, scope: !1973)
!1978 = !DILocation(line: 49, column: 10, scope: !1973)
!1979 = !DILocation(line: 49, column: 3, scope: !1973)
!1980 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1955, file: !1955, line: 56, type: !1981, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2033)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!753, !1983}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1985, line: 7, baseType: !1986)
!1985 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1987, line: 49, size: 1728, elements: !1988)
!1987 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2004, !2006, !2007, !2008, !2011, !2012, !2013, !2014, !2017, !2019, !2022, !2025, !2026, !2027, !2028, !2029}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1986, file: !1987, line: 51, baseType: !753, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1986, file: !1987, line: 54, baseType: !755, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1986, file: !1987, line: 55, baseType: !755, size: 64, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1986, file: !1987, line: 56, baseType: !755, size: 64, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1986, file: !1987, line: 57, baseType: !755, size: 64, offset: 256)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1986, file: !1987, line: 58, baseType: !755, size: 64, offset: 320)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1986, file: !1987, line: 59, baseType: !755, size: 64, offset: 384)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1986, file: !1987, line: 60, baseType: !755, size: 64, offset: 448)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1986, file: !1987, line: 61, baseType: !755, size: 64, offset: 512)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1986, file: !1987, line: 64, baseType: !755, size: 64, offset: 576)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1986, file: !1987, line: 65, baseType: !755, size: 64, offset: 640)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1986, file: !1987, line: 66, baseType: !755, size: 64, offset: 704)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1986, file: !1987, line: 68, baseType: !2002, size: 64, offset: 768)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1987, line: 36, flags: DIFlagFwdDecl)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1986, file: !1987, line: 70, baseType: !2005, size: 64, offset: 832)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1986, file: !1987, line: 72, baseType: !753, size: 32, offset: 896)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1986, file: !1987, line: 73, baseType: !753, size: 32, offset: 928)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1986, file: !1987, line: 74, baseType: !2009, size: 64, offset: 960)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2010, line: 152, baseType: !868)
!2010 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1986, file: !1987, line: 77, baseType: !1914, size: 16, offset: 1024)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1986, file: !1987, line: 78, baseType: !1649, size: 8, offset: 1040)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1986, file: !1987, line: 79, baseType: !992, size: 8, offset: 1048)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1986, file: !1987, line: 81, baseType: !2015, size: 64, offset: 1088)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1987, line: 43, baseType: null)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1986, file: !1987, line: 89, baseType: !2018, size: 64, offset: 1152)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2010, line: 153, baseType: !868)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1986, file: !1987, line: 91, baseType: !2020, size: 64, offset: 1216)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1987, line: 37, flags: DIFlagFwdDecl)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1986, file: !1987, line: 92, baseType: !2023, size: 64, offset: 1280)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1987, line: 38, flags: DIFlagFwdDecl)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1986, file: !1987, line: 93, baseType: !2005, size: 64, offset: 1344)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1986, file: !1987, line: 94, baseType: !757, size: 64, offset: 1408)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1986, file: !1987, line: 95, baseType: !1346, size: 64, offset: 1472)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1986, file: !1987, line: 96, baseType: !753, size: 32, offset: 1536)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1986, file: !1987, line: 98, baseType: !2030, size: 160, offset: 1568)
!2030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 160, elements: !2031)
!2031 = !{!2032}
!2032 = !DISubrange(count: 20)
!2033 = !{!2034}
!2034 = !DILocalVariable(name: "__fp", arg: 1, scope: !1980, file: !1955, line: 56, type: !1983)
!2035 = !DILocation(line: 0, scope: !1980)
!2036 = !DILocation(line: 58, column: 10, scope: !1980)
!2037 = !DILocation(line: 58, column: 3, scope: !1980)
!2038 = distinct !DISubprogram(name: "getc_unlocked", scope: !1955, file: !1955, line: 66, type: !1981, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2039)
!2039 = !{!2040}
!2040 = !DILocalVariable(name: "__fp", arg: 1, scope: !2038, file: !1955, line: 66, type: !1983)
!2041 = !DILocation(line: 0, scope: !2038)
!2042 = !DILocation(line: 68, column: 10, scope: !2038)
!2043 = !DILocation(line: 68, column: 3, scope: !2038)
!2044 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1955, file: !1955, line: 73, type: !1974, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1976)
!2045 = !DILocation(line: 75, column: 10, scope: !2044)
!2046 = !DILocation(line: 75, column: 3, scope: !2044)
!2047 = distinct !DISubprogram(name: "putchar", scope: !1955, file: !1955, line: 82, type: !2048, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2050)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!753, !753}
!2050 = !{!2051}
!2051 = !DILocalVariable(name: "__c", arg: 1, scope: !2047, file: !1955, line: 82, type: !753)
!2052 = !DILocation(line: 0, scope: !2047)
!2053 = !DILocation(line: 84, column: 21, scope: !2047)
!2054 = !DILocation(line: 84, column: 10, scope: !2047)
!2055 = !DILocation(line: 84, column: 3, scope: !2047)
!2056 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1955, file: !1955, line: 91, type: !2057, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2059)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!753, !753, !1983}
!2059 = !{!2060, !2061}
!2060 = !DILocalVariable(name: "__c", arg: 1, scope: !2056, file: !1955, line: 91, type: !753)
!2061 = !DILocalVariable(name: "__stream", arg: 2, scope: !2056, file: !1955, line: 91, type: !1983)
!2062 = !DILocation(line: 0, scope: !2056)
!2063 = !DILocation(line: 93, column: 10, scope: !2056)
!2064 = !DILocation(line: 93, column: 3, scope: !2056)
!2065 = distinct !DISubprogram(name: "putc_unlocked", scope: !1955, file: !1955, line: 101, type: !2057, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2066)
!2066 = !{!2067, !2068}
!2067 = !DILocalVariable(name: "__c", arg: 1, scope: !2065, file: !1955, line: 101, type: !753)
!2068 = !DILocalVariable(name: "__stream", arg: 2, scope: !2065, file: !1955, line: 101, type: !1983)
!2069 = !DILocation(line: 0, scope: !2065)
!2070 = !DILocation(line: 103, column: 10, scope: !2065)
!2071 = !DILocation(line: 103, column: 3, scope: !2065)
!2072 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1955, file: !1955, line: 108, type: !2048, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2073)
!2073 = !{!2074}
!2074 = !DILocalVariable(name: "__c", arg: 1, scope: !2072, file: !1955, line: 108, type: !753)
!2075 = !DILocation(line: 0, scope: !2072)
!2076 = !DILocation(line: 110, column: 10, scope: !2072)
!2077 = !DILocation(line: 110, column: 3, scope: !2072)
!2078 = distinct !DISubprogram(name: "getline", scope: !1955, file: !1955, line: 118, type: !2079, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2083)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{!2081, !754, !2082, !1983}
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2010, line: 193, baseType: !868)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!2083 = !{!2084, !2085, !2086}
!2084 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2078, file: !1955, line: 118, type: !754)
!2085 = !DILocalVariable(name: "__n", arg: 2, scope: !2078, file: !1955, line: 118, type: !2082)
!2086 = !DILocalVariable(name: "__stream", arg: 3, scope: !2078, file: !1955, line: 118, type: !1983)
!2087 = !DILocation(line: 0, scope: !2078)
!2088 = !DILocation(line: 120, column: 10, scope: !2078)
!2089 = !DILocation(line: 120, column: 3, scope: !2078)
!2090 = distinct !DISubprogram(name: "feof_unlocked", scope: !1955, file: !1955, line: 128, type: !1981, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2091)
!2091 = !{!2092}
!2092 = !DILocalVariable(name: "__stream", arg: 1, scope: !2090, file: !1955, line: 128, type: !1983)
!2093 = !DILocation(line: 0, scope: !2090)
!2094 = !DILocation(line: 130, column: 10, scope: !2090)
!2095 = !DILocation(line: 130, column: 3, scope: !2090)
!2096 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1955, file: !1955, line: 135, type: !1981, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2097)
!2097 = !{!2098}
!2098 = !DILocalVariable(name: "__stream", arg: 1, scope: !2096, file: !1955, line: 135, type: !1983)
!2099 = !DILocation(line: 0, scope: !2096)
!2100 = !DILocation(line: 137, column: 10, scope: !2096)
!2101 = !DILocation(line: 137, column: 3, scope: !2096)
!2102 = distinct !DISubprogram(name: "tolower", scope: !2103, file: !2103, line: 207, type: !2048, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2104)
!2103 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2104 = !{!2105}
!2105 = !DILocalVariable(name: "__c", arg: 1, scope: !2102, file: !2103, line: 207, type: !753)
!2106 = !DILocation(line: 0, scope: !2102)
!2107 = !DILocation(line: 209, column: 22, scope: !2102)
!2108 = !DILocation(line: 209, column: 39, scope: !2102)
!2109 = !DILocation(line: 209, column: 38, scope: !2102)
!2110 = !DILocation(line: 209, column: 37, scope: !2102)
!2111 = !DILocation(line: 209, column: 10, scope: !2102)
!2112 = !DILocation(line: 209, column: 3, scope: !2102)
!2113 = distinct !DISubprogram(name: "toupper", scope: !2103, file: !2103, line: 213, type: !2048, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2114)
!2114 = !{!2115}
!2115 = !DILocalVariable(name: "__c", arg: 1, scope: !2113, file: !2103, line: 213, type: !753)
!2116 = !DILocation(line: 0, scope: !2113)
!2117 = !DILocation(line: 215, column: 22, scope: !2113)
!2118 = !DILocation(line: 215, column: 39, scope: !2113)
!2119 = !DILocation(line: 215, column: 38, scope: !2113)
!2120 = !DILocation(line: 215, column: 37, scope: !2113)
!2121 = !DILocation(line: 215, column: 10, scope: !2113)
!2122 = !DILocation(line: 215, column: 3, scope: !2113)
!2123 = distinct !DISubprogram(name: "atoi", scope: !2124, file: !2124, line: 361, type: !2125, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2127)
!2124 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2125 = !DISubroutineType(types: !2126)
!2126 = !{!753, !758}
!2127 = !{!2128}
!2128 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2123, file: !2124, line: 361, type: !758)
!2129 = !DILocation(line: 0, scope: !2123)
!2130 = !DILocation(line: 363, column: 16, scope: !2123)
!2131 = !DILocation(line: 363, column: 10, scope: !2123)
!2132 = !DILocation(line: 363, column: 3, scope: !2123)
!2133 = distinct !DISubprogram(name: "atol", scope: !2124, file: !2124, line: 366, type: !2134, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2136)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!868, !758}
!2136 = !{!2137}
!2137 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2133, file: !2124, line: 366, type: !758)
!2138 = !DILocation(line: 0, scope: !2133)
!2139 = !DILocation(line: 368, column: 10, scope: !2133)
!2140 = !DILocation(line: 368, column: 3, scope: !2133)
!2141 = distinct !DISubprogram(name: "atoll", scope: !2124, file: !2124, line: 373, type: !2142, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2145)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!2144, !758}
!2144 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2145 = !{!2146}
!2146 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2141, file: !2124, line: 373, type: !758)
!2147 = !DILocation(line: 0, scope: !2141)
!2148 = !DILocation(line: 375, column: 10, scope: !2141)
!2149 = !DILocation(line: 375, column: 3, scope: !2141)
!2150 = distinct !DISubprogram(name: "bsearch", scope: !2151, file: !2151, line: 20, type: !2152, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2155)
!2151 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!757, !1331, !1331, !1346, !1346, !2154}
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2124, line: 808, baseType: !1335)
!2155 = !{!2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165}
!2156 = !DILocalVariable(name: "__key", arg: 1, scope: !2150, file: !2151, line: 20, type: !1331)
!2157 = !DILocalVariable(name: "__base", arg: 2, scope: !2150, file: !2151, line: 20, type: !1331)
!2158 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2150, file: !2151, line: 20, type: !1346)
!2159 = !DILocalVariable(name: "__size", arg: 4, scope: !2150, file: !2151, line: 20, type: !1346)
!2160 = !DILocalVariable(name: "__compar", arg: 5, scope: !2150, file: !2151, line: 21, type: !2154)
!2161 = !DILocalVariable(name: "__l", scope: !2150, file: !2151, line: 23, type: !1346)
!2162 = !DILocalVariable(name: "__u", scope: !2150, file: !2151, line: 23, type: !1346)
!2163 = !DILocalVariable(name: "__idx", scope: !2150, file: !2151, line: 23, type: !1346)
!2164 = !DILocalVariable(name: "__p", scope: !2150, file: !2151, line: 24, type: !1331)
!2165 = !DILocalVariable(name: "__comparison", scope: !2150, file: !2151, line: 25, type: !753)
!2166 = !DILocation(line: 0, scope: !2150)
!2167 = !DILocation(line: 29, column: 3, scope: !2150)
!2168 = !DILocation(line: 27, column: 7, scope: !2150)
!2169 = !DILocation(line: 29, column: 14, scope: !2150)
!2170 = !DILocation(line: 31, column: 20, scope: !2171)
!2171 = distinct !DILexicalBlock(scope: !2150, file: !2151, line: 30, column: 5)
!2172 = !DILocation(line: 31, column: 27, scope: !2171)
!2173 = !DILocation(line: 32, column: 56, scope: !2171)
!2174 = !DILocation(line: 32, column: 47, scope: !2171)
!2175 = !DILocation(line: 33, column: 22, scope: !2171)
!2176 = !DILocation(line: 34, column: 24, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2171, file: !2151, line: 34, column: 11)
!2178 = !DILocation(line: 34, column: 11, scope: !2171)
!2179 = !DILocation(line: 36, column: 29, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2177, file: !2151, line: 36, column: 16)
!2181 = !DILocation(line: 36, column: 16, scope: !2177)
!2182 = !DILocation(line: 37, column: 14, scope: !2180)
!2183 = distinct !{!2183, !2167, !2184}
!2184 = !DILocation(line: 40, column: 5, scope: !2150)
!2185 = !DILocation(line: 43, column: 1, scope: !2150)
!2186 = distinct !DISubprogram(name: "atof", scope: !2187, file: !2187, line: 25, type: !2188, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2191)
!2187 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!2190, !758}
!2190 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2191 = !{!2192}
!2192 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2186, file: !2187, line: 25, type: !758)
!2193 = !DILocation(line: 0, scope: !2186)
!2194 = !DILocation(line: 27, column: 10, scope: !2186)
!2195 = !DILocation(line: 27, column: 3, scope: !2186)
!2196 = distinct !DISubprogram(name: "strtoimax", scope: !2197, file: !2197, line: 324, type: !2198, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2197 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!2200, !1958, !2203, !753}
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2201, line: 101, baseType: !2202)
!2201 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2010, line: 72, baseType: !868)
!2203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !754)
!2204 = !{!2205, !2206, !2207}
!2205 = !DILocalVariable(name: "nptr", arg: 1, scope: !2196, file: !2197, line: 324, type: !1958)
!2206 = !DILocalVariable(name: "endptr", arg: 2, scope: !2196, file: !2197, line: 324, type: !2203)
!2207 = !DILocalVariable(name: "base", arg: 3, scope: !2196, file: !2197, line: 324, type: !753)
!2208 = !DILocation(line: 0, scope: !2196)
!2209 = !DILocation(line: 327, column: 10, scope: !2196)
!2210 = !DILocation(line: 327, column: 3, scope: !2196)
!2211 = distinct !DISubprogram(name: "strtoumax", scope: !2197, file: !2197, line: 336, type: !2212, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2216)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!2214, !1958, !2203, !753}
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2201, line: 102, baseType: !2215)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2010, line: 73, baseType: !851)
!2216 = !{!2217, !2218, !2219}
!2217 = !DILocalVariable(name: "nptr", arg: 1, scope: !2211, file: !2197, line: 336, type: !1958)
!2218 = !DILocalVariable(name: "endptr", arg: 2, scope: !2211, file: !2197, line: 336, type: !2203)
!2219 = !DILocalVariable(name: "base", arg: 3, scope: !2211, file: !2197, line: 336, type: !753)
!2220 = !DILocation(line: 0, scope: !2211)
!2221 = !DILocation(line: 339, column: 10, scope: !2211)
!2222 = !DILocation(line: 339, column: 3, scope: !2211)
!2223 = distinct !DISubprogram(name: "wcstoimax", scope: !2197, file: !2197, line: 348, type: !2224, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2233)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!2200, !2226, !2230, !753}
!2226 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2227)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2229)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2197, line: 34, baseType: !753)
!2230 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2231)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2233 = !{!2234, !2235, !2236}
!2234 = !DILocalVariable(name: "nptr", arg: 1, scope: !2223, file: !2197, line: 348, type: !2226)
!2235 = !DILocalVariable(name: "endptr", arg: 2, scope: !2223, file: !2197, line: 348, type: !2230)
!2236 = !DILocalVariable(name: "base", arg: 3, scope: !2223, file: !2197, line: 348, type: !753)
!2237 = !DILocation(line: 0, scope: !2223)
!2238 = !DILocation(line: 351, column: 10, scope: !2223)
!2239 = !DILocation(line: 351, column: 3, scope: !2223)
!2240 = distinct !DISubprogram(name: "wcstoumax", scope: !2197, file: !2197, line: 362, type: !2241, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2243)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!2214, !2226, !2230, !753}
!2243 = !{!2244, !2245, !2246}
!2244 = !DILocalVariable(name: "nptr", arg: 1, scope: !2240, file: !2197, line: 362, type: !2226)
!2245 = !DILocalVariable(name: "endptr", arg: 2, scope: !2240, file: !2197, line: 362, type: !2230)
!2246 = !DILocalVariable(name: "base", arg: 3, scope: !2240, file: !2197, line: 362, type: !753)
!2247 = !DILocation(line: 0, scope: !2240)
!2248 = !DILocation(line: 365, column: 10, scope: !2240)
!2249 = !DILocation(line: 365, column: 3, scope: !2240)
!2250 = distinct !DISubprogram(name: "stat", scope: !2251, file: !2251, line: 453, type: !2252, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2289)
!2251 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!753, !758, !2254}
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2256, line: 46, size: 1152, elements: !2257)
!2256 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2257 = !{!2258, !2260, !2262, !2264, !2266, !2268, !2270, !2271, !2272, !2273, !2275, !2277, !2285, !2286, !2287}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2255, file: !2256, line: 48, baseType: !2259, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2010, line: 145, baseType: !851)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2255, file: !2256, line: 53, baseType: !2261, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2010, line: 148, baseType: !851)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2255, file: !2256, line: 61, baseType: !2263, size: 64, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2010, line: 151, baseType: !851)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2255, file: !2256, line: 62, baseType: !2265, size: 32, offset: 192)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2010, line: 150, baseType: !7)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2255, file: !2256, line: 64, baseType: !2267, size: 32, offset: 224)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2010, line: 146, baseType: !7)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2255, file: !2256, line: 65, baseType: !2269, size: 32, offset: 256)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2010, line: 147, baseType: !7)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2255, file: !2256, line: 67, baseType: !753, size: 32, offset: 288)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2255, file: !2256, line: 69, baseType: !2259, size: 64, offset: 320)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2255, file: !2256, line: 74, baseType: !2009, size: 64, offset: 384)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2255, file: !2256, line: 78, baseType: !2274, size: 64, offset: 448)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2010, line: 174, baseType: !868)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2255, file: !2256, line: 80, baseType: !2276, size: 64, offset: 512)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2010, line: 179, baseType: !868)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2255, file: !2256, line: 91, baseType: !2278, size: 128, offset: 576)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2279, line: 10, size: 128, elements: !2280)
!2279 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2280 = !{!2281, !2283}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2278, file: !2279, line: 12, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2010, line: 160, baseType: !868)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2278, file: !2279, line: 16, baseType: !2284, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2010, line: 196, baseType: !868)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2255, file: !2256, line: 92, baseType: !2278, size: 128, offset: 704)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2255, file: !2256, line: 93, baseType: !2278, size: 128, offset: 832)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2255, file: !2256, line: 106, baseType: !2288, size: 192, offset: 960)
!2288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2284, size: 192, elements: !968)
!2289 = !{!2290, !2291}
!2290 = !DILocalVariable(name: "__path", arg: 1, scope: !2250, file: !2251, line: 453, type: !758)
!2291 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2250, file: !2251, line: 453, type: !2254)
!2292 = !DILocation(line: 0, scope: !2250)
!2293 = !DILocation(line: 455, column: 10, scope: !2250)
!2294 = !DILocation(line: 455, column: 3, scope: !2250)
!2295 = distinct !DISubprogram(name: "lstat", scope: !2251, file: !2251, line: 460, type: !2252, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2296)
!2296 = !{!2297, !2298}
!2297 = !DILocalVariable(name: "__path", arg: 1, scope: !2295, file: !2251, line: 460, type: !758)
!2298 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2295, file: !2251, line: 460, type: !2254)
!2299 = !DILocation(line: 0, scope: !2295)
!2300 = !DILocation(line: 462, column: 10, scope: !2295)
!2301 = !DILocation(line: 462, column: 3, scope: !2295)
!2302 = distinct !DISubprogram(name: "fstat", scope: !2251, file: !2251, line: 467, type: !2303, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2305)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{!753, !753, !2254}
!2305 = !{!2306, !2307}
!2306 = !DILocalVariable(name: "__fd", arg: 1, scope: !2302, file: !2251, line: 467, type: !753)
!2307 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2302, file: !2251, line: 467, type: !2254)
!2308 = !DILocation(line: 0, scope: !2302)
!2309 = !DILocation(line: 469, column: 10, scope: !2302)
!2310 = !DILocation(line: 469, column: 3, scope: !2302)
!2311 = distinct !DISubprogram(name: "fstatat", scope: !2251, file: !2251, line: 474, type: !2312, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2314)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!753, !753, !758, !2254, !753}
!2314 = !{!2315, !2316, !2317, !2318}
!2315 = !DILocalVariable(name: "__fd", arg: 1, scope: !2311, file: !2251, line: 474, type: !753)
!2316 = !DILocalVariable(name: "__filename", arg: 2, scope: !2311, file: !2251, line: 474, type: !758)
!2317 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2311, file: !2251, line: 474, type: !2254)
!2318 = !DILocalVariable(name: "__flag", arg: 4, scope: !2311, file: !2251, line: 474, type: !753)
!2319 = !DILocation(line: 0, scope: !2311)
!2320 = !DILocation(line: 477, column: 10, scope: !2311)
!2321 = !DILocation(line: 477, column: 3, scope: !2311)
!2322 = distinct !DISubprogram(name: "mknod", scope: !2251, file: !2251, line: 483, type: !2323, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!753, !758, !2265, !2259}
!2325 = !{!2326, !2327, !2328}
!2326 = !DILocalVariable(name: "__path", arg: 1, scope: !2322, file: !2251, line: 483, type: !758)
!2327 = !DILocalVariable(name: "__mode", arg: 2, scope: !2322, file: !2251, line: 483, type: !2265)
!2328 = !DILocalVariable(name: "__dev", arg: 3, scope: !2322, file: !2251, line: 483, type: !2259)
!2329 = !DILocation(line: 0, scope: !2322)
!2330 = !DILocation(line: 485, column: 10, scope: !2322)
!2331 = !DILocation(line: 485, column: 3, scope: !2322)
!2332 = distinct !DISubprogram(name: "mknodat", scope: !2251, file: !2251, line: 491, type: !2333, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2335)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!753, !753, !758, !2265, !2259}
!2335 = !{!2336, !2337, !2338, !2339}
!2336 = !DILocalVariable(name: "__fd", arg: 1, scope: !2332, file: !2251, line: 491, type: !753)
!2337 = !DILocalVariable(name: "__path", arg: 2, scope: !2332, file: !2251, line: 491, type: !758)
!2338 = !DILocalVariable(name: "__mode", arg: 3, scope: !2332, file: !2251, line: 491, type: !2265)
!2339 = !DILocalVariable(name: "__dev", arg: 4, scope: !2332, file: !2251, line: 491, type: !2259)
!2340 = !DILocation(line: 0, scope: !2332)
!2341 = !DILocation(line: 494, column: 10, scope: !2332)
!2342 = !DILocation(line: 494, column: 3, scope: !2332)
!2343 = distinct !DISubprogram(name: "stat64", scope: !2251, file: !2251, line: 502, type: !2344, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2366)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!753, !758, !2346}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2256, line: 119, size: 1152, elements: !2348)
!2348 = !{!2349, !2350, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2362, !2363, !2364, !2365}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2347, file: !2256, line: 121, baseType: !2259, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2347, file: !2256, line: 123, baseType: !2351, size: 64, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2010, line: 149, baseType: !851)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2347, file: !2256, line: 124, baseType: !2263, size: 64, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2347, file: !2256, line: 125, baseType: !2265, size: 32, offset: 192)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2347, file: !2256, line: 132, baseType: !2267, size: 32, offset: 224)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2347, file: !2256, line: 133, baseType: !2269, size: 32, offset: 256)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2347, file: !2256, line: 135, baseType: !753, size: 32, offset: 288)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2347, file: !2256, line: 136, baseType: !2259, size: 64, offset: 320)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2347, file: !2256, line: 137, baseType: !2009, size: 64, offset: 384)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2347, file: !2256, line: 143, baseType: !2274, size: 64, offset: 448)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2347, file: !2256, line: 144, baseType: !2361, size: 64, offset: 512)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2010, line: 180, baseType: !868)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2347, file: !2256, line: 152, baseType: !2278, size: 128, offset: 576)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2347, file: !2256, line: 153, baseType: !2278, size: 128, offset: 704)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2347, file: !2256, line: 154, baseType: !2278, size: 128, offset: 832)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2347, file: !2256, line: 164, baseType: !2288, size: 192, offset: 960)
!2366 = !{!2367, !2368}
!2367 = !DILocalVariable(name: "__path", arg: 1, scope: !2343, file: !2251, line: 502, type: !758)
!2368 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2343, file: !2251, line: 502, type: !2346)
!2369 = !DILocation(line: 0, scope: !2343)
!2370 = !DILocation(line: 504, column: 10, scope: !2343)
!2371 = !DILocation(line: 504, column: 3, scope: !2343)
!2372 = distinct !DISubprogram(name: "lstat64", scope: !2251, file: !2251, line: 509, type: !2344, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2373)
!2373 = !{!2374, !2375}
!2374 = !DILocalVariable(name: "__path", arg: 1, scope: !2372, file: !2251, line: 509, type: !758)
!2375 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2372, file: !2251, line: 509, type: !2346)
!2376 = !DILocation(line: 0, scope: !2372)
!2377 = !DILocation(line: 511, column: 10, scope: !2372)
!2378 = !DILocation(line: 511, column: 3, scope: !2372)
!2379 = distinct !DISubprogram(name: "fstat64", scope: !2251, file: !2251, line: 516, type: !2380, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2382)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!753, !753, !2346}
!2382 = !{!2383, !2384}
!2383 = !DILocalVariable(name: "__fd", arg: 1, scope: !2379, file: !2251, line: 516, type: !753)
!2384 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2379, file: !2251, line: 516, type: !2346)
!2385 = !DILocation(line: 0, scope: !2379)
!2386 = !DILocation(line: 518, column: 10, scope: !2379)
!2387 = !DILocation(line: 518, column: 3, scope: !2379)
!2388 = distinct !DISubprogram(name: "fstatat64", scope: !2251, file: !2251, line: 523, type: !2389, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2391)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!753, !753, !758, !2346, !753}
!2391 = !{!2392, !2393, !2394, !2395}
!2392 = !DILocalVariable(name: "__fd", arg: 1, scope: !2388, file: !2251, line: 523, type: !753)
!2393 = !DILocalVariable(name: "__filename", arg: 2, scope: !2388, file: !2251, line: 523, type: !758)
!2394 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2388, file: !2251, line: 523, type: !2346)
!2395 = !DILocalVariable(name: "__flag", arg: 4, scope: !2388, file: !2251, line: 523, type: !753)
!2396 = !DILocation(line: 0, scope: !2388)
!2397 = !DILocation(line: 526, column: 10, scope: !2388)
!2398 = !DILocation(line: 526, column: 3, scope: !2388)
!2399 = distinct !DISubprogram(name: "delete_unreachable_blocks", scope: !3, file: !3, line: 2057, type: !1927, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2400)
!2400 = !{!2401, !2402, !2403, !2404}
!2401 = !DILocalVariable(name: "changed", scope: !2399, file: !3, line: 2059, type: !752)
!2402 = !DILocalVariable(name: "b", scope: !2399, file: !3, line: 2060, type: !1154)
!2403 = !DILocalVariable(name: "prev_bb", scope: !2399, file: !3, line: 2060, type: !1154)
!2404 = !DILocalVariable(name: "h", scope: !2405, file: !3, line: 2086, type: !2414)
!2405 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 2085, column: 3)
!2406 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 2082, column: 12)
!2407 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 2078, column: 6)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !3, line: 2077, column: 8)
!2409 = distinct !DILexicalBlock(scope: !2410, file: !3, line: 2074, column: 2)
!2410 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 2073, column: 7)
!2411 = distinct !DILexicalBlock(scope: !2412, file: !3, line: 2073, column: 7)
!2412 = distinct !DILexicalBlock(scope: !2413, file: !3, line: 2072, column: 5)
!2413 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 2070, column: 7)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !135, line: 283, baseType: !2416)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !135, line: 283, size: 128, elements: !2417)
!2417 = !{!2418}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2416, file: !135, line: 283, baseType: !1291, size: 128)
!2419 = !DILocation(line: 0, scope: !2399)
!2420 = !DILocation(line: 2062, column: 3, scope: !2399)
!2421 = !DILocation(line: 2070, column: 7, scope: !2413)
!2422 = !DILocation(line: 2070, column: 28, scope: !2413)
!2423 = !DILocation(line: 2070, column: 31, scope: !2413)
!2424 = !DILocation(line: 2070, column: 50, scope: !2413)
!2425 = !DILocation(line: 2071, column: 7, scope: !2413)
!2426 = !DILocation(line: 2071, column: 10, scope: !2413)
!2427 = !DILocation(line: 2070, column: 7, scope: !2399)
!2428 = !DILocation(line: 2073, column: 16, scope: !2411)
!2429 = !DILocation(line: 2073, column: 32, scope: !2411)
!2430 = !DILocation(line: 0, scope: !2405)
!2431 = !DILocation(line: 2073, column: 12, scope: !2411)
!2432 = !DILocation(line: 2073, column: 46, scope: !2410)
!2433 = !DILocation(line: 0, scope: !2411)
!2434 = !DILocation(line: 2059, column: 8, scope: !2399)
!2435 = !DILocation(line: 2073, column: 43, scope: !2410)
!2436 = !DILocation(line: 2073, column: 7, scope: !2411)
!2437 = !DILocation(line: 2075, column: 17, scope: !2409)
!2438 = !DILocation(line: 2077, column: 13, scope: !2408)
!2439 = !DILocation(line: 2077, column: 19, scope: !2408)
!2440 = !DILocation(line: 2077, column: 8, scope: !2409)
!2441 = !DILocation(line: 2082, column: 13, scope: !2406)
!2442 = !DILocation(line: 2082, column: 12, scope: !2407)
!2443 = !DILocation(line: 2083, column: 3, scope: !2406)
!2444 = !DILocation(line: 2086, column: 5, scope: !2405)
!2445 = !DILocation(line: 2087, column: 9, scope: !2405)
!2446 = !DILocation(line: 2086, column: 30, scope: !2405)
!2447 = !DILocation(line: 2089, column: 5, scope: !2405)
!2448 = !DILocation(line: 2089, column: 12, scope: !2405)
!2449 = !DILocation(line: 0, scope: !2409)
!2450 = !DILocation(line: 2091, column: 13, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 2090, column: 7)
!2452 = !DILocation(line: 2093, column: 22, scope: !2451)
!2453 = !DILocation(line: 2095, column: 9, scope: !2451)
!2454 = !DILocation(line: 2097, column: 9, scope: !2451)
!2455 = distinct !{!2455, !2447, !2456}
!2456 = !DILocation(line: 2098, column: 7, scope: !2405)
!2457 = !DILocation(line: 2100, column: 5, scope: !2405)
!2458 = !DILocation(line: 2101, column: 3, scope: !2406)
!2459 = !DILocation(line: 2075, column: 12, scope: !2409)
!2460 = !DILocation(line: 0, scope: !2410)
!2461 = !DILocation(line: 2073, column: 7, scope: !2410)
!2462 = distinct !{!2462, !2436, !2463}
!2463 = !DILocation(line: 2105, column: 2, scope: !2411)
!2464 = !DILocation(line: 2109, column: 16, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 2109, column: 7)
!2466 = distinct !DILexicalBlock(scope: !2413, file: !3, line: 2108, column: 5)
!2467 = !DILocation(line: 2109, column: 32, scope: !2465)
!2468 = !DILocation(line: 2109, column: 12, scope: !2465)
!2469 = !DILocation(line: 2109, column: 46, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 2109, column: 7)
!2471 = !DILocation(line: 0, scope: !2465)
!2472 = !DILocation(line: 2109, column: 43, scope: !2470)
!2473 = !DILocation(line: 2109, column: 7, scope: !2465)
!2474 = !DILocation(line: 2111, column: 17, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2470, file: !3, line: 2110, column: 2)
!2476 = !DILocation(line: 2113, column: 13, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 2113, column: 8)
!2478 = !DILocation(line: 2113, column: 19, scope: !2477)
!2479 = !DILocation(line: 2113, column: 8, scope: !2475)
!2480 = !DILocation(line: 2115, column: 8, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2477, file: !3, line: 2114, column: 6)
!2482 = !DILocation(line: 2117, column: 6, scope: !2481)
!2483 = !DILocation(line: 0, scope: !2470)
!2484 = !DILocation(line: 2109, column: 7, scope: !2470)
!2485 = distinct !{!2485, !2473, !2486}
!2486 = !DILocation(line: 2118, column: 2, scope: !2465)
!2487 = !DILocation(line: 2121, column: 7, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 2121, column: 7)
!2489 = !DILocation(line: 2121, column: 7, scope: !2399)
!2490 = !DILocation(line: 2122, column: 5, scope: !2488)
!2491 = !DILocation(line: 2123, column: 3, scope: !2399)
!2492 = distinct !DISubprogram(name: "VEC_basic_block_base_length", scope: !135, file: !135, line: 281, type: !2493, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2497)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!7, !2495}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1291)
!2497 = !{!2498}
!2498 = !DILocalVariable(name: "vec_", arg: 1, scope: !2492, file: !135, line: 281, type: !2495)
!2499 = !DILocation(line: 0, scope: !2492)
!2500 = !DILocation(line: 281, column: 1, scope: !2492)
!2501 = distinct !DISubprogram(name: "VEC_basic_block_base_pop", scope: !135, file: !135, line: 281, type: !2502, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2505)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!1154, !2504}
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!2505 = !{!2506, !2507}
!2506 = !DILocalVariable(name: "vec_", arg: 1, scope: !2501, file: !135, line: 281, type: !2504)
!2507 = !DILocalVariable(name: "obj_", scope: !2501, file: !135, line: 281, type: !1154)
!2508 = !DILocation(line: 0, scope: !2501)
!2509 = !DILocation(line: 281, column: 1, scope: !2501)
!2510 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !135, file: !135, line: 283, type: !2511, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2514)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2513}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2514 = !{!2515}
!2515 = !DILocalVariable(name: "vec_", arg: 1, scope: !2510, file: !135, line: 283, type: !2513)
!2516 = !DILocation(line: 0, scope: !2510)
!2517 = !DILocation(line: 283, column: 1, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2510, file: !135, line: 283, column: 1)
!2519 = !DILocation(line: 283, column: 1, scope: !2510)
!2520 = distinct !DISubprogram(name: "delete_dead_jumptables", scope: !3, file: !3, line: 2131, type: !2521, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2523)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{null}
!2523 = !{!2524, !2525, !2529, !2530, !2536}
!2524 = !DILocalVariable(name: "bb", scope: !2520, file: !3, line: 2133, type: !1154)
!2525 = !DILocalVariable(name: "insn", scope: !2526, file: !3, line: 2139, type: !760)
!2526 = distinct !DILexicalBlock(scope: !2527, file: !3, line: 2138, column: 5)
!2527 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 2137, column: 3)
!2528 = distinct !DILexicalBlock(scope: !2520, file: !3, line: 2137, column: 3)
!2529 = !DILocalVariable(name: "next", scope: !2526, file: !3, line: 2139, type: !760)
!2530 = !DILocalVariable(name: "label", scope: !2531, file: !3, line: 2150, type: !760)
!2531 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 2149, column: 6)
!2532 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 2146, column: 8)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 2144, column: 2)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 2141, column: 7)
!2535 = distinct !DILexicalBlock(scope: !2526, file: !3, line: 2141, column: 7)
!2536 = !DILocalVariable(name: "jump", scope: !2531, file: !3, line: 2150, type: !760)
!2537 = !DILocation(line: 2137, column: 3, scope: !2528)
!2538 = !DILocation(line: 2137, column: 3, scope: !2527)
!2539 = !DILocation(line: 0, scope: !2528)
!2540 = !DILocation(line: 0, scope: !2520)
!2541 = !DILocation(line: 2141, column: 19, scope: !2535)
!2542 = !DILocation(line: 0, scope: !2526)
!2543 = !DILocation(line: 2141, column: 12, scope: !2535)
!2544 = !DILocation(line: 0, scope: !2535)
!2545 = !DILocation(line: 2142, column: 5, scope: !2534)
!2546 = !DILocation(line: 2142, column: 10, scope: !2534)
!2547 = !DILocation(line: 2142, column: 14, scope: !2534)
!2548 = !DILocation(line: 0, scope: !2534)
!2549 = !DILocation(line: 2141, column: 7, scope: !2535)
!2550 = !DILocation(line: 2145, column: 11, scope: !2533)
!2551 = !DILocation(line: 2146, column: 8, scope: !2532)
!2552 = !DILocation(line: 2147, column: 8, scope: !2532)
!2553 = !DILocation(line: 2147, column: 11, scope: !2532)
!2554 = !DILocation(line: 2147, column: 33, scope: !2532)
!2555 = !DILocation(line: 2147, column: 30, scope: !2532)
!2556 = !DILocation(line: 2148, column: 8, scope: !2532)
!2557 = !DILocation(line: 2148, column: 11, scope: !2532)
!2558 = !DILocation(line: 2146, column: 8, scope: !2533)
!2559 = !DILocation(line: 0, scope: !2531)
!2560 = !DILocation(line: 2152, column: 12, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2531, file: !3, line: 2152, column: 12)
!2562 = !DILocation(line: 2152, column: 12, scope: !2531)
!2563 = !DILocation(line: 2154, column: 5, scope: !2561)
!2564 = !DILocation(line: 2153, column: 3, scope: !2561)
!2565 = !DILocation(line: 2156, column: 15, scope: !2531)
!2566 = !DILocation(line: 2157, column: 8, scope: !2531)
!2567 = !DILocation(line: 2158, column: 8, scope: !2531)
!2568 = !DILocation(line: 2159, column: 6, scope: !2531)
!2569 = !DILocation(line: 0, scope: !2533)
!2570 = !DILocation(line: 2141, column: 7, scope: !2534)
!2571 = distinct !{!2571, !2549, !2572}
!2572 = !DILocation(line: 2160, column: 2, scope: !2535)
!2573 = !DILocation(line: 0, scope: !2527)
!2574 = distinct !{!2574, !2537, !2575}
!2575 = !DILocation(line: 2161, column: 5, scope: !2528)
!2576 = !DILocation(line: 2162, column: 1, scope: !2520)
!2577 = distinct !DISubprogram(name: "cleanup_cfg", scope: !3, file: !3, line: 2168, type: !2578, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2580)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!752, !753}
!2580 = !{!2581, !2582}
!2581 = !DILocalVariable(name: "mode", arg: 1, scope: !2577, file: !3, line: 2168, type: !753)
!2582 = !DILocalVariable(name: "changed", scope: !2577, file: !3, line: 2170, type: !752)
!2583 = !DILocation(line: 0, scope: !2577)
!2584 = !DILocation(line: 2175, column: 7, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2175, column: 7)
!2586 = !DILocation(line: 2175, column: 26, scope: !2585)
!2587 = !DILocation(line: 2176, column: 10, scope: !2585)
!2588 = !DILocation(line: 2175, column: 7, scope: !2577)
!2589 = !DILocation(line: 2178, column: 3, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 2178, column: 3)
!2591 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2178, column: 3)
!2592 = !DILocation(line: 2178, column: 3, scope: !2591)
!2593 = !DILocation(line: 2179, column: 7, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2179, column: 7)
!2595 = !DILocation(line: 2179, column: 7, scope: !2577)
!2596 = !DILocation(line: 2184, column: 18, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2598, file: !3, line: 2184, column: 11)
!2598 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 2180, column: 5)
!2599 = !DILocation(line: 2185, column: 8, scope: !2597)
!2600 = !DILocation(line: 2185, column: 4, scope: !2597)
!2601 = !DILocation(line: 2186, column: 31, scope: !2597)
!2602 = !DILocation(line: 2186, column: 45, scope: !2597)
!2603 = !DILocation(line: 2186, column: 2, scope: !2597)
!2604 = !DILocation(line: 2189, column: 3, scope: !2577)
!2605 = !DILocation(line: 2195, column: 12, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2195, column: 7)
!2607 = !DILocation(line: 2195, column: 7, scope: !2577)
!2608 = !DILocation(line: 2196, column: 5, scope: !2606)
!2609 = !DILocation(line: 2198, column: 8, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2198, column: 7)
!2611 = !DILocation(line: 2198, column: 7, scope: !2577)
!2612 = !DILocation(line: 0, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 2204, column: 11)
!2614 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2202, column: 5)
!2615 = !DILocation(line: 2201, column: 3, scope: !2577)
!2616 = !DILocation(line: 2201, column: 10, scope: !2577)
!2617 = !DILocation(line: 0, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 2218, column: 8)
!2619 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 2205, column: 2)
!2620 = !DILocation(line: 2203, column: 7, scope: !2614)
!2621 = !DILocation(line: 2222, column: 6, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 2221, column: 13)
!2623 = !DILocation(line: 2222, column: 9, scope: !2622)
!2624 = !DILocation(line: 2221, column: 13, scope: !2618)
!2625 = !DILocation(line: 2223, column: 6, scope: !2622)
!2626 = distinct !{!2626, !2615, !2627}
!2627 = !DILocation(line: 2227, column: 5, scope: !2577)
!2628 = !DILocation(line: 2229, column: 12, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2229, column: 7)
!2630 = !DILocation(line: 2218, column: 39, scope: !2618)
!2631 = !DILocation(line: 2218, column: 35, scope: !2618)
!2632 = !DILocation(line: 2219, column: 41, scope: !2618)
!2633 = !DILocation(line: 2219, column: 55, scope: !2618)
!2634 = !DILocation(line: 2219, column: 12, scope: !2618)
!2635 = !DILocation(line: 2218, column: 8, scope: !2619)
!2636 = !DILocation(line: 2204, column: 11, scope: !2614)
!2637 = !DILocation(line: 2229, column: 7, scope: !2577)
!2638 = !DILocation(line: 2230, column: 5, scope: !2629)
!2639 = !DILocation(line: 2238, column: 14, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2238, column: 7)
!2641 = !DILocation(line: 2238, column: 7, scope: !2577)
!2642 = !DILocation(line: 2239, column: 5, scope: !2640)
!2643 = !DILocation(line: 2241, column: 3, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 2241, column: 3)
!2645 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 2241, column: 3)
!2646 = !DILocation(line: 2241, column: 3, scope: !2645)
!2647 = !DILocation(line: 2244, column: 1, scope: !2577)
!2648 = distinct !DISubprogram(name: "try_optimize_cfg", scope: !3, file: !3, line: 1839, type: !2578, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2649)
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2664, !2665, !2666, !2669}
!2650 = !DILocalVariable(name: "mode", arg: 1, scope: !2648, file: !3, line: 1839, type: !753)
!2651 = !DILocalVariable(name: "changed_overall", scope: !2648, file: !3, line: 1841, type: !752)
!2652 = !DILocalVariable(name: "changed", scope: !2648, file: !3, line: 1842, type: !752)
!2653 = !DILocalVariable(name: "iterations", scope: !2648, file: !3, line: 1843, type: !753)
!2654 = !DILocalVariable(name: "bb", scope: !2648, file: !3, line: 1844, type: !1154)
!2655 = !DILocalVariable(name: "b", scope: !2648, file: !3, line: 1844, type: !1154)
!2656 = !DILocalVariable(name: "next", scope: !2648, file: !3, line: 1844, type: !1154)
!2657 = !DILocalVariable(name: "c", scope: !2658, file: !3, line: 1872, type: !1154)
!2658 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 1871, column: 6)
!2659 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 1870, column: 4)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 1870, column: 4)
!2661 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 1861, column: 2)
!2662 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 1855, column: 5)
!2663 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 1854, column: 7)
!2664 = !DILocalVariable(name: "s", scope: !2658, file: !3, line: 1873, type: !1171)
!2665 = !DILocalVariable(name: "changed_here", scope: !2658, file: !3, line: 1874, type: !752)
!2666 = !DILocalVariable(name: "label", scope: !2667, file: !3, line: 1914, type: !760)
!2667 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 1913, column: 3)
!2668 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1899, column: 12)
!2669 = !DILocalVariable(name: "bb_note", scope: !2670, file: !3, line: 1921, type: !760)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 1920, column: 7)
!2671 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 1919, column: 9)
!2672 = !DILocation(line: 0, scope: !2648)
!2673 = !DILocation(line: 1846, column: 12, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 1846, column: 7)
!2675 = !DILocation(line: 1846, column: 7, scope: !2648)
!2676 = !DILocation(line: 1847, column: 5, scope: !2674)
!2677 = !DILocation(line: 1849, column: 22, scope: !2648)
!2678 = !DILocation(line: 1851, column: 3, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 1851, column: 3)
!2680 = !DILocation(line: 1851, column: 3, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 1851, column: 3)
!2682 = !DILocation(line: 0, scope: !2679)
!2683 = !DILocation(line: 1852, column: 5, scope: !2681)
!2684 = !DILocation(line: 0, scope: !2681)
!2685 = distinct !{!2685, !2678, !2686}
!2686 = !DILocation(line: 1852, column: 30, scope: !2679)
!2687 = !DILocation(line: 1854, column: 17, scope: !2663)
!2688 = !DILocation(line: 1854, column: 9, scope: !2663)
!2689 = !DILocation(line: 1854, column: 7, scope: !2648)
!2690 = !DILocation(line: 1856, column: 18, scope: !2662)
!2691 = !DILocation(line: 0, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1934, column: 12)
!2693 = !DILocation(line: 0, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1995, column: 12)
!2695 = !DILocation(line: 0, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 2004, column: 12)
!2697 = !DILocation(line: 0, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 2021, column: 12)
!2699 = !DILocation(line: 1860, column: 7, scope: !2662)
!2700 = !DILocation(line: 1863, column: 14, scope: !2661)
!2701 = !DILocation(line: 1865, column: 8, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 1865, column: 8)
!2703 = !DILocation(line: 1865, column: 8, scope: !2661)
!2704 = !DILocation(line: 1866, column: 6, scope: !2702)
!2705 = !DILocation(line: 1870, column: 13, scope: !2660)
!2706 = !DILocation(line: 1870, column: 30, scope: !2660)
!2707 = !DILocation(line: 1870, column: 9, scope: !2660)
!2708 = !DILocation(line: 1870, column: 44, scope: !2659)
!2709 = !DILocation(line: 0, scope: !2660)
!2710 = !DILocation(line: 1862, column: 12, scope: !2661)
!2711 = !DILocation(line: 1870, column: 41, scope: !2659)
!2712 = !DILocation(line: 1870, column: 4, scope: !2660)
!2713 = !DILocation(line: 0, scope: !2658)
!2714 = !DILocation(line: 1884, column: 12, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1884, column: 12)
!2716 = !DILocation(line: 1884, column: 34, scope: !2715)
!2717 = !DILocation(line: 1885, column: 5, scope: !2715)
!2718 = !DILocation(line: 1885, column: 9, scope: !2715)
!2719 = !DILocation(line: 1885, column: 31, scope: !2715)
!2720 = !DILocation(line: 1886, column: 9, scope: !2715)
!2721 = !DILocation(line: 1886, column: 12, scope: !2715)
!2722 = !DILocation(line: 1887, column: 9, scope: !2715)
!2723 = !DILocation(line: 1887, column: 30, scope: !2715)
!2724 = !DILocation(line: 1887, column: 12, scope: !2715)
!2725 = !DILocation(line: 1887, column: 48, scope: !2715)
!2726 = !DILocation(line: 1887, column: 53, scope: !2715)
!2727 = !DILocation(line: 1884, column: 12, scope: !2658)
!2728 = !DILocation(line: 1889, column: 12, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2715, file: !3, line: 1888, column: 3)
!2730 = !DILocation(line: 1890, column: 5, scope: !2729)
!2731 = !DILocation(line: 1891, column: 9, scope: !2729)
!2732 = !DILocation(line: 1894, column: 15, scope: !2729)
!2733 = !DILocation(line: 1894, column: 12, scope: !2729)
!2734 = !DILocation(line: 1894, column: 10, scope: !2729)
!2735 = distinct !{!2735, !2712, !2736}
!2736 = !DILocation(line: 2031, column: 6, scope: !2660)
!2737 = !DILocation(line: 1894, column: 36, scope: !2729)
!2738 = !DILocation(line: 1899, column: 12, scope: !2668)
!2739 = !DILocation(line: 1900, column: 5, scope: !2668)
!2740 = !DILocation(line: 1900, column: 9, scope: !2668)
!2741 = !DILocation(line: 1900, column: 31, scope: !2668)
!2742 = !DILocation(line: 1900, column: 37, scope: !2668)
!2743 = !DILocation(line: 1901, column: 5, scope: !2668)
!2744 = !DILocation(line: 1901, column: 10, scope: !2668)
!2745 = !DILocation(line: 1901, column: 32, scope: !2668)
!2746 = !DILocation(line: 1901, column: 38, scope: !2668)
!2747 = !DILocation(line: 1902, column: 5, scope: !2668)
!2748 = !DILocation(line: 1902, column: 8, scope: !2668)
!2749 = !DILocation(line: 1909, column: 5, scope: !2668)
!2750 = !DILocation(line: 1909, column: 9, scope: !2668)
!2751 = !DILocation(line: 1909, column: 28, scope: !2668)
!2752 = !DILocation(line: 1909, column: 25, scope: !2668)
!2753 = !DILocation(line: 1910, column: 9, scope: !2668)
!2754 = !DILocation(line: 1910, column: 13, scope: !2668)
!2755 = !DILocation(line: 1911, column: 9, scope: !2668)
!2756 = !DILocation(line: 1911, column: 38, scope: !2668)
!2757 = !DILocation(line: 1912, column: 10, scope: !2668)
!2758 = !DILocation(line: 1911, column: 14, scope: !2668)
!2759 = !DILocation(line: 1899, column: 12, scope: !2658)
!2760 = !DILocation(line: 1914, column: 17, scope: !2667)
!2761 = !DILocation(line: 0, scope: !2667)
!2762 = !DILocation(line: 1916, column: 5, scope: !2667)
!2763 = !DILocation(line: 1919, column: 9, scope: !2671)
!2764 = !DILocation(line: 1919, column: 33, scope: !2671)
!2765 = !DILocation(line: 1919, column: 9, scope: !2667)
!2766 = !DILocation(line: 1921, column: 23, scope: !2670)
!2767 = !DILocation(line: 0, scope: !2670)
!2768 = !DILocation(line: 1923, column: 9, scope: !2670)
!2769 = !DILocation(line: 1924, column: 9, scope: !2670)
!2770 = !DILocation(line: 1924, column: 21, scope: !2670)
!2771 = !DILocation(line: 1925, column: 13, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 1925, column: 13)
!2773 = !DILocation(line: 1925, column: 24, scope: !2772)
!2774 = !DILocation(line: 1925, column: 13, scope: !2670)
!2775 = !DILocation(line: 1926, column: 15, scope: !2772)
!2776 = !DILocation(line: 1926, column: 4, scope: !2772)
!2777 = !DILocation(line: 1928, column: 9, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 1928, column: 9)
!2779 = !DILocation(line: 1928, column: 9, scope: !2667)
!2780 = !DILocation(line: 1930, column: 12, scope: !2778)
!2781 = !DILocation(line: 1929, column: 7, scope: !2778)
!2782 = !DILocation(line: 1935, column: 5, scope: !2692)
!2783 = !DILocation(line: 1935, column: 8, scope: !2692)
!2784 = !DILocation(line: 1936, column: 5, scope: !2692)
!2785 = !DILocation(line: 1936, column: 9, scope: !2692)
!2786 = !DILocation(line: 1936, column: 31, scope: !2692)
!2787 = !DILocation(line: 1936, column: 37, scope: !2692)
!2788 = !DILocation(line: 1937, column: 5, scope: !2692)
!2789 = !DILocation(line: 1937, column: 9, scope: !2692)
!2790 = !DILocation(line: 1938, column: 5, scope: !2692)
!2791 = !DILocation(line: 1938, column: 8, scope: !2692)
!2792 = !DILocation(line: 1941, column: 5, scope: !2692)
!2793 = !DILocation(line: 1941, column: 9, scope: !2692)
!2794 = !DILocation(line: 1941, column: 31, scope: !2692)
!2795 = !DILocation(line: 1941, column: 37, scope: !2692)
!2796 = !DILocation(line: 1942, column: 5, scope: !2692)
!2797 = !DILocation(line: 1942, column: 8, scope: !2692)
!2798 = !DILocation(line: 1942, column: 23, scope: !2692)
!2799 = !DILocation(line: 1934, column: 12, scope: !2658)
!2800 = !DILocation(line: 1944, column: 9, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 1944, column: 9)
!2802 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 1943, column: 3)
!2803 = !DILocation(line: 1944, column: 9, scope: !2802)
!2804 = !DILocation(line: 1947, column: 12, scope: !2801)
!2805 = !DILocation(line: 1945, column: 7, scope: !2801)
!2806 = !DILocation(line: 1949, column: 23, scope: !2802)
!2807 = !DILocation(line: 0, scope: !2802)
!2808 = !DILocation(line: 1949, column: 12, scope: !2802)
!2809 = !DILocation(line: 1949, column: 20, scope: !2802)
!2810 = !DILocation(line: 1949, column: 9, scope: !2802)
!2811 = !DILocation(line: 1949, column: 44, scope: !2802)
!2812 = !DILocation(line: 1950, column: 31, scope: !2802)
!2813 = !DILocation(line: 1951, column: 10, scope: !2802)
!2814 = !DILocation(line: 1950, column: 5, scope: !2802)
!2815 = !DILocation(line: 1952, column: 5, scope: !2802)
!2816 = !DILocation(line: 1955, column: 5, scope: !2802)
!2817 = !DILocation(line: 1958, column: 12, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1958, column: 12)
!2819 = !DILocation(line: 1959, column: 5, scope: !2818)
!2820 = !DILocation(line: 1959, column: 13, scope: !2818)
!2821 = !DILocation(line: 1959, column: 11, scope: !2818)
!2822 = !DILocation(line: 1960, column: 5, scope: !2818)
!2823 = !DILocation(line: 1960, column: 13, scope: !2818)
!2824 = !DILocation(line: 1960, column: 19, scope: !2818)
!2825 = !DILocation(line: 1961, column: 5, scope: !2818)
!2826 = !DILocation(line: 1961, column: 16, scope: !2818)
!2827 = !DILocation(line: 1961, column: 25, scope: !2818)
!2828 = !DILocation(line: 1961, column: 22, scope: !2818)
!2829 = !DILocation(line: 1962, column: 5, scope: !2818)
!2830 = !DILocation(line: 1962, column: 8, scope: !2818)
!2831 = !DILocation(line: 1963, column: 10, scope: !2818)
!2832 = !DILocation(line: 1963, column: 5, scope: !2818)
!2833 = !DILocation(line: 1972, column: 9, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 1971, column: 9)
!2835 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 1964, column: 3)
!2836 = !DILocation(line: 1972, column: 12, scope: !2834)
!2837 = !DILocation(line: 1971, column: 9, scope: !2835)
!2838 = !DILocation(line: 1974, column: 9, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 1973, column: 7)
!2840 = !DILocation(line: 1975, column: 9, scope: !2839)
!2841 = !DILocation(line: 1977, column: 7, scope: !2839)
!2842 = !DILocation(line: 1981, column: 7, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 1978, column: 14)
!2844 = !DILocation(line: 1981, column: 12, scope: !2843)
!2845 = !DILocation(line: 1982, column: 11, scope: !2843)
!2846 = !DILocation(line: 1982, column: 15, scope: !2843)
!2847 = !DILocation(line: 1987, column: 7, scope: !2843)
!2848 = !DILocation(line: 1983, column: 10, scope: !2843)
!2849 = !DILocation(line: 1984, column: 11, scope: !2843)
!2850 = !DILocation(line: 1985, column: 11, scope: !2843)
!2851 = !DILocation(line: 1985, column: 28, scope: !2843)
!2852 = !DILocation(line: 1985, column: 15, scope: !2843)
!2853 = !DILocation(line: 1987, column: 18, scope: !2843)
!2854 = !DILocation(line: 1987, column: 16, scope: !2843)
!2855 = !DILocation(line: 1978, column: 14, scope: !2834)
!2856 = !DILocation(line: 1870, column: 11, scope: !2660)
!2857 = !DILocation(line: 1996, column: 6, scope: !2694)
!2858 = !DILocation(line: 1997, column: 9, scope: !2694)
!2859 = !DILocation(line: 1995, column: 12, scope: !2658)
!2860 = !DILocation(line: 2004, column: 12, scope: !2696)
!2861 = !DILocation(line: 2005, column: 5, scope: !2696)
!2862 = !DILocation(line: 2005, column: 8, scope: !2696)
!2863 = !DILocation(line: 2005, column: 27, scope: !2696)
!2864 = !DILocation(line: 2005, column: 24, scope: !2696)
!2865 = !DILocation(line: 2006, column: 5, scope: !2696)
!2866 = !DILocation(line: 2006, column: 20, scope: !2696)
!2867 = !DILocation(line: 2006, column: 8, scope: !2696)
!2868 = !DILocation(line: 2007, column: 5, scope: !2696)
!2869 = !DILocation(line: 2007, column: 24, scope: !2696)
!2870 = !DILocation(line: 2007, column: 9, scope: !2696)
!2871 = !DILocation(line: 2008, column: 5, scope: !2696)
!2872 = !DILocation(line: 2008, column: 40, scope: !2696)
!2873 = !DILocation(line: 2009, column: 12, scope: !2696)
!2874 = !DILocation(line: 2008, column: 8, scope: !2696)
!2875 = !DILocation(line: 2004, column: 12, scope: !2658)
!2876 = !DILocation(line: 2012, column: 5, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 2011, column: 3)
!2878 = !DILocation(line: 2014, column: 3, scope: !2877)
!2879 = !DILocation(line: 2017, column: 12, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 2017, column: 12)
!2881 = !DILocation(line: 2017, column: 12, scope: !2658)
!2882 = !DILocation(line: 2022, column: 5, scope: !2698)
!2883 = !DILocation(line: 2022, column: 8, scope: !2698)
!2884 = !DILocation(line: 2021, column: 12, scope: !2658)
!2885 = !DILocation(line: 2027, column: 13, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 2027, column: 12)
!2887 = !DILocation(line: 2027, column: 12, scope: !2658)
!2888 = !DILocation(line: 2028, column: 10, scope: !2886)
!2889 = !DILocation(line: 2028, column: 3, scope: !2886)
!2890 = !DILocation(line: 0, scope: !2661)
!2891 = !DILocation(line: 0, scope: !2659)
!2892 = !DILocation(line: 2034, column: 8, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 2033, column: 8)
!2894 = !DILocation(line: 2034, column: 11, scope: !2893)
!2895 = !DILocation(line: 2033, column: 8, scope: !2661)
!2896 = !DILocation(line: 2042, column: 23, scope: !2661)
!2897 = !DILocation(line: 2042, column: 20, scope: !2661)
!2898 = !DILocation(line: 2043, column: 15, scope: !2661)
!2899 = !DILocation(line: 2044, column: 2, scope: !2661)
!2900 = distinct !{!2900, !2699, !2901}
!2901 = !DILocation(line: 2045, column: 21, scope: !2662)
!2902 = !DILocation(line: 2048, column: 3, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 2048, column: 3)
!2904 = !DILocation(line: 0, scope: !2903)
!2905 = !DILocation(line: 2049, column: 8, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 2048, column: 3)
!2907 = !DILocation(line: 2049, column: 14, scope: !2906)
!2908 = !DILocation(line: 2048, column: 3, scope: !2906)
!2909 = distinct !{!2909, !2902, !2910}
!2910 = !DILocation(line: 2049, column: 62, scope: !2903)
!2911 = !DILocation(line: 2051, column: 3, scope: !2648)
!2912 = distinct !DISubprogram(name: "rest_of_handle_jump", scope: !3, file: !3, line: 2247, type: !1931, scopeLine: 2248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1976)
!2913 = !DILocation(line: 2249, column: 13, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 2249, column: 7)
!2915 = !DILocation(line: 2249, column: 7, scope: !2914)
!2916 = !DILocation(line: 2249, column: 7, scope: !2912)
!2917 = !DILocation(line: 2250, column: 5, scope: !2914)
!2918 = !DILocation(line: 2251, column: 3, scope: !2912)
!2919 = distinct !DISubprogram(name: "rest_of_handle_jump2", scope: !3, file: !3, line: 2275, type: !1931, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1976)
!2920 = !DILocation(line: 2277, column: 32, scope: !2919)
!2921 = !DILocation(line: 2277, column: 46, scope: !2919)
!2922 = !DILocation(line: 2277, column: 3, scope: !2919)
!2923 = !DILocation(line: 2278, column: 7, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 2278, column: 7)
!2925 = !DILocation(line: 2278, column: 7, scope: !2919)
!2926 = !DILocation(line: 2279, column: 32, scope: !2924)
!2927 = !DILocation(line: 2279, column: 5, scope: !2924)
!2928 = !DILocation(line: 2280, column: 17, scope: !2919)
!2929 = !DILocation(line: 2281, column: 12, scope: !2919)
!2930 = !DILocation(line: 2281, column: 9, scope: !2919)
!2931 = !DILocation(line: 2280, column: 3, scope: !2919)
!2932 = !DILocation(line: 2282, column: 3, scope: !2919)
!2933 = distinct !DISubprogram(name: "update_forwarder_flag", scope: !3, file: !3, line: 101, type: !2934, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2936)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{null, !1154}
!2936 = !{!2937}
!2937 = !DILocalVariable(name: "bb", arg: 1, scope: !2933, file: !3, line: 101, type: !1154)
!2938 = !DILocation(line: 0, scope: !2933)
!2939 = !DILocation(line: 103, column: 7, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 103, column: 7)
!2941 = !DILocation(line: 0, scope: !2940)
!2942 = !DILocation(line: 103, column: 7, scope: !2933)
!2943 = !DILocation(line: 104, column: 15, scope: !2940)
!2944 = !DILocation(line: 104, column: 5, scope: !2940)
!2945 = !DILocation(line: 106, column: 15, scope: !2940)
!2946 = !DILocation(line: 107, column: 1, scope: !2933)
!2947 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !2948, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2952)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!7, !2950}
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1164)
!2952 = !{!2953}
!2953 = !DILocalVariable(name: "vec_", arg: 1, scope: !2947, file: !135, line: 150, type: !2950)
!2954 = !DILocation(line: 0, scope: !2947)
!2955 = !DILocation(line: 150, column: 1, scope: !2947)
!2956 = distinct !DISubprogram(name: "trivially_empty_bb_p", scope: !3, file: !3, line: 1821, type: !2957, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2959)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!752, !1154}
!2959 = !{!2960, !2961}
!2960 = !DILocalVariable(name: "bb", arg: 1, scope: !2956, file: !3, line: 1821, type: !1154)
!2961 = !DILocalVariable(name: "insn", scope: !2956, file: !3, line: 1823, type: !760)
!2962 = !DILocation(line: 0, scope: !2956)
!2963 = !DILocation(line: 1823, column: 14, scope: !2956)
!2964 = !DILocation(line: 0, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1827, column: 11)
!2966 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 1826, column: 5)
!2967 = !DILocation(line: 1825, column: 3, scope: !2956)
!2968 = !DILocation(line: 1827, column: 16, scope: !2965)
!2969 = !DILocation(line: 1827, column: 11, scope: !2966)
!2970 = !DILocation(line: 1829, column: 12, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 1829, column: 11)
!2972 = !DILocation(line: 1829, column: 11, scope: !2966)
!2973 = !DILocation(line: 1831, column: 14, scope: !2966)
!2974 = distinct !{!2974, !2967, !2975}
!2975 = !DILocation(line: 1832, column: 5, scope: !2956)
!2976 = !DILocation(line: 0, scope: !2966)
!2977 = !DILocation(line: 1833, column: 1, scope: !2956)
!2978 = distinct !DISubprogram(name: "single_succ_edge", scope: !135, file: !135, line: 643, type: !2979, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2984)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!1171, !2981}
!2981 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !761, line: 112, baseType: !2982)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!2984 = !{!2985}
!2985 = !DILocalVariable(name: "bb", arg: 1, scope: !2978, file: !135, line: 643, type: !2981)
!2986 = !DILocation(line: 0, scope: !2978)
!2987 = !DILocation(line: 645, column: 3, scope: !2978)
!2988 = !DILocation(line: 646, column: 10, scope: !2978)
!2989 = !DILocation(line: 646, column: 3, scope: !2978)
!2990 = distinct !DISubprogram(name: "single_pred_p", scope: !135, file: !135, line: 634, type: !2991, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2993)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!752, !2981}
!2993 = !{!2994}
!2994 = !DILocalVariable(name: "bb", arg: 1, scope: !2990, file: !135, line: 634, type: !2981)
!2995 = !DILocation(line: 0, scope: !2990)
!2996 = !DILocation(line: 636, column: 10, scope: !2990)
!2997 = !DILocation(line: 636, column: 33, scope: !2990)
!2998 = !DILocation(line: 636, column: 3, scope: !2990)
!2999 = distinct !DISubprogram(name: "single_pred_edge", scope: !135, file: !135, line: 653, type: !2979, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3000)
!3000 = !{!3001}
!3001 = !DILocalVariable(name: "bb", arg: 1, scope: !2999, file: !135, line: 653, type: !2981)
!3002 = !DILocation(line: 0, scope: !2999)
!3003 = !DILocation(line: 655, column: 3, scope: !2999)
!3004 = !DILocation(line: 656, column: 10, scope: !2999)
!3005 = !DILocation(line: 656, column: 3, scope: !2999)
!3006 = distinct !DISubprogram(name: "single_pred", scope: !135, file: !135, line: 672, type: !3007, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3009)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{!1154, !2981}
!3009 = !{!3010}
!3010 = !DILocalVariable(name: "bb", arg: 1, scope: !3006, file: !135, line: 672, type: !2981)
!3011 = !DILocation(line: 0, scope: !3006)
!3012 = !DILocation(line: 674, column: 10, scope: !3006)
!3013 = !DILocation(line: 674, column: 33, scope: !3006)
!3014 = !DILocation(line: 674, column: 3, scope: !3006)
!3015 = distinct !DISubprogram(name: "single_succ", scope: !135, file: !135, line: 663, type: !3007, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3016)
!3016 = !{!3017}
!3017 = !DILocalVariable(name: "bb", arg: 1, scope: !3015, file: !135, line: 663, type: !2981)
!3018 = !DILocation(line: 0, scope: !3015)
!3019 = !DILocation(line: 665, column: 10, scope: !3015)
!3020 = !DILocation(line: 665, column: 33, scope: !3015)
!3021 = !DILocation(line: 665, column: 3, scope: !3015)
!3022 = distinct !DISubprogram(name: "single_succ_p", scope: !135, file: !135, line: 626, type: !2991, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3023)
!3023 = !{!3024}
!3024 = !DILocalVariable(name: "bb", arg: 1, scope: !3022, file: !135, line: 626, type: !2981)
!3025 = !DILocation(line: 0, scope: !3022)
!3026 = !DILocation(line: 628, column: 10, scope: !3022)
!3027 = !DILocation(line: 628, column: 33, scope: !3022)
!3028 = !DILocation(line: 628, column: 3, scope: !3022)
!3029 = distinct !DISubprogram(name: "merge_blocks_move", scope: !3, file: !3, line: 754, type: !3030, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3032)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!1154, !1171, !1154, !1154, !753}
!3032 = !{!3033, !3034, !3035, !3036, !3037, !3038, !3041, !3042, !3045, !3046, !3047, !3048, !3055}
!3033 = !DILocalVariable(name: "e", arg: 1, scope: !3029, file: !3, line: 754, type: !1171)
!3034 = !DILocalVariable(name: "b", arg: 2, scope: !3029, file: !3, line: 754, type: !1154)
!3035 = !DILocalVariable(name: "c", arg: 3, scope: !3029, file: !3, line: 754, type: !1154)
!3036 = !DILocalVariable(name: "mode", arg: 4, scope: !3029, file: !3, line: 754, type: !753)
!3037 = !DILocalVariable(name: "next", scope: !3029, file: !3, line: 756, type: !1154)
!3038 = !DILocalVariable(name: "b_index", scope: !3039, file: !3, line: 774, type: !753)
!3039 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 773, column: 5)
!3040 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 772, column: 7)
!3041 = !DILocalVariable(name: "c_index", scope: !3039, file: !3, line: 774, type: !753)
!3042 = !DILocalVariable(name: "tmp_edge", scope: !3043, file: !3, line: 789, type: !1171)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 788, column: 5)
!3044 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 787, column: 12)
!3045 = !DILocalVariable(name: "b_fallthru_edge", scope: !3043, file: !3, line: 789, type: !1171)
!3046 = !DILocalVariable(name: "c_has_outgoing_fallthru", scope: !3043, file: !3, line: 790, type: !752)
!3047 = !DILocalVariable(name: "b_has_incoming_fallthru", scope: !3043, file: !3, line: 791, type: !752)
!3048 = !DILocalVariable(name: "ei", scope: !3043, file: !3, line: 792, type: !3049)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !3050)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !3051)
!3051 = !{!3052, !3053}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3050, file: !135, line: 680, baseType: !7, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3050, file: !135, line: 681, baseType: !3054, size: 64, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!3055 = !DILocalVariable(name: "bb", scope: !3056, file: !3, line: 837, type: !1154)
!3056 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 836, column: 2)
!3057 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 835, column: 11)
!3058 = !DILocation(line: 0, scope: !3029)
!3059 = !DILocation(line: 768, column: 7, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 768, column: 7)
!3061 = !DILocation(line: 768, column: 27, scope: !3060)
!3062 = !DILocation(line: 768, column: 24, scope: !3060)
!3063 = !DILocation(line: 768, column: 7, scope: !3029)
!3064 = !DILocation(line: 772, column: 10, scope: !3040)
!3065 = !DILocation(line: 772, column: 16, scope: !3040)
!3066 = !DILocation(line: 772, column: 7, scope: !3029)
!3067 = !DILocation(line: 774, column: 24, scope: !3039)
!3068 = !DILocation(line: 0, scope: !3039)
!3069 = !DILocation(line: 774, column: 44, scope: !3039)
!3070 = !DILocation(line: 775, column: 7, scope: !3039)
!3071 = !DILocation(line: 776, column: 7, scope: !3039)
!3072 = !DILocation(line: 778, column: 11, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 778, column: 11)
!3074 = !DILocation(line: 778, column: 11, scope: !3039)
!3075 = !DILocation(line: 779, column: 2, scope: !3073)
!3076 = !DILocation(line: 782, column: 17, scope: !3039)
!3077 = !DILocation(line: 782, column: 28, scope: !3039)
!3078 = !DILocation(line: 782, column: 25, scope: !3039)
!3079 = !DILocation(line: 782, column: 14, scope: !3039)
!3080 = !DILocation(line: 787, column: 17, scope: !3044)
!3081 = !DILocation(line: 787, column: 12, scope: !3040)
!3082 = !DILocation(line: 789, column: 7, scope: !3043)
!3083 = !DILocation(line: 792, column: 7, scope: !3043)
!3084 = !DILocation(line: 798, column: 11, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 798, column: 11)
!3086 = !DILocation(line: 798, column: 33, scope: !3085)
!3087 = !DILocation(line: 798, column: 36, scope: !3085)
!3088 = !DILocation(line: 798, column: 11, scope: !3043)
!3089 = !DILocation(line: 805, column: 7, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 805, column: 7)
!3091 = !DILocation(line: 0, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 805, column: 7)
!3093 = !DILocation(line: 805, column: 7, scope: !3092)
!3094 = !DILocation(line: 0, scope: !3043)
!3095 = !DILocation(line: 809, column: 34, scope: !3043)
!3096 = !DILocation(line: 806, column: 6, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 806, column: 6)
!3098 = !DILocation(line: 806, column: 16, scope: !3097)
!3099 = !DILocation(line: 806, column: 22, scope: !3097)
!3100 = !DILocation(line: 806, column: 6, scope: !3092)
!3101 = distinct !{!3101, !3089, !3102}
!3102 = !DILocation(line: 807, column: 4, scope: !3090)
!3103 = !DILocation(line: 809, column: 43, scope: !3043)
!3104 = !DILocation(line: 811, column: 7, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 811, column: 7)
!3106 = !DILocation(line: 811, column: 7, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 811, column: 7)
!3108 = !DILocation(line: 815, column: 34, scope: !3043)
!3109 = !DILocation(line: 812, column: 6, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 812, column: 6)
!3111 = !DILocation(line: 812, column: 16, scope: !3110)
!3112 = !DILocation(line: 812, column: 22, scope: !3110)
!3113 = !DILocation(line: 812, column: 6, scope: !3107)
!3114 = distinct !{!3114, !3104, !3115}
!3115 = !DILocation(line: 813, column: 4, scope: !3105)
!3116 = !DILocation(line: 815, column: 43, scope: !3043)
!3117 = !DILocation(line: 817, column: 17, scope: !3043)
!3118 = !DILocation(line: 818, column: 16, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 818, column: 11)
!3120 = !DILocation(line: 818, column: 11, scope: !3043)
!3121 = !DILocation(line: 819, column: 15, scope: !3119)
!3122 = !DILocation(line: 819, column: 2, scope: !3119)
!3123 = !DILocation(line: 824, column: 11, scope: !3043)
!3124 = !DILocation(line: 826, column: 4, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 825, column: 2)
!3126 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 824, column: 11)
!3127 = !DILocation(line: 827, column: 19, scope: !3125)
!3128 = !DILocation(line: 827, column: 16, scope: !3125)
!3129 = !DILocation(line: 827, column: 11, scope: !3125)
!3130 = !DILocation(line: 827, column: 43, scope: !3125)
!3131 = !DILocation(line: 835, column: 11, scope: !3043)
!3132 = !DILocation(line: 839, column: 25, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 839, column: 8)
!3134 = !DILocation(line: 839, column: 32, scope: !3133)
!3135 = !DILocation(line: 839, column: 29, scope: !3133)
!3136 = !DILocation(line: 839, column: 8, scope: !3056)
!3137 = !DILocation(line: 841, column: 9, scope: !3056)
!3138 = !DILocation(line: 0, scope: !3056)
!3139 = !DILocation(line: 842, column: 8, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 842, column: 8)
!3141 = !DILocation(line: 842, column: 8, scope: !3056)
!3142 = !DILocation(line: 843, column: 6, scope: !3140)
!3143 = !DILocation(line: 846, column: 7, scope: !3043)
!3144 = !DILocation(line: 847, column: 22, scope: !3043)
!3145 = !DILocation(line: 847, column: 19, scope: !3043)
!3146 = !DILocation(line: 847, column: 14, scope: !3043)
!3147 = !DILocation(line: 847, column: 46, scope: !3043)
!3148 = !DILocation(line: 848, column: 5, scope: !3044)
!3149 = !DILocation(line: 851, column: 1, scope: !3029)
!3150 = distinct !DISubprogram(name: "try_simplify_condjump", scope: !3, file: !3, line: 113, type: !2957, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3151)
!3151 = !{!3152, !3153, !3154, !3155, !3156, !3157, !3158}
!3152 = !DILocalVariable(name: "cbranch_block", arg: 1, scope: !3150, file: !3, line: 113, type: !1154)
!3153 = !DILocalVariable(name: "jump_block", scope: !3150, file: !3, line: 115, type: !1154)
!3154 = !DILocalVariable(name: "jump_dest_block", scope: !3150, file: !3, line: 115, type: !1154)
!3155 = !DILocalVariable(name: "cbranch_dest_block", scope: !3150, file: !3, line: 115, type: !1154)
!3156 = !DILocalVariable(name: "cbranch_jump_edge", scope: !3150, file: !3, line: 116, type: !1171)
!3157 = !DILocalVariable(name: "cbranch_fallthru_edge", scope: !3150, file: !3, line: 116, type: !1171)
!3158 = !DILocalVariable(name: "cbranch_insn", scope: !3150, file: !3, line: 117, type: !760)
!3159 = !DILocation(line: 0, scope: !3150)
!3160 = !DILocation(line: 120, column: 7, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 120, column: 7)
!3162 = !DILocation(line: 120, column: 41, scope: !3161)
!3163 = !DILocation(line: 120, column: 7, scope: !3150)
!3164 = !DILocation(line: 125, column: 18, scope: !3150)
!3165 = !DILocation(line: 126, column: 8, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 126, column: 7)
!3167 = !DILocation(line: 126, column: 7, scope: !3150)
!3168 = !DILocation(line: 129, column: 27, scope: !3150)
!3169 = !DILocation(line: 130, column: 23, scope: !3150)
!3170 = !DILocation(line: 135, column: 39, scope: !3150)
!3171 = !DILocation(line: 136, column: 8, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 136, column: 7)
!3173 = !DILocation(line: 137, column: 7, scope: !3172)
!3174 = !DILocation(line: 137, column: 22, scope: !3172)
!3175 = !DILocation(line: 137, column: 33, scope: !3172)
!3176 = !DILocation(line: 137, column: 30, scope: !3172)
!3177 = !DILocation(line: 138, column: 7, scope: !3172)
!3178 = !DILocation(line: 138, column: 11, scope: !3172)
!3179 = !DILocation(line: 136, column: 7, scope: !3150)
!3180 = !DILocation(line: 140, column: 21, scope: !3150)
!3181 = !DILocation(line: 152, column: 7, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 152, column: 7)
!3183 = !DILocation(line: 152, column: 36, scope: !3182)
!3184 = !DILocation(line: 152, column: 33, scope: !3182)
!3185 = !DILocation(line: 153, column: 7, scope: !3182)
!3186 = !DILocation(line: 153, column: 30, scope: !3182)
!3187 = !DILocation(line: 153, column: 36, scope: !3182)
!3188 = !DILocation(line: 152, column: 7, scope: !3150)
!3189 = !DILocation(line: 158, column: 43, scope: !3150)
!3190 = !DILocation(line: 160, column: 29, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 160, column: 7)
!3192 = !DILocation(line: 160, column: 26, scope: !3191)
!3193 = !DILocation(line: 161, column: 7, scope: !3191)
!3194 = !DILocation(line: 161, column: 11, scope: !3191)
!3195 = !DILocation(line: 160, column: 7, scope: !3150)
!3196 = !DILocation(line: 165, column: 35, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 165, column: 7)
!3198 = !DILocation(line: 165, column: 8, scope: !3197)
!3199 = !DILocation(line: 165, column: 7, scope: !3150)
!3200 = !DILocation(line: 168, column: 7, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 168, column: 7)
!3202 = !DILocation(line: 168, column: 7, scope: !3150)
!3203 = !DILocation(line: 170, column: 7, scope: !3201)
!3204 = !DILocation(line: 170, column: 32, scope: !3201)
!3205 = !DILocation(line: 169, column: 5, scope: !3201)
!3206 = !DILocation(line: 175, column: 23, scope: !3150)
!3207 = !DILocation(line: 177, column: 27, scope: !3150)
!3208 = !DILocation(line: 179, column: 22, scope: !3150)
!3209 = !DILocation(line: 179, column: 28, scope: !3150)
!3210 = !DILocation(line: 180, column: 26, scope: !3150)
!3211 = !DILocation(line: 180, column: 32, scope: !3150)
!3212 = !DILocation(line: 181, column: 3, scope: !3150)
!3213 = !DILocation(line: 184, column: 3, scope: !3150)
!3214 = !DILocation(line: 185, column: 3, scope: !3150)
!3215 = !DILocation(line: 186, column: 3, scope: !3150)
!3216 = !DILocation(line: 188, column: 3, scope: !3150)
!3217 = !DILocation(line: 189, column: 1, scope: !3150)
!3218 = distinct !DISubprogram(name: "try_forward_edges", scope: !3, file: !3, line: 410, type: !3219, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3221)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!752, !753, !1154}
!3221 = !{!3222, !3223, !3224, !3225, !3226, !3227, !3228, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3240, !3241, !3247, !3250, !3255, !3259, !3260, !3261, !3262}
!3222 = !DILocalVariable(name: "mode", arg: 1, scope: !3218, file: !3, line: 410, type: !753)
!3223 = !DILocalVariable(name: "b", arg: 2, scope: !3218, file: !3, line: 410, type: !1154)
!3224 = !DILocalVariable(name: "changed", scope: !3218, file: !3, line: 412, type: !752)
!3225 = !DILocalVariable(name: "ei", scope: !3218, file: !3, line: 413, type: !3049)
!3226 = !DILocalVariable(name: "e", scope: !3218, file: !3, line: 414, type: !1171)
!3227 = !DILocalVariable(name: "threaded_edges", scope: !3218, file: !3, line: 414, type: !1909)
!3228 = !DILocalVariable(name: "target", scope: !3229, file: !3, line: 431, type: !1154)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 430, column: 5)
!3230 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 429, column: 3)
!3231 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 429, column: 3)
!3232 = !DILocalVariable(name: "first", scope: !3229, file: !3, line: 431, type: !1154)
!3233 = !DILocalVariable(name: "counter", scope: !3229, file: !3, line: 432, type: !753)
!3234 = !DILocalVariable(name: "goto_locus", scope: !3229, file: !3, line: 432, type: !753)
!3235 = !DILocalVariable(name: "threaded", scope: !3229, file: !3, line: 433, type: !752)
!3236 = !DILocalVariable(name: "nthreaded_edges", scope: !3229, file: !3, line: 434, type: !753)
!3237 = !DILocalVariable(name: "may_thread", scope: !3229, file: !3, line: 435, type: !752)
!3238 = !DILocalVariable(name: "new_target", scope: !3239, file: !3, line: 468, type: !1154)
!3239 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 467, column: 2)
!3240 = !DILocalVariable(name: "new_target_threaded", scope: !3239, file: !3, line: 469, type: !752)
!3241 = !DILocalVariable(name: "locus", scope: !3242, file: !3, line: 484, type: !753)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 481, column: 3)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 480, column: 17)
!3244 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 478, column: 12)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 475, column: 6)
!3246 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 472, column: 8)
!3247 = !DILocalVariable(name: "t", scope: !3248, file: !3, line: 508, type: !1171)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 507, column: 6)
!3249 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 506, column: 13)
!3250 = !DILocalVariable(name: "i", scope: !3251, file: !3, line: 515, type: !753)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !3, line: 514, column: 7)
!3252 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 511, column: 9)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 510, column: 3)
!3254 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 509, column: 12)
!3255 = !DILocalVariable(name: "edge_count", scope: !3256, file: !3, line: 560, type: !1192)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 558, column: 2)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 555, column: 16)
!3258 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 549, column: 11)
!3259 = !DILocalVariable(name: "edge_probability", scope: !3256, file: !3, line: 561, type: !753)
!3260 = !DILocalVariable(name: "edge_frequency", scope: !3256, file: !3, line: 562, type: !753)
!3261 = !DILocalVariable(name: "n", scope: !3256, file: !3, line: 563, type: !753)
!3262 = !DILocalVariable(name: "t", scope: !3263, file: !3, line: 596, type: !1171)
!3263 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 595, column: 6)
!3264 = !DILocation(line: 0, scope: !3218)
!3265 = !DILocation(line: 413, column: 3, scope: !3218)
!3266 = !DILocation(line: 426, column: 22, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 426, column: 7)
!3268 = !DILocation(line: 426, column: 7, scope: !3267)
!3269 = !DILocation(line: 426, column: 7, scope: !3218)
!3270 = !DILocation(line: 429, column: 13, scope: !3231)
!3271 = !DILocation(line: 0, scope: !3230)
!3272 = !DILocation(line: 0, scope: !3249)
!3273 = !DILocation(line: 0, scope: !3256)
!3274 = !DILocation(line: 0, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 591, column: 8)
!3276 = !DILocation(line: 0, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 576, column: 12)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 575, column: 6)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 574, column: 13)
!3280 = distinct !DILexicalBlock(scope: !3256, file: !3, line: 568, column: 8)
!3281 = !DILocation(line: 429, column: 8, scope: !3231)
!3282 = !DILocation(line: 414, column: 12, scope: !3218)
!3283 = !DILocation(line: 412, column: 8, scope: !3218)
!3284 = !DILocation(line: 429, column: 39, scope: !3230)
!3285 = !DILocation(line: 429, column: 3, scope: !3231)
!3286 = !DILocation(line: 0, scope: !3229)
!3287 = !DILocation(line: 435, column: 25, scope: !3229)
!3288 = !DILocation(line: 435, column: 38, scope: !3229)
!3289 = !DILocation(line: 435, column: 36, scope: !3229)
!3290 = !DILocation(line: 442, column: 14, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 442, column: 11)
!3292 = !DILocation(line: 442, column: 20, scope: !3291)
!3293 = !DILocation(line: 442, column: 11, scope: !3229)
!3294 = !DILocation(line: 444, column: 4, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 443, column: 2)
!3296 = !DILocation(line: 445, column: 4, scope: !3295)
!3297 = distinct !{!3297, !3285, !3298}
!3298 = !DILocation(line: 636, column: 5, scope: !3231)
!3299 = !DILocation(line: 448, column: 27, scope: !3229)
!3300 = !DILocation(line: 450, column: 23, scope: !3229)
!3301 = !DILocation(line: 462, column: 20, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 462, column: 11)
!3303 = !DILocation(line: 462, column: 17, scope: !3302)
!3304 = !DILocation(line: 463, column: 4, scope: !3302)
!3305 = !DILocation(line: 463, column: 22, scope: !3302)
!3306 = !DILocation(line: 463, column: 7, scope: !3302)
!3307 = !DILocation(line: 462, column: 11, scope: !3229)
!3308 = !DILocation(line: 466, column: 7, scope: !3229)
!3309 = !DILocation(line: 434, column: 11, scope: !3229)
!3310 = !DILocation(line: 433, column: 12, scope: !3229)
!3311 = !DILocation(line: 450, column: 18, scope: !3229)
!3312 = !DILocation(line: 448, column: 14, scope: !3229)
!3313 = !DILocation(line: 466, column: 24, scope: !3229)
!3314 = !DILocation(line: 466, column: 22, scope: !3229)
!3315 = !DILocation(line: 0, scope: !3239)
!3316 = !DILocation(line: 470, column: 18, scope: !3239)
!3317 = !DILocation(line: 470, column: 15, scope: !3239)
!3318 = !DILocation(line: 472, column: 8, scope: !3246)
!3319 = !DILocation(line: 473, column: 8, scope: !3246)
!3320 = !DILocation(line: 473, column: 13, scope: !3246)
!3321 = !DILocation(line: 473, column: 40, scope: !3246)
!3322 = !DILocation(line: 473, column: 46, scope: !3246)
!3323 = !DILocation(line: 474, column: 8, scope: !3246)
!3324 = !DILocation(line: 474, column: 11, scope: !3246)
!3325 = !DILocation(line: 474, column: 35, scope: !3246)
!3326 = !DILocation(line: 474, column: 32, scope: !3246)
!3327 = !DILocation(line: 472, column: 8, scope: !3239)
!3328 = !DILocation(line: 477, column: 21, scope: !3245)
!3329 = !DILocation(line: 478, column: 19, scope: !3244)
!3330 = !DILocation(line: 478, column: 12, scope: !3245)
!3331 = !DILocation(line: 479, column: 13, scope: !3244)
!3332 = !DILocation(line: 479, column: 3, scope: !3244)
!3333 = !DILocation(line: 480, column: 18, scope: !3243)
!3334 = !DILocation(line: 480, column: 17, scope: !3244)
!3335 = !DILocation(line: 484, column: 17, scope: !3242)
!3336 = !DILocation(line: 484, column: 44, scope: !3242)
!3337 = !DILocation(line: 0, scope: !3242)
!3338 = !DILocation(line: 486, column: 9, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 486, column: 9)
!3340 = !DILocation(line: 486, column: 18, scope: !3339)
!3341 = !DILocation(line: 486, column: 15, scope: !3339)
!3342 = !DILocation(line: 486, column: 33, scope: !3339)
!3343 = !DILocation(line: 486, column: 9, scope: !3242)
!3344 = !DILocation(line: 487, column: 17, scope: !3339)
!3345 = !DILocation(line: 487, column: 7, scope: !3339)
!3346 = !DILocation(line: 488, column: 14, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 488, column: 14)
!3348 = !DILocation(line: 488, column: 14, scope: !3339)
!3349 = !DILocation(line: 491, column: 9, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 491, column: 9)
!3351 = !DILocation(line: 491, column: 9, scope: !3242)
!3352 = !DILocation(line: 493, column: 17, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 492, column: 7)
!3354 = !DILocation(line: 495, column: 13, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 495, column: 13)
!3356 = !DILocation(line: 495, column: 22, scope: !3355)
!3357 = !DILocation(line: 495, column: 19, scope: !3355)
!3358 = !DILocation(line: 496, column: 10, scope: !3355)
!3359 = !DILocation(line: 495, column: 13, scope: !3353)
!3360 = !DILocation(line: 497, column: 14, scope: !3355)
!3361 = !DILocation(line: 497, column: 4, scope: !3355)
!3362 = !DILocation(line: 498, column: 18, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 498, column: 18)
!3364 = !DILocation(line: 498, column: 18, scope: !3355)
!3365 = !DILocation(line: 506, column: 43, scope: !3249)
!3366 = !DILocation(line: 506, column: 40, scope: !3249)
!3367 = !DILocation(line: 508, column: 17, scope: !3248)
!3368 = !DILocation(line: 0, scope: !3248)
!3369 = !DILocation(line: 509, column: 12, scope: !3254)
!3370 = !DILocation(line: 509, column: 12, scope: !3248)
!3371 = !DILocation(line: 511, column: 10, scope: !3252)
!3372 = !DILocation(line: 511, column: 9, scope: !3253)
!3373 = !DILocation(line: 519, column: 9, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 519, column: 9)
!3375 = !DILocation(line: 512, column: 24, scope: !3252)
!3376 = !DILocation(line: 512, column: 7, scope: !3252)
!3377 = !DILocation(line: 0, scope: !3374)
!3378 = !DILocation(line: 0, scope: !3251)
!3379 = !DILocation(line: 519, column: 23, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 519, column: 9)
!3381 = !DILocation(line: 520, column: 8, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 520, column: 8)
!3383 = !DILocation(line: 520, column: 26, scope: !3382)
!3384 = !DILocation(line: 520, column: 8, scope: !3380)
!3385 = !DILocation(line: 519, column: 42, scope: !3380)
!3386 = !DILocation(line: 519, column: 9, scope: !3380)
!3387 = distinct !{!3387, !3373, !3388}
!3388 = !DILocation(line: 521, column: 6, scope: !3374)
!3389 = !DILocation(line: 522, column: 13, scope: !3251)
!3390 = !DILocation(line: 524, column: 16, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 523, column: 4)
!3392 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 522, column: 13)
!3393 = !DILocation(line: 525, column: 6, scope: !3391)
!3394 = !DILocation(line: 530, column: 12, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 530, column: 9)
!3396 = !DILocation(line: 530, column: 17, scope: !3395)
!3397 = !DILocation(line: 530, column: 9, scope: !3253)
!3398 = !DILocation(line: 533, column: 5, scope: !3253)
!3399 = !DILocation(line: 534, column: 35, scope: !3253)
!3400 = !DILocation(line: 534, column: 5, scope: !3253)
!3401 = !DILocation(line: 534, column: 39, scope: !3253)
!3402 = !DILocation(line: 536, column: 21, scope: !3253)
!3403 = !DILocation(line: 538, column: 3, scope: !3253)
!3404 = !DILocation(line: 524, column: 14, scope: !3391)
!3405 = !DILocation(line: 469, column: 9, scope: !3239)
!3406 = !DILocation(line: 0, scope: !3246)
!3407 = !DILocation(line: 541, column: 9, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 541, column: 8)
!3409 = !DILocation(line: 541, column: 8, scope: !3239)
!3410 = !DILocation(line: 544, column: 11, scope: !3239)
!3411 = !DILocation(line: 546, column: 13, scope: !3239)
!3412 = !DILocation(line: 547, column: 2, scope: !3229)
!3413 = distinct !{!3413, !3308, !3412}
!3414 = !DILocation(line: 549, column: 22, scope: !3258)
!3415 = !DILocation(line: 0, scope: !3258)
!3416 = !DILocation(line: 549, column: 19, scope: !3258)
!3417 = !DILocation(line: 549, column: 11, scope: !3229)
!3418 = !DILocation(line: 551, column: 8, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 551, column: 8)
!3420 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 550, column: 2)
!3421 = !DILocation(line: 551, column: 8, scope: !3420)
!3422 = !DILocation(line: 553, column: 16, scope: !3419)
!3423 = !DILocation(line: 552, column: 6, scope: !3419)
!3424 = !DILocation(line: 555, column: 23, scope: !3257)
!3425 = !DILocation(line: 555, column: 16, scope: !3258)
!3426 = !DILocation(line: 560, column: 30, scope: !3256)
!3427 = !DILocation(line: 561, column: 30, scope: !3256)
!3428 = !DILocation(line: 565, column: 18, scope: !3256)
!3429 = !DILocation(line: 568, column: 8, scope: !3280)
!3430 = !DILocation(line: 568, column: 17, scope: !3280)
!3431 = !DILocation(line: 568, column: 30, scope: !3280)
!3432 = !DILocation(line: 568, column: 27, scope: !3280)
!3433 = !DILocation(line: 568, column: 8, scope: !3256)
!3434 = !DILocation(line: 570, column: 26, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 569, column: 6)
!3436 = !DILocation(line: 570, column: 8, scope: !3435)
!3437 = !DILocation(line: 571, column: 12, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 571, column: 12)
!3439 = !DILocation(line: 571, column: 12, scope: !3435)
!3440 = !DILocation(line: 572, column: 3, scope: !3438)
!3441 = !DILocation(line: 574, column: 14, scope: !3279)
!3442 = !DILocation(line: 574, column: 13, scope: !3280)
!3443 = !DILocation(line: 576, column: 12, scope: !3277)
!3444 = !DILocation(line: 576, column: 12, scope: !3278)
!3445 = !DILocation(line: 579, column: 8, scope: !3277)
!3446 = !DILocation(line: 579, column: 18, scope: !3277)
!3447 = !DILocation(line: 579, column: 24, scope: !3277)
!3448 = !DILocation(line: 579, column: 39, scope: !3277)
!3449 = !DILocation(line: 577, column: 3, scope: !3277)
!3450 = !DILocation(line: 580, column: 8, scope: !3278)
!3451 = !DILocation(line: 581, column: 8, scope: !3278)
!3452 = !DILocation(line: 587, column: 45, scope: !3256)
!3453 = !DILocation(line: 587, column: 40, scope: !3256)
!3454 = !DILocation(line: 588, column: 9, scope: !3256)
!3455 = !DILocation(line: 589, column: 8, scope: !3256)
!3456 = !DILocation(line: 591, column: 9, scope: !3275)
!3457 = !DILocation(line: 591, column: 31, scope: !3275)
!3458 = !DILocation(line: 591, column: 34, scope: !3275)
!3459 = !DILocation(line: 591, column: 8, scope: !3256)
!3460 = !DILocation(line: 592, column: 15, scope: !3275)
!3461 = !DILocation(line: 592, column: 6, scope: !3275)
!3462 = !DILocation(line: 594, column: 4, scope: !3256)
!3463 = !DILocation(line: 598, column: 13, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 598, column: 12)
!3465 = !DILocation(line: 598, column: 12, scope: !3263)
!3466 = !DILocation(line: 600, column: 5, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 599, column: 3)
!3468 = !DILocation(line: 601, column: 26, scope: !3467)
!3469 = !DILocation(line: 601, column: 9, scope: !3467)
!3470 = !DILocation(line: 0, scope: !3263)
!3471 = !DILocation(line: 602, column: 5, scope: !3467)
!3472 = !DILocation(line: 603, column: 5, scope: !3467)
!3473 = !DILocation(line: 605, column: 5, scope: !3467)
!3474 = !DILocation(line: 606, column: 3, scope: !3467)
!3475 = !DILocation(line: 609, column: 12, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 608, column: 3)
!3477 = !DILocation(line: 609, column: 18, scope: !3476)
!3478 = !DILocation(line: 610, column: 22, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 610, column: 9)
!3480 = !DILocation(line: 610, column: 9, scope: !3476)
!3481 = !DILocation(line: 611, column: 7, scope: !3479)
!3482 = !DILocation(line: 0, scope: !3476)
!3483 = !DILocation(line: 612, column: 12, scope: !3476)
!3484 = !DILocation(line: 612, column: 22, scope: !3476)
!3485 = !DILocation(line: 613, column: 26, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 613, column: 9)
!3487 = !DILocation(line: 613, column: 9, scope: !3476)
!3488 = !DILocation(line: 614, column: 7, scope: !3486)
!3489 = !DILocation(line: 619, column: 11, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 619, column: 9)
!3491 = !DILocation(line: 620, column: 9, scope: !3490)
!3492 = !DILocation(line: 620, column: 21, scope: !3490)
!3493 = !DILocation(line: 620, column: 41, scope: !3490)
!3494 = !DILocation(line: 620, column: 18, scope: !3490)
!3495 = !DILocation(line: 619, column: 9, scope: !3476)
!3496 = !DILocation(line: 622, column: 9, scope: !3476)
!3497 = !DILocation(line: 0, scope: !3464)
!3498 = !DILocation(line: 625, column: 11, scope: !3263)
!3499 = !DILocation(line: 625, column: 17, scope: !3263)
!3500 = !DILocation(line: 626, column: 21, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 626, column: 12)
!3502 = !DILocation(line: 626, column: 12, scope: !3263)
!3503 = !DILocation(line: 627, column: 3, scope: !3501)
!3504 = !DILocation(line: 628, column: 19, scope: !3263)
!3505 = !DILocation(line: 630, column: 17, scope: !3256)
!3506 = !DILocation(line: 629, column: 6, scope: !3263)
!3507 = !DILocation(line: 635, column: 7, scope: !3229)
!3508 = !DILocation(line: 636, column: 5, scope: !3230)
!3509 = !DILocation(line: 638, column: 7, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 638, column: 7)
!3511 = !DILocation(line: 638, column: 7, scope: !3218)
!3512 = !DILocation(line: 639, column: 5, scope: !3510)
!3513 = !DILocation(line: 641, column: 1, scope: !3218)
!3514 = distinct !DISubprogram(name: "try_crossjump_bb", scope: !3, file: !3, line: 1678, type: !3219, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3515)
!3515 = !{!3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527}
!3516 = !DILocalVariable(name: "mode", arg: 1, scope: !3514, file: !3, line: 1678, type: !753)
!3517 = !DILocalVariable(name: "bb", arg: 2, scope: !3514, file: !3, line: 1678, type: !1154)
!3518 = !DILocalVariable(name: "e", scope: !3514, file: !3, line: 1680, type: !1171)
!3519 = !DILocalVariable(name: "e2", scope: !3514, file: !3, line: 1680, type: !1171)
!3520 = !DILocalVariable(name: "fallthru", scope: !3514, file: !3, line: 1680, type: !1171)
!3521 = !DILocalVariable(name: "changed", scope: !3514, file: !3, line: 1681, type: !752)
!3522 = !DILocalVariable(name: "max", scope: !3514, file: !3, line: 1682, type: !7)
!3523 = !DILocalVariable(name: "ix", scope: !3514, file: !3, line: 1682, type: !7)
!3524 = !DILocalVariable(name: "ix2", scope: !3514, file: !3, line: 1682, type: !7)
!3525 = !DILocalVariable(name: "ev", scope: !3514, file: !3, line: 1683, type: !1154)
!3526 = !DILocalVariable(name: "ev2", scope: !3514, file: !3, line: 1683, type: !1154)
!3527 = !DILocalVariable(name: "ei", scope: !3514, file: !3, line: 1684, type: !3049)
!3528 = !DILocation(line: 0, scope: !3514)
!3529 = !DILocation(line: 1680, column: 3, scope: !3514)
!3530 = !DILocation(line: 1684, column: 3, scope: !3514)
!3531 = !DILocation(line: 1687, column: 7, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1687, column: 7)
!3533 = !DILocation(line: 1687, column: 30, scope: !3532)
!3534 = !DILocation(line: 1687, column: 7, scope: !3514)
!3535 = !DILocation(line: 1692, column: 7, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1692, column: 7)
!3537 = !DILocation(line: 1693, column: 7, scope: !3536)
!3538 = !DILocation(line: 1693, column: 16, scope: !3536)
!3539 = !DILocation(line: 1693, column: 13, scope: !3536)
!3540 = !DILocation(line: 1694, column: 7, scope: !3536)
!3541 = !DILocation(line: 1694, column: 27, scope: !3536)
!3542 = !DILocation(line: 1694, column: 10, scope: !3536)
!3543 = !DILocation(line: 1692, column: 7, scope: !3514)
!3544 = !DILocation(line: 1707, column: 7, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1707, column: 7)
!3546 = !DILocation(line: 1708, column: 6, scope: !3545)
!3547 = !DILocation(line: 1707, column: 45, scope: !3545)
!3548 = !DILocation(line: 1709, column: 7, scope: !3545)
!3549 = !DILocation(line: 1709, column: 11, scope: !3545)
!3550 = !DILocation(line: 1709, column: 30, scope: !3545)
!3551 = !DILocation(line: 1709, column: 36, scope: !3545)
!3552 = !DILocation(line: 1707, column: 7, scope: !3514)
!3553 = !DILocation(line: 1716, column: 9, scope: !3514)
!3554 = !DILocation(line: 1718, column: 7, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1718, column: 7)
!3556 = !DILocation(line: 1718, column: 30, scope: !3555)
!3557 = !DILocation(line: 1718, column: 7, scope: !3514)
!3558 = !DILocation(line: 1721, column: 3, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1721, column: 3)
!3560 = !DILocation(line: 0, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1721, column: 3)
!3562 = !DILocation(line: 1721, column: 3, scope: !3561)
!3563 = !DILocation(line: 1723, column: 11, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !3, line: 1723, column: 11)
!3565 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1722, column: 5)
!3566 = !DILocation(line: 1723, column: 14, scope: !3564)
!3567 = !DILocation(line: 1723, column: 20, scope: !3564)
!3568 = !DILocation(line: 1723, column: 11, scope: !3565)
!3569 = !DILocation(line: 1726, column: 4, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3564, file: !3, line: 1724, column: 2)
!3571 = distinct !{!3571, !3558, !3572}
!3572 = !DILocation(line: 1728, column: 5, scope: !3559)
!3573 = !DILocation(line: 1731, column: 8, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1731, column: 3)
!3575 = !DILocation(line: 0, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1738, column: 11)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 1732, column: 5)
!3578 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 1731, column: 3)
!3579 = !DILocation(line: 0, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 1746, column: 8)
!3581 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 1739, column: 2)
!3582 = !DILocation(line: 1731, column: 3, scope: !3574)
!3583 = !DILocation(line: 0, scope: !3574)
!3584 = !DILocation(line: 1731, column: 30, scope: !3578)
!3585 = !DILocation(line: 1731, column: 28, scope: !3578)
!3586 = !DILocation(line: 1733, column: 11, scope: !3577)
!3587 = !DILocation(line: 1733, column: 9, scope: !3577)
!3588 = !DILocation(line: 1734, column: 9, scope: !3577)
!3589 = !DILocation(line: 1772, column: 11, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1772, column: 11)
!3591 = !DILocation(line: 1772, column: 36, scope: !3590)
!3592 = !DILocation(line: 1772, column: 33, scope: !3590)
!3593 = !DILocation(line: 1772, column: 11, scope: !3577)
!3594 = distinct !{!3594, !3582, !3595}
!3595 = !DILocation(line: 1809, column: 5, scope: !3574)
!3596 = !DILocation(line: 1811, column: 7, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1811, column: 7)
!3598 = !DILocation(line: 1775, column: 7, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1775, column: 7)
!3600 = !DILocation(line: 1742, column: 10, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 1742, column: 8)
!3602 = !DILocation(line: 1742, column: 8, scope: !3581)
!3603 = !DILocation(line: 1746, column: 9, scope: !3580)
!3604 = !DILocation(line: 1747, column: 8, scope: !3580)
!3605 = !DILocation(line: 1747, column: 34, scope: !3580)
!3606 = !DILocation(line: 1747, column: 14, scope: !3580)
!3607 = !DILocation(line: 1748, column: 5, scope: !3580)
!3608 = !DILocation(line: 1748, column: 37, scope: !3580)
!3609 = !DILocation(line: 1748, column: 10, scope: !3580)
!3610 = !DILocation(line: 1746, column: 8, scope: !3581)
!3611 = !DILocation(line: 1751, column: 37, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 1751, column: 8)
!3613 = !DILocation(line: 1751, column: 8, scope: !3612)
!3614 = !DILocation(line: 1751, column: 8, scope: !3581)
!3615 = !DILocation(line: 0, scope: !3599)
!3616 = !DILocation(line: 1775, column: 37, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 1775, column: 7)
!3618 = !DILocation(line: 1775, column: 35, scope: !3617)
!3619 = !DILocation(line: 1777, column: 9, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1776, column: 2)
!3621 = !DILocation(line: 1778, column: 7, scope: !3620)
!3622 = !DILocation(line: 1780, column: 14, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1780, column: 8)
!3624 = !DILocation(line: 1780, column: 11, scope: !3623)
!3625 = !DILocation(line: 1784, column: 11, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1784, column: 8)
!3627 = !DILocation(line: 1780, column: 8, scope: !3620)
!3628 = distinct !{!3628, !3598, !3629}
!3629 = !DILocation(line: 1808, column: 2, scope: !3599)
!3630 = !DILocation(line: 1791, column: 11, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1791, column: 8)
!3632 = !DILocation(line: 1791, column: 16, scope: !3631)
!3633 = !DILocation(line: 1791, column: 28, scope: !3631)
!3634 = !DILocation(line: 1791, column: 33, scope: !3631)
!3635 = !DILocation(line: 1791, column: 22, scope: !3631)
!3636 = !DILocation(line: 1791, column: 8, scope: !3620)
!3637 = !DILocation(line: 1796, column: 9, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1796, column: 8)
!3639 = !DILocation(line: 1797, column: 8, scope: !3638)
!3640 = !DILocation(line: 1797, column: 14, scope: !3638)
!3641 = !DILocation(line: 1798, column: 5, scope: !3638)
!3642 = !DILocation(line: 1798, column: 31, scope: !3638)
!3643 = !DILocation(line: 1798, column: 10, scope: !3638)
!3644 = !DILocation(line: 1796, column: 8, scope: !3620)
!3645 = !DILocation(line: 1801, column: 37, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1801, column: 8)
!3647 = !DILocation(line: 1801, column: 8, scope: !3646)
!3648 = !DILocation(line: 1801, column: 8, scope: !3620)
!3649 = !DILocation(line: 0, scope: !3577)
!3650 = !DILocation(line: 1731, column: 3, scope: !3578)
!3651 = !DILocation(line: 1811, column: 7, scope: !3514)
!3652 = !DILocation(line: 1812, column: 24, scope: !3597)
!3653 = !DILocation(line: 1812, column: 5, scope: !3597)
!3654 = !DILocation(line: 1815, column: 1, scope: !3514)
!3655 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !3656, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3658)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{!1171, !2950, !7}
!3658 = !{!3659, !3660}
!3659 = !DILocalVariable(name: "vec_", arg: 1, scope: !3655, file: !135, line: 150, type: !2950)
!3660 = !DILocalVariable(name: "ix_", arg: 2, scope: !3655, file: !135, line: 150, type: !7)
!3661 = !DILocation(line: 0, scope: !3655)
!3662 = !DILocation(line: 150, column: 1, scope: !3655)
!3663 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !3664, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3666)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!3049, !3054}
!3666 = !{!3667, !3668}
!3667 = !DILocalVariable(name: "ev", arg: 1, scope: !3663, file: !135, line: 696, type: !3054)
!3668 = !DILocalVariable(name: "i", scope: !3663, file: !135, line: 698, type: !3049)
!3669 = !DILocation(line: 0, scope: !3663)
!3670 = !DILocation(line: 700, column: 5, scope: !3663)
!3671 = !DILocation(line: 700, column: 11, scope: !3663)
!3672 = !DILocation(line: 701, column: 5, scope: !3663)
!3673 = !DILocation(line: 701, column: 15, scope: !3663)
!3674 = !DILocation(line: 703, column: 3, scope: !3663)
!3675 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !3676, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3678)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{!752, !3049, !1909}
!3678 = !{!3679, !3680}
!3679 = !DILocalVariable(name: "ei", arg: 1, scope: !3675, file: !135, line: 771, type: !3049)
!3680 = !DILocalVariable(name: "p", arg: 2, scope: !3675, file: !135, line: 771, type: !1909)
!3681 = !DILocation(line: 0, scope: !3675)
!3682 = !DILocation(line: 773, column: 8, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3675, file: !135, line: 773, column: 7)
!3684 = !DILocation(line: 773, column: 7, scope: !3675)
!3685 = !DILocation(line: 775, column: 12, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !135, line: 774, column: 5)
!3687 = !DILocation(line: 776, column: 7, scope: !3686)
!3688 = !DILocation(line: 781, column: 7, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3683, file: !135, line: 779, column: 5)
!3690 = !DILocation(line: 0, scope: !3683)
!3691 = !DILocation(line: 783, column: 1, scope: !3675)
!3692 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !3693, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3696)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{null, !3695}
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3696 = !{!3697}
!3697 = !DILocalVariable(name: "i", arg: 1, scope: !3692, file: !135, line: 736, type: !3695)
!3698 = !DILocation(line: 0, scope: !3692)
!3699 = !DILocation(line: 738, column: 3, scope: !3692)
!3700 = !DILocation(line: 739, column: 11, scope: !3692)
!3701 = !DILocation(line: 740, column: 1, scope: !3692)
!3702 = distinct !DISubprogram(name: "merge_blocks_move_successor_nojumps", scope: !3, file: !3, line: 693, type: !3703, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3705)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{null, !1154, !1154}
!3705 = !{!3706, !3707, !3708, !3709, !3710, !3711}
!3706 = !DILocalVariable(name: "a", arg: 1, scope: !3702, file: !3, line: 693, type: !1154)
!3707 = !DILocalVariable(name: "b", arg: 2, scope: !3702, file: !3, line: 693, type: !1154)
!3708 = !DILocalVariable(name: "barrier", scope: !3702, file: !3, line: 695, type: !760)
!3709 = !DILocalVariable(name: "real_b_end", scope: !3702, file: !3, line: 695, type: !760)
!3710 = !DILocalVariable(name: "label", scope: !3702, file: !3, line: 696, type: !760)
!3711 = !DILocalVariable(name: "table", scope: !3702, file: !3, line: 696, type: !760)
!3712 = !DILocation(line: 0, scope: !3702)
!3713 = !DILocation(line: 696, column: 3, scope: !3702)
!3714 = !DILocation(line: 708, column: 7, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 708, column: 7)
!3716 = !DILocation(line: 708, column: 27, scope: !3715)
!3717 = !DILocation(line: 708, column: 24, scope: !3715)
!3718 = !DILocation(line: 708, column: 7, scope: !3702)
!3719 = !DILocation(line: 711, column: 16, scope: !3702)
!3720 = !DILocation(line: 715, column: 20, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 715, column: 7)
!3722 = !DILocation(line: 715, column: 7, scope: !3721)
!3723 = !DILocation(line: 716, column: 7, scope: !3721)
!3724 = !DILocation(line: 716, column: 28, scope: !3721)
!3725 = !DILocation(line: 716, column: 10, scope: !3721)
!3726 = !DILocation(line: 716, column: 38, scope: !3721)
!3727 = !DILocation(line: 716, column: 35, scope: !3721)
!3728 = !DILocation(line: 715, column: 7, scope: !3702)
!3729 = !DILocation(line: 718, column: 20, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 717, column: 5)
!3731 = !DILocation(line: 718, column: 18, scope: !3730)
!3732 = !DILocation(line: 719, column: 5, scope: !3730)
!3733 = !DILocation(line: 722, column: 13, scope: !3702)
!3734 = !DILocation(line: 723, column: 7, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 723, column: 7)
!3736 = !DILocation(line: 723, column: 15, scope: !3735)
!3737 = !DILocation(line: 723, column: 18, scope: !3735)
!3738 = !DILocation(line: 723, column: 7, scope: !3702)
!3739 = !DILocation(line: 724, column: 5, scope: !3735)
!3740 = !DILocation(line: 728, column: 23, scope: !3702)
!3741 = !DILocation(line: 728, column: 36, scope: !3702)
!3742 = !DILocation(line: 728, column: 48, scope: !3702)
!3743 = !DILocation(line: 728, column: 3, scope: !3702)
!3744 = !DILocation(line: 731, column: 3, scope: !3702)
!3745 = !DILocation(line: 731, column: 14, scope: !3702)
!3746 = !DILocation(line: 733, column: 7, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 733, column: 7)
!3748 = !DILocation(line: 733, column: 7, scope: !3702)
!3749 = !DILocation(line: 735, column: 10, scope: !3747)
!3750 = !DILocation(line: 735, column: 20, scope: !3747)
!3751 = !DILocation(line: 734, column: 5, scope: !3747)
!3752 = !DILocation(line: 738, column: 3, scope: !3702)
!3753 = !DILocation(line: 739, column: 1, scope: !3702)
!3754 = distinct !DISubprogram(name: "notice_new_block", scope: !3, file: !3, line: 89, type: !2934, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3755)
!3755 = !{!3756}
!3756 = !DILocalVariable(name: "bb", arg: 1, scope: !3754, file: !3, line: 89, type: !1154)
!3757 = !DILocation(line: 0, scope: !3754)
!3758 = !DILocation(line: 91, column: 8, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 91, column: 7)
!3760 = !DILocation(line: 91, column: 7, scope: !3754)
!3761 = !DILocation(line: 94, column: 7, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 94, column: 7)
!3763 = !DILocation(line: 94, column: 7, scope: !3754)
!3764 = !DILocation(line: 95, column: 9, scope: !3762)
!3765 = !DILocation(line: 95, column: 15, scope: !3762)
!3766 = !DILocation(line: 95, column: 5, scope: !3762)
!3767 = !DILocation(line: 96, column: 1, scope: !3754)
!3768 = distinct !DISubprogram(name: "merge_blocks_move_predecessor_nojumps", scope: !3, file: !3, line: 649, type: !3703, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3769 = !{!3770, !3771, !3772}
!3770 = !DILocalVariable(name: "a", arg: 1, scope: !3768, file: !3, line: 649, type: !1154)
!3771 = !DILocalVariable(name: "b", arg: 2, scope: !3768, file: !3, line: 649, type: !1154)
!3772 = !DILocalVariable(name: "barrier", scope: !3768, file: !3, line: 651, type: !760)
!3773 = !DILocation(line: 0, scope: !3768)
!3774 = !DILocation(line: 663, column: 7, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 663, column: 7)
!3776 = !DILocation(line: 663, column: 27, scope: !3775)
!3777 = !DILocation(line: 663, column: 24, scope: !3775)
!3778 = !DILocation(line: 663, column: 7, scope: !3768)
!3779 = !DILocation(line: 666, column: 32, scope: !3768)
!3780 = !DILocation(line: 666, column: 13, scope: !3768)
!3781 = !DILocation(line: 667, column: 3, scope: !3768)
!3782 = !DILocation(line: 668, column: 3, scope: !3768)
!3783 = !DILocation(line: 671, column: 7, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 671, column: 7)
!3785 = !DILocation(line: 671, column: 21, scope: !3784)
!3786 = !DILocation(line: 671, column: 18, scope: !3784)
!3787 = !DILocation(line: 671, column: 7, scope: !3768)
!3788 = !DILocation(line: 672, column: 25, scope: !3784)
!3789 = !DILocation(line: 672, column: 5, scope: !3784)
!3790 = !DILocation(line: 673, column: 3, scope: !3768)
!3791 = !DILocation(line: 675, column: 7, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 675, column: 7)
!3793 = !DILocation(line: 675, column: 7, scope: !3768)
!3794 = !DILocation(line: 677, column: 10, scope: !3792)
!3795 = !DILocation(line: 677, column: 20, scope: !3792)
!3796 = !DILocation(line: 676, column: 5, scope: !3792)
!3797 = !DILocation(line: 681, column: 3, scope: !3768)
!3798 = !DILocation(line: 682, column: 21, scope: !3768)
!3799 = !DILocation(line: 682, column: 3, scope: !3768)
!3800 = !DILocation(line: 685, column: 3, scope: !3768)
!3801 = !DILocation(line: 686, column: 1, scope: !3768)
!3802 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !3803, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3805)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!752, !3049}
!3805 = !{!3806}
!3806 = !DILocalVariable(name: "i", arg: 1, scope: !3802, file: !135, line: 721, type: !3049)
!3807 = !DILocation(line: 723, column: 22, scope: !3802)
!3808 = !DILocation(line: 723, column: 19, scope: !3802)
!3809 = !DILocation(line: 723, column: 10, scope: !3802)
!3810 = !DILocation(line: 723, column: 3, scope: !3802)
!3811 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !3812, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3814)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!1171, !3049}
!3814 = !{!3815}
!3815 = !DILocalVariable(name: "i", arg: 1, scope: !3811, file: !135, line: 752, type: !3049)
!3816 = !DILocation(line: 754, column: 10, scope: !3811)
!3817 = !DILocation(line: 754, column: 3, scope: !3811)
!3818 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !3819, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3821)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!1159, !3049}
!3821 = !{!3822}
!3822 = !DILocalVariable(name: "i", arg: 1, scope: !3818, file: !135, line: 685, type: !3049)
!3823 = !DILocation(line: 687, column: 3, scope: !3818)
!3824 = !DILocation(line: 688, column: 10, scope: !3818)
!3825 = !DILocation(line: 688, column: 3, scope: !3818)
!3826 = distinct !DISubprogram(name: "ei_safe_edge", scope: !135, file: !135, line: 761, type: !3812, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3827)
!3827 = !{!3828}
!3828 = !DILocalVariable(name: "i", arg: 1, scope: !3826, file: !135, line: 761, type: !3049)
!3829 = !DILocation(line: 763, column: 11, scope: !3826)
!3830 = !DILocation(line: 763, column: 10, scope: !3826)
!3831 = !DILocation(line: 763, column: 26, scope: !3826)
!3832 = !DILocation(line: 763, column: 3, scope: !3826)
!3833 = distinct !DISubprogram(name: "thread_jump", scope: !3, file: !3, line: 269, type: !3834, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3836)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!1171, !1171, !1154}
!3836 = !{!3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3860, !3866}
!3837 = !DILocalVariable(name: "e", arg: 1, scope: !3833, file: !3, line: 269, type: !1171)
!3838 = !DILocalVariable(name: "b", arg: 2, scope: !3833, file: !3, line: 269, type: !1154)
!3839 = !DILocalVariable(name: "set1", scope: !3833, file: !3, line: 271, type: !760)
!3840 = !DILocalVariable(name: "set2", scope: !3833, file: !3, line: 271, type: !760)
!3841 = !DILocalVariable(name: "cond1", scope: !3833, file: !3, line: 271, type: !760)
!3842 = !DILocalVariable(name: "cond2", scope: !3833, file: !3, line: 271, type: !760)
!3843 = !DILocalVariable(name: "insn", scope: !3833, file: !3, line: 271, type: !760)
!3844 = !DILocalVariable(name: "code1", scope: !3833, file: !3, line: 272, type: !390)
!3845 = !DILocalVariable(name: "code2", scope: !3833, file: !3, line: 272, type: !390)
!3846 = !DILocalVariable(name: "reversed_code2", scope: !3833, file: !3, line: 272, type: !390)
!3847 = !DILocalVariable(name: "reverse1", scope: !3833, file: !3, line: 273, type: !752)
!3848 = !DILocalVariable(name: "i", scope: !3833, file: !3, line: 274, type: !7)
!3849 = !DILocalVariable(name: "nonequal", scope: !3833, file: !3, line: 275, type: !1911)
!3850 = !DILocalVariable(name: "failed", scope: !3833, file: !3, line: 276, type: !752)
!3851 = !DILocalVariable(name: "rsi", scope: !3833, file: !3, line: 277, type: !3852)
!3852 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !135, line: 90, baseType: !3853)
!3853 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !837, line: 218, baseType: !3854)
!3854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !837, line: 203, size: 256, elements: !3855)
!3855 = !{!3856, !3857, !3858, !3859}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3854, file: !837, line: 206, baseType: !840, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3854, file: !837, line: 209, baseType: !840, size: 64, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3854, file: !837, line: 212, baseType: !7, size: 32, offset: 128)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3854, file: !837, line: 217, baseType: !850, size: 64, offset: 192)
!3860 = !DILocalVariable(name: "pat", scope: !3861, file: !3, line: 362, type: !760)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 361, column: 2)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 360, column: 11)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 359, column: 5)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 356, column: 3)
!3865 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 356, column: 3)
!3866 = !DILabel(scope: !3833, name: "failed_exit", file: !3, line: 400)
!3867 = !DILocation(line: 0, scope: !3833)
!3868 = !DILocation(line: 271, column: 3, scope: !3833)
!3869 = !DILocation(line: 274, column: 3, scope: !3833)
!3870 = !DILocation(line: 277, column: 3, scope: !3833)
!3871 = !DILocation(line: 279, column: 10, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 279, column: 7)
!3873 = !DILocation(line: 279, column: 16, scope: !3872)
!3874 = !DILocation(line: 279, column: 7, scope: !3833)
!3875 = !DILocation(line: 284, column: 7, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 284, column: 7)
!3877 = !DILocation(line: 284, column: 34, scope: !3876)
!3878 = !DILocation(line: 284, column: 7, scope: !3833)
!3879 = !DILocation(line: 286, column: 7, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 286, column: 7)
!3881 = !DILocation(line: 286, column: 29, scope: !3880)
!3882 = !DILocation(line: 286, column: 7, scope: !3833)
!3883 = !DILocation(line: 288, column: 16, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 287, column: 5)
!3885 = !DILocation(line: 289, column: 7, scope: !3884)
!3886 = !DILocation(line: 293, column: 24, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 293, column: 7)
!3888 = !DILocation(line: 293, column: 8, scope: !3887)
!3889 = !DILocation(line: 293, column: 7, scope: !3833)
!3890 = !DILocation(line: 296, column: 24, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 296, column: 7)
!3892 = !DILocation(line: 296, column: 8, scope: !3891)
!3893 = !DILocation(line: 296, column: 36, scope: !3891)
!3894 = !DILocation(line: 296, column: 52, scope: !3891)
!3895 = !DILocation(line: 296, column: 40, scope: !3891)
!3896 = !DILocation(line: 296, column: 7, scope: !3833)
!3897 = !DILocation(line: 298, column: 16, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 297, column: 5)
!3899 = !DILocation(line: 299, column: 7, scope: !3898)
!3900 = !DILocation(line: 302, column: 18, scope: !3833)
!3901 = !DILocation(line: 302, column: 10, scope: !3833)
!3902 = !DILocation(line: 303, column: 18, scope: !3833)
!3903 = !DILocation(line: 303, column: 10, scope: !3833)
!3904 = !DILocation(line: 304, column: 12, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 304, column: 7)
!3906 = !DILocation(line: 305, column: 11, scope: !3905)
!3907 = !DILocation(line: 305, column: 39, scope: !3905)
!3908 = !DILocation(line: 305, column: 36, scope: !3905)
!3909 = !DILocation(line: 305, column: 7, scope: !3905)
!3910 = !DILocation(line: 308, column: 11, scope: !3833)
!3911 = !DILocation(line: 309, column: 11, scope: !3833)
!3912 = !DILocation(line: 309, column: 9, scope: !3833)
!3913 = !DILocation(line: 310, column: 7, scope: !3833)
!3914 = !DILocation(line: 311, column: 46, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 310, column: 7)
!3916 = !DILocation(line: 311, column: 13, scope: !3915)
!3917 = !DILocation(line: 311, column: 5, scope: !3915)
!3918 = !DILocation(line: 313, column: 13, scope: !3915)
!3919 = !DILocation(line: 0, scope: !3915)
!3920 = !DILocation(line: 315, column: 11, scope: !3833)
!3921 = !DILocation(line: 316, column: 46, scope: !3833)
!3922 = !DILocation(line: 316, column: 53, scope: !3833)
!3923 = !DILocation(line: 316, column: 20, scope: !3833)
!3924 = !DILocation(line: 318, column: 8, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 318, column: 7)
!3926 = !DILocation(line: 319, column: 7, scope: !3925)
!3927 = !DILocation(line: 319, column: 11, scope: !3925)
!3928 = !DILocation(line: 318, column: 7, scope: !3833)
!3929 = !DILocation(line: 326, column: 21, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 326, column: 7)
!3931 = !DILocation(line: 326, column: 38, scope: !3930)
!3932 = !DILocation(line: 326, column: 8, scope: !3930)
!3933 = !DILocation(line: 327, column: 7, scope: !3930)
!3934 = !DILocation(line: 327, column: 24, scope: !3930)
!3935 = !DILocation(line: 327, column: 41, scope: !3930)
!3936 = !DILocation(line: 327, column: 11, scope: !3930)
!3937 = !DILocation(line: 326, column: 7, scope: !3833)
!3938 = !DILocation(line: 332, column: 15, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 332, column: 3)
!3940 = !DILocation(line: 332, column: 8, scope: !3939)
!3941 = !DILocation(line: 332, column: 48, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 332, column: 3)
!3943 = !DILocation(line: 0, scope: !3939)
!3944 = !DILocation(line: 332, column: 45, scope: !3942)
!3945 = !DILocation(line: 332, column: 3, scope: !3939)
!3946 = !DILocation(line: 334, column: 9, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3942, file: !3, line: 334, column: 9)
!3948 = !DILocation(line: 334, column: 23, scope: !3947)
!3949 = !DILocation(line: 334, column: 42, scope: !3947)
!3950 = !DILocation(line: 334, column: 26, scope: !3947)
!3951 = !DILocation(line: 334, column: 9, scope: !3942)
!3952 = !DILocation(line: 336, column: 11, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 335, column: 7)
!3954 = !DILocation(line: 337, column: 2, scope: !3953)
!3955 = !DILocation(line: 332, column: 3, scope: !3942)
!3956 = distinct !{!3956, !3945, !3957}
!3957 = !DILocation(line: 338, column: 7, scope: !3939)
!3958 = !DILocation(line: 340, column: 3, scope: !3833)
!3959 = !DILocation(line: 343, column: 15, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 343, column: 3)
!3961 = !DILocation(line: 343, column: 8, scope: !3960)
!3962 = !DILocation(line: 344, column: 16, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 343, column: 3)
!3964 = !DILocation(line: 0, scope: !3960)
!3965 = !DILocation(line: 344, column: 13, scope: !3963)
!3966 = !DILocation(line: 343, column: 3, scope: !3960)
!3967 = !DILocation(line: 346, column: 9, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 346, column: 9)
!3969 = !DILocation(line: 346, column: 9, scope: !3963)
!3970 = !DILocation(line: 347, column: 7, scope: !3968)
!3971 = !DILocation(line: 0, scope: !3963)
!3972 = !DILocation(line: 343, column: 3, scope: !3963)
!3973 = distinct !{!3973, !3966, !3974}
!3974 = !DILocation(line: 347, column: 32, scope: !3960)
!3975 = !DILocation(line: 349, column: 14, scope: !3833)
!3976 = !DILocation(line: 350, column: 3, scope: !3833)
!3977 = !DILocation(line: 356, column: 15, scope: !3865)
!3978 = !DILocation(line: 356, column: 8, scope: !3865)
!3979 = !DILocation(line: 357, column: 16, scope: !3864)
!3980 = !DILocation(line: 276, column: 8, scope: !3833)
!3981 = !DILocation(line: 0, scope: !3865)
!3982 = !DILocation(line: 357, column: 13, scope: !3864)
!3983 = !DILocation(line: 357, column: 42, scope: !3864)
!3984 = !DILocation(line: 357, column: 39, scope: !3864)
!3985 = !DILocation(line: 360, column: 11, scope: !3862)
!3986 = !DILocation(line: 360, column: 11, scope: !3863)
!3987 = !DILocation(line: 362, column: 14, scope: !3861)
!3988 = !DILocation(line: 0, scope: !3861)
!3989 = !DILocation(line: 364, column: 8, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 364, column: 8)
!3991 = !DILocation(line: 364, column: 23, scope: !3990)
!3992 = !DILocation(line: 364, column: 8, scope: !3861)
!3993 = !DILocation(line: 0, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 366, column: 8)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 366, column: 8)
!3996 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 365, column: 6)
!3997 = !DILocation(line: 366, column: 13, scope: !3995)
!3998 = !DILocation(line: 0, scope: !3995)
!3999 = !DILocation(line: 366, column: 34, scope: !3994)
!4000 = !DILocation(line: 366, column: 22, scope: !3994)
!4001 = !DILocation(line: 366, column: 8, scope: !3995)
!4002 = !DILocation(line: 367, column: 26, scope: !3994)
!4003 = !DILocation(line: 367, column: 13, scope: !3994)
!4004 = !DILocation(line: 367, column: 10, scope: !3994)
!4005 = !DILocation(line: 366, column: 53, scope: !3994)
!4006 = !DILocation(line: 366, column: 8, scope: !3994)
!4007 = distinct !{!4007, !4001, !4008}
!4008 = !DILocation(line: 367, column: 55, scope: !3995)
!4009 = !DILocation(line: 370, column: 16, scope: !3990)
!4010 = !DILocation(line: 373, column: 7, scope: !3863)
!4011 = !DILocation(line: 356, column: 3, scope: !3864)
!4012 = distinct !{!4012, !4013, !4014}
!4013 = !DILocation(line: 356, column: 3, scope: !3865)
!4014 = !DILocation(line: 374, column: 5, scope: !3865)
!4015 = !DILocation(line: 378, column: 7, scope: !3833)
!4016 = !DILocation(line: 380, column: 16, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !3, line: 379, column: 5)
!4018 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 378, column: 7)
!4019 = !DILocation(line: 381, column: 7, scope: !4017)
!4020 = !DILocation(line: 386, column: 53, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 386, column: 7)
!4022 = !DILocation(line: 386, column: 7, scope: !4021)
!4023 = !DILocation(line: 386, column: 7, scope: !3833)
!4024 = !DILocation(line: 389, column: 3, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 389, column: 3)
!4026 = !DILocation(line: 389, column: 3, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 389, column: 3)
!4028 = !DILocation(line: 392, column: 3, scope: !3833)
!4029 = !DILocation(line: 393, column: 3, scope: !3833)
!4030 = !DILocation(line: 394, column: 8, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 394, column: 7)
!4032 = !DILocation(line: 394, column: 46, scope: !4031)
!4033 = !DILocation(line: 395, column: 11, scope: !4031)
!4034 = !DILocation(line: 395, column: 39, scope: !4031)
!4035 = !DILocation(line: 395, column: 36, scope: !4031)
!4036 = !DILocation(line: 395, column: 7, scope: !4031)
!4037 = !DILocation(line: 0, scope: !4031)
!4038 = !DILocation(line: 394, column: 7, scope: !3833)
!4039 = !DILocation(line: 396, column: 12, scope: !4031)
!4040 = !DILocation(line: 398, column: 12, scope: !4031)
!4041 = !DILocation(line: 400, column: 1, scope: !3833)
!4042 = !DILocation(line: 401, column: 3, scope: !3833)
!4043 = !DILocation(line: 402, column: 3, scope: !3833)
!4044 = !DILocation(line: 403, column: 3, scope: !3833)
!4045 = !DILocation(line: 404, column: 1, scope: !3833)
!4046 = distinct !DISubprogram(name: "mark_effect", scope: !3, file: !3, line: 195, type: !4047, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4049)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!752, !760, !1911}
!4049 = !{!4050, !4051, !4052, !4053, !4054, !4060}
!4050 = !DILocalVariable(name: "exp", arg: 1, scope: !4046, file: !3, line: 195, type: !760)
!4051 = !DILocalVariable(name: "nonequal", arg: 2, scope: !4046, file: !3, line: 195, type: !1911)
!4052 = !DILocalVariable(name: "regno", scope: !4046, file: !3, line: 197, type: !753)
!4053 = !DILocalVariable(name: "dest", scope: !4046, file: !3, line: 198, type: !760)
!4054 = !DILocalVariable(name: "n", scope: !4055, file: !3, line: 211, type: !753)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 210, column: 6)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 209, column: 8)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 205, column: 2)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 204, column: 11)
!4059 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 200, column: 5)
!4060 = !DILocalVariable(name: "n", scope: !4061, file: !3, line: 230, type: !753)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 229, column: 2)
!4062 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 228, column: 11)
!4063 = !DILocation(line: 0, scope: !4046)
!4064 = !DILocation(line: 199, column: 11, scope: !4046)
!4065 = !DILocation(line: 199, column: 3, scope: !4046)
!4066 = !DILocation(line: 204, column: 11, scope: !4058)
!4067 = !DILocation(line: 204, column: 11, scope: !4059)
!4068 = !DILocation(line: 207, column: 12, scope: !4057)
!4069 = !DILocation(line: 208, column: 4, scope: !4057)
!4070 = !DILocation(line: 209, column: 14, scope: !4056)
!4071 = !DILocation(line: 209, column: 8, scope: !4057)
!4072 = !DILocation(line: 211, column: 16, scope: !4055)
!4073 = !DILocation(line: 211, column: 40, scope: !4055)
!4074 = !DILocation(line: 0, scope: !4055)
!4075 = !DILocation(line: 212, column: 8, scope: !4055)
!4076 = !DILocation(line: 212, column: 15, scope: !4055)
!4077 = !DILocation(line: 212, column: 19, scope: !4055)
!4078 = !DILocation(line: 213, column: 3, scope: !4055)
!4079 = distinct !{!4079, !4075, !4078}
!4080 = !DILocation(line: 219, column: 35, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 219, column: 11)
!4082 = !DILocation(line: 219, column: 51, scope: !4081)
!4083 = !DILocation(line: 219, column: 11, scope: !4081)
!4084 = !DILocation(line: 219, column: 11, scope: !4059)
!4085 = !DILocation(line: 221, column: 14, scope: !4059)
!4086 = !DILocation(line: 222, column: 19, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 222, column: 11)
!4088 = !DILocation(line: 222, column: 16, scope: !4087)
!4089 = !DILocation(line: 222, column: 11, scope: !4059)
!4090 = !DILocation(line: 224, column: 12, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 224, column: 11)
!4092 = !DILocation(line: 224, column: 11, scope: !4059)
!4093 = !DILocation(line: 226, column: 15, scope: !4059)
!4094 = !DILocation(line: 227, column: 7, scope: !4059)
!4095 = !DILocation(line: 228, column: 17, scope: !4062)
!4096 = !DILocation(line: 228, column: 11, scope: !4059)
!4097 = !DILocation(line: 230, column: 12, scope: !4061)
!4098 = !DILocation(line: 230, column: 36, scope: !4061)
!4099 = !DILocation(line: 0, scope: !4061)
!4100 = !DILocation(line: 231, column: 4, scope: !4061)
!4101 = !DILocation(line: 231, column: 11, scope: !4061)
!4102 = !DILocation(line: 231, column: 15, scope: !4061)
!4103 = !DILocation(line: 232, column: 6, scope: !4061)
!4104 = distinct !{!4104, !4100, !4103}
!4105 = !DILocation(line: 239, column: 1, scope: !4046)
!4106 = !DILocation(line: 0, scope: !4059)
!4107 = distinct !DISubprogram(name: "mentions_nonequal_regs", scope: !3, file: !3, line: 244, type: !4108, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4111)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!753, !4110, !757}
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!4111 = !{!4112, !4113, !4114, !4115, !4118}
!4112 = !DILocalVariable(name: "x", arg: 1, scope: !4107, file: !3, line: 244, type: !4110)
!4113 = !DILocalVariable(name: "data", arg: 2, scope: !4107, file: !3, line: 244, type: !757)
!4114 = !DILocalVariable(name: "nonequal", scope: !4107, file: !3, line: 246, type: !1911)
!4115 = !DILocalVariable(name: "regno", scope: !4116, file: !3, line: 249, type: !753)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 248, column: 5)
!4117 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 247, column: 7)
!4118 = !DILocalVariable(name: "n", scope: !4119, file: !3, line: 256, type: !753)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 255, column: 2)
!4120 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 254, column: 11)
!4121 = !DILocation(line: 0, scope: !4107)
!4122 = !DILocation(line: 246, column: 21, scope: !4107)
!4123 = !DILocation(line: 247, column: 7, scope: !4117)
!4124 = !DILocation(line: 247, column: 7, scope: !4107)
!4125 = !DILocation(line: 251, column: 15, scope: !4116)
!4126 = !DILocation(line: 0, scope: !4116)
!4127 = !DILocation(line: 252, column: 11, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 252, column: 11)
!4129 = !DILocation(line: 252, column: 11, scope: !4116)
!4130 = !DILocation(line: 254, column: 17, scope: !4120)
!4131 = !DILocation(line: 254, column: 11, scope: !4116)
!4132 = !DILocation(line: 256, column: 12, scope: !4119)
!4133 = !DILocation(line: 256, column: 36, scope: !4119)
!4134 = !DILocation(line: 0, scope: !4119)
!4135 = !DILocation(line: 257, column: 4, scope: !4119)
!4136 = !DILocation(line: 257, column: 11, scope: !4119)
!4137 = !DILocation(line: 257, column: 15, scope: !4119)
!4138 = !DILocation(line: 258, column: 10, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 258, column: 10)
!4140 = !DILocation(line: 258, column: 10, scope: !4119)
!4141 = distinct !{!4141, !4135, !4142}
!4142 = !DILocation(line: 259, column: 15, scope: !4119)
!4143 = !DILocation(line: 261, column: 5, scope: !4117)
!4144 = !DILocation(line: 262, column: 3, scope: !4107)
!4145 = !DILocation(line: 263, column: 1, scope: !4107)
!4146 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !837, file: !837, line: 224, type: !4147, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4154)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{null, !4149, !4150, !7, !4153}
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !761, line: 48, baseType: !4151)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4154 = !{!4155, !4156, !4157, !4158}
!4155 = !DILocalVariable(name: "bi", arg: 1, scope: !4146, file: !837, line: 224, type: !4149)
!4156 = !DILocalVariable(name: "map", arg: 2, scope: !4146, file: !837, line: 224, type: !4150)
!4157 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4146, file: !837, line: 225, type: !7)
!4158 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4146, file: !837, line: 225, type: !4153)
!4159 = !DILocation(line: 0, scope: !4146)
!4160 = !DILocation(line: 227, column: 19, scope: !4146)
!4161 = !DILocation(line: 227, column: 12, scope: !4146)
!4162 = !DILocation(line: 228, column: 7, scope: !4146)
!4163 = !DILocation(line: 228, column: 12, scope: !4146)
!4164 = !DILocation(line: 0, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !837, line: 233, column: 11)
!4166 = distinct !DILexicalBlock(scope: !4146, file: !837, line: 232, column: 5)
!4167 = !DILocation(line: 231, column: 3, scope: !4146)
!4168 = !DILocation(line: 233, column: 12, scope: !4165)
!4169 = !DILocation(line: 233, column: 11, scope: !4166)
!4170 = !DILocation(line: 235, column: 13, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4165, file: !837, line: 234, column: 2)
!4172 = !DILocation(line: 236, column: 4, scope: !4171)
!4173 = !DILocation(line: 239, column: 11, scope: !4166)
!4174 = distinct !{!4174, !4167, !4175}
!4175 = !DILocation(line: 242, column: 5, scope: !4146)
!4176 = !DILocation(line: 245, column: 11, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4146, file: !837, line: 245, column: 7)
!4178 = !DILocation(line: 245, column: 17, scope: !4177)
!4179 = !DILocation(line: 245, column: 22, scope: !4177)
!4180 = !DILocation(line: 245, column: 7, scope: !4146)
!4181 = !DILocation(line: 246, column: 27, scope: !4177)
!4182 = !DILocation(line: 246, column: 32, scope: !4177)
!4183 = !DILocation(line: 246, column: 5, scope: !4177)
!4184 = !DILocation(line: 249, column: 7, scope: !4146)
!4185 = !DILocation(line: 249, column: 15, scope: !4146)
!4186 = !DILocation(line: 250, column: 14, scope: !4146)
!4187 = !DILocation(line: 251, column: 7, scope: !4146)
!4188 = !DILocation(line: 251, column: 12, scope: !4146)
!4189 = !DILocation(line: 257, column: 16, scope: !4146)
!4190 = !DILocation(line: 257, column: 13, scope: !4146)
!4191 = !DILocation(line: 259, column: 11, scope: !4146)
!4192 = !DILocation(line: 260, column: 1, scope: !4146)
!4193 = distinct !DISubprogram(name: "bmp_iter_set", scope: !837, file: !837, line: 393, type: !4194, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4196)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!752, !4149, !4153}
!4196 = !{!4197, !4198, !4199}
!4197 = !DILocalVariable(name: "bi", arg: 1, scope: !4193, file: !837, line: 393, type: !4149)
!4198 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4193, file: !837, line: 393, type: !4153)
!4199 = !DILabel(scope: !4200, name: "next_bit", file: !837, line: 398)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !837, line: 397, column: 5)
!4201 = distinct !DILexicalBlock(scope: !4193, file: !837, line: 396, column: 7)
!4202 = !DILocation(line: 0, scope: !4193)
!4203 = !DILocation(line: 396, column: 11, scope: !4201)
!4204 = !DILocation(line: 396, column: 7, scope: !4201)
!4205 = !DILocation(line: 396, column: 7, scope: !4193)
!4206 = !DILocation(line: 419, column: 15, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !837, line: 418, column: 2)
!4208 = distinct !DILexicalBlock(scope: !4193, file: !837, line: 415, column: 5)
!4209 = !DILocation(line: 399, column: 7, scope: !4200)
!4210 = !DILocation(line: 398, column: 5, scope: !4200)
!4211 = !DILocation(line: 399, column: 20, scope: !4200)
!4212 = !DILocation(line: 399, column: 25, scope: !4200)
!4213 = !DILocation(line: 399, column: 14, scope: !4200)
!4214 = !DILocation(line: 401, column: 13, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4200, file: !837, line: 400, column: 2)
!4216 = !DILocation(line: 402, column: 12, scope: !4215)
!4217 = distinct !{!4217, !4209, !4218}
!4218 = !DILocation(line: 403, column: 2, scope: !4200)
!4219 = !DILocation(line: 410, column: 15, scope: !4193)
!4220 = !DILocation(line: 410, column: 42, scope: !4193)
!4221 = !DILocation(line: 411, column: 26, scope: !4193)
!4222 = !DILocation(line: 410, column: 11, scope: !4193)
!4223 = !DILocation(line: 412, column: 7, scope: !4193)
!4224 = !DILocation(line: 412, column: 14, scope: !4193)
!4225 = !DILocation(line: 0, scope: !4208)
!4226 = !DILocation(line: 414, column: 3, scope: !4193)
!4227 = !DILocation(line: 417, column: 7, scope: !4208)
!4228 = !DILocation(line: 417, column: 18, scope: !4208)
!4229 = !DILocation(line: 417, column: 26, scope: !4208)
!4230 = !DILocation(line: 419, column: 13, scope: !4207)
!4231 = !DILocation(line: 420, column: 8, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4207, file: !837, line: 420, column: 8)
!4233 = !DILocation(line: 420, column: 8, scope: !4207)
!4234 = !DILocation(line: 422, column: 12, scope: !4207)
!4235 = !DILocation(line: 423, column: 15, scope: !4207)
!4236 = distinct !{!4236, !4227, !4237}
!4237 = !DILocation(line: 424, column: 2, scope: !4208)
!4238 = !DILocation(line: 427, column: 28, scope: !4208)
!4239 = !DILocation(line: 427, column: 16, scope: !4208)
!4240 = !DILocation(line: 428, column: 12, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4208, file: !837, line: 428, column: 11)
!4242 = !DILocation(line: 428, column: 11, scope: !4208)
!4243 = !DILocation(line: 430, column: 27, scope: !4208)
!4244 = !DILocation(line: 430, column: 32, scope: !4208)
!4245 = !DILocation(line: 430, column: 15, scope: !4208)
!4246 = !DILocation(line: 431, column: 19, scope: !4208)
!4247 = distinct !{!4247, !4226, !4248}
!4248 = !DILocation(line: 432, column: 5, scope: !4193)
!4249 = !DILocation(line: 433, column: 1, scope: !4193)
!4250 = distinct !DISubprogram(name: "rhs_regno", scope: !391, file: !391, line: 1051, type: !4251, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4256)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{!7, !4253}
!4253 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !761, line: 51, baseType: !4254)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !763)
!4256 = !{!4257}
!4257 = !DILocalVariable(name: "x", arg: 1, scope: !4250, file: !391, line: 1051, type: !4253)
!4258 = !DILocation(line: 0, scope: !4250)
!4259 = !DILocation(line: 1053, column: 10, scope: !4250)
!4260 = !DILocation(line: 1053, column: 3, scope: !4250)
!4261 = distinct !DISubprogram(name: "try_crossjump_to_edge", scope: !3, file: !3, line: 1441, type: !4262, scopeLine: 1442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4264)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!752, !753, !1171, !1171}
!4264 = !{!4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4280, !4281, !4282, !4283, !4292, !4293, !4297, !4298, !4299}
!4265 = !DILocalVariable(name: "mode", arg: 1, scope: !4261, file: !3, line: 1441, type: !753)
!4266 = !DILocalVariable(name: "e1", arg: 2, scope: !4261, file: !3, line: 1441, type: !1171)
!4267 = !DILocalVariable(name: "e2", arg: 3, scope: !4261, file: !3, line: 1441, type: !1171)
!4268 = !DILocalVariable(name: "nmatch", scope: !4261, file: !3, line: 1443, type: !753)
!4269 = !DILocalVariable(name: "src1", scope: !4261, file: !3, line: 1444, type: !1154)
!4270 = !DILocalVariable(name: "src2", scope: !4261, file: !3, line: 1444, type: !1154)
!4271 = !DILocalVariable(name: "redirect_to", scope: !4261, file: !3, line: 1445, type: !1154)
!4272 = !DILocalVariable(name: "redirect_from", scope: !4261, file: !3, line: 1445, type: !1154)
!4273 = !DILocalVariable(name: "to_remove", scope: !4261, file: !3, line: 1445, type: !1154)
!4274 = !DILocalVariable(name: "newpos1", scope: !4261, file: !3, line: 1446, type: !760)
!4275 = !DILocalVariable(name: "newpos2", scope: !4261, file: !3, line: 1446, type: !760)
!4276 = !DILocalVariable(name: "s", scope: !4261, file: !3, line: 1447, type: !1171)
!4277 = !DILocalVariable(name: "ei", scope: !4261, file: !3, line: 1448, type: !3049)
!4278 = !DILocalVariable(name: "label1", scope: !4279, file: !3, line: 1522, type: !760)
!4279 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1521, column: 5)
!4280 = !DILocalVariable(name: "label2", scope: !4279, file: !3, line: 1522, type: !760)
!4281 = !DILocalVariable(name: "table1", scope: !4279, file: !3, line: 1523, type: !760)
!4282 = !DILocalVariable(name: "table2", scope: !4279, file: !3, line: 1523, type: !760)
!4283 = !DILocalVariable(name: "rr", scope: !4284, file: !3, line: 1529, type: !4286)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 1528, column: 2)
!4285 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 1525, column: 11)
!4286 = !DIDerivedType(tag: DW_TAG_typedef, name: "replace_label_data", file: !391, line: 1811, baseType: !4287)
!4287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "replace_label_data", file: !391, line: 1806, size: 192, elements: !4288)
!4288 = !{!4289, !4290, !4291}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4287, file: !391, line: 1808, baseType: !760, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4287, file: !391, line: 1809, baseType: !760, size: 64, offset: 64)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "update_label_nuses", scope: !4287, file: !391, line: 1810, baseType: !752, size: 8, offset: 128)
!4292 = !DILocalVariable(name: "insn", scope: !4284, file: !3, line: 1530, type: !760)
!4293 = !DILocalVariable(name: "s2", scope: !4294, file: !3, line: 1585, type: !1171)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 1584, column: 5)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 1583, column: 3)
!4296 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1583, column: 3)
!4297 = !DILocalVariable(name: "ei", scope: !4294, file: !3, line: 1586, type: !3049)
!4298 = !DILocalVariable(name: "d", scope: !4294, file: !3, line: 1587, type: !1154)
!4299 = !DILocalVariable(name: "d2", scope: !4300, file: !3, line: 1594, type: !1154)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 1593, column: 2)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1592, column: 7)
!4302 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1592, column: 7)
!4303 = !DILocation(line: 0, scope: !4261)
!4304 = !DILocation(line: 1444, column: 26, scope: !4261)
!4305 = !DILocation(line: 1444, column: 42, scope: !4261)
!4306 = !DILocation(line: 1446, column: 3, scope: !4261)
!4307 = !DILocation(line: 1447, column: 3, scope: !4261)
!4308 = !DILocation(line: 1448, column: 3, scope: !4261)
!4309 = !DILocation(line: 1450, column: 21, scope: !4261)
!4310 = !DILocation(line: 1450, column: 11, scope: !4261)
!4311 = !DILocation(line: 1461, column: 7, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1461, column: 7)
!4313 = !DILocation(line: 1461, column: 44, scope: !4312)
!4314 = !DILocation(line: 1461, column: 41, scope: !4312)
!4315 = !DILocation(line: 1468, column: 7, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1468, column: 7)
!4317 = !DILocation(line: 1469, column: 7, scope: !4316)
!4318 = !DILocation(line: 1469, column: 10, scope: !4316)
!4319 = !DILocation(line: 1468, column: 7, scope: !4261)
!4320 = !DILocation(line: 1470, column: 10, scope: !4316)
!4321 = !DILocation(line: 1470, column: 46, scope: !4316)
!4322 = !DILocation(line: 1470, column: 5, scope: !4316)
!4323 = !DILocation(line: 1472, column: 7, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1472, column: 7)
!4325 = !DILocation(line: 1473, column: 7, scope: !4324)
!4326 = !DILocation(line: 1473, column: 10, scope: !4324)
!4327 = !DILocation(line: 1472, column: 7, scope: !4261)
!4328 = !DILocation(line: 1474, column: 10, scope: !4324)
!4329 = !DILocation(line: 1474, column: 46, scope: !4324)
!4330 = !DILocation(line: 1474, column: 5, scope: !4324)
!4331 = !DILocation(line: 1477, column: 15, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1477, column: 7)
!4333 = !DILocation(line: 1477, column: 12, scope: !4332)
!4334 = !DILocation(line: 1477, column: 31, scope: !4332)
!4335 = !DILocation(line: 1477, column: 39, scope: !4332)
!4336 = !DILocation(line: 1479, column: 12, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1479, column: 7)
!4338 = !DILocation(line: 1477, column: 7, scope: !4261)
!4339 = !DILocation(line: 1483, column: 7, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1483, column: 7)
!4341 = !DILocation(line: 1484, column: 7, scope: !4340)
!4342 = !DILocation(line: 1484, column: 10, scope: !4340)
!4343 = !DILocation(line: 1483, column: 7, scope: !4261)
!4344 = !DILocation(line: 1487, column: 7, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1487, column: 7)
!4346 = !DILocation(line: 1488, column: 7, scope: !4345)
!4347 = !DILocation(line: 1488, column: 10, scope: !4345)
!4348 = !DILocation(line: 1487, column: 7, scope: !4261)
!4349 = !DILocation(line: 1493, column: 7, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1493, column: 7)
!4351 = !DILocation(line: 1493, column: 32, scope: !4350)
!4352 = !DILocation(line: 1493, column: 37, scope: !4350)
!4353 = !DILocation(line: 1493, column: 40, scope: !4350)
!4354 = !DILocation(line: 1493, column: 65, scope: !4350)
!4355 = !DILocation(line: 1493, column: 7, scope: !4261)
!4356 = !DILocation(line: 1497, column: 8, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1497, column: 7)
!4358 = !DILocation(line: 1497, column: 7, scope: !4261)
!4359 = !DILocation(line: 1501, column: 12, scope: !4261)
!4360 = !DILocation(line: 1507, column: 17, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1507, column: 7)
!4362 = !DILocation(line: 1507, column: 15, scope: !4361)
!4363 = !DILocation(line: 1508, column: 7, scope: !4361)
!4364 = !DILocation(line: 1508, column: 11, scope: !4361)
!4365 = !DILocation(line: 1508, column: 22, scope: !4361)
!4366 = !DILocation(line: 1508, column: 19, scope: !4361)
!4367 = !DILocation(line: 1507, column: 7, scope: !4261)
!4368 = !DILocation(line: 1512, column: 37, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1512, column: 7)
!4370 = !DILocation(line: 1512, column: 7, scope: !4369)
!4371 = !DILocation(line: 1513, column: 7, scope: !4369)
!4372 = !DILocation(line: 1513, column: 15, scope: !4369)
!4373 = !DILocation(line: 1513, column: 21, scope: !4369)
!4374 = !DILocation(line: 1512, column: 7, scope: !4261)
!4375 = !DILocation(line: 1522, column: 7, scope: !4279)
!4376 = !DILocation(line: 1523, column: 7, scope: !4279)
!4377 = !DILocation(line: 1525, column: 24, scope: !4285)
!4378 = !DILocation(line: 0, scope: !4279)
!4379 = !DILocation(line: 1525, column: 11, scope: !4285)
!4380 = !DILocation(line: 1526, column: 4, scope: !4285)
!4381 = !DILocation(line: 1526, column: 20, scope: !4285)
!4382 = !DILocation(line: 1526, column: 7, scope: !4285)
!4383 = !DILocation(line: 1527, column: 4, scope: !4285)
!4384 = !DILocation(line: 1527, column: 7, scope: !4285)
!4385 = !DILocation(line: 1527, column: 17, scope: !4285)
!4386 = !DILocation(line: 1527, column: 14, scope: !4285)
!4387 = !DILocation(line: 1525, column: 11, scope: !4279)
!4388 = !DILocation(line: 1529, column: 4, scope: !4284)
!4389 = !DILocation(line: 1530, column: 4, scope: !4284)
!4390 = !DILocation(line: 1533, column: 10, scope: !4284)
!4391 = !DILocation(line: 1534, column: 7, scope: !4284)
!4392 = !DILocation(line: 1534, column: 10, scope: !4284)
!4393 = !DILocation(line: 1535, column: 7, scope: !4284)
!4394 = !DILocation(line: 1535, column: 26, scope: !4284)
!4395 = !DILocation(line: 1536, column: 16, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 1536, column: 4)
!4397 = !DILocation(line: 0, scope: !4284)
!4398 = !DILocation(line: 1536, column: 9, scope: !4396)
!4399 = !DILocation(line: 0, scope: !4396)
!4400 = !DILocation(line: 1536, column: 4, scope: !4396)
!4401 = !DILocation(line: 1541, column: 20, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 1541, column: 12)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1537, column: 6)
!4404 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1536, column: 4)
!4405 = !DILocation(line: 1541, column: 17, scope: !4402)
!4406 = !DILocation(line: 1541, column: 12, scope: !4403)
!4407 = !DILocation(line: 1542, column: 3, scope: !4402)
!4408 = !DILocation(line: 1536, column: 43, scope: !4404)
!4409 = !DILocation(line: 1536, column: 4, scope: !4404)
!4410 = distinct !{!4410, !4400, !4411}
!4411 = !DILocation(line: 1543, column: 6, scope: !4396)
!4412 = !DILocation(line: 1544, column: 2, scope: !4285)
!4413 = !DILocation(line: 1544, column: 2, scope: !4284)
!4414 = !DILocation(line: 1545, column: 5, scope: !4261)
!4415 = !DILocation(line: 1550, column: 7, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1550, column: 7)
!4417 = !DILocation(line: 1550, column: 18, scope: !4416)
!4418 = !DILocation(line: 1550, column: 15, scope: !4416)
!4419 = !DILocation(line: 1551, column: 7, scope: !4416)
!4420 = !DILocation(line: 1551, column: 12, scope: !4416)
!4421 = !DILocation(line: 1551, column: 33, scope: !4416)
!4422 = !DILocation(line: 1551, column: 39, scope: !4416)
!4423 = !DILocation(line: 1550, column: 7, scope: !4261)
!4424 = !DILocation(line: 1555, column: 11, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1555, column: 11)
!4426 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 1554, column: 5)
!4427 = !DILocation(line: 1555, column: 22, scope: !4425)
!4428 = !DILocation(line: 0, scope: !4425)
!4429 = !DILocation(line: 1555, column: 19, scope: !4425)
!4430 = !DILocation(line: 1555, column: 11, scope: !4426)
!4431 = !DILocation(line: 1558, column: 8, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 1558, column: 8)
!4433 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1556, column: 2)
!4434 = !DILocation(line: 1558, column: 8, scope: !4433)
!4435 = !DILocation(line: 0, scope: !4433)
!4436 = !DILocation(line: 1559, column: 16, scope: !4432)
!4437 = !DILocation(line: 1559, column: 14, scope: !4432)
!4438 = !DILocation(line: 1559, column: 6, scope: !4432)
!4439 = !DILocation(line: 1560, column: 4, scope: !4433)
!4440 = !DILocation(line: 1560, column: 11, scope: !4433)
!4441 = !DILocation(line: 1561, column: 16, scope: !4433)
!4442 = !DILocation(line: 1561, column: 14, scope: !4433)
!4443 = distinct !{!4443, !4439, !4441}
!4444 = !DILocation(line: 1562, column: 8, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 1562, column: 8)
!4446 = !DILocation(line: 1562, column: 8, scope: !4433)
!4447 = !DILocation(line: 1563, column: 16, scope: !4445)
!4448 = !DILocation(line: 1563, column: 14, scope: !4445)
!4449 = !DILocation(line: 1563, column: 6, scope: !4445)
!4450 = !DILocation(line: 1564, column: 4, scope: !4433)
!4451 = !DILocation(line: 1564, column: 11, scope: !4433)
!4452 = !DILocation(line: 1565, column: 16, scope: !4433)
!4453 = !DILocation(line: 1565, column: 14, scope: !4433)
!4454 = distinct !{!4454, !4450, !4452}
!4455 = !DILocation(line: 1568, column: 11, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1568, column: 11)
!4457 = !DILocation(line: 1568, column: 11, scope: !4426)
!4458 = !DILocation(line: 1570, column: 10, scope: !4456)
!4459 = !DILocation(line: 1569, column: 2, scope: !4456)
!4460 = !DILocation(line: 1571, column: 40, scope: !4426)
!4461 = !DILocation(line: 1571, column: 21, scope: !4426)
!4462 = !DILocation(line: 1571, column: 62, scope: !4426)
!4463 = !DILocation(line: 0, scope: !4416)
!4464 = !DILocation(line: 1574, column: 7, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1574, column: 7)
!4466 = !DILocation(line: 1574, column: 7, scope: !4261)
!4467 = !DILocation(line: 1577, column: 13, scope: !4465)
!4468 = !DILocation(line: 1577, column: 26, scope: !4465)
!4469 = !DILocation(line: 1575, column: 5, scope: !4465)
!4470 = !DILocation(line: 1580, column: 3, scope: !4261)
!4471 = !DILocation(line: 1583, column: 3, scope: !4296)
!4472 = !DILocation(line: 0, scope: !4295)
!4473 = !DILocation(line: 0, scope: !4294)
!4474 = !DILocation(line: 0, scope: !4302)
!4475 = !DILocation(line: 0, scope: !4301)
!4476 = !DILocation(line: 0, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1626, column: 11)
!4478 = !DILocation(line: 1583, column: 3, scope: !4295)
!4479 = !DILocation(line: 1585, column: 7, scope: !4294)
!4480 = !DILocation(line: 1586, column: 7, scope: !4294)
!4481 = !DILocation(line: 1587, column: 23, scope: !4294)
!4482 = !DILocation(line: 1587, column: 26, scope: !4294)
!4483 = !DILocation(line: 1589, column: 11, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1589, column: 11)
!4485 = !DILocation(line: 1589, column: 11, scope: !4294)
!4486 = !DILocation(line: 1590, column: 6, scope: !4484)
!4487 = !DILocation(line: 1590, column: 2, scope: !4484)
!4488 = !DILocation(line: 1592, column: 7, scope: !4302)
!4489 = !DILocation(line: 1592, column: 7, scope: !4301)
!4490 = !DILocation(line: 1594, column: 21, scope: !4300)
!4491 = !DILocation(line: 1594, column: 25, scope: !4300)
!4492 = !DILocation(line: 0, scope: !4300)
!4493 = !DILocation(line: 1595, column: 8, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 1595, column: 8)
!4495 = !DILocation(line: 1595, column: 8, scope: !4300)
!4496 = !DILocation(line: 1596, column: 11, scope: !4494)
!4497 = !DILocation(line: 1596, column: 6, scope: !4494)
!4498 = !DILocation(line: 1597, column: 10, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 1597, column: 8)
!4500 = distinct !{!4500, !4488, !4501}
!4501 = !DILocation(line: 1599, column: 2, scope: !4302)
!4502 = !DILocation(line: 1601, column: 19, scope: !4294)
!4503 = !DILocation(line: 1601, column: 23, scope: !4294)
!4504 = !DILocation(line: 1601, column: 7, scope: !4294)
!4505 = !DILocation(line: 1601, column: 10, scope: !4294)
!4506 = !DILocation(line: 1601, column: 16, scope: !4294)
!4507 = !DILocation(line: 1606, column: 11, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1606, column: 11)
!4509 = !DILocation(line: 1606, column: 11, scope: !4294)
!4510 = !DILocation(line: 1608, column: 45, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 1607, column: 2)
!4512 = !DILocation(line: 1608, column: 4, scope: !4511)
!4513 = !DILocation(line: 1608, column: 32, scope: !4511)
!4514 = !DILocation(line: 1608, column: 38, scope: !4511)
!4515 = !DILocation(line: 1609, column: 22, scope: !4511)
!4516 = !DILocation(line: 1609, column: 26, scope: !4511)
!4517 = !DILocation(line: 1609, column: 4, scope: !4511)
!4518 = !DILocation(line: 1609, column: 7, scope: !4511)
!4519 = !DILocation(line: 1609, column: 13, scope: !4511)
!4520 = !DILocation(line: 1609, column: 19, scope: !4511)
!4521 = !DILocation(line: 1610, column: 26, scope: !4511)
!4522 = !DILocation(line: 1610, column: 7, scope: !4511)
!4523 = !DILocation(line: 1610, column: 13, scope: !4511)
!4524 = !DILocation(line: 1610, column: 23, scope: !4511)
!4525 = !DILocation(line: 1611, column: 2, scope: !4511)
!4526 = !DILocation(line: 1613, column: 11, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1613, column: 11)
!4528 = !DILocation(line: 1613, column: 11, scope: !4294)
!4529 = !DILocation(line: 1615, column: 46, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 1614, column: 2)
!4531 = !DILocation(line: 1615, column: 4, scope: !4530)
!4532 = !DILocation(line: 1615, column: 33, scope: !4530)
!4533 = !DILocation(line: 1615, column: 39, scope: !4530)
!4534 = !DILocation(line: 1616, column: 26, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 1616, column: 8)
!4536 = !DILocation(line: 1616, column: 30, scope: !4535)
!4537 = !DILocation(line: 1616, column: 8, scope: !4535)
!4538 = !DILocation(line: 1616, column: 37, scope: !4535)
!4539 = !DILocation(line: 1616, column: 43, scope: !4535)
!4540 = !DILocation(line: 1616, column: 8, scope: !4530)
!4541 = !DILocation(line: 1617, column: 24, scope: !4535)
!4542 = !DILocation(line: 1617, column: 28, scope: !4535)
!4543 = !DILocation(line: 1617, column: 6, scope: !4535)
!4544 = !DILocation(line: 1617, column: 35, scope: !4535)
!4545 = !DILocation(line: 1617, column: 41, scope: !4535)
!4546 = !DILocation(line: 1618, column: 23, scope: !4530)
!4547 = !DILocation(line: 1618, column: 27, scope: !4530)
!4548 = !DILocation(line: 1618, column: 8, scope: !4530)
!4549 = !DILocation(line: 1618, column: 14, scope: !4530)
!4550 = !DILocation(line: 1618, column: 20, scope: !4530)
!4551 = !DILocation(line: 1619, column: 27, scope: !4530)
!4552 = !DILocation(line: 1619, column: 8, scope: !4530)
!4553 = !DILocation(line: 1619, column: 14, scope: !4530)
!4554 = !DILocation(line: 1619, column: 24, scope: !4530)
!4555 = !DILocation(line: 1620, column: 12, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 1620, column: 8)
!4557 = !DILocation(line: 1620, column: 18, scope: !4556)
!4558 = !DILocation(line: 1620, column: 28, scope: !4556)
!4559 = !DILocation(line: 1620, column: 8, scope: !4530)
!4560 = !DILocation(line: 1621, column: 26, scope: !4556)
!4561 = !DILocation(line: 1622, column: 12, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 1622, column: 8)
!4563 = !DILocation(line: 1621, column: 6, scope: !4556)
!4564 = !DILocation(line: 1622, column: 18, scope: !4562)
!4565 = !DILocation(line: 1622, column: 24, scope: !4562)
!4566 = !DILocation(line: 1622, column: 8, scope: !4530)
!4567 = !DILocation(line: 1623, column: 22, scope: !4562)
!4568 = !DILocation(line: 1623, column: 6, scope: !4562)
!4569 = !DILocation(line: 1626, column: 25, scope: !4477)
!4570 = !DILocation(line: 1626, column: 12, scope: !4477)
!4571 = !DILocation(line: 1626, column: 35, scope: !4477)
!4572 = !DILocation(line: 1631, column: 32, scope: !4477)
!4573 = !DILocation(line: 1626, column: 45, scope: !4477)
!4574 = !DILocation(line: 1626, column: 39, scope: !4477)
!4575 = !DILocation(line: 1626, column: 11, scope: !4294)
!4576 = !DILocation(line: 1627, column: 23, scope: !4477)
!4577 = !DILocation(line: 1627, column: 41, scope: !4477)
!4578 = !DILocation(line: 1627, column: 35, scope: !4477)
!4579 = !DILocation(line: 1627, column: 54, scope: !4477)
!4580 = !DILocation(line: 1627, column: 17, scope: !4477)
!4581 = !DILocation(line: 1627, column: 2, scope: !4477)
!4582 = !DILocation(line: 1630, column: 11, scope: !4477)
!4583 = !DILocation(line: 1630, column: 23, scope: !4477)
!4584 = !DILocation(line: 1631, column: 12, scope: !4477)
!4585 = !DILocation(line: 1631, column: 24, scope: !4477)
!4586 = !DILocation(line: 1630, column: 48, scope: !4477)
!4587 = !DILocation(line: 1632, column: 33, scope: !4477)
!4588 = !DILocation(line: 1632, column: 7, scope: !4477)
!4589 = !DILocation(line: 1630, column: 4, scope: !4477)
!4590 = !DILocation(line: 1633, column: 5, scope: !4295)
!4591 = distinct !{!4591, !4471, !4592}
!4592 = !DILocation(line: 1633, column: 5, scope: !4296)
!4593 = !DILocation(line: 1639, column: 31, scope: !4261)
!4594 = !DILocation(line: 1639, column: 16, scope: !4261)
!4595 = !DILocation(line: 1639, column: 22, scope: !4261)
!4596 = !DILocation(line: 1640, column: 35, scope: !4261)
!4597 = !DILocation(line: 1640, column: 26, scope: !4261)
!4598 = !DILocation(line: 1641, column: 30, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1641, column: 7)
!4600 = !DILocation(line: 1641, column: 7, scope: !4261)
!4601 = !DILocation(line: 1642, column: 5, scope: !4599)
!4602 = !DILocation(line: 1643, column: 3, scope: !4261)
!4603 = !DILocation(line: 1648, column: 7, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1648, column: 7)
!4605 = !DILocation(line: 1648, column: 7, scope: !4261)
!4606 = !DILocation(line: 1649, column: 15, scope: !4604)
!4607 = !DILocation(line: 1649, column: 13, scope: !4604)
!4608 = !DILocation(line: 1649, column: 5, scope: !4604)
!4609 = !DILocation(line: 1651, column: 3, scope: !4261)
!4610 = !DILocation(line: 1651, column: 10, scope: !4261)
!4611 = !DILocation(line: 1652, column: 15, scope: !4261)
!4612 = !DILocation(line: 1652, column: 13, scope: !4261)
!4613 = distinct !{!4613, !4609, !4611}
!4614 = !DILocation(line: 1654, column: 7, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1654, column: 7)
!4616 = !DILocation(line: 1654, column: 7, scope: !4261)
!4617 = !DILocation(line: 1655, column: 15, scope: !4615)
!4618 = !DILocation(line: 1655, column: 13, scope: !4615)
!4619 = !DILocation(line: 1655, column: 5, scope: !4615)
!4620 = !DILocation(line: 1657, column: 3, scope: !4261)
!4621 = !DILocation(line: 1657, column: 10, scope: !4261)
!4622 = !DILocation(line: 1658, column: 15, scope: !4261)
!4623 = !DILocation(line: 1658, column: 13, scope: !4261)
!4624 = distinct !{!4624, !4620, !4622}
!4625 = !DILocation(line: 1660, column: 38, scope: !4261)
!4626 = !DILocation(line: 1660, column: 19, scope: !4261)
!4627 = !DILocation(line: 1660, column: 60, scope: !4261)
!4628 = !DILocation(line: 1661, column: 15, scope: !4261)
!4629 = !DILocation(line: 1663, column: 35, scope: !4261)
!4630 = !DILocation(line: 1663, column: 3, scope: !4261)
!4631 = !DILocation(line: 1664, column: 3, scope: !4261)
!4632 = !DILocation(line: 1666, column: 3, scope: !4261)
!4633 = !DILocation(line: 1667, column: 19, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 1667, column: 7)
!4635 = !DILocation(line: 1667, column: 7, scope: !4261)
!4636 = !DILocation(line: 1668, column: 5, scope: !4634)
!4637 = !DILocation(line: 1671, column: 1, scope: !4261)
!4638 = distinct !DISubprogram(name: "outgoing_edges_match", scope: !3, file: !3, line: 1140, type: !4639, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4641)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!752, !753, !1154, !1154}
!4641 = !{!4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4669, !4671, !4672, !4673, !4674, !4679, !4680, !4681, !4685, !4688, !4689, !4692, !4693, !4695, !4696, !4700, !4701, !4702}
!4642 = !DILocalVariable(name: "mode", arg: 1, scope: !4638, file: !3, line: 1140, type: !753)
!4643 = !DILocalVariable(name: "bb1", arg: 2, scope: !4638, file: !3, line: 1140, type: !1154)
!4644 = !DILocalVariable(name: "bb2", arg: 3, scope: !4638, file: !3, line: 1140, type: !1154)
!4645 = !DILocalVariable(name: "nehedges1", scope: !4638, file: !3, line: 1142, type: !753)
!4646 = !DILocalVariable(name: "nehedges2", scope: !4638, file: !3, line: 1142, type: !753)
!4647 = !DILocalVariable(name: "fallthru1", scope: !4638, file: !3, line: 1143, type: !1171)
!4648 = !DILocalVariable(name: "fallthru2", scope: !4638, file: !3, line: 1143, type: !1171)
!4649 = !DILocalVariable(name: "e1", scope: !4638, file: !3, line: 1144, type: !1171)
!4650 = !DILocalVariable(name: "e2", scope: !4638, file: !3, line: 1144, type: !1171)
!4651 = !DILocalVariable(name: "ei", scope: !4638, file: !3, line: 1145, type: !3049)
!4652 = !DILocalVariable(name: "b1", scope: !4653, file: !3, line: 1163, type: !1171)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 1162, column: 5)
!4654 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1159, column: 7)
!4655 = !DILocalVariable(name: "f1", scope: !4653, file: !3, line: 1163, type: !1171)
!4656 = !DILocalVariable(name: "b2", scope: !4653, file: !3, line: 1163, type: !1171)
!4657 = !DILocalVariable(name: "f2", scope: !4653, file: !3, line: 1163, type: !1171)
!4658 = !DILocalVariable(name: "reverse", scope: !4653, file: !3, line: 1164, type: !752)
!4659 = !DILocalVariable(name: "match", scope: !4653, file: !3, line: 1164, type: !752)
!4660 = !DILocalVariable(name: "set1", scope: !4653, file: !3, line: 1165, type: !760)
!4661 = !DILocalVariable(name: "set2", scope: !4653, file: !3, line: 1165, type: !760)
!4662 = !DILocalVariable(name: "cond1", scope: !4653, file: !3, line: 1165, type: !760)
!4663 = !DILocalVariable(name: "cond2", scope: !4653, file: !3, line: 1165, type: !760)
!4664 = !DILocalVariable(name: "code1", scope: !4653, file: !3, line: 1166, type: !390)
!4665 = !DILocalVariable(name: "code2", scope: !4653, file: !3, line: 1166, type: !390)
!4666 = !DILocalVariable(name: "prob2", scope: !4667, file: !3, line: 1237, type: !753)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 1236, column: 2)
!4668 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1233, column: 11)
!4669 = !DILocalVariable(name: "label1", scope: !4670, file: !3, line: 1272, type: !760)
!4670 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1271, column: 5)
!4671 = !DILocalVariable(name: "label2", scope: !4670, file: !3, line: 1272, type: !760)
!4672 = !DILocalVariable(name: "table1", scope: !4670, file: !3, line: 1273, type: !760)
!4673 = !DILocalVariable(name: "table2", scope: !4670, file: !3, line: 1273, type: !760)
!4674 = !DILocalVariable(name: "identical", scope: !4675, file: !3, line: 1289, type: !752)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 1287, column: 6)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 1286, column: 8)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 1278, column: 2)
!4678 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 1275, column: 11)
!4679 = !DILocalVariable(name: "p1", scope: !4675, file: !3, line: 1290, type: !760)
!4680 = !DILocalVariable(name: "p2", scope: !4675, file: !3, line: 1290, type: !760)
!4681 = !DILocalVariable(name: "i", scope: !4682, file: !3, line: 1303, type: !753)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1302, column: 3)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 1298, column: 17)
!4684 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1294, column: 12)
!4685 = !DILocalVariable(name: "rr", scope: !4686, file: !3, line: 1313, type: !4286)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 1312, column: 3)
!4687 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1311, column: 12)
!4688 = !DILocalVariable(name: "match", scope: !4686, file: !3, line: 1314, type: !752)
!4689 = !DILocalVariable(name: "d1", scope: !4690, file: !3, line: 1378, type: !1154)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 1377, column: 5)
!4691 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1376, column: 7)
!4692 = !DILocalVariable(name: "d2", scope: !4690, file: !3, line: 1380, type: !1154)
!4693 = !DILocalVariable(name: "n1", scope: !4694, file: !3, line: 1389, type: !760)
!4694 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1388, column: 3)
!4695 = !DILocalVariable(name: "n2", scope: !4694, file: !3, line: 1390, type: !760)
!4696 = !DILocalVariable(name: "e2", scope: !4697, file: !3, line: 1403, type: !1171)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 1402, column: 5)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 1401, column: 3)
!4699 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1401, column: 3)
!4700 = !DILocalVariable(name: "ei", scope: !4697, file: !3, line: 1404, type: !3049)
!4701 = !DILocalVariable(name: "d1", scope: !4697, file: !3, line: 1405, type: !1154)
!4702 = !DILocalVariable(name: "d2", scope: !4703, file: !3, line: 1412, type: !1154)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 1411, column: 9)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1410, column: 7)
!4705 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 1410, column: 7)
!4706 = !DILocation(line: 0, scope: !4638)
!4707 = !DILocation(line: 1144, column: 3, scope: !4638)
!4708 = !DILocation(line: 1145, column: 3, scope: !4638)
!4709 = !DILocation(line: 1149, column: 7, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1149, column: 7)
!4711 = !DILocation(line: 1150, column: 7, scope: !4710)
!4712 = !DILocation(line: 1150, column: 11, scope: !4710)
!4713 = !DILocation(line: 1150, column: 35, scope: !4710)
!4714 = !DILocation(line: 1150, column: 41, scope: !4710)
!4715 = !DILocation(line: 1150, column: 71, scope: !4710)
!4716 = !DILocation(line: 1151, column: 7, scope: !4710)
!4717 = !DILocation(line: 1151, column: 12, scope: !4710)
!4718 = !DILocation(line: 1151, column: 34, scope: !4710)
!4719 = !DILocation(line: 1151, column: 37, scope: !4710)
!4720 = !DILocation(line: 1149, column: 7, scope: !4638)
!4721 = !DILocation(line: 1152, column: 13, scope: !4710)
!4722 = !DILocation(line: 1153, column: 6, scope: !4710)
!4723 = !DILocation(line: 1153, column: 10, scope: !4710)
!4724 = !DILocation(line: 1153, column: 34, scope: !4710)
!4725 = !DILocation(line: 1154, column: 3, scope: !4710)
!4726 = !DILocation(line: 1154, column: 33, scope: !4710)
!4727 = !DILocation(line: 1155, column: 6, scope: !4710)
!4728 = !DILocation(line: 1155, column: 11, scope: !4710)
!4729 = !DILocation(line: 1155, column: 33, scope: !4710)
!4730 = !DILocation(line: 1155, column: 36, scope: !4710)
!4731 = !DILocation(line: 1152, column: 5, scope: !4710)
!4732 = !DILocation(line: 1159, column: 7, scope: !4654)
!4733 = !DILocation(line: 1159, column: 31, scope: !4654)
!4734 = !DILocation(line: 1160, column: 7, scope: !4654)
!4735 = !DILocation(line: 1160, column: 26, scope: !4654)
!4736 = !DILocation(line: 1160, column: 10, scope: !4654)
!4737 = !DILocation(line: 1161, column: 7, scope: !4654)
!4738 = !DILocation(line: 1161, column: 22, scope: !4654)
!4739 = !DILocation(line: 1161, column: 10, scope: !4654)
!4740 = !DILocation(line: 1159, column: 7, scope: !4638)
!4741 = !DILocation(line: 1168, column: 11, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1168, column: 11)
!4743 = !DILocation(line: 1168, column: 35, scope: !4742)
!4744 = !DILocation(line: 1169, column: 4, scope: !4742)
!4745 = !DILocation(line: 1169, column: 24, scope: !4742)
!4746 = !DILocation(line: 1169, column: 8, scope: !4742)
!4747 = !DILocation(line: 1170, column: 4, scope: !4742)
!4748 = !DILocation(line: 1170, column: 20, scope: !4742)
!4749 = !DILocation(line: 1170, column: 8, scope: !4742)
!4750 = !DILocation(line: 1168, column: 11, scope: !4653)
!4751 = !DILocation(line: 1173, column: 12, scope: !4653)
!4752 = !DILocation(line: 0, scope: !4653)
!4753 = !DILocation(line: 1174, column: 12, scope: !4653)
!4754 = !DILocation(line: 1175, column: 12, scope: !4653)
!4755 = !DILocation(line: 1176, column: 12, scope: !4653)
!4756 = !DILocation(line: 1180, column: 11, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1180, column: 11)
!4758 = !DILocation(line: 1180, column: 11, scope: !4653)
!4759 = !DILocation(line: 1181, column: 7, scope: !4757)
!4760 = !DILocation(line: 1181, column: 2, scope: !4757)
!4761 = !DILocation(line: 1183, column: 11, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1183, column: 11)
!4763 = !DILocation(line: 1183, column: 11, scope: !4653)
!4764 = !DILocation(line: 1184, column: 7, scope: !4762)
!4765 = !DILocation(line: 1184, column: 2, scope: !4762)
!4766 = !DILocation(line: 1189, column: 11, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1189, column: 11)
!4768 = !DILocation(line: 1190, column: 4, scope: !4767)
!4769 = !DILocation(line: 1190, column: 7, scope: !4767)
!4770 = !DILocation(line: 1191, column: 4, scope: !4767)
!4771 = !DILocation(line: 1191, column: 7, scope: !4767)
!4772 = !DILocation(line: 1192, column: 4, scope: !4767)
!4773 = !DILocation(line: 1192, column: 7, scope: !4767)
!4774 = !DILocation(line: 1189, column: 11, scope: !4653)
!4775 = !DILocation(line: 1195, column: 20, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1195, column: 11)
!4777 = !DILocation(line: 1195, column: 32, scope: !4776)
!4778 = !DILocation(line: 1195, column: 44, scope: !4776)
!4779 = !DILocation(line: 1195, column: 11, scope: !4653)
!4780 = !DILocation(line: 1197, column: 25, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 1197, column: 16)
!4782 = !DILocation(line: 1197, column: 37, scope: !4781)
!4783 = !DILocation(line: 1197, column: 49, scope: !4781)
!4784 = !DILocation(line: 1197, column: 16, scope: !4776)
!4785 = !DILocation(line: 0, scope: !4776)
!4786 = !DILocation(line: 1202, column: 22, scope: !4653)
!4787 = !DILocation(line: 1202, column: 14, scope: !4653)
!4788 = !DILocation(line: 1203, column: 22, scope: !4653)
!4789 = !DILocation(line: 1203, column: 14, scope: !4653)
!4790 = !DILocation(line: 1204, column: 12, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1204, column: 11)
!4792 = !DILocation(line: 1204, column: 40, scope: !4791)
!4793 = !DILocation(line: 1204, column: 37, scope: !4791)
!4794 = !DILocation(line: 1205, column: 8, scope: !4791)
!4795 = !DILocation(line: 1205, column: 33, scope: !4791)
!4796 = !DILocation(line: 1205, column: 4, scope: !4791)
!4797 = !DILocation(line: 1204, column: 11, scope: !4653)
!4798 = !DILocation(line: 1206, column: 12, scope: !4791)
!4799 = !DILocation(line: 1206, column: 2, scope: !4791)
!4800 = !DILocation(line: 1208, column: 15, scope: !4653)
!4801 = !DILocation(line: 1209, column: 15, scope: !4653)
!4802 = !DILocation(line: 1210, column: 15, scope: !4653)
!4803 = !DILocation(line: 1211, column: 11, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1211, column: 11)
!4805 = !DILocation(line: 1211, column: 11, scope: !4653)
!4806 = !DILocation(line: 1212, column: 43, scope: !4804)
!4807 = !DILocation(line: 1212, column: 10, scope: !4804)
!4808 = !DILocation(line: 1212, column: 2, scope: !4804)
!4809 = !DILocation(line: 1214, column: 10, scope: !4804)
!4810 = !DILocation(line: 0, scope: !4804)
!4811 = !DILocation(line: 1216, column: 17, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1216, column: 11)
!4813 = !DILocation(line: 1216, column: 11, scope: !4653)
!4814 = !DILocation(line: 1220, column: 23, scope: !4653)
!4815 = !DILocation(line: 1221, column: 3, scope: !4653)
!4816 = !DILocation(line: 1221, column: 30, scope: !4653)
!4817 = !DILocation(line: 1221, column: 47, scope: !4653)
!4818 = !DILocation(line: 1221, column: 6, scope: !4653)
!4819 = !DILocation(line: 1222, column: 3, scope: !4653)
!4820 = !DILocation(line: 1222, column: 30, scope: !4653)
!4821 = !DILocation(line: 1222, column: 47, scope: !4653)
!4822 = !DILocation(line: 1222, column: 6, scope: !4653)
!4823 = !DILocation(line: 1223, column: 9, scope: !4653)
!4824 = !DILocation(line: 1223, column: 22, scope: !4653)
!4825 = !DILocation(line: 1223, column: 19, scope: !4653)
!4826 = !DILocation(line: 1224, column: 6, scope: !4653)
!4827 = !DILocation(line: 1224, column: 33, scope: !4653)
!4828 = !DILocation(line: 1225, column: 12, scope: !4653)
!4829 = !DILocation(line: 1224, column: 9, scope: !4653)
!4830 = !DILocation(line: 1226, column: 6, scope: !4653)
!4831 = !DILocation(line: 1226, column: 33, scope: !4653)
!4832 = !DILocation(line: 1227, column: 12, scope: !4653)
!4833 = !DILocation(line: 1226, column: 9, scope: !4653)
!4834 = !DILocation(line: 1233, column: 11, scope: !4668)
!4835 = !DILocation(line: 1234, column: 4, scope: !4668)
!4836 = !DILocation(line: 1234, column: 7, scope: !4668)
!4837 = !DILocation(line: 1235, column: 4, scope: !4668)
!4838 = !DILocation(line: 1235, column: 7, scope: !4668)
!4839 = !DILocation(line: 1233, column: 11, scope: !4653)
!4840 = !DILocation(line: 1239, column: 12, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1239, column: 8)
!4842 = !DILocation(line: 1239, column: 24, scope: !4841)
!4843 = !DILocation(line: 1239, column: 17, scope: !4841)
!4844 = !DILocation(line: 0, scope: !4841)
!4845 = !DILocation(line: 1239, column: 8, scope: !4667)
!4846 = !DILocation(line: 0, scope: !4667)
!4847 = !DILocation(line: 1248, column: 17, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 1248, column: 8)
!4849 = !DILocation(line: 1248, column: 29, scope: !4848)
!4850 = !DILocation(line: 1248, column: 8, scope: !4848)
!4851 = !DILocation(line: 1248, column: 38, scope: !4848)
!4852 = !DILocation(line: 1248, column: 8, scope: !4667)
!4853 = !DILocation(line: 1250, column: 12, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 1250, column: 12)
!4855 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 1249, column: 6)
!4856 = !DILocation(line: 1250, column: 12, scope: !4855)
!4857 = !DILocation(line: 1253, column: 10, scope: !4854)
!4858 = !DILocation(line: 1253, column: 22, scope: !4854)
!4859 = !DILocation(line: 1253, column: 33, scope: !4854)
!4860 = !DILocation(line: 1251, column: 3, scope: !4854)
!4861 = !DILocation(line: 1259, column: 11, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 1259, column: 11)
!4863 = !DILocation(line: 1259, column: 24, scope: !4862)
!4864 = !DILocation(line: 1259, column: 21, scope: !4862)
!4865 = !DILocation(line: 1261, column: 9, scope: !4862)
!4866 = !DILocation(line: 1261, column: 21, scope: !4862)
!4867 = !DILocation(line: 1260, column: 2, scope: !4862)
!4868 = !DILocation(line: 1272, column: 7, scope: !4670)
!4869 = !DILocation(line: 1273, column: 7, scope: !4670)
!4870 = !DILocation(line: 1275, column: 24, scope: !4678)
!4871 = !DILocation(line: 0, scope: !4670)
!4872 = !DILocation(line: 1275, column: 11, scope: !4678)
!4873 = !DILocation(line: 1276, column: 4, scope: !4678)
!4874 = !DILocation(line: 1276, column: 20, scope: !4678)
!4875 = !DILocation(line: 1276, column: 7, scope: !4678)
!4876 = !DILocation(line: 1277, column: 4, scope: !4678)
!4877 = !DILocation(line: 1277, column: 7, scope: !4678)
!4878 = !DILocation(line: 1277, column: 38, scope: !4678)
!4879 = !DILocation(line: 1277, column: 35, scope: !4678)
!4880 = !DILocation(line: 1275, column: 11, scope: !4670)
!4881 = !DILocation(line: 1286, column: 8, scope: !4676)
!4882 = !DILocation(line: 1286, column: 18, scope: !4676)
!4883 = !DILocation(line: 1286, column: 15, scope: !4676)
!4884 = !DILocation(line: 1286, column: 25, scope: !4676)
!4885 = !DILocation(line: 1286, column: 55, scope: !4676)
!4886 = !DILocation(line: 1286, column: 29, scope: !4676)
!4887 = !DILocation(line: 1286, column: 8, scope: !4677)
!4888 = !DILocation(line: 0, scope: !4675)
!4889 = !DILocation(line: 1292, column: 13, scope: !4675)
!4890 = !DILocation(line: 1293, column: 13, scope: !4675)
!4891 = !DILocation(line: 1294, column: 12, scope: !4684)
!4892 = !DILocation(line: 1294, column: 26, scope: !4684)
!4893 = !DILocation(line: 1294, column: 38, scope: !4684)
!4894 = !DILocation(line: 1294, column: 41, scope: !4684)
!4895 = !DILocation(line: 1294, column: 12, scope: !4675)
!4896 = !DILocation(line: 1298, column: 17, scope: !4683)
!4897 = !DILocation(line: 1298, column: 31, scope: !4683)
!4898 = !DILocation(line: 1299, column: 10, scope: !4683)
!4899 = !DILocation(line: 1299, column: 14, scope: !4683)
!4900 = !DILocation(line: 1299, column: 33, scope: !4683)
!4901 = !DILocation(line: 1299, column: 30, scope: !4683)
!4902 = !DILocation(line: 1300, column: 10, scope: !4683)
!4903 = !DILocation(line: 1300, column: 26, scope: !4683)
!4904 = !DILocation(line: 1300, column: 40, scope: !4683)
!4905 = !DILocation(line: 1300, column: 13, scope: !4683)
!4906 = !DILocation(line: 1301, column: 10, scope: !4683)
!4907 = !DILocation(line: 1301, column: 26, scope: !4683)
!4908 = !DILocation(line: 1301, column: 40, scope: !4683)
!4909 = !DILocation(line: 1301, column: 13, scope: !4683)
!4910 = !DILocation(line: 1298, column: 17, scope: !4684)
!4911 = !DILocation(line: 1306, column: 14, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 1306, column: 5)
!4913 = !DILocation(line: 0, scope: !4682)
!4914 = !DILocation(line: 1306, column: 10, scope: !4912)
!4915 = !DILocation(line: 1305, column: 15, scope: !4682)
!4916 = !DILocation(line: 0, scope: !4912)
!4917 = !DILocation(line: 1306, column: 37, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 1306, column: 5)
!4919 = !DILocation(line: 1306, column: 42, scope: !4918)
!4920 = !DILocation(line: 1306, column: 5, scope: !4912)
!4921 = !DILocation(line: 1307, column: 25, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1307, column: 11)
!4923 = !DILocation(line: 1307, column: 45, scope: !4922)
!4924 = !DILocation(line: 1307, column: 12, scope: !4922)
!4925 = !DILocation(line: 1307, column: 11, scope: !4918)
!4926 = !DILocation(line: 1306, column: 5, scope: !4918)
!4927 = distinct !{!4927, !4920, !4928}
!4928 = !DILocation(line: 1308, column: 21, scope: !4912)
!4929 = !DILocation(line: 1311, column: 12, scope: !4687)
!4930 = !DILocation(line: 0, scope: !4684)
!4931 = !DILocation(line: 1311, column: 12, scope: !4675)
!4932 = !DILocation(line: 1313, column: 5, scope: !4686)
!4933 = !DILocation(line: 1318, column: 13, scope: !4686)
!4934 = !DILocation(line: 1318, column: 11, scope: !4686)
!4935 = !DILocation(line: 1319, column: 13, scope: !4686)
!4936 = !DILocation(line: 1319, column: 8, scope: !4686)
!4937 = !DILocation(line: 1319, column: 11, scope: !4686)
!4938 = !DILocation(line: 1320, column: 8, scope: !4686)
!4939 = !DILocation(line: 1320, column: 27, scope: !4686)
!4940 = !DILocation(line: 1321, column: 20, scope: !4686)
!4941 = !DILocation(line: 1321, column: 5, scope: !4686)
!4942 = !DILocation(line: 1323, column: 38, scope: !4686)
!4943 = !DILocation(line: 1323, column: 52, scope: !4686)
!4944 = !DILocation(line: 1323, column: 13, scope: !4686)
!4945 = !DILocation(line: 0, scope: !4686)
!4946 = !DILocation(line: 1324, column: 9, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 1324, column: 9)
!4948 = !DILocation(line: 1324, column: 22, scope: !4947)
!4949 = !DILocation(line: 1324, column: 19, scope: !4947)
!4950 = !DILocation(line: 1327, column: 14, scope: !4947)
!4951 = !DILocation(line: 1327, column: 26, scope: !4947)
!4952 = !DILocation(line: 1325, column: 7, scope: !4947)
!4953 = !DILocation(line: 1332, column: 13, scope: !4686)
!4954 = !DILocation(line: 1332, column: 11, scope: !4686)
!4955 = !DILocation(line: 1333, column: 13, scope: !4686)
!4956 = !DILocation(line: 1333, column: 11, scope: !4686)
!4957 = !DILocation(line: 1334, column: 20, scope: !4686)
!4958 = !DILocation(line: 1334, column: 5, scope: !4686)
!4959 = !DILocation(line: 1337, column: 3, scope: !4687)
!4960 = !DILocation(line: 1339, column: 4, scope: !4677)
!4961 = !DILocation(line: 1341, column: 5, scope: !4638)
!4962 = !DILocation(line: 1345, column: 33, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1345, column: 7)
!4964 = !DILocation(line: 1345, column: 47, scope: !4963)
!4965 = !DILocation(line: 1345, column: 8, scope: !4963)
!4966 = !DILocation(line: 1345, column: 7, scope: !4638)
!4967 = !DILocation(line: 1351, column: 7, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1351, column: 7)
!4969 = !DILocation(line: 1351, column: 34, scope: !4968)
!4970 = !DILocation(line: 1351, column: 31, scope: !4968)
!4971 = !DILocation(line: 1351, column: 7, scope: !4638)
!4972 = !DILocation(line: 1354, column: 3, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1354, column: 3)
!4974 = !DILocation(line: 0, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 1354, column: 3)
!4976 = !DILocation(line: 1354, column: 3, scope: !4975)
!4977 = !DILocation(line: 1356, column: 12, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1355, column: 5)
!4979 = !DILocation(line: 1358, column: 11, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 1358, column: 11)
!4981 = !DILocation(line: 1358, column: 15, scope: !4980)
!4982 = !DILocation(line: 1358, column: 11, scope: !4978)
!4983 = !DILocation(line: 1361, column: 15, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 1361, column: 11)
!4985 = !DILocation(line: 1361, column: 11, scope: !4978)
!4986 = !DILocation(line: 1364, column: 21, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 1364, column: 11)
!4988 = !DILocation(line: 1364, column: 11, scope: !4978)
!4989 = !DILocation(line: 1366, column: 21, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 1366, column: 11)
!4991 = !DILocation(line: 1366, column: 11, scope: !4978)
!4992 = distinct !{!4992, !4972, !4993}
!4993 = !DILocation(line: 1368, column: 5, scope: !4973)
!4994 = !DILocation(line: 1371, column: 17, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1371, column: 7)
!4996 = !DILocation(line: 1372, column: 7, scope: !4995)
!4997 = !DILocation(line: 1372, column: 21, scope: !4995)
!4998 = !DILocation(line: 1372, column: 41, scope: !4995)
!4999 = !DILocation(line: 1372, column: 27, scope: !4995)
!5000 = !DILocation(line: 1371, column: 7, scope: !4638)
!5001 = !DILocation(line: 1376, column: 7, scope: !4691)
!5002 = !DILocation(line: 1376, column: 7, scope: !4638)
!5003 = !DILocation(line: 1378, column: 55, scope: !4690)
!5004 = !DILocation(line: 1378, column: 25, scope: !4690)
!5005 = !DILocation(line: 0, scope: !4690)
!5006 = !DILocation(line: 1379, column: 6, scope: !4690)
!5007 = !DILocation(line: 1380, column: 55, scope: !4690)
!5008 = !DILocation(line: 1380, column: 25, scope: !4690)
!5009 = !DILocation(line: 1381, column: 6, scope: !4690)
!5010 = !DILocation(line: 1383, column: 14, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 1383, column: 11)
!5012 = !DILocation(line: 0, scope: !4691)
!5013 = !DILocation(line: 1389, column: 29, scope: !4694)
!5014 = !DILocation(line: 1389, column: 14, scope: !4694)
!5015 = !DILocation(line: 0, scope: !4694)
!5016 = !DILocation(line: 1390, column: 29, scope: !4694)
!5017 = !DILocation(line: 1390, column: 14, scope: !4694)
!5018 = !DILocation(line: 1392, column: 10, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 1392, column: 9)
!5020 = !DILocation(line: 1392, column: 16, scope: !5019)
!5021 = !DILocation(line: 1392, column: 13, scope: !5019)
!5022 = !DILocation(line: 1395, column: 12, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 1395, column: 9)
!5024 = !DILocation(line: 1395, column: 17, scope: !5023)
!5025 = !DILocation(line: 1395, column: 20, scope: !5023)
!5026 = !DILocation(line: 1395, column: 23, scope: !5023)
!5027 = !DILocation(line: 1395, column: 39, scope: !5023)
!5028 = !DILocation(line: 1395, column: 36, scope: !5023)
!5029 = !DILocation(line: 1395, column: 9, scope: !4694)
!5030 = !DILocation(line: 1397, column: 3, scope: !4638)
!5031 = !DILocation(line: 1401, column: 3, scope: !4699)
!5032 = !DILocation(line: 0, scope: !4697)
!5033 = !DILocation(line: 0, scope: !4705)
!5034 = !DILocation(line: 0, scope: !4704)
!5035 = !DILocation(line: 1396, column: 7, scope: !5023)
!5036 = !DILocation(line: 1401, column: 3, scope: !4698)
!5037 = !DILocation(line: 1403, column: 7, scope: !4697)
!5038 = !DILocation(line: 1404, column: 7, scope: !4697)
!5039 = !DILocation(line: 1405, column: 24, scope: !4697)
!5040 = !DILocation(line: 1405, column: 28, scope: !4697)
!5041 = !DILocation(line: 1407, column: 11, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 1407, column: 11)
!5043 = !DILocation(line: 1407, column: 11, scope: !4697)
!5044 = !DILocation(line: 1408, column: 14, scope: !5042)
!5045 = !DILocation(line: 1408, column: 33, scope: !5042)
!5046 = !DILocation(line: 1408, column: 9, scope: !5042)
!5047 = !DILocation(line: 1410, column: 7, scope: !4705)
!5048 = !DILocation(line: 1410, column: 7, scope: !4704)
!5049 = !DILocation(line: 1412, column: 28, scope: !4703)
!5050 = !DILocation(line: 1412, column: 32, scope: !4703)
!5051 = !DILocation(line: 0, scope: !4703)
!5052 = !DILocation(line: 1413, column: 15, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 1413, column: 15)
!5054 = !DILocation(line: 1413, column: 15, scope: !4703)
!5055 = !DILocation(line: 1414, column: 18, scope: !5053)
!5056 = !DILocation(line: 1414, column: 37, scope: !5053)
!5057 = !DILocation(line: 1414, column: 13, scope: !5053)
!5058 = !DILocation(line: 1415, column: 18, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 1415, column: 15)
!5060 = distinct !{!5060, !5047, !5061}
!5061 = !DILocation(line: 1417, column: 9, scope: !4705)
!5062 = !DILocation(line: 1419, column: 12, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 1419, column: 11)
!5064 = !DILocation(line: 0, scope: !4698)
!5065 = !DILocation(line: 1421, column: 5, scope: !4698)
!5066 = distinct !{!5066, !5031, !5067}
!5067 = !DILocation(line: 1421, column: 5, scope: !4699)
!5068 = !DILocation(line: 1424, column: 1, scope: !4638)
!5069 = distinct !DISubprogram(name: "flow_find_cross_jump", scope: !3, file: !3, line: 1028, type: !5070, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5072)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!753, !753, !1154, !1154, !4110, !4110}
!5072 = !{!5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5089}
!5073 = !DILocalVariable(name: "mode", arg: 1, scope: !5069, file: !3, line: 1028, type: !753)
!5074 = !DILocalVariable(name: "bb1", arg: 2, scope: !5069, file: !3, line: 1028, type: !1154)
!5075 = !DILocalVariable(name: "bb2", arg: 3, scope: !5069, file: !3, line: 1029, type: !1154)
!5076 = !DILocalVariable(name: "f1", arg: 4, scope: !5069, file: !3, line: 1029, type: !4110)
!5077 = !DILocalVariable(name: "f2", arg: 5, scope: !5069, file: !3, line: 1029, type: !4110)
!5078 = !DILocalVariable(name: "i1", scope: !5069, file: !3, line: 1031, type: !760)
!5079 = !DILocalVariable(name: "i2", scope: !5069, file: !3, line: 1031, type: !760)
!5080 = !DILocalVariable(name: "last1", scope: !5069, file: !3, line: 1031, type: !760)
!5081 = !DILocalVariable(name: "last2", scope: !5069, file: !3, line: 1031, type: !760)
!5082 = !DILocalVariable(name: "afterlast1", scope: !5069, file: !3, line: 1031, type: !760)
!5083 = !DILocalVariable(name: "afterlast2", scope: !5069, file: !3, line: 1031, type: !760)
!5084 = !DILocalVariable(name: "ninsns", scope: !5069, file: !3, line: 1032, type: !753)
!5085 = !DILocalVariable(name: "equiv1", scope: !5086, file: !3, line: 1079, type: !760)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 1076, column: 2)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1075, column: 11)
!5088 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 1058, column: 5)
!5089 = !DILocalVariable(name: "equiv2", scope: !5086, file: !3, line: 1080, type: !760)
!5090 = !DILocation(line: 0, scope: !5069)
!5091 = !DILocation(line: 1037, column: 8, scope: !5069)
!5092 = !DILocation(line: 1039, column: 7, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 1039, column: 7)
!5094 = !DILocation(line: 1040, column: 7, scope: !5093)
!5095 = !DILocation(line: 1040, column: 11, scope: !5093)
!5096 = !DILocation(line: 1040, column: 29, scope: !5093)
!5097 = !DILocation(line: 1040, column: 49, scope: !5093)
!5098 = !DILocation(line: 1040, column: 33, scope: !5093)
!5099 = !DILocation(line: 1039, column: 7, scope: !5069)
!5100 = !DILocation(line: 1043, column: 12, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1041, column: 5)
!5102 = !DILocation(line: 1044, column: 5, scope: !5101)
!5103 = !DILocation(line: 1046, column: 8, scope: !5069)
!5104 = !DILocation(line: 1047, column: 7, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 1047, column: 7)
!5106 = !DILocation(line: 1048, column: 7, scope: !5105)
!5107 = !DILocation(line: 1048, column: 11, scope: !5105)
!5108 = !DILocation(line: 1048, column: 29, scope: !5105)
!5109 = !DILocation(line: 1048, column: 49, scope: !5105)
!5110 = !DILocation(line: 1048, column: 33, scope: !5105)
!5111 = !DILocation(line: 1047, column: 7, scope: !5069)
!5112 = !DILocation(line: 1052, column: 12, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1052, column: 11)
!5114 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1049, column: 5)
!5115 = !DILocation(line: 1052, column: 30, scope: !5113)
!5116 = !DILocation(line: 1052, column: 34, scope: !5113)
!5117 = !DILocation(line: 1052, column: 55, scope: !5113)
!5118 = !DILocation(line: 1052, column: 52, scope: !5113)
!5119 = !DILocation(line: 1054, column: 12, scope: !5114)
!5120 = !DILocation(line: 1055, column: 5, scope: !5114)
!5121 = !DILocation(line: 1032, column: 7, scope: !5069)
!5122 = !DILocation(line: 1057, column: 3, scope: !5069)
!5123 = !DILocation(line: 1060, column: 7, scope: !5088)
!5124 = !DILocation(line: 1060, column: 15, scope: !5088)
!5125 = !DILocation(line: 1060, column: 36, scope: !5088)
!5126 = !DILocation(line: 1060, column: 45, scope: !5088)
!5127 = !DILocation(line: 1060, column: 42, scope: !5088)
!5128 = !DILocation(line: 1061, column: 7, scope: !5088)
!5129 = distinct !{!5129, !5123, !5128}
!5130 = !DILocation(line: 1063, column: 7, scope: !5088)
!5131 = !DILocation(line: 1063, column: 15, scope: !5088)
!5132 = !DILocation(line: 1063, column: 36, scope: !5088)
!5133 = !DILocation(line: 1063, column: 45, scope: !5088)
!5134 = !DILocation(line: 1063, column: 42, scope: !5088)
!5135 = !DILocation(line: 1064, column: 7, scope: !5088)
!5136 = distinct !{!5136, !5130, !5135}
!5137 = !DILocation(line: 1066, column: 17, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1066, column: 11)
!5139 = !DILocation(line: 1066, column: 14, scope: !5138)
!5140 = !DILocation(line: 1066, column: 31, scope: !5138)
!5141 = !DILocation(line: 1066, column: 40, scope: !5138)
!5142 = !DILocation(line: 1066, column: 37, scope: !5138)
!5143 = !DILocation(line: 1066, column: 11, scope: !5088)
!5144 = !DILocation(line: 1069, column: 12, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1069, column: 11)
!5146 = !DILocation(line: 1069, column: 11, scope: !5088)
!5147 = !DILocation(line: 1072, column: 7, scope: !5088)
!5148 = !DILocation(line: 1075, column: 11, scope: !5087)
!5149 = !DILocation(line: 1075, column: 11, scope: !5088)
!5150 = !DILocation(line: 1079, column: 17, scope: !5086)
!5151 = !DILocation(line: 0, scope: !5086)
!5152 = !DILocation(line: 1080, column: 17, scope: !5086)
!5153 = !DILocation(line: 1082, column: 8, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 1082, column: 8)
!5155 = !DILocation(line: 1082, column: 19, scope: !5154)
!5156 = !DILocation(line: 1082, column: 15, scope: !5154)
!5157 = !DILocation(line: 1083, column: 6, scope: !5154)
!5158 = !DILocation(line: 1084, column: 21, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1084, column: 13)
!5160 = !DILocation(line: 1085, column: 6, scope: !5159)
!5161 = !DILocation(line: 1086, column: 13, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 1086, column: 13)
!5163 = !DILocation(line: 1086, column: 20, scope: !5162)
!5164 = !DILocation(line: 1087, column: 23, scope: !5162)
!5165 = !DILocation(line: 1087, column: 41, scope: !5162)
!5166 = !DILocation(line: 1087, column: 10, scope: !5162)
!5167 = !DILocation(line: 1086, column: 13, scope: !5159)
!5168 = !DILocation(line: 1089, column: 8, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 1088, column: 6)
!5170 = !DILocation(line: 1090, column: 8, scope: !5169)
!5171 = !DILocation(line: 1091, column: 6, scope: !5169)
!5172 = !DILocation(line: 1095, column: 10, scope: !5086)
!5173 = !DILocation(line: 1096, column: 2, scope: !5086)
!5174 = !DILocation(line: 1098, column: 12, scope: !5088)
!5175 = !DILocation(line: 1099, column: 12, scope: !5088)
!5176 = distinct !{!5176, !5122, !5177}
!5177 = !DILocation(line: 1100, column: 5, scope: !5069)
!5178 = !DILocation(line: 1112, column: 7, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 1112, column: 7)
!5180 = !DILocation(line: 1112, column: 7, scope: !5069)
!5181 = !DILocation(line: 0, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1113, column: 5)
!5183 = !DILocation(line: 1114, column: 7, scope: !5182)
!5184 = !DILocation(line: 1114, column: 20, scope: !5182)
!5185 = !DILocation(line: 1114, column: 37, scope: !5182)
!5186 = !DILocation(line: 1114, column: 41, scope: !5182)
!5187 = distinct !{!5187, !5183, !5188}
!5188 = !DILocation(line: 1115, column: 10, scope: !5182)
!5189 = !DILocation(line: 1117, column: 34, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1117, column: 11)
!5191 = !DILocation(line: 1117, column: 37, scope: !5190)
!5192 = !DILocation(line: 1117, column: 11, scope: !5182)
!5193 = !DILocation(line: 1118, column: 2, scope: !5190)
!5194 = !DILocation(line: 1120, column: 7, scope: !5182)
!5195 = !DILocation(line: 1120, column: 20, scope: !5182)
!5196 = !DILocation(line: 1120, column: 37, scope: !5182)
!5197 = !DILocation(line: 1120, column: 41, scope: !5182)
!5198 = distinct !{!5198, !5194, !5199}
!5199 = !DILocation(line: 1121, column: 10, scope: !5182)
!5200 = !DILocation(line: 1123, column: 34, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1123, column: 11)
!5202 = !DILocation(line: 1123, column: 37, scope: !5201)
!5203 = !DILocation(line: 1123, column: 11, scope: !5182)
!5204 = !DILocation(line: 1124, column: 2, scope: !5201)
!5205 = !DILocation(line: 1126, column: 11, scope: !5182)
!5206 = !DILocation(line: 1127, column: 11, scope: !5182)
!5207 = !DILocation(line: 1128, column: 5, scope: !5182)
!5208 = !DILocation(line: 1130, column: 3, scope: !5069)
!5209 = distinct !DISubprogram(name: "block_has_preserve_label", scope: !3, file: !3, line: 1429, type: !2957, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5210)
!5210 = !{!5211}
!5211 = !DILocalVariable(name: "bb", arg: 1, scope: !5209, file: !3, line: 1429, type: !1154)
!5212 = !DILocation(line: 0, scope: !5209)
!5213 = !DILocation(line: 1431, column: 11, scope: !5209)
!5214 = !DILocation(line: 1432, column: 11, scope: !5209)
!5215 = !DILocation(line: 1432, column: 14, scope: !5209)
!5216 = !DILocation(line: 1433, column: 11, scope: !5209)
!5217 = !DILocation(line: 1433, column: 14, scope: !5209)
!5218 = !DILocation(line: 1431, column: 3, scope: !5209)
!5219 = distinct !DISubprogram(name: "old_insns_match_p", scope: !3, file: !3, line: 948, type: !5220, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5222)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!752, !753, !760, !760}
!5222 = !{!5223, !5224, !5225, !5226, !5227, !5228, !5231, !5232}
!5223 = !DILocalVariable(name: "mode", arg: 1, scope: !5219, file: !3, line: 948, type: !753)
!5224 = !DILocalVariable(name: "i1", arg: 2, scope: !5219, file: !3, line: 948, type: !760)
!5225 = !DILocalVariable(name: "i2", arg: 3, scope: !5219, file: !3, line: 948, type: !760)
!5226 = !DILocalVariable(name: "p1", scope: !5219, file: !3, line: 950, type: !760)
!5227 = !DILocalVariable(name: "p2", scope: !5219, file: !3, line: 950, type: !760)
!5228 = !DILocalVariable(name: "note", scope: !5229, file: !3, line: 994, type: !760)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 989, column: 5)
!5230 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 988, column: 7)
!5231 = !DILocalVariable(name: "i1_regset", scope: !5229, file: !3, line: 995, type: !1912)
!5232 = !DILocalVariable(name: "i2_regset", scope: !5229, file: !3, line: 995, type: !1912)
!5233 = !DILocation(line: 0, scope: !5219)
!5234 = !DILocation(line: 953, column: 7, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 953, column: 7)
!5236 = !DILocation(line: 953, column: 24, scope: !5235)
!5237 = !DILocation(line: 953, column: 21, scope: !5235)
!5238 = !DILocation(line: 953, column: 7, scope: !5219)
!5239 = !DILocation(line: 958, column: 7, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 958, column: 7)
!5241 = !DILocation(line: 958, column: 36, scope: !5240)
!5242 = !DILocation(line: 958, column: 39, scope: !5240)
!5243 = !DILocation(line: 958, column: 7, scope: !5219)
!5244 = !DILocation(line: 961, column: 8, scope: !5219)
!5245 = !DILocation(line: 962, column: 8, scope: !5219)
!5246 = !DILocation(line: 964, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 964, column: 7)
!5248 = !DILocation(line: 964, column: 24, scope: !5247)
!5249 = !DILocation(line: 964, column: 21, scope: !5247)
!5250 = !DILocation(line: 964, column: 7, scope: !5219)
!5251 = !DILocation(line: 977, column: 7, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 977, column: 7)
!5253 = !DILocation(line: 978, column: 7, scope: !5252)
!5254 = !DILocation(line: 978, column: 25, scope: !5252)
!5255 = !DILocation(line: 979, column: 4, scope: !5252)
!5256 = !DILocation(line: 978, column: 12, scope: !5252)
!5257 = !DILocation(line: 980, column: 4, scope: !5252)
!5258 = !DILocation(line: 980, column: 7, scope: !5252)
!5259 = !DILocation(line: 980, column: 30, scope: !5252)
!5260 = !DILocation(line: 980, column: 27, scope: !5252)
!5261 = !DILocation(line: 977, column: 7, scope: !5219)
!5262 = !DILocation(line: 988, column: 13, scope: !5230)
!5263 = !DILocation(line: 988, column: 38, scope: !5230)
!5264 = !DILocation(line: 988, column: 41, scope: !5230)
!5265 = !DILocation(line: 988, column: 7, scope: !5219)
!5266 = !DILocation(line: 0, scope: !5229)
!5267 = !DILocation(line: 1000, column: 19, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1000, column: 7)
!5269 = !DILocation(line: 1000, column: 12, scope: !5268)
!5270 = !DILocation(line: 0, scope: !5268)
!5271 = !DILocation(line: 1000, column: 7, scope: !5268)
!5272 = !DILocation(line: 1001, column: 6, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 1001, column: 6)
!5274 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 1000, column: 7)
!5275 = !DILocation(line: 1001, column: 27, scope: !5273)
!5276 = !DILocation(line: 1001, column: 39, scope: !5273)
!5277 = !DILocation(line: 1001, column: 42, scope: !5273)
!5278 = !DILocation(line: 1001, column: 6, scope: !5274)
!5279 = !DILocation(line: 1002, column: 4, scope: !5273)
!5280 = !DILocation(line: 1000, column: 48, scope: !5274)
!5281 = !DILocation(line: 1000, column: 7, scope: !5274)
!5282 = distinct !{!5282, !5271, !5283}
!5283 = !DILocation(line: 1002, column: 4, scope: !5268)
!5284 = !DILocation(line: 1004, column: 19, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1004, column: 7)
!5286 = !DILocation(line: 1004, column: 12, scope: !5285)
!5287 = !DILocation(line: 0, scope: !5285)
!5288 = !DILocation(line: 1004, column: 7, scope: !5285)
!5289 = !DILocation(line: 1005, column: 6, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 1005, column: 6)
!5291 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 1004, column: 7)
!5292 = !DILocation(line: 1005, column: 27, scope: !5290)
!5293 = !DILocation(line: 1005, column: 39, scope: !5290)
!5294 = !DILocation(line: 1005, column: 42, scope: !5290)
!5295 = !DILocation(line: 1005, column: 6, scope: !5291)
!5296 = !DILocation(line: 1006, column: 4, scope: !5290)
!5297 = !DILocation(line: 1004, column: 48, scope: !5291)
!5298 = !DILocation(line: 1004, column: 7, scope: !5291)
!5299 = distinct !{!5299, !5288, !5300}
!5300 = !DILocation(line: 1006, column: 4, scope: !5285)
!5301 = !DILocation(line: 1008, column: 12, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1008, column: 11)
!5303 = !DILocation(line: 1013, column: 7, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 1013, column: 7)
!5305 = !DILocation(line: 1013, column: 7, scope: !5219)
!5306 = !DILocation(line: 1014, column: 9, scope: !5304)
!5307 = !DILocation(line: 1014, column: 43, scope: !5304)
!5308 = !DILocation(line: 1017, column: 3, scope: !5219)
!5309 = !DILocation(line: 1018, column: 1, scope: !5219)
!5310 = distinct !DISubprogram(name: "hard_reg_set_equal_p", scope: !1913, file: !1913, line: 121, type: !5311, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5314)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!752, !5313, !5313}
!5313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1912)
!5314 = !{!5315, !5316}
!5315 = !DILocalVariable(name: "x", arg: 1, scope: !5310, file: !1913, line: 121, type: !5313)
!5316 = !DILocalVariable(name: "y", arg: 2, scope: !5310, file: !1913, line: 121, type: !5313)
!5317 = !DILocation(line: 0, scope: !5310)
!5318 = !DILocation(line: 123, column: 12, scope: !5310)
!5319 = !DILocation(line: 123, column: 10, scope: !5310)
!5320 = !DILocation(line: 123, column: 3, scope: !5310)
!5321 = distinct !DISubprogram(name: "merge_memattrs", scope: !3, file: !3, line: 858, type: !5322, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5324)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{null, !760, !760}
!5324 = !{!5325, !5326, !5327, !5328, !5329, !5330, !5331}
!5325 = !DILocalVariable(name: "x", arg: 1, scope: !5321, file: !3, line: 858, type: !760)
!5326 = !DILocalVariable(name: "y", arg: 2, scope: !5321, file: !3, line: 858, type: !760)
!5327 = !DILocalVariable(name: "i", scope: !5321, file: !3, line: 860, type: !753)
!5328 = !DILocalVariable(name: "j", scope: !5321, file: !3, line: 861, type: !753)
!5329 = !DILocalVariable(name: "code", scope: !5321, file: !3, line: 862, type: !390)
!5330 = !DILocalVariable(name: "fmt", scope: !5321, file: !3, line: 863, type: !758)
!5331 = !DILocalVariable(name: "mem_size", scope: !5332, file: !3, line: 886, type: !760)
!5332 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 885, column: 2)
!5333 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 882, column: 16)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 880, column: 11)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 879, column: 5)
!5336 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 878, column: 7)
!5337 = !DILocation(line: 0, scope: !5321)
!5338 = !DILocation(line: 865, column: 9, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 865, column: 7)
!5340 = !DILocation(line: 865, column: 7, scope: !5321)
!5341 = !DILocation(line: 867, column: 9, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 867, column: 7)
!5343 = !DILocation(line: 867, column: 19, scope: !5342)
!5344 = !DILocation(line: 867, column: 14, scope: !5342)
!5345 = !DILocation(line: 870, column: 10, scope: !5321)
!5346 = !DILocation(line: 872, column: 15, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 872, column: 7)
!5348 = !DILocation(line: 872, column: 12, scope: !5347)
!5349 = !DILocation(line: 872, column: 7, scope: !5321)
!5350 = !DILocation(line: 875, column: 20, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 875, column: 7)
!5352 = !DILocation(line: 875, column: 7, scope: !5321)
!5353 = !DILocation(line: 878, column: 12, scope: !5336)
!5354 = !DILocation(line: 878, column: 19, scope: !5336)
!5355 = !DILocation(line: 878, column: 22, scope: !5336)
!5356 = !DILocation(line: 878, column: 39, scope: !5336)
!5357 = !DILocation(line: 878, column: 36, scope: !5336)
!5358 = !DILocation(line: 878, column: 7, scope: !5321)
!5359 = !DILocation(line: 880, column: 13, scope: !5334)
!5360 = !DILocation(line: 880, column: 11, scope: !5335)
!5361 = !DILocation(line: 881, column: 16, scope: !5334)
!5362 = !DILocation(line: 881, column: 2, scope: !5334)
!5363 = !DILocation(line: 882, column: 18, scope: !5333)
!5364 = !DILocation(line: 882, column: 16, scope: !5334)
!5365 = !DILocation(line: 883, column: 16, scope: !5333)
!5366 = !DILocation(line: 883, column: 2, scope: !5333)
!5367 = !DILocation(line: 888, column: 8, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 888, column: 8)
!5369 = !DILocation(line: 888, column: 29, scope: !5368)
!5370 = !DILocation(line: 888, column: 26, scope: !5368)
!5371 = !DILocation(line: 888, column: 8, scope: !5332)
!5372 = !DILocation(line: 890, column: 8, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 889, column: 6)
!5374 = !DILocation(line: 891, column: 8, scope: !5373)
!5375 = !DILocation(line: 894, column: 28, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 894, column: 8)
!5377 = !DILocation(line: 892, column: 6, scope: !5373)
!5378 = !DILocation(line: 894, column: 42, scope: !5376)
!5379 = !DILocation(line: 894, column: 10, scope: !5376)
!5380 = !DILocation(line: 894, column: 8, scope: !5332)
!5381 = !DILocation(line: 896, column: 8, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 895, column: 6)
!5383 = !DILocation(line: 897, column: 8, scope: !5382)
!5384 = !DILocation(line: 898, column: 8, scope: !5382)
!5385 = !DILocation(line: 899, column: 8, scope: !5382)
!5386 = !DILocation(line: 900, column: 6, scope: !5382)
!5387 = !DILocation(line: 901, column: 13, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 901, column: 13)
!5389 = !DILocation(line: 901, column: 31, scope: !5388)
!5390 = !DILocation(line: 901, column: 28, scope: !5388)
!5391 = !DILocation(line: 901, column: 13, scope: !5376)
!5392 = !DILocation(line: 903, column: 8, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 902, column: 6)
!5394 = !DILocation(line: 904, column: 8, scope: !5393)
!5395 = !DILocation(line: 905, column: 6, scope: !5393)
!5396 = !DILocation(line: 907, column: 9, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 907, column: 8)
!5398 = !DILocation(line: 907, column: 8, scope: !5332)
!5399 = !DILocation(line: 909, column: 14, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 909, column: 13)
!5401 = !DILocation(line: 909, column: 13, scope: !5397)
!5402 = !DILocation(line: 912, column: 17, scope: !5400)
!5403 = !DILocation(line: 0, scope: !5332)
!5404 = !DILocation(line: 0, scope: !5397)
!5405 = !DILocation(line: 914, column: 4, scope: !5332)
!5406 = !DILocation(line: 915, column: 4, scope: !5332)
!5407 = !DILocation(line: 917, column: 22, scope: !5332)
!5408 = !DILocation(line: 917, column: 4, scope: !5332)
!5409 = !DILocation(line: 918, column: 22, scope: !5332)
!5410 = !DILocation(line: 918, column: 4, scope: !5332)
!5411 = !DILocation(line: 922, column: 9, scope: !5321)
!5412 = !DILocation(line: 923, column: 12, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 923, column: 3)
!5414 = !DILocation(line: 929, column: 8, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 929, column: 8)
!5416 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 926, column: 2)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 924, column: 5)
!5418 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 923, column: 3)
!5419 = !DILocation(line: 0, scope: !5416)
!5420 = !DILocation(line: 923, column: 8, scope: !5413)
!5421 = !DILocation(line: 0, scope: !5413)
!5422 = !DILocation(line: 923, column: 41, scope: !5418)
!5423 = !DILocation(line: 923, column: 3, scope: !5413)
!5424 = !DILocation(line: 925, column: 15, scope: !5417)
!5425 = !DILocation(line: 925, column: 7, scope: !5417)
!5426 = !DILocation(line: 929, column: 26, scope: !5415)
!5427 = !DILocation(line: 929, column: 23, scope: !5415)
!5428 = !DILocation(line: 929, column: 8, scope: !5416)
!5429 = !DILocation(line: 932, column: 4, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 932, column: 4)
!5431 = !DILocation(line: 932, column: 20, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 932, column: 4)
!5433 = !DILocation(line: 932, column: 18, scope: !5432)
!5434 = !DILocation(line: 933, column: 22, scope: !5432)
!5435 = !DILocation(line: 933, column: 41, scope: !5432)
!5436 = !DILocation(line: 933, column: 6, scope: !5432)
!5437 = !DILocation(line: 932, column: 37, scope: !5432)
!5438 = !DILocation(line: 0, scope: !5432)
!5439 = !DILocation(line: 932, column: 4, scope: !5432)
!5440 = distinct !{!5440, !5429, !5441}
!5441 = !DILocation(line: 933, column: 58, scope: !5430)
!5442 = !DILocation(line: 938, column: 20, scope: !5416)
!5443 = !DILocation(line: 938, column: 33, scope: !5416)
!5444 = !DILocation(line: 938, column: 4, scope: !5416)
!5445 = !DILocation(line: 939, column: 2, scope: !5416)
!5446 = !DILocation(line: 923, column: 3, scope: !5418)
!5447 = distinct !{!5447, !5423, !5448}
!5448 = !DILocation(line: 940, column: 5, scope: !5413)
!5449 = !DILocation(line: 942, column: 1, scope: !5321)
