; ModuleID = 'tree-eh.bc'
source_filename = "tree-eh.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.gimple_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.eni_weights_d = type { i32, i32, i32, i32, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.throw_stmt_node = type { %union.gimple_statement_d*, i32 }
%struct.leh_state = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.leh_tf_state* }
%struct.leh_tf_state = type { %union.gimple_statement_d*, %union.gimple_statement_d*, %struct.gimple_seq_d*, %struct.leh_state*, %struct.eh_region_d*, %struct.goto_queue_node*, i64, i64, %struct.pointer_map_t*, %struct.VEC_tree_heap*, %union.tree_node*, i8, i8, i8 }
%struct.goto_queue_node = type { %union.treemple, %struct.gimple_seq_d*, %union.gimple_statement_d*, i32, i32 }
%union.treemple = type { %union.tree_node** }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.eh_catch_d = type { %struct.eh_catch_d*, %struct.eh_catch_d*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.tree_label_decl = type { %struct.tree_decl_with_rtl, i32, i32 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.finally_tree_node = type { %union.treemple, %union.gimple_statement_d* }
%struct.labels_s = type { %struct.goto_queue_node*, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@using_eh_for_cleanups_p = internal unnamed_addr global i1 false, align 4, !dbg !0
@.str = private unnamed_addr constant [10 x i8] c"tree-eh.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"eh\00", align 1
@pass_lower_eh = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8 ()* null, i32 ()* @lower_eh_constructs, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 49, i32 2, i32 4, i32 0, i32 0, i32 1 } }, align 8, !dbg !2146
@flag_trapping_math = external dso_local local_unnamed_addr global i32, align 4
@flag_finite_math_only = external dso_local local_unnamed_addr global i32, align 4
@flag_signaling_nans = external dso_local local_unnamed_addr global i32, align 4
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@flag_trapv = external dso_local local_unnamed_addr global i32, align 4
@flag_exceptions = external dso_local local_unnamed_addr global i32, align 4
@flag_non_call_exceptions = external dso_local local_unnamed_addr global i32, align 4
@.str.3 = private unnamed_addr constant [6 x i8] c"ehopt\00", align 1
@pass_refactor_eh = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8 ()* @gate_refactor_eh, i32 ()* @refactor_eh, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 49, i32 2, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2174
@.str.4 = private unnamed_addr constant [5 x i8] c"resx\00", align 1
@pass_lower_resx = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8 ()* @gate_lower_resx, i32 ()* @execute_lower_resx, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 49, i32 2, i32 0, i32 0, i32 0, i32 9 } }, align 8, !dbg !2176
@.str.5 = private unnamed_addr constant [7 x i8] c"ehdisp\00", align 1
@pass_lower_eh_dispatch = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i8 ()* @gate_lower_eh_dispatch, i32 ()* @execute_lower_eh_dispatch, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 49, i32 2, i32 0, i32 0, i32 0, i32 9 } }, align 8, !dbg !2178
@.str.6 = private unnamed_addr constant [10 x i8] c"ehcleanup\00", align 1
@pass_cleanup_eh = dso_local local_unnamed_addr global %struct.gimple_opt_pass { %struct.opt_pass { i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8 ()* @gate_cleanup_eh, i32 ()* @execute_cleanup_eh, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 49, i32 2, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2180
@.str.7 = private unnamed_addr constant [28 x i8] c"BB %i has multiple EH edges\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"BB %i can not throw but has an EH edge\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"BB %i last statement has incorrectly set lp\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"BB %i is missing an EH edge\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Incorrect EH edge %i->%i\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"BB %i is missing an edge\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"BB %i too many fallthru edges\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"BB %i has incorrect edge\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"BB %i has incorrect fallthru edge\00", align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@finally_tree = internal unnamed_addr global %struct.htab* null, align 8, !dbg !2183
@eh_region_may_contain_throw_map = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2185
@eh_seq = internal global %struct.gimple_seq_d* null, align 8, !dbg !2187
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.16 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@lang_protect_cleanup_actions = external dso_local local_unnamed_addr global %union.tree_node* ()*, align 8
@optimize = external dso_local local_unnamed_addr global i32, align 4
@eni_size_weights = external dso_local global %struct.eni_weights_d, align 4
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@.str.17 = private unnamed_addr constant [12 x i8] c"finally_tmp\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@implicit_built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.18 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.19 = private unnamed_addr constant [40 x i8] c"Before removal of unreachable regions:\0A\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"Reachable regions: \00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"Reachable landing pads: \00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"Removing unreachable region %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [37 x i8] c"Removing unreachable landing pad %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [41 x i8] c"\0A\0AAfter removal of unreachable regions:\0A\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.26 = private unnamed_addr constant [40 x i8] c"Unsplit EH landing pad %d to block %i.\0A\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"Empty EH handler %i moved to EH region %i.\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"Empty EH handler %i removed.\0A\00", align 1
@.str.30 = private unnamed_addr constant [63 x i8] c"Unsplit EH landing pad %d to block %i (via cleanup_empty_eh).\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2193 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2206, metadata !DIExpression()), !dbg !2208
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2207, metadata !DIExpression()), !dbg !2208
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2209
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2210
  ret i32 %call, !dbg !2211
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2212 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2216
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2217
  ret i32 %call, !dbg !2218
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2219 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2274, metadata !DIExpression()), !dbg !2275
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2276
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2276
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2276
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2276
  %cmp = icmp uge i8* %0, %1, !dbg !2276
  %conv1 = zext i1 %cmp to i64, !dbg !2276
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2276
  %tobool = icmp eq i64 %expval, 0, !dbg !2276
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2276

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2276
  br label %cond.end, !dbg !2276

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2276
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2276
  %2 = load i8, i8* %0, align 1, !dbg !2276
  %conv3 = zext i8 %2 to i32, !dbg !2276
  br label %cond.end, !dbg !2276

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2276
  ret i32 %cond, !dbg !2277
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2278 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2280, metadata !DIExpression()), !dbg !2281
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2282
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2282
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2282
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2282
  %cmp = icmp uge i8* %0, %1, !dbg !2282
  %conv1 = zext i1 %cmp to i64, !dbg !2282
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2282
  %tobool = icmp eq i64 %expval, 0, !dbg !2282
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2282

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2282
  br label %cond.end, !dbg !2282

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2282
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2282
  %2 = load i8, i8* %0, align 1, !dbg !2282
  %conv3 = zext i8 %2 to i32, !dbg !2282
  br label %cond.end, !dbg !2282

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2282
  ret i32 %cond, !dbg !2283
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2284 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2285
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2285
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2285
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2285
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2285
  %cmp = icmp uge i8* %1, %2, !dbg !2285
  %conv1 = zext i1 %cmp to i64, !dbg !2285
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2285
  %tobool = icmp eq i64 %expval, 0, !dbg !2285
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2285

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2285
  br label %cond.end, !dbg !2285

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2285
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2285
  %3 = load i8, i8* %1, align 1, !dbg !2285
  %conv3 = zext i8 %3 to i32, !dbg !2285
  br label %cond.end, !dbg !2285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2285
  ret i32 %cond, !dbg !2286
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2287 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2291, metadata !DIExpression()), !dbg !2292
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2293
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2294
  ret i32 %call, !dbg !2295
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2296 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2300, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2301, metadata !DIExpression()), !dbg !2302
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2303
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2303
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2303
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2303
  %cmp = icmp uge i8* %0, %1, !dbg !2303
  %conv1 = zext i1 %cmp to i64, !dbg !2303
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2303
  %tobool = icmp eq i64 %expval, 0, !dbg !2303
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2303

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2303
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2303
  br label %cond.end, !dbg !2303

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2303
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2303
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2303
  store i8 %conv2, i8* %0, align 1, !dbg !2303
  %conv6 = and i32 %__c, 255, !dbg !2303
  br label %cond.end, !dbg !2303

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2303
  ret i32 %cond, !dbg !2304
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2305 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2307, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2308, metadata !DIExpression()), !dbg !2309
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2310
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2310
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2310
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2310
  %cmp = icmp uge i8* %0, %1, !dbg !2310
  %conv1 = zext i1 %cmp to i64, !dbg !2310
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2310
  %tobool = icmp eq i64 %expval, 0, !dbg !2310
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2310

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2310
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2310
  br label %cond.end, !dbg !2310

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2310
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2310
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2310
  store i8 %conv2, i8* %0, align 1, !dbg !2310
  %conv6 = and i32 %__c, 255, !dbg !2310
  br label %cond.end, !dbg !2310

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2310
  ret i32 %cond, !dbg !2311
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2312 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2314, metadata !DIExpression()), !dbg !2315
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2316
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2316
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2316
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2316
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2316
  %cmp = icmp uge i8* %1, %2, !dbg !2316
  %conv1 = zext i1 %cmp to i64, !dbg !2316
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2316
  %tobool = icmp eq i64 %expval, 0, !dbg !2316
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2316

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2316
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2316
  br label %cond.end, !dbg !2316

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2316
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2316
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2316
  store i8 %conv4, i8* %1, align 1, !dbg !2316
  %conv6 = and i32 %__c, 255, !dbg !2316
  br label %cond.end, !dbg !2316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2316
  ret i32 %cond, !dbg !2317
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2318 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2324, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2325, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2326, metadata !DIExpression()), !dbg !2327
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2328
  ret i64 %call, !dbg !2329
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2330 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2332, metadata !DIExpression()), !dbg !2333
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2334
  %0 = load i32, i32* %_flags, align 8, !dbg !2334
  %and = lshr i32 %0, 4, !dbg !2334
  %and.lobit = and i32 %and, 1, !dbg !2334
  ret i32 %and.lobit, !dbg !2335
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2336 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2338, metadata !DIExpression()), !dbg !2339
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2340
  %0 = load i32, i32* %_flags, align 8, !dbg !2340
  %and = lshr i32 %0, 5, !dbg !2340
  %and.lobit = and i32 %and, 1, !dbg !2340
  ret i32 %and.lobit, !dbg !2341
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2345, metadata !DIExpression()), !dbg !2346
  %__c.off = add i32 %__c, 128, !dbg !2347
  %0 = icmp ult i32 %__c.off, 384, !dbg !2347
  br i1 %0, label %cond.true, label %cond.end, !dbg !2347

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2348
  %1 = load i32*, i32** %call, align 8, !dbg !2349
  %idxprom = sext i32 %__c to i64, !dbg !2350
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2350
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2350
  br label %cond.end, !dbg !2351

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2351
  ret i32 %cond, !dbg !2352
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2353 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2355, metadata !DIExpression()), !dbg !2356
  %__c.off = add i32 %__c, 128, !dbg !2357
  %0 = icmp ult i32 %__c.off, 384, !dbg !2357
  br i1 %0, label %cond.true, label %cond.end, !dbg !2357

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2358
  %1 = load i32*, i32** %call, align 8, !dbg !2359
  %idxprom = sext i32 %__c to i64, !dbg !2360
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2360
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2360
  br label %cond.end, !dbg !2361

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2361
  ret i32 %cond, !dbg !2362
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2363 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2368, metadata !DIExpression()), !dbg !2369
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2370
  %conv = trunc i64 %call to i32, !dbg !2371
  ret i32 %conv, !dbg !2372
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2373 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2377, metadata !DIExpression()), !dbg !2378
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2379
  ret i64 %call, !dbg !2380
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2381 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2386, metadata !DIExpression()), !dbg !2387
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2388
  ret i64 %call, !dbg !2389
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2390 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2396, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2397, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2398, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2399, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2400, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 0, metadata !2401, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2402, metadata !DIExpression()), !dbg !2406
  br label %while.cond, !dbg !2407

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2408
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2402, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2401, metadata !DIExpression()), !dbg !2406
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2409
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2407

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2410
  %div = lshr i64 %add, 1, !dbg !2412
  call void @llvm.dbg.value(metadata i64 %div, metadata !2403, metadata !DIExpression()), !dbg !2406
  %mul = mul i64 %div, %__size, !dbg !2413
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2414
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2404, metadata !DIExpression()), !dbg !2406
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2415
  call void @llvm.dbg.value(metadata i32 %call, metadata !2405, metadata !DIExpression()), !dbg !2406
  %cmp1 = icmp slt i32 %call, 0, !dbg !2416
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2418

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2419
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2421

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2422
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2401, metadata !DIExpression()), !dbg !2406
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2406
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2402, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2401, metadata !DIExpression()), !dbg !2406
  br label %while.cond, !dbg !2407, !llvm.loop !2423

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2406
  ret i8* %retval.0, !dbg !2425
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2426 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2432, metadata !DIExpression()), !dbg !2433
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2434
  ret double %call, !dbg !2435
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2436 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2445, metadata !DIExpression()), !dbg !2448
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2446, metadata !DIExpression()), !dbg !2448
  call void @llvm.dbg.value(metadata i32 %base, metadata !2447, metadata !DIExpression()), !dbg !2448
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2449
  ret i64 %call, !dbg !2450
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2451 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2457, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2458, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.value(metadata i32 %base, metadata !2459, metadata !DIExpression()), !dbg !2460
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2461
  ret i64 %call, !dbg !2462
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2463 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2474, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2475, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.value(metadata i32 %base, metadata !2476, metadata !DIExpression()), !dbg !2477
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2478
  ret i64 %call, !dbg !2479
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2480 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2484, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2485, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata i32 %base, metadata !2486, metadata !DIExpression()), !dbg !2487
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2488
  ret i64 %call, !dbg !2489
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2530, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2531, metadata !DIExpression()), !dbg !2532
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2533
  ret i32 %call, !dbg !2534
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2535 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2537, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2538, metadata !DIExpression()), !dbg !2539
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2540
  ret i32 %call, !dbg !2541
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2546, metadata !DIExpression()), !dbg !2548
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2547, metadata !DIExpression()), !dbg !2548
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2549
  ret i32 %call, !dbg !2550
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2551 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2555, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2556, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2557, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2558, metadata !DIExpression()), !dbg !2559
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2560
  ret i32 %call, !dbg !2561
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2562 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2566, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2567, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2568, metadata !DIExpression()), !dbg !2569
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2568, metadata !DIExpression(DW_OP_deref)), !dbg !2569
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2570
  ret i32 %call, !dbg !2571
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2572 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2576, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2577, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2578, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2579, metadata !DIExpression()), !dbg !2580
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2579, metadata !DIExpression(DW_OP_deref)), !dbg !2580
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2581
  ret i32 %call, !dbg !2582
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2583 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2607, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2608, metadata !DIExpression()), !dbg !2609
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2610
  ret i32 %call, !dbg !2611
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2612 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2614, metadata !DIExpression()), !dbg !2616
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2615, metadata !DIExpression()), !dbg !2616
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2617
  ret i32 %call, !dbg !2618
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2619 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2623, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2624, metadata !DIExpression()), !dbg !2625
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2626
  ret i32 %call, !dbg !2627
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2628 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2632, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2633, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2634, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2635, metadata !DIExpression()), !dbg !2636
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2637
  ret i32 %call, !dbg !2638
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @using_eh_for_cleanups() local_unnamed_addr #5 !dbg !2639 {
entry:
  store i1 true, i1* @using_eh_for_cleanups_p, align 4, !dbg !2642
  ret void, !dbg !2643
}

; Function Attrs: nounwind uwtable
define dso_local void @add_stmt_to_eh_lp_fn(%struct.function* %ifun, %union.gimple_statement_d* %t, i32 %num) local_unnamed_addr #5 !dbg !2644 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !2648, metadata !DIExpression()), !dbg !2653
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !2649, metadata !DIExpression()), !dbg !2653
  call void @llvm.dbg.value(metadata i32 %num, metadata !2650, metadata !DIExpression()), !dbg !2653
  %cmp = icmp eq i32 %num, 0, !dbg !2654
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2654

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2654
  br label %cond.end, !dbg !2654

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call i8* @ggc_alloc_stat(i64 16) #6, !dbg !2655
  call void @llvm.dbg.value(metadata i8* %call, metadata !2651, metadata !DIExpression()), !dbg !2653
  %stmt = bitcast i8* %call to %union.gimple_statement_d**, !dbg !2656
  store %union.gimple_statement_d* %t, %union.gimple_statement_d** %stmt, align 8, !dbg !2657
  %lp_nr = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2658
  %0 = bitcast i8* %lp_nr to i32*, !dbg !2658
  store i32 %num, i32* %0, align 8, !dbg !2659
  %call1 = tail call %struct.htab* @get_eh_throw_stmt_table(%struct.function* %ifun) #6, !dbg !2660
  %tobool = icmp eq %struct.htab* %call1, null, !dbg !2660
  br i1 %tobool, label %if.then, label %if.end, !dbg !2662

if.then:                                          ; preds = %cond.end
  %call2 = tail call %struct.htab* @htab_create_alloc(i64 31, i32 (i8*)* nonnull @struct_ptr_hash, i32 (i8*, i8*)* nonnull @struct_ptr_eq, void (i8*)* nonnull @ggc_free, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !2663
  tail call void @set_eh_throw_stmt_table(%struct.function* %ifun, %struct.htab* %call2) #6, !dbg !2664
  br label %if.end, !dbg !2664

if.end:                                           ; preds = %cond.end, %if.then
  %call3 = tail call %struct.htab* @get_eh_throw_stmt_table(%struct.function* %ifun) #6, !dbg !2665
  %call4 = tail call i8** @htab_find_slot(%struct.htab* %call3, i8* %call, i32 1) #6, !dbg !2666
  call void @llvm.dbg.value(metadata i8** %call4, metadata !2652, metadata !DIExpression()), !dbg !2653
  %1 = load i8*, i8** %call4, align 8, !dbg !2667
  %tobool5 = icmp eq i8* %1, null, !dbg !2667
  br i1 %tobool5, label %cond.end8, label %cond.true6, !dbg !2667

cond.true6:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 111, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2667
  br label %cond.end8, !dbg !2667

cond.end8:                                        ; preds = %if.end, %cond.true6
  store i8* %call, i8** %call4, align 8, !dbg !2668
  ret void, !dbg !2669
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

declare dso_local %struct.htab* @get_eh_throw_stmt_table(%struct.function*) local_unnamed_addr #2

declare dso_local void @set_eh_throw_stmt_table(%struct.function*, %struct.htab*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @struct_ptr_hash(i8* %a) #5 !dbg !2670 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !2672, metadata !DIExpression()), !dbg !2674
  %0 = bitcast i8* %a to i64*, !dbg !2675
  call void @llvm.dbg.value(metadata i64* %0, metadata !2673, metadata !DIExpression()), !dbg !2674
  %1 = load i64, i64* %0, align 8, !dbg !2675
  %shr = lshr i64 %1, 4, !dbg !2676
  %conv = trunc i64 %shr to i32, !dbg !2677
  ret i32 %conv, !dbg !2678
}

; Function Attrs: nounwind uwtable
define internal i32 @struct_ptr_eq(i8* %a, i8* %b) #5 !dbg !2679 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !2681, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata i8* %b, metadata !2682, metadata !DIExpression()), !dbg !2685
  %0 = bitcast i8* %a to i8**, !dbg !2686
  call void @llvm.dbg.value(metadata i8** %0, metadata !2683, metadata !DIExpression()), !dbg !2685
  %1 = bitcast i8* %b to i8**, !dbg !2687
  call void @llvm.dbg.value(metadata i8** %1, metadata !2684, metadata !DIExpression()), !dbg !2685
  %2 = load i8*, i8** %0, align 8, !dbg !2688
  %3 = load i8*, i8** %1, align 8, !dbg !2689
  %cmp = icmp eq i8* %2, %3, !dbg !2690
  %conv = zext i1 %cmp to i32, !dbg !2690
  ret i32 %conv, !dbg !2691
}

declare dso_local void @ggc_free(i8*) #2

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @add_stmt_to_eh_lp(%union.gimple_statement_d* %t, i32 %num) local_unnamed_addr #5 !dbg !2692 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !2696, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.value(metadata i32 %num, metadata !2697, metadata !DIExpression()), !dbg !2698
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2699
  tail call void @add_stmt_to_eh_lp_fn(%struct.function* %0, %union.gimple_statement_d* %t, i32 %num) #7, !dbg !2700
  ret void, !dbg !2701
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @remove_stmt_from_eh_lp_fn(%struct.function* %ifun, %union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !2702 {
entry:
  %dummy = alloca %struct.throw_stmt_node, align 8
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !2706, metadata !DIExpression()), !dbg !2710
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !2707, metadata !DIExpression()), !dbg !2710
  %0 = bitcast %struct.throw_stmt_node* %dummy to i8*, !dbg !2711
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2711
  %call = tail call %struct.htab* @get_eh_throw_stmt_table(%struct.function* %ifun) #6, !dbg !2712
  %tobool = icmp eq %struct.htab* %call, null, !dbg !2712
  br i1 %tobool, label %cleanup, label %if.end, !dbg !2714

if.end:                                           ; preds = %entry
  %stmt = getelementptr inbounds %struct.throw_stmt_node, %struct.throw_stmt_node* %dummy, i64 0, i32 0, !dbg !2715
  store %union.gimple_statement_d* %t, %union.gimple_statement_d** %stmt, align 8, !dbg !2716
  %call1 = tail call %struct.htab* @get_eh_throw_stmt_table(%struct.function* %ifun) #6, !dbg !2717
  %call2 = call i8** @htab_find_slot(%struct.htab* %call1, i8* nonnull %0, i32 0) #6, !dbg !2718
  call void @llvm.dbg.value(metadata i8** %call2, metadata !2709, metadata !DIExpression()), !dbg !2710
  %tobool3 = icmp eq i8** %call2, null, !dbg !2719
  br i1 %tobool3, label %cleanup, label %if.then4, !dbg !2721

if.then4:                                         ; preds = %if.end
  %call5 = call %struct.htab* @get_eh_throw_stmt_table(%struct.function* %ifun) #6, !dbg !2722
  call void @htab_clear_slot(%struct.htab* %call5, i8** nonnull %call2) #6, !dbg !2724
  br label %cleanup, !dbg !2725

cleanup:                                          ; preds = %if.end, %entry, %if.then4
  %retval.0 = phi i8 [ 1, %if.then4 ], [ 0, %entry ], [ 0, %if.end ], !dbg !2710
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2726
  ret i8 %retval.0, !dbg !2726
}

declare dso_local void @htab_clear_slot(%struct.htab*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @remove_stmt_from_eh_lp(%union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !2727 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !2731, metadata !DIExpression()), !dbg !2732
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2733
  %call = tail call zeroext i8 @remove_stmt_from_eh_lp_fn(%struct.function* %0, %union.gimple_statement_d* %t) #7, !dbg !2734
  ret i8 %call, !dbg !2735
}

; Function Attrs: nounwind uwtable
define dso_local i32 @lookup_stmt_eh_lp_fn(%struct.function* %ifun, %union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !2736 {
entry:
  %n = alloca %struct.throw_stmt_node, align 8
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !2740, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !2741, metadata !DIExpression()), !dbg !2744
  %0 = bitcast %struct.throw_stmt_node* %n to i8*, !dbg !2745
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2745
  %eh = getelementptr inbounds %struct.function, %struct.function* %ifun, i64 0, i32 0, !dbg !2746
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !2746
  %throw_stmt_table = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 3, !dbg !2748
  %2 = load %struct.htab*, %struct.htab** %throw_stmt_table, align 8, !dbg !2748
  %cmp = icmp eq %struct.htab* %2, null, !dbg !2749
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2750

if.end:                                           ; preds = %entry
  %stmt = getelementptr inbounds %struct.throw_stmt_node, %struct.throw_stmt_node* %n, i64 0, i32 0, !dbg !2751
  store %union.gimple_statement_d* %t, %union.gimple_statement_d** %stmt, align 8, !dbg !2752
  %call = call i8* @htab_find(%struct.htab* nonnull %2, i8* nonnull %0) #6, !dbg !2753
  call void @llvm.dbg.value(metadata i8* %call, metadata !2742, metadata !DIExpression()), !dbg !2744
  %tobool = icmp eq i8* %call, null, !dbg !2754
  br i1 %tobool, label %cleanup, label %cond.true, !dbg !2754

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %call, metadata !2742, metadata !DIExpression()), !dbg !2744
  %lp_nr = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2755
  %3 = bitcast i8* %lp_nr to i32*, !dbg !2755
  %4 = load i32, i32* %3, align 8, !dbg !2755
  br label %cleanup, !dbg !2754

cleanup:                                          ; preds = %if.end, %cond.true, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %4, %cond.true ], [ 0, %if.end ], !dbg !2744
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2756
  ret i32 %retval.0, !dbg !2756
}

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %t) local_unnamed_addr #5 !dbg !2757 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !2761, metadata !DIExpression()), !dbg !2762
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2763
  %tobool = icmp eq %struct.function* %0, null, !dbg !2763
  br i1 %tobool, label %return, label %if.end, !dbg !2765

if.end:                                           ; preds = %entry
  %call = tail call i32 @lookup_stmt_eh_lp_fn(%struct.function* nonnull %0, %union.gimple_statement_d* %t) #7, !dbg !2766
  br label %return, !dbg !2767

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ], !dbg !2762
  ret i32 %retval.0, !dbg !2768
}

; Function Attrs: nounwind uwtable
define internal i32 @lower_eh_constructs() #5 !dbg !2769 {
entry:
  %null_state = alloca %struct.leh_state, align 8
  %bodyp = alloca %struct.gimple_seq_d*, align 8
  %0 = bitcast %struct.leh_state* %null_state to i8*, !dbg !2773
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !2773
  %1 = bitcast %struct.gimple_seq_d** %bodyp to i8*, !dbg !2774
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2774
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2775
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %2) #6, !dbg !2776
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2772, metadata !DIExpression()), !dbg !2777
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %bodyp, align 8, !dbg !2778
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2772, metadata !DIExpression()), !dbg !2777
  %cmp = icmp eq %struct.gimple_seq_d* %call, null, !dbg !2779
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2781

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.htab* @htab_create(i64 31, i32 (i8*)* nonnull @struct_ptr_hash, i32 (i8*, i8*)* nonnull @struct_ptr_eq, void (i8*)* nonnull @free) #6, !dbg !2782
  store %struct.htab* %call1, %struct.htab** @finally_tree, align 8, !dbg !2783
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2784
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @eh_region_may_contain_throw_map, align 8, !dbg !2785
  %call3 = call i8* @memset(i8* nonnull %0, i32 0, i64 24) #6, !dbg !2786
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2772, metadata !DIExpression()), !dbg !2777
  call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* nonnull %call, %union.gimple_statement_d* null) #7, !dbg !2787
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2772, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.value(metadata %struct.leh_state* %null_state, metadata !2771, metadata !DIExpression(DW_OP_deref)), !dbg !2777
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %null_state, %struct.gimple_seq_d* nonnull %call) #7, !dbg !2788
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !2772, metadata !DIExpression()), !dbg !2777
  %call4 = call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* nonnull %call) #6, !dbg !2789
  %tobool = icmp eq i8 %call4, 0, !dbg !2789
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2789

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2789
  br label %cond.end, !dbg !2789

cond.end:                                         ; preds = %if.end, %cond.true
  %3 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !2790
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %bodyp, metadata !2772, metadata !DIExpression(DW_OP_deref)), !dbg !2777
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %bodyp, %struct.gimple_seq_d* %3) #6, !dbg !2791
  %4 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %bodyp, align 8, !dbg !2792
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %4, metadata !2772, metadata !DIExpression()), !dbg !2777
  %5 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2792
  %call5 = call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %5) #6, !dbg !2792
  %cmp6 = icmp eq %struct.gimple_seq_d* %4, %call5, !dbg !2792
  br i1 %cmp6, label %cond.end9, label %cond.true7, !dbg !2792

cond.true7:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2011, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2792
  br label %cond.end9, !dbg !2792

cond.end9:                                        ; preds = %cond.end, %cond.true7
  %6 = load %struct.htab*, %struct.htab** @finally_tree, align 8, !dbg !2793
  call void @htab_delete(%struct.htab* %6) #6, !dbg !2794
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @eh_region_may_contain_throw_map, align 8, !dbg !2795
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7) #6, !dbg !2795
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @eh_region_may_contain_throw_map, align 8, !dbg !2795
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !2796
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2797
  %call11 = call i32 @function_needs_eh_personality(%struct.function* %8) #6, !dbg !2799
  %cmp12 = icmp eq i32 %call11, 2, !dbg !2800
  br i1 %cmp12, label %land.lhs.true, label %cleanup, !dbg !2801

land.lhs.true:                                    ; preds = %cond.end9
  %9 = load %struct.tree_function_decl*, %struct.tree_function_decl** bitcast (%union.tree_node** @current_function_decl to %struct.tree_function_decl**), align 8, !dbg !2802
  %personality = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %9, i64 0, i32 2, !dbg !2802
  %10 = load %union.tree_node*, %union.tree_node** %personality, align 8, !dbg !2802
  %tobool13 = icmp eq %union.tree_node* %10, null, !dbg !2802
  br i1 %tobool13, label %if.then14, label %cleanup, !dbg !2803

if.then14:                                        ; preds = %land.lhs.true
  %11 = load %union.tree_node* ()*, %union.tree_node* ()** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 45), align 8, !dbg !2804
  %call15 = call %union.tree_node* %11() #6, !dbg !2805
  %12 = load %struct.tree_function_decl*, %struct.tree_function_decl** bitcast (%union.tree_node** @current_function_decl to %struct.tree_function_decl**), align 8, !dbg !2806
  %personality17 = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %12, i64 0, i32 2, !dbg !2806
  store %union.tree_node* %call15, %union.tree_node** %personality17, align 8, !dbg !2807
  br label %cleanup, !dbg !2806

cleanup:                                          ; preds = %land.lhs.true, %cond.end9, %if.then14, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2808
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !2808
  ret i32 0, !dbg !2808
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @make_eh_dispatch_edges(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !2809 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2811, metadata !DIExpression()), !dbg !2817
  %call = tail call fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %stmt) #7, !dbg !2818
  %call1 = tail call %struct.eh_region_d* @get_eh_region_from_number(i32 %call) #6, !dbg !2819
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call1, metadata !2812, metadata !DIExpression()), !dbg !2817
  %call2 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !2820
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !2815, metadata !DIExpression()), !dbg !2817
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 4, !dbg !2821
  %0 = load i32, i32* %type, align 4, !dbg !2821
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
  ], !dbg !2822

sw.bb:                                            ; preds = %entry
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 5, !dbg !2823
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !2826
  br label %for.cond, !dbg !2827

for.cond:                                         ; preds = %for.inc, %sw.bb
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb ], [ %next_catch, %for.inc ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !2828
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !2813, metadata !DIExpression()), !dbg !2817
  %tobool = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !2829
  br i1 %tobool, label %cleanup.loopexit, label %for.body, !dbg !2829

for.body:                                         ; preds = %for.cond
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2830
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 4, !dbg !2830
  %2 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !2830
  %call3 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %1, %union.tree_node* %2) #6, !dbg !2830
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !2816, metadata !DIExpression()), !dbg !2817
  %call4 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call2, %struct.basic_block_def* %call3, i32 0) #6, !dbg !2833
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 2, !dbg !2834
  %3 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !2834
  %cmp = icmp eq %union.tree_node* %3, null, !dbg !2836
  br i1 %cmp, label %cleanup.loopexit, label %for.inc, !dbg !2837

for.inc:                                          ; preds = %for.body
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !2838
  br label %for.cond, !dbg !2839, !llvm.loop !2840

sw.bb5:                                           ; preds = %entry
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2842
  %label8 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 5, i32 0, i32 1, !dbg !2842
  %5 = load %union.tree_node*, %union.tree_node** %label8, align 8, !dbg !2842
  %call9 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %4, %union.tree_node* %5) #6, !dbg !2842
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call9, metadata !2816, metadata !DIExpression()), !dbg !2817
  %call10 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call2, %struct.basic_block_def* %call9, i32 0) #6, !dbg !2843
  br label %cleanup, !dbg !2844

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2080, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2845
  br label %cleanup, !dbg !2846

cleanup.loopexit:                                 ; preds = %for.body, %for.cond
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !2847

cleanup:                                          ; preds = %cleanup.loopexit, %sw.bb5, %sw.default
  %retval.0 = phi i8 [ 1, %sw.default ], [ 1, %sw.bb5 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !2817
  ret i8 %retval.0, !dbg !2847
}

declare dso_local %struct.eh_region_d* @get_eh_region_from_number(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !2848 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !2853, metadata !DIExpression()), !dbg !2854
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !2855
  %1 = load i32, i32* %0, align 8, !dbg !2855
  ret i32 %1, !dbg !2856
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !2857 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !2861, metadata !DIExpression()), !dbg !2862
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !2863
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2863
  ret %struct.basic_block_def* %0, !dbg !2864
}

declare dso_local %struct.basic_block_def* @label_to_block_fn(%struct.function*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @make_eh_edges(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !2865 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2869, metadata !DIExpression()), !dbg !2874
  %call = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %stmt) #7, !dbg !2875
  call void @llvm.dbg.value(metadata i32 %call, metadata !2873, metadata !DIExpression()), !dbg !2874
  %cmp = icmp slt i32 %call, 1, !dbg !2876
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !2878

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %call) #6, !dbg !2879
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call1, metadata !2872, metadata !DIExpression()), !dbg !2874
  %cmp2 = icmp eq %struct.eh_landing_pad_d* %call1, null, !dbg !2880
  br i1 %cmp2, label %cond.true, label %cond.end, !dbg !2880

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2880
  br label %cond.end, !dbg !2880

cond.end:                                         ; preds = %if.end, %cond.true
  %call3 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !2881
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !2870, metadata !DIExpression()), !dbg !2874
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2882
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call1, i64 0, i32 2, !dbg !2882
  %1 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !2882
  %call4 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %0, %union.tree_node* %1) #6, !dbg !2882
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !2871, metadata !DIExpression()), !dbg !2874
  %call5 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %call3, %struct.basic_block_def* %call4, i32 8) #6, !dbg !2883
  br label %cleanup.cont, !dbg !2884

cleanup.cont:                                     ; preds = %cond.end, %entry
  ret void, !dbg !2884
}

declare dso_local %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @redirect_eh_edge(%struct.edge_def* %edge_in, %struct.basic_block_def* %new_bb) local_unnamed_addr #5 !dbg !2885 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_in, metadata !2889, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb, metadata !2890, metadata !DIExpression()), !dbg !2891
  tail call fastcc void @redirect_eh_edge_1(%struct.edge_def* %edge_in, %struct.basic_block_def* %new_bb, i8 zeroext 0) #7, !dbg !2892
  %call = tail call %struct.edge_def* @ssa_redirect_edge(%struct.edge_def* %edge_in, %struct.basic_block_def* %new_bb) #6, !dbg !2893
  ret %struct.edge_def* %call, !dbg !2894
}

; Function Attrs: nounwind uwtable
define internal fastcc void @redirect_eh_edge_1(%struct.edge_def* %edge_in, %struct.basic_block_def* %new_bb, i8 zeroext %change_region) unnamed_addr #5 !dbg !2895 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %edge_in, metadata !2899, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb, metadata !2900, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i8 %change_region, metadata !2901, metadata !DIExpression()), !dbg !2918
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2919
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2919
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !2920
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2920
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 1, !dbg !2921
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2921
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !2904, metadata !DIExpression()), !dbg !2918
  %call = tail call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %2) #6, !dbg !2922
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2908, metadata !DIExpression()), !dbg !2918
  %label_decl = bitcast %union.tree_node* %call to %struct.tree_label_decl*, !dbg !2923
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl, i64 0, i32 2, !dbg !2923
  %3 = load i32, i32* %eh_landing_pad_nr, align 4, !dbg !2923
  call void @llvm.dbg.value(metadata i32 %3, metadata !2906, metadata !DIExpression()), !dbg !2918
  %cmp = icmp sgt i32 %3, 0, !dbg !2924
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2924

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2924
  br label %cond.end, !dbg !2924

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %3) #6, !dbg !2925
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call1, metadata !2902, metadata !DIExpression()), !dbg !2918
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %edge_in, i64 0, i32 0, !dbg !2926
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2926
  %call2 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %4) #6, !dbg !2927
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !2905, metadata !DIExpression()), !dbg !2918
  %call3 = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %call2) #7, !dbg !2928
  %cmp4 = icmp eq i32 %call3, %3, !dbg !2928
  br i1 %cmp4, label %cond.end7, label %cond.true5, !dbg !2928

cond.true5:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2135, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2928
  br label %cond.end7, !dbg !2928

cond.end7:                                        ; preds = %cond.end, %cond.true5
  %call9 = tail call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %new_bb) #6, !dbg !2929
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !2909, metadata !DIExpression()), !dbg !2918
  %label_decl10 = bitcast %union.tree_node* %call9 to %struct.tree_label_decl*, !dbg !2930
  %eh_landing_pad_nr11 = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl10, i64 0, i32 2, !dbg !2930
  %5 = load i32, i32* %eh_landing_pad_nr11, align 4, !dbg !2930
  call void @llvm.dbg.value(metadata i32 %5, metadata !2907, metadata !DIExpression()), !dbg !2918
  %tobool = icmp eq i32 %5, 0, !dbg !2931
  br i1 %tobool, label %if.else, label %if.then, !dbg !2933

if.then:                                          ; preds = %cond.end7
  %call12 = tail call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %5) #6, !dbg !2934
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call12, metadata !2903, metadata !DIExpression()), !dbg !2918
  %tobool13 = icmp eq %struct.eh_landing_pad_d* %call12, null, !dbg !2936
  br i1 %tobool13, label %cond.true14, label %cond.end16, !dbg !2936

cond.true14:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2936
  br label %cond.end16, !dbg !2936

cond.end16:                                       ; preds = %if.then, %cond.true14
  %tobool18 = icmp eq i8 %change_region, 0, !dbg !2937
  br i1 %tobool18, label %lor.lhs.false, label %if.end, !dbg !2937

lor.lhs.false:                                    ; preds = %cond.end16
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call12, i64 0, i32 1, !dbg !2937
  %6 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !2937
  %region19 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call1, i64 0, i32 1, !dbg !2937
  %7 = load %struct.eh_region_d*, %struct.eh_region_d** %region19, align 8, !dbg !2937
  %cmp20 = icmp eq %struct.eh_region_d* %6, %7, !dbg !2937
  br i1 %cmp20, label %if.end, label %cond.true22, !dbg !2937

cond.true22:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2937
  br label %if.end, !dbg !2937

if.else:                                          ; preds = %cond.end7
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* null, metadata !2903, metadata !DIExpression()), !dbg !2918
  %tobool26 = icmp eq i8 %change_region, 0, !dbg !2938
  br i1 %tobool26, label %if.end, label %cond.true27, !dbg !2938

cond.true27:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2938
  br label %if.end, !dbg !2938

if.end:                                           ; preds = %cond.end16, %if.else, %cond.true27, %cond.true22, %lor.lhs.false
  %new_lp.0 = phi %struct.eh_landing_pad_d* [ %call12, %cond.end16 ], [ %call12, %lor.lhs.false ], [ %call12, %cond.true22 ], [ null, %if.else ], [ null, %cond.true27 ], !dbg !2940
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %new_lp.0, metadata !2903, metadata !DIExpression()), !dbg !2918
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2941
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !2941
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 0, !dbg !2941
  %call31 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !2941
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2941
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call31, 0, !dbg !2941
  store i32 %10, i32* %9, align 8, !dbg !2941
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2941
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call31, 1, !dbg !2941
  store %struct.VEC_edge_gc** %12, %struct.VEC_edge_gc*** %11, align 8, !dbg !2941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !2941
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !2941
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2943
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2943
  br label %for.cond, !dbg !2941

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %13, align 8, !dbg !2945
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %14, align 8, !dbg !2945
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2917, metadata !DIExpression(DW_OP_deref)), !dbg !2918
  %call32 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !2945
  %tobool33 = icmp eq i8 %call32, 0, !dbg !2941
  br i1 %tobool33, label %for.cond.for.end_crit_edge, label %for.body, !dbg !2941

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2946
  br label %for.end, !dbg !2941

for.body:                                         ; preds = %for.cond
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2948
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !2917, metadata !DIExpression()), !dbg !2918
  %cmp34 = icmp eq %struct.edge_def* %17, %edge_in, !dbg !2950
  br i1 %cmp34, label %for.inc, label %land.lhs.true, !dbg !2951

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !2917, metadata !DIExpression()), !dbg !2918
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 7, !dbg !2952
  %18 = load i32, i32* %flags, align 8, !dbg !2952
  %and = and i32 %18, 8, !dbg !2953
  %tobool36 = icmp eq i32 %and, 0, !dbg !2953
  br i1 %tobool36, label %for.inc, label %for.end.loopexit, !dbg !2954

for.inc:                                          ; preds = %land.lhs.true, %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2910, metadata !DIExpression(DW_OP_deref)), !dbg !2918
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2945
  br label %for.cond, !dbg !2945, !llvm.loop !2955

for.end.loopexit:                                 ; preds = %land.lhs.true
  %.lcssa = phi %struct.edge_def* [ %17, %land.lhs.true ], !dbg !2948
  br label %for.end, !dbg !2957

for.end:                                          ; preds = %for.end.loopexit, %for.cond.for.end_crit_edge
  %19 = phi %struct.edge_def* [ %.pre, %for.cond.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !2946
  %tobool39 = icmp eq %struct.eh_landing_pad_d* %new_lp.0, null, !dbg !2957
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !2917, metadata !DIExpression()), !dbg !2918
  %cmp41 = icmp eq %struct.edge_def* %19, null, !dbg !2946
  br i1 %tobool39, label %if.else47, label %if.then40, !dbg !2958

if.then40:                                        ; preds = %for.end
  %cmp41.not = xor i1 %cmp41, true, !dbg !2959
  %tobool44 = icmp ne i8 %change_region, 0, !dbg !2962
  %or.cond = or i1 %tobool44, %cmp41.not, !dbg !2959
  br i1 %or.cond, label %if.end60, label %if.then45, !dbg !2959

if.then45:                                        ; preds = %if.then40
  call void @remove_eh_landing_pad(%struct.eh_landing_pad_d* %call1) #6, !dbg !2963
  br label %if.end60, !dbg !2963

if.else47:                                        ; preds = %for.end
  br i1 %cmp41, label %if.then50, label %if.else53, !dbg !2964

if.then50:                                        ; preds = %if.else47
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call1, i64 0, i32 2, !dbg !2966
  %20 = bitcast %union.tree_node** %post_landing_pad to %struct.tree_label_decl**, !dbg !2966
  %21 = load %struct.tree_label_decl*, %struct.tree_label_decl** %20, align 8, !dbg !2966
  %eh_landing_pad_nr52 = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %21, i64 0, i32 2, !dbg !2966
  store i32 0, i32* %eh_landing_pad_nr52, align 4, !dbg !2969
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call1, metadata !2903, metadata !DIExpression()), !dbg !2918
  br label %if.end56, !dbg !2970

if.else53:                                        ; preds = %if.else47
  %region54 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %call1, i64 0, i32 1, !dbg !2971
  %22 = load %struct.eh_region_d*, %struct.eh_region_d** %region54, align 8, !dbg !2971
  %call55 = call %struct.eh_landing_pad_d* @gen_eh_landing_pad(%struct.eh_region_d* %22) #6, !dbg !2972
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call55, metadata !2903, metadata !DIExpression()), !dbg !2918
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %if.then50
  %new_lp.1 = phi %struct.eh_landing_pad_d* [ %call1, %if.then50 ], [ %call55, %if.else53 ], !dbg !2973
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %new_lp.1, metadata !2903, metadata !DIExpression()), !dbg !2918
  %post_landing_pad57 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %new_lp.1, i64 0, i32 2, !dbg !2974
  store %union.tree_node* %call9, %union.tree_node** %post_landing_pad57, align 8, !dbg !2975
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %new_lp.1, i64 0, i32 4, !dbg !2976
  %23 = load i32, i32* %index, align 8, !dbg !2976
  store i32 %23, i32* %eh_landing_pad_nr11, align 4, !dbg !2977
  br label %if.end60

if.end60:                                         ; preds = %if.then45, %if.then40, %if.end56
  %new_lp.2 = phi %struct.eh_landing_pad_d* [ %new_lp.1, %if.end56 ], [ %new_lp.0, %if.then40 ], [ %new_lp.0, %if.then45 ], !dbg !2918
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %new_lp.2, metadata !2903, metadata !DIExpression()), !dbg !2918
  %cmp61 = icmp eq %struct.eh_landing_pad_d* %call1, %new_lp.2, !dbg !2978
  br i1 %cmp61, label %if.end66, label %if.then63, !dbg !2980

if.then63:                                        ; preds = %if.end60
  %call64 = call zeroext i8 @remove_stmt_from_eh_lp(%union.gimple_statement_d* %call2) #7, !dbg !2981
  %index65 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %new_lp.2, i64 0, i32 4, !dbg !2983
  %24 = load i32, i32* %index65, align 8, !dbg !2983
  call void @add_stmt_to_eh_lp(%union.gimple_statement_d* %call2, i32 %24) #7, !dbg !2984
  br label %if.end66, !dbg !2985

if.end66:                                         ; preds = %if.end60, %if.then63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2986
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2986
  ret void, !dbg !2986
}

declare dso_local %struct.edge_def* @ssa_redirect_edge(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @redirect_eh_dispatch_edge(%union.gimple_statement_d* %stmt, %struct.edge_def* %e, %struct.basic_block_def* %new_bb) local_unnamed_addr #5 !dbg !2987 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !2991, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !2992, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb, metadata !2993, metadata !DIExpression()), !dbg !2999
  %call = tail call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %new_bb) #6, !dbg !3000
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2994, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8 0, metadata !2995, metadata !DIExpression()), !dbg !2999
  %call1 = tail call fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %stmt) #7, !dbg !3001
  %call2 = tail call %struct.eh_region_d* @get_eh_region_from_number(i32 %call1) #6, !dbg !3002
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call2, metadata !2997, metadata !DIExpression()), !dbg !2999
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call2, i64 0, i32 4, !dbg !3003
  %0 = load i32, i32* %type, align 4, !dbg !3003
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
  ], !dbg !3004

sw.bb:                                            ; preds = %entry
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call2, i64 0, i32 5, !dbg !3005
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !3008
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3009
  br label %for.cond, !dbg !3013

for.cond:                                         ; preds = %for.inc, %sw.bb
  %any_changed.0 = phi i8 [ 0, %sw.bb ], [ %any_changed.1, %for.inc ], !dbg !2999
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb ], [ %next_catch, %for.inc ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !3014
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !2998, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8 %any_changed.0, metadata !2995, metadata !DIExpression()), !dbg !2999
  %tobool = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !3015
  br i1 %tobool, label %sw.epilog.loopexit, label %for.body, !dbg !3015

for.body:                                         ; preds = %for.cond
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3016
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 4, !dbg !3016
  %2 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !3016
  %call3 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %1, %union.tree_node* %2) #6, !dbg !3016
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !2996, metadata !DIExpression()), !dbg !2999
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3017
  %cmp = icmp eq %struct.basic_block_def* %call3, %3, !dbg !3018
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3019

if.then:                                          ; preds = %for.body
  store %union.tree_node* %call, %union.tree_node** %label, align 8, !dbg !3020
  call void @llvm.dbg.value(metadata i8 1, metadata !2995, metadata !DIExpression()), !dbg !2999
  br label %for.inc, !dbg !3022

for.inc:                                          ; preds = %for.body, %if.then
  %any_changed.1 = phi i8 [ 1, %if.then ], [ %any_changed.0, %for.body ], !dbg !2999
  call void @llvm.dbg.value(metadata i8 %any_changed.1, metadata !2995, metadata !DIExpression()), !dbg !2999
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !3023
  br label %for.cond, !dbg !3024, !llvm.loop !3025

sw.bb5:                                           ; preds = %entry
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3027
  %label8 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call2, i64 0, i32 5, i32 0, i32 1, !dbg !3027
  %5 = load %union.tree_node*, %union.tree_node** %label8, align 8, !dbg !3027
  %call9 = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %4, %union.tree_node* %5) #6, !dbg !3027
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call9, metadata !2996, metadata !DIExpression()), !dbg !2999
  %dest10 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !3028
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest10, align 8, !dbg !3028
  %cmp11 = icmp eq %struct.basic_block_def* %call9, %6, !dbg !3028
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !3028

cond.true:                                        ; preds = %sw.bb5
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3028
  br label %cond.end, !dbg !3028

cond.end:                                         ; preds = %sw.bb5, %cond.true
  store %union.tree_node* %call, %union.tree_node** %label8, align 8, !dbg !3029
  call void @llvm.dbg.value(metadata i8 1, metadata !2995, metadata !DIExpression()), !dbg !2999
  br label %sw.epilog, !dbg !3030

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2240, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3031
  br label %sw.epilog, !dbg !3032

sw.epilog.loopexit:                               ; preds = %for.cond
  %any_changed.0.lcssa = phi i8 [ %any_changed.0, %for.cond ], !dbg !2999
  call void @llvm.dbg.value(metadata i8 %any_changed.0.lcssa, metadata !2995, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8 %any_changed.0.lcssa, metadata !2995, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.value(metadata i8 %any_changed.0.lcssa, metadata !2995, metadata !DIExpression()), !dbg !2999
  br label %sw.epilog, !dbg !3033

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %cond.end
  %any_changed.2 = phi i8 [ 0, %sw.default ], [ 1, %cond.end ], [ %any_changed.0.lcssa, %sw.epilog.loopexit ], !dbg !2999
  call void @llvm.dbg.value(metadata i8 %any_changed.2, metadata !2995, metadata !DIExpression()), !dbg !2999
  %tobool15 = icmp eq i8 %any_changed.2, 0, !dbg !3033
  br i1 %tobool15, label %cond.true16, label %cond.end18, !dbg !3033

cond.true16:                                      ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3033
  br label %cond.end18, !dbg !3033

cond.end18:                                       ; preds = %sw.epilog, %cond.true16
  ret void, !dbg !3034
}

declare dso_local %union.tree_node* @gimple_block_label(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @operation_could_trap_helper_p(i32 %op, i8 zeroext %fp_operation, i8 zeroext %honor_trapv, i8 zeroext %honor_nans, i8 zeroext %honor_snans, %union.tree_node* %divisor, i8* %handled) local_unnamed_addr #5 !dbg !3035 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !3039, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8 %fp_operation, metadata !3040, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8 %honor_trapv, metadata !3041, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8 %honor_nans, metadata !3042, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8 %honor_snans, metadata !3043, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata %union.tree_node* %divisor, metadata !3044, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8* %handled, metadata !3045, metadata !DIExpression()), !dbg !3046
  store i8 1, i8* %handled, align 1, !dbg !3047
  switch i32 %op, label %sw.default [
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 76, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 71, label %sw.bb
    i32 75, label %sw.bb
    i32 97, label %return
    i32 98, label %return
    i32 99, label %return
    i32 100, label %return
    i32 110, label %return
    i32 101, label %sw.bb13
    i32 102, label %sw.bb13
    i32 103, label %sw.bb13
    i32 104, label %sw.bb13
    i32 105, label %sw.bb13
    i32 106, label %sw.bb13
    i32 107, label %sw.bb13
    i32 108, label %sw.bb13
    i32 109, label %sw.bb13
    i32 113, label %return
    i32 77, label %return
    i32 79, label %sw.bb15
    i32 82, label %sw.bb15
    i32 124, label %sw.bb15
    i32 63, label %sw.bb19
    i32 64, label %sw.bb19
    i32 65, label %sw.bb19
  ], !dbg !3048

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %0 = or i8 %honor_snans, %honor_trapv, !dbg !3049
  %1 = icmp eq i8 %0, 0, !dbg !3049
  br i1 %1, label %if.end, label %return, !dbg !3049

if.end:                                           ; preds = %sw.bb
  %tobool3 = icmp eq i8 %fp_operation, 0, !dbg !3052
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !3054

if.then4:                                         ; preds = %if.end
  %2 = load i32, i32* @flag_trapping_math, align 4, !dbg !3055
  %conv5 = trunc i32 %2 to i8, !dbg !3055
  br label %return, !dbg !3056

if.end6:                                          ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %divisor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3057
  %bf.load = load i64, i64* %3, align 8, !dbg !3057
  %bf.cast4 = and i64 %bf.load, 131072, !dbg !3057
  %tobool7 = icmp eq i64 %bf.cast4, 0, !dbg !3057
  br i1 %tobool7, label %return, label %lor.lhs.false8, !dbg !3059

lor.lhs.false8:                                   ; preds = %if.end6
  %call = tail call i32 @integer_zerop(%union.tree_node* %divisor) #6, !dbg !3060
  %tobool9 = icmp ne i32 %call, 0, !dbg !3060
  %spec.select = zext i1 %tobool9 to i8, !dbg !3061
  ret i8 %spec.select, !dbg !3061

sw.bb13:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %return, !dbg !3062

sw.bb15:                                          ; preds = %entry, %entry, %entry
  %tobool16 = icmp ne i8 %honor_trapv, 0, !dbg !3063
  %. = zext i1 %tobool16 to i8, !dbg !3065
  br label %return, !dbg !3065

sw.bb19:                                          ; preds = %entry, %entry, %entry
  %tobool21 = icmp ne i8 %fp_operation, 0, !dbg !3066
  %4 = load i32, i32* @flag_trapping_math, align 4, !dbg !3068
  %tobool22 = icmp ne i32 %4, 0, !dbg !3068
  %or.cond1 = and i1 %tobool21, %tobool22, !dbg !3069
  br i1 %or.cond1, label %return, label %if.end24, !dbg !3069

if.end24:                                         ; preds = %sw.bb19
  %tobool25 = icmp ne i8 %honor_trapv, 0, !dbg !3070
  %.2 = zext i1 %tobool25 to i8, !dbg !3065
  br label %return, !dbg !3065

sw.default:                                       ; preds = %entry
  %tobool29 = icmp ne i8 %fp_operation, 0, !dbg !3072
  %5 = load i32, i32* @flag_trapping_math, align 4, !dbg !3074
  %tobool31 = icmp ne i32 %5, 0, !dbg !3074
  %or.cond3 = and i1 %tobool29, %tobool31, !dbg !3075
  br i1 %or.cond3, label %return, label %if.end33, !dbg !3075

if.end33:                                         ; preds = %sw.default
  store i8 0, i8* %handled, align 1, !dbg !3076
  br label %return, !dbg !3077

return:                                           ; preds = %if.end6, %sw.bb, %sw.default, %if.end24, %sw.bb19, %sw.bb15, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.end33, %sw.bb13, %if.then4
  %retval.0 = phi i8 [ 0, %if.end33 ], [ %honor_snans, %sw.bb13 ], [ %conv5, %if.then4 ], [ 1, %sw.bb ], [ 1, %if.end6 ], [ %honor_nans, %entry ], [ %honor_nans, %entry ], [ %honor_nans, %entry ], [ %honor_nans, %entry ], [ %honor_nans, %entry ], [ %honor_nans, %entry ], [ %honor_nans, %entry ], [ %., %sw.bb15 ], [ 1, %sw.bb19 ], [ %.2, %if.end24 ], [ 1, %sw.default ], !dbg !3065
  ret i8 %retval.0, !dbg !3078
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @operation_could_trap_p(i32 %op, i8 zeroext %fp_operation, i8 zeroext %honor_trapv, %union.tree_node* %divisor) local_unnamed_addr #5 !dbg !3079 {
entry:
  %handled = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %op, metadata !3083, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %fp_operation, metadata !3084, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %honor_trapv, metadata !3085, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata %union.tree_node* %divisor, metadata !3086, metadata !DIExpression()), !dbg !3090
  %tobool = icmp ne i8 %fp_operation, 0, !dbg !3091
  %0 = load i32, i32* @flag_trapping_math, align 4, !dbg !3092
  %tobool1 = icmp ne i32 %0, 0, !dbg !3092
  %or.cond = and i1 %tobool, %tobool1, !dbg !3093
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !3093

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @flag_finite_math_only, align 4, !dbg !3094
  %tobool2 = icmp eq i32 %1, 0, !dbg !3095
  %phitmp = zext i1 %tobool2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %2, metadata !3087, metadata !DIExpression()), !dbg !3090
  %3 = load i32, i32* @flag_signaling_nans, align 4, !dbg !3096
  %cmp = icmp ne i32 %3, 0, !dbg !3096
  %4 = and i1 %cmp, %tobool, !dbg !3096
  %conv10 = zext i1 %4 to i8, !dbg !3097
  call void @llvm.dbg.value(metadata i8 %conv10, metadata !3088, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* %handled, metadata !3089, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %handled) #8, !dbg !3098
  %idxprom = sext i32 %op to i64, !dbg !3099
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !3099
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3099
  %cmp11 = icmp eq i32 %5, 5, !dbg !3101
  br i1 %cmp11, label %if.end, label %land.lhs.true13, !dbg !3102

land.lhs.true13:                                  ; preds = %land.end
  %cmp16 = icmp eq i32 %5, 6, !dbg !3103
  br i1 %cmp16, label %if.end, label %land.lhs.true18, !dbg !3104

land.lhs.true18:                                  ; preds = %land.lhs.true13
  %cmp21 = icmp eq i32 %5, 7, !dbg !3105
  br i1 %cmp21, label %if.end, label %cleanup, !dbg !3106

if.end:                                           ; preds = %land.lhs.true18, %land.lhs.true13, %land.end
  call void @llvm.dbg.value(metadata i8* %handled, metadata !3089, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  %call = call zeroext i8 @operation_could_trap_helper_p(i32 %op, i8 zeroext %fp_operation, i8 zeroext %honor_trapv, i8 zeroext %2, i8 zeroext %conv10, %union.tree_node* %divisor, i8* nonnull %handled) #7, !dbg !3107
  br label %cleanup, !dbg !3108

cleanup:                                          ; preds = %land.lhs.true18, %if.end
  %retval.0 = phi i8 [ %call, %if.end ], [ 0, %land.lhs.true18 ], !dbg !3090
  call void @llvm.dbg.value(metadata i8* %handled, metadata !3089, metadata !DIExpression(DW_OP_deref)), !dbg !3090
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %handled) #8, !dbg !3109
  ret i8 %retval.0, !dbg !3109
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @tree_could_trap_p(%union.tree_node* %expr) local_unnamed_addr #5 !dbg !3110 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i8 0, metadata !3116, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i8 0, metadata !3117, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3120, metadata !DIExpression()), !dbg !3122
  %tobool = icmp eq %union.tree_node* %expr, null, !dbg !3123
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3125

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3126
  %bf.load = load i64, i64* %0, align 8, !dbg !3126
  %1 = trunc i64 %bf.load to i32, !dbg !3126
  %bf.cast = and i32 %1, 65535, !dbg !3126
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !3115, metadata !DIExpression()), !dbg !3122
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3127
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3127
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3118, metadata !DIExpression()), !dbg !3122
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !3128
  br i1 %tobool2, label %if.end114, label %if.then3, !dbg !3130

if.then3:                                         ; preds = %if.end
  %bf.cast7 = and i64 %bf.load, 65535, !dbg !3131
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast7, !dbg !3131
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3131
  %cmp = icmp eq i32 %3, 5, !dbg !3131
  br i1 %cmp, label %if.then8, label %if.else, !dbg !3134

if.then8:                                         ; preds = %if.then3
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3135
  %4 = bitcast %union.tree_node** %operands to %struct.tree_common**, !dbg !3135
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !3135
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !3135
  %6 = bitcast %union.tree_node** %type11 to i64**, !dbg !3135
  %7 = load i64*, i64** %6, align 8, !dbg !3135
  %bf.load13 = load i64, i64* %7, align 8, !dbg !3135
  %bf.cast1513 = and i64 %bf.load13, 65535, !dbg !3135
  %cmp16 = icmp eq i64 %bf.cast1513, 9, !dbg !3135
  br i1 %cmp16, label %lor.end, label %lor.rhs, !dbg !3135

lor.rhs:                                          ; preds = %if.then8
  %cmp26 = icmp eq i64 %bf.cast1513, 13, !dbg !3135
  br i1 %cmp26, label %land.rhs, label %lor.lhs.false, !dbg !3135

lor.lhs.false:                                    ; preds = %lor.rhs
  %cmp36 = icmp eq i64 %bf.cast1513, 14, !dbg !3135
  br i1 %cmp36, label %land.rhs, label %lor.end, !dbg !3135

land.rhs:                                         ; preds = %lor.lhs.false, %lor.rhs
  %type43 = getelementptr inbounds i64, i64* %7, i64 2, !dbg !3135
  %8 = bitcast i64* %type43 to i64**, !dbg !3135
  %9 = load i64*, i64** %8, align 8, !dbg !3135
  %bf.load45 = load i64, i64* %9, align 8, !dbg !3135
  %bf.cast4717 = and i64 %bf.load45, 65535, !dbg !3135
  %cmp48 = icmp eq i64 %bf.cast4717, 9, !dbg !3135
  %phitmp16 = zext i1 %cmp48 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false, %land.rhs, %if.then8
  %10 = phi i8 [ 1, %if.then8 ], [ 0, %lor.lhs.false ], [ %phitmp16, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %10, metadata !3116, metadata !DIExpression()), !dbg !3122
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3136
  %bf.load84.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3137
  %.pre = and i64 %bf.load84.pre, 65535, !dbg !3137
  br label %if.end82, !dbg !3138

if.else:                                          ; preds = %if.then3
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3139
  %bf.load50 = load i64, i64* %11, align 8, !dbg !3139
  %bf.cast524 = and i64 %bf.load50, 65535, !dbg !3139
  %cmp53 = icmp eq i64 %bf.cast524, 9, !dbg !3139
  br i1 %cmp53, label %lor.end79, label %lor.rhs55, !dbg !3139

lor.rhs55:                                        ; preds = %if.else
  %cmp60 = icmp eq i64 %bf.cast524, 13, !dbg !3139
  br i1 %cmp60, label %land.rhs69, label %lor.lhs.false62, !dbg !3139

lor.lhs.false62:                                  ; preds = %lor.rhs55
  %cmp67 = icmp eq i64 %bf.cast524, 14, !dbg !3139
  br i1 %cmp67, label %land.rhs69, label %lor.end79, !dbg !3139

land.rhs69:                                       ; preds = %lor.lhs.false62, %lor.rhs55
  %type71 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3139
  %12 = bitcast %union.tree_node** %type71 to i64**, !dbg !3139
  %13 = load i64*, i64** %12, align 8, !dbg !3139
  %bf.load73 = load i64, i64* %13, align 8, !dbg !3139
  %bf.cast7512 = and i64 %bf.load73, 65535, !dbg !3139
  %cmp76 = icmp eq i64 %bf.cast7512, 9, !dbg !3139
  %phitmp = zext i1 %cmp76 to i8
  br label %lor.end79

lor.end79:                                        ; preds = %lor.lhs.false62, %land.rhs69, %if.else
  %14 = phi i8 [ 1, %if.else ], [ 0, %lor.lhs.false62 ], [ %phitmp, %land.rhs69 ]
  call void @llvm.dbg.value(metadata i8 %14, metadata !3116, metadata !DIExpression()), !dbg !3122
  br label %if.end82

if.end82:                                         ; preds = %lor.end79, %lor.end
  %bf.cast867.pre-phi = phi i64 [ %bf.cast524, %lor.end79 ], [ %.pre, %lor.end ], !dbg !3137
  %bf.load105 = phi i64 [ %bf.load50, %lor.end79 ], [ %bf.load84.pre, %lor.end ], !dbg !3137
  %fp_operation.0 = phi i8 [ %14, %lor.end79 ], [ %10, %lor.end ], !dbg !3140
  call void @llvm.dbg.value(metadata i8 %fp_operation.0, metadata !3116, metadata !DIExpression()), !dbg !3122
  %cmp87 = icmp eq i64 %bf.cast867.pre-phi, 6, !dbg !3137
  br i1 %cmp87, label %land.rhs103, label %lor.lhs.false89, !dbg !3137

lor.lhs.false89:                                  ; preds = %if.end82
  %cmp94 = icmp eq i64 %bf.cast867.pre-phi, 7, !dbg !3137
  br i1 %cmp94, label %land.rhs103, label %lor.lhs.false96, !dbg !3137

lor.lhs.false96:                                  ; preds = %lor.lhs.false89
  %cmp101 = icmp eq i64 %bf.cast867.pre-phi, 8, !dbg !3137
  br i1 %cmp101, label %land.rhs103, label %land.end112, !dbg !3141

land.rhs103:                                      ; preds = %lor.lhs.false96, %lor.lhs.false89, %if.end82
  %bf.cast10711 = and i64 %bf.load105, 2097152, !dbg !3142
  %tobool108 = icmp eq i64 %bf.cast10711, 0, !dbg !3142
  %15 = load i32, i32* @flag_trapv, align 4, !dbg !3142
  %tobool110 = icmp ne i32 %15, 0, !dbg !3142
  %16 = and i1 %tobool108, %tobool110, !dbg !3142
  %phitmp10 = zext i1 %16 to i8, !dbg !3142
  br label %land.end112, !dbg !3142

land.end112:                                      ; preds = %land.rhs103, %lor.lhs.false96
  %17 = phi i8 [ 0, %lor.lhs.false96 ], [ %phitmp10, %land.rhs103 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !3117, metadata !DIExpression()), !dbg !3122
  br label %if.end114, !dbg !3143

if.end114:                                        ; preds = %if.end, %land.end112
  %honor_trapv.0 = phi i8 [ %17, %land.end112 ], [ 0, %if.end ], !dbg !3122
  %fp_operation.1 = phi i8 [ %fp_operation.0, %land.end112 ], [ 0, %if.end ], !dbg !3122
  call void @llvm.dbg.value(metadata i8 %fp_operation.1, metadata !3116, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i8 %honor_trapv.0, metadata !3117, metadata !DIExpression()), !dbg !3122
  %idxprom115 = zext i32 %bf.cast to i64, !dbg !3144
  %arrayidx116 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom115, !dbg !3144
  %18 = load i32, i32* %arrayidx116, align 4, !dbg !3144
  %cmp117 = icmp eq i32 %18, 7, !dbg !3146
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !3147

if.then119:                                       ; preds = %if.end114
  %operands121 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3148
  %arrayidx122 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands121, i64 1, !dbg !3148
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx122, align 8, !dbg !3148
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !3120, metadata !DIExpression()), !dbg !3122
  br label %if.end123, !dbg !3149

if.end123:                                        ; preds = %if.then119, %if.end114
  %div.0 = phi %union.tree_node* [ %19, %if.then119 ], [ null, %if.end114 ], !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %div.0, metadata !3120, metadata !DIExpression()), !dbg !3122
  %call = tail call zeroext i8 @operation_could_trap_p(i32 %bf.cast, i8 zeroext %fp_operation.1, i8 zeroext %honor_trapv.0, %union.tree_node* %div.0) #7, !dbg !3150
  %tobool124 = icmp eq i8 %call, 0, !dbg !3150
  br i1 %tobool124, label %restart.preheader, label %cleanup, !dbg !3152

restart.preheader:                                ; preds = %if.end123
  br label %restart, !dbg !3153

restart:                                          ; preds = %restart.backedge, %restart.preheader
  %code.0 = phi i32 [ %bf.cast, %restart.preheader ], [ %code.0.be, %restart.backedge ], !dbg !3122
  %expr.addr.0 = phi %union.tree_node* [ %expr, %restart.preheader ], [ %expr.addr.0.be, %restart.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !3115, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.label(metadata !3121), !dbg !3154
  %trunc = trunc i32 %code.0 to i16, !dbg !3153
  switch i16 %trunc, label %cleanup.loopexit [
    i16 152, label %sw.bb
    i16 41, label %sw.bb134
    i16 43, label %sw.bb134
    i16 44, label %sw.bb134
    i16 42, label %sw.bb134
    i16 118, label %sw.bb134
    i16 150, label %sw.bb134
    i16 46, label %sw.bb142
    i16 45, label %sw.bb161
    i16 47, label %sw.bb182
    i16 48, label %sw.bb182
    i16 49, label %sw.bb182
    i16 140, label %sw.bb192
    i16 59, label %sw.bb199
  ], !dbg !3153

sw.bb:                                            ; preds = %restart
  %operands128 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3155
  %arrayidx129 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands128, i64 5, !dbg !3155
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx129, align 8, !dbg !3155
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !3114, metadata !DIExpression()), !dbg !3122
  br label %restart.backedge, !dbg !3157

restart.backedge:                                 ; preds = %sw.bb, %sw.bb134
  %.pn = phi %union.tree_node* [ %21, %sw.bb134 ], [ %20, %sw.bb ]
  %expr.addr.0.be = phi %union.tree_node* [ %21, %sw.bb134 ], [ %20, %sw.bb ]
  %code.0.be.in.in.in = getelementptr inbounds %union.tree_node, %union.tree_node* %.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3158
  %code.0.be.in.in = load i64, i64* %code.0.be.in.in.in, align 8, !dbg !3158
  %code.0.be.in = trunc i64 %code.0.be.in.in to i32, !dbg !3158
  %code.0.be = and i32 %code.0.be.in, 65535, !dbg !3158
  br label %restart, !dbg !3122

sw.bb134:                                         ; preds = %restart, %restart, %restart, %restart, %restart, %restart
  %operands136 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3159
  %21 = load %union.tree_node*, %union.tree_node** %operands136, align 8, !dbg !3159
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !3114, metadata !DIExpression()), !dbg !3122
  br label %restart.backedge, !dbg !3160

sw.bb142:                                         ; preds = %restart
  %expr.addr.0.lcssa29 = phi %union.tree_node* [ %expr.addr.0, %restart ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa29, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa29, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa29, metadata !3114, metadata !DIExpression()), !dbg !3122
  %operands144 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3161
  %22 = load %union.tree_node*, %union.tree_node** %operands144, align 8, !dbg !3161
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3119, metadata !DIExpression()), !dbg !3122
  %call146 = tail call zeroext i8 @tree_could_trap_p(%union.tree_node* %22) #7, !dbg !3162
  %tobool147 = icmp eq i8 %call146, 0, !dbg !3162
  br i1 %tobool147, label %if.end149, label %cleanup, !dbg !3164

if.end149:                                        ; preds = %sw.bb142
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3165
  %bf.load151 = load i64, i64* %23, align 8, !dbg !3165
  %bf.cast1543 = and i64 %bf.load151, 33554432, !dbg !3165
  %tobool155 = icmp eq i64 %bf.cast1543, 0, !dbg !3165
  br i1 %tobool155, label %if.end157, label %cleanup, !dbg !3167

if.end157:                                        ; preds = %if.end149
  %call158 = tail call zeroext i8 @range_in_array_bounds_p(%union.tree_node* %expr.addr.0.lcssa29) #6, !dbg !3168
  %tobool159 = icmp eq i8 %call158, 0, !dbg !3169
  %conv160 = zext i1 %tobool159 to i8, !dbg !3169
  br label %cleanup, !dbg !3170

sw.bb161:                                         ; preds = %restart
  %expr.addr.0.lcssa30 = phi %union.tree_node* [ %expr.addr.0, %restart ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa30, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa30, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa30, metadata !3114, metadata !DIExpression()), !dbg !3122
  %operands163 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3171
  %24 = load %union.tree_node*, %union.tree_node** %operands163, align 8, !dbg !3171
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !3119, metadata !DIExpression()), !dbg !3122
  %call165 = tail call zeroext i8 @tree_could_trap_p(%union.tree_node* %24) #7, !dbg !3172
  %tobool166 = icmp eq i8 %call165, 0, !dbg !3172
  br i1 %tobool166, label %if.end168, label %cleanup, !dbg !3174

if.end168:                                        ; preds = %sw.bb161
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3175
  %bf.load170 = load i64, i64* %25, align 8, !dbg !3175
  %bf.cast1732 = and i64 %bf.load170, 33554432, !dbg !3175
  %tobool174 = icmp eq i64 %bf.cast1732, 0, !dbg !3175
  br i1 %tobool174, label %if.end176, label %cleanup, !dbg !3177

if.end176:                                        ; preds = %if.end168
  %call177 = tail call zeroext i8 @in_array_bounds_p(%union.tree_node* %expr.addr.0.lcssa30) #6, !dbg !3178
  %tobool178 = icmp eq i8 %call177, 0, !dbg !3179
  %conv181 = zext i1 %tobool178 to i8, !dbg !3179
  br label %cleanup, !dbg !3180

sw.bb182:                                         ; preds = %restart, %restart, %restart
  %expr.addr.0.lcssa31 = phi %union.tree_node* [ %expr.addr.0, %restart ], [ %expr.addr.0, %restart ], [ %expr.addr.0, %restart ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa31, metadata !3114, metadata !DIExpression()), !dbg !3122
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3181
  %bf.load184 = load i64, i64* %26, align 8, !dbg !3181
  %bf.cast1871 = lshr i64 %bf.load184, 25, !dbg !3182
  %27 = trunc i64 %bf.cast1871 to i8, !dbg !3182
  %28 = and i8 %27, 1, !dbg !3182
  %29 = xor i8 %28, 1, !dbg !3182
  br label %cleanup, !dbg !3183

sw.bb192:                                         ; preds = %restart
  %expr.addr.0.lcssa32 = phi %union.tree_node* [ %expr.addr.0, %restart ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa32, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa32, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa32, metadata !3114, metadata !DIExpression()), !dbg !3122
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0.lcssa32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3184
  %bf.load194 = load i64, i64* %30, align 8, !dbg !3184
  %bf.lshr195 = lshr i64 %bf.load194, 19, !dbg !3184
  %31 = trunc i64 %bf.lshr195 to i8, !dbg !3184
  %bf.cast197 = and i8 %31, 1, !dbg !3184
  br label %cleanup, !dbg !3185

sw.bb199:                                         ; preds = %restart
  %expr.addr.0.lcssa33 = phi %union.tree_node* [ %expr.addr.0, %restart ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa33, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa33, metadata !3114, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0.lcssa33, metadata !3114, metadata !DIExpression()), !dbg !3122
  %call200 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %expr.addr.0.lcssa33) #6, !dbg !3186
  call void @llvm.dbg.value(metadata %union.tree_node* %call200, metadata !3118, metadata !DIExpression()), !dbg !3122
  %tobool201 = icmp eq %union.tree_node* %call200, null, !dbg !3187
  br i1 %tobool201, label %cleanup, label %lor.lhs.false202, !dbg !3189

lor.lhs.false202:                                 ; preds = %sw.bb199
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call200, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3190
  %bf.load204 = load i64, i64* %32, align 8, !dbg !3190
  %bf.cast206 = and i64 %bf.load204, 65535, !dbg !3190
  %arrayidx208 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast206, !dbg !3190
  %33 = load i32, i32* %arrayidx208, align 4, !dbg !3190
  %cmp209 = icmp eq i32 %33, 3, !dbg !3190
  br i1 %cmp209, label %lor.lhs.false211, label %cleanup, !dbg !3191

lor.lhs.false211:                                 ; preds = %lor.lhs.false202
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call200, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3192
  %34 = bitcast i24* %weak_flag to i32*, !dbg !3192
  %bf.load212 = load i32, i32* %34, align 8, !dbg !3192
  %35 = trunc i32 %bf.load212 to i8, !dbg !3192
  %.lobit = lshr i8 %35, 7, !dbg !3193
  ret i8 %.lobit, !dbg !3193

cleanup.loopexit:                                 ; preds = %restart
  br label %cleanup, !dbg !3194

cleanup:                                          ; preds = %cleanup.loopexit, %if.end149, %sw.bb142, %if.end168, %sw.bb161, %sw.bb199, %if.end123, %entry, %lor.lhs.false202, %sw.bb192, %sw.bb182, %if.end176, %if.end157
  %retval.0 = phi i8 [ %bf.cast197, %sw.bb192 ], [ %29, %sw.bb182 ], [ %conv181, %if.end176 ], [ %conv160, %if.end157 ], [ 0, %entry ], [ 1, %if.end123 ], [ 1, %sw.bb142 ], [ 0, %if.end149 ], [ 1, %sw.bb161 ], [ 0, %if.end168 ], [ 1, %lor.lhs.false202 ], [ 1, %sw.bb199 ], [ 0, %cleanup.loopexit ], !dbg !3122
  ret i8 %retval.0, !dbg !3194
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local zeroext i8 @range_in_array_bounds_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @in_array_bounds_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_callee_fndecl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3195 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3197, metadata !DIExpression()), !dbg !3198
  %0 = load i32, i32* @flag_exceptions, align 4, !dbg !3199
  %tobool = icmp eq i32 %0, 0, !dbg !3199
  br i1 %tobool, label %return, label %if.end, !dbg !3201

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !3202
  switch i32 %call, label %sw.default [
    i32 14, label %return
    i32 8, label %sw.bb1
    i32 6, label %sw.bb4
    i32 1, label %sw.bb4
    i32 7, label %sw.bb9
  ], !dbg !3203

sw.bb1:                                           ; preds = %if.end
  %call2 = tail call fastcc zeroext i8 @gimple_call_nothrow_p(%union.gimple_statement_d* %stmt) #7, !dbg !3204
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3206
  %conv = zext i1 %tobool3 to i8, !dbg !3206
  br label %return, !dbg !3207

sw.bb4:                                           ; preds = %if.end, %if.end
  %1 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !3208
  %tobool5 = icmp eq i32 %1, 0, !dbg !3208
  br i1 %tobool5, label %return, label %if.end7, !dbg !3210

if.end7:                                          ; preds = %sw.bb4
  %call8 = tail call fastcc zeroext i8 @stmt_could_throw_1_p(%union.gimple_statement_d* %stmt) #7, !dbg !3211
  br label %return, !dbg !3212

sw.bb9:                                           ; preds = %if.end
  %2 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !3213
  %tobool10 = icmp eq i32 %2, 0, !dbg !3213
  br i1 %tobool10, label %return, label %if.end12, !dbg !3215

if.end12:                                         ; preds = %sw.bb9
  %call13 = tail call fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %stmt) #7, !dbg !3216
  br label %return, !dbg !3217

sw.default:                                       ; preds = %if.end
  br label %return, !dbg !3218

return:                                           ; preds = %sw.bb4, %sw.bb9, %entry, %if.end, %sw.default, %if.end12, %if.end7, %sw.bb1
  %retval.0 = phi i8 [ 0, %sw.default ], [ %call13, %if.end12 ], [ %call8, %if.end7 ], [ %conv, %sw.bb1 ], [ 0, %entry ], [ 1, %if.end ], [ 0, %sw.bb4 ], [ 0, %sw.bb9 ], !dbg !3198
  ret i8 %retval.0, !dbg !3219
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3220 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3224, metadata !DIExpression()), !dbg !3225
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3226
  %bf.load = load i32, i32* %0, align 8, !dbg !3226
  %bf.clear = and i32 %bf.load, 255, !dbg !3226
  ret i32 %bf.clear, !dbg !3227
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_nothrow_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !3228 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !3230, metadata !DIExpression()), !dbg !3231
  %call = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %s) #6, !dbg !3232
  %and = lshr i32 %call, 6, !dbg !3233
  %0 = trunc i32 %and to i8, !dbg !3233
  %1 = and i8 %0, 1, !dbg !3233
  ret i8 %1, !dbg !3234
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @stmt_could_throw_1_p(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !3235 {
entry:
  %handled = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3237, metadata !DIExpression()), !dbg !3247
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) #7, !dbg !3248
  call void @llvm.dbg.value(metadata i32 %call, metadata !3238, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 0, metadata !3239, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 0, metadata !3240, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 0, metadata !3241, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 0, metadata !3242, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8* %handled, metadata !3245, metadata !DIExpression(DW_OP_deref)), !dbg !3247
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %handled) #8, !dbg !3249
  %idxprom = sext i32 %call to i64, !dbg !3250
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !3250
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3250
  %cmp = icmp eq i32 %0, 5, !dbg !3252
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3253

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %0, 6, !dbg !3254
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !3255

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %0, 7, !dbg !3256
  br i1 %cmp7, label %if.then, label %if.end64, !dbg !3257

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %call8 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) #7, !dbg !3258
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !3243, metadata !DIExpression()), !dbg !3247
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3260
  %bf.load = load i64, i64* %1, align 8, !dbg !3260
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3260
  %cmp9 = icmp eq i64 %bf.cast1, 9, !dbg !3260
  br i1 %cmp9, label %lor.end, label %lor.rhs, !dbg !3260

lor.rhs:                                          ; preds = %if.then
  %cmp14 = icmp eq i64 %bf.cast1, 13, !dbg !3260
  br i1 %cmp14, label %land.rhs, label %lor.lhs.false15, !dbg !3260

lor.lhs.false15:                                  ; preds = %lor.rhs
  %cmp20 = icmp eq i64 %bf.cast1, 14, !dbg !3260
  br i1 %cmp20, label %land.rhs, label %lor.end, !dbg !3260

land.rhs:                                         ; preds = %lor.lhs.false15, %lor.rhs
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3260
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !3260
  %3 = load i64*, i64** %2, align 8, !dbg !3260
  %bf.load22 = load i64, i64* %3, align 8, !dbg !3260
  %bf.cast249 = and i64 %bf.load22, 65535, !dbg !3260
  %cmp25 = icmp eq i64 %bf.cast249, 9, !dbg !3260
  %phitmp = zext i1 %cmp25 to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false15, %land.rhs, %if.then
  %4 = phi i8 [ 1, %if.then ], [ 0, %lor.lhs.false15 ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %4, metadata !3241, metadata !DIExpression()), !dbg !3247
  %tobool = icmp eq i8 %4, 0, !dbg !3261
  br i1 %tobool, label %if.else, label %if.then26, !dbg !3263

if.then26:                                        ; preds = %lor.end
  %5 = load i32, i32* @flag_trapping_math, align 4, !dbg !3264
  %tobool27 = icmp eq i32 %5, 0, !dbg !3264
  br i1 %tobool27, label %land.end30, label %land.rhs28, !dbg !3266

land.rhs28:                                       ; preds = %if.then26
  %6 = load i32, i32* @flag_finite_math_only, align 4, !dbg !3267
  %tobool29 = icmp eq i32 %6, 0, !dbg !3268
  %phitmp8 = zext i1 %tobool29 to i8
  br label %land.end30

land.end30:                                       ; preds = %if.then26, %land.rhs28
  %7 = phi i8 [ 0, %if.then26 ], [ %phitmp8, %land.rhs28 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !3239, metadata !DIExpression()), !dbg !3247
  %8 = load i32, i32* @flag_signaling_nans, align 4, !dbg !3269
  %cmp32 = icmp ne i32 %8, 0, !dbg !3270
  %conv34 = zext i1 %cmp32 to i8, !dbg !3269
  call void @llvm.dbg.value(metadata i8 %conv34, metadata !3240, metadata !DIExpression()), !dbg !3247
  br label %if.end64, !dbg !3271

if.else:                                          ; preds = %lor.end
  %cmp39 = icmp eq i64 %bf.cast1, 6, !dbg !3272
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false41, !dbg !3272

lor.lhs.false41:                                  ; preds = %if.else
  %cmp46 = icmp eq i64 %bf.cast1, 7, !dbg !3272
  br i1 %cmp46, label %land.lhs.true, label %lor.lhs.false48, !dbg !3272

lor.lhs.false48:                                  ; preds = %lor.lhs.false41
  %cmp53 = icmp eq i64 %bf.cast1, 8, !dbg !3272
  br i1 %cmp53, label %land.lhs.true, label %if.end64, !dbg !3274

land.lhs.true:                                    ; preds = %lor.lhs.false48, %lor.lhs.false41, %if.else
  %bf.cast587 = and i64 %bf.load, 2097152, !dbg !3275
  %tobool59 = icmp eq i64 %bf.cast587, 0, !dbg !3275
  %9 = load i32, i32* @flag_trapv, align 4, !dbg !3275
  %tobool61 = icmp ne i32 %9, 0, !dbg !3275
  %or.cond = and i1 %tobool59, %tobool61, !dbg !3275
  %spec.select = zext i1 %or.cond to i8, !dbg !3275
  br label %if.end64, !dbg !3275

if.end64:                                         ; preds = %land.lhs.true, %land.end30, %lor.lhs.false48, %lor.lhs.false4
  %honor_trapv.2 = phi i8 [ 0, %lor.lhs.false4 ], [ 0, %land.end30 ], [ 0, %lor.lhs.false48 ], [ %spec.select, %land.lhs.true ], !dbg !3276
  %fp_operation.0 = phi i8 [ 0, %lor.lhs.false4 ], [ %4, %land.end30 ], [ 0, %lor.lhs.false48 ], [ 0, %land.lhs.true ], !dbg !3247
  %honor_snans.1 = phi i8 [ 0, %lor.lhs.false4 ], [ %conv34, %land.end30 ], [ 0, %lor.lhs.false48 ], [ 0, %land.lhs.true ], !dbg !3247
  %honor_nans.1 = phi i8 [ 0, %lor.lhs.false4 ], [ %7, %land.end30 ], [ 0, %lor.lhs.false48 ], [ 0, %land.lhs.true ], !dbg !3247
  call void @llvm.dbg.value(metadata i8 %honor_nans.1, metadata !3239, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 %honor_snans.1, metadata !3240, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 %fp_operation.0, metadata !3241, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 %honor_trapv.2, metadata !3242, metadata !DIExpression()), !dbg !3247
  %call65 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !3277
  %tobool67 = icmp eq i8 %call65, 0, !dbg !3277
  br i1 %tobool67, label %cond.end, label %cond.true, !dbg !3277

cond.true:                                        ; preds = %if.end64
  %call68 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %stmt) #7, !dbg !3278
  br label %cond.end, !dbg !3277

cond.end:                                         ; preds = %if.end64, %cond.true
  %cond = phi %union.tree_node* [ %call68, %cond.true ], [ null, %if.end64 ], !dbg !3277
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !3243, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8* %handled, metadata !3245, metadata !DIExpression(DW_OP_deref)), !dbg !3247
  %call69 = call zeroext i8 @operation_could_trap_helper_p(i32 %call, i8 zeroext %fp_operation.0, i8 zeroext %honor_trapv.2, i8 zeroext %honor_nans.1, i8 zeroext %honor_snans.1, %union.tree_node* %cond, i8* nonnull %handled) #7, !dbg !3279
  call void @llvm.dbg.value(metadata i8 %call69, metadata !3246, metadata !DIExpression()), !dbg !3247
  %10 = load i8, i8* %handled, align 1, !dbg !3280
  call void @llvm.dbg.value(metadata i8 %10, metadata !3245, metadata !DIExpression()), !dbg !3247
  %tobool70 = icmp eq i8 %10, 0, !dbg !3280
  br i1 %tobool70, label %for.cond.preheader, label %cleanup, !dbg !3282

for.cond.preheader:                               ; preds = %cond.end
  br label %for.cond, !dbg !3283

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !3285
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3244, metadata !DIExpression()), !dbg !3247
  %call73 = call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %stmt) #7, !dbg !3286
  %conv74 = zext i32 %call73 to i64, !dbg !3286
  %cmp75 = icmp ult i64 %i.0, %conv74, !dbg !3288
  br i1 %cmp75, label %for.body, label %cleanup.loopexit, !dbg !3283

for.body:                                         ; preds = %for.cond
  %conv77 = trunc i64 %i.0 to i32, !dbg !3289
  %call78 = call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %stmt, i32 %conv77) #7, !dbg !3291
  %call79 = call zeroext i8 @tree_could_trap_p(%union.tree_node* %call78) #7, !dbg !3292
  %tobool80 = icmp eq i8 %call79, 0, !dbg !3292
  br i1 %tobool80, label %for.inc, label %cleanup.loopexit, !dbg !3293

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i64 %i.0, 1, !dbg !3294
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3244, metadata !DIExpression()), !dbg !3247
  br label %for.cond, !dbg !3295, !llvm.loop !3296

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 0, %for.cond ], [ 1, %for.body ]
  br label %cleanup, !dbg !3298

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end
  %retval.0 = phi i8 [ %call69, %cond.end ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !3247
  call void @llvm.dbg.value(metadata i8* %handled, metadata !3245, metadata !DIExpression(DW_OP_deref)), !dbg !3247
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %handled) #8, !dbg !3298
  ret i8 %retval.0, !dbg !3298
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3299 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3303, metadata !DIExpression()), !dbg !3304
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !3305
  %bf.load = load i32, i32* %0, align 8, !dbg !3305
  %and = lshr i32 %bf.load, 17, !dbg !3306
  %1 = trunc i32 %and to i8, !dbg !3306
  %2 = and i8 %1, 1, !dbg !3306
  ret i8 %2, !dbg !3307
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @tree_could_throw_p(%union.tree_node* %t) local_unnamed_addr #5 !dbg !3308 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !3310, metadata !DIExpression()), !dbg !3311
  %0 = load i32, i32* @flag_exceptions, align 4, !dbg !3312
  %tobool = icmp eq i32 %0, 0, !dbg !3312
  br i1 %tobool, label %return, label %if.end, !dbg !3314

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3315
  %bf.load = load i64, i64* %1, align 8, !dbg !3315
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3317
  %cmp = icmp eq i64 %bf.cast1, 53, !dbg !3317
  br i1 %cmp, label %if.then1, label %if.end9, !dbg !3318

if.then1:                                         ; preds = %if.end
  %2 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !3319
  %tobool2 = icmp eq i32 %2, 0, !dbg !3319
  br i1 %tobool2, label %if.end5, label %land.lhs.true, !dbg !3322

land.lhs.true:                                    ; preds = %if.then1
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3323
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3323
  %call = tail call zeroext i8 @tree_could_trap_p(%union.tree_node* %3) #7, !dbg !3324
  %tobool3 = icmp eq i8 %call, 0, !dbg !3324
  br i1 %tobool3, label %if.end5, label %return, !dbg !3325

if.end5:                                          ; preds = %land.lhs.true, %if.then1
  %operands7 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3326
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands7, i64 1, !dbg !3326
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8, !dbg !3326
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3310, metadata !DIExpression()), !dbg !3311
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3327
  %bf.load11.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3329
  br label %if.end9, !dbg !3330

if.end9:                                          ; preds = %if.end5, %if.end
  %bf.load11 = phi i64 [ %bf.load11.pre, %if.end5 ], [ %bf.load, %if.end ], !dbg !3329
  %t.addr.0 = phi %union.tree_node* [ %4, %if.end5 ], [ %t, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.0, metadata !3310, metadata !DIExpression()), !dbg !3311
  %bf.cast132 = and i64 %bf.load11, 65535, !dbg !3331
  %cmp14 = icmp eq i64 %bf.cast132, 150, !dbg !3331
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !3332

if.then16:                                        ; preds = %if.end9
  %operands18 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3333
  %5 = load %union.tree_node*, %union.tree_node** %operands18, align 8, !dbg !3333
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3310, metadata !DIExpression()), !dbg !3311
  %.phi.trans.insert5 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3334
  %bf.load22.pre = load i64, i64* %.phi.trans.insert5, align 8, !dbg !3336
  br label %if.end20, !dbg !3337

if.end20:                                         ; preds = %if.then16, %if.end9
  %bf.load22 = phi i64 [ %bf.load22.pre, %if.then16 ], [ %bf.load11, %if.end9 ], !dbg !3336
  %t.addr.1 = phi %union.tree_node* [ %5, %if.then16 ], [ %t.addr.0, %if.end9 ], !dbg !3311
  call void @llvm.dbg.value(metadata %union.tree_node* %t.addr.1, metadata !3310, metadata !DIExpression()), !dbg !3311
  %bf.cast243 = and i64 %bf.load22, 65535, !dbg !3338
  %cmp25 = icmp eq i64 %bf.cast243, 59, !dbg !3338
  br i1 %cmp25, label %if.then27, label %if.end32, !dbg !3339

if.then27:                                        ; preds = %if.end20
  %call28 = tail call i32 @call_expr_flags(%union.tree_node* %t.addr.1) #6, !dbg !3340
  %and = lshr i32 %call28, 6, !dbg !3341
  %6 = trunc i32 %and to i8, !dbg !3341
  %7 = and i8 %6, 1, !dbg !3341
  %8 = xor i8 %7, 1, !dbg !3341
  br label %return, !dbg !3342

if.end32:                                         ; preds = %if.end20
  %9 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !3343
  %tobool33 = icmp eq i32 %9, 0, !dbg !3343
  br i1 %tobool33, label %return, label %if.then34, !dbg !3345

if.then34:                                        ; preds = %if.end32
  %call35 = tail call zeroext i8 @tree_could_trap_p(%union.tree_node* %t.addr.1) #7, !dbg !3346
  br label %return, !dbg !3347

return:                                           ; preds = %land.lhs.true, %if.end32, %entry, %if.then34, %if.then27
  %retval.0 = phi i8 [ %8, %if.then27 ], [ %call35, %if.then34 ], [ 0, %entry ], [ 1, %land.lhs.true ], [ 0, %if.end32 ], !dbg !3311
  ret i8 %retval.0, !dbg !3348
}

declare dso_local i32 @call_expr_flags(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @stmt_can_throw_external(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3349 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3351, metadata !DIExpression()), !dbg !3353
  %call = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %stmt) #7, !dbg !3354
  %tobool = icmp eq i8 %call, 0, !dbg !3354
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3356

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %stmt) #7, !dbg !3357
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3352, metadata !DIExpression()), !dbg !3353
  %cmp = icmp eq i32 %call1, 0, !dbg !3358
  %conv2 = zext i1 %cmp to i8, !dbg !3359
  br label %cleanup, !dbg !3360

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %conv2, %if.end ], [ 0, %entry ], !dbg !3353
  ret i8 %retval.0, !dbg !3361
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @stmt_can_throw_internal(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3362 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3364, metadata !DIExpression()), !dbg !3366
  %call = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %stmt) #7, !dbg !3367
  %tobool = icmp eq i8 %call, 0, !dbg !3367
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3369

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %stmt) #7, !dbg !3370
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3365, metadata !DIExpression()), !dbg !3366
  %cmp = icmp sgt i32 %call1, 0, !dbg !3371
  %conv2 = zext i1 %cmp to i8, !dbg !3372
  br label %cleanup, !dbg !3373

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %conv2, %if.end ], [ 0, %entry ], !dbg !3366
  ret i8 %retval.0, !dbg !3374
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_clean_eh_stmt_fn(%struct.function* %ifun, %union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3375 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %ifun, metadata !3377, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3378, metadata !DIExpression()), !dbg !3379
  %call = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %stmt) #7, !dbg !3380
  %tobool = icmp eq i8 %call, 0, !dbg !3380
  br i1 %tobool, label %if.end, label %return, !dbg !3382

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i8 @remove_stmt_from_eh_lp_fn(%struct.function* %ifun, %union.gimple_statement_d* %stmt) #7, !dbg !3383
  br label %return, !dbg !3384

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i8 [ %call1, %if.end ], [ 0, %entry ], !dbg !3379
  ret i8 %retval.0, !dbg !3385
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_clean_eh_stmt(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3386 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3388, metadata !DIExpression()), !dbg !3389
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3390
  %call = tail call zeroext i8 @maybe_clean_eh_stmt_fn(%struct.function* %0, %union.gimple_statement_d* %stmt) #7, !dbg !3391
  ret i8 %call, !dbg !3392
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_clean_or_replace_eh_stmt(%union.gimple_statement_d* %old_stmt, %union.gimple_statement_d* %new_stmt) local_unnamed_addr #5 !dbg !3393 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %old_stmt, metadata !3397, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt, metadata !3398, metadata !DIExpression()), !dbg !3403
  %call = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %old_stmt) #7, !dbg !3404
  call void @llvm.dbg.value(metadata i32 %call, metadata !3399, metadata !DIExpression()), !dbg !3403
  %cmp = icmp eq i32 %call, 0, !dbg !3405
  br i1 %cmp, label %cleanup8, label %if.then, !dbg !3406

if.then:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %new_stmt) #7, !dbg !3407
  call void @llvm.dbg.value(metadata i8 %call1, metadata !3400, metadata !DIExpression()), !dbg !3408
  %cmp2 = icmp eq %union.gimple_statement_d* %new_stmt, %old_stmt, !dbg !3409
  %tobool = icmp ne i8 %call1, 0, !dbg !3411
  %or.cond = and i1 %cmp2, %tobool, !dbg !3412
  br i1 %or.cond, label %cleanup8, label %if.end, !dbg !3412

if.end:                                           ; preds = %if.then
  %call4 = tail call zeroext i8 @remove_stmt_from_eh_lp(%union.gimple_statement_d* %old_stmt) #7, !dbg !3413
  %tobool5 = icmp eq i8 %call1, 0, !dbg !3414
  br i1 %tobool5, label %cleanup8, label %if.then6, !dbg !3416

if.then6:                                         ; preds = %if.end
  tail call void @add_stmt_to_eh_lp(%union.gimple_statement_d* %new_stmt, i32 %call) #7, !dbg !3417
  br label %cleanup8, !dbg !3419

cleanup8:                                         ; preds = %if.end, %entry, %if.then6, %if.then
  %retval.1 = phi i8 [ 0, %if.then6 ], [ 0, %if.then ], [ 1, %if.end ], [ 0, %entry ], !dbg !3403
  ret i8 %retval.1, !dbg !3420
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_duplicate_eh_stmt_fn(%struct.function* %new_fun, %union.gimple_statement_d* %new_stmt, %struct.function* %old_fun, %union.gimple_statement_d* %old_stmt, %struct.pointer_map_t* %map, i32 %default_lp_nr) local_unnamed_addr #5 !dbg !3421 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %new_fun, metadata !3425, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt, metadata !3426, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.value(metadata %struct.function* %old_fun, metadata !3427, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %old_stmt, metadata !3428, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %map, metadata !3429, metadata !DIExpression()), !dbg !3442
  call void @llvm.dbg.value(metadata i32 %default_lp_nr, metadata !3430, metadata !DIExpression()), !dbg !3442
  %call = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %new_stmt) #7, !dbg !3443
  %tobool = icmp eq i8 %call, 0, !dbg !3443
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3445

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @lookup_stmt_eh_lp_fn(%struct.function* %old_fun, %union.gimple_statement_d* %old_stmt) #7, !dbg !3446
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3431, metadata !DIExpression()), !dbg !3442
  %cmp = icmp eq i32 %call1, 0, !dbg !3447
  br i1 %cmp, label %if.then2, label %if.else, !dbg !3448

if.then2:                                         ; preds = %if.end
  %cmp3 = icmp eq i32 %default_lp_nr, 0, !dbg !3449
  br i1 %cmp3, label %cleanup, label %if.end28, !dbg !3452

if.else:                                          ; preds = %if.end
  %cmp6 = icmp sgt i32 %call1, 0, !dbg !3453
  %eh = getelementptr inbounds %struct.function, %struct.function* %old_fun, i64 0, i32 0, !dbg !3454
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3454
  br i1 %cmp6, label %if.then7, label %if.else13, !dbg !3455

if.then7:                                         ; preds = %if.else
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 2, !dbg !3456
  %1 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !3456
  %tobool8 = icmp eq %struct.VEC_eh_landing_pad_gc* %1, null, !dbg !3456
  br i1 %tobool8, label %cond.end, label %cond.true, !dbg !3456

cond.true:                                        ; preds = %if.then7
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %1, i64 0, i32 0, !dbg !3456
  br label %cond.end, !dbg !3456

cond.end:                                         ; preds = %if.then7, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %if.then7 ], !dbg !3456
  %call11 = tail call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %cond, i32 %call1) #7, !dbg !3456
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call11, metadata !3434, metadata !DIExpression()), !dbg !3457
  %2 = bitcast %struct.eh_landing_pad_d* %call11 to i8*, !dbg !3458
  %call12 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %map, i8* %2) #6, !dbg !3459
  call void @llvm.dbg.value(metadata i8** %call12, metadata !3433, metadata !DIExpression()), !dbg !3442
  %3 = bitcast i8** %call12 to %struct.eh_landing_pad_d**, !dbg !3460
  %4 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %3, align 8, !dbg !3460
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !3438, metadata !DIExpression()), !dbg !3457
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %4, i64 0, i32 4, !dbg !3461
  %5 = load i32, i32* %index, align 8, !dbg !3461
  call void @llvm.dbg.value(metadata i32 %5, metadata !3432, metadata !DIExpression()), !dbg !3442
  br label %if.end28, !dbg !3462

if.else13:                                        ; preds = %if.else
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 1, !dbg !3463
  %6 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !3463
  %tobool15 = icmp eq %struct.VEC_eh_region_gc* %6, null, !dbg !3463
  br i1 %tobool15, label %cond.end21, label %cond.true16, !dbg !3463

cond.true16:                                      ; preds = %if.else13
  %base19 = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %6, i64 0, i32 0, !dbg !3463
  br label %cond.end21, !dbg !3463

cond.end21:                                       ; preds = %if.else13, %cond.true16
  %cond22 = phi %struct.VEC_eh_region_base* [ %base19, %cond.true16 ], [ null, %if.else13 ], !dbg !3463
  %sub = sub nsw i32 0, %call1, !dbg !3463
  %call23 = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %cond22, i32 %sub) #7, !dbg !3463
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call23, metadata !3439, metadata !DIExpression()), !dbg !3464
  %7 = bitcast %struct.eh_region_d* %call23 to i8*, !dbg !3465
  %call24 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %map, i8* %7) #6, !dbg !3466
  call void @llvm.dbg.value(metadata i8** %call24, metadata !3433, metadata !DIExpression()), !dbg !3442
  %8 = bitcast i8** %call24 to %struct.eh_region_d**, !dbg !3467
  %9 = load %struct.eh_region_d*, %struct.eh_region_d** %8, align 8, !dbg !3467
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %9, metadata !3441, metadata !DIExpression()), !dbg !3464
  %index25 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %9, i64 0, i32 3, !dbg !3468
  %10 = load i32, i32* %index25, align 8, !dbg !3468
  %sub26 = sub nsw i32 0, %10, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %sub26, metadata !3432, metadata !DIExpression()), !dbg !3442
  br label %if.end28

if.end28:                                         ; preds = %cond.end, %cond.end21, %if.then2
  %new_lp_nr.1 = phi i32 [ %default_lp_nr, %if.then2 ], [ %5, %cond.end ], [ %sub26, %cond.end21 ], !dbg !3470
  call void @llvm.dbg.value(metadata i32 %new_lp_nr.1, metadata !3432, metadata !DIExpression()), !dbg !3442
  tail call void @add_stmt_to_eh_lp_fn(%struct.function* %new_fun, %union.gimple_statement_d* %new_stmt, i32 %new_lp_nr.1) #7, !dbg !3471
  br label %cleanup, !dbg !3472

cleanup:                                          ; preds = %entry, %if.then2, %if.end28
  %retval.0 = phi i8 [ 1, %if.end28 ], [ 0, %entry ], [ 0, %if.then2 ], !dbg !3442
  ret i8 %retval.0, !dbg !3473
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3474 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !3480, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3481, metadata !DIExpression()), !dbg !3482
  br label %land.end, !dbg !3483

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3483
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3483
  %0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !3483
  ret %struct.eh_landing_pad_d* %0, !dbg !3483
}

declare dso_local i8** @pointer_map_contains(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3484 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !3490, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3491, metadata !DIExpression()), !dbg !3492
  br label %land.end, !dbg !3493

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3493
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3493
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !3493
  ret %struct.eh_region_d* %0, !dbg !3493
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @maybe_duplicate_eh_stmt(%union.gimple_statement_d* %new_stmt, %union.gimple_statement_d* %old_stmt) local_unnamed_addr #5 !dbg !3494 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt, metadata !3496, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %old_stmt, metadata !3497, metadata !DIExpression()), !dbg !3499
  %call = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %new_stmt) #7, !dbg !3500
  %tobool = icmp eq i8 %call, 0, !dbg !3500
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3502

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %old_stmt) #7, !dbg !3503
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3498, metadata !DIExpression()), !dbg !3499
  %cmp = icmp eq i32 %call1, 0, !dbg !3504
  br i1 %cmp, label %cleanup, label %if.end3, !dbg !3506

if.end3:                                          ; preds = %if.end
  tail call void @add_stmt_to_eh_lp(%union.gimple_statement_d* %new_stmt, i32 %call1) #7, !dbg !3507
  br label %cleanup, !dbg !3508

cleanup:                                          ; preds = %entry, %if.end, %if.end3
  %retval.0 = phi i8 [ 1, %if.end3 ], [ 0, %entry ], [ 0, %if.end ], !dbg !3499
  ret i8 %retval.0, !dbg !3509
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_refactor_eh() #5 !dbg !3510 {
entry:
  %0 = load i32, i32* @flag_exceptions, align 4, !dbg !3511
  %cmp = icmp ne i32 %0, 0, !dbg !3512
  %conv1 = zext i1 %cmp to i8, !dbg !3511
  ret i8 %conv1, !dbg !3513
}

; Function Attrs: nounwind uwtable
define internal i32 @refactor_eh() #5 !dbg !3514 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3515
  %call = tail call %struct.gimple_seq_d* @gimple_body(%union.tree_node* %0) #6, !dbg !3516
  tail call fastcc void @refactor_eh_r(%struct.gimple_seq_d* %call) #7, !dbg !3517
  ret i32 0, !dbg !3518
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_lower_resx() #5 !dbg !3519 {
entry:
  %0 = load i32, i32* @flag_exceptions, align 4, !dbg !3520
  %cmp = icmp ne i32 %0, 0, !dbg !3521
  %conv1 = zext i1 %cmp to i8, !dbg !3520
  ret i8 %conv1, !dbg !3522
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_lower_resx() #5 !dbg !3523 {
entry:
  call void @llvm.dbg.value(metadata i8 0, metadata !3527, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 0, metadata !3528, metadata !DIExpression()), !dbg !3533
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !3534
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %call, metadata !3526, metadata !DIExpression()), !dbg !3533
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3535
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3535
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3535
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3535
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3535
  br label %for.cond, !dbg !3535

for.cond:                                         ; preds = %for.inc, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %for.inc ], !dbg !3536
  %dominance_invalidated.0 = phi i8 [ 0, %entry ], [ %dominance_invalidated.1, %for.inc ], !dbg !3533
  %any_rewritten.0 = phi i8 [ 0, %entry ], [ %any_rewritten.1, %for.inc ], !dbg !3533
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3537
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3537
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3525, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0, metadata !3528, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %dominance_invalidated.0, metadata !3527, metadata !DIExpression()), !dbg !3533
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3536
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3536
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3536
  br i1 %cmp, label %for.end, label %for.body, !dbg !3535

for.body:                                         ; preds = %for.cond
  %call3 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.0) #6, !dbg !3538
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !3529, metadata !DIExpression()), !dbg !3539
  %tobool = icmp eq %union.gimple_statement_d* %call3, null, !dbg !3540
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !3542

land.lhs.true:                                    ; preds = %for.body
  %call4 = tail call fastcc zeroext i8 @is_gimple_resx(%union.gimple_statement_d* nonnull %call3) #7, !dbg !3543
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3543
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !3544

if.then:                                          ; preds = %land.lhs.true
  %call6 = tail call fastcc zeroext i8 @lower_resx(%struct.basic_block_def* %bb.0, %union.gimple_statement_d* nonnull %call3, %struct.pointer_map_t* %call) #7, !dbg !3545
  %or1 = or i8 %dominance_invalidated.0, %call6, !dbg !3547
  call void @llvm.dbg.value(metadata i8 %or1, metadata !3527, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 1, metadata !3528, metadata !DIExpression()), !dbg !3533
  br label %for.inc, !dbg !3548

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %dominance_invalidated.1 = phi i8 [ %or1, %if.then ], [ %dominance_invalidated.0, %land.lhs.true ], [ %dominance_invalidated.0, %for.body ], !dbg !3533
  %any_rewritten.1 = phi i8 [ 1, %if.then ], [ %any_rewritten.0, %land.lhs.true ], [ %any_rewritten.0, %for.body ], !dbg !3533
  call void @llvm.dbg.value(metadata i8 %any_rewritten.1, metadata !3528, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %dominance_invalidated.1, metadata !3527, metadata !DIExpression()), !dbg !3533
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3536
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3549
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3536
  br label %for.cond, !dbg !3536, !llvm.loop !3550

for.end:                                          ; preds = %for.cond
  %dominance_invalidated.0.lcssa = phi i8 [ %dominance_invalidated.0, %for.cond ], !dbg !3533
  %any_rewritten.0.lcssa = phi i8 [ %any_rewritten.0, %for.cond ], !dbg !3533
  call void @llvm.dbg.value(metadata i8 %dominance_invalidated.0.lcssa, metadata !3527, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0.lcssa, metadata !3528, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %dominance_invalidated.0.lcssa, metadata !3527, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0.lcssa, metadata !3528, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %dominance_invalidated.0.lcssa, metadata !3527, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0.lcssa, metadata !3528, metadata !DIExpression()), !dbg !3533
  tail call void @pointer_map_destroy(%struct.pointer_map_t* %call) #6, !dbg !3552
  %tobool11 = icmp eq i8 %dominance_invalidated.0.lcssa, 0, !dbg !3553
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !3555

if.then12:                                        ; preds = %for.end
  tail call void @free_dominance_info(i32 1) #6, !dbg !3556
  tail call void @free_dominance_info(i32 2) #6, !dbg !3558
  br label %if.end13, !dbg !3559

if.end13:                                         ; preds = %for.end, %if.then12
  %tobool15 = icmp eq i8 %any_rewritten.0.lcssa, 0, !dbg !3560
  %cond = select i1 %tobool15, i32 0, i32 16384, !dbg !3560
  ret i32 %cond, !dbg !3561
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_lower_eh_dispatch() #5 !dbg !3562 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3563
  %eh = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 0, !dbg !3564
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3564
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 0, !dbg !3565
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !3565
  %cmp = icmp ne %struct.eh_region_d* %2, null, !dbg !3566
  %conv1 = zext i1 %cmp to i8, !dbg !3563
  ret i8 %conv1, !dbg !3567
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_lower_eh_dispatch() #5 !dbg !3568 {
entry:
  call void @llvm.dbg.value(metadata i8 0, metadata !3571, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 0, metadata !3572, metadata !DIExpression()), !dbg !3577
  tail call void @assign_filter_values() #6, !dbg !3578
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3579
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3579
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3579
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3579
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3579
  br label %for.cond, !dbg !3579

for.cond:                                         ; preds = %for.inc, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %for.inc ], !dbg !3580
  %redirected.0 = phi i8 [ 0, %entry ], [ %redirected.1, %for.inc ], !dbg !3577
  %any_rewritten.0 = phi i8 [ 0, %entry ], [ %any_rewritten.1, %for.inc ], !dbg !3577
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3581
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3581
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3570, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0, metadata !3571, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %redirected.0, metadata !3572, metadata !DIExpression()), !dbg !3577
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3580
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3580
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3580
  br i1 %cmp, label %for.end, label %for.body, !dbg !3579

for.body:                                         ; preds = %for.cond
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb.0) #6, !dbg !3582
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3573, metadata !DIExpression()), !dbg !3583
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !3584
  br i1 %tobool, label %for.inc, label %land.lhs.true, !dbg !3586

land.lhs.true:                                    ; preds = %for.body
  %call3 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !3587
  %cmp4 = icmp eq i32 %call3, 15, !dbg !3588
  br i1 %cmp4, label %if.then, label %for.inc, !dbg !3589

if.then:                                          ; preds = %land.lhs.true
  %call5 = tail call fastcc zeroext i8 @lower_eh_dispatch(%struct.basic_block_def* %bb.0, %union.gimple_statement_d* nonnull %call) #7, !dbg !3590
  %or1 = or i8 %redirected.0, %call5, !dbg !3592
  call void @llvm.dbg.value(metadata i8 %or1, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 1, metadata !3571, metadata !DIExpression()), !dbg !3577
  br label %for.inc, !dbg !3593

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %redirected.1 = phi i8 [ %or1, %if.then ], [ %redirected.0, %land.lhs.true ], [ %redirected.0, %for.body ], !dbg !3577
  %any_rewritten.1 = phi i8 [ 1, %if.then ], [ %any_rewritten.0, %land.lhs.true ], [ %any_rewritten.0, %for.body ], !dbg !3577
  call void @llvm.dbg.value(metadata i8 %any_rewritten.1, metadata !3571, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %redirected.1, metadata !3572, metadata !DIExpression()), !dbg !3577
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3580
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3594
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3580
  br label %for.cond, !dbg !3580, !llvm.loop !3595

for.end:                                          ; preds = %for.cond
  %redirected.0.lcssa = phi i8 [ %redirected.0, %for.cond ], !dbg !3577
  %any_rewritten.0.lcssa = phi i8 [ %any_rewritten.0, %for.cond ], !dbg !3577
  call void @llvm.dbg.value(metadata i8 %redirected.0.lcssa, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0.lcssa, metadata !3571, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %redirected.0.lcssa, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0.lcssa, metadata !3571, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %redirected.0.lcssa, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i8 %any_rewritten.0.lcssa, metadata !3571, metadata !DIExpression()), !dbg !3577
  %tobool9 = icmp eq i8 %redirected.0.lcssa, 0, !dbg !3597
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !3599

if.then10:                                        ; preds = %for.end
  %call11 = tail call zeroext i8 @delete_unreachable_blocks() #6, !dbg !3600
  br label %if.end12, !dbg !3600

if.end12:                                         ; preds = %for.end, %if.then10
  %tobool14 = icmp eq i8 %any_rewritten.0.lcssa, 0, !dbg !3601
  %cond = select i1 %tobool14, i32 0, i32 16384, !dbg !3601
  ret i32 %cond, !dbg !3602
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_cleanup_eh() #5 !dbg !3603 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3604
  %eh = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 0, !dbg !3605
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3605
  %cmp = icmp eq %struct.eh_status* %1, null, !dbg !3606
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !3607

land.rhs:                                         ; preds = %entry
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 0, !dbg !3608
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !3608
  %cmp3 = icmp ne %struct.eh_region_d* %2, null, !dbg !3609
  %phitmp = zext i1 %cmp3 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %3 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %3, !dbg !3610
}

; Function Attrs: nounwind uwtable
define internal i32 @execute_cleanup_eh() #5 !dbg !3611 {
entry:
  tail call fastcc void @remove_unreachable_handlers() #7, !dbg !3616
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3617
  %eh = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 0, !dbg !3618
  %1 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !3618
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %1, i64 0, i32 0, !dbg !3619
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %region_tree, align 8, !dbg !3619
  %tobool = icmp ne %struct.eh_region_d* %2, null, !dbg !3617
  %3 = load i32, i32* @optimize, align 4, !dbg !3620
  %tobool1 = icmp ne i32 %3, 0, !dbg !3620
  %or.cond = and i1 %tobool, %tobool1, !dbg !3621
  br i1 %or.cond, label %if.then, label %if.end12, !dbg !3621

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !3613, metadata !DIExpression()), !dbg !3622
  %call = tail call fastcc zeroext i8 @unsplit_all_eh() #7, !dbg !3623
  call void @llvm.dbg.value(metadata i8 %call, metadata !3613, metadata !DIExpression()), !dbg !3622
  %call4 = tail call fastcc zeroext i8 @cleanup_all_empty_eh() #7, !dbg !3624
  %or71 = or i8 %call, %call4, !dbg !3625
  call void @llvm.dbg.value(metadata i8 %or71, metadata !3613, metadata !DIExpression()), !dbg !3622
  %tobool9 = icmp eq i8 %or71, 0, !dbg !3626
  br i1 %tobool9, label %cleanup, label %if.then10, !dbg !3628

if.then10:                                        ; preds = %if.then
  tail call void @free_dominance_info(i32 1) #6, !dbg !3629
  tail call void @free_dominance_info(i32 2) #6, !dbg !3631
  %call11 = tail call zeroext i8 @delete_unreachable_blocks() #6, !dbg !3632
  tail call fastcc void @remove_unreachable_handlers_no_lp() #7, !dbg !3633
  br label %cleanup, !dbg !3634

cleanup:                                          ; preds = %if.then, %if.then10
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then10 ], [ true, %if.then ]
  br i1 %cleanup.dest.slot.0, label %if.end12, label %return

if.end12:                                         ; preds = %cleanup, %entry
  br label %return, !dbg !3635

return:                                           ; preds = %cleanup, %if.end12
  %retval.1 = phi i32 [ 16416, %cleanup ], [ 0, %if.end12 ], !dbg !3636
  ret i32 %retval.1, !dbg !3637
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @verify_eh_edges(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3638 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3640, metadata !DIExpression()), !dbg !3647
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !3648
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3641, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* null, metadata !3642, metadata !DIExpression()), !dbg !3647
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3649
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3649
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !3650
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3650
  %call1 = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %stmt) #7, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %call1, metadata !3643, metadata !DIExpression()), !dbg !3647
  %cmp = icmp sgt i32 %call1, 0, !dbg !3652
  br i1 %cmp, label %if.then, label %if.end, !dbg !3654

if.then:                                          ; preds = %entry
  %call2 = tail call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %call1) #6, !dbg !3655
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call2, metadata !3642, metadata !DIExpression()), !dbg !3647
  br label %if.end, !dbg !3656

if.end:                                           ; preds = %if.then, %entry
  %lp.0 = phi %struct.eh_landing_pad_d* [ %call2, %if.then ], [ null, %entry ], !dbg !3647
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.0, metadata !3642, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !3646, metadata !DIExpression()), !dbg !3647
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3657
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3657
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !3657
  %call3 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3657
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3657
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 0, !dbg !3657
  store i32 %4, i32* %3, align 8, !dbg !3657
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3657
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 1, !dbg !3657
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !3657
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3657
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3657
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3659
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3659
  br label %for.cond, !dbg !3657

for.cond:                                         ; preds = %for.inc, %if.end
  %eh_edge.0 = phi %struct.edge_def* [ null, %if.end ], [ %eh_edge.1, %for.inc ], !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_def* %eh_edge.0, metadata !3646, metadata !DIExpression()), !dbg !3647
  %9 = load i32, i32* %7, align 8, !dbg !3661
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3661
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3645, metadata !DIExpression(DW_OP_deref)), !dbg !3647
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !3661
  %tobool = icmp eq i8 %call4, 0, !dbg !3657
  br i1 %tobool, label %for.end, label %for.body, !dbg !3657

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3662
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !3645, metadata !DIExpression()), !dbg !3647
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !3665
  %12 = load i32, i32* %flags, align 8, !dbg !3665
  %and = and i32 %12, 8, !dbg !3666
  %tobool5 = icmp eq i32 %and, 0, !dbg !3666
  br i1 %tobool5, label %for.inc, label %if.then6, !dbg !3667

if.then6:                                         ; preds = %for.body
  %tobool7 = icmp eq %struct.edge_def* %eh_edge.0, null, !dbg !3668
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !3671

if.then8:                                         ; preds = %if.then6
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !3672
  %13 = load i32, i32* %index, align 8, !dbg !3672
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 %13) #6, !dbg !3674
  br label %cleanup, !dbg !3675

if.else:                                          ; preds = %if.then6
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !3645, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !3646, metadata !DIExpression()), !dbg !3647
  br label %for.inc, !dbg !3676

for.inc:                                          ; preds = %for.body, %if.else
  %eh_edge.1 = phi %struct.edge_def* [ %11, %if.else ], [ %eh_edge.0, %for.body ], !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_def* %eh_edge.1, metadata !3646, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3644, metadata !DIExpression(DW_OP_deref)), !dbg !3647
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3661
  br label %for.cond, !dbg !3661, !llvm.loop !3677

for.end:                                          ; preds = %for.cond
  %eh_edge.0.lcssa = phi %struct.edge_def* [ %eh_edge.0, %for.cond ], !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_def* %eh_edge.0.lcssa, metadata !3646, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_def* %eh_edge.0.lcssa, metadata !3646, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %struct.edge_def* %eh_edge.0.lcssa, metadata !3646, metadata !DIExpression()), !dbg !3647
  %cmp11 = icmp eq %struct.eh_landing_pad_d* %lp.0, null, !dbg !3679
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !3681

if.then12:                                        ; preds = %for.end
  %tobool13 = icmp eq %struct.edge_def* %eh_edge.0.lcssa, null, !dbg !3682
  br i1 %tobool13, label %cleanup, label %if.then14, !dbg !3685

if.then14:                                        ; preds = %if.then12
  %index15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !3686
  %14 = load i32, i32* %index15, align 8, !dbg !3686
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i32 %14) #6, !dbg !3688
  br label %cleanup, !dbg !3689

if.end17:                                         ; preds = %for.end
  %call18 = call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %stmt) #7, !dbg !3690
  %tobool19 = icmp eq i8 %call18, 0, !dbg !3690
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !3692

if.then20:                                        ; preds = %if.end17
  %index21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !3693
  %15 = load i32, i32* %index21, align 8, !dbg !3693
  call void (i8*, ...) @error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i32 %15) #6, !dbg !3695
  br label %cleanup, !dbg !3696

if.end22:                                         ; preds = %if.end17
  %cmp23 = icmp eq %struct.edge_def* %eh_edge.0.lcssa, null, !dbg !3697
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !3699

if.then24:                                        ; preds = %if.end22
  %index25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !3700
  %16 = load i32, i32* %index25, align 8, !dbg !3700
  call void (i8*, ...) @error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i32 %16) #6, !dbg !3702
  br label %cleanup, !dbg !3703

if.end26:                                         ; preds = %if.end22
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %eh_edge.0.lcssa, i64 0, i32 1, !dbg !3704
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3704
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3706
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 2, !dbg !3706
  %19 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !3706
  %call27 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %18, %union.tree_node* %19) #6, !dbg !3706
  %cmp28 = icmp eq %struct.basic_block_def* %17, %call27, !dbg !3707
  br i1 %cmp28, label %cleanup, label %if.then29, !dbg !3708

if.then29:                                        ; preds = %if.end26
  %index30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !3709
  %20 = load i32, i32* %index30, align 8, !dbg !3709
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3711
  %index32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i64 0, i32 9, !dbg !3712
  %22 = load i32, i32* %index32, align 8, !dbg !3712
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i32 %20, i32 %22) #6, !dbg !3713
  br label %cleanup, !dbg !3714

cleanup:                                          ; preds = %if.then12, %if.end26, %if.then29, %if.then24, %if.then20, %if.then14, %if.then8
  %retval.0 = phi i8 [ 1, %if.then8 ], [ 1, %if.then14 ], [ 1, %if.then24 ], [ 1, %if.then29 ], [ 1, %if.then20 ], [ 0, %if.then12 ], [ 0, %if.end26 ], !dbg !3647
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3715
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3715
  ret i8 %retval.0, !dbg !3715
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !3716 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !3720, metadata !DIExpression()), !dbg !3722
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !3723
  store i32 0, i32* %index, align 8, !dbg !3724
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !3725
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !3726
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3727
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !3727
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !3727
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !3728 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !3734, metadata !DIExpression()), !dbg !3735
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3736
  %tobool = icmp eq i8 %call, 0, !dbg !3736
  br i1 %tobool, label %if.then, label %if.else, !dbg !3738

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3739
  br label %return, !dbg !3741

if.else:                                          ; preds = %entry
  br label %return, !dbg !3742

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !3744
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3744
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !3744
  ret i8 %retval.0, !dbg !3745
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !3746 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3751, metadata !DIExpression()), !dbg !3752
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !3753
  %0 = load i32, i32* %index, align 8, !dbg !3753
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !3753
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3753
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !3753
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3753
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3753

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !3753
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3753
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !3753
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3753
  br label %cond.end, !dbg !3753

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3753
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3753
  %cmp = icmp ult i32 %0, %call2, !dbg !3753
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !3753

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3753
  br label %cond.end5, !dbg !3753

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !3754
  %inc = add i32 %5, 1, !dbg !3754
  store i32 %inc, i32* %index, align 8, !dbg !3754
  ret void, !dbg !3755
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @verify_eh_dispatch_edge(%union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !3756 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp28 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3758, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i8 1, metadata !3763, metadata !DIExpression()), !dbg !3767
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3768
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3768
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !3769
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3769
  %call = tail call fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %stmt) #7, !dbg !3770
  %call1 = tail call %struct.eh_region_d* @get_eh_region_from_number(i32 %call) #6, !dbg !3771
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call1, metadata !3759, metadata !DIExpression()), !dbg !3767
  %call2 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !3772
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !3761, metadata !DIExpression()), !dbg !3767
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3773
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3773
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 1, !dbg !3773
  %call3 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3773
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3773
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 0, !dbg !3773
  store i32 %4, i32* %3, align 8, !dbg !3773
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3773
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call3, 1, !dbg !3773
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !3773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3773
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3773
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3775
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3775
  br label %for.cond, !dbg !3773

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !3777
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3777
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3765, metadata !DIExpression(DW_OP_deref)), !dbg !3767
  %call4 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !3777
  %tobool = icmp eq i8 %call4, 0, !dbg !3773
  br i1 %tobool, label %for.end, label %for.body, !dbg !3773

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3778
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !3765, metadata !DIExpression()), !dbg !3767
  %aux = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 3, !dbg !3778
  %12 = load i8*, i8** %aux, align 8, !dbg !3778
  %cmp = icmp eq i8* %12, null, !dbg !3778
  br i1 %cmp, label %for.inc, label %cond.true, !dbg !3778

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3978, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3778
  br label %for.inc, !dbg !3778

for.inc:                                          ; preds = %cond.true, %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3764, metadata !DIExpression(DW_OP_deref)), !dbg !3767
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3777
  br label %for.cond, !dbg !3777, !llvm.loop !3779

for.end:                                          ; preds = %for.cond
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 4, !dbg !3781
  %13 = load i32, i32* %type, align 4, !dbg !3781
  switch i32 %13, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb17
  ], !dbg !3782

sw.bb:                                            ; preds = %for.end
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 5, !dbg !3783
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !3786
  br label %for.cond5, !dbg !3787

for.cond5:                                        ; preds = %for.inc15, %sw.bb
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb ], [ %next_catch, %for.inc15 ]
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !3788
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !3760, metadata !DIExpression()), !dbg !3767
  %tobool6 = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !3789
  br i1 %tobool6, label %sw.epilog.loopexit, label %for.body7, !dbg !3789

for.body7:                                        ; preds = %for.cond5
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3790
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 4, !dbg !3790
  %15 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !3790
  %call8 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %14, %union.tree_node* %15) #6, !dbg !3790
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call8, metadata !3762, metadata !DIExpression()), !dbg !3767
  %call9 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %call2, %struct.basic_block_def* %call8) #6, !dbg !3793
  call void @llvm.dbg.value(metadata %struct.edge_def* %call9, metadata !3765, metadata !DIExpression()), !dbg !3767
  store %struct.edge_def* %call9, %struct.edge_def** %e, align 8, !dbg !3794
  call void @llvm.dbg.value(metadata %struct.edge_def* %call9, metadata !3765, metadata !DIExpression()), !dbg !3767
  %cmp10 = icmp eq %struct.edge_def* %call9, null, !dbg !3795
  br i1 %cmp10, label %if.then, label %if.end, !dbg !3797

if.then:                                          ; preds = %for.body7
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !3798
  %16 = load i32, i32* %index, align 8, !dbg !3798
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i32 %16) #6, !dbg !3800
  br label %cleanup, !dbg !3801

if.end:                                           ; preds = %for.body7
  %17 = ptrtoint %struct.edge_def* %call9 to i64, !dbg !3797
  call void @llvm.dbg.value(metadata %struct.edge_def* %call9, metadata !3765, metadata !DIExpression()), !dbg !3767
  %aux11 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call9, i64 0, i32 3, !dbg !3802
  %18 = bitcast i8** %aux11 to i64*, !dbg !3803
  store i64 %17, i64* %18, align 8, !dbg !3803
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 2, !dbg !3804
  %19 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !3804
  %cmp12 = icmp eq %union.tree_node* %19, null, !dbg !3806
  br i1 %cmp12, label %sw.epilog.loopexit, label %for.inc15, !dbg !3807

for.inc15:                                        ; preds = %if.end
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !3808
  br label %for.cond5, !dbg !3809, !llvm.loop !3810

sw.bb17:                                          ; preds = %for.end
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3812
  %label20 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 5, i32 0, i32 1, !dbg !3812
  %21 = load %union.tree_node*, %union.tree_node** %label20, align 8, !dbg !3812
  %call21 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %20, %union.tree_node* %21) #6, !dbg !3812
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call21, metadata !3762, metadata !DIExpression()), !dbg !3767
  %call22 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %call2, %struct.basic_block_def* %call21) #6, !dbg !3813
  call void @llvm.dbg.value(metadata %struct.edge_def* %call22, metadata !3765, metadata !DIExpression()), !dbg !3767
  store %struct.edge_def* %call22, %struct.edge_def** %e, align 8, !dbg !3814
  call void @llvm.dbg.value(metadata %struct.edge_def* %call22, metadata !3765, metadata !DIExpression()), !dbg !3767
  %cmp23 = icmp eq %struct.edge_def* %call22, null, !dbg !3815
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !3817

if.then24:                                        ; preds = %sw.bb17
  %index25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !3818
  %22 = load i32, i32* %index25, align 8, !dbg !3818
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i32 %22) #6, !dbg !3820
  br label %cleanup, !dbg !3821

if.end26:                                         ; preds = %sw.bb17
  %23 = ptrtoint %struct.edge_def* %call22 to i64, !dbg !3817
  call void @llvm.dbg.value(metadata %struct.edge_def* %call22, metadata !3765, metadata !DIExpression()), !dbg !3767
  %aux27 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call22, i64 0, i32 3, !dbg !3822
  %24 = bitcast i8** %aux27 to i64*, !dbg !3823
  store i64 %23, i64* %24, align 8, !dbg !3823
  br label %sw.epilog, !dbg !3824

sw.default:                                       ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 4015, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3825
  br label %sw.epilog, !dbg !3826

sw.epilog.loopexit:                               ; preds = %if.end, %for.cond5
  %want_fallthru.1.ph = phi i32 [ 0, %if.end ], [ 1, %for.cond5 ]
  br label %sw.epilog, !dbg !3827

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %if.end26
  %want_fallthru.1 = phi i32 [ 1, %sw.default ], [ 1, %if.end26 ], [ %want_fallthru.1.ph, %sw.epilog.loopexit ]
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !3766, metadata !DIExpression()), !dbg !3767
  %25 = bitcast %struct.edge_iterator* %tmp28 to i8*, !dbg !3827
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8, !dbg !3827
  %call30 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3827
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp28, i64 0, i32 0, !dbg !3827
  %27 = extractvalue { i32, %struct.VEC_edge_gc** } %call30, 0, !dbg !3827
  store i32 %27, i32* %26, align 8, !dbg !3827
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp28, i64 0, i32 1, !dbg !3827
  %29 = extractvalue { i32, %struct.VEC_edge_gc** } %call30, 1, !dbg !3827
  store %struct.VEC_edge_gc** %29, %struct.VEC_edge_gc*** %28, align 8, !dbg !3827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %25, i64 16, i1 false), !dbg !3827
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8, !dbg !3827
  br label %for.cond31, !dbg !3827

for.cond31:                                       ; preds = %for.inc49, %sw.epilog
  %fall_edge.0 = phi %struct.edge_def* [ null, %sw.epilog ], [ %fall_edge.1, %for.inc49 ], !dbg !3767
  call void @llvm.dbg.value(metadata %struct.edge_def* %fall_edge.0, metadata !3766, metadata !DIExpression()), !dbg !3767
  %30 = load i32, i32* %7, align 8, !dbg !3829
  %31 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3829
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3765, metadata !DIExpression(DW_OP_deref)), !dbg !3767
  %call32 = call fastcc zeroext i8 @ei_cond(i32 %30, %struct.VEC_edge_gc** %31, %struct.edge_def** nonnull %e) #7, !dbg !3829
  %tobool33 = icmp eq i8 %call32, 0, !dbg !3827
  br i1 %tobool33, label %for.end50, label %for.body34, !dbg !3827

for.body34:                                       ; preds = %for.cond31
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3831
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !3765, metadata !DIExpression()), !dbg !3767
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 7, !dbg !3834
  %33 = load i32, i32* %flags, align 8, !dbg !3834
  %and = and i32 %33, 1, !dbg !3835
  %tobool35 = icmp eq i32 %and, 0, !dbg !3835
  br i1 %tobool35, label %if.else, label %if.then36, !dbg !3836

if.then36:                                        ; preds = %for.body34
  %cmp37 = icmp eq %struct.edge_def* %fall_edge.0, null, !dbg !3837
  br i1 %cmp37, label %if.end40, label %if.then38, !dbg !3840

if.then38:                                        ; preds = %if.then36
  %index39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !3841
  %34 = load i32, i32* %index39, align 8, !dbg !3841
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i32 %34) #6, !dbg !3843
  br label %cleanup, !dbg !3844

if.end40:                                         ; preds = %if.then36
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !3765, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !3766, metadata !DIExpression()), !dbg !3767
  br label %for.inc49, !dbg !3845

if.else:                                          ; preds = %for.body34
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !3765, metadata !DIExpression()), !dbg !3767
  %aux41 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 3, !dbg !3846
  %35 = load i8*, i8** %aux41, align 8, !dbg !3846
  %tobool42 = icmp eq i8* %35, null, !dbg !3848
  br i1 %tobool42, label %if.else45, label %if.then43, !dbg !3849

if.then43:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !3765, metadata !DIExpression()), !dbg !3767
  store i8* null, i8** %aux41, align 8, !dbg !3850
  br label %for.inc49

if.else45:                                        ; preds = %if.else
  %index46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !3851
  %36 = load i32, i32* %index46, align 8, !dbg !3851
  call void (i8*, ...) @error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i32 %36) #6, !dbg !3853
  br label %cleanup, !dbg !3854

for.inc49:                                        ; preds = %if.end40, %if.then43
  %fall_edge.1 = phi %struct.edge_def* [ %32, %if.end40 ], [ %fall_edge.0, %if.then43 ], !dbg !3767
  call void @llvm.dbg.value(metadata %struct.edge_def* %fall_edge.1, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3764, metadata !DIExpression(DW_OP_deref)), !dbg !3767
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3829
  br label %for.cond31, !dbg !3829, !llvm.loop !3855

for.end50:                                        ; preds = %for.cond31
  %fall_edge.0.lcssa = phi %struct.edge_def* [ %fall_edge.0, %for.cond31 ], !dbg !3767
  call void @llvm.dbg.value(metadata %struct.edge_def* %fall_edge.0.lcssa, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata %struct.edge_def* %fall_edge.0.lcssa, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata %struct.edge_def* %fall_edge.0.lcssa, metadata !3766, metadata !DIExpression()), !dbg !3767
  %cmp51 = icmp ne %struct.edge_def* %fall_edge.0.lcssa, null, !dbg !3857
  %conv = zext i1 %cmp51 to i32, !dbg !3857
  %tobool53 = icmp eq i32 %want_fallthru.1, %conv, !dbg !3859
  br i1 %tobool53, label %cleanup, label %if.then54, !dbg !3860

if.then54:                                        ; preds = %for.end50
  %index55 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call2, i64 0, i32 9, !dbg !3861
  %37 = load i32, i32* %index55, align 8, !dbg !3861
  call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i32 %37) #6, !dbg !3863
  br label %cleanup, !dbg !3864

cleanup:                                          ; preds = %for.end50, %if.then54, %if.else45, %if.then38, %if.then24, %if.then
  %retval.0 = phi i8 [ 1, %if.then38 ], [ 1, %if.else45 ], [ 1, %if.then54 ], [ 1, %if.then24 ], [ 1, %if.then ], [ 0, %for.end50 ], !dbg !3767
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3865
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3865
  ret i8 %retval.0, !dbg !3865
}

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.gimple_seq_d* @gimple_body(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

declare dso_local void @free(i8*) #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %seq, %union.gimple_statement_d* %region) unnamed_addr #5 !dbg !3866 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !3870, metadata !DIExpression()), !dbg !3879
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %region, metadata !3871, metadata !DIExpression()), !dbg !3879
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3880
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3880
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3881
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3881
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %seq) #7, !dbg !3881
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3881
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3881
  br label %for.cond, !dbg !3883

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3872, metadata !DIExpression(DW_OP_deref)), !dbg !3879
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3884
  %tobool = icmp eq i8 %call, 0, !dbg !3886
  br i1 %tobool, label %for.body, label %for.end, !dbg !3887

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3872, metadata !DIExpression(DW_OP_deref)), !dbg !3879
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3888
  call fastcc void @collect_finally_tree(%union.gimple_statement_d* %call1, %union.gimple_statement_d* %region) #7, !dbg !3889
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3872, metadata !DIExpression(DW_OP_deref)), !dbg !3879
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3890
  br label %for.cond, !dbg !3891, !llvm.loop !3892

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3894
  ret void, !dbg !3894
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %seq) unnamed_addr #5 !dbg !3895 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !3899, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !3900, metadata !DIExpression()), !dbg !3902
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3903
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3903
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3904
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3904
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %seq) #7, !dbg !3904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3904
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3904
  br label %for.cond, !dbg !3906

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3901, metadata !DIExpression(DW_OP_deref)), !dbg !3902
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3907
  %tobool = icmp eq i8 %call, 0, !dbg !3909
  br i1 %tobool, label %for.body, label %for.end, !dbg !3910

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3901, metadata !DIExpression(DW_OP_deref)), !dbg !3902
  call fastcc void @lower_eh_constructs_2(%struct.leh_state* %state, %struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3911
  br label %for.cond, !dbg !3912, !llvm.loop !3913

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3915
  ret void, !dbg !3915
}

declare dso_local zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_seq(%struct.gimple_seq_d**, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local i32 @function_needs_eh_personality(%struct.function*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !3916 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !3920, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !3921, metadata !DIExpression()), !dbg !3923
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !3924
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !3925
  store %struct.gimple_seq_node_d* %call, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3926
  %seq1 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !3927
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !3928
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !3929
  br i1 %tobool, label %cond.end, label %land.lhs.true, !dbg !3930

land.lhs.true:                                    ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !3931
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3931
  %tobool4 = icmp eq %union.gimple_statement_d* %0, null, !dbg !3932
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !3933

cond.true:                                        ; preds = %land.lhs.true
  %call7 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %0) #7, !dbg !3934
  br label %cond.end, !dbg !3933

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.basic_block_def* [ %call7, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !3933
  %bb = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !3935
  store %struct.basic_block_def* %cond, %struct.basic_block_def** %bb, align 8, !dbg !3936
  ret void, !dbg !3937
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3938 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3942, metadata !DIExpression()), !dbg !3943
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3944
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3944
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3945
  %conv1 = zext i1 %cmp to i8, !dbg !3946
  ret i8 %conv1, !dbg !3947
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_finally_tree(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %region) unnamed_addr #5 !dbg !3948 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3952, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %region, metadata !3953, metadata !DIExpression()), !dbg !3955
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !3956
  switch i32 %call, label %sw.epilog [
    i32 4, label %sw.bb
    i32 17, label %sw.bb2
    i32 11, label %sw.bb13
    i32 12, label %sw.bb15
  ], !dbg !3957

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %stmt) #7, !dbg !3958
  %.cast1 = bitcast %union.tree_node* %call1 to %union.tree_node**, !dbg !3960
  tail call fastcc void @record_in_finally_tree(%union.tree_node** %.cast1, %union.gimple_statement_d* %region) #7, !dbg !3960
  br label %sw.epilog, !dbg !3961

sw.bb2:                                           ; preds = %entry
  %call3 = tail call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %stmt) #7, !dbg !3962
  %cmp = icmp eq i32 %call3, 2, !dbg !3964
  br i1 %cmp, label %if.then, label %if.else, !dbg !3965

if.then:                                          ; preds = %sw.bb2
  %.cast = bitcast %union.gimple_statement_d* %stmt to %union.tree_node**, !dbg !3966
  tail call fastcc void @record_in_finally_tree(%union.tree_node** %.cast, %union.gimple_statement_d* %region) #7, !dbg !3966
  %call5 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %stmt) #7, !dbg !3968
  tail call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %call5, %union.gimple_statement_d* %stmt) #7, !dbg !3969
  %call6 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %stmt) #7, !dbg !3970
  tail call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %call6, %union.gimple_statement_d* %region) #7, !dbg !3971
  br label %sw.epilog, !dbg !3972

if.else:                                          ; preds = %sw.bb2
  %call7 = tail call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %stmt) #7, !dbg !3973
  %cmp8 = icmp eq i32 %call7, 1, !dbg !3975
  br i1 %cmp8, label %if.then9, label %sw.epilog, !dbg !3976

if.then9:                                         ; preds = %if.else
  %call10 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %stmt) #7, !dbg !3977
  tail call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %call10, %union.gimple_statement_d* %region) #7, !dbg !3979
  %call11 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %stmt) #7, !dbg !3980
  tail call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %call11, %union.gimple_statement_d* %region) #7, !dbg !3981
  br label %sw.epilog, !dbg !3982

sw.bb13:                                          ; preds = %entry
  %call14 = tail call fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* %stmt) #7, !dbg !3983
  tail call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %call14, %union.gimple_statement_d* %region) #7, !dbg !3984
  br label %sw.epilog, !dbg !3985

sw.bb15:                                          ; preds = %entry
  %call16 = tail call fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %stmt) #7, !dbg !3986
  tail call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %call16, %union.gimple_statement_d* %region) #7, !dbg !3987
  br label %sw.epilog, !dbg !3988

sw.epilog:                                        ; preds = %entry, %if.then, %if.then9, %if.else, %sw.bb15, %sw.bb13, %sw.bb
  ret void, !dbg !3989
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3990 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3994, metadata !DIExpression()), !dbg !3995
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3996
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3996
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3997
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3997
  ret %union.gimple_statement_d* %1, !dbg !3998
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !3999 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4004, metadata !DIExpression()), !dbg !4005
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4006
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4006
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4007
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4007
  %2 = load i64, i64* %1, align 8, !dbg !4007
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4008
  store i64 %2, i64* %3, align 8, !dbg !4008
  ret void, !dbg !4009
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4010 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4017, metadata !DIExpression()), !dbg !4018
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4019
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4019

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4020
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4020
  br label %cond.end, !dbg !4019

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4019
  ret %struct.gimple_seq_node_d* %cond, !dbg !4021
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4022 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4026, metadata !DIExpression()), !dbg !4027
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4028
  ret %union.tree_node* %call, !dbg !4029
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_in_finally_tree(%union.tree_node** %child.coerce, %union.gimple_statement_d* %parent) unnamed_addr #5 !dbg !4030 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %parent, metadata !4035, metadata !DIExpression()), !dbg !4038
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !4039
  call void @llvm.dbg.value(metadata i8* %call, metadata !4036, metadata !DIExpression()), !dbg !4038
  %0 = bitcast i8* %call to i64*, !dbg !4040
  %.cast = ptrtoint %union.tree_node** %child.coerce to i64, !dbg !4040
  store i64 %.cast, i64* %0, align 8, !dbg !4040
  %parent2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4041
  %1 = bitcast i8* %parent2 to %union.gimple_statement_d**, !dbg !4041
  store %union.gimple_statement_d* %parent, %union.gimple_statement_d** %1, align 8, !dbg !4042
  %2 = load %struct.htab*, %struct.htab** @finally_tree, align 8, !dbg !4043
  %call3 = tail call i8** @htab_find_slot(%struct.htab* %2, i8* %call, i32 1) #6, !dbg !4044
  call void @llvm.dbg.value(metadata i8** %call3, metadata !4037, metadata !DIExpression()), !dbg !4038
  %3 = load i8*, i8** %call3, align 8, !dbg !4045
  %tobool = icmp eq i8* %3, null, !dbg !4045
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4045

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 235, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4045
  br label %cond.end, !dbg !4045

cond.end:                                         ; preds = %entry, %cond.true
  store i8* %call, i8** %call3, align 8, !dbg !4046
  ret void, !dbg !4047
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4048 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4052, metadata !DIExpression()), !dbg !4053
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !4054
  %bf.load = load i32, i32* %0, align 8, !dbg !4054
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4054
  %and = and i32 %bf.lshr, 3, !dbg !4055
  ret i32 %and, !dbg !4056
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4057 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4061, metadata !DIExpression()), !dbg !4062
  %eval = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !4063
  %0 = bitcast i32* %eval to %struct.gimple_seq_d**, !dbg !4063
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !4063
  ret %struct.gimple_seq_d* %1, !dbg !4064
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4065 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4067, metadata !DIExpression()), !dbg !4068
  %cleanup = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4069
  %0 = bitcast %union.tree_node** %cleanup to %struct.gimple_seq_d**, !dbg !4069
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !4069
  ret %struct.gimple_seq_d* %1, !dbg !4070
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4071 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4073, metadata !DIExpression()), !dbg !4074
  %handler = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4075
  %0 = bitcast %union.tree_node** %handler to %struct.gimple_seq_d**, !dbg !4075
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !4075
  ret %struct.gimple_seq_d* %1, !dbg !4076
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4077 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4079, metadata !DIExpression()), !dbg !4080
  %failure = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4081
  %0 = bitcast %union.tree_node** %failure to %struct.gimple_seq_d**, !dbg !4081
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %0, align 8, !dbg !4081
  ret %struct.gimple_seq_d* %1, !dbg !4082
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4083 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4087, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 %i, metadata !4088, metadata !DIExpression()), !dbg !4089
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4090
  %tobool = icmp eq i8 %call, 0, !dbg !4090
  br i1 %tobool, label %return, label %if.then, !dbg !4092

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4093
  %idxprom = zext i32 %i to i64, !dbg !4093
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4093
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4093
  br label %return, !dbg !4095

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4096
  ret %union.tree_node* %retval.0, !dbg !4097
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4098 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4100, metadata !DIExpression()), !dbg !4101
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4102
  %cmp = icmp eq i32 %call, 0, !dbg !4103
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4104

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4105
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4106
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4107
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4108 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4112, metadata !DIExpression()), !dbg !4114
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4115
  %idxprom = zext i32 %call to i64, !dbg !4116
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4116
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4116
  call void @llvm.dbg.value(metadata i64 %0, metadata !4113, metadata !DIExpression()), !dbg !4114
  %cmp = icmp eq i64 %0, 0, !dbg !4117
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4117

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4117
  br label %cond.end, !dbg !4117

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4118
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4119
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4120
  ret %union.tree_node** %2, !dbg !4121
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4122 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4126, metadata !DIExpression()), !dbg !4127
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4128
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4129
  ret i32 %call1, !dbg !4130
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4131 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4135, metadata !DIExpression()), !dbg !4136
  %idxprom = zext i32 %code to i64, !dbg !4137
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4137
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4137
  ret i32 %0, !dbg !4138
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lower_eh_constructs_2(%struct.leh_state* %state, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !4139 {
entry:
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !4143, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4144, metadata !DIExpression()), !dbg !4164
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4165
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4147, metadata !DIExpression()), !dbg !4164
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !4166
  switch i32 %call1, label %sw.epilog110 [
    i32 8, label %sw.bb
    i32 6, label %sw.bb22
    i32 1, label %sw.bb82
    i32 3, label %sw.bb82
    i32 9, label %sw.bb82
    i32 17, label %sw.bb84
  ], !dbg !4167

sw.bb:                                            ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %call) #7, !dbg !4168
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4148, metadata !DIExpression()), !dbg !4169
  %tobool = icmp eq %union.tree_node* %call2, null, !dbg !4170
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !4171

land.lhs.true:                                    ; preds = %sw.bb
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 5, !dbg !4172
  %bf.load = load i32, i32* %built_in_class, align 8, !dbg !4172
  %bf.clear = and i32 %bf.load, 6144, !dbg !4172
  %cmp = icmp eq i32 %bf.clear, 6144, !dbg !4173
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4174

if.then:                                          ; preds = %land.lhs.true
  %bf.clear5 = and i32 %bf.load, 2047, !dbg !4175
  switch i32 %bf.clear5, label %cleanup [
    i32 552, label %sw.bb6
    i32 553, label %sw.bb12
    i32 554, label %sw.bb18
  ], !dbg !4176

sw.bb6:                                           ; preds = %if.then
  %ehp_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 1, !dbg !4177
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %ehp_region, align 8, !dbg !4177
  %tobool7 = icmp eq %struct.eh_region_d* %0, null, !dbg !4178
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !4179

if.then8:                                         ; preds = %sw.bb6
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %0, i64 0, i32 3, !dbg !4180
  %1 = load i32, i32* %index, align 8, !dbg !4180
  %conv = sext i32 %1 to i64, !dbg !4181
  %call10 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #6, !dbg !4182
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !4153, metadata !DIExpression()), !dbg !4183
  tail call fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %call, i32 0, %union.tree_node* %call10) #7, !dbg !4184
  br label %cleanup, !dbg !4185

if.else:                                          ; preds = %sw.bb6
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !4186
  %call11 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %2, i64 0) #6, !dbg !4188
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !4151, metadata !DIExpression()), !dbg !4169
  br label %do_replace, !dbg !4189

sw.bb12:                                          ; preds = %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4190
  %3 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !4190
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !4190
  %type14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !4190
  %5 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !4190
  %call15 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %5, i64 0) #6, !dbg !4191
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !4151, metadata !DIExpression()), !dbg !4169
  br label %do_replace, !dbg !4192

do_replace:                                       ; preds = %sw.bb12, %if.else
  %rhs.0 = phi %union.tree_node* [ %call15, %sw.bb12 ], [ %call11, %if.else ], !dbg !4193
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !4151, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.label(metadata !4163), !dbg !4194
  %call16 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call) #7, !dbg !4195
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4152, metadata !DIExpression()), !dbg !4169
  %call17 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call16, %union.tree_node* %rhs.0) #6, !dbg !4196
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call17, metadata !4146, metadata !DIExpression()), !dbg !4164
  tail call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call17, i32 1) #6, !dbg !4197
  br label %sw.bb18, !dbg !4197

sw.bb18:                                          ; preds = %if.then, %do_replace
  tail call void @gsi_remove(%struct.gimple_stmt_iterator* %gsi, i8 zeroext 1) #6, !dbg !4198
  br label %cleanup, !dbg !4199

cleanup:                                          ; preds = %sw.bb, %land.lhs.true, %if.then, %if.then8, %sw.bb18
  %cleanup.dest.slot.0 = phi i1 [ false, %sw.bb18 ], [ true, %if.then8 ], [ true, %if.then ], [ true, %land.lhs.true ], [ true, %sw.bb ]
  br i1 %cleanup.dest.slot.0, label %sw.bb22, label %cleanup.cont115

sw.bb22:                                          ; preds = %cleanup, %entry
  %call23 = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %call) #7, !dbg !4200
  %tobool25 = icmp eq i8 %call23, 0, !dbg !4200
  br i1 %tobool25, label %if.end72, label %land.lhs.true26, !dbg !4201

land.lhs.true26:                                  ; preds = %sw.bb22
  %call27 = tail call fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %call) #7, !dbg !4202
  %tobool29 = icmp eq i8 %call27, 0, !dbg !4202
  br i1 %tobool29, label %if.end72, label %land.lhs.true30, !dbg !4203

land.lhs.true30:                                  ; preds = %land.lhs.true26
  %call31 = tail call zeroext i8 @gimple_stmt_may_fallthru(%union.gimple_statement_d* %call) #6, !dbg !4204
  %tobool33 = icmp eq i8 %call31, 0, !dbg !4204
  br i1 %tobool33, label %if.end72, label %land.lhs.true34, !dbg !4205

land.lhs.true34:                                  ; preds = %land.lhs.true30
  %call35 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call) #6, !dbg !4206
  %call36 = tail call zeroext i8 @tree_could_throw_p(%union.tree_node* %call35) #7, !dbg !4207
  %tobool37 = icmp eq i8 %call36, 0, !dbg !4207
  br i1 %tobool37, label %land.lhs.true38, label %if.end72, !dbg !4208

land.lhs.true38:                                  ; preds = %land.lhs.true34
  %call39 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call) #6, !dbg !4209
  %type41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4209
  %6 = load %union.tree_node*, %union.tree_node** %type41, align 8, !dbg !4209
  %call42 = tail call zeroext i8 @is_gimple_reg_type(%union.tree_node* %6) #6, !dbg !4210
  %tobool44 = icmp eq i8 %call42, 0, !dbg !4210
  br i1 %tobool44, label %if.end72, label %if.then45, !dbg !4211

if.then45:                                        ; preds = %land.lhs.true38
  %call47 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call) #6, !dbg !4212
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !4158, metadata !DIExpression()), !dbg !4213
  %type49 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4214
  %7 = load %union.tree_node*, %union.tree_node** %type49, align 8, !dbg !4214
  %call50 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %7, i8* null) #6, !dbg !4215
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !4161, metadata !DIExpression()), !dbg !4213
  %call51 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call47, %union.tree_node* %call50) #6, !dbg !4216
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call51, metadata !4162, metadata !DIExpression()), !dbg !4213
  %call52 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !4217
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call51, i32 %call52) #7, !dbg !4218
  %call53 = tail call fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %call) #7, !dbg !4219
  tail call fastcc void @gimple_set_block(%union.gimple_statement_d* %call51, %union.tree_node* %call53) #7, !dbg !4220
  tail call void @gimple_set_lhs(%union.gimple_statement_d* %call, %union.tree_node* %call50) #6, !dbg !4221
  %type55 = getelementptr inbounds %union.tree_node, %union.tree_node* %call50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4222
  %8 = bitcast %union.tree_node** %type55 to i64**, !dbg !4222
  %9 = load i64*, i64** %8, align 8, !dbg !4222
  %bf.load56 = load i64, i64* %9, align 8, !dbg !4222
  %bf.cast1 = and i64 %bf.load56, 65535, !dbg !4224
  %cmp58 = icmp eq i64 %bf.cast1, 13, !dbg !4224
  br i1 %cmp58, label %if.then68, label %lor.lhs.false, !dbg !4225

lor.lhs.false:                                    ; preds = %if.then45
  %cmp66 = icmp eq i64 %bf.cast1, 14, !dbg !4226
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !4227

if.then68:                                        ; preds = %lor.lhs.false, %if.then45
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4228
  %10 = bitcast i40* %gimple_reg_flag to i64*, !dbg !4228
  %bf.load69 = load i64, i64* %10, align 8, !dbg !4229
  %bf.set = or i64 %bf.load69, 134217728, !dbg !4229
  store i64 %bf.set, i64* %10, align 8, !dbg !4229
  br label %if.end71, !dbg !4228

if.end71:                                         ; preds = %if.then68, %lor.lhs.false
  tail call void @gsi_insert_after(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call51, i32 1) #6, !dbg !4230
  br label %if.end72, !dbg !4231

if.end72:                                         ; preds = %land.lhs.true38, %land.lhs.true34, %land.lhs.true30, %land.lhs.true26, %sw.bb22, %if.end71
  %cur_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 0, !dbg !4232
  %11 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4232
  %tobool73 = icmp eq %struct.eh_region_d* %11, null, !dbg !4234
  br i1 %tobool73, label %sw.epilog110, label %land.lhs.true74, !dbg !4235

land.lhs.true74:                                  ; preds = %if.end72
  %call75 = tail call zeroext i8 @stmt_could_throw_p(%union.gimple_statement_d* %call) #7, !dbg !4236
  %tobool77 = icmp eq i8 %call75, 0, !dbg !4236
  br i1 %tobool77, label %sw.epilog110, label %if.then78, !dbg !4237

if.then78:                                        ; preds = %land.lhs.true74
  %12 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4238
  tail call fastcc void @record_stmt_eh_region(%struct.eh_region_d* %12, %union.gimple_statement_d* %call) #7, !dbg !4240
  %13 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4241
  tail call fastcc void @note_eh_region_may_contain_throw(%struct.eh_region_d* %13) #7, !dbg !4242
  br label %sw.epilog110, !dbg !4243

sw.bb82:                                          ; preds = %entry, %entry, %entry
  tail call fastcc void @maybe_record_in_goto_queue(%struct.leh_state* %state, %union.gimple_statement_d* %call) #7, !dbg !4244
  br label %sw.epilog110, !dbg !4245

sw.bb84:                                          ; preds = %entry
  %call85 = tail call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %call) #7, !dbg !4246
  %cmp86 = icmp eq i32 %call85, 2, !dbg !4248
  br i1 %cmp86, label %if.then88, label %if.else90, !dbg !4249

if.then88:                                        ; preds = %sw.bb84
  %call89 = tail call fastcc %struct.gimple_seq_d* @lower_try_finally(%struct.leh_state* %state, %union.gimple_statement_d* %call) #7, !dbg !4250
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call89, metadata !4145, metadata !DIExpression()), !dbg !4164
  br label %if.end108, !dbg !4251

if.else90:                                        ; preds = %sw.bb84
  %call91 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %call) #7, !dbg !4252
  %call92 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call91) #7, !dbg !4254
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call92, metadata !4146, metadata !DIExpression()), !dbg !4164
  %tobool93 = icmp eq %union.gimple_statement_d* %call92, null, !dbg !4255
  br i1 %tobool93, label %if.then94, label %if.else96, !dbg !4257

if.then94:                                        ; preds = %if.else90
  %call95 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %call) #7, !dbg !4258
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call95, metadata !4145, metadata !DIExpression()), !dbg !4164
  tail call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call95) #7, !dbg !4260
  br label %if.end108, !dbg !4261

if.else96:                                        ; preds = %if.else90
  %call97 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call92) #7, !dbg !4262
  switch i32 %call97, label %sw.default104 [
    i32 11, label %sw.bb98
    i32 12, label %sw.bb100
    i32 13, label %sw.bb102
  ], !dbg !4263

sw.bb98:                                          ; preds = %if.else96
  %call99 = tail call fastcc %struct.gimple_seq_d* @lower_catch(%struct.leh_state* %state, %union.gimple_statement_d* %call) #7, !dbg !4264
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call99, metadata !4145, metadata !DIExpression()), !dbg !4164
  br label %if.end108, !dbg !4266

sw.bb100:                                         ; preds = %if.else96
  %call101 = tail call fastcc %struct.gimple_seq_d* @lower_eh_filter(%struct.leh_state* %state, %union.gimple_statement_d* %call) #7, !dbg !4267
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call101, metadata !4145, metadata !DIExpression()), !dbg !4164
  br label %if.end108, !dbg !4268

sw.bb102:                                         ; preds = %if.else96
  %call103 = tail call fastcc %struct.gimple_seq_d* @lower_eh_must_not_throw(%struct.leh_state* %state, %union.gimple_statement_d* %call) #7, !dbg !4269
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call103, metadata !4145, metadata !DIExpression()), !dbg !4164
  br label %if.end108, !dbg !4270

sw.default104:                                    ; preds = %if.else96
  %call105 = tail call fastcc %struct.gimple_seq_d* @lower_cleanup(%struct.leh_state* %state, %union.gimple_statement_d* %call) #7, !dbg !4271
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call105, metadata !4145, metadata !DIExpression()), !dbg !4164
  br label %if.end108, !dbg !4272

if.end108:                                        ; preds = %if.then94, %sw.default104, %sw.bb102, %sw.bb100, %sw.bb98, %if.then88
  %replace.2 = phi %struct.gimple_seq_d* [ %call89, %if.then88 ], [ %call95, %if.then94 ], [ %call105, %sw.default104 ], [ %call103, %sw.bb102 ], [ %call101, %sw.bb100 ], [ %call99, %sw.bb98 ], !dbg !4273
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %replace.2, metadata !4145, metadata !DIExpression()), !dbg !4164
  tail call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* %gsi, %struct.gimple_seq_d* %replace.2, i32 1) #6, !dbg !4274
  tail call void @gsi_remove(%struct.gimple_stmt_iterator* %gsi, i8 zeroext 1) #6, !dbg !4275
  br label %cleanup.cont115, !dbg !4276

sw.epilog110:                                     ; preds = %land.lhs.true74, %if.end72, %entry, %if.then78, %sw.bb82
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %gsi) #7, !dbg !4277
  br label %cleanup.cont115, !dbg !4278

cleanup.cont115:                                  ; preds = %if.end108, %sw.epilog110, %cleanup
  ret void, !dbg !4278
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4279 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4281, metadata !DIExpression()), !dbg !4283
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !4284
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4282, metadata !DIExpression()), !dbg !4283
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4285
  %bf.load = load i64, i64* %0, align 8, !dbg !4285
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4287
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !4287
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4288

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4289
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4289
  br label %cleanup, !dbg !4290

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !4283
  ret %union.tree_node* %retval.0, !dbg !4291
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_arg(%union.gimple_statement_d* %gs, i32 %index, %union.tree_node* %arg) unnamed_addr #0 !dbg !4292 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4296, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.value(metadata i32 0, metadata !4297, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !4298, metadata !DIExpression()), !dbg !4299
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 3, %union.tree_node* %arg) #7, !dbg !4300
  ret void, !dbg !4301
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4302 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4304, metadata !DIExpression()), !dbg !4305
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4306
  ret %union.tree_node* %call, !dbg !4307
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_lhs(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4308 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4310, metadata !DIExpression()), !dbg !4311
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %stmt) #7, !dbg !4312
  %tobool = icmp eq i8 %call, 0, !dbg !4312
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4313

lor.rhs:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #7, !dbg !4314
  %tobool3 = icmp eq i8 %call1, 0, !dbg !4314
  br i1 %tobool3, label %lor.end, label %land.rhs, !dbg !4315

land.rhs:                                         ; preds = %lor.rhs
  %call4 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !4316
  %cmp = icmp ne %union.tree_node* %call4, null, !dbg !4317
  %phitmp = zext i1 %cmp to i8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry, %land.rhs
  %0 = phi i8 [ 1, %entry ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4318
}

declare dso_local zeroext i8 @gimple_stmt_may_fallthru(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_reg_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !4319 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4323, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i32 %location, metadata !4324, metadata !DIExpression()), !dbg !4325
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !4326
  store i32 %location, i32* %location1, align 8, !dbg !4327
  ret void, !dbg !4328
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4329 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4333, metadata !DIExpression()), !dbg !4334
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !4335
  %0 = load i32, i32* %location, align 8, !dbg !4335
  ret i32 %0, !dbg !4336
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_block(%union.gimple_statement_d* %g, %union.tree_node* %block) unnamed_addr #0 !dbg !4337 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4341, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !4342, metadata !DIExpression()), !dbg !4343
  %block1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !4344
  store %union.tree_node* %block, %union.tree_node** %block1, align 8, !dbg !4345
  ret void, !dbg !4346
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_block(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4347 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4349, metadata !DIExpression()), !dbg !4350
  %block = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !4351
  %0 = load %union.tree_node*, %union.tree_node** %block, align 8, !dbg !4351
  ret %union.tree_node* %0, !dbg !4352
}

declare dso_local void @gimple_set_lhs(%union.gimple_statement_d*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @record_stmt_eh_region(%struct.eh_region_d* %region, %union.gimple_statement_d* %t) unnamed_addr #5 !dbg !4353 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !4357, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %t, metadata !4358, metadata !DIExpression()), !dbg !4362
  %cmp = icmp eq %struct.eh_region_d* %region, null, !dbg !4363
  br i1 %cmp, label %if.end10, label %if.end, !dbg !4365

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 4, !dbg !4366
  %0 = load i32, i32* %type, align 4, !dbg !4366
  %cmp1 = icmp eq i32 %0, 3, !dbg !4367
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4368

if.then2:                                         ; preds = %if.end
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4369
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 3, !dbg !4370
  %2 = load i32, i32* %index, align 8, !dbg !4370
  %sub = sub nsw i32 0, %2, !dbg !4371
  tail call void @add_stmt_to_eh_lp_fn(%struct.function* %1, %union.gimple_statement_d* %t, i32 %sub) #7, !dbg !4372
  br label %if.end10, !dbg !4372

if.else:                                          ; preds = %if.end
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 6, !dbg !4373
  %3 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %landing_pads, align 8, !dbg !4373
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %3, metadata !4359, metadata !DIExpression()), !dbg !4374
  %cmp3 = icmp eq %struct.eh_landing_pad_d* %3, null, !dbg !4375
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !4377

if.then4:                                         ; preds = %if.else
  %call = tail call %struct.eh_landing_pad_d* @gen_eh_landing_pad(%struct.eh_region_d* nonnull %region) #6, !dbg !4378
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call, metadata !4359, metadata !DIExpression()), !dbg !4374
  br label %if.end7, !dbg !4379

if.else5:                                         ; preds = %if.else
  %next_lp = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %3, i64 0, i32 0, !dbg !4380
  %4 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %next_lp, align 8, !dbg !4380
  %cmp6 = icmp eq %struct.eh_landing_pad_d* %4, null, !dbg !4380
  br i1 %cmp6, label %if.end7, label %cond.true, !dbg !4380

cond.true:                                        ; preds = %if.else5
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 138, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4380
  br label %if.end7, !dbg !4380

if.end7:                                          ; preds = %cond.true, %if.else5, %if.then4
  %lp.0 = phi %struct.eh_landing_pad_d* [ %call, %if.then4 ], [ %3, %if.else5 ], [ %3, %cond.true ], !dbg !4374
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.0, metadata !4359, metadata !DIExpression()), !dbg !4374
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4381
  %index9 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 4, !dbg !4382
  %6 = load i32, i32* %index9, align 8, !dbg !4382
  tail call void @add_stmt_to_eh_lp_fn(%struct.function* %5, %union.gimple_statement_d* %t, i32 %6) #7, !dbg !4383
  br label %if.end10

if.end10:                                         ; preds = %entry, %if.end7, %if.then2
  ret void, !dbg !4384
}

; Function Attrs: nounwind uwtable
define internal fastcc void @note_eh_region_may_contain_throw(%struct.eh_region_d* %region) unnamed_addr #5 !dbg !4385 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !4389, metadata !DIExpression()), !dbg !4390
  br label %while.cond, !dbg !4391

while.cond:                                       ; preds = %while.body, %entry
  %region.addr.0 = phi %struct.eh_region_d* [ %region, %entry ], [ %4, %while.body ]
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region.addr.0, metadata !4389, metadata !DIExpression()), !dbg !4390
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @eh_region_may_contain_throw_map, align 8, !dbg !4392
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region.addr.0, i64 0, i32 3, !dbg !4393
  %1 = load i32, i32* %index, align 8, !dbg !4393
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !4394
  %tobool = icmp eq i32 %call, 0, !dbg !4395
  br i1 %tobool, label %while.body, label %while.end, !dbg !4391

while.body:                                       ; preds = %while.cond
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @eh_region_may_contain_throw_map, align 8, !dbg !4396
  %3 = load i32, i32* %index, align 8, !dbg !4398
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %3) #6, !dbg !4399
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region.addr.0, i64 0, i32 0, !dbg !4400
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !4400
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %4, metadata !4389, metadata !DIExpression()), !dbg !4390
  %cmp = icmp eq %struct.eh_region_d* %4, null, !dbg !4401
  br i1 %cmp, label %while.end, label %while.cond, !dbg !4403, !llvm.loop !4404

while.end:                                        ; preds = %while.body, %while.cond
  ret void, !dbg !4406
}

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_record_in_goto_queue(%struct.leh_state* %state, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !4407 {
entry:
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !4411, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4412, metadata !DIExpression()), !dbg !4415
  %tf1 = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 2, !dbg !4416
  %0 = load %struct.leh_tf_state*, %struct.leh_tf_state** %tf1, align 8, !dbg !4416
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %0, metadata !4413, metadata !DIExpression()), !dbg !4415
  %tobool = icmp eq %struct.leh_tf_state* %0, null, !dbg !4417
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4419

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !4420
  switch i32 %call, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb8
    i32 9, label %sw.bb11
  ], !dbg !4421

sw.bb:                                            ; preds = %if.end
  %call2 = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %stmt, i32 2) #7, !dbg !4422
  %call3 = tail call fastcc %union.tree_node* @gimple_cond_true_label(%union.gimple_statement_d* %stmt) #7, !dbg !4424
  tail call fastcc void @record_in_goto_queue_label(%struct.leh_tf_state* nonnull %0, %union.tree_node** %call2, %union.tree_node* %call3) #7, !dbg !4425
  %call4 = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %stmt, i32 3) #7, !dbg !4426
  %call6 = tail call fastcc %union.tree_node* @gimple_cond_false_label(%union.gimple_statement_d* %stmt) #7, !dbg !4427
  tail call fastcc void @record_in_goto_queue_label(%struct.leh_tf_state* nonnull %0, %union.tree_node** %call4, %union.tree_node* %call6) #7, !dbg !4428
  br label %cleanup, !dbg !4429

sw.bb8:                                           ; preds = %if.end
  %call9 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %stmt) #7, !dbg !4430
  %.cast1 = bitcast %union.gimple_statement_d* %stmt to %union.tree_node**, !dbg !4431
  tail call fastcc void @record_in_goto_queue_label(%struct.leh_tf_state* nonnull %0, %union.tree_node** %.cast1, %union.tree_node* %call9) #7, !dbg !4431
  br label %cleanup, !dbg !4432

sw.bb11:                                          ; preds = %if.end
  %may_return = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %0, i64 0, i32 12, !dbg !4433
  store i8 1, i8* %may_return, align 1, !dbg !4434
  %.cast = bitcast %union.gimple_statement_d* %stmt to %union.tree_node**, !dbg !4435
  tail call fastcc void @record_in_goto_queue(%struct.leh_tf_state* nonnull %0, %union.tree_node** %.cast, i32 -1, i8 zeroext 0) #7, !dbg !4435
  br label %cleanup, !dbg !4436

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 683, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4437
  br label %cleanup, !dbg !4438

cleanup:                                          ; preds = %entry, %sw.bb, %sw.bb8, %sw.bb11, %sw.default
  ret void, !dbg !4439
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @lower_try_finally(%struct.leh_state* %state, %union.gimple_statement_d* %tp) unnamed_addr #5 !dbg !4440 {
entry:
  %this_tf = alloca %struct.leh_tf_state, align 8
  %this_state = alloca %struct.leh_state, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !4444, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %tp, metadata !4445, metadata !DIExpression()), !dbg !4458
  %0 = bitcast %struct.leh_tf_state* %this_tf to i8*, !dbg !4459
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %0) #8, !dbg !4459
  %1 = bitcast %struct.leh_state* %this_state to i8*, !dbg !4460
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4460
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 96) #6, !dbg !4461
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 0, !dbg !4462
  store %union.gimple_statement_d* %tp, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !4463
  %top_p = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 1, !dbg !4464
  store %union.gimple_statement_d* %tp, %union.gimple_statement_d** %top_p, align 8, !dbg !4465
  %outer = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 3, !dbg !4466
  store %struct.leh_state* %state, %struct.leh_state** %outer, align 8, !dbg !4467
  %.b1 = load i1, i1* @using_eh_for_cleanups_p, align 4, !dbg !4468
  br i1 %.b1, label %if.then, label %if.else, !dbg !4470

if.then:                                          ; preds = %entry
  %cur_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 0, !dbg !4471
  %2 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4471
  %call1 = call %struct.eh_region_d* @gen_eh_region_cleanup(%struct.eh_region_d* %2) #6, !dbg !4472
  %region = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 4, !dbg !4473
  store %struct.eh_region_d* %call1, %struct.eh_region_d** %region, align 8, !dbg !4474
  %3 = ptrtoint %struct.eh_region_d* %call1 to i64, !dbg !4475
  br label %if.end, !dbg !4475

if.else:                                          ; preds = %entry
  %region2 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 4, !dbg !4476
  store %struct.eh_region_d* null, %struct.eh_region_d** %region2, align 8, !dbg !4477
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = phi i64 [ 0, %if.else ], [ %3, %if.then ], !dbg !4478
  %5 = bitcast %struct.leh_state* %this_state to i64*, !dbg !4479
  store i64 %4, i64* %5, align 8, !dbg !4479
  %ehp_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 1, !dbg !4480
  %6 = bitcast %struct.eh_region_d** %ehp_region to i64*, !dbg !4480
  %7 = load i64, i64* %6, align 8, !dbg !4480
  %ehp_region5 = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 1, !dbg !4481
  %8 = bitcast %struct.eh_region_d** %ehp_region5 to i64*, !dbg !4482
  store i64 %7, i64* %8, align 8, !dbg !4482
  %tf = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 2, !dbg !4483
  store %struct.leh_tf_state* %this_tf, %struct.leh_tf_state** %tf, align 8, !dbg !4484
  %9 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !4485
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !4449, metadata !DIExpression()), !dbg !4458
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !4486
  %call6 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4487
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4447, metadata !DIExpression(DW_OP_deref)), !dbg !4458
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %this_state, %struct.gimple_seq_d* %call6) #7, !dbg !4488
  %call7 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4489
  %call8 = call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* %call7) #6, !dbg !4490
  %may_fallthru = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 11, !dbg !4491
  store i8 %call8, i8* %may_fallthru, align 8, !dbg !4492
  %.b = load i1, i1* @using_eh_for_cleanups_p, align 4, !dbg !4493
  br i1 %.b, label %if.then10, label %if.end.if.end13_crit_edge, !dbg !4495

if.end.if.end13_crit_edge:                        ; preds = %if.end
  %may_throw14.phi.trans.insert = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 13, !dbg !4496
  %.pre = load i8, i8* %may_throw14.phi.trans.insert, align 2, !dbg !4498
  br label %if.end13, !dbg !4495

if.then10:                                        ; preds = %if.end
  %region3 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 4, !dbg !4478
  %10 = load %struct.eh_region_d*, %struct.eh_region_d** %region3, align 8, !dbg !4499
  %call12 = call fastcc zeroext i8 @eh_region_may_contain_throw(%struct.eh_region_d* %10) #7, !dbg !4500
  %may_throw = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 13, !dbg !4501
  store i8 %call12, i8* %may_throw, align 2, !dbg !4502
  br label %if.end13, !dbg !4503

if.end13:                                         ; preds = %if.end.if.end13_crit_edge, %if.then10
  %11 = phi i8 [ %.pre, %if.end.if.end13_crit_edge ], [ %call12, %if.then10 ], !dbg !4498
  %may_throw14 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 13, !dbg !4498
  %tobool15 = icmp eq i8 %11, 0, !dbg !4504
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !4505

if.then16:                                        ; preds = %if.end13
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %this_tf, metadata !4446, metadata !DIExpression(DW_OP_deref)), !dbg !4458
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4447, metadata !DIExpression(DW_OP_deref)), !dbg !4458
  call fastcc void @honor_protect_cleanup_actions(%struct.leh_state* %state, %struct.leh_state* nonnull %this_state, %struct.leh_tf_state* nonnull %this_tf) #7, !dbg !4506
  br label %if.end17, !dbg !4506

if.end17:                                         ; preds = %if.end13, %if.then16
  %dest_array = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 9, !dbg !4507
  %12 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !4507
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %12, i64 0, i32 0, !dbg !4507
  %call20 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %call20, metadata !4448, metadata !DIExpression()), !dbg !4458
  %13 = load i8, i8* %may_fallthru, align 8, !dbg !4508
  %conv = zext i8 %13 to i32, !dbg !4509
  %add = add nsw i32 %call20, %conv, !dbg !4510
  call void @llvm.dbg.value(metadata i32 %add, metadata !4448, metadata !DIExpression()), !dbg !4458
  %may_return = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 12, !dbg !4511
  %14 = load i8, i8* %may_return, align 1, !dbg !4511
  %conv22 = zext i8 %14 to i32, !dbg !4512
  %add23 = add nsw i32 %add, %conv22, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %add23, metadata !4448, metadata !DIExpression()), !dbg !4458
  %15 = load i8, i8* %may_throw14, align 2, !dbg !4514
  %conv25 = zext i8 %15 to i32, !dbg !4515
  %add26 = add nsw i32 %add23, %conv25, !dbg !4516
  call void @llvm.dbg.value(metadata i32 %add26, metadata !4448, metadata !DIExpression()), !dbg !4458
  %cmp = icmp eq i32 %add26, 0, !dbg !4517
  br i1 %cmp, label %if.then28, label %if.else30, !dbg !4519

if.then28:                                        ; preds = %if.end17
  %top_p_seq = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 2, !dbg !4520
  %call29 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4522
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %top_p_seq, %struct.gimple_seq_d* %call29) #6, !dbg !4523
  call fastcc void @gimple_try_set_cleanup(%union.gimple_statement_d* %tp, %struct.gimple_seq_d* null) #7, !dbg !4524
  br label %if.end48, !dbg !4525

if.else30:                                        ; preds = %if.end17
  %call31 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %tp) #7, !dbg !4526
  %call32 = call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* %call31) #6, !dbg !4528
  %tobool33 = icmp eq i8 %call32, 0, !dbg !4528
  br i1 %tobool33, label %if.then34, label %if.else35, !dbg !4529

if.then34:                                        ; preds = %if.else30
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %this_tf, metadata !4446, metadata !DIExpression(DW_OP_deref)), !dbg !4458
  call fastcc void @lower_try_finally_nofallthru(%struct.leh_state* %state, %struct.leh_tf_state* nonnull %this_tf) #7, !dbg !4530
  br label %if.end48, !dbg !4530

if.else35:                                        ; preds = %if.else30
  %cmp36 = icmp eq i32 %add26, 1, !dbg !4531
  br i1 %cmp36, label %if.then38, label %if.else39, !dbg !4533

if.then38:                                        ; preds = %if.else35
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %this_tf, metadata !4446, metadata !DIExpression(DW_OP_deref)), !dbg !4458
  call fastcc void @lower_try_finally_onedest(%struct.leh_state* %state, %struct.leh_tf_state* nonnull %this_tf) #7, !dbg !4534
  br label %if.end48, !dbg !4534

if.else39:                                        ; preds = %if.else35
  %call40 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %tp) #7, !dbg !4535
  %call41 = call fastcc zeroext i8 @decide_copy_try_finally(i32 %add26, %struct.gimple_seq_d* %call40) #7, !dbg !4537
  %tobool42 = icmp eq i8 %call41, 0, !dbg !4537
  br i1 %tobool42, label %if.else44, label %if.then43, !dbg !4538

if.then43:                                        ; preds = %if.else39
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %this_tf, metadata !4446, metadata !DIExpression(DW_OP_deref)), !dbg !4458
  call fastcc void @lower_try_finally_copy(%struct.leh_state* %state, %struct.leh_tf_state* nonnull %this_tf) #7, !dbg !4539
  br label %if.end48, !dbg !4539

if.else44:                                        ; preds = %if.else39
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %this_tf, metadata !4446, metadata !DIExpression(DW_OP_deref)), !dbg !4458
  call fastcc void @lower_try_finally_switch(%struct.leh_state* %state, %struct.leh_tf_state* nonnull %this_tf) #7, !dbg !4540
  br label %if.end48

if.end48:                                         ; preds = %if.then34, %if.then43, %if.else44, %if.then38, %if.then28
  %fallthru_label = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 10, !dbg !4541
  %16 = load %union.tree_node*, %union.tree_node** %fallthru_label, align 8, !dbg !4541
  %tobool49 = icmp eq %union.tree_node* %16, null, !dbg !4542
  br i1 %tobool49, label %if.end54, label %if.then50, !dbg !4543

if.then50:                                        ; preds = %if.end48
  %call52 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* nonnull %16) #6, !dbg !4544
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call52, metadata !4450, metadata !DIExpression()), !dbg !4545
  %top_p_seq53 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 2, !dbg !4546
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %top_p_seq53, %union.gimple_statement_d* %call52) #6, !dbg !4547
  br label %if.end54, !dbg !4548

if.end54:                                         ; preds = %if.end48, %if.then50
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %dest_array) #7, !dbg !4549
  %goto_queue = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 5, !dbg !4550
  %17 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !4550
  %tobool56 = icmp eq %struct.goto_queue_node* %17, null, !dbg !4552
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !4553

if.then57:                                        ; preds = %if.end54
  %18 = bitcast %struct.goto_queue_node* %17 to i8*, !dbg !4553
  call void @free(i8* nonnull %18) #6, !dbg !4554
  br label %if.end59, !dbg !4554

if.end59:                                         ; preds = %if.end54, %if.then57
  %goto_queue_map = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 8, !dbg !4555
  %19 = load %struct.pointer_map_t*, %struct.pointer_map_t** %goto_queue_map, align 8, !dbg !4555
  %tobool60 = icmp eq %struct.pointer_map_t* %19, null, !dbg !4557
  br i1 %tobool60, label %if.end63, label %if.then61, !dbg !4558

if.then61:                                        ; preds = %if.end59
  call void @pointer_map_destroy(%struct.pointer_map_t* nonnull %19) #6, !dbg !4559
  br label %if.end63, !dbg !4559

if.end63:                                         ; preds = %if.end59, %if.then61
  %tobool64 = icmp eq %struct.gimple_seq_d* %9, null, !dbg !4560
  br i1 %tobool64, label %if.end71, label %if.then65, !dbg !4561

if.then65:                                        ; preds = %if.end63
  %20 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !4562
  %cmp66 = icmp eq %struct.gimple_seq_d* %20, null, !dbg !4563
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !4564

if.then68:                                        ; preds = %if.then65
  store %struct.gimple_seq_d* %9, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !4565
  br label %if.end71, !dbg !4566

if.else69:                                        ; preds = %if.then65
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %20, metadata !4453, metadata !DIExpression()), !dbg !4567
  store %struct.gimple_seq_d* %9, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !4568
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull @eh_seq, %struct.gimple_seq_d* nonnull %20) #6, !dbg !4569
  br label %if.end71

if.end71:                                         ; preds = %if.end63, %if.then68, %if.else69
  %top_p_seq72 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %this_tf, i64 0, i32 2, !dbg !4570
  %21 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %top_p_seq72, align 8, !dbg !4570
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !4571
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %0) #8, !dbg !4571
  ret %struct.gimple_seq_d* %21, !dbg !4572
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4573 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4577, metadata !DIExpression()), !dbg !4579
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) #7, !dbg !4580
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !4578, metadata !DIExpression()), !dbg !4579
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !4581
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4581

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !4582
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4582
  br label %cond.end, !dbg !4581

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4581
  ret %union.gimple_statement_d* %cond, !dbg !4583
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @lower_catch(%struct.leh_state* %state, %union.gimple_statement_d* %tp) unnamed_addr #5 !dbg !4584 {
entry:
  %this_state = alloca %struct.leh_state, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %new_seq = alloca %struct.gimple_seq_d*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !4586, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %tp, metadata !4587, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !4588, metadata !DIExpression()), !dbg !4601
  %0 = bitcast %struct.leh_state* %this_state to i8*, !dbg !4602
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4602
  %1 = bitcast %struct.leh_state* %state to i8*, !dbg !4603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !4603
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4604
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4604
  %3 = bitcast %struct.gimple_seq_d** %new_seq to i8*, !dbg !4605
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4605
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %tp) #7, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %call, metadata !4594, metadata !DIExpression()), !dbg !4601
  %4 = load i32, i32* @flag_exceptions, align 4, !dbg !4607
  %tobool = icmp eq i32 %4, 0, !dbg !4607
  br i1 %tobool, label %if.end, label %if.then, !dbg !4609

if.then:                                          ; preds = %entry
  %cur_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 0, !dbg !4610
  %5 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4610
  %call1 = tail call %struct.eh_region_d* @gen_eh_region_try(%struct.eh_region_d* %5) #6, !dbg !4612
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call1, metadata !4588, metadata !DIExpression()), !dbg !4601
  %cur_region2 = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 0, !dbg !4613
  store %struct.eh_region_d* %call1, %struct.eh_region_d** %cur_region2, align 8, !dbg !4614
  br label %if.end, !dbg !4615

if.end:                                           ; preds = %entry, %if.then
  %try_region.0 = phi %struct.eh_region_d* [ %call1, %if.then ], [ null, %entry ], !dbg !4601
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %try_region.0, metadata !4588, metadata !DIExpression()), !dbg !4601
  %call3 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4616
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4589, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %this_state, %struct.gimple_seq_d* %call3) #7, !dbg !4617
  %call4 = call fastcc zeroext i8 @eh_region_may_contain_throw(%struct.eh_region_d* %try_region.0) #7, !dbg !4618
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4618
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4620

if.then6:                                         ; preds = %if.end
  %call7 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4621
  br label %cleanup36, !dbg !4622

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4592, metadata !DIExpression()), !dbg !4601
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_seq, align 8, !dbg !4623
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4592, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call fastcc void @emit_eh_dispatch(%struct.gimple_seq_d** nonnull %new_seq, %struct.eh_region_d* %try_region.0) #7, !dbg !4624
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4592, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call fastcc void @emit_resx(%struct.gimple_seq_d** nonnull %new_seq, %struct.eh_region_d* %try_region.0) #7, !dbg !4625
  %6 = bitcast %struct.leh_state* %state to i64*, !dbg !4626
  %7 = load i64, i64* %6, align 8, !dbg !4626
  %8 = bitcast %struct.leh_state* %this_state to i64*, !dbg !4627
  store i64 %7, i64* %8, align 8, !dbg !4627
  %ehp_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 1, !dbg !4628
  store %struct.eh_region_d* %try_region.0, %struct.eh_region_d** %ehp_region, align 8, !dbg !4629
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4591, metadata !DIExpression()), !dbg !4601
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4630
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4630
  %call11 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %tp) #7, !dbg !4631
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %call11) #7, !dbg !4630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !4630
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4630
  br label %for.cond, !dbg !4632

for.cond:                                         ; preds = %for.inc, %if.end8
  %out_label.0 = phi %union.tree_node* [ null, %if.end8 ], [ %out_label.2, %for.inc ], !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %out_label.0, metadata !4591, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4590, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  %call12 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4634
  %tobool13 = icmp eq i8 %call12, 0, !dbg !4635
  br i1 %tobool13, label %for.body, label %for.end, !dbg !4636

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4590, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  %call14 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !4637
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !4599, metadata !DIExpression()), !dbg !4638
  %call15 = call fastcc %union.tree_node* @gimple_catch_types(%union.gimple_statement_d* %call14) #7, !dbg !4639
  %call16 = call %struct.eh_catch_d* @gen_eh_region_catch(%struct.eh_region_d* %try_region.0, %union.tree_node* %call15) #6, !dbg !4640
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %call16, metadata !4595, metadata !DIExpression()), !dbg !4638
  %call17 = call fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* %call14) #7, !dbg !4641
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call17, metadata !4600, metadata !DIExpression()), !dbg !4638
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4589, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %this_state, %struct.gimple_seq_d* %call17) #7, !dbg !4642
  %call18 = call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !4643
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %call16, i64 0, i32 4, !dbg !4644
  store %union.tree_node* %call18, %union.tree_node** %label, align 8, !dbg !4645
  %call20 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call18) #6, !dbg !4646
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !4593, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4592, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_seq, %union.gimple_statement_d* %call20) #6, !dbg !4647
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4592, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %new_seq, %struct.gimple_seq_d* %call17) #6, !dbg !4648
  %10 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_seq, align 8, !dbg !4649
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %10, metadata !4592, metadata !DIExpression()), !dbg !4601
  %call21 = call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* %10) #6, !dbg !4651
  %tobool22 = icmp eq i8 %call21, 0, !dbg !4651
  br i1 %tobool22, label %if.end29, label %if.then23, !dbg !4652

if.then23:                                        ; preds = %for.body
  %tobool24 = icmp eq %union.tree_node* %out_label.0, null, !dbg !4653
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !4656

if.then25:                                        ; preds = %if.then23
  %call26 = call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !4657
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !4591, metadata !DIExpression()), !dbg !4601
  br label %if.end27, !dbg !4658

if.end27:                                         ; preds = %if.then23, %if.then25
  %out_label.1 = phi %union.tree_node* [ %out_label.0, %if.then23 ], [ %call26, %if.then25 ], !dbg !4601
  call void @llvm.dbg.value(metadata %union.tree_node* %out_label.1, metadata !4591, metadata !DIExpression()), !dbg !4601
  %call28 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %out_label.1) #6, !dbg !4659
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call28, metadata !4593, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4592, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_seq, %union.gimple_statement_d* %call28) #6, !dbg !4660
  br label %if.end29, !dbg !4661

if.end29:                                         ; preds = %for.body, %if.end27
  %out_label.2 = phi %union.tree_node* [ %out_label.1, %if.end27 ], [ %out_label.0, %for.body ], !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %out_label.2, metadata !4591, metadata !DIExpression()), !dbg !4601
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %call16, i64 0, i32 2, !dbg !4662
  %11 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !4662
  %tobool30 = icmp eq %union.tree_node* %11, null, !dbg !4664
  br i1 %tobool30, label %for.end, label %for.inc

for.inc:                                          ; preds = %if.end29
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4590, metadata !DIExpression(DW_OP_deref)), !dbg !4601
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !4665
  br label %for.cond, !dbg !4666, !llvm.loop !4667

for.end:                                          ; preds = %if.end29, %for.cond
  %out_label.3 = phi %union.tree_node* [ %out_label.2, %if.end29 ], [ %out_label.0, %for.cond ], !dbg !4633
  call void @llvm.dbg.value(metadata %union.tree_node* %out_label.3, metadata !4591, metadata !DIExpression()), !dbg !4601
  %12 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_seq, align 8, !dbg !4669
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %12, metadata !4592, metadata !DIExpression()), !dbg !4601
  call fastcc void @gimple_try_set_cleanup(%union.gimple_statement_d* %tp, %struct.gimple_seq_d* %12) #7, !dbg !4670
  %call35 = call fastcc %struct.gimple_seq_d* @frob_into_branch_around(%union.gimple_statement_d* %tp, %struct.eh_region_d* %try_region.0, %union.tree_node* %out_label.3) #7, !dbg !4671
  br label %cleanup36, !dbg !4672

cleanup36:                                        ; preds = %for.end, %if.then6
  %retval.0 = phi %struct.gimple_seq_d* [ %call35, %for.end ], [ %call7, %if.then6 ], !dbg !4601
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4673
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4673
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4673
  ret %struct.gimple_seq_d* %retval.0, !dbg !4673
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @lower_eh_filter(%struct.leh_state* %state, %union.gimple_statement_d* %tp) unnamed_addr #5 !dbg !4674 {
entry:
  %this_state = alloca %struct.leh_state, align 8
  %new_seq = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !4676, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %tp, metadata !4677, metadata !DIExpression()), !dbg !4683
  %0 = bitcast %struct.leh_state* %this_state to i8*, !dbg !4684
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4684
  %1 = bitcast %struct.leh_state* %state to i8*, !dbg !4685
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !4685
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !4679, metadata !DIExpression()), !dbg !4683
  %2 = bitcast %struct.gimple_seq_d** %new_seq to i8*, !dbg !4686
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4686
  %call = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %tp) #7, !dbg !4687
  %call1 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call) #7, !dbg !4688
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4680, metadata !DIExpression()), !dbg !4683
  %3 = load i32, i32* @flag_exceptions, align 4, !dbg !4689
  %tobool = icmp eq i32 %3, 0, !dbg !4689
  br i1 %tobool, label %if.end, label %if.then, !dbg !4691

if.then:                                          ; preds = %entry
  %cur_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 0, !dbg !4692
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4692
  %call2 = tail call fastcc %union.tree_node* @gimple_eh_filter_types(%union.gimple_statement_d* %call1) #7, !dbg !4694
  %call3 = tail call %struct.eh_region_d* @gen_eh_region_allowed(%struct.eh_region_d* %4, %union.tree_node* %call2) #6, !dbg !4695
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call3, metadata !4679, metadata !DIExpression()), !dbg !4683
  %cur_region4 = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 0, !dbg !4696
  store %struct.eh_region_d* %call3, %struct.eh_region_d** %cur_region4, align 8, !dbg !4697
  br label %if.end, !dbg !4698

if.end:                                           ; preds = %entry, %if.then
  %this_region.0 = phi %struct.eh_region_d* [ %call3, %if.then ], [ null, %entry ], !dbg !4683
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %this_region.0, metadata !4679, metadata !DIExpression()), !dbg !4683
  %call5 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4699
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4678, metadata !DIExpression(DW_OP_deref)), !dbg !4683
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %this_state, %struct.gimple_seq_d* %call5) #7, !dbg !4700
  %call6 = call fastcc zeroext i8 @eh_region_may_contain_throw(%struct.eh_region_d* %this_region.0) #7, !dbg !4701
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4701
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !4703

if.then8:                                         ; preds = %if.end
  %call9 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4704
  br label %cleanup, !dbg !4705

if.end10:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !4682, metadata !DIExpression()), !dbg !4683
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_seq, align 8, !dbg !4706
  %5 = bitcast %struct.leh_state* %state to i64*, !dbg !4707
  %6 = load i64, i64* %5, align 8, !dbg !4707
  %7 = bitcast %struct.leh_state* %this_state to i64*, !dbg !4708
  store i64 %6, i64* %7, align 8, !dbg !4708
  %ehp_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 1, !dbg !4709
  store %struct.eh_region_d* %this_region.0, %struct.eh_region_d** %ehp_region, align 8, !dbg !4710
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4682, metadata !DIExpression(DW_OP_deref)), !dbg !4683
  call fastcc void @emit_eh_dispatch(%struct.gimple_seq_d** nonnull %new_seq, %struct.eh_region_d* %this_region.0) #7, !dbg !4711
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4682, metadata !DIExpression(DW_OP_deref)), !dbg !4683
  call fastcc void @emit_resx(%struct.gimple_seq_d** nonnull %new_seq, %struct.eh_region_d* %this_region.0) #7, !dbg !4712
  %call13 = call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !4713
  %label = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %this_region.0, i64 0, i32 5, i32 0, i32 1, !dbg !4714
  store %union.tree_node* %call13, %union.tree_node** %label, align 8, !dbg !4715
  %call17 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call13) #6, !dbg !4716
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call17, metadata !4681, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4682, metadata !DIExpression(DW_OP_deref)), !dbg !4683
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_seq, %union.gimple_statement_d* %call17) #6, !dbg !4717
  %call18 = call fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %call1) #7, !dbg !4718
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4678, metadata !DIExpression(DW_OP_deref)), !dbg !4683
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %this_state, %struct.gimple_seq_d* %call18) #7, !dbg !4719
  %call19 = call fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %call1) #7, !dbg !4720
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_seq, metadata !4682, metadata !DIExpression(DW_OP_deref)), !dbg !4683
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %new_seq, %struct.gimple_seq_d* %call19) #6, !dbg !4721
  %8 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_seq, align 8, !dbg !4722
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %8, metadata !4682, metadata !DIExpression()), !dbg !4683
  call fastcc void @gimple_try_set_cleanup(%union.gimple_statement_d* %tp, %struct.gimple_seq_d* %8) #7, !dbg !4723
  %call20 = call fastcc %struct.gimple_seq_d* @frob_into_branch_around(%union.gimple_statement_d* %tp, %struct.eh_region_d* %this_region.0, %union.tree_node* null) #7, !dbg !4724
  br label %cleanup, !dbg !4725

cleanup:                                          ; preds = %if.end10, %if.then8
  %retval.0 = phi %struct.gimple_seq_d* [ %call20, %if.end10 ], [ %call9, %if.then8 ], !dbg !4683
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4726
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4726
  ret %struct.gimple_seq_d* %retval.0, !dbg !4726
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @lower_eh_must_not_throw(%struct.leh_state* %state, %union.gimple_statement_d* %tp) unnamed_addr #5 !dbg !4727 {
entry:
  %this_state = alloca %struct.leh_state, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !4729, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %tp, metadata !4730, metadata !DIExpression()), !dbg !4736
  %0 = bitcast %struct.leh_state* %this_state to i8*, !dbg !4737
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4737
  %1 = bitcast %struct.leh_state* %state to i8*, !dbg !4738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !4738
  %2 = load i32, i32* @flag_exceptions, align 4, !dbg !4739
  %tobool = icmp eq i32 %2, 0, !dbg !4739
  br i1 %tobool, label %if.end, label %if.then, !dbg !4740

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %tp) #7, !dbg !4741
  %call1 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* %call) #7, !dbg !4742
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4732, metadata !DIExpression()), !dbg !4743
  %cur_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 0, !dbg !4744
  %3 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4744
  %call2 = tail call %struct.eh_region_d* @gen_eh_region_must_not_throw(%struct.eh_region_d* %3) #6, !dbg !4745
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call2, metadata !4735, metadata !DIExpression()), !dbg !4743
  %call3 = tail call fastcc %union.tree_node* @gimple_eh_must_not_throw_fndecl(%union.gimple_statement_d* %call1) #7, !dbg !4746
  %failure_decl = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call2, i64 0, i32 5, i32 0, i32 0, !dbg !4747
  store %union.tree_node* %call3, %union.tree_node** %failure_decl, align 8, !dbg !4748
  %call4 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %tp) #7, !dbg !4749
  %failure_loc = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call2, i64 0, i32 5, i32 0, i32 1, !dbg !4750
  %4 = bitcast %union.tree_node** %failure_loc to i32*, !dbg !4750
  store i32 %call4, i32* %4, align 8, !dbg !4751
  %5 = bitcast %union.tree_node** %failure_decl to i64**, !dbg !4752
  %6 = load i64*, i64** %5, align 8, !dbg !4752
  %bf.load = load i64, i64* %6, align 8, !dbg !4753
  %bf.set = or i64 %bf.load, 16777216, !dbg !4753
  store i64 %bf.set, i64* %6, align 8, !dbg !4753
  %cur_region10 = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 0, !dbg !4754
  store %struct.eh_region_d* %call2, %struct.eh_region_d** %cur_region10, align 8, !dbg !4755
  br label %if.end, !dbg !4756

if.end:                                           ; preds = %entry, %if.then
  %call11 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4757
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4731, metadata !DIExpression(DW_OP_deref)), !dbg !4736
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %this_state, %struct.gimple_seq_d* %call11) #7, !dbg !4758
  %call12 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4759
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4760
  ret %struct.gimple_seq_d* %call12, !dbg !4761
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @lower_cleanup(%struct.leh_state* %state, %union.gimple_statement_d* %tp) unnamed_addr #5 !dbg !4762 {
entry:
  %this_state = alloca %struct.leh_state, align 8
  %fake_tf = alloca %struct.leh_tf_state, align 8
  %result = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !4764, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %tp, metadata !4765, metadata !DIExpression()), !dbg !4775
  %0 = bitcast %struct.leh_state* %this_state to i8*, !dbg !4776
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4776
  %1 = bitcast %struct.leh_state* %state to i8*, !dbg !4777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !4777
  call void @llvm.dbg.value(metadata %struct.eh_region_d* null, metadata !4767, metadata !DIExpression()), !dbg !4775
  %2 = bitcast %struct.leh_tf_state* %fake_tf to i8*, !dbg !4778
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %2) #8, !dbg !4778
  %3 = bitcast %struct.gimple_seq_d** %result to i8*, !dbg !4779
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4779
  %4 = load i32, i32* @flag_exceptions, align 4, !dbg !4780
  %tobool = icmp eq i32 %4, 0, !dbg !4780
  br i1 %tobool, label %if.end, label %if.then, !dbg !4782

if.then:                                          ; preds = %entry
  %cur_region = getelementptr inbounds %struct.leh_state, %struct.leh_state* %state, i64 0, i32 0, !dbg !4783
  %5 = load %struct.eh_region_d*, %struct.eh_region_d** %cur_region, align 8, !dbg !4783
  %call = tail call %struct.eh_region_d* @gen_eh_region_cleanup(%struct.eh_region_d* %5) #6, !dbg !4785
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call, metadata !4767, metadata !DIExpression()), !dbg !4775
  %cur_region1 = getelementptr inbounds %struct.leh_state, %struct.leh_state* %this_state, i64 0, i32 0, !dbg !4786
  store %struct.eh_region_d* %call, %struct.eh_region_d** %cur_region1, align 8, !dbg !4787
  br label %if.end, !dbg !4788

if.end:                                           ; preds = %entry, %if.then
  %this_region.0 = phi %struct.eh_region_d* [ %call, %if.then ], [ null, %entry ], !dbg !4775
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %this_region.0, metadata !4767, metadata !DIExpression()), !dbg !4775
  %call2 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !4766, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* nonnull %this_state, %struct.gimple_seq_d* %call2) #7, !dbg !4790
  %call3 = call fastcc zeroext i8 @eh_region_may_contain_throw(%struct.eh_region_d* %this_region.0) #7, !dbg !4791
  %tobool4 = icmp eq i8 %call3, 0, !dbg !4791
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !4793

if.then5:                                         ; preds = %if.end
  %call6 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4794
  br label %cleanup, !dbg !4795

if.end7:                                          ; preds = %if.end
  %call8 = call i8* @memset(i8* nonnull %2, i32 0, i64 96) #6, !dbg !4796
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 0, !dbg !4797
  store %union.gimple_statement_d* %tp, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !4798
  %top_p = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 1, !dbg !4799
  store %union.gimple_statement_d* %tp, %union.gimple_statement_d** %top_p, align 8, !dbg !4800
  %outer = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 3, !dbg !4801
  store %struct.leh_state* %state, %struct.leh_state** %outer, align 8, !dbg !4802
  %region = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 4, !dbg !4803
  store %struct.eh_region_d* %this_region.0, %struct.eh_region_d** %region, align 8, !dbg !4804
  %call9 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4805
  %call10 = call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* %call9) #6, !dbg !4806
  %may_fallthru = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 11, !dbg !4807
  store i8 %call10, i8* %may_fallthru, align 8, !dbg !4808
  %may_throw = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 13, !dbg !4809
  store i8 1, i8* %may_throw, align 2, !dbg !4810
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %fake_tf, metadata !4768, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  call fastcc void @honor_protect_cleanup_actions(%struct.leh_state* %state, %struct.leh_state* null, %struct.leh_tf_state* nonnull %fake_tf) #7, !dbg !4811
  %6 = load i8, i8* %may_throw, align 2, !dbg !4812
  %tobool12 = icmp eq i8 %6, 0, !dbg !4813
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !4814

if.then13:                                        ; preds = %if.end7
  %call14 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %tp) #7, !dbg !4815
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call14) #7, !dbg !4817
  %fallthru_label = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 10, !dbg !4818
  %7 = load %union.tree_node*, %union.tree_node** %fallthru_label, align 8, !dbg !4818
  %call15 = call fastcc %struct.gimple_seq_d* @frob_into_branch_around(%union.gimple_statement_d* %tp, %struct.eh_region_d* %this_region.0, %union.tree_node* %7) #7, !dbg !4819
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call15, metadata !4769, metadata !DIExpression()), !dbg !4775
  store %struct.gimple_seq_d* %call15, %struct.gimple_seq_d** %result, align 8, !dbg !4820
  br label %if.end23, !dbg !4821

if.else:                                          ; preds = %if.end7
  %call16 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !4822
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call16, metadata !4769, metadata !DIExpression()), !dbg !4775
  store %struct.gimple_seq_d* %call16, %struct.gimple_seq_d** %result, align 8, !dbg !4823
  %fallthru_label17 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %fake_tf, i64 0, i32 10, !dbg !4824
  %8 = load %union.tree_node*, %union.tree_node** %fallthru_label17, align 8, !dbg !4824
  %tobool18 = icmp eq %union.tree_node* %8, null, !dbg !4825
  br i1 %tobool18, label %if.end23, label %if.then19, !dbg !4826

if.then19:                                        ; preds = %if.else
  %call21 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* nonnull %8) #6, !dbg !4827
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call21, metadata !4770, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %result, metadata !4769, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %result, %union.gimple_statement_d* %call21) #6, !dbg !4829
  %.pre = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %result, align 8, !dbg !4830
  br label %if.end23, !dbg !4831

if.end23:                                         ; preds = %if.else, %if.then19, %if.then13
  %9 = phi %struct.gimple_seq_d* [ %call16, %if.else ], [ %.pre, %if.then19 ], [ %call15, %if.then13 ], !dbg !4830
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !4769, metadata !DIExpression()), !dbg !4775
  br label %cleanup, !dbg !4832

cleanup:                                          ; preds = %if.end23, %if.then5
  %retval.0 = phi %struct.gimple_seq_d* [ %9, %if.end23 ], [ %call6, %if.then5 ], !dbg !4775
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4833
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %2) #8, !dbg !4833
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4833
  ret %struct.gimple_seq_d* %retval.0, !dbg !4833
}

declare dso_local void @gsi_insert_seq_before(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4834 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4836, metadata !DIExpression()), !dbg !4837
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4838
  ret %union.tree_node* %call, !dbg !4839
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !4840 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4842, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.value(metadata i32 %i, metadata !4843, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4844, metadata !DIExpression()), !dbg !4845
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4846
  %tobool = icmp eq i8 %call, 0, !dbg !4846
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !4846

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !4846
  %cmp = icmp ugt i32 %call1, %i, !dbg !4846
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4846

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4846
  br label %cond.end, !dbg !4846

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4847
  %idxprom = zext i32 %i to i64, !dbg !4847
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !4847
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !4848
  ret void, !dbg !4849
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4850 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4854, metadata !DIExpression()), !dbg !4855
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !4856
  %0 = load i32, i32* %num_ops, align 4, !dbg !4856
  ret i32 %0, !dbg !4857
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4858 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4860, metadata !DIExpression()), !dbg !4861
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4862
  %cmp = icmp eq i32 %call, 6, !dbg !4863
  %conv1 = zext i1 %cmp to i8, !dbg !4862
  ret i8 %conv1, !dbg !4864
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4865 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4867, metadata !DIExpression()), !dbg !4868
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4869
  %cmp = icmp eq i32 %call, 8, !dbg !4870
  %conv1 = zext i1 %cmp to i8, !dbg !4869
  ret i8 %conv1, !dbg !4871
}

declare dso_local %struct.eh_landing_pad_d* @gen_eh_landing_pad(%struct.eh_region_d*) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4872 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4876, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.value(metadata i32 %i, metadata !4877, metadata !DIExpression()), !dbg !4878
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4879
  %tobool = icmp eq i8 %call, 0, !dbg !4879
  br i1 %tobool, label %return, label %if.then, !dbg !4881

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4882
  %idx.ext = zext i32 %i to i64, !dbg !4884
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idx.ext, !dbg !4884
  br label %return, !dbg !4885

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !4886
  ret %union.tree_node** %retval.0, !dbg !4887
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_in_goto_queue_label(%struct.leh_tf_state* %tf, %union.tree_node** %stmt.coerce, %union.tree_node* %label) unnamed_addr #5 !dbg !4888 {
entry:
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !4892, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !4894, metadata !DIExpression()), !dbg !4901
  %tobool = icmp eq %union.tree_node* %label, null, !dbg !4902
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4904

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4905
  %bf.load = load i64, i64* %0, align 8, !dbg !4905
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4907
  %cmp = icmp eq i64 %bf.cast1, 30, !dbg !4907
  br i1 %cmp, label %if.end2, label %cleanup, !dbg !4908

if.end2:                                          ; preds = %if.end
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 0, !dbg !4909
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !4909
  %.cast = bitcast %union.tree_node* %label to %union.tree_node**, !dbg !4911
  %call = tail call fastcc zeroext i8 @outside_finally_tree(%union.tree_node** nonnull %.cast, %union.gimple_statement_d* %1) #7, !dbg !4911
  %tobool4 = icmp eq i8 %call, 0, !dbg !4911
  br i1 %tobool4, label %cleanup, label %if.end6, !dbg !4912

if.end6:                                          ; preds = %if.end2
  %dest_array = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 9, !dbg !4913
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !4913
  %tobool7 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !4914
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !4915

if.then8:                                         ; preds = %if.end6
  %call9 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 10) #7, !dbg !4916
  store %struct.VEC_tree_heap* %call9, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !4918
  %tobool12 = icmp eq %struct.VEC_tree_heap* %call9, null, !dbg !4919
  br i1 %tobool12, label %cond.end, label %cond.true, !dbg !4919

cond.true:                                        ; preds = %if.then8
  %base14 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call9, i64 0, i32 0, !dbg !4919
  br label %cond.end, !dbg !4919

cond.end:                                         ; preds = %if.then8, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base14, %cond.true ], [ null, %if.then8 ], !dbg !4919
  %call15 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* nonnull %label) #7, !dbg !4919
  call void @llvm.dbg.value(metadata i32 0, metadata !4895, metadata !DIExpression()), !dbg !4901
  br label %if.end43, !dbg !4920

if.else:                                          ; preds = %if.end6
  br i1 false, label %if.else.cond.end22_crit_edge, label %cond.true18, !dbg !4921

if.else.cond.end22_crit_edge:                     ; preds = %if.else
  br label %cond.end22, !dbg !4921

cond.true18:                                      ; preds = %if.else
  %base20 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !4921
  br label %cond.end22, !dbg !4921

cond.end22:                                       ; preds = %if.else.cond.end22_crit_edge, %cond.true18
  %cond23 = phi %struct.VEC_tree_base* [ %base20, %cond.true18 ], [ undef, %if.else.cond.end22_crit_edge ], !dbg !4921
  %call24 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond23) #7, !dbg !4921
  call void @llvm.dbg.value(metadata i32 %call24, metadata !4898, metadata !DIExpression()), !dbg !4922
  call void @llvm.dbg.value(metadata i32 0, metadata !4895, metadata !DIExpression()), !dbg !4901
  br label %for.cond, !dbg !4923

for.cond:                                         ; preds = %for.inc, %cond.end22
  %index.0 = phi i32 [ 0, %cond.end22 ], [ %inc, %for.inc ], !dbg !4925
  call void @llvm.dbg.value(metadata i32 %index.0, metadata !4895, metadata !DIExpression()), !dbg !4901
  %cmp25 = icmp slt i32 %index.0, %call24, !dbg !4926
  br i1 %cmp25, label %for.body, label %for.end, !dbg !4928

for.body:                                         ; preds = %for.cond
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !4929
  %tobool27 = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !4929
  br i1 %tobool27, label %cond.end32, label %cond.true28, !dbg !4929

cond.true28:                                      ; preds = %for.body
  %base30 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !4929
  br label %cond.end32, !dbg !4929

cond.end32:                                       ; preds = %for.body, %cond.true28
  %cond33 = phi %struct.VEC_tree_base* [ %base30, %cond.true28 ], [ null, %for.body ], !dbg !4929
  %call34 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond33, i32 %index.0) #7, !dbg !4929
  %cmp35 = icmp eq %union.tree_node* %call34, %label, !dbg !4931
  br i1 %cmp35, label %for.end, label %for.inc, !dbg !4932

for.inc:                                          ; preds = %cond.end32
  %inc = add nuw nsw i32 %index.0, 1, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4895, metadata !DIExpression()), !dbg !4901
  br label %for.cond, !dbg !4934, !llvm.loop !4935

for.end:                                          ; preds = %cond.end32, %for.cond
  %index.0.lcssa = phi i32 [ %index.0, %cond.end32 ], [ %index.0, %for.cond ], !dbg !4925
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !4895, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !4895, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !4895, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !4895, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !4895, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !4895, metadata !DIExpression()), !dbg !4901
  %cmp38 = icmp eq i32 %index.0.lcssa, %call24, !dbg !4937
  br i1 %cmp38, label %if.then39, label %if.end43, !dbg !4939

if.then39:                                        ; preds = %for.end
  %call41 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %dest_array, %union.tree_node* nonnull %label) #7, !dbg !4940
  br label %if.end43, !dbg !4940

if.end43:                                         ; preds = %for.end, %if.then39, %cond.end
  %index.1 = phi i32 [ 0, %cond.end ], [ %call24, %if.then39 ], [ %index.0.lcssa, %for.end ], !dbg !4941
  call void @llvm.dbg.value(metadata i32 %index.1, metadata !4895, metadata !DIExpression()), !dbg !4901
  tail call fastcc void @record_in_goto_queue(%struct.leh_tf_state* %tf, %union.tree_node** %stmt.coerce, i32 %index.1, i8 zeroext 1) #7, !dbg !4942
  br label %cleanup, !dbg !4943

cleanup:                                          ; preds = %if.end2, %if.end, %entry, %if.end43
  ret void, !dbg !4943
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_true_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4944 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4946, metadata !DIExpression()), !dbg !4947
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !4948
  ret %union.tree_node* %call, !dbg !4949
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_false_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4950 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4952, metadata !DIExpression()), !dbg !4953
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 3) #7, !dbg !4954
  ret %union.tree_node* %call, !dbg !4955
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4956 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4958, metadata !DIExpression()), !dbg !4959
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4960
  ret %union.tree_node* %call, !dbg !4961
}

; Function Attrs: nounwind uwtable
define internal fastcc void @record_in_goto_queue(%struct.leh_tf_state* %tf, %union.tree_node** %new_stmt.coerce, i32 %index, i8 zeroext %is_label) unnamed_addr #5 !dbg !4962 {
entry:
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !4966, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i32 %index, metadata !4968, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.value(metadata i8 %is_label, metadata !4969, metadata !DIExpression()), !dbg !4973
  %goto_queue_map = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 8, !dbg !4974
  %0 = load %struct.pointer_map_t*, %struct.pointer_map_t** %goto_queue_map, align 8, !dbg !4974
  %tobool = icmp eq %struct.pointer_map_t* %0, null, !dbg !4974
  %1 = ptrtoint %union.tree_node** %new_stmt.coerce to i64, !dbg !4974
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4974

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 583, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4974
  br label %cond.end, !dbg !4974

cond.end:                                         ; preds = %entry, %cond.true
  %goto_queue_active = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 7, !dbg !4975
  %2 = load i64, i64* %goto_queue_active, align 8, !dbg !4975
  call void @llvm.dbg.value(metadata i64 %2, metadata !4970, metadata !DIExpression()), !dbg !4973
  %goto_queue_size = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 6, !dbg !4976
  %3 = load i64, i64* %goto_queue_size, align 8, !dbg !4976
  call void @llvm.dbg.value(metadata i64 %3, metadata !4971, metadata !DIExpression()), !dbg !4973
  %cmp = icmp ult i64 %2, %3, !dbg !4977
  br i1 %cmp, label %cond.end.if.end_crit_edge, label %if.then, !dbg !4979

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  %goto_queue9.phi.trans.insert = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !4973
  %.pre = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue9.phi.trans.insert, align 8, !dbg !4980
  br label %if.end, !dbg !4979

if.then:                                          ; preds = %cond.end
  %tobool1 = icmp eq i64 %3, 0, !dbg !4981
  %mul = shl i64 %3, 1, !dbg !4981
  %cond5 = select i1 %tobool1, i64 32, i64 %mul, !dbg !4981
  call void @llvm.dbg.value(metadata i64 %cond5, metadata !4971, metadata !DIExpression()), !dbg !4973
  store i64 %cond5, i64* %goto_queue_size, align 8, !dbg !4983
  %goto_queue = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !4984
  %4 = bitcast %struct.goto_queue_node** %goto_queue to i8**, !dbg !4984
  %5 = load i8*, i8** %4, align 8, !dbg !4984
  %mul7 = shl i64 %cond5, 5, !dbg !4984
  %call = tail call i8* @xrealloc(i8* %5, i64 %mul7) #6, !dbg !4984
  store i8* %call, i8** %4, align 8, !dbg !4985
  %6 = bitcast i8* %call to %struct.goto_queue_node*, !dbg !4986
  br label %if.end, !dbg !4986

if.end:                                           ; preds = %cond.end.if.end_crit_edge, %if.then
  %7 = phi %struct.goto_queue_node* [ %.pre, %cond.end.if.end_crit_edge ], [ %6, %if.then ], !dbg !4980
  %arrayidx = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %7, i64 %2, !dbg !4987
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %arrayidx, metadata !4972, metadata !DIExpression()), !dbg !4973
  %add = add i64 %2, 1, !dbg !4988
  store i64 %add, i64* %goto_queue_active, align 8, !dbg !4989
  %8 = bitcast %struct.goto_queue_node* %arrayidx to i8*, !dbg !4990
  %call11 = tail call i8* @memset(i8* %8, i32 0, i64 32) #6, !dbg !4991
  %9 = bitcast %struct.goto_queue_node* %arrayidx to i64*, !dbg !4992
  store i64 %1, i64* %9, align 8, !dbg !4992
  %index12 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %7, i64 %2, i32 3, !dbg !4993
  store i32 %index, i32* %index12, align 8, !dbg !4994
  %conv = zext i8 %is_label to i32, !dbg !4995
  %is_label13 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %7, i64 %2, i32 4, !dbg !4996
  store i32 %conv, i32* %is_label13, align 4, !dbg !4997
  ret void, !dbg !4998
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @outside_finally_tree(%union.tree_node** %start.coerce, %union.gimple_statement_d* %target) unnamed_addr #5 !dbg !4999 {
entry:
  %n = alloca %struct.finally_tree_node, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %target, metadata !5004, metadata !DIExpression()), !dbg !5007
  %0 = bitcast %struct.finally_tree_node* %n to i8*, !dbg !5008
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5008
  %1 = bitcast %struct.finally_tree_node* %n to i64*, !dbg !5009
  %.promoted.cast = ptrtoint %union.tree_node** %start.coerce to i64, !dbg !5011
  br label %do.body, !dbg !5012

do.body:                                          ; preds = %if.end, %entry
  %2 = phi i64 [ %5, %if.end ], [ %.promoted.cast, %entry ]
  store i64 %2, i64* %1, align 8, !dbg !5011
  %3 = load %struct.htab*, %struct.htab** @finally_tree, align 8, !dbg !5013
  %call = call i8* @htab_find(%struct.htab* %3, i8* nonnull %0) #6, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %call, metadata !5006, metadata !DIExpression()), !dbg !5007
  %tobool = icmp eq i8* %call, null, !dbg !5015
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5017

if.end:                                           ; preds = %do.body
  call void @llvm.dbg.value(metadata i8* %call, metadata !5006, metadata !DIExpression()), !dbg !5007
  %parent = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5018
  %4 = bitcast i8* %parent to i64*, !dbg !5018
  %5 = load i64, i64* %4, align 8, !dbg !5018
  %.cast = inttoptr i64 %5 to %union.gimple_statement_d*, !dbg !5019
  %cmp = icmp eq %union.gimple_statement_d* %.cast, %target, !dbg !5020
  br i1 %cmp, label %cleanup, label %do.body, !dbg !5021, !llvm.loop !5022

cleanup:                                          ; preds = %if.end, %do.body
  %retval.0 = phi i8 [ 1, %do.body ], [ 0, %if.end ], !dbg !5007
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5024
  ret i8 %retval.0, !dbg !5024
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5025 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5029, metadata !DIExpression()), !dbg !5030
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5031
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !5031
  ret %struct.VEC_tree_heap* %0, !dbg !5031
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5032 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5037, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5038, metadata !DIExpression()), !dbg !5040
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5041
  %0 = load i32, i32* %num1, align 8, !dbg !5041
  %inc = add i32 %0, 1, !dbg !5041
  store i32 %inc, i32* %num1, align 8, !dbg !5041
  %idxprom = zext i32 %0 to i64, !dbg !5041
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5041
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5039, metadata !DIExpression()), !dbg !5040
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5041
  ret %union.tree_node** %arrayidx, !dbg !5041
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !5042 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5048, metadata !DIExpression()), !dbg !5049
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5050
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5050

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5050
  %0 = load i32, i32* %num, align 8, !dbg !5050
  br label %cond.end, !dbg !5050

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5050
  ret i32 %cond, !dbg !5050
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5051 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5055, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5056, metadata !DIExpression()), !dbg !5057
  br label %land.end, !dbg !5058

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5058
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5058
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5058
  ret %union.tree_node* %0, !dbg !5058
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5059 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !5064, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5065, metadata !DIExpression()), !dbg !5066
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !5067
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5067
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !5067
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5067

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !5067
  br label %cond.end, !dbg !5067

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5067
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !5067
  ret %union.tree_node** %call1, !dbg !5067
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5068 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !5072, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 1, metadata !5073, metadata !DIExpression()), !dbg !5075
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5076
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !5076
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5076

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !5076
  br label %cond.end, !dbg !5076

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5076
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !5076
  %tobool1 = icmp eq i32 %call, 0, !dbg !5076
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5076
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5074, metadata !DIExpression()), !dbg !5075
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5076

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !5077
  %2 = load i8*, i8** %1, align 8, !dbg !5077
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5077
  store i8* %call3, i8** %1, align 8, !dbg !5077
  br label %if.end, !dbg !5077

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5076
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5079 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5083, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i32 1, metadata !5084, metadata !DIExpression()), !dbg !5085
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5086
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5086

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !5086
  %0 = load i32, i32* %alloc, align 4, !dbg !5086
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5086
  %1 = load i32, i32* %num, align 8, !dbg !5086
  %cmp1 = icmp ne i32 %0, %1, !dbg !5086
  %phitmp = zext i1 %cmp1 to i32, !dbg !5086
  br label %cond.end, !dbg !5086

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5086

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5086
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

declare dso_local %struct.eh_region_d* @gen_eh_region_cleanup(%struct.eh_region_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @eh_region_may_contain_throw(%struct.eh_region_d* %r) unnamed_addr #0 !dbg !5087 {
entry:
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %r, metadata !5091, metadata !DIExpression()), !dbg !5092
  %tobool = icmp eq %struct.eh_region_d* %r, null, !dbg !5093
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5094

land.rhs:                                         ; preds = %entry
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @eh_region_may_contain_throw_map, align 8, !dbg !5095
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %r, i64 0, i32 3, !dbg !5096
  %1 = load i32, i32* %index, align 8, !dbg !5096
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !5097
  %tobool1 = icmp ne i32 %call, 0, !dbg !5094
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !5098
}

; Function Attrs: nounwind uwtable
define internal fastcc void @honor_protect_cleanup_actions(%struct.leh_state* %outer_state, %struct.leh_state* %this_state, %struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !5099 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %outer_state, metadata !5103, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata %struct.leh_state* %this_state, metadata !5104, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5105, metadata !DIExpression()), !dbg !5111
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5112
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5112
  %1 = load %union.tree_node* ()*, %union.tree_node* ()** @lang_protect_cleanup_actions, align 8, !dbg !5113
  %cmp = icmp eq %union.tree_node* ()* %1, null, !dbg !5115
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5116

if.end:                                           ; preds = %entry
  %call = tail call %union.tree_node* %1() #6, !dbg !5117
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5106, metadata !DIExpression()), !dbg !5111
  %cmp1 = icmp eq %union.tree_node* %call, null, !dbg !5118
  br i1 %cmp1, label %cleanup, label %if.end3, !dbg !5120

if.end3:                                          ; preds = %if.end
  %top_p = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 1, !dbg !5121
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5121
  %call4 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %2) #7, !dbg !5122
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call4, metadata !5109, metadata !DIExpression()), !dbg !5111
  %call5 = tail call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* %call4) #6, !dbg !5123
  call void @llvm.dbg.value(metadata i8 %call5, metadata !5108, metadata !DIExpression()), !dbg !5111
  %tobool = icmp eq %struct.leh_state* %this_state, null, !dbg !5124
  br i1 %tobool, label %if.end8, label %if.then6, !dbg !5126

if.then6:                                         ; preds = %if.end3
  %call7 = tail call fastcc %struct.gimple_seq_d* @lower_try_finally_dup_block(%struct.gimple_seq_d* %call4, %struct.leh_state* %outer_state) #7, !dbg !5127
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call7, metadata !5109, metadata !DIExpression()), !dbg !5111
  br label %if.end8, !dbg !5128

if.end8:                                          ; preds = %if.end3, %if.then6
  %finally.0 = phi %struct.gimple_seq_d* [ %call7, %if.then6 ], [ %call4, %if.end3 ], !dbg !5111
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %finally.0, metadata !5109, metadata !DIExpression()), !dbg !5111
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5129
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5129
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %finally.0) #7, !dbg !5129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5129
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5107, metadata !DIExpression(DW_OP_deref)), !dbg !5111
  %call9 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5130
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !5110, metadata !DIExpression()), !dbg !5111
  %call10 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call9) #7, !dbg !5131
  %cmp11 = icmp eq i32 %call10, 17, !dbg !5133
  br i1 %cmp11, label %land.lhs.true, label %if.end19, !dbg !5134

land.lhs.true:                                    ; preds = %if.end8
  %call12 = call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %call9) #7, !dbg !5135
  %cmp13 = icmp eq i32 %call12, 1, !dbg !5136
  br i1 %cmp13, label %land.lhs.true14, label %if.end19, !dbg !5137

land.lhs.true14:                                  ; preds = %land.lhs.true
  %call15 = call fastcc zeroext i8 @gimple_try_catch_is_cleanup(%union.gimple_statement_d* %call9) #7, !dbg !5138
  %tobool16 = icmp eq i8 %call15, 0, !dbg !5138
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !5139

if.then17:                                        ; preds = %land.lhs.true14
  %call18 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %call9) #7, !dbg !5140
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5107, metadata !DIExpression(DW_OP_deref)), !dbg !5111
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* nonnull %gsi, %struct.gimple_seq_d* %call18, i32 1) #6, !dbg !5142
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5107, metadata !DIExpression(DW_OP_deref)), !dbg !5111
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0) #6, !dbg !5143
  br label %if.end19, !dbg !5144

if.end19:                                         ; preds = %land.lhs.true14, %if.then17, %land.lhs.true, %if.end8
  %call20 = call %union.gimple_statement_d* @gimple_build_eh_must_not_throw(%union.tree_node* nonnull %call) #6, !dbg !5145
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !5110, metadata !DIExpression()), !dbg !5111
  %call21 = call fastcc %struct.gimple_seq_d* @gimple_seq_alloc_with_stmt(%union.gimple_statement_d* %call20) #7, !dbg !5146
  %call22 = call %union.gimple_statement_d* @gimple_build_try(%struct.gimple_seq_d* %finally.0, %struct.gimple_seq_d* %call21, i32 1) #6, !dbg !5147
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call22, metadata !5110, metadata !DIExpression()), !dbg !5111
  %call23 = call fastcc %struct.gimple_seq_d* @lower_eh_must_not_throw(%struct.leh_state* %outer_state, %union.gimple_statement_d* %call22) #7, !dbg !5148
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call23, metadata !5109, metadata !DIExpression()), !dbg !5111
  %region = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 4, !dbg !5149
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5149
  call fastcc void @emit_post_landing_pad(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %4) #7, !dbg !5150
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull @eh_seq, %struct.gimple_seq_d* %call23) #6, !dbg !5151
  %tobool24 = icmp eq i8 %call5, 0, !dbg !5152
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !5154

if.then25:                                        ; preds = %if.end19
  %5 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5155
  call fastcc void @emit_resx(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %5) #7, !dbg !5156
  br label %if.end27, !dbg !5156

if.end27:                                         ; preds = %if.end19, %if.then25
  %may_throw = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 13, !dbg !5157
  store i8 0, i8* %may_throw, align 2, !dbg !5158
  br label %cleanup, !dbg !5159

cleanup:                                          ; preds = %if.end, %entry, %if.end27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5159
  ret void, !dbg !5159
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_try_set_cleanup(%union.gimple_statement_d* %gs, %struct.gimple_seq_d* %cleanup) unnamed_addr #0 !dbg !5160 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5164, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %cleanup, metadata !5165, metadata !DIExpression()), !dbg !5166
  %cleanup1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5167
  %0 = bitcast %union.tree_node** %cleanup1 to %struct.gimple_seq_d**, !dbg !5167
  store %struct.gimple_seq_d* %cleanup, %struct.gimple_seq_d** %0, align 8, !dbg !5168
  ret void, !dbg !5169
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lower_try_finally_nofallthru(%struct.leh_state* %state, %struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !5170 {
entry:
  %return_val = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !5172, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5173, metadata !DIExpression()), !dbg !5180
  %0 = bitcast %union.tree_node** %return_val to i8*, !dbg !5181
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5181
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 0, !dbg !5182
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !5182
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %1) #7, !dbg !5183
  %call1 = tail call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !5184
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5174, metadata !DIExpression()), !dbg !5180
  %top_p = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 1, !dbg !5185
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5185
  %call2 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %2) #7, !dbg !5186
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call2, metadata !5177, metadata !DIExpression()), !dbg !5180
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5187
  %call4 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %3) #7, !dbg !5188
  %top_p_seq = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 2, !dbg !5189
  store %struct.gimple_seq_d* %call4, %struct.gimple_seq_d** %top_p_seq, align 8, !dbg !5190
  %call5 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call1) #6, !dbg !5191
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call5, metadata !5176, metadata !DIExpression()), !dbg !5180
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %top_p_seq, %union.gimple_statement_d* %call5) #6, !dbg !5192
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5175, metadata !DIExpression()), !dbg !5180
  store %union.tree_node* null, %union.tree_node** %return_val, align 8, !dbg !5193
  %goto_queue = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !5194
  %4 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5194
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %4, metadata !5178, metadata !DIExpression()), !dbg !5180
  %goto_queue_active = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 7, !dbg !5195
  %5 = load i64, i64* %goto_queue_active, align 8, !dbg !5195
  %add.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %4, i64 %5, !dbg !5196
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %add.ptr, metadata !5179, metadata !DIExpression()), !dbg !5180
  br label %for.cond, !dbg !5197

for.cond:                                         ; preds = %for.inc, %entry
  %q.0 = phi %struct.goto_queue_node* [ %4, %entry ], [ %incdec.ptr, %for.inc ], !dbg !5180
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q.0, metadata !5178, metadata !DIExpression()), !dbg !5180
  %cmp = icmp ult %struct.goto_queue_node* %q.0, %add.ptr, !dbg !5198
  br i1 %cmp, label %for.body, label %for.end, !dbg !5201

for.body:                                         ; preds = %for.cond
  %index = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 0, i32 3, !dbg !5202
  %6 = load i32, i32* %index, align 8, !dbg !5202
  %cmp7 = icmp slt i32 %6, 0, !dbg !5204
  br i1 %cmp7, label %if.then, label %if.else, !dbg !5205

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %union.tree_node** %return_val, metadata !5175, metadata !DIExpression(DW_OP_deref)), !dbg !5180
  call fastcc void @do_return_redirection(%struct.goto_queue_node* %q.0, %union.tree_node* %call1, %struct.gimple_seq_d* null, %union.tree_node** nonnull %return_val) #7, !dbg !5206
  br label %for.inc, !dbg !5206

if.else:                                          ; preds = %for.body
  call fastcc void @do_goto_redirection(%struct.goto_queue_node* %q.0, %union.tree_node* %call1, %struct.gimple_seq_d* null, %struct.leh_tf_state* %tf) #7, !dbg !5207
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %incdec.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 1, !dbg !5208
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %incdec.ptr, metadata !5178, metadata !DIExpression()), !dbg !5180
  br label %for.cond, !dbg !5209, !llvm.loop !5210

for.end:                                          ; preds = %for.cond
  call fastcc void @replace_goto_queue(%struct.leh_tf_state* %tf) #7, !dbg !5212
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call2) #7, !dbg !5213
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %top_p_seq, %struct.gimple_seq_d* %call2) #6, !dbg !5214
  %may_throw = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 13, !dbg !5215
  %7 = load i8, i8* %may_throw, align 2, !dbg !5215
  %tobool = icmp eq i8 %7, 0, !dbg !5217
  br i1 %tobool, label %if.end11, label %if.then9, !dbg !5218

if.then9:                                         ; preds = %for.end
  %region = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 4, !dbg !5219
  %8 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5219
  call fastcc void @emit_post_landing_pad(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %8) #7, !dbg !5221
  %call10 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call1) #6, !dbg !5222
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !5176, metadata !DIExpression()), !dbg !5180
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull @eh_seq, %union.gimple_statement_d* %call10) #6, !dbg !5223
  br label %if.end11, !dbg !5224

if.end11:                                         ; preds = %for.end, %if.then9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5225
  ret void, !dbg !5225
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lower_try_finally_onedest(%struct.leh_state* %state, %struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !5226 {
entry:
  %return_val = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !5228, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5229, metadata !DIExpression()), !dbg !5239
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 0, !dbg !5240
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !5240
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %0) #7, !dbg !5241
  call void @llvm.dbg.value(metadata i32 %call, metadata !5235, metadata !DIExpression()), !dbg !5239
  %top_p = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 1, !dbg !5242
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5242
  %call1 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %1) #7, !dbg !5243
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call1, metadata !5233, metadata !DIExpression()), !dbg !5239
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5244
  %call3 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %2) #7, !dbg !5245
  %top_p_seq = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 2, !dbg !5246
  store %struct.gimple_seq_d* %call3, %struct.gimple_seq_d** %top_p_seq, align 8, !dbg !5247
  tail call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call1) #7, !dbg !5248
  %may_throw = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 13, !dbg !5249
  %3 = load i8, i8* %may_throw, align 2, !dbg !5249
  %tobool = icmp eq i8 %3, 0, !dbg !5251
  br i1 %tobool, label %if.end, label %if.then, !dbg !5252

if.then:                                          ; preds = %entry
  %region = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 4, !dbg !5253
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5253
  tail call fastcc void @emit_post_landing_pad(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %4) #7, !dbg !5255
  tail call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull @eh_seq, %struct.gimple_seq_d* %call1) #6, !dbg !5256
  %5 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5257
  tail call fastcc void @emit_resx(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %5) #7, !dbg !5258
  br label %cleanup.cont, !dbg !5259

if.end:                                           ; preds = %entry
  %may_fallthru = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 11, !dbg !5260
  %6 = load i8, i8* %may_fallthru, align 8, !dbg !5260
  %tobool5 = icmp eq i8 %6, 0, !dbg !5262
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !5263

if.then6:                                         ; preds = %if.end
  tail call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %top_p_seq, %struct.gimple_seq_d* %call1) #6, !dbg !5264
  br label %cleanup.cont, !dbg !5266

if.end8:                                          ; preds = %if.end
  %call9 = tail call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !5267
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5234, metadata !DIExpression()), !dbg !5239
  %call10 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call9) #6, !dbg !5268
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !5232, metadata !DIExpression()), !dbg !5239
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %top_p_seq, %union.gimple_statement_d* %call10) #6, !dbg !5269
  tail call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %top_p_seq, %struct.gimple_seq_d* %call1) #6, !dbg !5270
  %goto_queue = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !5271
  %7 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5271
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %7, metadata !5230, metadata !DIExpression()), !dbg !5239
  %goto_queue_active = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 7, !dbg !5272
  %8 = load i64, i64* %goto_queue_active, align 8, !dbg !5272
  %add.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %7, i64 %8, !dbg !5273
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %add.ptr, metadata !5231, metadata !DIExpression()), !dbg !5239
  %may_return = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 12, !dbg !5274
  %9 = load i8, i8* %may_return, align 1, !dbg !5274
  %tobool13 = icmp eq i8 %9, 0, !dbg !5275
  br i1 %tobool13, label %for.cond15.preheader, label %if.then14, !dbg !5276

for.cond15.preheader:                             ; preds = %if.end8
  br label %for.cond15, !dbg !5277

if.then14:                                        ; preds = %if.end8
  %10 = bitcast %union.tree_node** %return_val to i8*, !dbg !5280
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8, !dbg !5280
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5236, metadata !DIExpression()), !dbg !5281
  store %union.tree_node* null, %union.tree_node** %return_val, align 8, !dbg !5282
  br label %for.cond, !dbg !5283

for.cond:                                         ; preds = %for.body, %if.then14
  %q.0 = phi %struct.goto_queue_node* [ %7, %if.then14 ], [ %incdec.ptr, %for.body ], !dbg !5239
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q.0, metadata !5230, metadata !DIExpression()), !dbg !5239
  %cmp = icmp ult %struct.goto_queue_node* %q.0, %add.ptr, !dbg !5284
  br i1 %cmp, label %for.body, label %for.end, !dbg !5287

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.tree_node** %return_val, metadata !5236, metadata !DIExpression(DW_OP_deref)), !dbg !5281
  call fastcc void @do_return_redirection(%struct.goto_queue_node* %q.0, %union.tree_node* %call9, %struct.gimple_seq_d* null, %union.tree_node** nonnull %return_val) #7, !dbg !5288
  %incdec.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 1, !dbg !5289
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %incdec.ptr, metadata !5230, metadata !DIExpression()), !dbg !5239
  br label %for.cond, !dbg !5290, !llvm.loop !5291

for.end:                                          ; preds = %for.cond
  call fastcc void @replace_goto_queue(%struct.leh_tf_state* %tf) #7, !dbg !5293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8, !dbg !5294
  br label %if.end28, !dbg !5295

for.cond15:                                       ; preds = %for.cond15.preheader, %for.body17
  %q.1 = phi %struct.goto_queue_node* [ %incdec.ptr19, %for.body17 ], [ %7, %for.cond15.preheader ], !dbg !5239
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q.1, metadata !5230, metadata !DIExpression()), !dbg !5239
  %cmp16 = icmp ult %struct.goto_queue_node* %q.1, %add.ptr, !dbg !5296
  br i1 %cmp16, label %for.body17, label %for.end20, !dbg !5277

for.body17:                                       ; preds = %for.cond15
  tail call fastcc void @do_goto_redirection(%struct.goto_queue_node* %q.1, %union.tree_node* %call9, %struct.gimple_seq_d* null, %struct.leh_tf_state* %tf) #7, !dbg !5298
  %incdec.ptr19 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.1, i64 1, !dbg !5299
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %incdec.ptr19, metadata !5230, metadata !DIExpression()), !dbg !5239
  br label %for.cond15, !dbg !5300, !llvm.loop !5301

for.end20:                                        ; preds = %for.cond15
  tail call fastcc void @replace_goto_queue(%struct.leh_tf_state* %tf) #7, !dbg !5303
  %dest_array = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 9, !dbg !5304
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !5304
  %tobool21 = icmp eq %struct.VEC_tree_heap* %11, null, !dbg !5304
  br i1 %tobool21, label %cond.end, label %cond.true, !dbg !5304

cond.true:                                        ; preds = %for.end20
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !5304
  br label %cond.end, !dbg !5304

cond.end:                                         ; preds = %for.end20, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.end20 ], !dbg !5304
  %call23 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 0) #7, !dbg !5304
  %fallthru_label = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 10, !dbg !5306
  %12 = load %union.tree_node*, %union.tree_node** %fallthru_label, align 8, !dbg !5306
  %cmp24 = icmp eq %union.tree_node* %call23, %12, !dbg !5307
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !5308

if.then25:                                        ; preds = %cond.end
  store %union.tree_node* null, %union.tree_node** %fallthru_label, align 8, !dbg !5309
  br label %cleanup.cont, !dbg !5311

if.end28:                                         ; preds = %cond.end, %for.end
  %13 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5312
  %cont_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %13, i64 0, i32 2, !dbg !5313
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cont_stmt, align 8, !dbg !5313
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %14, metadata !5232, metadata !DIExpression()), !dbg !5239
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %top_p_seq, %union.gimple_statement_d* %14) #6, !dbg !5314
  call fastcc void @maybe_record_in_goto_queue(%struct.leh_state* %state, %union.gimple_statement_d* %14) #7, !dbg !5315
  br label %cleanup.cont, !dbg !5316

cleanup.cont:                                     ; preds = %if.then, %if.then6, %if.then25, %if.end28
  ret void, !dbg !5316
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @decide_copy_try_finally(i32 %ndests, %struct.gimple_seq_d* %finally) unnamed_addr #5 !dbg !5317 {
entry:
  call void @llvm.dbg.value(metadata i32 %ndests, metadata !5321, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %finally, metadata !5322, metadata !DIExpression()), !dbg !5325
  %0 = load i32, i32* @optimize, align 4, !dbg !5326
  %tobool = icmp eq i32 %0, 0, !dbg !5326
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5328

if.end:                                           ; preds = %entry
  %call = tail call i32 @count_insns_seq(%struct.gimple_seq_d* %finally, %struct.eni_weights_d* nonnull @eni_size_weights) #6, !dbg !5329
  call void @llvm.dbg.value(metadata i32 %call, metadata !5323, metadata !DIExpression()), !dbg !5325
  %add = add nsw i32 %call, 1, !dbg !5330
  %mul = mul nsw i32 %add, %ndests, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5323, metadata !DIExpression()), !dbg !5325
  %mul1 = shl nsw i32 %ndests, 1, !dbg !5332
  %add2 = add nsw i32 %mul1, 10, !dbg !5333
  call void @llvm.dbg.value(metadata i32 %add2, metadata !5324, metadata !DIExpression()), !dbg !5325
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5334
  %call3 = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %1) #6, !dbg !5336
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5336
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !5337

if.then5:                                         ; preds = %if.end
  %cmp = icmp slt i32 %mul, %add2, !dbg !5338
  %conv6 = zext i1 %cmp to i8, !dbg !5339
  br label %cleanup, !dbg !5340

if.end7:                                          ; preds = %if.end
  %2 = load i32, i32* @optimize, align 4, !dbg !5341
  %cmp8 = icmp sgt i32 %2, 1, !dbg !5343
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !5344

if.then10:                                        ; preds = %if.end7
  %cmp11 = icmp slt i32 %mul, 100, !dbg !5345
  %mul13 = shl nsw i32 %add2, 1, !dbg !5346
  %cmp14 = icmp slt i32 %mul, %mul13, !dbg !5346
  %3 = or i1 %cmp11, %cmp14, !dbg !5346
  %conv16 = zext i1 %3 to i8, !dbg !5347
  br label %cleanup, !dbg !5348

if.else:                                          ; preds = %if.end7
  %cmp17 = icmp slt i32 %mul, 40, !dbg !5349
  br i1 %cmp17, label %lor.end24, label %lor.rhs19, !dbg !5350

lor.rhs19:                                        ; preds = %if.else
  %mul20 = shl nsw i32 %mul, 1, !dbg !5351
  %mul21 = mul nsw i32 %add2, 3, !dbg !5352
  %cmp22 = icmp slt i32 %mul20, %mul21, !dbg !5353
  %phitmp = zext i1 %cmp22 to i8, !dbg !5350
  br label %lor.end24, !dbg !5350

lor.end24:                                        ; preds = %lor.rhs19, %if.else
  %4 = phi i8 [ 1, %if.else ], [ %phitmp, %lor.rhs19 ]
  br label %cleanup, !dbg !5354

cleanup:                                          ; preds = %entry, %lor.end24, %if.then10, %if.then5
  %retval.0 = phi i8 [ %conv6, %if.then5 ], [ %conv16, %if.then10 ], [ %4, %lor.end24 ], [ 0, %entry ], !dbg !5325
  ret i8 %retval.0, !dbg !5355
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lower_try_finally_copy(%struct.leh_state* %state, %struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !2087 {
entry:
  %new_stmt = alloca %struct.gimple_seq_d*, align 8
  %return_val = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !2114, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !2115, metadata !DIExpression()), !dbg !5356
  %0 = bitcast %struct.gimple_seq_d** %new_stmt to i8*, !dbg !5357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5357
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 0, !dbg !5358
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !5358
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %1) #7, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %call, metadata !2121, metadata !DIExpression()), !dbg !5356
  %top_p = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 1, !dbg !5360
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5360
  %call1 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %2) #7, !dbg !5361
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call1, metadata !2116, metadata !DIExpression()), !dbg !5356
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5362
  %call3 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %3) #7, !dbg !5363
  %top_p_seq = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 2, !dbg !5364
  store %struct.gimple_seq_d* %call3, %struct.gimple_seq_d** %top_p_seq, align 8, !dbg !5365
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !2117, metadata !DIExpression()), !dbg !5356
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_stmt, align 8, !dbg !5366
  %may_fallthru = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 11, !dbg !5367
  %4 = load i8, i8* %may_fallthru, align 8, !dbg !5367
  %tobool = icmp eq i8 %4, 0, !dbg !5369
  br i1 %tobool, label %if.end, label %if.then, !dbg !5370

if.then:                                          ; preds = %entry
  %call4 = tail call fastcc %struct.gimple_seq_d* @lower_try_finally_dup_block(%struct.gimple_seq_d* %call1, %struct.leh_state* %state) #7, !dbg !5371
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call4, metadata !2118, metadata !DIExpression()), !dbg !5356
  tail call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call4) #7, !dbg !5373
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmt, metadata !2117, metadata !DIExpression(DW_OP_deref)), !dbg !5356
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %new_stmt, %struct.gimple_seq_d* %call4) #6, !dbg !5374
  %call5 = call fastcc %union.tree_node* @lower_try_finally_fallthru_label(%struct.leh_tf_state* %tf) #7, !dbg !5375
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !2120, metadata !DIExpression()), !dbg !5356
  %call6 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call5) #6, !dbg !5376
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !2119, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmt, metadata !2117, metadata !DIExpression(DW_OP_deref)), !dbg !5356
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_stmt, %union.gimple_statement_d* %call6) #6, !dbg !5377
  br label %if.end, !dbg !5378

if.end:                                           ; preds = %entry, %if.then
  %may_throw = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 13, !dbg !5379
  %5 = load i8, i8* %may_throw, align 2, !dbg !5379
  %tobool7 = icmp eq i8 %5, 0, !dbg !5381
  br i1 %tobool7, label %if.end11, label %if.then8, !dbg !5382

if.then8:                                         ; preds = %if.end
  %call9 = call fastcc %struct.gimple_seq_d* @lower_try_finally_dup_block(%struct.gimple_seq_d* %call1, %struct.leh_state* %state) #7, !dbg !5383
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call9, metadata !2118, metadata !DIExpression()), !dbg !5356
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call9) #7, !dbg !5385
  %region = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 4, !dbg !5386
  %6 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5386
  call fastcc void @emit_post_landing_pad(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %6) #7, !dbg !5387
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull @eh_seq, %struct.gimple_seq_d* %call9) #6, !dbg !5388
  %7 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5389
  call fastcc void @emit_resx(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %7) #7, !dbg !5390
  br label %if.end11, !dbg !5391

if.end11:                                         ; preds = %if.end, %if.then8
  %goto_queue = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !5392
  %8 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5392
  %tobool12 = icmp eq %struct.goto_queue_node* %8, null, !dbg !5393
  br i1 %tobool12, label %if.end93, label %if.then13, !dbg !5394

if.then13:                                        ; preds = %if.end11
  %9 = bitcast %union.tree_node** %return_val to i8*, !dbg !5395
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !5395
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2126, metadata !DIExpression()), !dbg !5396
  store %union.tree_node* null, %union.tree_node** %return_val, align 8, !dbg !5397
  %dest_array = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 9, !dbg !5398
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !5398
  %tobool14 = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !5398
  br i1 %tobool14, label %cond.end, label %cond.true, !dbg !5398

cond.true:                                        ; preds = %if.then13
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !5398
  br label %cond.end, !dbg !5398

cond.end:                                         ; preds = %if.then13, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.then13 ], !dbg !5398
  %call16 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !5398
  call void @llvm.dbg.value(metadata i32 %call16, metadata !2127, metadata !DIExpression()), !dbg !5396
  %add = add nsw i32 %call16, 1, !dbg !5399
  %conv = sext i32 %add to i64, !dbg !5399
  %call17 = call i8* @xcalloc(i64 %conv, i64 16) #6, !dbg !5399
  %11 = bitcast i8* %call17 to %struct.labels_s*, !dbg !5399
  call void @llvm.dbg.value(metadata %struct.labels_s* %11, metadata !2129, metadata !DIExpression()), !dbg !5396
  %12 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5400
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %12, metadata !2122, metadata !DIExpression()), !dbg !5396
  %goto_queue_active = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 7, !dbg !5401
  %13 = load i64, i64* %goto_queue_active, align 8, !dbg !5401
  %add.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %12, i64 %13, !dbg !5402
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %add.ptr, metadata !2125, metadata !DIExpression()), !dbg !5396
  br label %for.cond, !dbg !5403

for.cond:                                         ; preds = %for.inc, %cond.end
  %q.0 = phi %struct.goto_queue_node* [ %12, %cond.end ], [ %incdec.ptr, %for.inc ], !dbg !5396
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q.0, metadata !2122, metadata !DIExpression()), !dbg !5396
  %cmp = icmp ult %struct.goto_queue_node* %q.0, %add.ptr, !dbg !5404
  br i1 %cmp, label %for.body, label %for.cond35.preheader, !dbg !5407

for.cond35.preheader:                             ; preds = %for.cond
  %14 = sext i32 %call16 to i64, !dbg !5408
  %15 = zext i32 %call16 to i64, !dbg !5408
  br label %for.cond35, !dbg !5408

for.body:                                         ; preds = %for.cond
  %index20 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 0, i32 3, !dbg !5409
  %16 = load i32, i32* %index20, align 8, !dbg !5409
  %cmp21 = icmp slt i32 %16, 0, !dbg !5411
  br i1 %cmp21, label %cond.end26, label %cond.false24, !dbg !5412

cond.false24:                                     ; preds = %for.body
  br label %cond.end26, !dbg !5412

cond.end26:                                       ; preds = %for.body, %cond.false24
  %cond27 = phi i32 [ %16, %cond.false24 ], [ %call16, %for.body ], !dbg !5412
  call void @llvm.dbg.value(metadata i32 %cond27, metadata !2128, metadata !DIExpression()), !dbg !5396
  %idxprom = sext i32 %cond27 to i64, !dbg !5413
  %q28 = getelementptr inbounds %struct.labels_s, %struct.labels_s* %11, i64 %idxprom, i32 0, !dbg !5415
  %17 = load %struct.goto_queue_node*, %struct.goto_queue_node** %q28, align 8, !dbg !5415
  %tobool29 = icmp eq %struct.goto_queue_node* %17, null, !dbg !5413
  br i1 %tobool29, label %if.then30, label %for.inc, !dbg !5416

if.then30:                                        ; preds = %cond.end26
  store %struct.goto_queue_node* %q.0, %struct.goto_queue_node** %q28, align 8, !dbg !5417
  br label %for.inc, !dbg !5418

for.inc:                                          ; preds = %cond.end26, %if.then30
  %incdec.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 1, !dbg !5419
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %incdec.ptr, metadata !2122, metadata !DIExpression()), !dbg !5396
  br label %for.cond, !dbg !5420, !llvm.loop !5421

for.cond35:                                       ; preds = %for.cond35.preheader, %cleanup
  %indvars.iv = phi i64 [ 0, %for.cond35.preheader ], [ %indvars.iv.next, %cleanup ], !dbg !5423
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2128, metadata !DIExpression()), !dbg !5396
  %cmp37 = icmp sgt i64 %indvars.iv, %14, !dbg !5424
  br i1 %cmp37, label %for.end57, label %for.body39, !dbg !5408

for.body39:                                       ; preds = %for.cond35
  %q42 = getelementptr inbounds %struct.labels_s, %struct.labels_s* %11, i64 %indvars.iv, i32 0, !dbg !5425
  %18 = load %struct.goto_queue_node*, %struct.goto_queue_node** %q42, align 8, !dbg !5425
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %18, metadata !2122, metadata !DIExpression()), !dbg !5396
  %tobool43 = icmp eq %struct.goto_queue_node* %18, null, !dbg !5426
  br i1 %tobool43, label %cleanup, label %if.end45, !dbg !5428

if.end45:                                         ; preds = %for.body39
  %call46 = call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !5429
  %label = getelementptr inbounds %struct.labels_s, %struct.labels_s* %11, i64 %indvars.iv, i32 1, !dbg !5430
  store %union.tree_node* %call46, %union.tree_node** %label, align 8, !dbg !5431
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !2130, metadata !DIExpression()), !dbg !5432
  %cmp49 = icmp eq i64 %indvars.iv, %15, !dbg !5433
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !5435

if.then51:                                        ; preds = %if.end45
  call void @llvm.dbg.value(metadata %union.tree_node** %return_val, metadata !2126, metadata !DIExpression(DW_OP_deref)), !dbg !5396
  call fastcc void @do_return_redirection(%struct.goto_queue_node* nonnull %18, %union.tree_node* %call46, %struct.gimple_seq_d* null, %union.tree_node** nonnull %return_val) #7, !dbg !5436
  br label %if.end52, !dbg !5436

if.else:                                          ; preds = %if.end45
  call fastcc void @do_goto_redirection(%struct.goto_queue_node* nonnull %18, %union.tree_node* %call46, %struct.gimple_seq_d* null, %struct.leh_tf_state* %tf) #7, !dbg !5437
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then51
  %call53 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call46) #6, !dbg !5438
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call53, metadata !2119, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmt, metadata !2117, metadata !DIExpression(DW_OP_deref)), !dbg !5356
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_stmt, %union.gimple_statement_d* %call53) #6, !dbg !5439
  %call54 = call fastcc %struct.gimple_seq_d* @lower_try_finally_dup_block(%struct.gimple_seq_d* %call1, %struct.leh_state* %state) #7, !dbg !5440
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call54, metadata !2118, metadata !DIExpression()), !dbg !5356
  call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call54) #7, !dbg !5441
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmt, metadata !2117, metadata !DIExpression(DW_OP_deref)), !dbg !5356
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %new_stmt, %struct.gimple_seq_d* %call54) #6, !dbg !5442
  %cont_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %18, i64 0, i32 2, !dbg !5443
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cont_stmt, align 8, !dbg !5443
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmt, metadata !2117, metadata !DIExpression(DW_OP_deref)), !dbg !5356
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %new_stmt, %union.gimple_statement_d* %19) #6, !dbg !5444
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cont_stmt, align 8, !dbg !5445
  call fastcc void @maybe_record_in_goto_queue(%struct.leh_state* %state, %union.gimple_statement_d* %20) #7, !dbg !5446
  br label %cleanup, !dbg !5447

cleanup:                                          ; preds = %for.body39, %if.end52
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5448
  call void @llvm.dbg.value(metadata i32 undef, metadata !2128, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5396
  br label %for.cond35, !dbg !5449, !llvm.loop !5450

for.end57:                                        ; preds = %for.cond35
  %21 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5452
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %21, metadata !2122, metadata !DIExpression()), !dbg !5396
  br label %for.cond59, !dbg !5453

for.cond59:                                       ; preds = %cleanup87, %for.end57
  %q.1 = phi %struct.goto_queue_node* [ %21, %for.end57 ], [ %incdec.ptr91, %cleanup87 ], !dbg !5454
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q.1, metadata !2122, metadata !DIExpression()), !dbg !5396
  %cmp60 = icmp ult %struct.goto_queue_node* %q.1, %add.ptr, !dbg !5455
  br i1 %cmp60, label %for.body62, label %for.end92, !dbg !5456

for.body62:                                       ; preds = %for.cond59
  %index64 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.1, i64 0, i32 3, !dbg !5457
  %22 = load i32, i32* %index64, align 8, !dbg !5457
  %cmp65 = icmp slt i32 %22, 0, !dbg !5458
  br i1 %cmp65, label %cond.end70, label %cond.false68, !dbg !5459

cond.false68:                                     ; preds = %for.body62
  br label %cond.end70, !dbg !5459

cond.end70:                                       ; preds = %for.body62, %cond.false68
  %cond71 = phi i32 [ %22, %cond.false68 ], [ %call16, %for.body62 ], !dbg !5459
  call void @llvm.dbg.value(metadata i32 %cond71, metadata !2128, metadata !DIExpression()), !dbg !5396
  %idxprom72 = sext i32 %cond71 to i64, !dbg !5460
  %q74 = getelementptr inbounds %struct.labels_s, %struct.labels_s* %11, i64 %idxprom72, i32 0, !dbg !5462
  %23 = load %struct.goto_queue_node*, %struct.goto_queue_node** %q74, align 8, !dbg !5462
  %cmp75 = icmp eq %struct.goto_queue_node* %23, %q.1, !dbg !5463
  br i1 %cmp75, label %cleanup87, label %if.end78, !dbg !5464

if.end78:                                         ; preds = %cond.end70
  %label81 = getelementptr inbounds %struct.labels_s, %struct.labels_s* %11, i64 %idxprom72, i32 1, !dbg !5465
  %24 = load %union.tree_node*, %union.tree_node** %label81, align 8, !dbg !5465
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !2134, metadata !DIExpression()), !dbg !5466
  %cmp82 = icmp eq i32 %cond71, %call16, !dbg !5467
  br i1 %cmp82, label %if.then84, label %if.else85, !dbg !5469

if.then84:                                        ; preds = %if.end78
  call void @llvm.dbg.value(metadata %union.tree_node** %return_val, metadata !2126, metadata !DIExpression(DW_OP_deref)), !dbg !5396
  call fastcc void @do_return_redirection(%struct.goto_queue_node* %q.1, %union.tree_node* %24, %struct.gimple_seq_d* null, %union.tree_node** nonnull %return_val) #7, !dbg !5470
  br label %cleanup87, !dbg !5470

if.else85:                                        ; preds = %if.end78
  call fastcc void @do_goto_redirection(%struct.goto_queue_node* %q.1, %union.tree_node* %24, %struct.gimple_seq_d* null, %struct.leh_tf_state* %tf) #7, !dbg !5471
  br label %cleanup87

cleanup87:                                        ; preds = %if.then84, %if.else85, %cond.end70
  %incdec.ptr91 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.1, i64 1, !dbg !5472
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %incdec.ptr91, metadata !2122, metadata !DIExpression()), !dbg !5396
  br label %for.cond59, !dbg !5473, !llvm.loop !5474

for.end92:                                        ; preds = %for.cond59
  call fastcc void @replace_goto_queue(%struct.leh_tf_state* %tf) #7, !dbg !5476
  call void @free(i8* %call17) #6, !dbg !5477
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !5478
  br label %if.end93, !dbg !5479

if.end93:                                         ; preds = %if.end11, %for.end92
  %25 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_stmt, align 8, !dbg !5480
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %25, metadata !2117, metadata !DIExpression()), !dbg !5356
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %top_p_seq, %struct.gimple_seq_d* %25) #6, !dbg !5481
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5482
  ret void, !dbg !5482
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lower_try_finally_switch(%struct.leh_state* %state, %struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !5483 {
entry:
  %return_val = alloca %union.tree_node*, align 8
  %switch_body = alloca %struct.gimple_seq_d*, align 8
  %mod = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct.leh_state* %state, metadata !5485, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5486, metadata !DIExpression()), !dbg !5525
  %0 = bitcast %union.tree_node** %return_val to i8*, !dbg !5526
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5526
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5489, metadata !DIExpression()), !dbg !5525
  store %union.tree_node* null, %union.tree_node** %return_val, align 8, !dbg !5527
  %1 = bitcast %struct.gimple_seq_d** %switch_body to i8*, !dbg !5528
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5528
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* null, metadata !5506, metadata !DIExpression()), !dbg !5525
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 0, !dbg !5529
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !5529
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %2) #7, !dbg !5530
  call void @llvm.dbg.value(metadata i32 %call, metadata !5507, metadata !DIExpression()), !dbg !5525
  %call1 = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !5531
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call1, metadata !5501, metadata !DIExpression()), !dbg !5525
  store %struct.gimple_seq_d* %call1, %struct.gimple_seq_d** %switch_body, align 8, !dbg !5532
  %top_p = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 1, !dbg !5533
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5533
  %call2 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %3) #7, !dbg !5534
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call2, metadata !5505, metadata !DIExpression()), !dbg !5525
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %top_p, align 8, !dbg !5535
  %call4 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %4) #7, !dbg !5536
  %top_p_seq = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 2, !dbg !5537
  store %struct.gimple_seq_d* %call4, %struct.gimple_seq_d** %top_p_seq, align 8, !dbg !5538
  %call6 = tail call fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %call4) #7, !dbg !5539
  %cmp = icmp eq %union.gimple_statement_d* %call6, null, !dbg !5540
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5539

cond.true:                                        ; preds = %entry
  %5 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %top_p_seq, align 8, !dbg !5541
  %call8 = tail call fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %5) #7, !dbg !5542
  %call9 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call8) #7, !dbg !5543
  br label %cond.end, !dbg !5539

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %call9, %cond.true ], [ %call, %entry ], !dbg !5539
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5508, metadata !DIExpression()), !dbg !5525
  tail call fastcc void @lower_eh_constructs_1(%struct.leh_state* %state, %struct.gimple_seq_d* %call2) #7, !dbg !5544
  %dest_array = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 9, !dbg !5545
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !5545
  %tobool = icmp eq %struct.VEC_tree_heap* %6, null, !dbg !5545
  br i1 %tobool, label %cond.end13, label %cond.true10, !dbg !5545

cond.true10:                                      ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %6, i64 0, i32 0, !dbg !5545
  br label %cond.end13, !dbg !5545

cond.end13:                                       ; preds = %cond.end, %cond.true10
  %cond14 = phi %struct.VEC_tree_base* [ %base, %cond.true10 ], [ null, %cond.end ], !dbg !5545
  %call15 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond14) #7, !dbg !5545
  call void @llvm.dbg.value(metadata i32 %call15, metadata !5495, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %call15, metadata !5492, metadata !DIExpression()), !dbg !5525
  %may_return = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 12, !dbg !5546
  %7 = load i8, i8* %may_return, align 1, !dbg !5546
  %conv = zext i8 %7 to i32, !dbg !5547
  %add = add nsw i32 %call15, %conv, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %add, metadata !5493, metadata !DIExpression()), !dbg !5525
  %may_throw = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 13, !dbg !5549
  %8 = load i8, i8* %may_throw, align 2, !dbg !5549
  %conv16 = zext i8 %8 to i32, !dbg !5550
  %add17 = add nsw i32 %add, %conv16, !dbg !5551
  call void @llvm.dbg.value(metadata i32 %add17, metadata !5494, metadata !DIExpression()), !dbg !5525
  %may_fallthru = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 11, !dbg !5552
  %9 = load i8, i8* %may_fallthru, align 8, !dbg !5552
  %conv18 = zext i8 %9 to i32, !dbg !5553
  %add19 = add nsw i32 %add17, %conv18, !dbg !5554
  call void @llvm.dbg.value(metadata i32 %add19, metadata !5496, metadata !DIExpression()), !dbg !5525
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !5555
  %call20 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !5556
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !5490, metadata !DIExpression()), !dbg !5525
  %call21 = tail call %union.tree_node* @create_artificial_label(i32 %cond) #6, !dbg !5557
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !5491, metadata !DIExpression()), !dbg !5525
  %call22 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %add19) #7, !dbg !5558
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call22, metadata !5500, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5499, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 0, metadata !5498, metadata !DIExpression()), !dbg !5525
  %11 = load i8, i8* %may_fallthru, align 8, !dbg !5559
  %tobool24 = icmp eq i8 %11, 0, !dbg !5561
  br i1 %tobool24, label %if.end, label %if.then, !dbg !5562

if.then:                                          ; preds = %cond.end13
  %conv25 = sext i32 %add17 to i64, !dbg !5563
  %call26 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv25) #6, !dbg !5563
  %call27 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call20, %union.tree_node* %call26) #6, !dbg !5563
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call27, metadata !5502, metadata !DIExpression()), !dbg !5525
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %top_p_seq, %union.gimple_statement_d* %call27) #6, !dbg !5565
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5566
  %call30 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv25) #6, !dbg !5566
  %call31 = tail call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !5566
  %call32 = tail call %union.tree_node* @build3_stat(i32 139, %union.tree_node* %12, %union.tree_node* %call30, %union.tree_node* null, %union.tree_node* %call31) #6, !dbg !5566
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !5499, metadata !DIExpression()), !dbg !5525
  %base35 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call22, i64 0, i32 0, !dbg !5567
  %call39 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base35, %union.tree_node* %call32) #7, !dbg !5567
  call void @llvm.dbg.value(metadata i32 1, metadata !5498, metadata !DIExpression()), !dbg !5525
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5568
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !5568
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5568
  %call40 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %13) #6, !dbg !5569
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call40, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body, metadata !5501, metadata !DIExpression(DW_OP_deref)), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %switch_body, %union.gimple_statement_d* %call40) #6, !dbg !5570
  %call41 = call fastcc %union.tree_node* @lower_try_finally_fallthru_label(%struct.leh_tf_state* %tf) #7, !dbg !5571
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !5503, metadata !DIExpression()), !dbg !5525
  %call42 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call41) #6, !dbg !5572
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call42, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body, metadata !5501, metadata !DIExpression(DW_OP_deref)), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %switch_body, %union.gimple_statement_d* %call42) #6, !dbg !5573
  br label %if.end, !dbg !5574

if.end:                                           ; preds = %cond.end13, %if.then
  %last_case_index.0 = phi i32 [ 1, %if.then ], [ 0, %cond.end13 ], !dbg !5525
  %last_case.0 = phi %union.tree_node* [ %call32, %if.then ], [ null, %cond.end13 ], !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.0, metadata !5499, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %last_case_index.0, metadata !5498, metadata !DIExpression()), !dbg !5525
  %14 = load i8, i8* %may_throw, align 2, !dbg !5575
  %tobool44 = icmp eq i8 %14, 0, !dbg !5577
  br i1 %tobool44, label %if.end67, label %if.then45, !dbg !5578

if.then45:                                        ; preds = %if.end
  %region = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 4, !dbg !5579
  %15 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5579
  call fastcc void @emit_post_landing_pad(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %15) #7, !dbg !5581
  %conv46 = sext i32 %add to i64, !dbg !5582
  %call47 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv46) #6, !dbg !5582
  %call48 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call20, %union.tree_node* %call47) #6, !dbg !5582
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call48, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull @eh_seq, %union.gimple_statement_d* %call48) #6, !dbg !5583
  %call49 = call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call21) #6, !dbg !5584
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call49, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull @eh_seq, %union.gimple_statement_d* %call49) #6, !dbg !5585
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5586
  %call51 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv46) #6, !dbg !5586
  %call52 = call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !5586
  %call53 = call %union.tree_node* @build3_stat(i32 139, %union.tree_node* %16, %union.tree_node* %call51, %union.tree_node* null, %union.tree_node* %call52) #6, !dbg !5586
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !5499, metadata !DIExpression()), !dbg !5525
  %base56 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call22, i64 0, i32 0, !dbg !5587
  %call60 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base56, %union.tree_node* %call53) #7, !dbg !5587
  %inc61 = add nuw nsw i32 %last_case_index.0, 1, !dbg !5588
  call void @llvm.dbg.value(metadata i32 %inc61, metadata !5498, metadata !DIExpression()), !dbg !5525
  %operands63 = getelementptr inbounds %union.tree_node, %union.tree_node* %call53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5589
  %arrayidx64 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands63, i64 2, !dbg !5589
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx64, align 8, !dbg !5589
  %call65 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %17) #6, !dbg !5590
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call65, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull @eh_seq, %union.gimple_statement_d* %call65) #6, !dbg !5591
  %18 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !5592
  call fastcc void @emit_resx(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* %18) #7, !dbg !5593
  br label %if.end67, !dbg !5594

if.end67:                                         ; preds = %if.end, %if.then45
  %last_case_index.1 = phi i32 [ %inc61, %if.then45 ], [ %last_case_index.0, %if.end ], !dbg !5525
  %last_case.1 = phi %union.tree_node* [ %call53, %if.then45 ], [ %last_case.0, %if.end ], !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.1, metadata !5499, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %last_case_index.1, metadata !5498, metadata !DIExpression()), !dbg !5525
  %call68 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call21) #6, !dbg !5595
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call68, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %top_p_seq, %union.gimple_statement_d* %call68) #6, !dbg !5596
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %top_p_seq, %struct.gimple_seq_d* %call2) #6, !dbg !5597
  %goto_queue = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !5598
  %19 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5598
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %19, metadata !5487, metadata !DIExpression()), !dbg !5525
  %goto_queue_active = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 7, !dbg !5599
  %20 = load i64, i64* %goto_queue_active, align 8, !dbg !5599
  %add.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %19, i64 %20, !dbg !5600
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %add.ptr, metadata !5488, metadata !DIExpression()), !dbg !5525
  %21 = load i8, i8* %may_return, align 1, !dbg !5601
  %conv72 = zext i8 %21 to i32, !dbg !5602
  %add73 = add nsw i32 %last_case_index.1, %conv72, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %add73, metadata !5497, metadata !DIExpression()), !dbg !5525
  %22 = bitcast %struct.gimple_seq_d** %mod to i8*, !dbg !5604
  %conv80 = sext i32 %call15 to i64, !dbg !5605
  %base93 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call22, i64 0, i32 0, !dbg !5608
  br label %for.cond, !dbg !5609

for.cond:                                         ; preds = %if.end124, %if.end67
  %q.0 = phi %struct.goto_queue_node* [ %19, %if.end67 ], [ %incdec.ptr, %if.end124 ], !dbg !5525
  %cont_map.0 = phi %struct.pointer_map_t* [ null, %if.end67 ], [ %cont_map.2, %if.end124 ], !dbg !5610
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %cont_map.0, metadata !5506, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q.0, metadata !5487, metadata !DIExpression()), !dbg !5525
  %cmp74 = icmp ult %struct.goto_queue_node* %q.0, %add.ptr, !dbg !5611
  br i1 %cmp74, label %for.body, label %for.cond125.preheader, !dbg !5612

for.cond125.preheader:                            ; preds = %for.cond
  %cont_map.0.lcssa = phi %struct.pointer_map_t* [ %cont_map.0, %for.cond ], !dbg !5610
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %cont_map.0.lcssa, metadata !5506, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %cont_map.0.lcssa, metadata !5506, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %cont_map.0.lcssa, metadata !5506, metadata !DIExpression()), !dbg !5525
  %add126 = add nsw i32 %last_case_index.1, %call15, !dbg !5613
  %tobool144 = icmp eq %struct.pointer_map_t* %cont_map.0.lcssa, null, !dbg !5614
  br i1 %tobool144, label %for.cond125.preheader.split.us, label %for.cond125.preheader.for.cond125.preheader.split_crit_edge, !dbg !5615

for.cond125.preheader.for.cond125.preheader.split_crit_edge: ; preds = %for.cond125.preheader
  br label %for.cond125, !dbg !5615

for.cond125.preheader.split.us:                   ; preds = %for.cond125.preheader
  br label %for.cond125.us, !dbg !5615

for.cond125.us:                                   ; preds = %cond.end153.us, %for.cond125.preheader.split.us
  %j.0.us = phi i32 [ %inc161.us, %cond.end153.us ], [ %last_case_index.1, %for.cond125.preheader.split.us ], !dbg !5616
  %last_case.2.us = phi %union.tree_node* [ %call138.us, %cond.end153.us ], [ %last_case.1, %for.cond125.preheader.split.us ], !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.2.us, metadata !5499, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !5497, metadata !DIExpression()), !dbg !5525
  %cmp127.us = icmp slt i32 %j.0.us, %add126, !dbg !5617
  br i1 %cmp127.us, label %for.body129.us, label %for.end162.us-lcssa.us, !dbg !5615

for.body129.us:                                   ; preds = %for.cond125.us
  %call138.us = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base93, i32 %j.0.us) #7, !dbg !5618
  call void @llvm.dbg.value(metadata %union.tree_node* %call138.us, metadata !5499, metadata !DIExpression()), !dbg !5525
  %tobool139.us = icmp eq %union.tree_node* %call138.us, null, !dbg !5619
  br i1 %tobool139.us, label %cond.true140.us, label %cond.end142.us, !dbg !5619

cond.true140.us:                                  ; preds = %for.body129.us
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1443, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5619
  br label %cond.end142.us, !dbg !5619

cond.end142.us:                                   ; preds = %cond.true140.us, %for.body129.us
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5620
  %23 = bitcast %union.tree_node* %call138.us to i8*, !dbg !5621
  %call149.us = call i8** @pointer_map_contains(%struct.pointer_map_t* null, i8* %23) #6, !dbg !5622
  call void @llvm.dbg.value(metadata i8** %call149.us, metadata !5524, metadata !DIExpression()), !dbg !5614
  %tobool150.us = icmp eq i8** %call149.us, null, !dbg !5623
  br i1 %tobool150.us, label %cond.true151.us, label %cond.end153.us, !dbg !5623

cond.true151.us:                                  ; preds = %cond.end142.us
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1449, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5623
  br label %cond.end153.us, !dbg !5623

cond.end153.us:                                   ; preds = %cond.true151.us, %cond.end142.us
  %24 = bitcast i8** %call149.us to %union.gimple_statement_d**, !dbg !5624
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %24, align 8, !dbg !5624
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %25, metadata !5523, metadata !DIExpression()), !dbg !5614
  %call155.us = call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %call155.us, metadata !5519, metadata !DIExpression()), !dbg !5614
  %operands157.us = getelementptr inbounds %union.tree_node, %union.tree_node* %call138.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5626
  %arrayidx158.us = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands157.us, i64 2, !dbg !5626
  store %union.tree_node* %call155.us, %union.tree_node** %arrayidx158.us, align 8, !dbg !5627
  %call159.us = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call155.us) #6, !dbg !5628
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call159.us, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body, metadata !5501, metadata !DIExpression(DW_OP_deref)), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %switch_body, %union.gimple_statement_d* %call159.us) #6, !dbg !5629
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body, metadata !5501, metadata !DIExpression(DW_OP_deref)), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %switch_body, %union.gimple_statement_d* %25) #6, !dbg !5630
  call fastcc void @maybe_record_in_goto_queue(%struct.leh_state* %state, %union.gimple_statement_d* %25) #7, !dbg !5631
  %inc161.us = add nuw nsw i32 %j.0.us, 1, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %inc161.us, metadata !5497, metadata !DIExpression()), !dbg !5525
  br label %for.cond125.us, !dbg !5633, !llvm.loop !5634

for.end162.us-lcssa.us:                           ; preds = %for.cond125.us
  %last_case.2.us.lcssa = phi %union.tree_node* [ %last_case.2.us, %for.cond125.us ], !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.2.us.lcssa, metadata !5499, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.2.us.lcssa, metadata !5499, metadata !DIExpression()), !dbg !5525
  br label %for.end162, !dbg !5636

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8, !dbg !5638
  %call76 = call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !5639
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call76, metadata !5509, metadata !DIExpression()), !dbg !5604
  store %struct.gimple_seq_d* %call76, %struct.gimple_seq_d** %mod, align 8, !dbg !5640
  %index = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 0, i32 3, !dbg !5641
  %26 = load i32, i32* %index, align 8, !dbg !5641
  %cmp77 = icmp slt i32 %26, 0, !dbg !5642
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !5643

if.then79:                                        ; preds = %for.body
  %call81 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv80) #6, !dbg !5644
  %call82 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call20, %union.tree_node* %call81) #6, !dbg !5644
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call82, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %mod, metadata !5509, metadata !DIExpression(DW_OP_deref)), !dbg !5604
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %mod, %union.gimple_statement_d* %call82) #6, !dbg !5645
  %27 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %mod, align 8, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %27, metadata !5509, metadata !DIExpression()), !dbg !5604
  call void @llvm.dbg.value(metadata %union.tree_node** %return_val, metadata !5489, metadata !DIExpression(DW_OP_deref)), !dbg !5525
  call fastcc void @do_return_redirection(%struct.goto_queue_node* %q.0, %union.tree_node* %call21, %struct.gimple_seq_d* %27, %union.tree_node** nonnull %return_val) #7, !dbg !5647
  call void @llvm.dbg.value(metadata i32 %call15, metadata !5513, metadata !DIExpression()), !dbg !5604
  %.pre = load i32, i32* %index, align 8, !dbg !5648
  br label %if.end88, !dbg !5649

if.else:                                          ; preds = %for.body
  %conv84 = sext i32 %26 to i64, !dbg !5650
  %call85 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv84) #6, !dbg !5650
  %call86 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call20, %union.tree_node* %call85) #6, !dbg !5650
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call86, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %mod, metadata !5509, metadata !DIExpression(DW_OP_deref)), !dbg !5604
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %mod, %union.gimple_statement_d* %call86) #6, !dbg !5652
  %28 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %mod, align 8, !dbg !5653
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %28, metadata !5509, metadata !DIExpression()), !dbg !5604
  call fastcc void @do_goto_redirection(%struct.goto_queue_node* %q.0, %union.tree_node* %call21, %struct.gimple_seq_d* %28, %struct.leh_tf_state* %tf) #7, !dbg !5654
  %29 = load i32, i32* %index, align 8, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %29, metadata !5513, metadata !DIExpression()), !dbg !5604
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then79
  %30 = phi i32 [ %.pre, %if.then79 ], [ %29, %if.else ], !dbg !5648
  %switch_id.0 = phi i32 [ %call15, %if.then79 ], [ %29, %if.else ], !dbg !5656
  call void @llvm.dbg.value(metadata i32 %switch_id.0, metadata !5513, metadata !DIExpression()), !dbg !5604
  %add90 = add nsw i32 %add73, %30, !dbg !5657
  call void @llvm.dbg.value(metadata i32 %add90, metadata !5514, metadata !DIExpression()), !dbg !5604
  %call97 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base93) #7, !dbg !5658
  %cmp98 = icmp ugt i32 %call97, %add90, !dbg !5659
  br i1 %cmp98, label %lor.lhs.false, label %if.then108, !dbg !5660

lor.lhs.false:                                    ; preds = %if.end88
  %call106 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base93, i32 %add90) #7, !dbg !5661
  %tobool107 = icmp eq %union.tree_node* %call106, null, !dbg !5661
  br i1 %tobool107, label %if.then108, label %if.end124, !dbg !5662

if.then108:                                       ; preds = %lor.lhs.false, %if.end88
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5663
  %conv109 = sext i32 %switch_id.0 to i64, !dbg !5663
  %call110 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv109) #6, !dbg !5663
  %call111 = call %union.tree_node* @build3_stat(i32 139, %union.tree_node* %31, %union.tree_node* %call110, %union.tree_node* null, %union.tree_node* null) #6, !dbg !5663
  call void @llvm.dbg.value(metadata %union.tree_node* %call111, metadata !5515, metadata !DIExpression()), !dbg !5664
  %tobool112 = icmp eq %struct.pointer_map_t* %cont_map.0, null, !dbg !5665
  br i1 %tobool112, label %if.then113, label %if.end115, !dbg !5667

if.then113:                                       ; preds = %if.then108
  %call114 = call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !5668
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %call114, metadata !5506, metadata !DIExpression()), !dbg !5525
  br label %if.end115, !dbg !5669

if.end115:                                        ; preds = %if.then108, %if.then113
  %cont_map.1 = phi %struct.pointer_map_t* [ %cont_map.0, %if.then108 ], [ %call114, %if.then113 ], !dbg !5525
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %cont_map.1, metadata !5506, metadata !DIExpression()), !dbg !5525
  %32 = bitcast %union.tree_node* %call111 to i8*, !dbg !5670
  %call116 = call i8** @pointer_map_insert(%struct.pointer_map_t* %cont_map.1, i8* %32) #6, !dbg !5671
  call void @llvm.dbg.value(metadata i8** %call116, metadata !5518, metadata !DIExpression()), !dbg !5664
  %cont_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 0, i32 2, !dbg !5672
  %33 = bitcast %union.gimple_statement_d** %cont_stmt to i64*, !dbg !5672
  %34 = load i64, i64* %33, align 8, !dbg !5672
  %35 = bitcast i8** %call116 to i64*, !dbg !5673
  store i64 %34, i64* %35, align 8, !dbg !5673
  %call123 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base93, %union.tree_node* %call111) #7, !dbg !5674
  br label %if.end124, !dbg !5675

if.end124:                                        ; preds = %lor.lhs.false, %if.end115
  %cont_map.2 = phi %struct.pointer_map_t* [ %cont_map.1, %if.end115 ], [ %cont_map.0, %lor.lhs.false ], !dbg !5610
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %cont_map.2, metadata !5506, metadata !DIExpression()), !dbg !5525
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8, !dbg !5676
  %incdec.ptr = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q.0, i64 1, !dbg !5677
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %incdec.ptr, metadata !5487, metadata !DIExpression()), !dbg !5525
  br label %for.cond, !dbg !5678, !llvm.loop !5679

for.cond125:                                      ; preds = %for.cond125.preheader.for.cond125.preheader.split_crit_edge, %cond.end153
  %j.0 = phi i32 [ %inc161, %cond.end153 ], [ %last_case_index.1, %for.cond125.preheader.for.cond125.preheader.split_crit_edge ], !dbg !5616
  %last_case.2 = phi %union.tree_node* [ %call138, %cond.end153 ], [ %last_case.1, %for.cond125.preheader.for.cond125.preheader.split_crit_edge ], !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.2, metadata !5499, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5497, metadata !DIExpression()), !dbg !5525
  %cmp127 = icmp slt i32 %j.0, %add126, !dbg !5617
  br i1 %cmp127, label %for.body129, label %for.end162.us-lcssa, !dbg !5615

for.body129:                                      ; preds = %for.cond125
  %call138 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base93, i32 %j.0) #7, !dbg !5618
  call void @llvm.dbg.value(metadata %union.tree_node* %call138, metadata !5499, metadata !DIExpression()), !dbg !5525
  %tobool139 = icmp eq %union.tree_node* %call138, null, !dbg !5619
  br i1 %tobool139, label %cond.true140, label %cond.end142, !dbg !5619

cond.true140:                                     ; preds = %for.body129
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1443, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5619
  br label %cond.end142, !dbg !5619

cond.end142:                                      ; preds = %for.body129, %cond.true140
  %36 = bitcast %union.tree_node* %call138 to i8*, !dbg !5621
  %call149 = call i8** @pointer_map_contains(%struct.pointer_map_t* nonnull %cont_map.0.lcssa, i8* %36) #6, !dbg !5622
  call void @llvm.dbg.value(metadata i8** %call149, metadata !5524, metadata !DIExpression()), !dbg !5614
  %tobool150 = icmp eq i8** %call149, null, !dbg !5623
  br i1 %tobool150, label %cond.true151, label %cond.end153, !dbg !5623

cond.true151:                                     ; preds = %cond.end142
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 1449, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5623
  br label %cond.end153, !dbg !5623

cond.end153:                                      ; preds = %cond.end142, %cond.true151
  %37 = bitcast i8** %call149 to %union.gimple_statement_d**, !dbg !5624
  %38 = load %union.gimple_statement_d*, %union.gimple_statement_d** %37, align 8, !dbg !5624
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %38, metadata !5523, metadata !DIExpression()), !dbg !5614
  %call155 = call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %call155, metadata !5519, metadata !DIExpression()), !dbg !5614
  %operands157 = getelementptr inbounds %union.tree_node, %union.tree_node* %call138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5626
  %arrayidx158 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands157, i64 2, !dbg !5626
  store %union.tree_node* %call155, %union.tree_node** %arrayidx158, align 8, !dbg !5627
  %call159 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call155) #6, !dbg !5628
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call159, metadata !5502, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body, metadata !5501, metadata !DIExpression(DW_OP_deref)), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %switch_body, %union.gimple_statement_d* %call159) #6, !dbg !5629
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %switch_body, metadata !5501, metadata !DIExpression(DW_OP_deref)), !dbg !5525
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %switch_body, %union.gimple_statement_d* %38) #6, !dbg !5630
  call fastcc void @maybe_record_in_goto_queue(%struct.leh_state* %state, %union.gimple_statement_d* %38) #7, !dbg !5631
  %inc161 = add nuw nsw i32 %j.0, 1, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %inc161, metadata !5497, metadata !DIExpression()), !dbg !5525
  br label %for.cond125, !dbg !5633, !llvm.loop !5634

for.end162.us-lcssa:                              ; preds = %for.cond125
  %last_case.2.lcssa2 = phi %union.tree_node* [ %last_case.2, %for.cond125 ], !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.2.lcssa2, metadata !5499, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.2.lcssa2, metadata !5499, metadata !DIExpression()), !dbg !5525
  br label %for.end162, !dbg !5636

for.end162:                                       ; preds = %for.end162.us-lcssa.us, %for.end162.us-lcssa
  %last_case.2.lcssa = phi %union.tree_node* [ %last_case.2.lcssa2, %for.end162.us-lcssa ], [ %last_case.2.us.lcssa, %for.end162.us-lcssa.us ], !dbg !5525
  call void @llvm.dbg.value(metadata %union.tree_node* %last_case.2.lcssa, metadata !5499, metadata !DIExpression()), !dbg !5525
  br i1 %tobool144, label %if.end165, label %if.then164, !dbg !5681

if.then164:                                       ; preds = %for.end162
  call void @pointer_map_destroy(%struct.pointer_map_t* nonnull %cont_map.0.lcssa) #6, !dbg !5682
  br label %if.end165, !dbg !5682

if.end165:                                        ; preds = %for.end162, %if.then164
  call fastcc void @replace_goto_queue(%struct.leh_tf_state* %tf) #7, !dbg !5683
  %operands167 = getelementptr inbounds %union.tree_node, %union.tree_node* %last_case.2.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5684
  store %union.tree_node* null, %union.tree_node** %operands167, align 8, !dbg !5685
  call void @sort_case_labels(%struct.VEC_tree_heap* %call22) #6, !dbg !5686
  %call169 = call %union.gimple_statement_d* @gimple_build_switch_vec(%union.tree_node* %call20, %union.tree_node* %last_case.2.lcssa, %struct.VEC_tree_heap* %call22) #6, !dbg !5687
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call169, metadata !5504, metadata !DIExpression()), !dbg !5525
  call fastcc void @gimple_set_location(%union.gimple_statement_d* %call169, i32 %cond) #7, !dbg !5688
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %top_p_seq, %union.gimple_statement_d* %call169) #6, !dbg !5689
  %39 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %switch_body, align 8, !dbg !5690
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %39, metadata !5501, metadata !DIExpression()), !dbg !5525
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %top_p_seq, %struct.gimple_seq_d* %39) #6, !dbg !5691
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5692
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5692
  ret void, !dbg !5692
}

declare dso_local %union.gimple_statement_d* @gimple_build_label(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_stmt(%struct.gimple_seq_d**, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !5693 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !5697, metadata !DIExpression()), !dbg !5698
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5699
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !5699
  br i1 %tobool, label %if.end, label %if.then, !dbg !5701

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !5701
  tail call void @free(i8* nonnull %1) #6, !dbg !5699
  br label %if.end, !dbg !5699

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !5701
  ret void, !dbg !5701
}

declare dso_local void @pointer_map_destroy(%struct.pointer_map_t*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @lower_try_finally_dup_block(%struct.gimple_seq_d* %seq, %struct.leh_state* %outer_state) unnamed_addr #5 !dbg !5702 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !5706, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata %struct.leh_state* %outer_state, metadata !5707, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !5708, metadata !DIExpression()), !dbg !5710
  %call = tail call %struct.gimple_seq_d* @copy_gimple_seq_and_replace_locals(%struct.gimple_seq_d* %seq) #6, !dbg !5711
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5709, metadata !DIExpression()), !dbg !5710
  %tf = getelementptr inbounds %struct.leh_state, %struct.leh_state* %outer_state, i64 0, i32 2, !dbg !5712
  %0 = load %struct.leh_tf_state*, %struct.leh_tf_state** %tf, align 8, !dbg !5712
  %tobool = icmp eq %struct.leh_tf_state* %0, null, !dbg !5714
  br i1 %tobool, label %if.end, label %if.then, !dbg !5715

if.then:                                          ; preds = %entry
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %0, i64 0, i32 0, !dbg !5716
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !5716
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5708, metadata !DIExpression()), !dbg !5710
  br label %if.end, !dbg !5717

if.end:                                           ; preds = %entry, %if.then
  %region.0 = phi %union.gimple_statement_d* [ %1, %if.then ], [ null, %entry ], !dbg !5710
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %region.0, metadata !5708, metadata !DIExpression()), !dbg !5710
  tail call fastcc void @collect_finally_tree_1(%struct.gimple_seq_d* %call, %union.gimple_statement_d* %region.0) #7, !dbg !5718
  ret %struct.gimple_seq_d* %call, !dbg !5719
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_try_catch_is_cleanup(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5720 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5722, metadata !DIExpression()), !dbg !5723
  %call = tail call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %gs) #7, !dbg !5724
  %cmp = icmp eq i32 %call, 1, !dbg !5724
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5724

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 2945, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5724
  br label %cond.end, !dbg !5724

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5725
  %bf.load = load i32, i32* %0, align 8, !dbg !5725
  %and = lshr i32 %bf.load, 18, !dbg !5726
  %1 = trunc i32 %and to i8, !dbg !5726
  %2 = and i8 %1, 1, !dbg !5726
  ret i8 %2, !dbg !5727
}

declare dso_local %union.gimple_statement_d* @gimple_build_eh_must_not_throw(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_try(%struct.gimple_seq_d*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @gimple_seq_alloc_with_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5728 {
entry:
  %seq = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5730, metadata !DIExpression()), !dbg !5732
  %0 = bitcast %struct.gimple_seq_d** %seq to i8*, !dbg !5733
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5733
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !5731, metadata !DIExpression()), !dbg !5732
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %seq, align 8, !dbg !5734
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5731, metadata !DIExpression(DW_OP_deref)), !dbg !5732
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %seq, %union.gimple_statement_d* %stmt) #6, !dbg !5735
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5736
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %1, metadata !5731, metadata !DIExpression()), !dbg !5732
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5737
  ret %struct.gimple_seq_d* %1, !dbg !5738
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_post_landing_pad(%struct.gimple_seq_d** %seq, %struct.eh_region_d* %region) unnamed_addr #5 !dbg !5739 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** @eh_seq, metadata !5744, metadata !DIExpression()), !dbg !5748
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !5745, metadata !DIExpression()), !dbg !5748
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 6, !dbg !5749
  %0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %landing_pads, align 8, !dbg !5749
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %0, metadata !5746, metadata !DIExpression()), !dbg !5748
  %cmp = icmp eq %struct.eh_landing_pad_d* %0, null, !dbg !5750
  br i1 %cmp, label %if.then, label %if.end, !dbg !5752

if.then:                                          ; preds = %entry
  %call = tail call %struct.eh_landing_pad_d* @gen_eh_landing_pad(%struct.eh_region_d* %region) #6, !dbg !5753
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call, metadata !5746, metadata !DIExpression()), !dbg !5748
  br label %if.end, !dbg !5754

if.end:                                           ; preds = %if.then, %entry
  %lp.0 = phi %struct.eh_landing_pad_d* [ %call, %if.then ], [ %0, %entry ], !dbg !5748
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp.0, metadata !5746, metadata !DIExpression()), !dbg !5748
  %call1 = tail call %union.tree_node* @create_artificial_label(i32 0) #6, !dbg !5755
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 2, !dbg !5756
  store %union.tree_node* %call1, %union.tree_node** %post_landing_pad, align 8, !dbg !5757
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp.0, i64 0, i32 4, !dbg !5758
  %1 = load i32, i32* %index, align 8, !dbg !5758
  %.cast = bitcast %union.tree_node* %call1 to %struct.tree_label_decl*, !dbg !5759
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %.cast, i64 0, i32 2, !dbg !5759
  store i32 %1, i32* %eh_landing_pad_nr, align 4, !dbg !5760
  %2 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !5761
  %call4 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %2) #6, !dbg !5762
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call4, metadata !5747, metadata !DIExpression()), !dbg !5748
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull @eh_seq, %union.gimple_statement_d* %call4) #6, !dbg !5763
  ret void, !dbg !5764
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_resx(%struct.gimple_seq_d** %seq, %struct.eh_region_d* %region) unnamed_addr #5 !dbg !5765 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !5767, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !5768, metadata !DIExpression()), !dbg !5770
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 3, !dbg !5771
  %0 = load i32, i32* %index, align 8, !dbg !5771
  %call = tail call %union.gimple_statement_d* @gimple_build_resx(i32 %0) #6, !dbg !5772
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !5769, metadata !DIExpression()), !dbg !5770
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %seq, %union.gimple_statement_d* %call) #6, !dbg !5773
  %outer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 0, !dbg !5774
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %outer, align 8, !dbg !5774
  %tobool = icmp eq %struct.eh_region_d* %1, null, !dbg !5776
  br i1 %tobool, label %if.end, label %if.then, !dbg !5777

if.then:                                          ; preds = %entry
  tail call fastcc void @record_stmt_eh_region(%struct.eh_region_d* nonnull %1, %union.gimple_statement_d* %call) #7, !dbg !5778
  br label %if.end, !dbg !5778

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5779
}

declare dso_local %struct.gimple_seq_d* @copy_gimple_seq_and_replace_locals(%struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_artificial_label(i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_resx(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @do_return_redirection(%struct.goto_queue_node* %q, %union.tree_node* %finlab, %struct.gimple_seq_d* %mod, %union.tree_node** %return_value_p) unnamed_addr #5 !dbg !5780 {
entry:
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q, metadata !5784, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata %union.tree_node* %finlab, metadata !5785, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %mod, metadata !5786, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata %union.tree_node** %return_value_p, metadata !5787, metadata !DIExpression()), !dbg !5790
  %is_label = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 4, !dbg !5791
  %0 = load i32, i32* %is_label, align 4, !dbg !5791
  %tobool = icmp eq i32 %0, 0, !dbg !5791
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5791

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5791
  br label %cond.end, !dbg !5791

cond.end:                                         ; preds = %entry, %cond.true
  %g = bitcast %struct.goto_queue_node* %q to %union.gimple_statement_d**, !dbg !5792
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %g, align 8, !dbg !5792
  %call = tail call fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %1) #7, !dbg !5793
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5788, metadata !DIExpression()), !dbg !5790
  %tobool1 = icmp eq %union.tree_node* %call, null, !dbg !5794
  br i1 %tobool1, label %if.else26, label %if.then, !dbg !5796

if.then:                                          ; preds = %cond.end
  %2 = load %union.tree_node*, %union.tree_node** %return_value_p, align 8, !dbg !5797
  %tobool2 = icmp eq %union.tree_node* %2, null, !dbg !5797
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5800

if.then3:                                         ; preds = %if.then
  store %union.tree_node* %call, %union.tree_node** %return_value_p, align 8, !dbg !5801
  br label %if.end, !dbg !5802

if.else:                                          ; preds = %if.then
  %cmp = icmp eq %union.tree_node* %2, %call, !dbg !5803
  br i1 %cmp, label %if.end, label %cond.true4, !dbg !5803

cond.true4:                                       ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5803
  br label %if.end, !dbg !5803

if.end:                                           ; preds = %cond.true4, %if.else, %if.then3
  %3 = bitcast %struct.goto_queue_node* %q to i64*, !dbg !5804
  %4 = load i64, i64* %3, align 8, !dbg !5804
  %cont_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 2, !dbg !5805
  %5 = bitcast %union.gimple_statement_d** %cont_stmt to i64*, !dbg !5806
  store i64 %4, i64* %5, align 8, !dbg !5806
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5807
  %bf.load = load i64, i64* %6, align 8, !dbg !5807
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5809
  %cmp10 = icmp eq i64 %bf.cast1, 36, !dbg !5809
  br i1 %cmp10, label %if.then11, label %if.else24, !dbg !5810

if.then11:                                        ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** %return_value_p, align 8, !dbg !5811
  %tobool12 = icmp eq %union.tree_node* %7, null, !dbg !5811
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !5814

if.then13:                                        ; preds = %if.then11
  store %union.tree_node* %call, %union.tree_node** %return_value_p, align 8, !dbg !5815
  br label %if.end20, !dbg !5816

if.else14:                                        ; preds = %if.then11
  %cmp15 = icmp eq %union.tree_node* %7, %call, !dbg !5817
  br i1 %cmp15, label %if.end20, label %cond.true16, !dbg !5817

cond.true16:                                      ; preds = %if.else14
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 767, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5817
  br label %if.end20, !dbg !5817

if.end20:                                         ; preds = %cond.true16, %if.else14, %if.then13
  %8 = load i64, i64* %3, align 8, !dbg !5818
  store i64 %8, i64* %5, align 8, !dbg !5819
  br label %if.end30, !dbg !5820

if.else24:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5821
  br label %if.end30

if.else26:                                        ; preds = %cond.end
  %9 = bitcast %struct.goto_queue_node* %q to i64*, !dbg !5822
  %10 = load i64, i64* %9, align 8, !dbg !5822
  %cont_stmt29 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 2, !dbg !5823
  %11 = bitcast %union.gimple_statement_d** %cont_stmt29 to i64*, !dbg !5824
  store i64 %10, i64* %11, align 8, !dbg !5824
  br label %if.end30

if.end30:                                         ; preds = %if.end20, %if.else24, %if.else26
  %repl_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 1, !dbg !5825
  %12 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %repl_stmt, align 8, !dbg !5825
  %tobool31 = icmp eq %struct.gimple_seq_d* %12, null, !dbg !5827
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !5828

if.then32:                                        ; preds = %if.end30
  %call33 = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !5829
  store %struct.gimple_seq_d* %call33, %struct.gimple_seq_d** %repl_stmt, align 8, !dbg !5830
  br label %if.end35, !dbg !5831

if.end35:                                         ; preds = %if.end30, %if.then32
  %tobool36 = icmp eq %struct.gimple_seq_d* %mod, null, !dbg !5832
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !5834

if.then37:                                        ; preds = %if.end35
  tail call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %repl_stmt, %struct.gimple_seq_d* nonnull %mod) #6, !dbg !5835
  br label %if.end39, !dbg !5835

if.end39:                                         ; preds = %if.end35, %if.then37
  %call40 = tail call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %finlab) #6, !dbg !5836
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call40, metadata !5789, metadata !DIExpression()), !dbg !5790
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %repl_stmt, %union.gimple_statement_d* %call40) #6, !dbg !5837
  ret void, !dbg !5838
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_goto_redirection(%struct.goto_queue_node* %q, %union.tree_node* %finlab, %struct.gimple_seq_d* %mod, %struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !5839 {
entry:
  call void @llvm.dbg.value(metadata %struct.goto_queue_node* %q, metadata !5843, metadata !DIExpression()), !dbg !5848
  call void @llvm.dbg.value(metadata %union.tree_node* %finlab, metadata !5844, metadata !DIExpression()), !dbg !5848
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %mod, metadata !5845, metadata !DIExpression()), !dbg !5848
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5846, metadata !DIExpression()), !dbg !5848
  %is_label = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 4, !dbg !5849
  %0 = load i32, i32* %is_label, align 4, !dbg !5849
  %tobool = icmp eq i32 %0, 0, !dbg !5849
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5849

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 795, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5849
  br label %cond.end, !dbg !5849

cond.end:                                         ; preds = %entry, %cond.true
  %repl_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 1, !dbg !5850
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %repl_stmt, align 8, !dbg !5850
  %tobool1 = icmp eq %struct.gimple_seq_d* %1, null, !dbg !5852
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5853

if.then:                                          ; preds = %cond.end
  %call = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !5854
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %repl_stmt, align 8, !dbg !5855
  br label %if.end, !dbg !5856

if.end:                                           ; preds = %cond.end, %if.then
  %dest_array = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 9, !dbg !5857
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %dest_array, align 8, !dbg !5857
  %tobool3 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !5857
  br i1 %tobool3, label %cond.end7, label %cond.true4, !dbg !5857

cond.true4:                                       ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !5857
  br label %cond.end7, !dbg !5857

cond.end7:                                        ; preds = %if.end, %cond.true4
  %cond8 = phi %struct.VEC_tree_base* [ %base, %cond.true4 ], [ null, %if.end ], !dbg !5857
  %index = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 3, !dbg !5857
  %3 = load i32, i32* %index, align 8, !dbg !5857
  %call9 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond8, i32 %3) #7, !dbg !5857
  %call10 = tail call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %call9) #6, !dbg !5858
  %cont_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %q, i64 0, i32 2, !dbg !5859
  store %union.gimple_statement_d* %call10, %union.gimple_statement_d** %cont_stmt, align 8, !dbg !5860
  %tobool11 = icmp eq %struct.gimple_seq_d* %mod, null, !dbg !5861
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !5863

if.then12:                                        ; preds = %cond.end7
  tail call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %repl_stmt, %struct.gimple_seq_d* nonnull %mod) #6, !dbg !5864
  br label %if.end14, !dbg !5864

if.end14:                                         ; preds = %cond.end7, %if.then12
  %call15 = tail call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %finlab) #6, !dbg !5865
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15, metadata !5847, metadata !DIExpression()), !dbg !5848
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %repl_stmt, %union.gimple_statement_d* %call15) #6, !dbg !5866
  ret void, !dbg !5867
}

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_goto_queue(%struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !5868 {
entry:
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5872, metadata !DIExpression()), !dbg !5873
  %goto_queue_active = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 7, !dbg !5874
  %0 = load i64, i64* %goto_queue_active, align 8, !dbg !5874
  %cmp = icmp eq i64 %0, 0, !dbg !5876
  br i1 %cmp, label %return, label %if.end, !dbg !5877

if.end:                                           ; preds = %entry
  %top_p_seq = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 2, !dbg !5878
  %1 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %top_p_seq, align 8, !dbg !5878
  tail call fastcc void @replace_goto_queue_stmt_list(%struct.gimple_seq_d* %1, %struct.leh_tf_state* %tf) #7, !dbg !5879
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** @eh_seq, align 8, !dbg !5880
  tail call fastcc void @replace_goto_queue_stmt_list(%struct.gimple_seq_d* %2, %struct.leh_tf_state* %tf) #7, !dbg !5881
  br label %return, !dbg !5882

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !5882
}

declare dso_local %union.gimple_statement_d* @gimple_build_goto(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_return_retval(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5883 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5885, metadata !DIExpression()), !dbg !5886
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5887
  ret %union.tree_node* %call, !dbg !5888
}

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_goto_queue_stmt_list(%struct.gimple_seq_d* %seq, %struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !5889 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !5893, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5894, metadata !DIExpression()), !dbg !5896
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5897
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5897
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5895, metadata !DIExpression(DW_OP_deref)), !dbg !5896
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.gimple_seq_d* %seq) #7, !dbg !5898
  br label %while.cond, !dbg !5899

while.cond:                                       ; preds = %while.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5895, metadata !DIExpression(DW_OP_deref)), !dbg !5896
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5900
  %tobool = icmp eq i8 %call, 0, !dbg !5901
  br i1 %tobool, label %while.body, label %while.end, !dbg !5899

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5895, metadata !DIExpression(DW_OP_deref)), !dbg !5896
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !5902
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5895, metadata !DIExpression(DW_OP_deref)), !dbg !5896
  call fastcc void @replace_goto_queue_1(%union.gimple_statement_d* %call1, %struct.leh_tf_state* %tf, %struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !5903
  br label %while.cond, !dbg !5899, !llvm.loop !5904

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5906
  ret void, !dbg !5906
}

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_goto_queue_1(%union.gimple_statement_d* %stmt, %struct.leh_tf_state* %tf, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5907 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5911, metadata !DIExpression()), !dbg !5916
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5912, metadata !DIExpression()), !dbg !5916
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5913, metadata !DIExpression()), !dbg !5916
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5917
  switch i32 %call, label %sw.epilog [
    i32 3, label %sw.bb
    i32 9, label %sw.bb
    i32 1, label %sw.bb4
    i32 17, label %sw.bb7
    i32 11, label %sw.bb10
    i32 12, label %sw.bb12
  ], !dbg !5918

sw.bb:                                            ; preds = %entry, %entry
  %.cast = bitcast %union.gimple_statement_d* %stmt to %union.tree_node**, !dbg !5919
  %call2 = tail call fastcc %struct.gimple_seq_d* @find_goto_replacement(%struct.leh_tf_state* %tf, %union.tree_node** %.cast) #7, !dbg !5919
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call2, metadata !5914, metadata !DIExpression()), !dbg !5916
  %tobool = icmp eq %struct.gimple_seq_d* %call2, null, !dbg !5921
  br i1 %tobool, label %sw.epilog, label %if.then, !dbg !5923

if.then:                                          ; preds = %sw.bb
  %call3 = tail call %struct.gimple_seq_d* @gimple_seq_copy(%struct.gimple_seq_d* nonnull %call2) #6, !dbg !5924
  tail call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* %gsi, %struct.gimple_seq_d* %call3, i32 1) #6, !dbg !5926
  tail call void @gsi_remove(%struct.gimple_stmt_iterator* %gsi, i8 zeroext 0) #6, !dbg !5927
  br label %cleanup, !dbg !5928

sw.bb4:                                           ; preds = %entry
  %call5 = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %stmt, i32 2) #7, !dbg !5929
  tail call fastcc void @replace_goto_queue_cond_clause(%union.tree_node** %call5, %struct.leh_tf_state* %tf, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5930
  %call6 = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %stmt, i32 3) #7, !dbg !5931
  tail call fastcc void @replace_goto_queue_cond_clause(%union.tree_node** %call6, %struct.leh_tf_state* %tf, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5932
  br label %sw.epilog, !dbg !5933

sw.bb7:                                           ; preds = %entry
  %call8 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %stmt) #7, !dbg !5934
  tail call fastcc void @replace_goto_queue_stmt_list(%struct.gimple_seq_d* %call8, %struct.leh_tf_state* %tf) #7, !dbg !5935
  %call9 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %stmt) #7, !dbg !5936
  tail call fastcc void @replace_goto_queue_stmt_list(%struct.gimple_seq_d* %call9, %struct.leh_tf_state* %tf) #7, !dbg !5937
  br label %sw.epilog, !dbg !5938

sw.bb10:                                          ; preds = %entry
  %call11 = tail call fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* %stmt) #7, !dbg !5939
  tail call fastcc void @replace_goto_queue_stmt_list(%struct.gimple_seq_d* %call11, %struct.leh_tf_state* %tf) #7, !dbg !5940
  br label %sw.epilog, !dbg !5941

sw.bb12:                                          ; preds = %entry
  %call13 = tail call fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* %stmt) #7, !dbg !5942
  tail call fastcc void @replace_goto_queue_stmt_list(%struct.gimple_seq_d* %call13, %struct.leh_tf_state* %tf) #7, !dbg !5943
  br label %sw.epilog, !dbg !5944

sw.epilog:                                        ; preds = %sw.bb, %entry, %sw.bb12, %sw.bb10, %sw.bb7, %sw.bb4
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %gsi) #7, !dbg !5945
  br label %cleanup, !dbg !5946

cleanup:                                          ; preds = %sw.epilog, %if.then
  ret void, !dbg !5946
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @find_goto_replacement(%struct.leh_tf_state* %tf, %union.tree_node** %stmt.coerce) unnamed_addr #5 !dbg !5947 {
entry:
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !5951, metadata !DIExpression()), !dbg !5955
  %goto_queue_active = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 7, !dbg !5956
  %0 = load i64, i64* %goto_queue_active, align 8, !dbg !5956
  %cmp = icmp ult i64 %0, 20, !dbg !5958
  %1 = bitcast %union.tree_node** %stmt.coerce to i8*, !dbg !5959
  %2 = bitcast %union.tree_node** %stmt.coerce to %union.gimple_statement_d*, !dbg !5959
  br i1 %cmp, label %for.cond.preheader, label %if.end12, !dbg !5959

for.cond.preheader:                               ; preds = %entry
  %goto_queue = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !5960
  br label %for.cond, !dbg !5965

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5966
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5953, metadata !DIExpression()), !dbg !5955
  %conv = zext i32 %i.0 to i64, !dbg !5967
  %cmp2 = icmp ugt i64 %0, %conv, !dbg !5968
  br i1 %cmp2, label %for.body, label %cleanup.loopexit, !dbg !5965

for.body:                                         ; preds = %for.cond
  %3 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue, align 8, !dbg !5969
  %stmt4 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %3, i64 %conv, i32 0, !dbg !5970
  %g = bitcast %union.treemple* %stmt4 to %union.gimple_statement_d**, !dbg !5971
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %g, align 8, !dbg !5971
  %cmp6 = icmp eq %union.gimple_statement_d* %4, %2, !dbg !5972
  br i1 %cmp6, label %if.then8, label %for.inc, !dbg !5973

if.then8:                                         ; preds = %for.body
  %.lcssa = phi %struct.goto_queue_node* [ %3, %for.body ], !dbg !5969
  %conv.lcssa3 = phi i64 [ %conv, %for.body ], !dbg !5967
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5953, metadata !DIExpression()), !dbg !5955
  %repl_stmt = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %.lcssa, i64 %conv.lcssa3, i32 1, !dbg !5974
  %5 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %repl_stmt, align 8, !dbg !5974
  br label %cleanup, !dbg !5975

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5953, metadata !DIExpression()), !dbg !5955
  br label %for.cond, !dbg !5977, !llvm.loop !5978

if.end12:                                         ; preds = %entry
  %goto_queue_map = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 8, !dbg !5980
  %6 = load %struct.pointer_map_t*, %struct.pointer_map_t** %goto_queue_map, align 8, !dbg !5980
  %tobool = icmp eq %struct.pointer_map_t* %6, null, !dbg !5982
  br i1 %tobool, label %if.then13, label %if.end36, !dbg !5983

if.then13:                                        ; preds = %if.end12
  %call = tail call %struct.pointer_map_t* @pointer_map_create() #6, !dbg !5984
  store %struct.pointer_map_t* %call, %struct.pointer_map_t** %goto_queue_map, align 8, !dbg !5986
  call void @llvm.dbg.value(metadata i32 0, metadata !5953, metadata !DIExpression()), !dbg !5955
  %goto_queue22 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 5, !dbg !5987
  br label %for.cond15, !dbg !5991

for.cond15:                                       ; preds = %cond.end, %if.then13
  %i.1 = phi i32 [ 0, %if.then13 ], [ %inc34, %cond.end ], !dbg !5992
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5953, metadata !DIExpression()), !dbg !5955
  %conv16 = zext i32 %i.1 to i64, !dbg !5993
  %7 = load i64, i64* %goto_queue_active, align 8, !dbg !5994
  %cmp18 = icmp ugt i64 %7, %conv16, !dbg !5995
  br i1 %cmp18, label %for.body20, label %if.end36.loopexit, !dbg !5996

for.body20:                                       ; preds = %for.cond15
  %8 = load %struct.pointer_map_t*, %struct.pointer_map_t** %goto_queue_map, align 8, !dbg !5997
  %9 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue22, align 8, !dbg !5998
  %stmt25 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %9, i64 %conv16, i32 0, !dbg !5999
  %10 = bitcast %union.treemple* %stmt25 to i8**, !dbg !6000
  %11 = load i8*, i8** %10, align 8, !dbg !6000
  %call27 = tail call i8** @pointer_map_insert(%struct.pointer_map_t* %8, i8* %11) #6, !dbg !6001
  call void @llvm.dbg.value(metadata i8** %call27, metadata !5954, metadata !DIExpression()), !dbg !5955
  %12 = load i8*, i8** %call27, align 8, !dbg !6002
  %cmp28 = icmp eq i8* %12, null, !dbg !6002
  br i1 %cmp28, label %cond.end, label %cond.true, !dbg !6002

cond.true:                                        ; preds = %for.body20
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 451, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6002
  br label %cond.end, !dbg !6002

cond.end:                                         ; preds = %for.body20, %cond.true
  %13 = load %struct.goto_queue_node*, %struct.goto_queue_node** %goto_queue22, align 8, !dbg !6003
  %arrayidx32 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %13, i64 %conv16, !dbg !6004
  %14 = bitcast i8** %call27 to %struct.goto_queue_node**, !dbg !6005
  store %struct.goto_queue_node* %arrayidx32, %struct.goto_queue_node** %14, align 8, !dbg !6005
  %inc34 = add i32 %i.1, 1, !dbg !6006
  call void @llvm.dbg.value(metadata i32 %inc34, metadata !5953, metadata !DIExpression()), !dbg !5955
  br label %for.cond15, !dbg !6007, !llvm.loop !6008

if.end36.loopexit:                                ; preds = %for.cond15
  %.pre = load %struct.pointer_map_t*, %struct.pointer_map_t** %goto_queue_map, align 8, !dbg !6010
  br label %if.end36, !dbg !6010

if.end36:                                         ; preds = %if.end36.loopexit, %if.end12
  %15 = phi %struct.pointer_map_t* [ %.pre, %if.end36.loopexit ], [ %6, %if.end12 ], !dbg !6010
  %call39 = tail call i8** @pointer_map_contains(%struct.pointer_map_t* %15, i8* %1) #6, !dbg !6011
  call void @llvm.dbg.value(metadata i8** %call39, metadata !5954, metadata !DIExpression()), !dbg !5955
  %cmp40 = icmp eq i8** %call39, null, !dbg !6012
  br i1 %cmp40, label %cleanup, label %if.then42, !dbg !6014

if.then42:                                        ; preds = %if.end36
  %16 = bitcast i8** %call39 to %struct.goto_queue_node**, !dbg !6015
  %17 = load %struct.goto_queue_node*, %struct.goto_queue_node** %16, align 8, !dbg !6015
  %repl_stmt43 = getelementptr inbounds %struct.goto_queue_node, %struct.goto_queue_node* %17, i64 0, i32 1, !dbg !6016
  %18 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %repl_stmt43, align 8, !dbg !6016
  br label %cleanup, !dbg !6017

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6018

cleanup:                                          ; preds = %cleanup.loopexit, %if.end36, %if.then42, %if.then8
  %retval.0 = phi %struct.gimple_seq_d* [ %5, %if.then8 ], [ %18, %if.then42 ], [ null, %if.end36 ], [ null, %cleanup.loopexit ], !dbg !5955
  ret %struct.gimple_seq_d* %retval.0, !dbg !6018
}

declare dso_local %struct.gimple_seq_d* @gimple_seq_copy(%struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_goto_queue_cond_clause(%union.tree_node** %tp, %struct.leh_tf_state* %tf, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !6019 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !6023, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !6024, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6025, metadata !DIExpression()), !dbg !6030
  %call = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6031
  %call1 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %call) #7, !dbg !6032
  call void @llvm.dbg.value(metadata i32 %call1, metadata !6029, metadata !DIExpression()), !dbg !6030
  %call3 = tail call fastcc %struct.gimple_seq_d* @find_goto_replacement(%struct.leh_tf_state* %tf, %union.tree_node** %tp) #7, !dbg !6033
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call3, metadata !6027, metadata !DIExpression()), !dbg !6030
  %tobool = icmp eq %struct.gimple_seq_d* %call3, null, !dbg !6034
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6036

if.end:                                           ; preds = %entry
  %call4 = tail call fastcc zeroext i8 @gimple_seq_singleton_p(%struct.gimple_seq_d* nonnull %call3) #7, !dbg !6037
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6037
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !6039

land.lhs.true:                                    ; preds = %if.end
  %call6 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* nonnull %call3) #7, !dbg !6040
  %call7 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call6) #7, !dbg !6041
  %cmp = icmp eq i32 %call7, 3, !dbg !6042
  br i1 %cmp, label %if.then9, label %if.end12, !dbg !6043

if.then9:                                         ; preds = %land.lhs.true
  %call10 = tail call fastcc %union.gimple_statement_d* @gimple_seq_first_stmt(%struct.gimple_seq_d* nonnull %call3) #7, !dbg !6044
  %call11 = tail call fastcc %union.tree_node* @gimple_goto_dest(%union.gimple_statement_d* %call10) #7, !dbg !6046
  store %union.tree_node* %call11, %union.tree_node** %tp, align 8, !dbg !6047
  br label %cleanup, !dbg !6048

if.end12:                                         ; preds = %if.end, %land.lhs.true
  %call13 = tail call %union.tree_node* @create_artificial_label(i32 %call1) #6, !dbg !6049
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !6026, metadata !DIExpression()), !dbg !6030
  store %union.tree_node* %call13, %union.tree_node** %tp, align 8, !dbg !6050
  %call14 = tail call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* %call13) #6, !dbg !6051
  tail call void @gsi_insert_after(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call14, i32 2) #6, !dbg !6052
  %call15 = tail call %struct.gimple_seq_d* @gimple_seq_copy(%struct.gimple_seq_d* nonnull %call3) #6, !dbg !6053
  tail call void @gsi_insert_seq_after(%struct.gimple_stmt_iterator* %gsi, %struct.gimple_seq_d* %call15, i32 2) #6, !dbg !6054
  br label %cleanup, !dbg !6055

cleanup:                                          ; preds = %entry, %if.end12, %if.then9
  ret void, !dbg !6055
}

declare dso_local %struct.pointer_map_t* @pointer_map_create() local_unnamed_addr #2

declare dso_local i8** @pointer_map_insert(%struct.pointer_map_t*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_seq_singleton_p(%struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !6056 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !6060, metadata !DIExpression()), !dbg !6061
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !6062
  %cmp = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !6063
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !6064

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %seq) #7, !dbg !6065
  %call2 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %seq) #7, !dbg !6066
  %cmp3 = icmp eq %struct.gimple_seq_node_d* %call1, %call2, !dbg !6067
  %phitmp = zext i1 %cmp3 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6068
}

declare dso_local void @gsi_insert_seq_after(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6069 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6071, metadata !DIExpression()), !dbg !6072
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6073
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6073

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !6074
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !6074
  br label %cond.end, !dbg !6073

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6073
  ret %struct.gimple_seq_node_d* %cond, !dbg !6075
}

declare dso_local i32 @count_insns_seq(%struct.gimple_seq_d*, %struct.eni_weights_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_function_for_size_p(%struct.function*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lower_try_finally_fallthru_label(%struct.leh_tf_state* %tf) unnamed_addr #5 !dbg !6076 {
entry:
  call void @llvm.dbg.value(metadata %struct.leh_tf_state* %tf, metadata !6080, metadata !DIExpression()), !dbg !6083
  %fallthru_label = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 10, !dbg !6084
  %0 = load %union.tree_node*, %union.tree_node** %fallthru_label, align 8, !dbg !6084
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6081, metadata !DIExpression()), !dbg !6083
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !6085
  br i1 %tobool, label %if.then, label %if.end9, !dbg !6087

if.then:                                          ; preds = %entry
  %try_finally_expr = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 0, !dbg !6088
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr, align 8, !dbg !6088
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %1) #7, !dbg !6090
  %call1 = tail call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !6091
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6081, metadata !DIExpression()), !dbg !6083
  store %union.tree_node* %call1, %union.tree_node** %fallthru_label, align 8, !dbg !6092
  %outer = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %tf, i64 0, i32 3, !dbg !6093
  %2 = load %struct.leh_state*, %struct.leh_state** %outer, align 8, !dbg !6093
  %tf3 = getelementptr inbounds %struct.leh_state, %struct.leh_state* %2, i64 0, i32 2, !dbg !6095
  %3 = load %struct.leh_tf_state*, %struct.leh_tf_state** %tf3, align 8, !dbg !6095
  %tobool4 = icmp eq %struct.leh_tf_state* %3, null, !dbg !6096
  br i1 %tobool4, label %if.end9, label %if.then5, !dbg !6097

if.then5:                                         ; preds = %if.then
  %try_finally_expr8 = getelementptr inbounds %struct.leh_tf_state, %struct.leh_tf_state* %3, i64 0, i32 0, !dbg !6098
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %try_finally_expr8, align 8, !dbg !6098
  %5 = bitcast %union.tree_node* %call1 to %union.tree_node**, !dbg !6100
  tail call fastcc void @record_in_finally_tree(%union.tree_node** %5, %union.gimple_statement_d* %4) #7, !dbg !6100
  br label %if.end9, !dbg !6101

if.end9:                                          ; preds = %if.then, %entry, %if.then5
  %label.0 = phi %union.tree_node* [ %0, %entry ], [ %call1, %if.then5 ], [ %call1, %if.then ], !dbg !6083
  call void @llvm.dbg.value(metadata %union.tree_node* %label.0, metadata !6081, metadata !DIExpression()), !dbg !6083
  ret %union.tree_node* %label.0, !dbg !6102
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6103 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6105, metadata !DIExpression()), !dbg !6107
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) #7, !dbg !6108
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !6106, metadata !DIExpression()), !dbg !6107
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !6109
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6109

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !6110
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6110
  br label %cond.end, !dbg !6109

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6109
  ret %union.gimple_statement_d* %cond, !dbg !6111
}

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @sort_case_labels(%struct.VEC_tree_heap*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_switch_vec(%union.tree_node*, %union.tree_node*, %struct.VEC_tree_heap*) local_unnamed_addr #2

declare dso_local %struct.eh_region_d* @gen_eh_region_try(%struct.eh_region_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_eh_dispatch(%struct.gimple_seq_d** %seq, %struct.eh_region_d* %region) unnamed_addr #5 !dbg !6112 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !6114, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !6115, metadata !DIExpression()), !dbg !6117
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %region, i64 0, i32 3, !dbg !6118
  %0 = load i32, i32* %index, align 8, !dbg !6118
  %call = tail call %union.gimple_statement_d* @gimple_build_eh_dispatch(i32 %0) #6, !dbg !6119
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6116, metadata !DIExpression()), !dbg !6117
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %seq, %union.gimple_statement_d* %call) #6, !dbg !6120
  ret void, !dbg !6121
}

declare dso_local %struct.eh_catch_d* @gen_eh_region_catch(%struct.eh_region_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_catch_types(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6122 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6124, metadata !DIExpression()), !dbg !6125
  %types = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6126
  %0 = bitcast i32* %types to %union.tree_node**, !dbg !6126
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6126
  ret %union.tree_node* %1, !dbg !6127
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @frob_into_branch_around(%union.gimple_statement_d* %tp, %struct.eh_region_d* %region, %union.tree_node* %over) unnamed_addr #5 !dbg !6128 {
entry:
  %cleanup = alloca %struct.gimple_seq_d*, align 8
  %result = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %tp, metadata !6132, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %region, metadata !6133, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata %union.tree_node* %over, metadata !6134, metadata !DIExpression()), !dbg !6139
  %0 = bitcast %struct.gimple_seq_d** %cleanup to i8*, !dbg !6140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6140
  %1 = bitcast %struct.gimple_seq_d** %result to i8*, !dbg !6140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6140
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %tp) #7, !dbg !6141
  call void @llvm.dbg.value(metadata i32 %call, metadata !6138, metadata !DIExpression()), !dbg !6139
  %call1 = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %tp) #7, !dbg !6142
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call1, metadata !6136, metadata !DIExpression()), !dbg !6139
  store %struct.gimple_seq_d* %call1, %struct.gimple_seq_d** %cleanup, align 8, !dbg !6143
  %call2 = tail call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %tp) #7, !dbg !6144
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call2, metadata !6137, metadata !DIExpression()), !dbg !6139
  store %struct.gimple_seq_d* %call2, %struct.gimple_seq_d** %result, align 8, !dbg !6145
  %tobool = icmp eq %struct.eh_region_d* %region, null, !dbg !6146
  br i1 %tobool, label %if.end, label %if.then, !dbg !6148

if.then:                                          ; preds = %entry
  tail call fastcc void @emit_post_landing_pad(%struct.gimple_seq_d** nonnull @eh_seq, %struct.eh_region_d* nonnull %region) #7, !dbg !6149
  br label %if.end, !dbg !6149

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call1, metadata !6136, metadata !DIExpression()), !dbg !6139
  %call3 = tail call zeroext i8 @gimple_seq_may_fallthru(%struct.gimple_seq_d* %call1) #6, !dbg !6150
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6150
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !6152

if.then5:                                         ; preds = %if.end
  %tobool6 = icmp eq %union.tree_node* %over, null, !dbg !6153
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !6156

if.then7:                                         ; preds = %if.then5
  %call8 = tail call %union.tree_node* @create_artificial_label(i32 %call) #6, !dbg !6157
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !6134, metadata !DIExpression()), !dbg !6139
  br label %if.end9, !dbg !6158

if.end9:                                          ; preds = %if.then5, %if.then7
  %over.addr.0 = phi %union.tree_node* [ %over, %if.then5 ], [ %call8, %if.then7 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %over.addr.0, metadata !6134, metadata !DIExpression()), !dbg !6139
  %call10 = tail call %union.gimple_statement_d* @gimple_build_goto(%union.tree_node* %over.addr.0) #6, !dbg !6159
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !6135, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %cleanup, metadata !6136, metadata !DIExpression(DW_OP_deref)), !dbg !6139
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %cleanup, %union.gimple_statement_d* %call10) #6, !dbg !6160
  %.pre = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %cleanup, align 8, !dbg !6161
  br label %if.end11, !dbg !6162

if.end11:                                         ; preds = %if.end, %if.end9
  %2 = phi %struct.gimple_seq_d* [ %.pre, %if.end9 ], [ %call1, %if.end ], !dbg !6161
  %over.addr.1 = phi %union.tree_node* [ %over.addr.0, %if.end9 ], [ %over, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %over.addr.1, metadata !6134, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %2, metadata !6136, metadata !DIExpression()), !dbg !6139
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull @eh_seq, %struct.gimple_seq_d* %2) #6, !dbg !6163
  %tobool12 = icmp eq %union.tree_node* %over.addr.1, null, !dbg !6164
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !6166

if.then13:                                        ; preds = %if.end11
  %call14 = call %union.gimple_statement_d* @gimple_build_label(%union.tree_node* nonnull %over.addr.1) #6, !dbg !6167
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call14, metadata !6135, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %result, metadata !6137, metadata !DIExpression(DW_OP_deref)), !dbg !6139
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** nonnull %result, %union.gimple_statement_d* %call14) #6, !dbg !6169
  br label %if.end15, !dbg !6170

if.end15:                                         ; preds = %if.end11, %if.then13
  %3 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %result, align 8, !dbg !6171
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %3, metadata !6137, metadata !DIExpression()), !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6172
  ret %struct.gimple_seq_d* %3, !dbg !6173
}

declare dso_local %union.gimple_statement_d* @gimple_build_eh_dispatch(i32) local_unnamed_addr #2

declare dso_local %struct.eh_region_d* @gen_eh_region_allowed(%struct.eh_region_d*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_eh_filter_types(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6174 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6176, metadata !DIExpression()), !dbg !6177
  %types = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6178
  %0 = bitcast i32* %types to %union.tree_node**, !dbg !6178
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6178
  ret %union.tree_node* %1, !dbg !6179
}

declare dso_local %struct.eh_region_d* @gen_eh_region_must_not_throw(%struct.eh_region_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_eh_must_not_throw_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6180 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6184, metadata !DIExpression()), !dbg !6185
  %fndecl = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6186
  %0 = bitcast i32* %fndecl to %union.tree_node**, !dbg !6186
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6186
  ret %union.tree_node* %1, !dbg !6187
}

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @remove_eh_landing_pad(%struct.eh_landing_pad_d*) local_unnamed_addr #2

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6188 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6192, metadata !DIExpression()), !dbg !6194
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6195
  call void @llvm.dbg.value(metadata i32 %call, metadata !6193, metadata !DIExpression()), !dbg !6194
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !6196

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6198
  %bf.load = load i32, i32* %0, align 8, !dbg !6198
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6198
  br label %cleanup, !dbg !6199

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6200
  br label %cleanup, !dbg !6202

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !6194
  ret i32 %retval.0, !dbg !6203
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6204 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6206, metadata !DIExpression()), !dbg !6211
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %call, metadata !6207, metadata !DIExpression()), !dbg !6211
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !6213

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !6214
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6208, metadata !DIExpression()), !dbg !6216
  br label %cleanup, !dbg !6217

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !6218
  %cond = icmp eq i32 %call5, 66, !dbg !6219
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !6219

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !6220
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6220
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !6220
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6208, metadata !DIExpression()), !dbg !6216
  br label %cleanup, !dbg !6222

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !6223
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6223
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !6223
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6208, metadata !DIExpression()), !dbg !6216
  br label %cleanup, !dbg !6224

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !6225
  br label %cleanup, !dbg !6227

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6228
  br label %cleanup, !dbg !6229

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !6230
  ret %union.tree_node* %retval.0, !dbg !6231
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6232 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6234, metadata !DIExpression()), !dbg !6235
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6236
  %cmp = icmp ugt i32 %call, 2, !dbg !6238
  br i1 %cmp, label %if.then, label %return, !dbg !6239

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !6240
  br label %return, !dbg !6241

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !6242
  ret %union.tree_node* %retval.0, !dbg !6243
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6244 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6246, metadata !DIExpression()), !dbg !6249
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !6250
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6247, metadata !DIExpression()), !dbg !6249
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6251
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !6251
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6251
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6252
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !6252
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !6252
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !6253
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !6253
  ret %union.tree_node* %4, !dbg !6254
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6255 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6257, metadata !DIExpression()), !dbg !6259
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !6260
  call void @llvm.dbg.value(metadata i32 %call, metadata !6258, metadata !DIExpression()), !dbg !6259
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !6261
  %cmp = icmp eq i32 %call1, 3, !dbg !6263
  br i1 %cmp, label %if.then, label %if.end, !dbg !6264

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !6265
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6265
  %bf.load = load i64, i64* %0, align 8, !dbg !6265
  %1 = trunc i64 %bf.load to i32, !dbg !6265
  %bf.cast = and i32 %1, 65535, !dbg !6265
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6258, metadata !DIExpression()), !dbg !6259
  br label %if.end, !dbg !6266

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !6259
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !6258, metadata !DIExpression()), !dbg !6259
  ret i32 %code.0, !dbg !6267
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6268 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6270, metadata !DIExpression()), !dbg !6271
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !6272
  ret %union.tree_node* %call, !dbg !6273
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !6274 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6278, metadata !DIExpression()), !dbg !6279
  %idxprom = sext i32 %code to i64, !dbg !6280
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !6280
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6280
  %conv = zext i8 %0 to i32, !dbg !6281
  ret i32 %conv, !dbg !6282
}

; Function Attrs: nounwind uwtable
define internal fastcc void @refactor_eh_r(%struct.gimple_seq_d* %seq) unnamed_addr #5 !dbg !6283 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !6287, metadata !DIExpression()), !dbg !6291
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6292
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6292
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !6289, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !6290, metadata !DIExpression()), !dbg !6291
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6293
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6293
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %seq) #7, !dbg !6293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6293
  br label %while.cond, !dbg !6294

while.cond:                                       ; preds = %if.then28, %entry
  %two.0 = phi %union.gimple_statement_d* [ null, %entry ], [ %two.1, %if.then28 ], !dbg !6291
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %two.0, metadata !6290, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %two.0, metadata !6289, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6288, metadata !DIExpression(DW_OP_deref)), !dbg !6291
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6295
  %tobool = icmp eq i8 %call, 0, !dbg !6295
  br i1 %tobool, label %if.else, label %if.end, !dbg !6298

if.else:                                          ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6288, metadata !DIExpression(DW_OP_deref)), !dbg !6291
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6299
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !6290, metadata !DIExpression()), !dbg !6291
  br label %if.end

if.end:                                           ; preds = %while.cond, %if.else
  %two.1 = phi %union.gimple_statement_d* [ %call1, %if.else ], [ null, %while.cond ], !dbg !6300
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %two.1, metadata !6290, metadata !DIExpression()), !dbg !6291
  %tobool2 = icmp ne %union.gimple_statement_d* %two.0, null, !dbg !6301
  %tobool3 = icmp ne %union.gimple_statement_d* %two.1, null, !dbg !6303
  %or.cond = and i1 %tobool2, %tobool3, !dbg !6304
  br i1 %or.cond, label %land.lhs.true4, label %if.end16, !dbg !6304

land.lhs.true4:                                   ; preds = %if.end
  %call5 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %two.0) #7, !dbg !6305
  %cmp = icmp eq i32 %call5, 17, !dbg !6306
  br i1 %cmp, label %land.lhs.true6, label %if.end16, !dbg !6307

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %call7 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %two.1) #7, !dbg !6308
  %cmp8 = icmp eq i32 %call7, 17, !dbg !6309
  br i1 %cmp8, label %land.lhs.true9, label %if.end16, !dbg !6310

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %call10 = call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* nonnull %two.0) #7, !dbg !6311
  %cmp11 = icmp eq i32 %call10, 2, !dbg !6312
  br i1 %cmp11, label %land.lhs.true12, label %if.end16, !dbg !6313

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %call13 = call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* nonnull %two.1) #7, !dbg !6314
  %cmp14 = icmp eq i32 %call13, 2, !dbg !6315
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !6316

if.then15:                                        ; preds = %land.lhs.true12
  call fastcc void @optimize_double_finally(%union.gimple_statement_d* nonnull %two.0, %union.gimple_statement_d* nonnull %two.1) #7, !dbg !6317
  br label %if.end16, !dbg !6317

if.end16:                                         ; preds = %if.then15, %land.lhs.true12, %land.lhs.true9, %land.lhs.true6, %land.lhs.true4, %if.end
  %tobool17 = icmp eq %union.gimple_statement_d* %two.0, null, !dbg !6318
  br i1 %tobool17, label %if.end26, label %if.then18, !dbg !6320

if.then18:                                        ; preds = %if.end16
  %call19 = call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %two.0) #7, !dbg !6321
  switch i32 %call19, label %if.end26 [
    i32 17, label %sw.bb
    i32 11, label %sw.bb22
    i32 12, label %sw.bb24
  ], !dbg !6322

sw.bb:                                            ; preds = %if.then18
  %call20 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* nonnull %two.0) #7, !dbg !6323
  call fastcc void @refactor_eh_r(%struct.gimple_seq_d* %call20) #7, !dbg !6325
  %call21 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* nonnull %two.0) #7, !dbg !6326
  call fastcc void @refactor_eh_r(%struct.gimple_seq_d* %call21) #7, !dbg !6327
  br label %if.end26, !dbg !6328

sw.bb22:                                          ; preds = %if.then18
  %call23 = call fastcc %struct.gimple_seq_d* @gimple_catch_handler(%union.gimple_statement_d* nonnull %two.0) #7, !dbg !6329
  call fastcc void @refactor_eh_r(%struct.gimple_seq_d* %call23) #7, !dbg !6330
  br label %if.end26, !dbg !6331

sw.bb24:                                          ; preds = %if.then18
  %call25 = call fastcc %struct.gimple_seq_d* @gimple_eh_filter_failure(%union.gimple_statement_d* nonnull %two.0) #7, !dbg !6332
  call fastcc void @refactor_eh_r(%struct.gimple_seq_d* %call25) #7, !dbg !6333
  br label %if.end26, !dbg !6334

if.end26:                                         ; preds = %if.end16, %sw.bb, %sw.bb22, %sw.bb24, %if.then18
  %tobool27 = icmp eq %union.gimple_statement_d* %two.1, null, !dbg !6335
  br i1 %tobool27, label %while.end, label %if.then28, !dbg !6337

if.then28:                                        ; preds = %if.end26
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6288, metadata !DIExpression(DW_OP_deref)), !dbg !6291
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !6338
  br label %while.cond, !dbg !6294, !llvm.loop !6339

while.end:                                        ; preds = %if.end26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6341
  ret void, !dbg !6341
}

; Function Attrs: nounwind uwtable
define internal fastcc void @optimize_double_finally(%union.gimple_statement_d* %one, %union.gimple_statement_d* %two) unnamed_addr #5 !dbg !6342 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %seq = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %one, metadata !6344, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %two, metadata !6345, metadata !DIExpression()), !dbg !6351
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6352
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6352
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6353
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6353
  %call = tail call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %one) #7, !dbg !6354
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %call) #7, !dbg !6353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6353
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6353
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6347, metadata !DIExpression(DW_OP_deref)), !dbg !6351
  %call1 = call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6355
  %tobool = icmp eq i8 %call1, 0, !dbg !6355
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6357

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6347, metadata !DIExpression(DW_OP_deref)), !dbg !6351
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6358
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !6346, metadata !DIExpression()), !dbg !6351
  %call3 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call2) #7, !dbg !6359
  %cmp = icmp eq i32 %call3, 17, !dbg !6361
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !6362

lor.lhs.false:                                    ; preds = %if.end
  %call4 = call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %call2) #7, !dbg !6363
  %cmp5 = icmp eq i32 %call4, 1, !dbg !6364
  br i1 %cmp5, label %if.end7, label %cleanup, !dbg !6365

if.end7:                                          ; preds = %lor.lhs.false
  %call8 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %call2) #7, !dbg !6366
  %call9 = call fastcc %struct.gimple_seq_d* @gimple_try_cleanup(%union.gimple_statement_d* %two) #7, !dbg !6367
  %call10 = call fastcc zeroext i8 @same_handler_p(%struct.gimple_seq_d* %call8, %struct.gimple_seq_d* %call9) #7, !dbg !6368
  %tobool11 = icmp eq i8 %call10, 0, !dbg !6368
  br i1 %tobool11, label %cleanup, label %if.then12, !dbg !6369

if.then12:                                        ; preds = %if.end7
  %2 = bitcast %struct.gimple_seq_d** %seq to i8*, !dbg !6370
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6370
  %call13 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %call2) #7, !dbg !6371
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call13, metadata !6348, metadata !DIExpression()), !dbg !6372
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call13, metadata !6348, metadata !DIExpression()), !dbg !6372
  call fastcc void @gimple_try_set_cleanup(%union.gimple_statement_d* %one, %struct.gimple_seq_d* %call13) #7, !dbg !6373
  call fastcc void @gimple_try_set_kind(%union.gimple_statement_d* %one, i32 1) #7, !dbg !6374
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call13, metadata !6348, metadata !DIExpression()), !dbg !6372
  %call14 = call %struct.gimple_seq_d* @copy_gimple_seq_and_replace_locals(%struct.gimple_seq_d* %call13) #6, !dbg !6375
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call14, metadata !6348, metadata !DIExpression()), !dbg !6372
  store %struct.gimple_seq_d* %call14, %struct.gimple_seq_d** %seq, align 8, !dbg !6376
  %call15 = call fastcc %struct.gimple_seq_d* @gimple_try_eval(%union.gimple_statement_d* %two) #7, !dbg !6377
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %seq, metadata !6348, metadata !DIExpression(DW_OP_deref)), !dbg !6372
  call void @gimple_seq_add_seq(%struct.gimple_seq_d** nonnull %seq, %struct.gimple_seq_d* %call15) #6, !dbg !6378
  %3 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !6379
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %3, metadata !6348, metadata !DIExpression()), !dbg !6372
  call fastcc void @gimple_try_set_eval(%union.gimple_statement_d* %two, %struct.gimple_seq_d* %3) #7, !dbg !6380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6381
  br label %cleanup, !dbg !6382

cleanup:                                          ; preds = %if.end7, %lor.lhs.false, %if.end, %entry, %if.then12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6383
  ret void, !dbg !6383
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !6384 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !6386, metadata !DIExpression()), !dbg !6387
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !6388
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6388
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !6389
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !6390

land.rhs:                                         ; preds = %entry
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !6391
  %1 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %next, align 8, !dbg !6391
  %cmp2 = icmp eq %struct.gimple_seq_node_d* %1, null, !dbg !6392
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !6393
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @same_handler_p(%struct.gimple_seq_d* %oneh, %struct.gimple_seq_d* %twoh) unnamed_addr #5 !dbg !6394 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp2 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %oneh, metadata !6398, metadata !DIExpression()), !dbg !6404
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %twoh, metadata !6399, metadata !DIExpression()), !dbg !6404
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6405
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6405
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6406
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6406
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.gimple_seq_d* %oneh) #7, !dbg !6406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6406
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6406
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6400, metadata !DIExpression(DW_OP_deref)), !dbg !6404
  %call = call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6407
  %tobool = icmp eq i8 %call, 0, !dbg !6407
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6409

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6400, metadata !DIExpression(DW_OP_deref)), !dbg !6404
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6410
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !6401, metadata !DIExpression()), !dbg !6404
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp2 to i8*, !dbg !6411
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6411
  call fastcc void @gsi_start(%struct.gimple_stmt_iterator* nonnull sret %tmp2, %struct.gimple_seq_d* %twoh) #7, !dbg !6411
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !6411
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6411
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6400, metadata !DIExpression(DW_OP_deref)), !dbg !6404
  %call3 = call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6412
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6412
  br i1 %tobool4, label %cleanup, label %if.end6, !dbg !6414

if.end6:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6400, metadata !DIExpression(DW_OP_deref)), !dbg !6404
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !6415
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !6402, metadata !DIExpression()), !dbg !6404
  %call8 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call1) #7, !dbg !6416
  %tobool9 = icmp eq i8 %call8, 0, !dbg !6416
  br i1 %tobool9, label %cleanup, label %lor.lhs.false, !dbg !6418

lor.lhs.false:                                    ; preds = %if.end6
  %call10 = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %call7) #7, !dbg !6419
  %tobool11 = icmp eq i8 %call10, 0, !dbg !6419
  br i1 %tobool11, label %cleanup, label %lor.lhs.false12, !dbg !6420

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %call13 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call1) #7, !dbg !6421
  %tobool14 = icmp eq %union.tree_node* %call13, null, !dbg !6421
  br i1 %tobool14, label %lor.lhs.false15, label %cleanup, !dbg !6422

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %call16 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %call7) #7, !dbg !6423
  %tobool17 = icmp eq %union.tree_node* %call16, null, !dbg !6423
  br i1 %tobool17, label %lor.lhs.false18, label %cleanup, !dbg !6424

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %call19 = call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %call1) #7, !dbg !6425
  %tobool20 = icmp eq %union.tree_node* %call19, null, !dbg !6425
  br i1 %tobool20, label %lor.lhs.false21, label %cleanup, !dbg !6426

lor.lhs.false21:                                  ; preds = %lor.lhs.false18
  %call22 = call fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %call7) #7, !dbg !6427
  %tobool23 = icmp eq %union.tree_node* %call22, null, !dbg !6427
  br i1 %tobool23, label %lor.lhs.false24, label %cleanup, !dbg !6428

lor.lhs.false24:                                  ; preds = %lor.lhs.false21
  %call25 = call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call1) #7, !dbg !6429
  %call26 = call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %call7) #7, !dbg !6430
  %call27 = call i32 @operand_equal_p(%union.tree_node* %call25, %union.tree_node* %call26, i32 0) #6, !dbg !6431
  %tobool28 = icmp eq i32 %call27, 0, !dbg !6431
  br i1 %tobool28, label %cleanup, label %lor.lhs.false29, !dbg !6432

lor.lhs.false29:                                  ; preds = %lor.lhs.false24
  %call30 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call1) #7, !dbg !6433
  %call31 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call7) #7, !dbg !6434
  %cmp = icmp eq i32 %call30, %call31, !dbg !6435
  br i1 %cmp, label %for.cond.preheader, label %cleanup, !dbg !6436

for.cond.preheader:                               ; preds = %lor.lhs.false29
  br label %for.cond, !dbg !6437

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %ai.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6439
  call void @llvm.dbg.value(metadata i32 %ai.0, metadata !6403, metadata !DIExpression()), !dbg !6404
  %call34 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call1) #7, !dbg !6440
  %cmp35 = icmp ult i32 %ai.0, %call34, !dbg !6442
  br i1 %cmp35, label %for.body, label %cleanup.loopexit, !dbg !6437

for.body:                                         ; preds = %for.cond
  %call36 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call1, i32 %ai.0) #7, !dbg !6443
  %call37 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call7, i32 %ai.0) #7, !dbg !6445
  %call38 = call i32 @operand_equal_p(%union.tree_node* %call36, %union.tree_node* %call37, i32 0) #6, !dbg !6446
  %tobool39 = icmp eq i32 %call38, 0, !dbg !6446
  br i1 %tobool39, label %cleanup.loopexit, label %for.inc, !dbg !6447

for.inc:                                          ; preds = %for.body
  %inc = add i32 %ai.0, 1, !dbg !6448
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6403, metadata !DIExpression()), !dbg !6404
  br label %for.cond, !dbg !6449, !llvm.loop !6450

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !6452

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false29, %lor.lhs.false24, %lor.lhs.false21, %lor.lhs.false18, %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false, %if.end6, %if.end, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 0, %lor.lhs.false29 ], [ 0, %lor.lhs.false24 ], [ 0, %lor.lhs.false21 ], [ 0, %lor.lhs.false18 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false12 ], [ 0, %lor.lhs.false ], [ 0, %if.end6 ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !6404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6452
  ret i8 %retval.0, !dbg !6452
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_try_set_kind(%union.gimple_statement_d* %gs, i32 %kind) unnamed_addr #0 !dbg !6453 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6457, metadata !DIExpression()), !dbg !6459
  call void @llvm.dbg.value(metadata i32 1, metadata !6458, metadata !DIExpression()), !dbg !6459
  %call = tail call fastcc i32 @gimple_try_kind(%union.gimple_statement_d* %gs) #7, !dbg !6460
  %cmp2 = icmp eq i32 %call, 1, !dbg !6462
  br i1 %cmp2, label %if.end, label %if.then, !dbg !6463

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !6464
  %bf.load = load i32, i32* %0, align 8, !dbg !6465
  %bf.clear = and i32 %bf.load, 65535, !dbg !6465
  %bf.set = or i32 %bf.clear, 65536, !dbg !6465
  store i32 %bf.set, i32* %0, align 8, !dbg !6465
  br label %if.end, !dbg !6466

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6467
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_try_set_eval(%union.gimple_statement_d* %gs, %struct.gimple_seq_d* %eval) unnamed_addr #0 !dbg !6468 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6470, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %eval, metadata !6471, metadata !DIExpression()), !dbg !6472
  %eval1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6473
  %0 = bitcast i32* %eval1 to %struct.gimple_seq_d**, !dbg !6473
  store %struct.gimple_seq_d* %eval, %struct.gimple_seq_d** %0, align 8, !dbg !6474
  ret void, !dbg !6475
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_chain(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6476 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6478, metadata !DIExpression()), !dbg !6479
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !6480
  ret %union.tree_node* %call, !dbg !6481
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6482 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6484, metadata !DIExpression()), !dbg !6486
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !6487
  call void @llvm.dbg.value(metadata i32 %call, metadata !6485, metadata !DIExpression()), !dbg !6486
  %sub = add i32 %call, -3, !dbg !6488
  ret i32 %sub, !dbg !6489
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6490 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6492, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.value(metadata i32 %index, metadata !6493, metadata !DIExpression()), !dbg !6494
  %add = add i32 %index, 3, !dbg !6495
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !6496
  ret %union.tree_node* %call, !dbg !6497
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_resx(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6498 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6500, metadata !DIExpression()), !dbg !6501
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !6502
  %cmp = icmp eq i32 %call, 14, !dbg !6503
  %conv1 = zext i1 %cmp to i8, !dbg !6502
  ret i8 %conv1, !dbg !6504
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @lower_resx(%struct.basic_block_def* %bb, %union.gimple_statement_d* %stmt, %struct.pointer_map_t* %mnt_map) unnamed_addr #5 !dbg !6505 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %gsi2 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp34 = alloca %struct.gimple_stmt_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp73 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6509, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6510, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.pointer_map_t* %mnt_map, metadata !6511, metadata !DIExpression()), !dbg !6540
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6541
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6541
  call void @llvm.dbg.value(metadata i8 0, metadata !6519, metadata !DIExpression()), !dbg !6540
  %call = tail call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %stmt) #7, !dbg !6542
  call void @llvm.dbg.value(metadata i32 %call, metadata !6512, metadata !DIExpression()), !dbg !6540
  %cmp = icmp eq i32 %call, 0, !dbg !6543
  br i1 %cmp, label %if.end, label %if.then, !dbg !6545

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.eh_region_d* @get_eh_region_from_lp_number(i32 %call) #6, !dbg !6546
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call1, metadata !6514, metadata !DIExpression()), !dbg !6540
  br label %if.end, !dbg !6547

if.end:                                           ; preds = %entry, %if.then
  %dst_r.0 = phi %struct.eh_region_d* [ %call1, %if.then ], [ null, %entry ], !dbg !6548
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %dst_r.0, metadata !6514, metadata !DIExpression()), !dbg !6540
  %call2 = tail call fastcc i32 @gimple_resx_region(%union.gimple_statement_d* %stmt) #7, !dbg !6549
  %call3 = tail call %struct.eh_region_d* @get_eh_region_from_number(i32 %call2) #6, !dbg !6550
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call3, metadata !6513, metadata !DIExpression()), !dbg !6540
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6551
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6551
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !6551
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6551
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6551
  %cmp4 = icmp eq %struct.eh_region_d* %call3, null, !dbg !6552
  br i1 %cmp4, label %if.then5, label %if.else19, !dbg !6553

if.then5:                                         ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 509), align 8, !dbg !6554
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6517, metadata !DIExpression()), !dbg !6540
  %call6 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %2, i32 0) #6, !dbg !6556
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !6516, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call6, i32 1) #6, !dbg !6557
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6558
  br label %while.cond, !dbg !6559

while.cond:                                       ; preds = %cond.end16, %if.then5
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6560
  %tobool = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !6560
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6560

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !6560
  br label %cond.end, !dbg !6560

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !6560
  %call8 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6560
  %cmp9 = icmp eq i32 %call8, 0, !dbg !6561
  br i1 %cmp9, label %if.end117.loopexit, label %while.body, !dbg !6559

while.body:                                       ; preds = %cond.end
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6562
  %tobool11 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !6562
  br i1 %tobool11, label %cond.end16, label %cond.true12, !dbg !6562

cond.true12:                                      ; preds = %while.body
  %base14 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !6562
  br label %cond.end16, !dbg !6562

cond.end16:                                       ; preds = %while.body, %cond.true12
  %cond17 = phi %struct.VEC_edge_base* [ %base14, %cond.true12 ], [ null, %while.body ], !dbg !6562
  %call18 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond17, i32 0) #7, !dbg !6562
  call void @remove_edge(%struct.edge_def* %call18) #6, !dbg !6563
  br label %while.cond, !dbg !6559, !llvm.loop !6564

if.else19:                                        ; preds = %if.end
  %tobool20 = icmp eq %struct.eh_region_d* %dst_r.0, null, !dbg !6566
  br i1 %tobool20, label %if.else88, label %if.then21, !dbg !6567

if.then21:                                        ; preds = %if.else19
  %5 = bitcast %struct.edge_def** %e to i8*, !dbg !6568
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6568
  %cmp22 = icmp slt i32 %call, 0, !dbg !6569
  br i1 %cmp22, label %if.then23, label %if.else58, !dbg !6570

if.then23:                                        ; preds = %if.then21
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %dst_r.0, i64 0, i32 4, !dbg !6571
  %6 = load i32, i32* %type, align 4, !dbg !6571
  %cmp24 = icmp eq i32 %6, 3, !dbg !6571
  br i1 %cmp24, label %cond.end27, label %cond.true25, !dbg !6571

cond.true25:                                      ; preds = %if.then23
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2906, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6571
  br label %cond.end27, !dbg !6571

cond.end27:                                       ; preds = %if.then23, %cond.true25
  %7 = bitcast %struct.eh_region_d* %dst_r.0 to i8*, !dbg !6572
  %call29 = call i8** @pointer_map_contains(%struct.pointer_map_t* %mnt_map, i8* nonnull %7) #6, !dbg !6573
  call void @llvm.dbg.value(metadata i8** %call29, metadata !6527, metadata !DIExpression()), !dbg !6574
  %cmp30 = icmp eq i8** %call29, null, !dbg !6575
  br i1 %cmp30, label %if.then31, label %if.else39, !dbg !6576

if.then31:                                        ; preds = %cond.end27
  %8 = bitcast %struct.gimple_stmt_iterator* %gsi2 to i8*, !dbg !6577
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !6577
  %call32 = call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %bb) #6, !dbg !6578
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call32, metadata !6524, metadata !DIExpression()), !dbg !6574
  %call33 = call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %call32) #6, !dbg !6579
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !6528, metadata !DIExpression()), !dbg !6574
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp34 to i8*, !dbg !6580
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !6580
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp34, %struct.basic_block_def* %call32) #7, !dbg !6580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !6580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !6580
  %failure_decl = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %dst_r.0, i64 0, i32 5, i32 0, i32 0, !dbg !6581
  %10 = load %union.tree_node*, %union.tree_node** %failure_decl, align 8, !dbg !6581
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !6517, metadata !DIExpression()), !dbg !6540
  %call35 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %10, i32 0) #6, !dbg !6582
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call35, metadata !6516, metadata !DIExpression()), !dbg !6540
  %failure_loc = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %dst_r.0, i64 0, i32 5, i32 0, i32 1, !dbg !6583
  %11 = bitcast %union.tree_node** %failure_loc to i32*, !dbg !6583
  %12 = load i32, i32* %11, align 8, !dbg !6583
  call fastcc void @gimple_set_location(%union.gimple_statement_d* %call35, i32 %12) #7, !dbg !6584
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi2, metadata !6529, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi2, %union.gimple_statement_d* %call35, i32 2) #6, !dbg !6586
  %call38 = call i8** @pointer_map_insert(%struct.pointer_map_t* %mnt_map, i8* nonnull %7) #6, !dbg !6587
  call void @llvm.dbg.value(metadata i8** %call38, metadata !6527, metadata !DIExpression()), !dbg !6574
  %13 = bitcast i8** %call38 to %union.tree_node**, !dbg !6588
  store %union.tree_node* %call33, %union.tree_node** %13, align 8, !dbg !6588
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !6589
  br label %if.end41, !dbg !6590

if.else39:                                        ; preds = %cond.end27
  %14 = bitcast i8** %call29 to %union.tree_node**, !dbg !6591
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !6591
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !6528, metadata !DIExpression()), !dbg !6574
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6593
  %call40 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %16, %union.tree_node* %15) #6, !dbg !6593
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call40, metadata !6524, metadata !DIExpression()), !dbg !6574
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then31
  %new_bb.0 = phi %struct.basic_block_def* [ %call32, %if.then31 ], [ %call40, %if.else39 ], !dbg !6594
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.0, metadata !6524, metadata !DIExpression()), !dbg !6574
  %succs42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6595
  %17 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs42, align 8, !dbg !6595
  %tobool43 = icmp eq %struct.VEC_edge_gc* %17, null, !dbg !6595
  br i1 %tobool43, label %cond.end48, label %cond.true44, !dbg !6595

cond.true44:                                      ; preds = %if.end41
  %base46 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %17, i64 0, i32 0, !dbg !6595
  br label %cond.end48, !dbg !6595

cond.end48:                                       ; preds = %if.end41, %cond.true44
  %cond49 = phi %struct.VEC_edge_base* [ %base46, %cond.true44 ], [ null, %if.end41 ], !dbg !6595
  %call50 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond49) #7, !dbg !6595
  %cmp51 = icmp eq i32 %call50, 0, !dbg !6595
  br i1 %cmp51, label %cond.end54, label %cond.true52, !dbg !6595

cond.true52:                                      ; preds = %cond.end48
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2931, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6595
  br label %cond.end54, !dbg !6595

cond.end54:                                       ; preds = %cond.end48, %cond.true52
  %call56 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %new_bb.0, i32 1) #6, !dbg !6596
  call void @llvm.dbg.value(metadata %struct.edge_def* %call56, metadata !6520, metadata !DIExpression()), !dbg !6597
  store %struct.edge_def* %call56, %struct.edge_def** %e, align 8, !dbg !6598
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 8, !dbg !6599
  %18 = load i64, i64* %count, align 8, !dbg !6599
  call void @llvm.dbg.value(metadata %struct.edge_def* %call56, metadata !6520, metadata !DIExpression()), !dbg !6597
  %count57 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call56, i64 0, i32 9, !dbg !6600
  store i64 %18, i64* %count57, align 8, !dbg !6601
  call void @llvm.dbg.value(metadata %struct.edge_def* %call56, metadata !6520, metadata !DIExpression()), !dbg !6597
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call56, i64 0, i32 8, !dbg !6602
  store i32 10000, i32* %probability, align 4, !dbg !6603
  br label %if.end87, !dbg !6604

if.else58:                                        ; preds = %if.then21
  %19 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6605
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8, !dbg !6605
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %dst_r.0, i64 0, i32 3, !dbg !6606
  %20 = load i32, i32* %index, align 8, !dbg !6606
  %conv = sext i32 %20 to i64, !dbg !6607
  %call59 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #6, !dbg !6608
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !6534, metadata !DIExpression()), !dbg !6609
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 554), align 16, !dbg !6610
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !6517, metadata !DIExpression()), !dbg !6540
  %index60 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call3, i64 0, i32 3, !dbg !6611
  %22 = load i32, i32* %index60, align 8, !dbg !6611
  %conv61 = sext i32 %22 to i64, !dbg !6612
  %call62 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv61) #6, !dbg !6613
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !6518, metadata !DIExpression()), !dbg !6540
  %call63 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %21, i32 2, %union.tree_node* %call59, %union.tree_node* %call62) #6, !dbg !6614
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call63, metadata !6516, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call63, i32 1) #6, !dbg !6615
  %call64 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !6616
  call void @llvm.dbg.value(metadata %struct.edge_def* %call64, metadata !6520, metadata !DIExpression()), !dbg !6597
  store %struct.edge_def* %call64, %struct.edge_def** %e, align 8, !dbg !6617
  call void @llvm.dbg.value(metadata %struct.edge_def* %call64, metadata !6520, metadata !DIExpression()), !dbg !6597
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call64, i64 0, i32 7, !dbg !6618
  %23 = load i32, i32* %flags, align 8, !dbg !6618
  %and = and i32 %23, 8, !dbg !6618
  %tobool65 = icmp eq i32 %and, 0, !dbg !6618
  br i1 %tobool65, label %cond.true66, label %cond.end68, !dbg !6618

cond.true66:                                      ; preds = %if.else58
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2948, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6618
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6619
  %flags70.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.pre, i64 0, i32 7, !dbg !6609
  %.pre1 = load i32, i32* %flags70.phi.trans.insert, align 8, !dbg !6620
  br label %cond.end68, !dbg !6618

cond.end68:                                       ; preds = %if.else58, %cond.true66
  %24 = phi i32 [ %23, %if.else58 ], [ %.pre1, %cond.true66 ], !dbg !6620
  %25 = phi %struct.edge_def* [ %call64, %if.else58 ], [ %.pre, %cond.true66 ], !dbg !6621
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6520, metadata !DIExpression()), !dbg !6597
  %flags70 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 7, !dbg !6620
  %and71 = and i32 %24, -10, !dbg !6623
  %or = or i32 %and71, 1, !dbg !6624
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6520, metadata !DIExpression()), !dbg !6597
  store i32 %or, i32* %flags70, align 8, !dbg !6625
  %26 = bitcast %struct.edge_iterator* %tmp73 to i8*, !dbg !6621
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8, !dbg !6621
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6520, metadata !DIExpression()), !dbg !6597
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 1, !dbg !6621
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6621
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i64 0, i32 0, !dbg !6621
  %call74 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !6621
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp73, i64 0, i32 0, !dbg !6621
  %29 = extractvalue { i32, %struct.VEC_edge_gc** } %call74, 0, !dbg !6621
  store i32 %29, i32* %28, align 8, !dbg !6621
  %30 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp73, i64 0, i32 1, !dbg !6621
  %31 = extractvalue { i32, %struct.VEC_edge_gc** } %call74, 1, !dbg !6621
  store %struct.VEC_edge_gc** %31, %struct.VEC_edge_gc*** %30, align 8, !dbg !6621
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %26, i64 16, i1 false), !dbg !6621
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8, !dbg !6621
  %32 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6626
  %33 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6626
  br label %for.cond, !dbg !6621

for.cond:                                         ; preds = %for.inc, %cond.end68
  %34 = load i32, i32* %32, align 8, !dbg !6628
  %35 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %33, align 8, !dbg !6628
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6520, metadata !DIExpression(DW_OP_deref)), !dbg !6597
  %call75 = call fastcc zeroext i8 @ei_cond(i32 %34, %struct.VEC_edge_gc** %35, %struct.edge_def** nonnull %e) #7, !dbg !6628
  %tobool76 = icmp eq i8 %call75, 0, !dbg !6621
  br i1 %tobool76, label %for.cond.for.end_crit_edge, label %for.body, !dbg !6621

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %.pre2 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6629
  br label %for.end, !dbg !6621

for.body:                                         ; preds = %for.cond
  %36 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6630
  call void @llvm.dbg.value(metadata %struct.edge_def* %36, metadata !6520, metadata !DIExpression()), !dbg !6597
  %flags77 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i64 0, i32 7, !dbg !6632
  %37 = load i32, i32* %flags77, align 8, !dbg !6632
  %and78 = and i32 %37, 8, !dbg !6633
  %tobool79 = icmp eq i32 %and78, 0, !dbg !6633
  br i1 %tobool79, label %for.inc, label %for.end.loopexit, !dbg !6634

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6532, metadata !DIExpression(DW_OP_deref)), !dbg !6609
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6628
  br label %for.cond, !dbg !6628, !llvm.loop !6635

for.end.loopexit:                                 ; preds = %for.body
  %.lcssa = phi %struct.edge_def* [ %36, %for.body ], !dbg !6630
  br label %for.end, !dbg !6637

for.end:                                          ; preds = %for.end.loopexit, %for.cond.for.end_crit_edge
  %38 = phi %struct.edge_def* [ %.pre2, %for.cond.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !6629
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !6520, metadata !DIExpression()), !dbg !6597
  %cmp82 = icmp eq %struct.edge_def* %38, null, !dbg !6637
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !6638

if.then84:                                        ; preds = %for.end
  %call85 = call %struct.eh_landing_pad_d* @get_eh_landing_pad_from_number(i32 %call) #6, !dbg !6639
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call85, metadata !6535, metadata !DIExpression()), !dbg !6640
  call void @remove_eh_landing_pad(%struct.eh_landing_pad_d* %call85) #6, !dbg !6641
  br label %if.end86, !dbg !6642

if.end86:                                         ; preds = %if.then84, %for.end
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8, !dbg !6643
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %cond.end54
  call void @llvm.dbg.value(metadata i8 1, metadata !6519, metadata !DIExpression()), !dbg !6540
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6644
  br label %if.end117, !dbg !6645

if.else88:                                        ; preds = %if.else19
  %use_cxa_end_cleanup = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call3, i64 0, i32 9, !dbg !6646
  %39 = load i8, i8* %use_cxa_end_cleanup, align 8, !dbg !6646
  %tobool89 = icmp eq i8 %39, 0, !dbg !6648
  br i1 %tobool89, label %if.else92, label %if.then90, !dbg !6649

if.then90:                                        ; preds = %if.else88
  %40 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 551), align 8, !dbg !6650
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !6517, metadata !DIExpression()), !dbg !6540
  %call91 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %40, i32 0) #6, !dbg !6652
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call91, metadata !6516, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call91, i32 1) #6, !dbg !6653
  br label %if.end100, !dbg !6654

if.else92:                                        ; preds = %if.else88
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 552), align 16, !dbg !6655
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !6517, metadata !DIExpression()), !dbg !6540
  %index93 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call3, i64 0, i32 3, !dbg !6657
  %42 = load i32, i32* %index93, align 8, !dbg !6657
  %conv94 = sext i32 %42 to i64, !dbg !6658
  %call95 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv94) #6, !dbg !6659
  call void @llvm.dbg.value(metadata %union.tree_node* %call95, metadata !6518, metadata !DIExpression()), !dbg !6540
  %call96 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %41, i32 1, %union.tree_node* %call95) #6, !dbg !6660
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call96, metadata !6516, metadata !DIExpression()), !dbg !6540
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !6661
  %call97 = call %union.tree_node* @create_tmp_var(%union.tree_node* %43, i8* null) #6, !dbg !6662
  call void @llvm.dbg.value(metadata %union.tree_node* %call97, metadata !6538, metadata !DIExpression()), !dbg !6663
  %call98 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call97, %union.gimple_statement_d* %call96) #7, !dbg !6664
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !6538, metadata !DIExpression()), !dbg !6663
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call96, %union.tree_node* %call98) #7, !dbg !6665
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call96, i32 1) #6, !dbg !6666
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 550), align 16, !dbg !6667
  call void @llvm.dbg.value(metadata %union.tree_node* %44, metadata !6517, metadata !DIExpression()), !dbg !6540
  %call99 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %44, i32 1, %union.tree_node* %call98) #6, !dbg !6668
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call99, metadata !6516, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call99, i32 1) #6, !dbg !6669
  br label %if.end100

if.end100:                                        ; preds = %if.else92, %if.then90
  %succs101 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6670
  %45 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs101, align 8, !dbg !6670
  %tobool102 = icmp eq %struct.VEC_edge_gc* %45, null, !dbg !6670
  br i1 %tobool102, label %cond.end107, label %cond.true103, !dbg !6670

cond.true103:                                     ; preds = %if.end100
  %base105 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %45, i64 0, i32 0, !dbg !6670
  br label %cond.end107, !dbg !6670

cond.end107:                                      ; preds = %if.end100, %cond.true103
  %cond108 = phi %struct.VEC_edge_base* [ %base105, %cond.true103 ], [ null, %if.end100 ], !dbg !6670
  %call109 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond108) #7, !dbg !6670
  %cmp110 = icmp eq i32 %call109, 0, !dbg !6670
  br i1 %cmp110, label %if.end117, label %cond.true112, !dbg !6670

cond.true112:                                     ; preds = %cond.end107
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6670
  br label %if.end117, !dbg !6670

if.end117.loopexit:                               ; preds = %cond.end
  br label %if.end117, !dbg !6671

if.end117:                                        ; preds = %if.end117.loopexit, %if.end87, %cond.end107, %cond.true112
  %ret.1 = phi i8 [ 1, %if.end87 ], [ 0, %cond.end107 ], [ 0, %cond.true112 ], [ 0, %if.end117.loopexit ], !dbg !6540
  call void @llvm.dbg.value(metadata i8 %ret.1, metadata !6519, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6515, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !6671
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6672
  ret i8 %ret.1, !dbg !6673
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local %struct.eh_region_d* @get_eh_region_from_lp_number(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_resx_region(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6674 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6676, metadata !DIExpression()), !dbg !6677
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6678
  %1 = load i32, i32* %0, align 8, !dbg !6678
  ret i32 %1, !dbg !6679
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6680 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6684, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6685, metadata !DIExpression()), !dbg !6688
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !6689
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !6686, metadata !DIExpression()), !dbg !6687
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #7, !dbg !6690
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !6691
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6692
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !6693
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !6694
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !6695
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !6696
  ret void, !dbg !6697
}

declare dso_local %union.gimple_statement_d* @gimple_build_call(%union.tree_node*, i32, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6698 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6704, metadata !DIExpression()), !dbg !6705
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6706
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6706

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6706
  %0 = load i32, i32* %num, align 8, !dbg !6706
  br label %cond.end, !dbg !6706

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6706
  ret i32 %cond, !dbg !6706
}

declare dso_local void @remove_edge(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6707 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6711, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6712, metadata !DIExpression()), !dbg !6713
  br label %land.end, !dbg !6714

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6714
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6714
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6714
  ret %struct.edge_def* %0, !dbg !6714
}

declare dso_local %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6715 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6717, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !6718, metadata !DIExpression()), !dbg !6721
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !6722
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !6719, metadata !DIExpression()), !dbg !6720
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !6723
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !6724
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !6725
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !6726
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !6727
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !6728
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !6729
  ret void, !dbg !6730
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6731 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6738, metadata !DIExpression()), !dbg !6739
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !6740
  %tobool = icmp eq i8 %call, 0, !dbg !6740
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6740

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6740
  br label %cond.end, !dbg !6740

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6741
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6741
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6741
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !6741

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6741
  br label %cond.end5, !dbg !6741

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !6741
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !6741
  ret %struct.edge_def* %call7, !dbg !6742
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6743 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6748, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6749, metadata !DIExpression()), !dbg !6750
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6751
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !6752
  ret %union.tree_node* %call, !dbg !6753
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !6754 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6756, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6757, metadata !DIExpression()), !dbg !6758
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !6759
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !6760
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6762

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6763
  %bf.load = load i64, i64* %0, align 8, !dbg !6763
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6764
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6764
  br i1 %cmp, label %if.then, label %if.end, !dbg !6765

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6766
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6766
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !6767
  br label %if.end, !dbg !6766

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !6768
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6769 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6773, metadata !DIExpression()), !dbg !6774
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !6775
  %0 = load i32, i32* %flags, align 8, !dbg !6775
  %and = and i32 %0, 512, !dbg !6776
  %tobool = icmp eq i32 %and, 0, !dbg !6776
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !6777

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !6778
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !6778
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !6779
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !6780

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !6781
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !6781
  br label %cond.end, !dbg !6780

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !6780
  ret %struct.gimple_seq_d* %cond, !dbg !6782
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6783 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6787, metadata !DIExpression()), !dbg !6788
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !6789
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !6789
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6789
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6789

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6789
  br label %cond.end, !dbg !6789

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6789
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6789
  %cmp = icmp eq i32 %call, 1, !dbg !6790
  %conv2 = zext i1 %cmp to i8, !dbg !6789
  ret i8 %conv2, !dbg !6791
}

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @assign_filter_values() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @lower_eh_dispatch(%struct.basic_block_def* %src, %union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6792 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %labels = alloca %struct.VEC_tree_heap*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp26 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %src, metadata !6796, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6797, metadata !DIExpression()), !dbg !6829
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !6830
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6830
  call void @llvm.dbg.value(metadata i8 0, metadata !6804, metadata !DIExpression()), !dbg !6829
  %call = tail call fastcc i32 @gimple_eh_dispatch_region(%union.gimple_statement_d* %stmt) #7, !dbg !6831
  call void @llvm.dbg.value(metadata i32 %call, metadata !6799, metadata !DIExpression()), !dbg !6829
  %call1 = tail call %struct.eh_region_d* @get_eh_region_from_number(i32 %call) #6, !dbg !6832
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call1, metadata !6800, metadata !DIExpression()), !dbg !6829
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !6833
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6833
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %src) #7, !dbg !6833
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !6833
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6833
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 4, !dbg !6834
  %2 = load i32, i32* %type, align 4, !dbg !6834
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb59
  ], !dbg !6835

sw.bb:                                            ; preds = %entry
  %3 = bitcast %struct.VEC_tree_heap** %labels to i8*, !dbg !6836
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6836
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !6805, metadata !DIExpression()), !dbg !6837
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %labels, align 8, !dbg !6838
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6808, metadata !DIExpression()), !dbg !6837
  %4 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6839
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6839
  %5 = bitcast %struct.edge_def** %e to i8*, !dbg !6840
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6840
  %call2 = call %struct.pointer_set_t* @pointer_set_create() #6, !dbg !6841
  call void @llvm.dbg.value(metadata %struct.pointer_set_t* %call2, metadata !6812, metadata !DIExpression()), !dbg !6837
  %u = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 5, !dbg !6842
  %first_catch = bitcast %union.eh_region_u* %u to %struct.eh_catch_d**, !dbg !6843
  br label %for.cond, !dbg !6844

for.cond:                                         ; preds = %for.inc, %sw.bb
  %c.0.in = phi %struct.eh_catch_d** [ %first_catch, %sw.bb ], [ %next_catch, %for.inc ]
  %default_label.0 = phi %union.tree_node* [ null, %sw.bb ], [ %default_label.1, %for.inc ], !dbg !6837
  %redirected.0 = phi i8 [ 0, %sw.bb ], [ %redirected.2, %for.inc ], !dbg !6845
  %c.0 = load %struct.eh_catch_d*, %struct.eh_catch_d** %c.0.in, align 8, !dbg !6846
  call void @llvm.dbg.value(metadata i8 %redirected.0, metadata !6804, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.0, metadata !6808, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %c.0, metadata !6809, metadata !DIExpression()), !dbg !6837
  %tobool = icmp eq %struct.eh_catch_d* %c.0, null, !dbg !6847
  br i1 %tobool, label %for.end, label %for.body, !dbg !6847

for.body:                                         ; preds = %for.cond
  %label = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 4, !dbg !6848
  %6 = load %union.tree_node*, %union.tree_node** %label, align 8, !dbg !6848
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6820, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata i8 0, metadata !6821, metadata !DIExpression()), !dbg !6849
  store %union.tree_node* null, %union.tree_node** %label, align 8, !dbg !6850
  %type_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 2, !dbg !6851
  %7 = load %union.tree_node*, %union.tree_node** %type_list, align 8, !dbg !6851
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6815, metadata !DIExpression()), !dbg !6849
  %cmp = icmp eq %union.tree_node* %7, null, !dbg !6852
  br i1 %cmp, label %cleanup, label %do.body.preheader, !dbg !6854

do.body.preheader:                                ; preds = %for.body
  %filter_list = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 3, !dbg !6855
  br label %do.body, !dbg !6856

do.body:                                          ; preds = %do.body.preheader, %if.end14
  %tp_node.0 = phi %union.tree_node* [ %14, %if.end14 ], [ %7, %do.body.preheader ], !dbg !6849
  %flt_node.0.in = phi %union.tree_node** [ %chain16, %if.end14 ], [ %filter_list, %do.body.preheader ]
  %have_label.0 = phi i8 [ %have_label.1, %if.end14 ], [ 0, %do.body.preheader ], !dbg !6857
  %flt_node.0 = load %union.tree_node*, %union.tree_node** %flt_node.0.in, align 8, !dbg !6849
  call void @llvm.dbg.value(metadata i8 %have_label.0, metadata !6821, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata %union.tree_node* %flt_node.0, metadata !6819, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata %union.tree_node* %tp_node.0, metadata !6815, metadata !DIExpression()), !dbg !6849
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %flt_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6858
  %9 = bitcast %union.tree_node** %8 to i8**, !dbg !6858
  %10 = load i8*, i8** %9, align 8, !dbg !6858
  %call4 = call i32 @pointer_set_contains(%struct.pointer_set_t* %call2, i8* %10) #6, !dbg !6859
  %tobool5 = icmp eq i32 %call4, 0, !dbg !6859
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !6860

if.then6:                                         ; preds = %do.body
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6861
  %12 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !6861
  %call9 = call %union.tree_node* @build3_stat(i32 139, %union.tree_node* %11, %union.tree_node* %12, %union.tree_node* null, %union.tree_node* %6) #6, !dbg !6861
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6822, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %labels, metadata !6805, metadata !DIExpression(DW_OP_deref)), !dbg !6837
  %call10 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %labels, %union.tree_node* %call9) #7, !dbg !6863
  %13 = load i8*, i8** %9, align 8, !dbg !6864
  %call13 = call i32 @pointer_set_insert(%struct.pointer_set_t* %call2, i8* %13) #6, !dbg !6865
  call void @llvm.dbg.value(metadata i8 1, metadata !6821, metadata !DIExpression()), !dbg !6849
  br label %if.end14, !dbg !6866

if.end14:                                         ; preds = %do.body, %if.then6
  %have_label.1 = phi i8 [ %have_label.0, %do.body ], [ 1, %if.then6 ], !dbg !6849
  call void @llvm.dbg.value(metadata i8 %have_label.1, metadata !6821, metadata !DIExpression()), !dbg !6849
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tp_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6867
  %14 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6867
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !6815, metadata !DIExpression()), !dbg !6849
  %chain16 = getelementptr inbounds %union.tree_node, %union.tree_node* %flt_node.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6868
  %tobool17 = icmp eq %union.tree_node* %14, null, !dbg !6869
  br i1 %tobool17, label %do.end, label %do.body, !dbg !6869, !llvm.loop !6870

do.end:                                           ; preds = %if.end14
  %have_label.1.lcssa = phi i8 [ %have_label.1, %if.end14 ], !dbg !6849
  call void @llvm.dbg.value(metadata i8 %have_label.1.lcssa, metadata !6821, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata i8 %have_label.1.lcssa, metadata !6821, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata i8 %have_label.1.lcssa, metadata !6821, metadata !DIExpression()), !dbg !6849
  %tobool18 = icmp eq i8 %have_label.1.lcssa, 0, !dbg !6872
  br i1 %tobool18, label %if.then19, label %cleanup, !dbg !6874

if.then19:                                        ; preds = %do.end
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6875
  %call20 = call %struct.basic_block_def* @label_to_block_fn(%struct.function* %15, %union.tree_node* %6) #6, !dbg !6875
  %call21 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %src, %struct.basic_block_def* %call20) #6, !dbg !6877
  call void @remove_edge(%struct.edge_def* %call21) #6, !dbg !6878
  call void @llvm.dbg.value(metadata i8 1, metadata !6804, metadata !DIExpression()), !dbg !6829
  br label %cleanup, !dbg !6879

cleanup:                                          ; preds = %do.end, %if.then19, %for.body
  %default_label.1 = phi %union.tree_node* [ %6, %for.body ], [ %default_label.0, %if.then19 ], [ %default_label.0, %do.end ], !dbg !6837
  %redirected.2 = phi i8 [ %redirected.0, %for.body ], [ 1, %if.then19 ], [ %redirected.0, %do.end ], !dbg !6845
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body ], [ true, %if.then19 ], [ true, %do.end ]
  call void @llvm.dbg.value(metadata i8 %redirected.2, metadata !6804, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.1, metadata !6808, metadata !DIExpression()), !dbg !6837
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  %next_catch = getelementptr inbounds %struct.eh_catch_d, %struct.eh_catch_d* %c.0, i64 0, i32 0, !dbg !6880
  br label %for.cond, !dbg !6881, !llvm.loop !6882

for.end:                                          ; preds = %for.cond, %cleanup
  %default_label.2 = phi %union.tree_node* [ %default_label.1, %cleanup ], [ %default_label.0, %for.cond ], !dbg !6837
  %redirected.3 = phi i8 [ %redirected.2, %cleanup ], [ %redirected.0, %for.cond ], !dbg !6845
  call void @llvm.dbg.value(metadata i8 %redirected.3, metadata !6804, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.2, metadata !6808, metadata !DIExpression()), !dbg !6837
  %16 = bitcast %struct.edge_iterator* %tmp26 to i8*, !dbg !6884
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !dbg !6884
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src, i64 0, i32 1, !dbg !6884
  %call27 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !6884
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp26, i64 0, i32 0, !dbg !6884
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call27, 0, !dbg !6884
  store i32 %18, i32* %17, align 8, !dbg !6884
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp26, i64 0, i32 1, !dbg !6884
  %20 = extractvalue { i32, %struct.VEC_edge_gc** } %call27, 1, !dbg !6884
  store %struct.VEC_edge_gc** %20, %struct.VEC_edge_gc*** %19, align 8, !dbg !6884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !6884
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !dbg !6884
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6886
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6886
  br label %for.cond28, !dbg !6884

for.cond28:                                       ; preds = %for.inc41, %for.end
  %default_label.3 = phi %union.tree_node* [ %default_label.2, %for.end ], [ %default_label.5, %for.inc41 ], !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.3, metadata !6808, metadata !DIExpression()), !dbg !6837
  %23 = load i32, i32* %21, align 8, !dbg !6888
  %24 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %22, align 8, !dbg !6888
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6811, metadata !DIExpression(DW_OP_deref)), !dbg !6837
  %call29 = call fastcc zeroext i8 @ei_cond(i32 %23, %struct.VEC_edge_gc** %24, %struct.edge_def** nonnull %e) #7, !dbg !6888
  %tobool30 = icmp eq i8 %call29, 0, !dbg !6884
  br i1 %tobool30, label %for.end42, label %for.body31, !dbg !6884

for.body31:                                       ; preds = %for.cond28
  %25 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6889
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6811, metadata !DIExpression()), !dbg !6837
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 7, !dbg !6892
  %26 = load i32, i32* %flags, align 8, !dbg !6892
  %and = and i32 %26, 1, !dbg !6893
  %tobool32 = icmp eq i32 %and, 0, !dbg !6893
  br i1 %tobool32, label %for.inc41, label %if.then33, !dbg !6894

if.then33:                                        ; preds = %for.body31
  %cmp34 = icmp eq %union.tree_node* %default_label.3, null, !dbg !6895
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !6898

if.then35:                                        ; preds = %if.then33
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6811, metadata !DIExpression()), !dbg !6837
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 1, !dbg !6899
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6899
  %call36 = call %union.tree_node* @gimple_block_label(%struct.basic_block_def* %27) #6, !dbg !6900
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !6808, metadata !DIExpression()), !dbg !6837
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6901
  %flags38.phi.trans.insert = getelementptr inbounds %struct.edge_def, %struct.edge_def* %.pre, i64 0, i32 7, !dbg !6902
  %.pre2 = load i32, i32* %flags38.phi.trans.insert, align 8, !dbg !6903
  br label %if.end37, !dbg !6904

if.end37:                                         ; preds = %if.then35, %if.then33
  %28 = phi i32 [ %.pre2, %if.then35 ], [ %26, %if.then33 ], !dbg !6903
  %29 = phi %struct.edge_def* [ %.pre, %if.then35 ], [ %25, %if.then33 ], !dbg !6901
  %default_label.4 = phi %union.tree_node* [ %call36, %if.then35 ], [ %default_label.3, %if.then33 ], !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.4, metadata !6808, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata %struct.edge_def* %29, metadata !6811, metadata !DIExpression()), !dbg !6837
  %flags38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %29, i64 0, i32 7, !dbg !6905
  %and39 = and i32 %28, -2, !dbg !6903
  store i32 %and39, i32* %flags38, align 8, !dbg !6903
  br label %for.inc41, !dbg !6906

for.inc41:                                        ; preds = %for.body31, %if.end37
  %default_label.5 = phi %union.tree_node* [ %default_label.4, %if.end37 ], [ %default_label.3, %for.body31 ], !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.5, metadata !6808, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6810, metadata !DIExpression(DW_OP_deref)), !dbg !6837
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !6888
  br label %for.cond28, !dbg !6888, !llvm.loop !6907

for.end42:                                        ; preds = %for.cond28
  %default_label.3.lcssa = phi %union.tree_node* [ %default_label.3, %for.cond28 ], !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.3.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.3.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata %union.tree_node* %default_label.3.lcssa, metadata !6808, metadata !DIExpression()), !dbg !6837
  %cmp43 = icmp eq %union.tree_node* %default_label.3.lcssa, null, !dbg !6909
  br i1 %cmp43, label %cond.true, label %cond.end, !dbg !6909

cond.true:                                        ; preds = %for.end42
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3145, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6909
  br label %cond.end, !dbg !6909

cond.end:                                         ; preds = %for.end42, %cond.true
  %30 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6910
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %30, metadata !6805, metadata !DIExpression()), !dbg !6837
  %cmp44 = icmp eq %struct.VEC_tree_heap* %30, null, !dbg !6912
  br i1 %cmp44, label %if.then45, label %if.else, !dbg !6913

if.then45:                                        ; preds = %cond.end
  %call46 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %src) #7, !dbg !6914
  call void @llvm.dbg.value(metadata %struct.edge_def* %call46, metadata !6811, metadata !DIExpression()), !dbg !6837
  store %struct.edge_def* %call46, %struct.edge_def** %e, align 8, !dbg !6916
  call void @llvm.dbg.value(metadata %struct.edge_def* %call46, metadata !6811, metadata !DIExpression()), !dbg !6837
  %flags47 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call46, i64 0, i32 7, !dbg !6917
  %31 = load i32, i32* %flags47, align 8, !dbg !6918
  %or = or i32 %31, 1, !dbg !6918
  store i32 %or, i32* %flags47, align 8, !dbg !6918
  br label %if.end58, !dbg !6919

if.else:                                          ; preds = %cond.end
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 553), align 8, !dbg !6920
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !6802, metadata !DIExpression()), !dbg !6829
  %conv = sext i32 %call to i64, !dbg !6922
  %call48 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #6, !dbg !6923
  %call49 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %32, i32 1, %union.tree_node* %call48) #6, !dbg !6924
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call49, metadata !6803, metadata !DIExpression()), !dbg !6829
  %type51 = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6925
  %33 = bitcast %union.tree_node** %type51 to %struct.tree_common**, !dbg !6925
  %34 = load %struct.tree_common*, %struct.tree_common** %33, align 8, !dbg !6925
  %type53 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %34, i64 0, i32 2, !dbg !6925
  %35 = load %union.tree_node*, %union.tree_node** %type53, align 8, !dbg !6925
  %call54 = call %union.tree_node* @create_tmp_var(%union.tree_node* %35, i8* null) #6, !dbg !6926
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !6801, metadata !DIExpression()), !dbg !6829
  %call55 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call54, %union.gimple_statement_d* %call49) #7, !dbg !6927
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !6801, metadata !DIExpression()), !dbg !6829
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call49, %union.tree_node* %call55) #7, !dbg !6928
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6798, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call49, i32 1) #6, !dbg !6929
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6930
  %call56 = call %union.tree_node* @build3_stat(i32 139, %union.tree_node* %36, %union.tree_node* null, %union.tree_node* null, %union.tree_node* %default_label.3.lcssa) #6, !dbg !6930
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !6808, metadata !DIExpression()), !dbg !6837
  %37 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6931
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %37, metadata !6805, metadata !DIExpression()), !dbg !6837
  call void @sort_case_labels(%struct.VEC_tree_heap* %37) #6, !dbg !6932
  %38 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %labels, align 8, !dbg !6933
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %38, metadata !6805, metadata !DIExpression()), !dbg !6837
  %call57 = call %union.gimple_statement_d* @gimple_build_switch_vec(%union.tree_node* %call55, %union.tree_node* %call56, %struct.VEC_tree_heap* %38) #6, !dbg !6934
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call57, metadata !6803, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6798, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call57, i32 1) #6, !dbg !6935
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %labels, metadata !6805, metadata !DIExpression(DW_OP_deref)), !dbg !6837
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %labels) #7, !dbg !6936
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then45
  call void @pointer_set_destroy(%struct.pointer_set_t* %call2) #6, !dbg !6937
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8, !dbg !6938
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !6938
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !6938
  br label %sw.epilog, !dbg !6939

sw.bb59:                                          ; preds = %entry
  %succs60 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %src, i64 0, i32 1, !dbg !6940
  %39 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs60, align 8, !dbg !6940
  %tobool61 = icmp eq %struct.VEC_edge_gc* %39, null, !dbg !6940
  br i1 %tobool61, label %cond.end65, label %cond.true62, !dbg !6940

cond.true62:                                      ; preds = %sw.bb59
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i64 0, i32 0, !dbg !6940
  br label %cond.end65, !dbg !6940

cond.end65:                                       ; preds = %sw.bb59, %cond.true62
  %cond66 = phi %struct.VEC_edge_base* [ %base, %cond.true62 ], [ null, %sw.bb59 ], !dbg !6940
  %call67 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond66, i32 0) #7, !dbg !6940
  %flags68 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call67, i64 0, i32 7, !dbg !6940
  %40 = load i32, i32* %flags68, align 8, !dbg !6940
  %and69 = and i32 %40, 1, !dbg !6940
  %tobool70 = icmp eq i32 %and69, 0, !dbg !6940
  %41 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs60, align 8, !dbg !6940
  %tobool73 = icmp ne %struct.VEC_edge_gc* %41, null, !dbg !6940
  br i1 %tobool70, label %cond.false81, label %cond.true71, !dbg !6940

cond.true71:                                      ; preds = %cond.end65
  br i1 %tobool73, label %cond.true74, label %cond.end78, !dbg !6940

cond.true74:                                      ; preds = %cond.true71
  %base76 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %41, i64 0, i32 0, !dbg !6940
  br label %cond.end78, !dbg !6940

cond.end78:                                       ; preds = %cond.true71, %cond.true74
  %cond79 = phi %struct.VEC_edge_base* [ %base76, %cond.true74 ], [ null, %cond.true71 ], !dbg !6940
  %call80 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond79, i32 1) #7, !dbg !6940
  br label %cond.end91, !dbg !6940

cond.false81:                                     ; preds = %cond.end65
  br i1 %tobool73, label %cond.true84, label %cond.end88, !dbg !6940

cond.true84:                                      ; preds = %cond.false81
  %base86 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %41, i64 0, i32 0, !dbg !6940
  br label %cond.end88, !dbg !6940

cond.end88:                                       ; preds = %cond.false81, %cond.true84
  %cond89 = phi %struct.VEC_edge_base* [ %base86, %cond.true84 ], [ null, %cond.false81 ], !dbg !6940
  %call90 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond89, i32 0) #7, !dbg !6940
  br label %cond.end91, !dbg !6940

cond.end91:                                       ; preds = %cond.end88, %cond.end78
  %cond92 = phi %struct.edge_def* [ %call80, %cond.end78 ], [ %call90, %cond.end88 ], !dbg !6940
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond92, metadata !6826, metadata !DIExpression()), !dbg !6941
  %42 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs60, align 8, !dbg !6942
  %tobool94 = icmp eq %struct.VEC_edge_gc* %42, null, !dbg !6942
  br i1 %tobool94, label %cond.end99, label %cond.true95, !dbg !6942

cond.true95:                                      ; preds = %cond.end91
  %base97 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %42, i64 0, i32 0, !dbg !6942
  br label %cond.end99, !dbg !6942

cond.end99:                                       ; preds = %cond.end91, %cond.true95
  %cond100 = phi %struct.VEC_edge_base* [ %base97, %cond.true95 ], [ null, %cond.end91 ], !dbg !6942
  %call101 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond100, i32 0) #7, !dbg !6942
  %flags102 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call101, i64 0, i32 7, !dbg !6942
  %43 = load i32, i32* %flags102, align 8, !dbg !6942
  %and103 = and i32 %43, 1, !dbg !6942
  %tobool104 = icmp eq i32 %and103, 0, !dbg !6942
  %44 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs60, align 8, !dbg !6942
  %tobool107 = icmp ne %struct.VEC_edge_gc* %44, null, !dbg !6942
  br i1 %tobool104, label %cond.false115, label %cond.true105, !dbg !6942

cond.true105:                                     ; preds = %cond.end99
  br i1 %tobool107, label %cond.true108, label %cond.end112, !dbg !6942

cond.true108:                                     ; preds = %cond.true105
  %base110 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %44, i64 0, i32 0, !dbg !6942
  br label %cond.end112, !dbg !6942

cond.end112:                                      ; preds = %cond.true105, %cond.true108
  %cond113 = phi %struct.VEC_edge_base* [ %base110, %cond.true108 ], [ null, %cond.true105 ], !dbg !6942
  %call114 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond113, i32 0) #7, !dbg !6942
  br label %cond.end125, !dbg !6942

cond.false115:                                    ; preds = %cond.end99
  br i1 %tobool107, label %cond.true118, label %cond.end122, !dbg !6942

cond.true118:                                     ; preds = %cond.false115
  %base120 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %44, i64 0, i32 0, !dbg !6942
  br label %cond.end122, !dbg !6942

cond.end122:                                      ; preds = %cond.false115, %cond.true118
  %cond123 = phi %struct.VEC_edge_base* [ %base120, %cond.true118 ], [ null, %cond.false115 ], !dbg !6942
  %call124 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond123, i32 1) #7, !dbg !6942
  br label %cond.end125, !dbg !6942

cond.end125:                                      ; preds = %cond.end122, %cond.end112
  %cond126 = phi %struct.edge_def* [ %call114, %cond.end112 ], [ %call124, %cond.end122 ], !dbg !6942
  call void @llvm.dbg.value(metadata %struct.edge_def* %cond126, metadata !6828, metadata !DIExpression()), !dbg !6941
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 553), align 8, !dbg !6943
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !6802, metadata !DIExpression()), !dbg !6829
  %conv127 = sext i32 %call to i64, !dbg !6944
  %call128 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv127) #6, !dbg !6945
  %call129 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %45, i32 1, %union.tree_node* %call128) #6, !dbg !6946
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call129, metadata !6803, metadata !DIExpression()), !dbg !6829
  %type131 = getelementptr inbounds %union.tree_node, %union.tree_node* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6947
  %46 = bitcast %union.tree_node** %type131 to %struct.tree_common**, !dbg !6947
  %47 = load %struct.tree_common*, %struct.tree_common** %46, align 8, !dbg !6947
  %type133 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %47, i64 0, i32 2, !dbg !6947
  %48 = load %union.tree_node*, %union.tree_node** %type133, align 8, !dbg !6947
  %call134 = call %union.tree_node* @create_tmp_var(%union.tree_node* %48, i8* null) #6, !dbg !6948
  call void @llvm.dbg.value(metadata %union.tree_node* %call134, metadata !6801, metadata !DIExpression()), !dbg !6829
  %call135 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call134, %union.gimple_statement_d* %call129) #7, !dbg !6949
  call void @llvm.dbg.value(metadata %union.tree_node* %call135, metadata !6801, metadata !DIExpression()), !dbg !6829
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call129, %union.tree_node* %call135) #7, !dbg !6950
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6798, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call129, i32 1) #6, !dbg !6951
  %label137 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 5, i32 0, i32 1, !dbg !6952
  store %union.tree_node* null, %union.tree_node** %label137, align 8, !dbg !6953
  %type139 = getelementptr inbounds %union.tree_node, %union.tree_node* %call135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6954
  %49 = load %union.tree_node*, %union.tree_node** %type139, align 8, !dbg !6954
  %filter142 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call1, i64 0, i32 5, i32 0, i32 2, !dbg !6955
  %50 = load i32, i32* %filter142, align 8, !dbg !6955
  %conv143 = sext i32 %50 to i64, !dbg !6956
  %call144 = call %union.tree_node* @build_int_cst(%union.tree_node* %49, i64 %conv143) #6, !dbg !6957
  %call145 = call %union.gimple_statement_d* @gimple_build_cond(i32 101, %union.tree_node* %call135, %union.tree_node* %call144, %union.tree_node* null, %union.tree_node* null) #6, !dbg !6958
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call145, metadata !6803, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6798, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call145, i32 1) #6, !dbg !6959
  %flags146 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond92, i64 0, i32 7, !dbg !6960
  %51 = load i32, i32* %flags146, align 8, !dbg !6960
  %or147 = or i32 %51, 1024, !dbg !6961
  store i32 %or147, i32* %flags146, align 8, !dbg !6962
  %flags149 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond126, i64 0, i32 7, !dbg !6963
  %52 = load i32, i32* %flags149, align 8, !dbg !6963
  %and150 = and i32 %52, -2050, !dbg !6964
  %or151 = or i32 %and150, 2048, !dbg !6965
  store i32 %or151, i32* %flags149, align 8, !dbg !6966
  br label %sw.epilog, !dbg !6967

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3202, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6968
  br label %sw.epilog, !dbg !6969

sw.epilog:                                        ; preds = %sw.default, %cond.end125, %if.end58
  %redirected.4 = phi i8 [ 0, %sw.default ], [ 0, %cond.end125 ], [ %redirected.3, %if.end58 ], !dbg !6845
  call void @llvm.dbg.value(metadata i8 %redirected.4, metadata !6804, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6798, metadata !DIExpression(DW_OP_deref)), !dbg !6829
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !6970
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6971
  ret i8 %redirected.4, !dbg !6972
}

declare dso_local zeroext i8 @delete_unreachable_blocks() local_unnamed_addr #2

declare dso_local %struct.pointer_set_t* @pointer_set_create() local_unnamed_addr #2

declare dso_local i32 @pointer_set_contains(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local i32 @pointer_set_insert(%struct.pointer_set_t*, i8*) local_unnamed_addr #2

declare dso_local void @pointer_set_destroy(%struct.pointer_set_t*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_cond(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_unreachable_handlers() unnamed_addr #5 !dbg !6973 {
entry:
  %region = alloca %struct.eh_region_d*, align 8
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %0 = bitcast %struct.eh_region_d** %region to i8*, !dbg !7000
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7000
  %1 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !7001
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7001
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7002
  %eh = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 0, !dbg !7002
  %3 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !7002
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %3, i64 0, i32 1, !dbg !7002
  %4 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !7002
  %tobool = icmp eq %struct.VEC_eh_region_gc* %4, null, !dbg !7002
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7002

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %4, i64 0, i32 0, !dbg !7002
  br label %cond.end, !dbg !7002

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7002
  %call = tail call fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %cond) #7, !dbg !7002
  %call4 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %call) #6, !dbg !7003
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call4, metadata !6975, metadata !DIExpression()), !dbg !7004
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7005
  %eh6 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 0, !dbg !7005
  %6 = load %struct.eh_status*, %struct.eh_status** %eh6, align 8, !dbg !7005
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %6, i64 0, i32 2, !dbg !7005
  %7 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !7005
  %tobool7 = icmp eq %struct.VEC_eh_landing_pad_gc* %7, null, !dbg !7005
  br i1 %tobool7, label %cond.end14, label %cond.true8, !dbg !7005

cond.true8:                                       ; preds = %cond.end
  %base12 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %7, i64 0, i32 0, !dbg !7005
  br label %cond.end14, !dbg !7005

cond.end14:                                       ; preds = %cond.end, %cond.true8
  %cond15 = phi %struct.VEC_eh_landing_pad_base* [ %base12, %cond.true8 ], [ null, %cond.end ], !dbg !7005
  %call16 = tail call fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %cond15) #7, !dbg !7005
  %call17 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %call16) #6, !dbg !7006
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call17, metadata !6986, metadata !DIExpression()), !dbg !7004
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call4) #6, !dbg !7007
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call17) #6, !dbg !7008
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7009
  %cfg = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 1, !dbg !7009
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7009
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i64 0, i32 0, !dbg !7009
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7009
  %11 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !7010
  %12 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7011
  br label %for.cond, !dbg !7009

for.cond:                                         ; preds = %for.end, %cond.end14
  %13 = phi %struct.control_flow_graph* [ %9, %cond.end14 ], [ %.pre1, %for.end ], !dbg !7012
  %.pn = phi %struct.basic_block_def* [ %10, %cond.end14 ], [ %bb.0, %for.end ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7013
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7013
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6989, metadata !DIExpression()), !dbg !7004
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 1, !dbg !7012
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7012
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %14, !dbg !7012
  br i1 %cmp, label %for.end40, label %for.body, !dbg !7009

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !7014
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6992, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %bb.0) #7, !dbg !7015
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !7016
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb.0) #7, !dbg !7016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !7016
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !7016
  br label %for.cond21, !dbg !7017

for.cond21:                                       ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6992, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call22 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7018
  %tobool23 = icmp eq i8 %call22, 0, !dbg !7019
  br i1 %tobool23, label %for.body24, label %for.end, !dbg !7020

for.body24:                                       ; preds = %for.cond21
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6992, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call25 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7021
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !6996, metadata !DIExpression()), !dbg !7022
  %call26 = call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %call25) #7, !dbg !7023
  call void @llvm.dbg.value(metadata i32 %call26, metadata !6990, metadata !DIExpression()), !dbg !7004
  %cmp27 = icmp slt i32 %call26, 0, !dbg !7024
  br i1 %cmp27, label %if.then, label %if.else, !dbg !7026

if.then:                                          ; preds = %for.body24
  %sub = sub nsw i32 0, %call26, !dbg !7027
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call4, i32 %sub) #7, !dbg !7028
  br label %for.inc, !dbg !7028

if.else:                                          ; preds = %for.body24
  %cmp28 = icmp eq i32 %call26, 0, !dbg !7029
  br i1 %cmp28, label %for.inc, label %if.then29, !dbg !7031

if.then29:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6992, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  %call30 = call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7032
  %tobool31 = icmp eq i8 %call30, 0, !dbg !7032
  br i1 %tobool31, label %cond.true32, label %cond.end34, !dbg !7032

cond.true32:                                      ; preds = %if.then29
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3294, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7032
  br label %cond.end34, !dbg !7032

cond.end34:                                       ; preds = %if.then29, %cond.true32
  %call36 = call %struct.eh_region_d* @get_eh_region_from_lp_number(i32 %call26) #6, !dbg !7034
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call36, metadata !6987, metadata !DIExpression()), !dbg !7004
  store %struct.eh_region_d* %call36, %struct.eh_region_d** %region, align 8, !dbg !7035
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call36, metadata !6987, metadata !DIExpression()), !dbg !7004
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call36, i64 0, i32 3, !dbg !7036
  %15 = load i32, i32* %index, align 8, !dbg !7036
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call4, i32 %15) #7, !dbg !7037
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %call17, i32 %call26) #7, !dbg !7038
  br label %for.inc, !dbg !7039

for.inc:                                          ; preds = %if.else, %if.then, %cond.end34
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !6992, metadata !DIExpression(DW_OP_deref)), !dbg !7010
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7040
  br label %for.cond21, !dbg !7041, !llvm.loop !7042

for.end:                                          ; preds = %for.cond21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !7044
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7012
  %cfg20.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7045
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20.phi.trans.insert, align 8, !dbg !7012
  br label %for.cond, !dbg !7012, !llvm.loop !7046

for.end40:                                        ; preds = %for.cond
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7048
  %tobool41 = icmp eq %struct._IO_FILE* %16, null, !dbg !7048
  br i1 %tobool41, label %if.end47, label %if.then42, !dbg !7050

if.then42:                                        ; preds = %for.end40
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !7051
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7053
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7054
  call void @dump_eh_tree(%struct._IO_FILE* %17, %struct.function* %18) #6, !dbg !7055
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7056
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !7057
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7058
  call void @dump_sbitmap_file(%struct._IO_FILE* %20, %struct.simple_bitmap_def* %call4) #6, !dbg !7059
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7060
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !7061
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7062
  call void @dump_sbitmap_file(%struct._IO_FILE* %22, %struct.simple_bitmap_def* %call17) #6, !dbg !7063
  br label %if.end47, !dbg !7064

if.end47:                                         ; preds = %for.end40, %if.then42
  call void @llvm.dbg.value(metadata i32 1, metadata !6991, metadata !DIExpression()), !dbg !7004
  br label %for.cond48, !dbg !7065

for.cond48:                                       ; preds = %for.inc72, %if.end47
  %r_nr.0 = phi i32 [ 1, %if.end47 ], [ %inc, %for.inc72 ], !dbg !7067
  call void @llvm.dbg.value(metadata i32 %r_nr.0, metadata !6991, metadata !DIExpression()), !dbg !7004
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7068
  %eh50 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, i32 0, !dbg !7068
  %24 = load %struct.eh_status*, %struct.eh_status** %eh50, align 8, !dbg !7068
  %region_array51 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %24, i64 0, i32 1, !dbg !7068
  %25 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array51, align 8, !dbg !7068
  %tobool52 = icmp eq %struct.VEC_eh_region_gc* %25, null, !dbg !7068
  br i1 %tobool52, label %cond.end59, label %cond.true53, !dbg !7068

cond.true53:                                      ; preds = %for.cond48
  %base57 = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %25, i64 0, i32 0, !dbg !7068
  br label %cond.end59, !dbg !7068

cond.end59:                                       ; preds = %for.cond48, %cond.true53
  %cond60 = phi %struct.VEC_eh_region_base* [ %base57, %cond.true53 ], [ null, %for.cond48 ], !dbg !7068
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %region, metadata !6987, metadata !DIExpression(DW_OP_deref)), !dbg !7004
  %call61 = call fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %cond60, i32 %r_nr.0, %struct.eh_region_d** nonnull %region) #7, !dbg !7068
  %tobool62 = icmp eq i32 %call61, 0, !dbg !7070
  br i1 %tobool62, label %for.cond74.preheader, label %for.body63, !dbg !7070

for.cond74.preheader:                             ; preds = %cond.end59
  br label %for.cond74, !dbg !7071

for.body63:                                       ; preds = %cond.end59
  %26 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !7073
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %26, metadata !6987, metadata !DIExpression()), !dbg !7004
  %tobool64 = icmp eq %struct.eh_region_d* %26, null, !dbg !7073
  br i1 %tobool64, label %for.inc72, label %land.lhs.true, !dbg !7075

land.lhs.true:                                    ; preds = %for.body63
  %div = lshr i32 %r_nr.0, 6, !dbg !7076
  %idxprom = zext i32 %div to i64, !dbg !7076
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call4, i64 0, i32 3, i64 %idxprom, !dbg !7076
  %27 = load i64, i64* %arrayidx, align 8, !dbg !7076
  %rem = and i32 %r_nr.0, 63, !dbg !7076
  %sh_prom = zext i32 %rem to i64, !dbg !7076
  %28 = shl i64 1, %sh_prom, !dbg !7076
  %29 = and i64 %27, %28, !dbg !7076
  %tobool65 = icmp eq i64 %29, 0, !dbg !7076
  br i1 %tobool65, label %if.then66, label %for.inc72, !dbg !7077

if.then66:                                        ; preds = %land.lhs.true
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7078
  %tobool67 = icmp eq %struct._IO_FILE* %30, null, !dbg !7078
  br i1 %tobool67, label %if.end70, label %if.then68, !dbg !7081

if.then68:                                        ; preds = %if.then66
  %call69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %30, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0), i32 %r_nr.0) #6, !dbg !7082
  %.pre2 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !7083
  br label %if.end70, !dbg !7082

if.end70:                                         ; preds = %if.then66, %if.then68
  %31 = phi %struct.eh_region_d* [ %26, %if.then66 ], [ %.pre2, %if.then68 ], !dbg !7083
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %31, metadata !6987, metadata !DIExpression()), !dbg !7004
  call void @remove_eh_handler(%struct.eh_region_d* %31) #6, !dbg !7084
  br label %for.inc72, !dbg !7085

for.inc72:                                        ; preds = %land.lhs.true, %for.body63, %if.end70
  %inc = add nuw nsw i32 %r_nr.0, 1, !dbg !7086
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6991, metadata !DIExpression()), !dbg !7004
  br label %for.cond48, !dbg !7087, !llvm.loop !7088

for.cond74:                                       ; preds = %for.cond74.preheader, %for.inc107
  %lp_nr.0 = phi i32 [ %inc108, %for.inc107 ], [ 1, %for.cond74.preheader ], !dbg !7090
  call void @llvm.dbg.value(metadata i32 %lp_nr.0, metadata !6990, metadata !DIExpression()), !dbg !7004
  %32 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7091
  %eh76 = getelementptr inbounds %struct.function, %struct.function* %32, i64 0, i32 0, !dbg !7091
  %33 = load %struct.eh_status*, %struct.eh_status** %eh76, align 8, !dbg !7091
  %lp_array77 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %33, i64 0, i32 2, !dbg !7091
  %34 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array77, align 8, !dbg !7091
  %tobool78 = icmp eq %struct.VEC_eh_landing_pad_gc* %34, null, !dbg !7091
  br i1 %tobool78, label %cond.end85, label %cond.true79, !dbg !7091

cond.true79:                                      ; preds = %for.cond74
  %base83 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %34, i64 0, i32 0, !dbg !7091
  br label %cond.end85, !dbg !7091

cond.end85:                                       ; preds = %for.cond74, %cond.true79
  %cond86 = phi %struct.VEC_eh_landing_pad_base* [ %base83, %cond.true79 ], [ null, %for.cond74 ], !dbg !7091
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !6988, metadata !DIExpression(DW_OP_deref)), !dbg !7004
  %call87 = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond86, i32 %lp_nr.0, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !7091
  %tobool88 = icmp eq i32 %call87, 0, !dbg !7071
  br i1 %tobool88, label %for.end109, label %for.body89, !dbg !7071

for.body89:                                       ; preds = %cond.end85
  %35 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !7093
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %35, metadata !6988, metadata !DIExpression()), !dbg !7004
  %tobool90 = icmp eq %struct.eh_landing_pad_d* %35, null, !dbg !7093
  br i1 %tobool90, label %for.inc107, label %land.lhs.true91, !dbg !7095

land.lhs.true91:                                  ; preds = %for.body89
  %div93 = lshr i32 %lp_nr.0, 6, !dbg !7096
  %idxprom94 = zext i32 %div93 to i64, !dbg !7096
  %arrayidx95 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call17, i64 0, i32 3, i64 %idxprom94, !dbg !7096
  %36 = load i64, i64* %arrayidx95, align 8, !dbg !7096
  %rem96 = and i32 %lp_nr.0, 63, !dbg !7096
  %sh_prom97 = zext i32 %rem96 to i64, !dbg !7096
  %37 = shl i64 1, %sh_prom97, !dbg !7096
  %38 = and i64 %36, %37, !dbg !7096
  %tobool100 = icmp eq i64 %38, 0, !dbg !7096
  br i1 %tobool100, label %if.then101, label %for.inc107, !dbg !7097

if.then101:                                       ; preds = %land.lhs.true91
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7098
  %tobool102 = icmp eq %struct._IO_FILE* %39, null, !dbg !7098
  br i1 %tobool102, label %if.end105, label %if.then103, !dbg !7101

if.then103:                                       ; preds = %if.then101
  %call104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %39, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i64 0, i64 0), i32 %lp_nr.0) #6, !dbg !7102
  %.pre3 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !7103
  br label %if.end105, !dbg !7102

if.end105:                                        ; preds = %if.then101, %if.then103
  %40 = phi %struct.eh_landing_pad_d* [ %35, %if.then101 ], [ %.pre3, %if.then103 ], !dbg !7103
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %40, metadata !6988, metadata !DIExpression()), !dbg !7004
  call void @remove_eh_landing_pad(%struct.eh_landing_pad_d* %40) #6, !dbg !7104
  br label %for.inc107, !dbg !7105

for.inc107:                                       ; preds = %land.lhs.true91, %for.body89, %if.end105
  %inc108 = add nuw nsw i32 %lp_nr.0, 1, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %inc108, metadata !6990, metadata !DIExpression()), !dbg !7004
  br label %for.cond74, !dbg !7107, !llvm.loop !7108

for.end109:                                       ; preds = %cond.end85
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7110
  %tobool110 = icmp eq %struct._IO_FILE* %41, null, !dbg !7110
  br i1 %tobool110, label %if.end115, label %if.then111, !dbg !7112

if.then111:                                       ; preds = %for.end109
  %call112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %41, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !7113
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7115
  %43 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7116
  call void @dump_eh_tree(%struct._IO_FILE* %42, %struct.function* %43) #6, !dbg !7117
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7118
  %call114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !7119
  br label %if.end115, !dbg !7120

if.end115:                                        ; preds = %for.end109, %if.then111
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call4, i64 0, i32 0, !dbg !7121
  %45 = load i8*, i8** %popcount, align 8, !dbg !7121
  call void @free(i8* %45) #6, !dbg !7121
  %46 = bitcast %struct.simple_bitmap_def* %call4 to i8*, !dbg !7121
  call void @free(i8* %46) #6, !dbg !7121
  %popcount116 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call17, i64 0, i32 0, !dbg !7122
  %47 = load i8*, i8** %popcount116, align 8, !dbg !7122
  call void @free(i8* %47) #6, !dbg !7122
  %48 = bitcast %struct.simple_bitmap_def* %call17 to i8*, !dbg !7122
  call void @free(i8* %48) #6, !dbg !7122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7123
  ret void, !dbg !7123
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @unsplit_all_eh() unnamed_addr #5 !dbg !7124 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !7126, metadata !DIExpression()), !dbg !7129
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !7130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7130
  call void @llvm.dbg.value(metadata i32 1, metadata !7128, metadata !DIExpression()), !dbg !7129
  br label %for.cond, !dbg !7131

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !7133
  %changed.0 = phi i8 [ 0, %entry ], [ %changed.1, %for.inc ], !dbg !7129
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7126, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7128, metadata !DIExpression()), !dbg !7129
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7134
  %eh = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !7134
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !7134
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 2, !dbg !7134
  %3 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !7134
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %3, null, !dbg !7134
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7134

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %3, i64 0, i32 0, !dbg !7134
  br label %cond.end, !dbg !7134

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7134
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !7127, metadata !DIExpression(DW_OP_deref)), !dbg !7129
  %call = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond, i32 %i.0, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !7134
  %tobool4 = icmp eq i32 %call, 0, !dbg !7136
  br i1 %tobool4, label %for.end, label %for.body, !dbg !7136

for.body:                                         ; preds = %cond.end
  %4 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !7137
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !7127, metadata !DIExpression()), !dbg !7129
  %tobool5 = icmp eq %struct.eh_landing_pad_d* %4, null, !dbg !7137
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !7139

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !7127, metadata !DIExpression()), !dbg !7129
  %call6 = call fastcc zeroext i8 @unsplit_eh(%struct.eh_landing_pad_d* nonnull %4) #7, !dbg !7140
  %or1 = or i8 %changed.0, %call6, !dbg !7141
  call void @llvm.dbg.value(metadata i8 %or1, metadata !7126, metadata !DIExpression()), !dbg !7129
  br label %for.inc, !dbg !7142

for.inc:                                          ; preds = %for.body, %if.then
  %changed.1 = phi i8 [ %or1, %if.then ], [ %changed.0, %for.body ], !dbg !7129
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !7126, metadata !DIExpression()), !dbg !7129
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7143
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7128, metadata !DIExpression()), !dbg !7129
  br label %for.cond, !dbg !7144, !llvm.loop !7145

for.end:                                          ; preds = %cond.end
  %changed.0.lcssa = phi i8 [ %changed.0, %cond.end ], !dbg !7129
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7126, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7126, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7126, metadata !DIExpression()), !dbg !7129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7147
  ret i8 %changed.0.lcssa, !dbg !7148
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cleanup_all_empty_eh() unnamed_addr #5 !dbg !7149 {
entry:
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !7151, metadata !DIExpression()), !dbg !7154
  %0 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !7155
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7155
  call void @llvm.dbg.value(metadata i32 1, metadata !7153, metadata !DIExpression()), !dbg !7154
  br label %for.cond, !dbg !7156

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !7158
  %changed.0 = phi i8 [ 0, %entry ], [ %changed.1, %for.inc ], !dbg !7154
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !7151, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7153, metadata !DIExpression()), !dbg !7154
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7159
  %eh = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !7159
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !7159
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 2, !dbg !7159
  %3 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array, align 8, !dbg !7159
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %3, null, !dbg !7159
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7159

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %3, i64 0, i32 0, !dbg !7159
  br label %cond.end, !dbg !7159

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7159
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !7152, metadata !DIExpression(DW_OP_deref)), !dbg !7154
  %call = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %cond, i32 %i.0, %struct.eh_landing_pad_d** nonnull %lp) #7, !dbg !7159
  %tobool4 = icmp eq i32 %call, 0, !dbg !7161
  br i1 %tobool4, label %for.end, label %for.body, !dbg !7161

for.body:                                         ; preds = %cond.end
  %4 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !7162
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !7152, metadata !DIExpression()), !dbg !7154
  %tobool5 = icmp eq %struct.eh_landing_pad_d* %4, null, !dbg !7162
  br i1 %tobool5, label %for.inc, label %if.then, !dbg !7164

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %4, metadata !7152, metadata !DIExpression()), !dbg !7154
  %call6 = call fastcc zeroext i8 @cleanup_empty_eh(%struct.eh_landing_pad_d* nonnull %4) #7, !dbg !7165
  %or1 = or i8 %changed.0, %call6, !dbg !7166
  call void @llvm.dbg.value(metadata i8 %or1, metadata !7151, metadata !DIExpression()), !dbg !7154
  br label %for.inc, !dbg !7167

for.inc:                                          ; preds = %for.body, %if.then
  %changed.1 = phi i8 [ %or1, %if.then ], [ %changed.0, %for.body ], !dbg !7154
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !7151, metadata !DIExpression()), !dbg !7154
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7168
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7153, metadata !DIExpression()), !dbg !7154
  br label %for.cond, !dbg !7169, !llvm.loop !7170

for.end:                                          ; preds = %cond.end
  %changed.0.lcssa = phi i8 [ %changed.0, %cond.end ], !dbg !7154
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7151, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7151, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !7151, metadata !DIExpression()), !dbg !7154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7172
  ret i8 %changed.0.lcssa, !dbg !7173
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_unreachable_handlers_no_lp() unnamed_addr #5 !dbg !7174 {
entry:
  %r = alloca %struct.eh_region_d*, align 8
  %0 = bitcast %struct.eh_region_d** %r to i8*, !dbg !7178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7178
  call void @llvm.dbg.value(metadata i32 1, metadata !7177, metadata !DIExpression()), !dbg !7179
  br label %for.cond, !dbg !7180

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !7182
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7177, metadata !DIExpression()), !dbg !7179
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7183
  %eh = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 0, !dbg !7183
  %2 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !7183
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %2, i64 0, i32 1, !dbg !7183
  %3 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !7183
  %tobool = icmp eq %struct.VEC_eh_region_gc* %3, null, !dbg !7183
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7183

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %3, i64 0, i32 0, !dbg !7183
  br label %cond.end, !dbg !7183

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7183
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !7176, metadata !DIExpression(DW_OP_deref)), !dbg !7179
  %call = call fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %cond, i32 %i.0, %struct.eh_region_d** nonnull %r) #7, !dbg !7183
  %tobool4 = icmp eq i32 %call, 0, !dbg !7185
  br i1 %tobool4, label %for.end, label %for.body, !dbg !7185

for.body:                                         ; preds = %cond.end
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !7186
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %4, metadata !7176, metadata !DIExpression()), !dbg !7179
  %tobool5 = icmp eq %struct.eh_region_d* %4, null, !dbg !7186
  br i1 %tobool5, label %for.inc, label %land.lhs.true, !dbg !7188

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %4, metadata !7176, metadata !DIExpression()), !dbg !7179
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %4, i64 0, i32 6, !dbg !7189
  %5 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %landing_pads, align 8, !dbg !7189
  %cmp = icmp eq %struct.eh_landing_pad_d* %5, null, !dbg !7190
  br i1 %cmp, label %land.lhs.true6, label %for.inc, !dbg !7191

land.lhs.true6:                                   ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %4, metadata !7176, metadata !DIExpression()), !dbg !7179
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %4, i64 0, i32 4, !dbg !7192
  %6 = load i32, i32* %type, align 4, !dbg !7192
  %cmp7 = icmp eq i32 %6, 3, !dbg !7193
  br i1 %cmp7, label %for.inc, label %if.then, !dbg !7194

if.then:                                          ; preds = %land.lhs.true6
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7195
  %tobool8 = icmp eq %struct._IO_FILE* %7, null, !dbg !7195
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !7198

if.then9:                                         ; preds = %if.then
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0), i32 %i.0) #6, !dbg !7199
  %.pre = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !7200
  br label %if.end, !dbg !7199

if.end:                                           ; preds = %if.then, %if.then9
  %8 = phi %struct.eh_region_d* [ %4, %if.then ], [ %.pre, %if.then9 ], !dbg !7200
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %8, metadata !7176, metadata !DIExpression()), !dbg !7179
  call void @remove_eh_handler(%struct.eh_region_d* %8) #6, !dbg !7201
  br label %for.inc, !dbg !7202

for.inc:                                          ; preds = %land.lhs.true6, %for.body, %land.lhs.true, %if.end
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7177, metadata !DIExpression()), !dbg !7179
  br label %for.cond, !dbg !7204, !llvm.loop !7205

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7207
  ret void, !dbg !7207
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %vec_) unnamed_addr #0 !dbg !7208 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !7212, metadata !DIExpression()), !dbg !7213
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !7214
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7214

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !7214
  %0 = load i32, i32* %num, align 8, !dbg !7214
  br label %cond.end, !dbg !7214

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7214
  ret i32 %cond, !dbg !7214
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %vec_) unnamed_addr #0 !dbg !7215 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !7219, metadata !DIExpression()), !dbg !7220
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !7221
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7221

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !7221
  %0 = load i32, i32* %num, align 8, !dbg !7221
  br label %cond.end, !dbg !7221

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7221
  ret i32 %cond, !dbg !7221
}

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !7222 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !7226, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !7227, metadata !DIExpression()), !dbg !7231
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !7232
  %0 = load i8*, i8** %popcount, align 8, !dbg !7232
  %tobool = icmp eq i8* %0, null, !dbg !7233
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !7234

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !7235
  %.pre2 = zext i32 %.pre to i64, !dbg !7236
  %.pre3 = shl i64 1, %.pre2, !dbg !7236
  %.pre4 = lshr i32 %bitno, 6, !dbg !7237
  %.pre5 = zext i32 %.pre4 to i64, !dbg !7238
  br label %if.end7, !dbg !7234

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !7239
  %idxprom = zext i32 %div to i64, !dbg !7239
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !7239
  %1 = load i64, i64* %arrayidx, align 8, !dbg !7239
  %rem = and i32 %bitno, 63, !dbg !7239
  %sh_prom = zext i32 %rem to i64, !dbg !7239
  %2 = shl i64 1, %sh_prom, !dbg !7240
  %3 = and i64 %1, %2, !dbg !7240
  %tobool1 = icmp eq i64 %3, 0, !dbg !7240
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !7242

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !7243
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !7244
  %inc = add i8 %4, 1, !dbg !7244
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !7244
  br label %if.end7, !dbg !7243

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !7238
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !7236
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !7238
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !7245
  %or = or i64 %5, %shl.pre-phi, !dbg !7245
  store i64 %or, i64* %arrayidx13, align 8, !dbg !7245
  ret void, !dbg !7246
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @dump_eh_tree(%struct._IO_FILE*, %struct.function*) local_unnamed_addr #2

declare dso_local void @dump_sbitmap_file(%struct._IO_FILE*, %struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %vec_, i32 %ix_, %struct.eh_region_d** %ptr) unnamed_addr #0 !dbg !7247 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !7252, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7253, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %ptr, metadata !7254, metadata !DIExpression()), !dbg !7255
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !7256
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7256

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !7256
  %0 = load i32, i32* %num, align 8, !dbg !7256
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7256
  br i1 %cmp, label %if.then, label %if.else, !dbg !7258

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7259
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7259
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !7259
  br label %return, !dbg !7259

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7261

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_region_d* [ null, %if.else ], [ %1, %if.then ], !dbg !7263
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7263
  store %struct.eh_region_d* %storemerge, %struct.eh_region_d** %ptr, align 8, !dbg !7263
  ret i32 %retval.0, !dbg !7258
}

declare dso_local void @remove_eh_handler(%struct.eh_region_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_, %struct.eh_landing_pad_d** %ptr) unnamed_addr #0 !dbg !7264 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !7269, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7270, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %ptr, metadata !7271, metadata !DIExpression()), !dbg !7272
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !7273
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7273

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !7273
  %0 = load i32, i32* %num, align 8, !dbg !7273
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7273
  br i1 %cmp, label %if.then, label %if.else, !dbg !7275

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7276
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7276
  %1 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !7276
  br label %return, !dbg !7276

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7278

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_landing_pad_d* [ null, %if.else ], [ %1, %if.then ], !dbg !7280
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7280
  store %struct.eh_landing_pad_d* %storemerge, %struct.eh_landing_pad_d** %ptr, align 8, !dbg !7280
  ret i32 %retval.0, !dbg !7275
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @unsplit_eh(%struct.eh_landing_pad_d* %lp) unnamed_addr #5 !dbg !7281 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp48 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp76 = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp, metadata !7285, metadata !DIExpression()), !dbg !7314
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7315
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 2, !dbg !7315
  %1 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !7315
  %call = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %0, %union.tree_node* %1) #6, !dbg !7315
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !7286, metadata !DIExpression()), !dbg !7314
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !7316
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !7316
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !7317
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !7317
  %tobool = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !7317
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7317

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !7317
  br label %cond.end, !dbg !7317

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7317
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7317
  %cmp = icmp eq i32 %call2, 1, !dbg !7319
  br i1 %cmp, label %lor.lhs.false, label %cleanup127, !dbg !7320

lor.lhs.false:                                    ; preds = %cond.end
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !7321
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7321
  %tobool3 = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !7321
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !7321

cond.true4:                                       ; preds = %lor.lhs.false
  %base6 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !7321
  br label %cond.end8, !dbg !7321

cond.end8:                                        ; preds = %lor.lhs.false, %cond.true4
  %cond9 = phi %struct.VEC_edge_base* [ %base6, %cond.true4 ], [ null, %lor.lhs.false ], !dbg !7321
  %call10 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond9) #7, !dbg !7321
  %cmp11 = icmp eq i32 %call10, 1, !dbg !7322
  br i1 %cmp11, label %if.end, label %cleanup127, !dbg !7323

if.end:                                           ; preds = %cond.end8
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !7324
  %tobool13 = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !7324
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !7324

cond.true14:                                      ; preds = %if.end
  %base16 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !7324
  br label %cond.end18, !dbg !7324

cond.end18:                                       ; preds = %if.end, %cond.true14
  %cond19 = phi %struct.VEC_edge_base* [ %base16, %cond.true14 ], [ null, %if.end ], !dbg !7324
  %call20 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond19, i32 0) #7, !dbg !7324
  call void @llvm.dbg.value(metadata %struct.edge_def* %call20, metadata !7288, metadata !DIExpression()), !dbg !7314
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7325
  %tobool22 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !7325
  br i1 %tobool22, label %cond.end27, label %cond.true23, !dbg !7325

cond.true23:                                      ; preds = %cond.end18
  %base25 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !7325
  br label %cond.end27, !dbg !7325

cond.end27:                                       ; preds = %cond.end18, %cond.true23
  %cond28 = phi %struct.VEC_edge_base* [ %base25, %cond.true23 ], [ null, %cond.end18 ], !dbg !7325
  %call29 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond28, i32 0) #7, !dbg !7325
  call void @llvm.dbg.value(metadata %struct.edge_def* %call29, metadata !7289, metadata !DIExpression()), !dbg !7314
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 7, !dbg !7326
  %7 = load i32, i32* %flags, align 8, !dbg !7326
  %and = and i32 %7, 8, !dbg !7328
  %cmp30 = icmp eq i32 %and, 0, !dbg !7329
  br i1 %cmp30, label %cleanup127, label %lor.lhs.false31, !dbg !7330

lor.lhs.false31:                                  ; preds = %cond.end27
  %flags32 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call29, i64 0, i32 7, !dbg !7331
  %8 = load i32, i32* %flags32, align 8, !dbg !7331
  %and33 = and i32 %8, 8, !dbg !7332
  %cmp34 = icmp eq i32 %and33, 0, !dbg !7333
  br i1 %cmp34, label %if.end36, label %cleanup127, !dbg !7334

if.end36:                                         ; preds = %lor.lhs.false31
  %9 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7335
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !7335
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call) #7, !dbg !7335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !7335
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !7335
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  %call37 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7336
  %tobool38 = icmp eq i8 %call37, 0, !dbg !7336
  br i1 %tobool38, label %land.lhs.true, label %if.end43, !dbg !7338

land.lhs.true:                                    ; preds = %if.end36
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  %call39 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7339
  %call40 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call39) #7, !dbg !7340
  %tobool41 = icmp eq i8 %call40, 0, !dbg !7340
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !7341

if.then42:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  call fastcc void @gsi_next_nondebug(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7342
  br label %if.end43, !dbg !7342

if.end43:                                         ; preds = %land.lhs.true, %if.end36, %if.then42
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  %call44 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7343
  %tobool45 = icmp eq i8 %call44, 0, !dbg !7343
  br i1 %tobool45, label %cleanup127, label %if.end47, !dbg !7345

if.end47:                                         ; preds = %if.end43
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp48 to i8*, !dbg !7346
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !7346
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call29, i64 0, i32 1, !dbg !7347
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7347
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp48, %struct.basic_block_def* %11) #7, !dbg !7346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !7346
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !7346
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 1, !dbg !7348
  br label %for.cond, !dbg !7350

for.cond:                                         ; preds = %for.inc, %if.end47
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  %call49 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7351
  %tobool50 = icmp eq i8 %call49, 0, !dbg !7352
  br i1 %tobool50, label %for.body, label %for.end, !dbg !7353

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  %call51 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7354
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call51, metadata !7290, metadata !DIExpression()), !dbg !7355
  %call52 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call51) #7, !dbg !7356
  %cmp53 = icmp eq i32 %call52, 4, !dbg !7358
  br i1 %cmp53, label %if.end56, label %cleanup, !dbg !7359

if.end56:                                         ; preds = %for.body
  %call57 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call51) #7, !dbg !7360
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !7294, metadata !DIExpression()), !dbg !7355
  %label_decl = bitcast %union.tree_node* %call57 to %struct.tree_label_decl*, !dbg !7361
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl, i64 0, i32 2, !dbg !7361
  %12 = load i32, i32* %eh_landing_pad_nr, align 4, !dbg !7361
  call void @llvm.dbg.value(metadata i32 %12, metadata !7295, metadata !DIExpression()), !dbg !7355
  %tobool58 = icmp eq i32 %12, 0, !dbg !7362
  br i1 %tobool58, label %if.end64, label %land.lhs.true59, !dbg !7363

land.lhs.true59:                                  ; preds = %if.end56
  %call60 = call %struct.eh_region_d* @get_eh_region_from_lp_number(i32 %12) #6, !dbg !7364
  %13 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !7365
  %cmp61 = icmp eq %struct.eh_region_d* %call60, %13, !dbg !7366
  br i1 %cmp61, label %if.end64, label %cleanup, !dbg !7367

if.end64:                                         ; preds = %land.lhs.true59, %if.end56
  br label %cleanup, !dbg !7368

cleanup:                                          ; preds = %land.lhs.true59, %for.body, %if.end64
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end64 ], [ 2, %for.body ], [ 1, %land.lhs.true59 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup127.loopexit [
    i32 0, label %for.inc
    i32 2, label %for.end
  ]

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !7369
  br label %for.cond, !dbg !7370, !llvm.loop !7371

for.end:                                          ; preds = %cleanup, %for.cond
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 0, !dbg !7373
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7373
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7375
  %call68 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %14, %struct.basic_block_def* %15) #6, !dbg !7376
  %tobool69 = icmp eq %struct.edge_def* %call68, null, !dbg !7376
  br i1 %tobool69, label %if.end71, label %cleanup127, !dbg !7377

if.end71:                                         ; preds = %for.end
  %call72 = call fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %call) #7, !dbg !7378
  %call73 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %call72) #7, !dbg !7379
  %tobool74 = icmp eq i8 %call73, 0, !dbg !7379
  br i1 %tobool74, label %if.then75, label %if.end111, !dbg !7380

if.then75:                                        ; preds = %if.end71
  %16 = bitcast %struct.gimple_stmt_iterator* %tmp76 to i8*, !dbg !7381
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8, !dbg !7381
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp76, %struct.basic_block_def* %call) #6, !dbg !7381
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %16, i64 24, i1 false), !dbg !7381
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8, !dbg !7381
  %17 = bitcast %struct.immediate_use_iterator_d* %iter to i8*, !dbg !7382
  br label %for.cond77, !dbg !7383

for.cond77:                                       ; preds = %if.end109, %if.then75
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  %call78 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7384
  %tobool79 = icmp eq i8 %call78, 0, !dbg !7385
  br i1 %tobool79, label %for.body81, label %if.end111.loopexit, !dbg !7386

for.body81:                                       ; preds = %for.cond77
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  %call82 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !7387
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call82, metadata !7302, metadata !DIExpression()), !dbg !7382
  %call83 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call82) #7, !dbg !7388
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !7303, metadata !DIExpression()), !dbg !7382
  %call84 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call82, i64 0) #7, !dbg !7389
  call void @llvm.dbg.value(metadata %union.tree_node* %call84, metadata !7304, metadata !DIExpression()), !dbg !7382
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #8, !dbg !7390
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7382
  %call85 = call fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter, %union.tree_node* %call83) #7, !dbg !7391
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call85, metadata !7296, metadata !DIExpression()), !dbg !7382
  br label %for.cond86, !dbg !7391

for.cond86:                                       ; preds = %for.inc100, %for.body81
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7382
  %call87 = call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !7393
  %tobool88 = icmp eq i8 %call87, 0, !dbg !7393
  br i1 %tobool88, label %for.body90, label %for.end102, !dbg !7391

for.body90:                                       ; preds = %for.cond86
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7382
  %call91 = call fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !7395
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call91, metadata !7305, metadata !DIExpression()), !dbg !7382
  br label %for.cond92, !dbg !7395

for.cond92:                                       ; preds = %for.body96, %for.body90
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call91, %for.body90 ], [ %call98, %for.body96 ], !dbg !7398
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7305, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7382
  %call93 = call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !7399
  %tobool94 = icmp eq i8 %call93, 0, !dbg !7399
  br i1 %tobool94, label %for.body96, label %for.inc100, !dbg !7395

for.body96:                                       ; preds = %for.cond92
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %call84) #7, !dbg !7401
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7382
  %call98 = call fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !7399
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call98, metadata !7305, metadata !DIExpression()), !dbg !7382
  br label %for.cond92, !dbg !7399, !llvm.loop !7402

for.inc100:                                       ; preds = %for.cond92
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iter, metadata !7306, metadata !DIExpression(DW_OP_deref)), !dbg !7382
  %call101 = call fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* nonnull %iter) #7, !dbg !7393
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call101, metadata !7296, metadata !DIExpression()), !dbg !7382
  br label %for.cond86, !dbg !7393, !llvm.loop !7404

for.end102:                                       ; preds = %for.cond86
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7406
  %bf.load = load i64, i64* %18, align 8, !dbg !7406
  %bf.cast1 = and i64 %bf.load, 4194304, !dbg !7406
  %tobool104 = icmp eq i64 %bf.cast1, 0, !dbg !7406
  br i1 %tobool104, label %if.end109, label %if.then105, !dbg !7408

if.then105:                                       ; preds = %for.end102
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7409
  %bf.load107 = load i64, i64* %19, align 8, !dbg !7410
  %bf.set = or i64 %bf.load107, 4194304, !dbg !7410
  store i64 %bf.set, i64* %19, align 8, !dbg !7410
  br label %if.end109, !dbg !7409

if.end109:                                        ; preds = %for.end102, %if.then105
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !7287, metadata !DIExpression(DW_OP_deref)), !dbg !7314
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !7411
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #8, !dbg !7412
  br label %for.cond77, !dbg !7413, !llvm.loop !7414

if.end111.loopexit:                               ; preds = %for.cond77
  br label %if.end111, !dbg !7416

if.end111:                                        ; preds = %if.end111.loopexit, %if.end71
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7416
  %tobool112 = icmp eq %struct._IO_FILE* %20, null, !dbg !7416
  br i1 %tobool112, label %if.end120, label %land.lhs.true113, !dbg !7418

land.lhs.true113:                                 ; preds = %if.end111
  %21 = load i32, i32* @dump_flags, align 4, !dbg !7419
  %and114 = and i32 %21, 8, !dbg !7420
  %tobool115 = icmp eq i32 %and114, 0, !dbg !7420
  br i1 %tobool115, label %if.end120, label %if.then116, !dbg !7421

if.then116:                                       ; preds = %land.lhs.true113
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 4, !dbg !7422
  %22 = load i32, i32* %index, align 8, !dbg !7422
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7423
  %index118 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 9, !dbg !7424
  %24 = load i32, i32* %index118, align 8, !dbg !7424
  %call119 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0), i32 %22, i32 %24) #6, !dbg !7425
  br label %if.end120, !dbg !7425

if.end120:                                        ; preds = %land.lhs.true113, %if.end111, %if.then116
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7426
  call fastcc void @redirect_eh_edge_1(%struct.edge_def* %call20, %struct.basic_block_def* %25, i8 zeroext 0) #7, !dbg !7427
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7428
  call void @redirect_edge_pred(%struct.edge_def* %call29, %struct.basic_block_def* %26) #6, !dbg !7429
  %27 = load i32, i32* %flags, align 8, !dbg !7430
  store i32 %27, i32* %flags32, align 8, !dbg !7431
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 8, !dbg !7432
  %28 = load i32, i32* %probability, align 4, !dbg !7432
  %probability125 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call29, i64 0, i32 8, !dbg !7433
  store i32 %28, i32* %probability125, align 4, !dbg !7434
  %count = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 9, !dbg !7435
  %29 = load i64, i64* %count, align 8, !dbg !7435
  %count126 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call29, i64 0, i32 9, !dbg !7436
  store i64 %29, i64* %count126, align 8, !dbg !7437
  call void @remove_edge(%struct.edge_def* %call20) #6, !dbg !7438
  br label %cleanup127, !dbg !7439

cleanup127.loopexit:                              ; preds = %cleanup
  br label %cleanup127, !dbg !7440

cleanup127:                                       ; preds = %cleanup127.loopexit, %for.end, %if.end43, %lor.lhs.false31, %cond.end8, %cond.end, %cond.end27, %if.end120
  %retval.2 = phi i8 [ 1, %if.end120 ], [ 0, %cond.end8 ], [ 0, %cond.end ], [ 0, %lor.lhs.false31 ], [ 0, %cond.end27 ], [ 0, %if.end43 ], [ 0, %for.end ], [ 0, %cleanup127.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !7440
  ret i8 %retval.2, !dbg !7440
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7441 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7443, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !7444, metadata !DIExpression()), !dbg !7446
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !7447
  br label %while.cond, !dbg !7448

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !7449
  %tobool = icmp eq i8 %call, 0, !dbg !7449
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !7450

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !7451
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !7452
  %cmp = icmp eq i32 %call2, 4, !dbg !7453
  br i1 %cmp, label %while.body, label %while.end, !dbg !7448

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !7454
  br label %while.cond, !dbg !7448, !llvm.loop !7455

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !7457
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7458 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7460, metadata !DIExpression()), !dbg !7461
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !7462
  %cmp = icmp eq i32 %call, 2, !dbg !7463
  %conv1 = zext i1 %cmp to i8, !dbg !7462
  ret i8 %conv1, !dbg !7464
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next_nondebug(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !7465 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !7467, metadata !DIExpression()), !dbg !7468
  br label %do.body, !dbg !7469

do.body:                                          ; preds = %land.rhs, %entry
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) #7, !dbg !7470
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7472
  %tobool = icmp eq i8 %call, 0, !dbg !7472
  br i1 %tobool, label %land.rhs, label %do.end, !dbg !7473

land.rhs:                                         ; preds = %do.body
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) #7, !dbg !7474
  %call2 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call1) #7, !dbg !7475
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7473
  br i1 %tobool3, label %do.end, label %do.body, !dbg !7476, !llvm.loop !7477

do.end:                                           ; preds = %land.rhs, %do.body
  ret void, !dbg !7479
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !7480 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !7484, metadata !DIExpression()), !dbg !7485
  %cmp = icmp eq %struct.gimple_seq_d* %s, null, !dbg !7486
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7487

lor.rhs:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !7488
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !7488
  %cmp1 = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !7489
  %phitmp = zext i1 %cmp1 to i8, !dbg !7487
  br label %lor.end, !dbg !7487

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !7490
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @phi_nodes(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7491 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7493, metadata !DIExpression()), !dbg !7494
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !7495
  %0 = load i32, i32* %flags, align 8, !dbg !7495
  %and = and i32 %0, 512, !dbg !7495
  %tobool = icmp eq i32 %and, 0, !dbg !7495
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7495

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7495
  br label %cond.end, !dbg !7495

cond.end:                                         ; preds = %entry, %cond.true
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !7496
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !7496
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !7498
  br i1 %tobool1, label %return, label %if.end, !dbg !7499

if.end:                                           ; preds = %cond.end
  %phi_nodes = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 1, !dbg !7500
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %phi_nodes, align 8, !dbg !7500
  br label %return, !dbg !7501

return:                                           ; preds = %cond.end, %if.end
  %retval.0 = phi %struct.gimple_seq_d* [ %2, %if.end ], [ null, %cond.end ], !dbg !7494
  ret %struct.gimple_seq_d* %retval.0, !dbg !7502
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7503 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7505, metadata !DIExpression()), !dbg !7506
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !7507
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !7507
  ret %union.tree_node* %0, !dbg !7508
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !7509 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7513, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i64 %index, metadata !7514, metadata !DIExpression()), !dbg !7517
  %conv = trunc i64 %index to i32, !dbg !7518
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !7519
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !7515, metadata !DIExpression()), !dbg !7517
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !7520
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #7, !dbg !7521
  ret %union.tree_node* %call1, !dbg !7522
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @first_imm_use_stmt(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !7523 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7528, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !7529, metadata !DIExpression()), !dbg !7530
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7531
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !7532
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !7533
  store i40* %imm_uses, i40** %0, align 8, !dbg !7533
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !7534
  %1 = bitcast i40* %next to i64*, !dbg !7534
  %2 = load i64, i64* %1, align 8, !dbg !7534
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7535
  store i64 %2, i64* %3, align 8, !dbg !7535
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !7536
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next_imm_name, align 8, !dbg !7537
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7538
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7539
  %next3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !7540
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next3, align 8, !dbg !7541
  %stmt = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 2, i32 0, !dbg !7542
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !7543
  %use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 3, !dbg !7544
  store %union.tree_node** null, %union.tree_node*** %use, align 8, !dbg !7545
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7546
  %tobool = icmp eq i8 %call, 0, !dbg !7546
  br i1 %tobool, label %if.end, label %return, !dbg !7548

if.end:                                           ; preds = %entry
  %imm_use6 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7549
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !7549
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !7550
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use6, align 8, !dbg !7551
  %stmt9 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !7551
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt9, align 8, !dbg !7551
  br label %return, !dbg !7552

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end ], [ null, %entry ], !dbg !7530
  ret %union.gimple_statement_d* %retval.0, !dbg !7553
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7554 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7560, metadata !DIExpression()), !dbg !7561
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7562
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7562
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !7563
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !7563
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !7564
  %conv1 = zext i1 %cmp to i8, !dbg !7565
  ret i8 %conv1, !dbg !7566
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7567 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7571, metadata !DIExpression()), !dbg !7572
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7573
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7573
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7574
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7574
  %2 = load i64, i64* %1, align 8, !dbg !7574
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !7575
  %3 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !7576
  store i64 %2, i64* %3, align 8, !dbg !7576
  ret %struct.ssa_use_operand_d* %0, !dbg !7577
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7578 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7580, metadata !DIExpression()), !dbg !7581
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7582
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !7582
  %iter_node = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7583
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %iter_node, !dbg !7584
  %conv1 = zext i1 %cmp to i8, !dbg !7585
  ret i8 %conv1, !dbg !7586
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !7587 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !7591, metadata !DIExpression()), !dbg !7593
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !7592, metadata !DIExpression()), !dbg !7593
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !7594
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !7595
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !7595
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !7596
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !7597
  ret void, !dbg !7598
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_imm_use_on_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7599 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7601, metadata !DIExpression()), !dbg !7602
  %next_imm_name = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 3, !dbg !7603
  %0 = bitcast %struct.ssa_use_operand_d** %next_imm_name to i64*, !dbg !7603
  %1 = load i64, i64* %0, align 8, !dbg !7603
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7604
  store i64 %1, i64* %2, align 8, !dbg !7604
  %call = tail call fastcc zeroext i8 @end_imm_use_on_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7605
  %tobool = icmp eq i8 %call, 0, !dbg !7605
  br i1 %tobool, label %if.else, label %return, !dbg !7607

if.else:                                          ; preds = %entry
  %imm_use1 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7608
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use1, align 8, !dbg !7608
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 1, !dbg !7610
  %4 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7610
  %5 = load i64, i64* %4, align 8, !dbg !7610
  store i64 %5, i64* %0, align 8, !dbg !7611
  br label %return, !dbg !7612

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %struct.ssa_use_operand_d* [ %3, %if.else ], [ null, %entry ], !dbg !7613
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7614
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @next_imm_use_stmt(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7615 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7619, metadata !DIExpression()), !dbg !7620
  %next = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 1, !dbg !7621
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7621
  %1 = load i64, i64* %0, align 8, !dbg !7621
  %2 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !7622
  store i64 %1, i64* %2, align 8, !dbg !7622
  %call = tail call fastcc zeroext i8 @end_imm_use_stmt_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !7623
  %tobool = icmp eq i8 %call, 0, !dbg !7623
  br i1 %tobool, label %if.end4, label %if.then, !dbg !7625

if.then:                                          ; preds = %entry
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7626
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7626
  %cmp = icmp eq %struct.ssa_use_operand_d* %3, null, !dbg !7629
  br i1 %cmp, label %return, label %if.then2, !dbg !7630

if.then2:                                         ; preds = %if.then
  %iter_node3 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7631
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node3) #7, !dbg !7632
  br label %return, !dbg !7632

if.end4:                                          ; preds = %entry
  %imm_use5 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !7633
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !7633
  tail call fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %4, %struct.immediate_use_iterator_d* %imm) #7, !dbg !7634
  %5 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use5, align 8, !dbg !7635
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %5, i64 0, i32 2, i32 0, !dbg !7635
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7635
  br label %return, !dbg !7636

return:                                           ; preds = %if.then, %if.then2, %if.end4
  %retval.0 = phi %union.gimple_statement_d* [ %6, %if.end4 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !7620
  ret %union.gimple_statement_d* %retval.0, !dbg !7637
}

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @redirect_edge_pred(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7638 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7642, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i32 %index, metadata !7643, metadata !DIExpression()), !dbg !7644
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !7645
  %0 = load i32, i32* %capacity, align 8, !dbg !7645
  %cmp = icmp ult i32 %0, %index, !dbg !7645
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7645

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7645
  br label %cond.end, !dbg !7645

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !7646
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !7646
  ret %struct.phi_arg_d* %arrayidx, !dbg !7647
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !7648 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !7652, metadata !DIExpression()), !dbg !7653
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !7654
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !7654
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !7655
  ret %union.tree_node* %1, !dbg !7656
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_use_stmts_after(%struct.ssa_use_operand_d* %head, %struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !7657 {
entry:
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7661, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !7662, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7664, metadata !DIExpression()), !dbg !7681
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %head, i64 0, i32 2, i32 0, !dbg !7682
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7682
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !7665, metadata !DIExpression()), !dbg !7681
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %head) #7, !dbg !7683
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7666, metadata !DIExpression()), !dbg !7681
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !7684
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7684
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7685
  %tobool = icmp eq i8 %call1, 0, !dbg !7685
  %cond = select i1 %tobool, i32 4, i32 1, !dbg !7685
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7680, metadata !DIExpression()), !dbg !7681
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !7686
  %cmp = icmp eq i32 %call2, 16, !dbg !7688
  br i1 %cmp, label %if.then, label %if.else, !dbg !7689

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7667, metadata !DIExpression(DW_OP_deref)), !dbg !7681
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !7690
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !7663, metadata !DIExpression()), !dbg !7681
  br label %for.cond, !dbg !7690

for.cond:                                         ; preds = %for.inc, %if.then
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.then ], [ %call12, %for.inc ], !dbg !7693
  %last_p.0 = phi %struct.ssa_use_operand_d* [ %head, %if.then ], [ %last_p.1, %for.inc ], !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !7663, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7667, metadata !DIExpression(DW_OP_deref)), !dbg !7681
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7694
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7694
  br i1 %tobool6, label %for.body, label %if.end44.loopexit, !dbg !7690

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !7696
  %cmp8 = icmp eq %union.tree_node* %call7, %call, !dbg !7698
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !7699

if.then10:                                        ; preds = %for.body
  %call11 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.0, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.0) #7, !dbg !7700
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call11, metadata !7664, metadata !DIExpression()), !dbg !7681
  br label %for.inc, !dbg !7701

for.inc:                                          ; preds = %for.body, %if.then10
  %last_p.1 = phi %struct.ssa_use_operand_d* [ %call11, %if.then10 ], [ %last_p.0, %for.body ], !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.1, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7667, metadata !DIExpression(DW_OP_deref)), !dbg !7681
  %call12 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7694
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call12, metadata !7663, metadata !DIExpression()), !dbg !7681
  br label %for.cond, !dbg !7694, !llvm.loop !7702

if.else:                                          ; preds = %entry
  br i1 %tobool, label %if.else31, label %if.then15, !dbg !7704

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7667, metadata !DIExpression(DW_OP_deref)), !dbg !7681
  %call16 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %0, i32 %cond) #7, !dbg !7706
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call16, metadata !7663, metadata !DIExpression()), !dbg !7681
  br label %for.cond17, !dbg !7706

for.cond17:                                       ; preds = %for.inc28, %if.then15
  %use_p.1 = phi %struct.ssa_use_operand_d* [ %call16, %if.then15 ], [ %call29, %for.inc28 ], !dbg !7710
  %last_p.2 = phi %struct.ssa_use_operand_d* [ %head, %if.then15 ], [ %last_p.3, %for.inc28 ], !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.1, metadata !7663, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7667, metadata !DIExpression(DW_OP_deref)), !dbg !7681
  %call18 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7711
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7711
  br i1 %tobool19, label %for.body21, label %if.end44.loopexit1, !dbg !7706

for.body21:                                       ; preds = %for.cond17
  %call22 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.1) #7, !dbg !7713
  %cmp23 = icmp eq %union.tree_node* %call22, %call, !dbg !7715
  br i1 %cmp23, label %if.then25, label %for.inc28, !dbg !7716

if.then25:                                        ; preds = %for.body21
  %call26 = call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p.1, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p.2) #7, !dbg !7717
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call26, metadata !7664, metadata !DIExpression()), !dbg !7681
  br label %for.inc28, !dbg !7718

for.inc28:                                        ; preds = %for.body21, %if.then25
  %last_p.3 = phi %struct.ssa_use_operand_d* [ %call26, %if.then25 ], [ %last_p.2, %for.body21 ], !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.3, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !7667, metadata !DIExpression(DW_OP_deref)), !dbg !7681
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !7711
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !7663, metadata !DIExpression()), !dbg !7681
  br label %for.cond17, !dbg !7711, !llvm.loop !7719

if.else31:                                        ; preds = %if.else
  %call32 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %0) #7, !dbg !7721
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call32, metadata !7663, metadata !DIExpression()), !dbg !7681
  %cmp33 = icmp eq %struct.ssa_use_operand_d* %call32, null, !dbg !7723
  br i1 %cmp33, label %if.end44, label %if.then35, !dbg !7724

if.then35:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %call32) #7, !dbg !7725
  %cmp37 = icmp eq %union.tree_node* %call36, %call, !dbg !7728
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !7729

if.then39:                                        ; preds = %if.then35
  %call40 = tail call fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* nonnull %call32, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %head) #7, !dbg !7730
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !7664, metadata !DIExpression()), !dbg !7681
  br label %if.end44, !dbg !7731

if.end44.loopexit:                                ; preds = %for.cond
  %last_p.0.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.0, %for.cond ], !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.0.lcssa, metadata !7664, metadata !DIExpression()), !dbg !7681
  br label %if.end44, !dbg !7732

if.end44.loopexit1:                               ; preds = %for.cond17
  %last_p.2.lcssa = phi %struct.ssa_use_operand_d* [ %last_p.2, %for.cond17 ], !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7664, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.2.lcssa, metadata !7664, metadata !DIExpression()), !dbg !7681
  br label %if.end44, !dbg !7732

if.end44:                                         ; preds = %if.end44.loopexit1, %if.end44.loopexit, %if.else31, %if.then35, %if.then39
  %last_p.7 = phi %struct.ssa_use_operand_d* [ %head, %if.else31 ], [ %call40, %if.then39 ], [ %head, %if.then35 ], [ %last_p.0.lcssa, %if.end44.loopexit ], [ %last_p.2.lcssa, %if.end44.loopexit1 ], !dbg !7734
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.7, metadata !7664, metadata !DIExpression()), !dbg !7681
  %prev = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, i32 0, !dbg !7732
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7732
  %cmp45 = icmp eq %struct.ssa_use_operand_d* %2, null, !dbg !7735
  br i1 %cmp45, label %if.end49, label %if.then47, !dbg !7736

if.then47:                                        ; preds = %if.end44
  %iter_node48 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7737
  call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* nonnull %iter_node48) #7, !dbg !7738
  br label %if.end49, !dbg !7738

if.end49:                                         ; preds = %if.end44, %if.then47
  %iter_node50 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 2, !dbg !7739
  call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* nonnull %iter_node50, %struct.ssa_use_operand_d* %last_p.7) #7, !dbg !7740
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !7741
  ret void, !dbg !7741
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !7742 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7747, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !7748, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7749, metadata !DIExpression()), !dbg !7752
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #7, !dbg !7753
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7750, metadata !DIExpression()), !dbg !7752
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7754
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7755
  store i8 0, i8* %done, align 8, !dbg !7756
  %and = and i32 %flags, 5, !dbg !7757
  %cmp = icmp eq i32 %and, 0, !dbg !7757
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7757

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7757
  br label %cond.end, !dbg !7757

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !7758
  %tobool = icmp eq i8 %call1, 0, !dbg !7758
  %cond2 = select i1 %tobool, i32 4, i32 1, !dbg !7758
  call void @llvm.dbg.value(metadata i32 %cond2, metadata !7751, metadata !DIExpression()), !dbg !7752
  %and3 = and i32 %cond2, %flags, !dbg !7759
  %cmp4 = icmp eq i32 %and3, 0, !dbg !7761
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7762

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %done, align 8, !dbg !7763
  br label %cleanup, !dbg !7765

if.end:                                           ; preds = %cond.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7766
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7767
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !7768
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7769
  store i32 %call7, i32* %num_phi, align 4, !dbg !7770
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7771
  store i32 2, i32* %iter_type, align 4, !dbg !7772
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7773
  br label %cleanup, !dbg !7774

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !7752
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7775
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7776 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7782, metadata !DIExpression()), !dbg !7783
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7784
  %0 = load i8, i8* %done, align 8, !dbg !7784
  ret i8 %0, !dbg !7785
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @move_use_after_head(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %head, %struct.ssa_use_operand_d* %last_p) unnamed_addr #0 !dbg !7786 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7790, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %head, metadata !7791, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p, metadata !7792, metadata !DIExpression()), !dbg !7793
  %cmp = icmp eq %struct.ssa_use_operand_d* %use_p, %head, !dbg !7794
  br i1 %cmp, label %if.end3, label %if.then, !dbg !7796

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %last_p, i64 0, i32 1, !dbg !7797
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7797
  %cmp1 = icmp eq %struct.ssa_use_operand_d* %0, %use_p, !dbg !7800
  br i1 %cmp1, label %if.end3, label %if.else, !dbg !7801

if.else:                                          ; preds = %if.then
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use_p) #7, !dbg !7802
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %use_p, %struct.ssa_use_operand_d* %last_p) #7, !dbg !7804
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p, metadata !7792, metadata !DIExpression()), !dbg !7793
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.else, %if.then
  %last_p.addr.1 = phi %struct.ssa_use_operand_d* [ %last_p, %entry ], [ %use_p, %if.then ], [ %use_p, %if.else ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %last_p.addr.1, metadata !7792, metadata !DIExpression()), !dbg !7793
  ret %struct.ssa_use_operand_d* %last_p.addr.1, !dbg !7805
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7806 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7810, metadata !DIExpression()), !dbg !7812
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7813
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !7813
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !7815
  br i1 %tobool, label %if.end, label %if.then, !dbg !7816

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !7817
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !7811, metadata !DIExpression()), !dbg !7812
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !7819
  %2 = load i64, i64* %1, align 8, !dbg !7819
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !7820
  store i64 %2, i64* %3, align 8, !dbg !7820
  br label %cleanup, !dbg !7821

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7822
  %4 = load i32, i32* %phi_i, align 8, !dbg !7822
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7824
  %5 = load i32, i32* %num_phi, align 4, !dbg !7824
  %cmp = icmp slt i32 %4, %5, !dbg !7825
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !7826

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7827
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7827
  %inc = add nsw i32 %4, 1, !dbg !7827
  store i32 %inc, i32* %phi_i, align 8, !dbg !7827
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !7827
  br label %cleanup, !dbg !7829

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7830
  store i8 1, i8* %done, align 8, !dbg !7831
  br label %cleanup, !dbg !7832

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !7812
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !7833
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7834 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7836, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7837, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7838, metadata !DIExpression()), !dbg !7839
  %0 = and i32 %flags, 11, !dbg !7840
  %1 = icmp eq i32 %0, 1, !dbg !7840
  br i1 %1, label %cond.end, label %cond.true, !dbg !7840

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 771, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7840
  br label %cond.end, !dbg !7840

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) #7, !dbg !7841
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7842
  store i32 2, i32* %iter_type, align 4, !dbg !7843
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !7844
  ret %struct.ssa_use_operand_d* %call, !dbg !7845
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7846 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7850, metadata !DIExpression()), !dbg !7852
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !7853
  %tobool = icmp eq i8 %call, 0, !dbg !7853
  br i1 %tobool, label %cleanup, label %if.end, !dbg !7855

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !7856
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !7856
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !7856
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !7851, metadata !DIExpression()), !dbg !7852
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !7857
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !7859

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !7860
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !7860
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !7861
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !7861
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !7862
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !7863
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !7864
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !7864

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !7865
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !7866 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7870, metadata !DIExpression()), !dbg !7871
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7872
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7872
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !7874
  br i1 %cmp, label %return, label %if.end, !dbg !7875

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7876
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7876
  %2 = load i64, i64* %1, align 8, !dbg !7876
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !7877
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !7878
  store i64 %2, i64* %3, align 8, !dbg !7878
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !7879
  %5 = load i64, i64* %4, align 8, !dbg !7879
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !7880
  %7 = load i64*, i64** %6, align 8, !dbg !7880
  store i64 %5, i64* %7, align 8, !dbg !7881
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7882
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !7883
  br label %return, !dbg !7884

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !7884
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !7885 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !7889, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !7890, metadata !DIExpression()), !dbg !7891
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !7892
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !7893
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !7894
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !7894
  %1 = load i64, i64* %0, align 8, !dbg !7894
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !7895
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !7896
  store i64 %1, i64* %2, align 8, !dbg !7896
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !7897
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !7898
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !7899
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !7900
  ret void, !dbg !7901
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !7902 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7906, metadata !DIExpression()), !dbg !7907
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7908
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !7909
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7910
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !7911
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !7912
  store i32 0, i32* %iter_type, align 4, !dbg !7913
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7914
  store i32 0, i32* %phi_i, align 8, !dbg !7915
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7916
  store i32 0, i32* %num_phi, align 4, !dbg !7917
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7918
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7919
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7920
  store i8 1, i8* %done, align 8, !dbg !7921
  ret void, !dbg !7922
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7923 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7925, metadata !DIExpression()), !dbg !7926
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !7927
  %0 = load i32, i32* %nargs, align 4, !dbg !7927
  ret i32 %0, !dbg !7928
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !7929 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7933, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.value(metadata i32 %i, metadata !7934, metadata !DIExpression()), !dbg !7935
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !7936
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !7937
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !7938
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !7939 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7944, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7945, metadata !DIExpression()), !dbg !7946
  %0 = and i32 %flags, 10, !dbg !7947
  %1 = icmp eq i32 %0, 8, !dbg !7947
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !7947

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !7947
  %3 = icmp eq i32 %2, 4, !dbg !7947
  br i1 %3, label %cond.true, label %cond.end, !dbg !7947

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7947
  br label %cond.end, !dbg !7947

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !7948
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !7949

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !7950
  br label %cond.end12, !dbg !7949

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !7949
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !7951
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !7952
  %and14 = and i32 %flags, 8, !dbg !7953
  %tobool15 = icmp eq i32 %and14, 0, !dbg !7953
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !7955

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !7956
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !7957

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !7958
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !7959
  br i1 %cmp, label %if.end, label %if.then, !dbg !7960

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !7961
  %6 = load i64*, i64** %5, align 8, !dbg !7961
  %7 = load i64, i64* %6, align 8, !dbg !7962
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !7963
  store i64 %7, i64* %8, align 8, !dbg !7963
  br label %if.end, !dbg !7964

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !7965
  %tobool24 = icmp eq i32 %and23, 0, !dbg !7965
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !7966

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !7967
  br label %cond.end28, !dbg !7966

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !7966
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !7968
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !7969
  %and30 = and i32 %flags, 4, !dbg !7970
  %tobool31 = icmp eq i32 %and30, 0, !dbg !7970
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !7972

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !7973
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !7974

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !7975
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !7976
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !7977

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !7978
  %11 = load i64*, i64** %10, align 8, !dbg !7978
  %12 = load i64, i64* %11, align 8, !dbg !7979
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !7980
  store i64 %12, i64* %13, align 8, !dbg !7980
  br label %if.end42, !dbg !7981

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !7982
  store i8 0, i8* %done, align 8, !dbg !7983
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !7984
  store i32 0, i32* %phi_i, align 8, !dbg !7985
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !7986
  store i32 0, i32* %num_phi, align 4, !dbg !7987
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !7988
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !7989
  ret void, !dbg !7990
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7991 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7995, metadata !DIExpression()), !dbg !7996
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !7997
  %tobool = icmp eq i8 %call, 0, !dbg !7997
  br i1 %tobool, label %return, label %if.end, !dbg !7999

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !8000
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !8000
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !8000
  br label %return, !dbg !8001

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !7996
  ret %struct.def_optype_d* %retval.0, !dbg !8002
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !8003 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8005, metadata !DIExpression()), !dbg !8006
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !8007
  %tobool = icmp eq i8 %call, 0, !dbg !8007
  br i1 %tobool, label %return, label %if.end, !dbg !8009

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !8010
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !8010
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8010
  br label %return, !dbg !8011

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !8006
  ret %union.tree_node* %retval.0, !dbg !8012
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !8013 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8017, metadata !DIExpression()), !dbg !8018
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !8019
  %tobool = icmp eq i8 %call, 0, !dbg !8019
  br i1 %tobool, label %return, label %if.end, !dbg !8021

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !8022
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !8022
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !8022
  br label %return, !dbg !8023

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !8018
  ret %struct.use_optype_d* %retval.0, !dbg !8024
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !8025 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8027, metadata !DIExpression()), !dbg !8028
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !8029
  %tobool = icmp eq i8 %call, 0, !dbg !8029
  br i1 %tobool, label %return, label %if.end, !dbg !8031

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !8032
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !8032
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !8032
  br label %return, !dbg !8033

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !8028
  ret %union.tree_node* %retval.0, !dbg !8034
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !8035 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8037, metadata !DIExpression()), !dbg !8038
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !8039
  %cmp = icmp ugt i32 %call, 5, !dbg !8040
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8041

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !8042
  %cmp2 = icmp ult i32 %call1, 10, !dbg !8043
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !8044
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !8045 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !8049, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !8050, metadata !DIExpression()), !dbg !8052
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !8053
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8055

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8056
  %bf.load = load i64, i64* %0, align 8, !dbg !8056
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8057
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !8057
  br i1 %cmp, label %if.else, label %if.then, !dbg !8058

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !8059
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !8060
  br label %if.end, !dbg !8061

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8062
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !8062
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !8051, metadata !DIExpression()), !dbg !8052
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !8064
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8065
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cleanup_empty_eh(%struct.eh_landing_pad_d* %lp) unnamed_addr #5 !dbg !8066 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp34 = alloca %struct.edge_iterator, align 8
  %tmp51 = alloca %struct.edge_iterator, align 8
  %tmp70 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp, metadata !8068, metadata !DIExpression()), !dbg !8093
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8094
  %post_landing_pad = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 2, !dbg !8094
  %1 = load %union.tree_node*, %union.tree_node** %post_landing_pad, align 8, !dbg !8094
  %call = tail call %struct.basic_block_def* @label_to_block_fn(%struct.function* %0, %union.tree_node* %1) #6, !dbg !8094
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8069, metadata !DIExpression()), !dbg !8093
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8095
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8095
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8096
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !8096
  %4 = bitcast %struct.edge_def** %e to i8*, !dbg !8097
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8097
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 1, !dbg !8098
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8098
  %tobool = icmp eq %struct.VEC_edge_gc* %5, null, !dbg !8098
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8098

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !8098
  br label %cond.end, !dbg !8098

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8098
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8098
  switch i32 %call2, label %cleanup [
    i32 0, label %sw.epilog
    i32 1, label %sw.bb3
  ], !dbg !8099

sw.bb3:                                           ; preds = %cond.end
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8100
  %tobool5 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !8100
  br i1 %tobool5, label %cond.end10, label %cond.true6, !dbg !8100

cond.true6:                                       ; preds = %sw.bb3
  %base8 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !8100
  br label %cond.end10, !dbg !8100

cond.end10:                                       ; preds = %sw.bb3, %cond.true6
  %cond11 = phi %struct.VEC_edge_base* [ %base8, %cond.true6 ], [ null, %sw.bb3 ], !dbg !8100
  %call12 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond11, i32 0) #7, !dbg !8100
  call void @llvm.dbg.value(metadata %struct.edge_def* %call12, metadata !8075, metadata !DIExpression()), !dbg !8093
  br label %sw.epilog, !dbg !8102

sw.epilog:                                        ; preds = %cond.end, %cond.end10
  %e_out.0 = phi %struct.edge_def* [ %call12, %cond.end10 ], [ null, %cond.end ], !dbg !8103
  call void @llvm.dbg.value(metadata %struct.edge_def* %e_out.0, metadata !8075, metadata !DIExpression()), !dbg !8093
  %7 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8104
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call) #7, !dbg !8104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !8104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !8104
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8070, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  %call13 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8105
  %tobool14 = icmp eq i8 %call13, 0, !dbg !8105
  br i1 %tobool14, label %land.lhs.true, label %if.end, !dbg !8107

land.lhs.true:                                    ; preds = %sw.epilog
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8070, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  %call15 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8108
  %call16 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call15) #7, !dbg !8109
  %tobool17 = icmp eq i8 %call16, 0, !dbg !8109
  br i1 %tobool17, label %if.end, label %if.then, !dbg !8110

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8070, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  call fastcc void @gsi_next_nondebug(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8111
  br label %if.end, !dbg !8111

if.end:                                           ; preds = %land.lhs.true, %sw.epilog, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8070, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  %call18 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8112
  %tobool19 = icmp eq i8 %call18, 0, !dbg !8112
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !8114

if.then20:                                        ; preds = %if.end
  %call21 = call fastcc zeroext i8 @cleanup_empty_eh_unsplit(%struct.basic_block_def* %call, %struct.edge_def* %e_out.0, %struct.eh_landing_pad_d* %lp) #7, !dbg !8115
  br label %cleanup, !dbg !8116

if.end22:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8070, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  %call23 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8117
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !8071, metadata !DIExpression()), !dbg !8093
  %call24 = call fastcc zeroext i8 @is_gimple_resx(%union.gimple_statement_d* %call23) #7, !dbg !8118
  %tobool25 = icmp eq i8 %call24, 0, !dbg !8118
  br i1 %tobool25, label %cleanup, label %if.end27, !dbg !8120

if.end27:                                         ; preds = %if.end22
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8070, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  %call28 = call fastcc zeroext i8 @gsi_one_before_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8121
  %tobool29 = icmp eq i8 %call28, 0, !dbg !8121
  br i1 %tobool29, label %cond.true30, label %cond.end32, !dbg !8121

cond.true30:                                      ; preds = %if.end27
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8121
  br label %cond.end32, !dbg !8121

cond.end32:                                       ; preds = %if.end27, %cond.true30
  call void @llvm.dbg.value(metadata i8 0, metadata !8076, metadata !DIExpression()), !dbg !8093
  %8 = bitcast %struct.edge_iterator* %tmp34 to i8*, !dbg !8122
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8, !dbg !8122
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !8122
  %call35 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8122
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp34, i64 0, i32 0, !dbg !8122
  %10 = extractvalue { i32, %struct.VEC_edge_gc** } %call35, 0, !dbg !8122
  store i32 %10, i32* %9, align 8, !dbg !8122
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp34, i64 0, i32 1, !dbg !8122
  %12 = extractvalue { i32, %struct.VEC_edge_gc** } %call35, 1, !dbg !8122
  store %struct.VEC_edge_gc** %12, %struct.VEC_edge_gc*** %11, align 8, !dbg !8122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %8, i64 16, i1 false), !dbg !8122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8, !dbg !8122
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8124
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8124
  br label %for.cond, !dbg !8122

for.cond:                                         ; preds = %for.body, %cond.end32
  %has_non_eh_pred.0 = phi i8 [ 0, %cond.end32 ], [ %spec.select, %for.body ], !dbg !8126
  call void @llvm.dbg.value(metadata i8 %has_non_eh_pred.0, metadata !8076, metadata !DIExpression()), !dbg !8093
  %15 = load i32, i32* %13, align 8, !dbg !8127
  %16 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %14, align 8, !dbg !8127
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8074, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  %call36 = call fastcc zeroext i8 @ei_cond(i32 %15, %struct.VEC_edge_gc** %16, %struct.edge_def** nonnull %e) #7, !dbg !8127
  %tobool37 = icmp eq i8 %call36, 0, !dbg !8122
  br i1 %tobool37, label %for.end, label %for.body, !dbg !8122

for.body:                                         ; preds = %for.cond
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8128
  call void @llvm.dbg.value(metadata %struct.edge_def* %17, metadata !8074, metadata !DIExpression()), !dbg !8093
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i64 0, i32 7, !dbg !8130
  %18 = load i32, i32* %flags, align 8, !dbg !8130
  %and = and i32 %18, 8, !dbg !8131
  %tobool38 = icmp eq i32 %and, 0, !dbg !8131
  %spec.select = select i1 %tobool38, i8 1, i8 %has_non_eh_pred.0, !dbg !8132
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !8076, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8073, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8127
  br label %for.cond, !dbg !8127, !llvm.loop !8133

for.end:                                          ; preds = %for.cond
  %has_non_eh_pred.0.lcssa = phi i8 [ %has_non_eh_pred.0, %for.cond ], !dbg !8126
  call void @llvm.dbg.value(metadata i8 %has_non_eh_pred.0.lcssa, metadata !8076, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i8 %has_non_eh_pred.0.lcssa, metadata !8076, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i8 %has_non_eh_pred.0.lcssa, metadata !8076, metadata !DIExpression()), !dbg !8093
  %call41 = call i32 @lookup_stmt_eh_lp(%union.gimple_statement_d* %call23) #7, !dbg !8135
  call void @llvm.dbg.value(metadata i32 %call41, metadata !8077, metadata !DIExpression()), !dbg !8093
  %call42 = call %struct.eh_region_d* @get_eh_region_from_lp_number(i32 %call41) #6, !dbg !8136
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call42, metadata !8072, metadata !DIExpression()), !dbg !8093
  %cmp = icmp eq %struct.eh_region_d* %call42, null, !dbg !8137
  br i1 %cmp, label %if.then44, label %if.end66, !dbg !8138

if.then44:                                        ; preds = %for.end
  %cmp45 = icmp eq %struct.edge_def* %e_out.0, null, !dbg !8139
  br i1 %cmp45, label %cond.end49, label %cond.true47, !dbg !8139

cond.true47:                                      ; preds = %if.then44
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3748, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8139
  br label %cond.end49, !dbg !8139

cond.end49:                                       ; preds = %if.then44, %cond.true47
  %19 = bitcast %struct.edge_iterator* %tmp51 to i8*, !dbg !8140
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8, !dbg !8140
  %call53 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8140
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp51, i64 0, i32 0, !dbg !8140
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call53, 0, !dbg !8140
  store i32 %21, i32* %20, align 8, !dbg !8140
  %22 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp51, i64 0, i32 1, !dbg !8140
  %23 = extractvalue { i32, %struct.VEC_edge_gc** } %call53, 1, !dbg !8140
  store %struct.VEC_edge_gc** %23, %struct.VEC_edge_gc*** %22, align 8, !dbg !8140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %19, i64 16, i1 false), !dbg !8140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8, !dbg !8140
  br label %for.cond54, !dbg !8141

for.cond54:                                       ; preds = %if.end64, %cond.end49
  %24 = load i32, i32* %13, align 8, !dbg !8142
  %25 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %14, align 8, !dbg !8142
  %call55 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %24, %struct.VEC_edge_gc** %25) #7, !dbg !8142
  call void @llvm.dbg.value(metadata %struct.edge_def* %call55, metadata !8074, metadata !DIExpression()), !dbg !8093
  store %struct.edge_def* %call55, %struct.edge_def** %e, align 8, !dbg !8143
  %tobool56 = icmp eq %struct.edge_def* %call55, null, !dbg !8144
  br i1 %tobool56, label %succeed.loopexit, label %for.body57, !dbg !8144

for.body57:                                       ; preds = %for.cond54
  call void @llvm.dbg.value(metadata %struct.edge_def* %call55, metadata !8074, metadata !DIExpression()), !dbg !8093
  %flags58 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call55, i64 0, i32 7, !dbg !8145
  %26 = load i32, i32* %flags58, align 8, !dbg !8145
  %and59 = and i32 %26, 8, !dbg !8146
  %tobool60 = icmp eq i32 %and59, 0, !dbg !8146
  br i1 %tobool60, label %if.else, label %if.then61, !dbg !8147

if.then61:                                        ; preds = %for.body57
  call void @llvm.dbg.value(metadata %struct.edge_def* %call55, metadata !8074, metadata !DIExpression()), !dbg !8093
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call55, i64 0, i32 0, !dbg !8148
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !8148
  %call62 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %27) #6, !dbg !8149
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call62, metadata !8078, metadata !DIExpression()), !dbg !8150
  %call63 = call zeroext i8 @remove_stmt_from_eh_lp(%union.gimple_statement_d* %call62) #7, !dbg !8151
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8152
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !8074, metadata !DIExpression()), !dbg !8093
  call void @remove_edge(%struct.edge_def* %28) #6, !dbg !8153
  br label %if.end64, !dbg !8154

if.else:                                          ; preds = %for.body57
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8073, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8155
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then61
  br label %for.cond54, !dbg !8156, !llvm.loop !8157

if.end66:                                         ; preds = %for.end
  %type = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call42, i64 0, i32 4, !dbg !8159
  %29 = load i32, i32* %type, align 4, !dbg !8159
  %cmp67 = icmp eq i32 %29, 3, !dbg !8160
  br i1 %cmp67, label %if.then69, label %if.end88, !dbg !8161

if.then69:                                        ; preds = %if.end66
  %30 = bitcast %struct.edge_iterator* %tmp70 to i8*, !dbg !8162
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8, !dbg !8162
  %call72 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8162
  %31 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp70, i64 0, i32 0, !dbg !8162
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call72, 0, !dbg !8162
  store i32 %32, i32* %31, align 8, !dbg !8162
  %33 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp70, i64 0, i32 1, !dbg !8162
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call72, 1, !dbg !8162
  store %struct.VEC_edge_gc** %34, %struct.VEC_edge_gc*** %33, align 8, !dbg !8162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %30, i64 16, i1 false), !dbg !8162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8, !dbg !8162
  br label %for.cond73, !dbg !8163

for.cond73:                                       ; preds = %if.end86, %if.then69
  %35 = load i32, i32* %13, align 8, !dbg !8164
  %36 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %14, align 8, !dbg !8164
  %call74 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %35, %struct.VEC_edge_gc** %36) #7, !dbg !8164
  call void @llvm.dbg.value(metadata %struct.edge_def* %call74, metadata !8074, metadata !DIExpression()), !dbg !8093
  store %struct.edge_def* %call74, %struct.edge_def** %e, align 8, !dbg !8165
  %tobool75 = icmp eq %struct.edge_def* %call74, null, !dbg !8166
  br i1 %tobool75, label %succeed.loopexit1, label %for.body76, !dbg !8166

for.body76:                                       ; preds = %for.cond73
  call void @llvm.dbg.value(metadata %struct.edge_def* %call74, metadata !8074, metadata !DIExpression()), !dbg !8093
  %flags77 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 7, !dbg !8167
  %37 = load i32, i32* %flags77, align 8, !dbg !8167
  %and78 = and i32 %37, 8, !dbg !8168
  %tobool79 = icmp eq i32 %and78, 0, !dbg !8168
  br i1 %tobool79, label %if.else85, label %if.then80, !dbg !8169

if.then80:                                        ; preds = %for.body76
  call void @llvm.dbg.value(metadata %struct.edge_def* %call74, metadata !8074, metadata !DIExpression()), !dbg !8093
  %src82 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 0, !dbg !8170
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %src82, align 8, !dbg !8170
  %call83 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %38) #6, !dbg !8171
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call83, metadata !8085, metadata !DIExpression()), !dbg !8172
  %call84 = call zeroext i8 @remove_stmt_from_eh_lp(%union.gimple_statement_d* %call83) #7, !dbg !8173
  call void @add_stmt_to_eh_lp(%union.gimple_statement_d* %call83, i32 %call41) #7, !dbg !8174
  %39 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8175
  call void @llvm.dbg.value(metadata %struct.edge_def* %39, metadata !8074, metadata !DIExpression()), !dbg !8093
  call void @remove_edge(%struct.edge_def* %39) #6, !dbg !8176
  br label %if.end86, !dbg !8177

if.else85:                                        ; preds = %for.body76
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8073, metadata !DIExpression(DW_OP_deref)), !dbg !8093
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8178
  br label %if.end86

if.end86:                                         ; preds = %if.else85, %if.then80
  br label %for.cond73, !dbg !8179, !llvm.loop !8180

if.end88:                                         ; preds = %if.end66
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e_out.0, i64 0, i32 1, !dbg !8182
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8182
  %call89 = call fastcc zeroext i8 @cleanup_empty_eh_merge_phis(%struct.basic_block_def* %40, %struct.basic_block_def* %call, %struct.edge_def* %e_out.0, i8 zeroext 1) #7, !dbg !8184
  %tobool90 = icmp eq i8 %call89, 0, !dbg !8184
  br i1 %tobool90, label %if.end92, label %succeed, !dbg !8185

if.end92:                                         ; preds = %if.end88
  %tobool93 = icmp eq i8 %has_non_eh_pred.0.lcssa, 0, !dbg !8186
  br i1 %tobool93, label %if.then94, label %cleanup, !dbg !8188

if.then94:                                        ; preds = %if.end92
  call fastcc void @cleanup_empty_eh_move_lp(%struct.basic_block_def* %call, %struct.edge_def* %e_out.0, %struct.eh_landing_pad_d* %lp, %struct.eh_region_d* nonnull %call42) #7, !dbg !8189
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8191
  %tobool95 = icmp eq %struct._IO_FILE* %41, null, !dbg !8191
  br i1 %tobool95, label %cleanup, label %land.lhs.true96, !dbg !8193

land.lhs.true96:                                  ; preds = %if.then94
  %42 = load i32, i32* @dump_flags, align 4, !dbg !8194
  %and97 = and i32 %42, 8, !dbg !8195
  %tobool98 = icmp eq i32 %and97, 0, !dbg !8195
  br i1 %tobool98, label %cleanup, label %if.then99, !dbg !8196

if.then99:                                        ; preds = %land.lhs.true96
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 4, !dbg !8197
  %43 = load i32, i32* %index, align 8, !dbg !8197
  %index100 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %call42, i64 0, i32 3, !dbg !8198
  %44 = load i32, i32* %index100, align 8, !dbg !8198
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %41, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i32 %43, i32 %44) #6, !dbg !8199
  br label %cleanup, !dbg !8199

succeed.loopexit:                                 ; preds = %for.cond54
  br label %succeed, !dbg !8200

succeed.loopexit1:                                ; preds = %for.cond73
  br label %succeed, !dbg !8200

succeed:                                          ; preds = %succeed.loopexit1, %succeed.loopexit, %if.end88
  call void @llvm.dbg.label(metadata !8092), !dbg !8202
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8200
  %tobool104 = icmp eq %struct._IO_FILE* %45, null, !dbg !8200
  br i1 %tobool104, label %if.end111, label %land.lhs.true105, !dbg !8203

land.lhs.true105:                                 ; preds = %succeed
  %46 = load i32, i32* @dump_flags, align 4, !dbg !8204
  %and106 = and i32 %46, 8, !dbg !8205
  %tobool107 = icmp eq i32 %and106, 0, !dbg !8205
  br i1 %tobool107, label %if.end111, label %if.then108, !dbg !8206

if.then108:                                       ; preds = %land.lhs.true105
  %index109 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 4, !dbg !8207
  %47 = load i32, i32* %index109, align 8, !dbg !8207
  %call110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i64 0, i64 0), i32 %47) #6, !dbg !8208
  br label %if.end111, !dbg !8208

if.end111:                                        ; preds = %land.lhs.true105, %succeed, %if.then108
  call void @remove_eh_landing_pad(%struct.eh_landing_pad_d* %lp) #6, !dbg !8209
  br label %cleanup, !dbg !8210

cleanup:                                          ; preds = %land.lhs.true96, %if.then94, %if.end92, %if.end22, %if.then99, %cond.end, %if.end111, %if.then20
  %retval.0 = phi i8 [ %call21, %if.then20 ], [ 1, %if.end111 ], [ 0, %cond.end ], [ 0, %if.end22 ], [ 1, %if.then99 ], [ 1, %land.lhs.true96 ], [ 1, %if.then94 ], [ 0, %if.end92 ], !dbg !8093
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !8211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8211
  ret i8 %retval.0, !dbg !8211
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cleanup_empty_eh_unsplit(%struct.basic_block_def* %bb, %struct.edge_def* %e_out, %struct.eh_landing_pad_d* %lp) unnamed_addr #5 !dbg !8212 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8216, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata %struct.edge_def* %e_out, metadata !8217, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp, metadata !8218, metadata !DIExpression()), !dbg !8226
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8227
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8227
  %cmp = icmp eq %struct.edge_def* %e_out, null, !dbg !8228
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8228

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 3654, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8228
  br label %cond.end, !dbg !8228

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8220, metadata !DIExpression()), !dbg !8226
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8229
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e_out, i64 0, i32 1, !dbg !8230
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8230
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #7, !dbg !8229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !8229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8229
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 1, !dbg !8231
  br label %for.cond, !dbg !8233

for.cond:                                         ; preds = %for.inc, %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8219, metadata !DIExpression(DW_OP_deref)), !dbg !8226
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8234
  %tobool = icmp eq i8 %call, 0, !dbg !8235
  br i1 %tobool, label %for.body, label %for.end, !dbg !8236

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8219, metadata !DIExpression(DW_OP_deref)), !dbg !8226
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8237
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !8221, metadata !DIExpression()), !dbg !8238
  %call2 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !8239
  %cmp3 = icmp eq i32 %call2, 4, !dbg !8241
  br i1 %cmp3, label %if.end, label %cleanup, !dbg !8242

if.end:                                           ; preds = %for.body
  %call4 = call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call1) #7, !dbg !8243
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !8220, metadata !DIExpression()), !dbg !8226
  %label_decl = bitcast %union.tree_node* %call4 to %struct.tree_label_decl*, !dbg !8244
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl, i64 0, i32 2, !dbg !8244
  %3 = load i32, i32* %eh_landing_pad_nr, align 4, !dbg !8244
  call void @llvm.dbg.value(metadata i32 %3, metadata !8225, metadata !DIExpression()), !dbg !8238
  %tobool5 = icmp eq i32 %3, 0, !dbg !8245
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !8246

land.lhs.true:                                    ; preds = %if.end
  %call6 = call %struct.eh_region_d* @get_eh_region_from_lp_number(i32 %3) #6, !dbg !8247
  %4 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !8248
  %cmp7 = icmp eq %struct.eh_region_d* %call6, %4, !dbg !8249
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !8250

if.end9:                                          ; preds = %land.lhs.true, %if.end
  br label %cleanup, !dbg !8251

cleanup:                                          ; preds = %land.lhs.true, %for.body, %if.end9
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end9 ], [ 2, %for.body ], [ 1, %land.lhs.true ]
  switch i32 %cleanup.dest.slot.0, label %cleanup24.loopexit [
    i32 0, label %for.inc
    i32 2, label %for.end
  ]

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8219, metadata !DIExpression(DW_OP_deref)), !dbg !8226
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !8252
  br label %for.cond, !dbg !8253, !llvm.loop !8254

for.end:                                          ; preds = %cleanup, %for.cond
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8256
  %call12 = call fastcc zeroext i8 @cleanup_empty_eh_merge_phis(%struct.basic_block_def* %5, %struct.basic_block_def* %bb, %struct.edge_def* %e_out, i8 zeroext 0) #7, !dbg !8258
  %tobool13 = icmp eq i8 %call12, 0, !dbg !8258
  br i1 %tobool13, label %cleanup24, label %if.then14, !dbg !8259

if.then14:                                        ; preds = %for.end
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8260
  %tobool15 = icmp eq %struct._IO_FILE* %6, null, !dbg !8260
  br i1 %tobool15, label %cleanup24, label %land.lhs.true16, !dbg !8263

land.lhs.true16:                                  ; preds = %if.then14
  %7 = load i32, i32* @dump_flags, align 4, !dbg !8264
  %and = and i32 %7, 8, !dbg !8265
  %tobool17 = icmp eq i32 %and, 0, !dbg !8265
  br i1 %tobool17, label %cleanup24, label %if.then18, !dbg !8266

if.then18:                                        ; preds = %land.lhs.true16
  %index = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 4, !dbg !8267
  %8 = load i32, i32* %index, align 8, !dbg !8267
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8268
  %index20 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i64 0, i32 9, !dbg !8269
  %10 = load i32, i32* %index20, align 8, !dbg !8269
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.30, i64 0, i64 0), i32 %8, i32 %10) #6, !dbg !8270
  br label %cleanup24, !dbg !8270

cleanup24.loopexit:                               ; preds = %cleanup
  br label %cleanup24, !dbg !8271

cleanup24:                                        ; preds = %cleanup24.loopexit, %land.lhs.true16, %if.then14, %for.end, %if.then18
  %retval.2 = phi i8 [ 1, %if.then18 ], [ 1, %land.lhs.true16 ], [ 1, %if.then14 ], [ 0, %for.end ], [ 0, %cleanup24.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8271
  ret i8 %retval.2, !dbg !8271
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_safe_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8272 {
entry:
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8277
  %tobool = icmp eq i8 %call, 0, !dbg !8277
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8278

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8279
  br label %cond.end, !dbg !8278

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.edge_def* [ %call1, %cond.true ], [ null, %entry ], !dbg !8278
  ret %struct.edge_def* %cond, !dbg !8280
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cleanup_empty_eh_merge_phis(%struct.basic_block_def* %new_bb, %struct.basic_block_def* %old_bb, %struct.edge_def* %old_bb_out, i8 zeroext %change_region) unnamed_addr #5 !dbg !8281 {
entry:
  %ngsi = alloca %struct.gimple_stmt_iterator, align 8
  %ogsi = alloca %struct.gimple_stmt_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp4 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp12 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp26 = alloca %struct.edge_iterator, align 8
  %tmp56 = alloca %struct.edge_iterator, align 8
  %tmp69 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp92 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp111 = alloca %struct.edge_iterator, align 8
  %tmp125 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb, metadata !8285, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %old_bb, metadata !8286, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.value(metadata %struct.edge_def* %old_bb_out, metadata !8287, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.value(metadata i8 %change_region, metadata !8288, metadata !DIExpression()), !dbg !8325
  %0 = bitcast %struct.gimple_stmt_iterator* %ngsi to i8*, !dbg !8326
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8326
  %1 = bitcast %struct.gimple_stmt_iterator* %ogsi to i8*, !dbg !8326
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8326
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8327
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8327
  %3 = bitcast %struct.edge_def** %e to i8*, !dbg !8328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !8328
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8329
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !8329
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %old_bb, i64 0, i32 0, !dbg !8329
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8329
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8329
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !8329
  store i32 %6, i32* %5, align 8, !dbg !8329
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8329
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !8329
  store %struct.VEC_edge_gc** %8, %struct.VEC_edge_gc*** %7, align 8, !dbg !8329
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !8329
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !8329
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8331
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8331
  br label %for.cond, !dbg !8329

for.cond:                                         ; preds = %for.body, %entry
  %11 = load i32, i32* %9, align 8, !dbg !8333
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !8333
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8292, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %11, %struct.VEC_edge_gc** %12, %struct.edge_def** nonnull %e) #7, !dbg !8333
  %tobool = icmp eq i8 %call1, 0, !dbg !8329
  br i1 %tobool, label %for.end, label %for.body, !dbg !8329

for.body:                                         ; preds = %for.cond
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8334
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !8292, metadata !DIExpression()), !dbg !8325
  call void @redirect_edge_var_map_clear(%struct.edge_def* %13) #6, !dbg !8335
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8291, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8333
  br label %for.cond, !dbg !8333, !llvm.loop !8336

for.end:                                          ; preds = %for.cond
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !8338
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call2, metadata !8294, metadata !DIExpression()), !dbg !8325
  %call3 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !8339
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call3, metadata !8293, metadata !DIExpression()), !dbg !8325
  %14 = bitcast %struct.gimple_stmt_iterator* %tmp4 to i8*, !dbg !8340
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !8340
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp4, %struct.basic_block_def* %new_bb) #6, !dbg !8340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !8340
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !8340
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %old_bb_out, i64 0, i32 6, !dbg !8341
  %15 = bitcast %struct.gimple_stmt_iterator* %tmp12 to i8*, !dbg !8342
  %16 = bitcast %struct.edge_iterator* %tmp26 to i8*, !dbg !8344
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp26, i64 0, i32 0, !dbg !8344
  %18 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp26, i64 0, i32 1, !dbg !8344
  %19 = bitcast %struct.edge_iterator* %tmp56 to i8*, !dbg !8345
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp56, i64 0, i32 0, !dbg !8345
  %21 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp56, i64 0, i32 1, !dbg !8345
  br label %for.cond5, !dbg !8347

for.cond5:                                        ; preds = %for.inc67, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !8289, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call6 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ngsi) #7, !dbg !8348
  %tobool7 = icmp eq i8 %call6, 0, !dbg !8349
  br i1 %tobool7, label %for.body8, label %for.end68, !dbg !8350

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !8289, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call9 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ngsi) #7, !dbg !8351
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !8299, metadata !DIExpression()), !dbg !8341
  %call10 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call9) #7, !dbg !8352
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !8300, metadata !DIExpression()), !dbg !8341
  %22 = load i32, i32* %dest_idx, align 4, !dbg !8353
  %conv = zext i32 %22 to i64, !dbg !8354
  %call11 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call9, i64 %conv) #7, !dbg !8355
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !8301, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !8295, metadata !DIExpression()), !dbg !8341
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8, !dbg !8356
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp12, %struct.basic_block_def* %old_bb) #6, !dbg !8356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %15, i64 24, i1 false), !dbg !8356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8, !dbg !8356
  br label %for.cond13, !dbg !8357

for.cond13:                                       ; preds = %for.inc21, %for.body8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !8295, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ogsi, metadata !8290, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call14 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ogsi) #7, !dbg !8358
  %tobool15 = icmp eq i8 %call14, 0, !dbg !8360
  br i1 %tobool15, label %for.body17, label %for.end22, !dbg !8361

for.body17:                                       ; preds = %for.cond13
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ogsi, metadata !8290, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call18 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ogsi) #7, !dbg !8362
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call18, metadata !8295, metadata !DIExpression()), !dbg !8341
  %call19 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call18) #7, !dbg !8364
  %cmp = icmp eq %union.tree_node* %call19, %call11, !dbg !8366
  br i1 %cmp, label %for.end22, label %for.inc21, !dbg !8367

for.inc21:                                        ; preds = %for.body17
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !8295, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ogsi, metadata !8290, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %ogsi) #7, !dbg !8368
  br label %for.cond13, !dbg !8369, !llvm.loop !8370

for.end22:                                        ; preds = %for.body17, %for.cond13
  %ophi.1 = phi %union.gimple_statement_d* [ null, %for.cond13 ], [ %call18, %for.body17 ], !dbg !8341
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %ophi.1, metadata !8295, metadata !DIExpression()), !dbg !8341
  %tobool23 = icmp eq %union.gimple_statement_d* %ophi.1, null, !dbg !8372
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !8373

if.then24:                                        ; preds = %for.end22
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8374
  %23 = bitcast %union.tree_node** %version to i32*, !dbg !8374
  %24 = load i32, i32* %23, align 8, !dbg !8374
  %call25 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call2, i32 %24) #6, !dbg !8375
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !dbg !8376
  %call28 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8376
  %25 = extractvalue { i32, %struct.VEC_edge_gc** } %call28, 0, !dbg !8376
  store i32 %25, i32* %17, align 8, !dbg !8376
  %26 = extractvalue { i32, %struct.VEC_edge_gc** } %call28, 1, !dbg !8376
  store %struct.VEC_edge_gc** %26, %struct.VEC_edge_gc*** %18, align 8, !dbg !8376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !8376
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !dbg !8376
  br label %for.cond29, !dbg !8376

for.cond29:                                       ; preds = %cleanup, %if.then24
  %27 = load i32, i32* %9, align 8, !dbg !8377
  %28 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !8377
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8292, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call30 = call fastcc zeroext i8 @ei_cond(i32 %27, %struct.VEC_edge_gc** %28, %struct.edge_def** nonnull %e) #7, !dbg !8377
  %tobool31 = icmp eq i8 %call30, 0, !dbg !8376
  br i1 %tobool31, label %for.inc67.loopexit1, label %for.body32, !dbg !8376

for.body32:                                       ; preds = %for.cond29
  %29 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8378
  call void @llvm.dbg.value(metadata %struct.edge_def* %29, metadata !8292, metadata !DIExpression()), !dbg !8325
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %29, i64 0, i32 7, !dbg !8380
  %30 = load i32, i32* %flags, align 8, !dbg !8380
  %and = and i32 %30, 8, !dbg !8381
  %cmp33 = icmp eq i32 %and, 0, !dbg !8382
  br i1 %cmp33, label %cleanup, label %if.end36, !dbg !8383

if.end36:                                         ; preds = %for.body32
  call void @llvm.dbg.value(metadata %struct.edge_def* %29, metadata !8292, metadata !DIExpression()), !dbg !8325
  %dest_idx37 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %29, i64 0, i32 6, !dbg !8384
  %31 = load i32, i32* %dest_idx37, align 4, !dbg !8384
  %conv38 = zext i32 %31 to i64, !dbg !8385
  %call39 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* nonnull %ophi.1, i64 %conv38) #7, !dbg !8386
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !8308, metadata !DIExpression()), !dbg !8387
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8388
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !8292, metadata !DIExpression()), !dbg !8325
  %dest_idx40 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 6, !dbg !8389
  %33 = load i32, i32* %dest_idx40, align 4, !dbg !8389
  %conv41 = zext i32 %33 to i64, !dbg !8388
  %call42 = call fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* nonnull %ophi.1, i64 %conv41) #7, !dbg !8390
  call void @llvm.dbg.value(metadata i32 %call42, metadata !8302, metadata !DIExpression()), !dbg !8387
  %34 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8391
  call void @llvm.dbg.value(metadata %struct.edge_def* %34, metadata !8292, metadata !DIExpression()), !dbg !8325
  call void @redirect_edge_var_map_add(%struct.edge_def* %34, %union.tree_node* %call10, %union.tree_node* %call39, i32 %call42) #6, !dbg !8392
  br label %cleanup, !dbg !8393

cleanup:                                          ; preds = %for.body32, %if.end36
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8291, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8377
  br label %for.cond29, !dbg !8377, !llvm.loop !8394

if.else:                                          ; preds = %for.end22
  %call46 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call10) #6, !dbg !8396
  %tobool47 = icmp eq i8 %call46, 0, !dbg !8396
  br i1 %tobool47, label %if.then48, label %if.else52, !dbg !8397

if.then48:                                        ; preds = %if.else
  %version50 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8398
  %35 = bitcast %union.tree_node** %version50 to i32*, !dbg !8398
  %36 = load i32, i32* %35, align 8, !dbg !8398
  %call51 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call3, i32 %36) #6, !dbg !8399
  br label %for.inc67, !dbg !8399

if.else52:                                        ; preds = %if.else
  %37 = load i32, i32* %dest_idx, align 4, !dbg !8400
  %conv54 = zext i32 %37 to i64, !dbg !8401
  %call55 = call fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %call9, i64 %conv54) #7, !dbg !8402
  call void @llvm.dbg.value(metadata i32 %call55, metadata !8309, metadata !DIExpression()), !dbg !8403
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8, !dbg !8404
  %call58 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8404
  %38 = extractvalue { i32, %struct.VEC_edge_gc** } %call58, 0, !dbg !8404
  store i32 %38, i32* %20, align 8, !dbg !8404
  %39 = extractvalue { i32, %struct.VEC_edge_gc** } %call58, 1, !dbg !8404
  store %struct.VEC_edge_gc** %39, %struct.VEC_edge_gc*** %21, align 8, !dbg !8404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %19, i64 16, i1 false), !dbg !8404
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8, !dbg !8404
  br label %for.cond59, !dbg !8404

for.cond59:                                       ; preds = %for.body62, %if.else52
  %40 = load i32, i32* %9, align 8, !dbg !8405
  %41 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !8405
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8292, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call60 = call fastcc zeroext i8 @ei_cond(i32 %40, %struct.VEC_edge_gc** %41, %struct.edge_def** nonnull %e) #7, !dbg !8405
  %tobool61 = icmp eq i8 %call60, 0, !dbg !8404
  br i1 %tobool61, label %for.inc67.loopexit, label %for.body62, !dbg !8404

for.body62:                                       ; preds = %for.cond59
  %42 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8407
  call void @llvm.dbg.value(metadata %struct.edge_def* %42, metadata !8292, metadata !DIExpression()), !dbg !8325
  call void @redirect_edge_var_map_add(%struct.edge_def* %42, %union.tree_node* %call10, %union.tree_node* %call11, i32 %call55) #6, !dbg !8408
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8291, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8405
  br label %for.cond59, !dbg !8405, !llvm.loop !8409

for.inc67.loopexit:                               ; preds = %for.cond59
  br label %for.inc67, !dbg !8411

for.inc67.loopexit1:                              ; preds = %for.cond29
  br label %for.inc67, !dbg !8411

for.inc67:                                        ; preds = %for.inc67.loopexit1, %for.inc67.loopexit, %if.then48
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !8289, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %ngsi) #7, !dbg !8411
  br label %for.cond5, !dbg !8412, !llvm.loop !8413

for.end68:                                        ; preds = %for.cond5
  %43 = bitcast %struct.gimple_stmt_iterator* %tmp69 to i8*, !dbg !8415
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8, !dbg !8415
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp69, %struct.basic_block_def* %old_bb) #6, !dbg !8415
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %43, i64 24, i1 false), !dbg !8415
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8, !dbg !8415
  br label %for.cond70, !dbg !8416

for.cond70:                                       ; preds = %for.inc88, %for.end68
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ogsi, metadata !8290, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call71 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ogsi) #7, !dbg !8417
  %tobool72 = icmp eq i8 %call71, 0, !dbg !8418
  br i1 %tobool72, label %for.body74, label %for.end89, !dbg !8419

for.body74:                                       ; preds = %for.cond70
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ogsi, metadata !8290, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call76 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ogsi) #7, !dbg !8420
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call76, metadata !8312, metadata !DIExpression()), !dbg !8421
  %call77 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call76) #7, !dbg !8422
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !8316, metadata !DIExpression()), !dbg !8421
  %version79 = getelementptr inbounds %union.tree_node, %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8423
  %44 = bitcast %union.tree_node** %version79 to i32*, !dbg !8423
  %45 = load i32, i32* %44, align 8, !dbg !8423
  %call80 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call2, i32 %45) #6, !dbg !8425
  %tobool81 = icmp eq i32 %call80, 0, !dbg !8425
  br i1 %tobool81, label %fail, label %for.inc88

for.inc88:                                        ; preds = %for.body74
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ogsi, metadata !8290, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %ogsi) #7, !dbg !8426
  br label %for.cond70, !dbg !8427, !llvm.loop !8428

for.end89:                                        ; preds = %for.cond70
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %call3, i64 0, i32 0, !dbg !8430
  %46 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !8430
  %tobool90 = icmp eq %struct.bitmap_element_def* %46, null, !dbg !8430
  br i1 %tobool90, label %if.end110, label %if.then91, !dbg !8431

if.then91:                                        ; preds = %for.end89
  %47 = bitcast %struct.gimple_stmt_iterator* %tmp92 to i8*, !dbg !8432
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #8, !dbg !8432
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp92, %struct.basic_block_def* %new_bb) #6, !dbg !8432
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %47, i64 24, i1 false), !dbg !8432
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #8, !dbg !8432
  br label %for.cond93, !dbg !8433

for.cond93:                                       ; preds = %if.end108, %if.then91
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !8289, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call94 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ngsi) #7, !dbg !8434
  %tobool95 = icmp eq i8 %call94, 0, !dbg !8435
  br i1 %tobool95, label %for.body97, label %if.end110.loopexit, !dbg !8436

for.body97:                                       ; preds = %for.cond93
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !8289, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call99 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %ngsi) #7, !dbg !8437
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call99, metadata !8317, metadata !DIExpression()), !dbg !8438
  %call101 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call99) #7, !dbg !8439
  call void @llvm.dbg.value(metadata %union.tree_node* %call101, metadata !8323, metadata !DIExpression()), !dbg !8438
  %version103 = getelementptr inbounds %union.tree_node, %union.tree_node* %call101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8440
  %48 = bitcast %union.tree_node** %version103 to i32*, !dbg !8440
  %49 = load i32, i32* %48, align 8, !dbg !8440
  %call104 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call3, i32 %49) #6, !dbg !8442
  %tobool105 = icmp eq i32 %call104, 0, !dbg !8442
  br i1 %tobool105, label %if.else107, label %if.then106, !dbg !8443

if.then106:                                       ; preds = %for.body97
  call void @mark_virtual_phi_result_for_renaming(%union.gimple_statement_d* %call99) #6, !dbg !8444
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !8289, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %ngsi, i8 zeroext 1) #6, !dbg !8446
  br label %if.end108, !dbg !8447

if.else107:                                       ; preds = %for.body97
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %ngsi, metadata !8289, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %ngsi) #7, !dbg !8448
  br label %if.end108

if.end108:                                        ; preds = %if.else107, %if.then106
  br label %for.cond93, !dbg !8449, !llvm.loop !8450

if.end110.loopexit:                               ; preds = %for.cond93
  br label %if.end110, !dbg !8452

if.end110:                                        ; preds = %if.end110.loopexit, %for.end89
  %50 = bitcast %struct.edge_iterator* %tmp111 to i8*, !dbg !8452
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8, !dbg !8452
  %call113 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8452
  %51 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp111, i64 0, i32 0, !dbg !8452
  %52 = extractvalue { i32, %struct.VEC_edge_gc** } %call113, 0, !dbg !8452
  store i32 %52, i32* %51, align 8, !dbg !8452
  %53 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp111, i64 0, i32 1, !dbg !8452
  %54 = extractvalue { i32, %struct.VEC_edge_gc** } %call113, 1, !dbg !8452
  store %struct.VEC_edge_gc** %54, %struct.VEC_edge_gc*** %53, align 8, !dbg !8452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %50, i64 16, i1 false), !dbg !8452
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8, !dbg !8452
  br label %for.cond114, !dbg !8454

for.cond114:                                      ; preds = %if.end123, %if.end110
  %55 = load i32, i32* %9, align 8, !dbg !8455
  %56 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !8455
  %call115 = call fastcc %struct.edge_def* @ei_safe_edge(i32 %55, %struct.VEC_edge_gc** %56) #7, !dbg !8455
  call void @llvm.dbg.value(metadata %struct.edge_def* %call115, metadata !8292, metadata !DIExpression()), !dbg !8325
  store %struct.edge_def* %call115, %struct.edge_def** %e, align 8, !dbg !8457
  %tobool116 = icmp eq %struct.edge_def* %call115, null, !dbg !8458
  br i1 %tobool116, label %for.end124, label %for.body117, !dbg !8458

for.body117:                                      ; preds = %for.cond114
  call void @llvm.dbg.value(metadata %struct.edge_def* %call115, metadata !8292, metadata !DIExpression()), !dbg !8325
  %flags118 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call115, i64 0, i32 7, !dbg !8459
  %57 = load i32, i32* %flags118, align 8, !dbg !8459
  %and119 = and i32 %57, 8, !dbg !8461
  %tobool120 = icmp eq i32 %and119, 0, !dbg !8461
  br i1 %tobool120, label %if.else122, label %if.then121, !dbg !8462

if.then121:                                       ; preds = %for.body117
  call void @llvm.dbg.value(metadata %struct.edge_def* %call115, metadata !8292, metadata !DIExpression()), !dbg !8325
  call fastcc void @redirect_eh_edge_1(%struct.edge_def* nonnull %call115, %struct.basic_block_def* %new_bb, i8 zeroext %change_region) #7, !dbg !8463
  %58 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8465
  call void @llvm.dbg.value(metadata %struct.edge_def* %58, metadata !8292, metadata !DIExpression()), !dbg !8325
  call void @redirect_edge_succ(%struct.edge_def* %58, %struct.basic_block_def* %new_bb) #6, !dbg !8466
  %59 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8467
  call void @llvm.dbg.value(metadata %struct.edge_def* %59, metadata !8292, metadata !DIExpression()), !dbg !8325
  call void @flush_pending_stmts(%struct.edge_def* %59) #6, !dbg !8468
  br label %if.end123, !dbg !8469

if.else122:                                       ; preds = %for.body117
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8291, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8470
  br label %if.end123

if.end123:                                        ; preds = %if.else122, %if.then121
  br label %for.cond114, !dbg !8471, !llvm.loop !8472

for.end124:                                       ; preds = %for.cond114
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call2) #6, !dbg !8474
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8294, metadata !DIExpression()), !dbg !8325
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call3) #6, !dbg !8475
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8293, metadata !DIExpression()), !dbg !8325
  br label %cleanup134, !dbg !8476

fail:                                             ; preds = %for.body74
  call void @llvm.dbg.label(metadata !8324), !dbg !8477
  %60 = bitcast %struct.edge_iterator* %tmp125 to i8*, !dbg !8478
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8, !dbg !8478
  %call127 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !8478
  %61 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp125, i64 0, i32 0, !dbg !8478
  %62 = extractvalue { i32, %struct.VEC_edge_gc** } %call127, 0, !dbg !8478
  store i32 %62, i32* %61, align 8, !dbg !8478
  %63 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp125, i64 0, i32 1, !dbg !8478
  %64 = extractvalue { i32, %struct.VEC_edge_gc** } %call127, 1, !dbg !8478
  store %struct.VEC_edge_gc** %64, %struct.VEC_edge_gc*** %63, align 8, !dbg !8478
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %60, i64 16, i1 false), !dbg !8478
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8, !dbg !8478
  br label %for.cond128, !dbg !8478

for.cond128:                                      ; preds = %for.body131, %fail
  %65 = load i32, i32* %9, align 8, !dbg !8480
  %66 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !8480
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8292, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  %call129 = call fastcc zeroext i8 @ei_cond(i32 %65, %struct.VEC_edge_gc** %66, %struct.edge_def** nonnull %e) #7, !dbg !8480
  %tobool130 = icmp eq i8 %call129, 0, !dbg !8478
  br i1 %tobool130, label %for.end133, label %for.body131, !dbg !8478

for.body131:                                      ; preds = %for.cond128
  %67 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.edge_def* %67, metadata !8292, metadata !DIExpression()), !dbg !8325
  call void @redirect_edge_var_map_clear(%struct.edge_def* %67) #6, !dbg !8483
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8291, metadata !DIExpression(DW_OP_deref)), !dbg !8325
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8480
  br label %for.cond128, !dbg !8480, !llvm.loop !8484

for.end133:                                       ; preds = %for.cond128
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call2) #6, !dbg !8486
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8294, metadata !DIExpression()), !dbg !8325
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call3) #6, !dbg !8487
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8293, metadata !DIExpression()), !dbg !8325
  br label %cleanup134, !dbg !8488

cleanup134:                                       ; preds = %for.end133, %for.end124
  %retval.0 = phi i8 [ 0, %for.end133 ], [ 1, %for.end124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !8489
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8489
  ret i8 %retval.0, !dbg !8489
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cleanup_empty_eh_move_lp(%struct.basic_block_def* %bb, %struct.edge_def* %e_out, %struct.eh_landing_pad_d* %lp, %struct.eh_region_d* %new_region) unnamed_addr #5 !dbg !8490 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8494, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata %struct.edge_def* %e_out, metadata !8495, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %lp, metadata !8496, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %new_region, metadata !8497, metadata !DIExpression()), !dbg !8500
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !8501
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8501
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %lp, i64 0, i32 1, !dbg !8502
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %region, align 8, !dbg !8502
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %1, i64 0, i32 6, !dbg !8504
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %landing_pads, metadata !8499, metadata !DIExpression()), !dbg !8500
  br label %for.cond, !dbg !8505

for.cond:                                         ; preds = %for.inc, %entry
  %pp.0 = phi %struct.eh_landing_pad_d** [ %landing_pads, %entry ], [ %next_lp, %for.inc ], !dbg !8506
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0, metadata !8499, metadata !DIExpression()), !dbg !8500
  %2 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %pp.0, align 8, !dbg !8507
  %cmp = icmp eq %struct.eh_landing_pad_d* %2, %lp, !dbg !8509
  br i1 %cmp, label %for.end, label %for.inc, !dbg !8510

for.inc:                                          ; preds = %for.cond
  %next_lp = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %2, i64 0, i32 0, !dbg !8511
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %next_lp, metadata !8499, metadata !DIExpression()), !dbg !8500
  br label %for.cond, !dbg !8512, !llvm.loop !8513

for.end:                                          ; preds = %for.cond
  %pp.0.lcssa = phi %struct.eh_landing_pad_d** [ %pp.0, %for.cond ], !dbg !8506
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0.lcssa, metadata !8499, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0.lcssa, metadata !8499, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %pp.0.lcssa, metadata !8499, metadata !DIExpression()), !dbg !8500
  %3 = bitcast %struct.eh_landing_pad_d* %lp to i64*, !dbg !8515
  %4 = load i64, i64* %3, align 8, !dbg !8515
  %5 = bitcast %struct.eh_landing_pad_d** %pp.0.lcssa to i64*, !dbg !8516
  store i64 %4, i64* %5, align 8, !dbg !8516
  store %struct.eh_region_d* %new_region, %struct.eh_region_d** %region, align 8, !dbg !8517
  %landing_pads3 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %new_region, i64 0, i32 6, !dbg !8518
  %6 = bitcast %struct.eh_landing_pad_d** %landing_pads3 to i64*, !dbg !8518
  %7 = load i64, i64* %6, align 8, !dbg !8518
  store i64 %7, i64* %3, align 8, !dbg !8519
  store %struct.eh_landing_pad_d* %lp, %struct.eh_landing_pad_d** %landing_pads3, align 8, !dbg !8520
  %8 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8521
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !8521
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !8521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !8521
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !8521
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8498, metadata !DIExpression(DW_OP_deref)), !dbg !8500
  %call = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !8522
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %call) #6, !dbg !8523
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !8498, metadata !DIExpression(DW_OP_deref)), !dbg !8500
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !8524
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e_out, i64 0, i32 7, !dbg !8525
  %9 = load i32, i32* %flags, align 8, !dbg !8525
  %and = and i32 %9, -10, !dbg !8526
  %or = or i32 %and, 1, !dbg !8527
  store i32 %or, i32* %flags, align 8, !dbg !8528
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e_out, i64 0, i32 8, !dbg !8529
  store i32 10000, i32* %probability, align 4, !dbg !8530
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8531
  ret void, !dbg !8531
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8532 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8537
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !8537
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8537

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8537
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !8537
  br label %cond.end, !dbg !8537

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8537
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8537
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !8538
  %conv3 = zext i1 %cmp to i8, !dbg !8539
  ret i8 %conv3, !dbg !8540
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8541 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8544
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !8544
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8544

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !8544
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !8544
  br label %cond.end, !dbg !8544

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8544
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !8544
  ret %struct.edge_def* %call2, !dbg !8545
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !8546 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !8551
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8551

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8551
  br label %cond.end, !dbg !8551

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !8552
  ret %struct.VEC_edge_gc* %0, !dbg !8553
}

declare dso_local void @redirect_edge_var_map_clear(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !8554 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8558, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.value(metadata i64 %i, metadata !8559, metadata !DIExpression()), !dbg !8560
  %conv = trunc i64 %i to i32, !dbg !8561
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !8562
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !8563
  %0 = load i32, i32* %locus, align 8, !dbg !8563
  ret i32 %0, !dbg !8564
}

declare dso_local void @redirect_edge_var_map_add(%struct.edge_def*, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @mark_virtual_phi_result_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @flush_pending_stmts(%struct.edge_def*) local_unnamed_addr #2

declare dso_local void @mark_virtual_ops_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2189, !2190, !2191}
!llvm.ident = !{!2192}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1 = distinct !DIGlobalVariable(name: "using_eh_for_cleanups_p", scope: !2, file: !3, line: 49, type: !654, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !651, globals: !2145, nameTableKind: None)
!3 = !DIFile(filename: "tree-eh.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !13, !141, !336, !354, !361, !368, !374, !379, !384, !391, !567, !594, !632, !638, !644}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !6, line: 30, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !14, line: 7, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140}
!16 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!108 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!109 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!110 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!113 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!114 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!115 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!116 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!117 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!118 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!119 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!120 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!121 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!122 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!123 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!124 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!125 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!126 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!127 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!128 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!129 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!130 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!139 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!140 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !142, line: 39, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335}
!144 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!173 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!174 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!175 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!176 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!177 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!178 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!179 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!180 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!181 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!182 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!183 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!184 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!185 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!186 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!187 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!188 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!189 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!190 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!191 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!192 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!193 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!194 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!195 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!196 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!197 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!198 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!199 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!200 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!201 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!202 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!203 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!204 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!205 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!206 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!207 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!208 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!209 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!210 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!211 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!212 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!213 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!214 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!215 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!216 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!217 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!218 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!219 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!220 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!221 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!222 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!223 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!224 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!225 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!226 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!227 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!228 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!229 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!230 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!231 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!232 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!233 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!235 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!236 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!237 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!238 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!239 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!240 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!241 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!242 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!243 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!244 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!245 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!246 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!247 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!248 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!249 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!250 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!251 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!252 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!253 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!254 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!255 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!256 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!257 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!259 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!260 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!261 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!262 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!263 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!264 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!265 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!266 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!267 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!268 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!269 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!270 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!271 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!272 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!273 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!274 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!275 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!276 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!277 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!278 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!279 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!280 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!281 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!282 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!283 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!284 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!285 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!286 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!287 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!288 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!289 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!290 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!291 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!292 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!293 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!294 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!295 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!296 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!301 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!302 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!303 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!304 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!305 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!306 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!307 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!308 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!309 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!310 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!311 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!312 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!313 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!322 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!323 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!324 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!325 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!326 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!327 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!328 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!329 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!330 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!331 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!332 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!333 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!334 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!335 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !142, line: 280, baseType: !7, size: 32, elements: !337)
!337 = !{!338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353}
!338 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !142, line: 1817, baseType: !7, size: 32, elements: !355)
!355 = !{!356, !357, !358, !359, !360}
!356 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!361 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !142, line: 1805, baseType: !7, size: 32, elements: !362)
!362 = !{!363, !364, !365, !366, !367}
!363 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !369, line: 363, baseType: !7, size: 32, elements: !370)
!369 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!370 = !{!371, !372, !373}
!371 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !369, line: 355, baseType: !7, size: 32, elements: !375)
!375 = !{!376, !377, !378}
!376 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !380, line: 474, baseType: !7, size: 32, elements: !381)
!380 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!381 = !{!382, !383}
!382 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!383 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !385, line: 104, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390}
!387 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !392, line: 74, baseType: !7, size: 32, elements: !393)
!392 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!393 = !{!394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566}
!394 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!566 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !568, line: 727, baseType: !7, size: 32, elements: !569)
!568 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!569 = !{!570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593}
!570 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!571 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!572 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!573 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!574 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!575 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!576 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!577 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!578 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!579 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!580 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!581 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!582 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!583 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!584 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!585 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!586 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!587 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!588 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!589 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!590 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!591 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!592 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!593 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!594 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !568, line: 51, baseType: !7, size: 32, elements: !595)
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631}
!596 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!611 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!621 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!622 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!623 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!624 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!625 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!626 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!627 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!628 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!629 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!630 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!631 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!632 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_try_flags", file: !568, line: 514, baseType: !7, size: 32, elements: !633)
!633 = !{!634, !635, !636, !637}
!634 = !DIEnumerator(name: "GIMPLE_TRY_CATCH", value: 1, isUnsigned: true)
!635 = !DIEnumerator(name: "GIMPLE_TRY_FINALLY", value: 2, isUnsigned: true)
!636 = !DIEnumerator(name: "GIMPLE_TRY_KIND", value: 3, isUnsigned: true)
!637 = !DIEnumerator(name: "GIMPLE_TRY_CATCH_IS_CLEANUP", value: 4, isUnsigned: true)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !568, line: 80, baseType: !7, size: 32, elements: !639)
!639 = !{!640, !641, !642, !643}
!640 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!641 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!642 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!643 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !645, line: 119, baseType: !7, size: 32, elements: !646)
!645 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!646 = !{!647, !648, !649, !650}
!647 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!648 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!649 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!650 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!651 = !{!652, !653, !654, !655, !658, !659, !661, !847, !141, !1180, !1106, !2057, !1208, !1328, !667, !2059, !1355, !656, !2061, !632, !2072, !7, !2077, !686, !2085, !2141, !638, !801, !2142}
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!654 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !657)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "throw_stmt_node", file: !6, line: 344, size: 128, elements: !663)
!663 = !{!664, !2056}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !662, file: !6, line: 345, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !666, line: 58, baseType: !667)
!666 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !568, line: 737, size: 768, elements: !669)
!669 = !{!670, !1903, !1913, !1919, !1924, !1929, !1936, !1942, !1948, !1953, !1967, !1972, !1978, !1983, !1993, !1998, !2014, !2021, !2028, !2034, !2039, !2045, !2051}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !668, file: !568, line: 738, baseType: !671, size: 256)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !568, line: 271, size: 256, elements: !672)
!672 = !{!673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !688, !689, !1902}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !671, file: !568, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !671, file: !568, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !671, file: !568, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !671, file: !568, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !671, file: !568, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !671, file: !568, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !671, file: !568, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !671, file: !568, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !671, file: !568, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !671, file: !568, line: 312, baseType: !7, size: 32, offset: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !671, file: !568, line: 316, baseType: !684, size: 32, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !685, line: 58, baseType: !686)
!685 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !687, line: 44, baseType: !7)
!687 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!688 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !671, file: !568, line: 319, baseType: !7, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !671, file: !568, line: 323, baseType: !690, size: 64, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !369, line: 217, size: 832, elements: !692)
!692 = !{!693, !1867, !1868, !1869, !1872, !1876, !1877, !1878, !1896, !1897, !1898, !1899, !1900, !1901}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !691, file: !369, line: 219, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !369, line: 151, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !369, line: 151, size: 128, elements: !697)
!697 = !{!698}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !696, file: !369, line: 151, baseType: !699, size: 128)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !369, line: 150, baseType: !700)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !369, line: 150, size: 128, elements: !701)
!701 = !{!702, !703, !704}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !700, file: !369, line: 150, baseType: !7, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !700, file: !369, line: 150, baseType: !7, size: 32, offset: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !700, file: !369, line: 150, baseType: !705, size: 64, offset: 64)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 64, elements: !766)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !666, line: 108, baseType: !707)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !369, line: 122, size: 512, elements: !709)
!709 = !{!710, !711, !712, !1859, !1860, !1861, !1862, !1863, !1864, !1865}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !708, file: !369, line: 124, baseType: !690, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !708, file: !369, line: 125, baseType: !690, size: 64, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !708, file: !369, line: 131, baseType: !713, size: 64, offset: 128)
!713 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !369, line: 128, size: 64, elements: !714)
!714 = !{!715, !730}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !713, file: !369, line: 129, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !666, line: 66, baseType: !717)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !568, line: 143, size: 192, elements: !719)
!719 = !{!720, !728, !729}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !718, file: !568, line: 145, baseType: !721, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !666, line: 69, baseType: !722)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !568, line: 136, size: 192, elements: !724)
!724 = !{!725, !726, !727}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !723, file: !568, line: 137, baseType: !665, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !723, file: !568, line: 138, baseType: !722, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !723, file: !568, line: 139, baseType: !722, size: 64, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !718, file: !568, line: 146, baseType: !721, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !718, file: !568, line: 152, baseType: !716, size: 64, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !713, file: !369, line: 130, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !666, line: 50, baseType: !732)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !734, line: 240, size: 384, elements: !735)
!734 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !733, file: !734, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !733, file: !734, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !733, file: !734, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !733, file: !734, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !733, file: !734, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !733, file: !734, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !733, file: !734, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !733, file: !734, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !733, file: !734, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !733, file: !734, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !733, file: !734, line: 321, baseType: !747, size: 320, offset: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !734, line: 315, size: 320, elements: !748)
!748 = !{!749, !1826, !1828, !1857, !1858}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !747, file: !734, line: 316, baseType: !750, size: 64)
!750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !751, size: 64, elements: !766)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !734, line: 183, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !734, line: 166, size: 64, elements: !753)
!753 = !{!754, !755, !756, !757, !758, !768, !769, !781, !784, !846, !1804, !1805, !1816, !1823}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !752, file: !734, line: 168, baseType: !654, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !752, file: !734, line: 169, baseType: !7, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !752, file: !734, line: 170, baseType: !659, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !752, file: !734, line: 171, baseType: !731, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !752, file: !734, line: 172, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !666, line: 53, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !734, line: 359, size: 128, elements: !762)
!762 = !{!763, !764}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !761, file: !734, line: 360, baseType: !654, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !761, file: !734, line: 361, baseType: !765, size: 64, offset: 64)
!765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 64, elements: !766)
!766 = !{!767}
!767 = !DISubrange(count: 1)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !752, file: !734, line: 173, baseType: !13, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !752, file: !734, line: 174, baseType: !770, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !734, line: 133, baseType: !771)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 115, size: 32, elements: !772)
!772 = !{!773, !774, !775, !776, !777, !778, !779, !780}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !771, file: !734, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !771, file: !734, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !771, file: !734, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !771, file: !734, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !771, file: !734, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !771, file: !734, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !771, file: !734, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !771, file: !734, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !752, file: !734, line: 175, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !734, line: 175, flags: DIFlagFwdDecl)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !752, file: !734, line: 176, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !787, line: 75, size: 256, elements: !788)
!787 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!788 = !{!789, !804, !805, !806}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !786, file: !787, line: 76, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !787, line: 68, baseType: !792)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !787, line: 63, size: 320, elements: !793)
!793 = !{!794, !796, !797, !798}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !792, file: !787, line: 64, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !792, file: !787, line: 65, baseType: !795, size: 64, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !792, file: !787, line: 66, baseType: !7, size: 32, offset: 128)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !792, file: !787, line: 67, baseType: !799, size: 128, offset: 192)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 128, elements: !802)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !787, line: 29, baseType: !801)
!801 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!802 = !{!803}
!803 = !DISubrange(count: 2)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !786, file: !787, line: 77, baseType: !790, size: 64, offset: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !786, file: !787, line: 78, baseType: !7, size: 32, offset: 128)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !786, file: !787, line: 79, baseType: !807, size: 64, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !787, line: 49, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !787, line: 45, size: 832, elements: !810)
!810 = !{!811, !812, !813}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !809, file: !787, line: 46, baseType: !795, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !809, file: !787, line: 47, baseType: !785, size: 64, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !809, file: !787, line: 48, baseType: !814, size: 704, offset: 128)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !815, line: 164, size: 704, elements: !816)
!815 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!816 = !{!817, !819, !829, !830, !831, !832, !833, !834, !838, !842, !843, !844, !845}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !814, file: !815, line: 166, baseType: !818, size: 64)
!818 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !814, file: !815, line: 167, baseType: !820, size: 64, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !815, line: 157, size: 192, elements: !822)
!822 = !{!823, !824, !825}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !821, file: !815, line: 159, baseType: !656, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !821, file: !815, line: 160, baseType: !820, size: 64, offset: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !821, file: !815, line: 161, baseType: !826, size: 32, offset: 128)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 32, elements: !827)
!827 = !{!828}
!828 = !DISubrange(count: 4)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !814, file: !815, line: 168, baseType: !656, size: 64, offset: 128)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !814, file: !815, line: 169, baseType: !656, size: 64, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !814, file: !815, line: 170, baseType: !656, size: 64, offset: 256)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !814, file: !815, line: 171, baseType: !818, size: 64, offset: 320)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !814, file: !815, line: 172, baseType: !654, size: 32, offset: 384)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !814, file: !815, line: 176, baseType: !835, size: 64, offset: 448)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!820, !658, !818}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !814, file: !815, line: 177, baseType: !839, size: 64, offset: 512)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{null, !658, !820}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !814, file: !815, line: 178, baseType: !658, size: 64, offset: 576)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !814, file: !815, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !814, file: !815, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !814, file: !815, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !752, file: !734, line: 177, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !666, line: 56, baseType: !848)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !142, line: 3371, size: 1792, elements: !850)
!850 = !{!851, !884, !890, !901, !920, !931, !936, !943, !949, !962, !970, !1008, !1013, !1041, !1058, !1059, !1064, !1073, !1079, !1084, !1088, !1092, !1453, !1502, !1508, !1514, !1521, !1534, !1548, !1565, !1577, !1599, !1614, !1786}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !849, file: !142, line: 3372, baseType: !852, size: 64)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !142, line: 360, size: 64, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !852, file: !142, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !852, file: !142, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !852, file: !142, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !852, file: !142, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !852, file: !142, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !852, file: !142, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !852, file: !142, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !852, file: !142, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !852, file: !142, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !852, file: !142, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !852, file: !142, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !852, file: !142, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !852, file: !142, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !852, file: !142, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !852, file: !142, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !852, file: !142, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !852, file: !142, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !852, file: !142, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !852, file: !142, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !852, file: !142, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !852, file: !142, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !852, file: !142, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !852, file: !142, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !852, file: !142, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !852, file: !142, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !852, file: !142, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !852, file: !142, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !852, file: !142, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !852, file: !142, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !852, file: !142, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !849, file: !142, line: 3373, baseType: !885, size: 192)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !142, line: 402, size: 192, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !885, file: !142, line: 403, baseType: !852, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !885, file: !142, line: 404, baseType: !847, size: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !885, file: !142, line: 405, baseType: !847, size: 64, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !849, file: !142, line: 3374, baseType: !891, size: 320)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !142, line: 1384, size: 320, elements: !892)
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !891, file: !142, line: 1385, baseType: !885, size: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !891, file: !142, line: 1386, baseType: !895, size: 128, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !896, line: 58, baseType: !897)
!896 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !896, line: 54, size: 128, elements: !898)
!898 = !{!899, !900}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !897, file: !896, line: 56, baseType: !801, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !897, file: !896, line: 57, baseType: !818, size: 64, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !849, file: !142, line: 3375, baseType: !902, size: 256)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !142, line: 1397, size: 256, elements: !903)
!903 = !{!904, !905}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !902, file: !142, line: 1398, baseType: !885, size: 192)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !902, file: !142, line: 1399, baseType: !906, size: 64, offset: 192)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !908, line: 52, size: 256, elements: !909)
!908 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!909 = !{!910, !911, !912, !913, !914, !915, !916}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !907, file: !908, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !907, file: !908, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !907, file: !908, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !907, file: !908, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !907, file: !908, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !907, file: !908, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !907, file: !908, line: 62, baseType: !917, size: 192, offset: 64)
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 192, elements: !918)
!918 = !{!919}
!919 = !DISubrange(count: 3)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !849, file: !142, line: 3376, baseType: !921, size: 256)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !142, line: 1408, size: 256, elements: !922)
!922 = !{!923, !924}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !921, file: !142, line: 1409, baseType: !885, size: 192)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !921, file: !142, line: 1410, baseType: !925, size: 64, offset: 192)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !927, line: 27, size: 192, elements: !928)
!927 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!928 = !{!929, !930}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !926, file: !927, line: 29, baseType: !895, size: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !926, file: !927, line: 30, baseType: !13, size: 32, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !849, file: !142, line: 3377, baseType: !932, size: 256)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !142, line: 1437, size: 256, elements: !933)
!933 = !{!934, !935}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !932, file: !142, line: 1438, baseType: !885, size: 192)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !932, file: !142, line: 1439, baseType: !847, size: 64, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !849, file: !142, line: 3378, baseType: !937, size: 256)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !142, line: 1418, size: 256, elements: !938)
!938 = !{!939, !940, !941}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !937, file: !142, line: 1419, baseType: !885, size: 192)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !937, file: !142, line: 1420, baseType: !654, size: 32, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !937, file: !142, line: 1421, baseType: !942, size: 8, offset: 224)
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 8, elements: !766)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !849, file: !142, line: 3379, baseType: !944, size: 320)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !142, line: 1428, size: 320, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !944, file: !142, line: 1429, baseType: !885, size: 192)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !944, file: !142, line: 1430, baseType: !847, size: 64, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !944, file: !142, line: 1431, baseType: !847, size: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !849, file: !142, line: 3380, baseType: !950, size: 320)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !142, line: 1460, size: 320, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !950, file: !142, line: 1461, baseType: !885, size: 192)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !950, file: !142, line: 1462, baseType: !954, size: 128, offset: 192)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !955, line: 31, size: 128, elements: !956)
!955 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!956 = !{!957, !960, !961}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !954, file: !955, line: 32, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !653)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !954, file: !955, line: 33, baseType: !7, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !954, file: !955, line: 34, baseType: !7, size: 32, offset: 96)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !849, file: !142, line: 3381, baseType: !963, size: 384)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !142, line: 2507, size: 384, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !963, file: !142, line: 2508, baseType: !885, size: 192)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !963, file: !142, line: 2509, baseType: !684, size: 32, offset: 192)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !963, file: !142, line: 2510, baseType: !7, size: 32, offset: 224)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !963, file: !142, line: 2511, baseType: !847, size: 64, offset: 256)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !963, file: !142, line: 2512, baseType: !847, size: 64, offset: 320)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !849, file: !142, line: 3382, baseType: !971, size: 896)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !142, line: 2652, size: 896, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !971, file: !142, line: 2653, baseType: !963, size: 384)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !971, file: !142, line: 2654, baseType: !847, size: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !971, file: !142, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !971, file: !142, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !971, file: !142, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !971, file: !142, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !971, file: !142, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !971, file: !142, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !971, file: !142, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !971, file: !142, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !971, file: !142, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !971, file: !142, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !971, file: !142, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !971, file: !142, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !971, file: !142, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !971, file: !142, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !971, file: !142, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !971, file: !142, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !971, file: !142, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !971, file: !142, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !971, file: !142, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !971, file: !142, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !971, file: !142, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !971, file: !142, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !971, file: !142, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !971, file: !142, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !971, file: !142, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !971, file: !142, line: 2703, baseType: !7, size: 32, offset: 512)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !971, file: !142, line: 2705, baseType: !847, size: 64, offset: 576)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !971, file: !142, line: 2706, baseType: !847, size: 64, offset: 640)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !971, file: !142, line: 2707, baseType: !847, size: 64, offset: 704)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !971, file: !142, line: 2708, baseType: !847, size: 64, offset: 768)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !971, file: !142, line: 2711, baseType: !1006, size: 64, offset: 832)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !142, line: 2711, flags: DIFlagFwdDecl)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !849, file: !142, line: 3383, baseType: !1009, size: 960)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !142, line: 2756, size: 960, elements: !1010)
!1010 = !{!1011, !1012}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1009, file: !142, line: 2757, baseType: !971, size: 896)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1009, file: !142, line: 2758, baseType: !731, size: 64, offset: 896)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !849, file: !142, line: 3384, baseType: !1014, size: 1472)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !142, line: 3114, size: 1472, elements: !1015)
!1015 = !{!1016, !1037, !1038, !1039, !1040}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1014, file: !142, line: 3115, baseType: !1017, size: 1216)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !142, line: 2984, size: 1216, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1017, file: !142, line: 2985, baseType: !1009, size: 960)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1017, file: !142, line: 2986, baseType: !847, size: 64, offset: 960)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1017, file: !142, line: 2987, baseType: !847, size: 64, offset: 1024)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1017, file: !142, line: 2988, baseType: !847, size: 64, offset: 1088)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1017, file: !142, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1017, file: !142, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1017, file: !142, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1017, file: !142, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1017, file: !142, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1017, file: !142, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1017, file: !142, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1017, file: !142, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1017, file: !142, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1017, file: !142, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1017, file: !142, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1017, file: !142, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1017, file: !142, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1017, file: !142, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1014, file: !142, line: 3117, baseType: !847, size: 64, offset: 1216)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1014, file: !142, line: 3119, baseType: !847, size: 64, offset: 1280)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1014, file: !142, line: 3121, baseType: !847, size: 64, offset: 1344)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1014, file: !142, line: 3123, baseType: !847, size: 64, offset: 1408)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !849, file: !142, line: 3385, baseType: !1042, size: 1088)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !142, line: 2874, size: 1088, elements: !1043)
!1043 = !{!1044, !1045, !1046}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1042, file: !142, line: 2875, baseType: !1009, size: 960)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1042, file: !142, line: 2876, baseType: !731, size: 64, offset: 960)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1042, file: !142, line: 2877, baseType: !1047, size: 64, offset: 1024)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1049, line: 172, size: 128, elements: !1050)
!1049 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1050 = !{!1051, !1052, !1053, !1054, !1055, !1056, !1057}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1048, file: !1049, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1048, file: !1049, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1048, file: !1049, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1048, file: !1049, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1048, file: !1049, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1048, file: !1049, line: 195, baseType: !7, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1048, file: !1049, line: 199, baseType: !847, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !849, file: !142, line: 3386, baseType: !1017, size: 1216)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !849, file: !142, line: 3387, baseType: !1060, size: 1280)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !142, line: 3093, size: 1280, elements: !1061)
!1061 = !{!1062, !1063}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1060, file: !142, line: 3094, baseType: !1017, size: 1216)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1060, file: !142, line: 3095, baseType: !1047, size: 64, offset: 1216)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !849, file: !142, line: 3388, baseType: !1065, size: 1216)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !142, line: 2824, size: 1216, elements: !1066)
!1066 = !{!1067, !1068, !1069, !1070, !1071, !1072}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1065, file: !142, line: 2825, baseType: !971, size: 896)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1065, file: !142, line: 2827, baseType: !847, size: 64, offset: 896)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1065, file: !142, line: 2828, baseType: !847, size: 64, offset: 960)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1065, file: !142, line: 2829, baseType: !847, size: 64, offset: 1024)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1065, file: !142, line: 2830, baseType: !847, size: 64, offset: 1088)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1065, file: !142, line: 2831, baseType: !847, size: 64, offset: 1152)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !849, file: !142, line: 3389, baseType: !1074, size: 1024)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !142, line: 2850, size: 1024, elements: !1075)
!1075 = !{!1076, !1077, !1078}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1074, file: !142, line: 2851, baseType: !1009, size: 960)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1074, file: !142, line: 2852, baseType: !654, size: 32, offset: 960)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1074, file: !142, line: 2853, baseType: !654, size: 32, offset: 992)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !849, file: !142, line: 3390, baseType: !1080, size: 1024)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !142, line: 2857, size: 1024, elements: !1081)
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1080, file: !142, line: 2858, baseType: !1009, size: 960)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1080, file: !142, line: 2859, baseType: !1047, size: 64, offset: 960)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !849, file: !142, line: 3391, baseType: !1085, size: 960)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !142, line: 2862, size: 960, elements: !1086)
!1086 = !{!1087}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1085, file: !142, line: 2863, baseType: !1009, size: 960)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !849, file: !142, line: 3392, baseType: !1089, size: 1472)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !142, line: 3304, size: 1472, elements: !1090)
!1090 = !{!1091}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1089, file: !142, line: 3305, baseType: !1014, size: 1472)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !849, file: !142, line: 3393, baseType: !1093, size: 1792)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !142, line: 3248, size: 1792, elements: !1094)
!1094 = !{!1095, !1096, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1093, file: !142, line: 3249, baseType: !1014, size: 1472)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1093, file: !142, line: 3251, baseType: !1097, size: 64, offset: 1472)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1099, line: 463, size: 1152, elements: !1100)
!1099 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1100 = !{!1101, !1265, !1296, !1297, !1373, !1376, !1377, !1378, !1379, !1380, !1381, !1405, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1098, file: !1099, line: 464, baseType: !1102, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !6, line: 194, size: 384, elements: !1104)
!1104 = !{!1105, !1154, !1167, !1181, !1233, !1246}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1103, file: !6, line: 197, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !6, line: 182, baseType: !1107)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !6, line: 116, size: 704, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1114, !1115, !1142, !1151, !1152, !1153}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1108, file: !6, line: 119, baseType: !1107, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1108, file: !6, line: 122, baseType: !1107, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1108, file: !6, line: 123, baseType: !1107, size: 64, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1108, file: !6, line: 126, baseType: !654, size: 32, offset: 192)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1108, file: !6, line: 129, baseType: !5, size: 32, offset: 224)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1108, file: !6, line: 165, baseType: !1116, size: 192, offset: 256)
!1116 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !6, line: 132, size: 192, elements: !1117)
!1117 = !{!1118, !1131, !1137}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1116, file: !6, line: 137, baseType: !1119, size: 128)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !6, line: 133, size: 128, elements: !1120)
!1120 = !{!1121, !1130}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1119, file: !6, line: 135, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !6, line: 93, size: 320, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !1129}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1123, file: !6, line: 96, baseType: !1122, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1123, file: !6, line: 97, baseType: !1122, size: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1123, file: !6, line: 101, baseType: !847, size: 64, offset: 128)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1123, file: !6, line: 106, baseType: !847, size: 64, offset: 192)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1123, file: !6, line: 111, baseType: !847, size: 64, offset: 256)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1119, file: !6, line: 136, baseType: !1122, size: 64, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1116, file: !6, line: 151, baseType: !1132, size: 192)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !6, line: 139, size: 192, elements: !1133)
!1133 = !{!1134, !1135, !1136}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1132, file: !6, line: 141, baseType: !847, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1132, file: !6, line: 145, baseType: !847, size: 64, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1132, file: !6, line: 150, baseType: !654, size: 32, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1116, file: !6, line: 164, baseType: !1138, size: 128)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !6, line: 153, size: 128, elements: !1139)
!1139 = !{!1140, !1141}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1138, file: !6, line: 161, baseType: !847, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1138, file: !6, line: 163, baseType: !684, size: 32, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1108, file: !6, line: 168, baseType: !1143, size: 64, offset: 448)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !6, line: 67, size: 320, elements: !1145)
!1145 = !{!1146, !1147, !1148, !1149, !1150}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1144, file: !6, line: 70, baseType: !1143, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1144, file: !6, line: 73, baseType: !1107, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1144, file: !6, line: 78, baseType: !847, size: 64, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1144, file: !6, line: 85, baseType: !731, size: 64, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1144, file: !6, line: 88, baseType: !654, size: 32, offset: 256)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1108, file: !6, line: 173, baseType: !731, size: 64, offset: 512)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1108, file: !6, line: 173, baseType: !731, size: 64, offset: 576)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1108, file: !6, line: 177, baseType: !653, size: 8, offset: 640)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1103, file: !6, line: 200, baseType: !1155, size: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !6, line: 185, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !6, line: 185, size: 128, elements: !1158)
!1158 = !{!1159}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1157, file: !6, line: 185, baseType: !1160, size: 128)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !6, line: 184, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !6, line: 184, size: 128, elements: !1162)
!1162 = !{!1163, !1164, !1165}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1161, file: !6, line: 184, baseType: !7, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1161, file: !6, line: 184, baseType: !7, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1161, file: !6, line: 184, baseType: !1166, size: 64, offset: 64)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1106, size: 64, elements: !766)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1103, file: !6, line: 203, baseType: !1168, size: 64, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !6, line: 189, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !6, line: 189, size: 128, elements: !1171)
!1171 = !{!1172}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1170, file: !6, line: 189, baseType: !1173, size: 128)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !6, line: 188, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !6, line: 188, size: 128, elements: !1175)
!1175 = !{!1176, !1177, !1178}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1174, file: !6, line: 188, baseType: !7, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1174, file: !6, line: 188, baseType: !7, size: 32, offset: 32)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1174, file: !6, line: 188, baseType: !1179, size: 64, offset: 64)
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 64, elements: !766)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !6, line: 180, baseType: !1143)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1103, file: !6, line: 207, baseType: !1182, size: 64, offset: 192)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1183, line: 144, baseType: !1184)
!1183 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1183, line: 100, size: 896, elements: !1186)
!1186 = !{!1187, !1195, !1200, !1205, !1207, !1210, !1211, !1212, !1213, !1214, !1219, !1221, !1222, !1227, !1232}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1185, file: !1183, line: 102, baseType: !1188, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1183, line: 52, baseType: !1189)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1183, line: 47, baseType: !7)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1185, file: !1183, line: 105, baseType: !1196, size: 64, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1183, line: 59, baseType: !1197)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!654, !1193, !1193}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1185, file: !1183, line: 108, baseType: !1201, size: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1183, line: 63, baseType: !1202)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{null, !658}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1185, file: !1183, line: 111, baseType: !1206, size: 64, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1185, file: !1183, line: 114, baseType: !1208, size: 64, offset: 256)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1209, line: 46, baseType: !801)
!1209 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1185, file: !1183, line: 117, baseType: !1208, size: 64, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1185, file: !1183, line: 120, baseType: !1208, size: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1185, file: !1183, line: 124, baseType: !7, size: 32, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1185, file: !1183, line: 128, baseType: !7, size: 32, offset: 480)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1185, file: !1183, line: 131, baseType: !1215, size: 64, offset: 512)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1183, line: 75, baseType: !1216)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!658, !1208, !1208}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1185, file: !1183, line: 132, baseType: !1220, size: 64, offset: 576)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1183, line: 78, baseType: !1202)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1185, file: !1183, line: 135, baseType: !658, size: 64, offset: 640)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1185, file: !1183, line: 136, baseType: !1223, size: 64, offset: 704)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1183, line: 82, baseType: !1224)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!658, !658, !1208, !1208}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1185, file: !1183, line: 137, baseType: !1228, size: 64, offset: 768)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1183, line: 83, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{null, !658, !658}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1185, file: !1183, line: 141, baseType: !7, size: 32, offset: 832)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1103, file: !6, line: 211, baseType: !1234, size: 64, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !142, line: 183, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !142, line: 183, size: 128, elements: !1237)
!1237 = !{!1238}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1236, file: !142, line: 183, baseType: !1239, size: 128)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !142, line: 182, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !142, line: 182, size: 128, elements: !1241)
!1241 = !{!1242, !1243, !1244}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1240, file: !142, line: 182, baseType: !7, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1240, file: !142, line: 182, baseType: !7, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1240, file: !142, line: 182, baseType: !1245, size: 64, offset: 64)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 64, elements: !766)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1103, file: !6, line: 220, baseType: !1247, size: 64, offset: 320)
!1247 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !6, line: 217, size: 64, elements: !1248)
!1248 = !{!1249, !1250}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1247, file: !6, line: 218, baseType: !1234, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1247, file: !6, line: 219, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1253, line: 29, baseType: !1254)
!1253 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1253, line: 29, size: 96, elements: !1255)
!1255 = !{!1256}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1254, file: !1253, line: 29, baseType: !1257, size: 96)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1253, line: 27, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1253, line: 27, size: 96, elements: !1259)
!1259 = !{!1260, !1261, !1262}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1258, file: !1253, line: 27, baseType: !7, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1258, file: !1253, line: 27, baseType: !7, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1258, file: !1253, line: 27, baseType: !1263, size: 8, offset: 64)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1264, size: 8, elements: !766)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1253, line: 26, baseType: !653)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1098, file: !1099, line: 467, baseType: !1266, size: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !369, line: 374, size: 640, elements: !1268)
!1268 = !{!1269, !1271, !1272, !1285, !1286, !1287, !1288, !1289, !1290, !1292, !1294, !1295}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1267, file: !369, line: 377, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !666, line: 111, baseType: !690)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1267, file: !369, line: 378, baseType: !1270, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1267, file: !369, line: 381, baseType: !1273, size: 64, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !369, line: 282, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !369, line: 282, size: 128, elements: !1276)
!1276 = !{!1277}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1275, file: !369, line: 282, baseType: !1278, size: 128)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !369, line: 281, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !369, line: 281, size: 128, elements: !1280)
!1280 = !{!1281, !1282, !1283}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1279, file: !369, line: 281, baseType: !7, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1279, file: !369, line: 281, baseType: !7, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1279, file: !369, line: 281, baseType: !1284, size: 64, offset: 64)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1270, size: 64, elements: !766)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1267, file: !369, line: 384, baseType: !654, size: 32, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1267, file: !369, line: 387, baseType: !654, size: 32, offset: 224)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1267, file: !369, line: 390, baseType: !654, size: 32, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1267, file: !369, line: 394, baseType: !1273, size: 64, offset: 320)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1267, file: !369, line: 396, baseType: !368, size: 32, offset: 384)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1267, file: !369, line: 399, baseType: !1291, size: 64, offset: 416)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 64, elements: !802)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1267, file: !369, line: 402, baseType: !1293, size: 64, offset: 480)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !802)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1267, file: !369, line: 406, baseType: !654, size: 32, offset: 544)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1267, file: !369, line: 409, baseType: !654, size: 32, offset: 576)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1098, file: !1099, line: 470, baseType: !717, size: 64, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1098, file: !1099, line: 473, baseType: !1298, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1049, line: 39, size: 1152, elements: !1300)
!1300 = !{!1301, !1302, !1315, !1316, !1317, !1329, !1330, !1333, !1334, !1335, !1336, !1337}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1299, file: !1049, line: 41, baseType: !1182, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1299, file: !1049, line: 48, baseType: !1303, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !568, line: 35, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !568, line: 35, size: 128, elements: !1306)
!1306 = !{!1307}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1305, file: !568, line: 35, baseType: !1308, size: 128)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !568, line: 33, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !568, line: 33, size: 128, elements: !1310)
!1310 = !{!1311, !1312, !1313}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1309, file: !568, line: 33, baseType: !7, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1309, file: !568, line: 33, baseType: !7, size: 32, offset: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1309, file: !568, line: 33, baseType: !1314, size: 64, offset: 64)
!1314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 64, elements: !766)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1299, file: !1049, line: 51, baseType: !1234, size: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1299, file: !1049, line: 54, baseType: !847, size: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1299, file: !1049, line: 57, baseType: !1318, size: 128, offset: 256)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1319, line: 31, size: 128, elements: !1320)
!1319 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1318, file: !1319, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1318, file: !1319, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1318, file: !1319, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1318, file: !1319, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1318, file: !1319, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1318, file: !1319, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1318, file: !1319, line: 56, baseType: !1328, size: 64, offset: 64)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !666, line: 47, baseType: !785)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1299, file: !1049, line: 60, baseType: !1318, size: 128, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1299, file: !1049, line: 64, baseType: !1331, size: 64, offset: 512)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !6, line: 27, flags: DIFlagFwdDecl)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1299, file: !1049, line: 67, baseType: !847, size: 64, offset: 576)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1299, file: !1049, line: 73, baseType: !1182, size: 64, offset: 640)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1299, file: !1049, line: 77, baseType: !1328, size: 64, offset: 704)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1299, file: !1049, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1299, file: !1049, line: 82, baseType: !1338, size: 320, offset: 832)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !645, line: 62, size: 320, elements: !1339)
!1339 = !{!1340, !1346, !1347, !1348, !1349, !1356}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1338, file: !645, line: 63, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !645, line: 56, size: 128, elements: !1343)
!1343 = !{!1344, !1345}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1342, file: !645, line: 57, baseType: !1341, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1342, file: !645, line: 58, baseType: !942, size: 8, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1338, file: !645, line: 64, baseType: !7, size: 32, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1338, file: !645, line: 66, baseType: !7, size: 32, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1338, file: !645, line: 68, baseType: !653, size: 8, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1338, file: !645, line: 70, baseType: !1350, size: 64, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !645, line: 37, size: 128, elements: !1352)
!1352 = !{!1353, !1354}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1351, file: !645, line: 39, baseType: !1350, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1351, file: !645, line: 40, baseType: !1355, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1338, file: !645, line: 71, baseType: !1357, size: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !645, line: 45, size: 320, elements: !1359)
!1359 = !{!1360, !1361}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1358, file: !645, line: 47, baseType: !1357, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1358, file: !645, line: 48, baseType: !1362, size: 256, offset: 64)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !142, line: 1883, size: 256, elements: !1363)
!1363 = !{!1364, !1366, !1367, !1372}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1362, file: !142, line: 1884, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1362, file: !142, line: 1885, baseType: !1365, size: 64, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1362, file: !142, line: 1891, baseType: !1368, size: 64, offset: 128)
!1368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !142, line: 1891, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1368, file: !142, line: 1891, baseType: !665, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1368, file: !142, line: 1891, baseType: !847, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1362, file: !142, line: 1892, baseType: !1355, size: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1098, file: !1099, line: 476, baseType: !1374, size: 64, offset: 256)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1099, line: 476, flags: DIFlagFwdDecl)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1098, file: !1099, line: 479, baseType: !1182, size: 64, offset: 320)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1098, file: !1099, line: 484, baseType: !847, size: 64, offset: 384)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1098, file: !1099, line: 488, baseType: !847, size: 64, offset: 448)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1098, file: !1099, line: 493, baseType: !847, size: 64, offset: 512)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1098, file: !1099, line: 496, baseType: !847, size: 64, offset: 576)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1098, file: !1099, line: 501, baseType: !1382, size: 64, offset: 640)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !380, line: 2355, size: 576, elements: !1384)
!1384 = !{!1385, !1388, !1389, !1390, !1391, !1393, !1394, !1399, !1400, !1401, !1402, !1403, !1404}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1383, file: !380, line: 2356, baseType: !1386, size: 64)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !380, line: 2356, flags: DIFlagFwdDecl)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1383, file: !380, line: 2357, baseType: !659, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1383, file: !380, line: 2358, baseType: !654, size: 32, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1383, file: !380, line: 2359, baseType: !654, size: 32, offset: 160)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1383, file: !380, line: 2360, baseType: !1392, size: 128, offset: 192)
!1392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 128, elements: !827)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1383, file: !380, line: 2364, baseType: !654, size: 32, offset: 320)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1383, file: !380, line: 2367, baseType: !1395, size: 128, offset: 384)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !380, line: 2349, size: 128, elements: !1396)
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1395, file: !380, line: 2351, baseType: !731, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1395, file: !380, line: 2352, baseType: !818, size: 64, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1383, file: !380, line: 2371, baseType: !379, size: 32, offset: 512)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1383, file: !380, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1383, file: !380, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1383, file: !380, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1383, file: !380, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1383, file: !380, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1098, file: !1099, line: 504, baseType: !1406, size: 64, offset: 704)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1099, line: 504, flags: DIFlagFwdDecl)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1098, file: !1099, line: 507, baseType: !1182, size: 64, offset: 768)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1098, file: !1099, line: 510, baseType: !654, size: 32, offset: 832)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1098, file: !1099, line: 513, baseType: !654, size: 32, offset: 864)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1098, file: !1099, line: 516, baseType: !684, size: 32, offset: 896)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1098, file: !1099, line: 519, baseType: !684, size: 32, offset: 928)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1098, file: !1099, line: 522, baseType: !7, size: 32, offset: 960)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1098, file: !1099, line: 523, baseType: !7, size: 32, offset: 992)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1098, file: !1099, line: 528, baseType: !659, size: 64, offset: 1024)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1098, file: !1099, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1098, file: !1099, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1098, file: !1099, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1098, file: !1099, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1098, file: !1099, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1098, file: !1099, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1098, file: !1099, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1098, file: !1099, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1098, file: !1099, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1098, file: !1099, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1098, file: !1099, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1098, file: !1099, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1098, file: !1099, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1098, file: !1099, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1098, file: !1099, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1098, file: !1099, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1093, file: !142, line: 3254, baseType: !847, size: 64, offset: 1536)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1093, file: !142, line: 3257, baseType: !847, size: 64, offset: 1600)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1093, file: !142, line: 3258, baseType: !847, size: 64, offset: 1664)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1093, file: !142, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1093, file: !142, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1093, file: !142, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1093, file: !142, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1093, file: !142, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1093, file: !142, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1093, file: !142, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1093, file: !142, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1093, file: !142, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1093, file: !142, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1093, file: !142, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1093, file: !142, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1093, file: !142, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1093, file: !142, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1093, file: !142, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1093, file: !142, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1093, file: !142, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1093, file: !142, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !849, file: !142, line: 3394, baseType: !1454, size: 1344)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !142, line: 2279, size: 1344, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1481, !1482, !1483, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1454, file: !142, line: 2280, baseType: !885, size: 192)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1454, file: !142, line: 2281, baseType: !847, size: 64, offset: 192)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1454, file: !142, line: 2282, baseType: !847, size: 64, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1454, file: !142, line: 2283, baseType: !847, size: 64, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1454, file: !142, line: 2284, baseType: !847, size: 64, offset: 384)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1454, file: !142, line: 2285, baseType: !7, size: 32, offset: 448)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1454, file: !142, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1454, file: !142, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1454, file: !142, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1454, file: !142, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1454, file: !142, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1454, file: !142, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1454, file: !142, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1454, file: !142, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1454, file: !142, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1454, file: !142, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1454, file: !142, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1454, file: !142, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1454, file: !142, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1454, file: !142, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1454, file: !142, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1454, file: !142, line: 2305, baseType: !7, size: 32, offset: 512)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1454, file: !142, line: 2306, baseType: !1479, size: 32, offset: 544)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1480, line: 31, baseType: !654)
!1480 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1454, file: !142, line: 2307, baseType: !847, size: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1454, file: !142, line: 2308, baseType: !847, size: 64, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1454, file: !142, line: 2314, baseType: !1484, size: 64, offset: 704)
!1484 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !142, line: 2309, size: 64, elements: !1485)
!1485 = !{!1486, !1487, !1488}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1484, file: !142, line: 2310, baseType: !654, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1484, file: !142, line: 2311, baseType: !659, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1484, file: !142, line: 2312, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !142, line: 2277, flags: DIFlagFwdDecl)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1454, file: !142, line: 2315, baseType: !847, size: 64, offset: 768)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1454, file: !142, line: 2316, baseType: !847, size: 64, offset: 832)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1454, file: !142, line: 2317, baseType: !847, size: 64, offset: 896)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1454, file: !142, line: 2318, baseType: !847, size: 64, offset: 960)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1454, file: !142, line: 2319, baseType: !847, size: 64, offset: 1024)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1454, file: !142, line: 2320, baseType: !847, size: 64, offset: 1088)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1454, file: !142, line: 2321, baseType: !847, size: 64, offset: 1152)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1454, file: !142, line: 2322, baseType: !847, size: 64, offset: 1216)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1454, file: !142, line: 2324, baseType: !1500, size: 64, offset: 1280)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !142, line: 2324, flags: DIFlagFwdDecl)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !849, file: !142, line: 3395, baseType: !1503, size: 320)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !142, line: 1469, size: 320, elements: !1504)
!1504 = !{!1505, !1506, !1507}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1503, file: !142, line: 1470, baseType: !885, size: 192)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1503, file: !142, line: 1471, baseType: !847, size: 64, offset: 192)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1503, file: !142, line: 1472, baseType: !847, size: 64, offset: 256)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !849, file: !142, line: 3396, baseType: !1509, size: 320)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !142, line: 1482, size: 320, elements: !1510)
!1510 = !{!1511, !1512, !1513}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1509, file: !142, line: 1483, baseType: !885, size: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1509, file: !142, line: 1484, baseType: !654, size: 32, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1509, file: !142, line: 1485, baseType: !1245, size: 64, offset: 256)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !849, file: !142, line: 3397, baseType: !1515, size: 384)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !142, line: 1829, size: 384, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1515, file: !142, line: 1830, baseType: !885, size: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1515, file: !142, line: 1831, baseType: !684, size: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1515, file: !142, line: 1832, baseType: !847, size: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1515, file: !142, line: 1835, baseType: !1245, size: 64, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !849, file: !142, line: 3398, baseType: !1522, size: 704)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !142, line: 1898, size: 704, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528, !1533}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1522, file: !142, line: 1899, baseType: !885, size: 192)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1522, file: !142, line: 1902, baseType: !847, size: 64, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1522, file: !142, line: 1905, baseType: !665, size: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1522, file: !142, line: 1908, baseType: !7, size: 32, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1522, file: !142, line: 1911, baseType: !1529, size: 64, offset: 384)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1049, line: 117, size: 128, elements: !1531)
!1531 = !{!1532}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1530, file: !1049, line: 120, baseType: !1318, size: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1522, file: !142, line: 1914, baseType: !1362, size: 256, offset: 448)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !849, file: !142, line: 3399, baseType: !1535, size: 704)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !142, line: 2008, size: 704, elements: !1536)
!1536 = !{!1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1535, file: !142, line: 2009, baseType: !885, size: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1535, file: !142, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1535, file: !142, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1535, file: !142, line: 2014, baseType: !684, size: 32, offset: 224)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1535, file: !142, line: 2016, baseType: !847, size: 64, offset: 256)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1535, file: !142, line: 2017, baseType: !1234, size: 64, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1535, file: !142, line: 2019, baseType: !847, size: 64, offset: 384)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1535, file: !142, line: 2020, baseType: !847, size: 64, offset: 448)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1535, file: !142, line: 2021, baseType: !847, size: 64, offset: 512)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1535, file: !142, line: 2022, baseType: !847, size: 64, offset: 576)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1535, file: !142, line: 2023, baseType: !847, size: 64, offset: 640)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !849, file: !142, line: 3400, baseType: !1549, size: 832)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !142, line: 2430, size: 832, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1549, file: !142, line: 2431, baseType: !885, size: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1549, file: !142, line: 2433, baseType: !847, size: 64, offset: 192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1549, file: !142, line: 2434, baseType: !847, size: 64, offset: 256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1549, file: !142, line: 2435, baseType: !847, size: 64, offset: 320)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1549, file: !142, line: 2436, baseType: !847, size: 64, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1549, file: !142, line: 2437, baseType: !1234, size: 64, offset: 448)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1549, file: !142, line: 2438, baseType: !847, size: 64, offset: 512)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1549, file: !142, line: 2440, baseType: !847, size: 64, offset: 576)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1549, file: !142, line: 2441, baseType: !847, size: 64, offset: 640)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1549, file: !142, line: 2443, baseType: !1561, size: 128, offset: 704)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !142, line: 182, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !142, line: 182, size: 128, elements: !1563)
!1563 = !{!1564}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1562, file: !142, line: 182, baseType: !1239, size: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !849, file: !142, line: 3401, baseType: !1566, size: 320)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !142, line: 3327, size: 320, elements: !1567)
!1567 = !{!1568, !1569, !1576}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1566, file: !142, line: 3329, baseType: !885, size: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1566, file: !142, line: 3330, baseType: !1570, size: 64, offset: 192)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !142, line: 3320, size: 192, elements: !1572)
!1572 = !{!1573, !1574, !1575}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1571, file: !142, line: 3322, baseType: !1570, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1571, file: !142, line: 3323, baseType: !1570, size: 64, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1571, file: !142, line: 3324, baseType: !847, size: 64, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1566, file: !142, line: 3331, baseType: !1570, size: 64, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !849, file: !142, line: 3402, baseType: !1578, size: 256)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !142, line: 1540, size: 256, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1578, file: !142, line: 1541, baseType: !885, size: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1578, file: !142, line: 1542, baseType: !1582, size: 64, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !142, line: 1538, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !142, line: 1538, size: 192, elements: !1585)
!1585 = !{!1586}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1584, file: !142, line: 1538, baseType: !1587, size: 192)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !142, line: 1537, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !142, line: 1537, size: 192, elements: !1589)
!1589 = !{!1590, !1591, !1592}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1588, file: !142, line: 1537, baseType: !7, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1588, file: !142, line: 1537, baseType: !7, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1588, file: !142, line: 1537, baseType: !1593, size: 128, offset: 64)
!1593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1594, size: 128, elements: !766)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !142, line: 1535, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !142, line: 1532, size: 128, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1595, file: !142, line: 1533, baseType: !847, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1595, file: !142, line: 1534, baseType: !847, size: 64, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !849, file: !142, line: 3403, baseType: !1600, size: 512)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !142, line: 1938, size: 512, elements: !1601)
!1601 = !{!1602, !1603, !1604, !1605, !1611, !1612, !1613}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1600, file: !142, line: 1939, baseType: !885, size: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1600, file: !142, line: 1940, baseType: !684, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1600, file: !142, line: 1941, baseType: !336, size: 32, offset: 224)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1600, file: !142, line: 1946, baseType: !1606, size: 32, offset: 256)
!1606 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !142, line: 1942, size: 32, elements: !1607)
!1607 = !{!1608, !1609, !1610}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1606, file: !142, line: 1943, baseType: !354, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1606, file: !142, line: 1944, baseType: !361, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1606, file: !142, line: 1945, baseType: !141, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1600, file: !142, line: 1950, baseType: !716, size: 64, offset: 320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1600, file: !142, line: 1951, baseType: !716, size: 64, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1600, file: !142, line: 1953, baseType: !1245, size: 64, offset: 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !849, file: !142, line: 3404, baseType: !1615, size: 1664)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !142, line: 3337, size: 1664, elements: !1616)
!1616 = !{!1617, !1618}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1615, file: !142, line: 3338, baseType: !885, size: 192)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1615, file: !142, line: 3341, baseType: !1619, size: 1472, offset: 192)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1620, line: 410, size: 1472, elements: !1621)
!1620 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1619, file: !1620, line: 412, baseType: !654, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1619, file: !1620, line: 413, baseType: !654, size: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1619, file: !1620, line: 414, baseType: !654, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1619, file: !1620, line: 415, baseType: !654, size: 32, offset: 96)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1619, file: !1620, line: 416, baseType: !654, size: 32, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1619, file: !1620, line: 417, baseType: !654, size: 32, offset: 160)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1619, file: !1620, line: 418, baseType: !653, size: 8, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1619, file: !1620, line: 419, baseType: !653, size: 8, offset: 200)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1619, file: !1620, line: 420, baseType: !1631, size: 8, offset: 208)
!1631 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1619, file: !1620, line: 421, baseType: !1631, size: 8, offset: 216)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1619, file: !1620, line: 422, baseType: !1631, size: 8, offset: 224)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1619, file: !1620, line: 423, baseType: !1631, size: 8, offset: 232)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1619, file: !1620, line: 424, baseType: !1631, size: 8, offset: 240)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1619, file: !1620, line: 425, baseType: !1631, size: 8, offset: 248)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1619, file: !1620, line: 426, baseType: !1631, size: 8, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1619, file: !1620, line: 427, baseType: !1631, size: 8, offset: 264)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1619, file: !1620, line: 428, baseType: !1631, size: 8, offset: 272)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1619, file: !1620, line: 429, baseType: !1631, size: 8, offset: 280)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1619, file: !1620, line: 430, baseType: !1631, size: 8, offset: 288)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1619, file: !1620, line: 431, baseType: !1631, size: 8, offset: 296)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1619, file: !1620, line: 432, baseType: !1631, size: 8, offset: 304)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1619, file: !1620, line: 433, baseType: !1631, size: 8, offset: 312)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1619, file: !1620, line: 434, baseType: !1631, size: 8, offset: 320)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1619, file: !1620, line: 435, baseType: !1631, size: 8, offset: 328)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1619, file: !1620, line: 436, baseType: !1631, size: 8, offset: 336)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1619, file: !1620, line: 437, baseType: !1631, size: 8, offset: 344)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1619, file: !1620, line: 438, baseType: !1631, size: 8, offset: 352)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1619, file: !1620, line: 439, baseType: !1631, size: 8, offset: 360)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1619, file: !1620, line: 440, baseType: !1631, size: 8, offset: 368)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1619, file: !1620, line: 441, baseType: !1631, size: 8, offset: 376)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1619, file: !1620, line: 442, baseType: !1631, size: 8, offset: 384)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1619, file: !1620, line: 443, baseType: !1631, size: 8, offset: 392)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1619, file: !1620, line: 444, baseType: !1631, size: 8, offset: 400)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1619, file: !1620, line: 445, baseType: !1631, size: 8, offset: 408)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1619, file: !1620, line: 446, baseType: !1631, size: 8, offset: 416)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1619, file: !1620, line: 447, baseType: !1631, size: 8, offset: 424)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1619, file: !1620, line: 448, baseType: !1631, size: 8, offset: 432)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1619, file: !1620, line: 449, baseType: !1631, size: 8, offset: 440)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1619, file: !1620, line: 450, baseType: !1631, size: 8, offset: 448)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1619, file: !1620, line: 451, baseType: !1631, size: 8, offset: 456)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1619, file: !1620, line: 452, baseType: !1631, size: 8, offset: 464)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1619, file: !1620, line: 453, baseType: !1631, size: 8, offset: 472)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1619, file: !1620, line: 454, baseType: !1631, size: 8, offset: 480)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1619, file: !1620, line: 455, baseType: !1631, size: 8, offset: 488)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1619, file: !1620, line: 456, baseType: !1631, size: 8, offset: 496)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1619, file: !1620, line: 457, baseType: !1631, size: 8, offset: 504)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1619, file: !1620, line: 458, baseType: !1631, size: 8, offset: 512)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1619, file: !1620, line: 459, baseType: !1631, size: 8, offset: 520)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1619, file: !1620, line: 460, baseType: !1631, size: 8, offset: 528)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1619, file: !1620, line: 461, baseType: !1631, size: 8, offset: 536)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1619, file: !1620, line: 462, baseType: !1631, size: 8, offset: 544)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1619, file: !1620, line: 463, baseType: !1631, size: 8, offset: 552)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1619, file: !1620, line: 464, baseType: !1631, size: 8, offset: 560)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1619, file: !1620, line: 465, baseType: !1631, size: 8, offset: 568)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1619, file: !1620, line: 466, baseType: !1631, size: 8, offset: 576)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1619, file: !1620, line: 467, baseType: !1631, size: 8, offset: 584)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1619, file: !1620, line: 468, baseType: !1631, size: 8, offset: 592)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1619, file: !1620, line: 469, baseType: !1631, size: 8, offset: 600)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1619, file: !1620, line: 470, baseType: !1631, size: 8, offset: 608)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1619, file: !1620, line: 471, baseType: !1631, size: 8, offset: 616)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1619, file: !1620, line: 472, baseType: !1631, size: 8, offset: 624)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1619, file: !1620, line: 473, baseType: !1631, size: 8, offset: 632)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1619, file: !1620, line: 474, baseType: !1631, size: 8, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1619, file: !1620, line: 475, baseType: !1631, size: 8, offset: 648)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1619, file: !1620, line: 476, baseType: !1631, size: 8, offset: 656)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1619, file: !1620, line: 477, baseType: !1631, size: 8, offset: 664)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1619, file: !1620, line: 478, baseType: !1631, size: 8, offset: 672)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1619, file: !1620, line: 479, baseType: !1631, size: 8, offset: 680)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1619, file: !1620, line: 480, baseType: !1631, size: 8, offset: 688)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1619, file: !1620, line: 481, baseType: !1631, size: 8, offset: 696)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1619, file: !1620, line: 482, baseType: !1631, size: 8, offset: 704)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1619, file: !1620, line: 483, baseType: !1631, size: 8, offset: 712)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1619, file: !1620, line: 484, baseType: !1631, size: 8, offset: 720)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1619, file: !1620, line: 485, baseType: !1631, size: 8, offset: 728)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1619, file: !1620, line: 486, baseType: !1631, size: 8, offset: 736)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1619, file: !1620, line: 487, baseType: !1631, size: 8, offset: 744)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1619, file: !1620, line: 488, baseType: !1631, size: 8, offset: 752)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1619, file: !1620, line: 489, baseType: !1631, size: 8, offset: 760)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1619, file: !1620, line: 490, baseType: !1631, size: 8, offset: 768)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1619, file: !1620, line: 491, baseType: !1631, size: 8, offset: 776)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1619, file: !1620, line: 492, baseType: !1631, size: 8, offset: 784)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1619, file: !1620, line: 493, baseType: !1631, size: 8, offset: 792)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1619, file: !1620, line: 494, baseType: !1631, size: 8, offset: 800)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1619, file: !1620, line: 495, baseType: !1631, size: 8, offset: 808)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1619, file: !1620, line: 496, baseType: !1631, size: 8, offset: 816)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1619, file: !1620, line: 497, baseType: !1631, size: 8, offset: 824)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1619, file: !1620, line: 498, baseType: !1631, size: 8, offset: 832)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1619, file: !1620, line: 499, baseType: !1631, size: 8, offset: 840)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1619, file: !1620, line: 500, baseType: !1631, size: 8, offset: 848)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1619, file: !1620, line: 501, baseType: !1631, size: 8, offset: 856)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1619, file: !1620, line: 502, baseType: !1631, size: 8, offset: 864)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1619, file: !1620, line: 503, baseType: !1631, size: 8, offset: 872)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1619, file: !1620, line: 504, baseType: !1631, size: 8, offset: 880)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1619, file: !1620, line: 505, baseType: !1631, size: 8, offset: 888)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1619, file: !1620, line: 506, baseType: !1631, size: 8, offset: 896)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1619, file: !1620, line: 507, baseType: !1631, size: 8, offset: 904)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1619, file: !1620, line: 508, baseType: !1631, size: 8, offset: 912)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1619, file: !1620, line: 509, baseType: !1631, size: 8, offset: 920)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1619, file: !1620, line: 510, baseType: !1631, size: 8, offset: 928)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1619, file: !1620, line: 511, baseType: !1631, size: 8, offset: 936)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1619, file: !1620, line: 512, baseType: !1631, size: 8, offset: 944)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1619, file: !1620, line: 513, baseType: !1631, size: 8, offset: 952)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1619, file: !1620, line: 514, baseType: !1631, size: 8, offset: 960)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1619, file: !1620, line: 515, baseType: !1631, size: 8, offset: 968)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1619, file: !1620, line: 516, baseType: !1631, size: 8, offset: 976)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1619, file: !1620, line: 517, baseType: !1631, size: 8, offset: 984)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1619, file: !1620, line: 518, baseType: !1631, size: 8, offset: 992)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1619, file: !1620, line: 519, baseType: !1631, size: 8, offset: 1000)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1619, file: !1620, line: 520, baseType: !1631, size: 8, offset: 1008)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1619, file: !1620, line: 521, baseType: !1631, size: 8, offset: 1016)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1619, file: !1620, line: 522, baseType: !1631, size: 8, offset: 1024)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1619, file: !1620, line: 523, baseType: !1631, size: 8, offset: 1032)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1619, file: !1620, line: 524, baseType: !1631, size: 8, offset: 1040)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1619, file: !1620, line: 525, baseType: !1631, size: 8, offset: 1048)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1619, file: !1620, line: 526, baseType: !1631, size: 8, offset: 1056)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1619, file: !1620, line: 527, baseType: !1631, size: 8, offset: 1064)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1619, file: !1620, line: 528, baseType: !1631, size: 8, offset: 1072)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1619, file: !1620, line: 529, baseType: !1631, size: 8, offset: 1080)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1619, file: !1620, line: 530, baseType: !1631, size: 8, offset: 1088)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1619, file: !1620, line: 531, baseType: !1631, size: 8, offset: 1096)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1619, file: !1620, line: 532, baseType: !1631, size: 8, offset: 1104)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1619, file: !1620, line: 533, baseType: !1631, size: 8, offset: 1112)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1619, file: !1620, line: 534, baseType: !1631, size: 8, offset: 1120)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1619, file: !1620, line: 535, baseType: !1631, size: 8, offset: 1128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1619, file: !1620, line: 536, baseType: !1631, size: 8, offset: 1136)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1619, file: !1620, line: 537, baseType: !1631, size: 8, offset: 1144)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1619, file: !1620, line: 538, baseType: !1631, size: 8, offset: 1152)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1619, file: !1620, line: 539, baseType: !1631, size: 8, offset: 1160)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1619, file: !1620, line: 540, baseType: !1631, size: 8, offset: 1168)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1619, file: !1620, line: 541, baseType: !1631, size: 8, offset: 1176)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1619, file: !1620, line: 542, baseType: !1631, size: 8, offset: 1184)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1619, file: !1620, line: 543, baseType: !1631, size: 8, offset: 1192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1619, file: !1620, line: 544, baseType: !1631, size: 8, offset: 1200)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1619, file: !1620, line: 545, baseType: !1631, size: 8, offset: 1208)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1619, file: !1620, line: 546, baseType: !1631, size: 8, offset: 1216)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1619, file: !1620, line: 547, baseType: !1631, size: 8, offset: 1224)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1619, file: !1620, line: 548, baseType: !1631, size: 8, offset: 1232)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1619, file: !1620, line: 549, baseType: !1631, size: 8, offset: 1240)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1619, file: !1620, line: 550, baseType: !1631, size: 8, offset: 1248)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1619, file: !1620, line: 551, baseType: !1631, size: 8, offset: 1256)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1619, file: !1620, line: 552, baseType: !1631, size: 8, offset: 1264)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1619, file: !1620, line: 553, baseType: !1631, size: 8, offset: 1272)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1619, file: !1620, line: 554, baseType: !1631, size: 8, offset: 1280)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1619, file: !1620, line: 555, baseType: !1631, size: 8, offset: 1288)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1619, file: !1620, line: 556, baseType: !1631, size: 8, offset: 1296)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1619, file: !1620, line: 557, baseType: !1631, size: 8, offset: 1304)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1619, file: !1620, line: 558, baseType: !1631, size: 8, offset: 1312)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1619, file: !1620, line: 559, baseType: !1631, size: 8, offset: 1320)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1619, file: !1620, line: 560, baseType: !1631, size: 8, offset: 1328)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1619, file: !1620, line: 561, baseType: !1631, size: 8, offset: 1336)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1619, file: !1620, line: 562, baseType: !1631, size: 8, offset: 1344)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1619, file: !1620, line: 563, baseType: !1631, size: 8, offset: 1352)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1619, file: !1620, line: 564, baseType: !1631, size: 8, offset: 1360)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1619, file: !1620, line: 565, baseType: !1631, size: 8, offset: 1368)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1619, file: !1620, line: 566, baseType: !1631, size: 8, offset: 1376)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1619, file: !1620, line: 567, baseType: !1631, size: 8, offset: 1384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1619, file: !1620, line: 568, baseType: !1631, size: 8, offset: 1392)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1619, file: !1620, line: 569, baseType: !1631, size: 8, offset: 1400)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1619, file: !1620, line: 570, baseType: !1631, size: 8, offset: 1408)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1619, file: !1620, line: 571, baseType: !1631, size: 8, offset: 1416)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1619, file: !1620, line: 572, baseType: !1631, size: 8, offset: 1424)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1619, file: !1620, line: 573, baseType: !1631, size: 8, offset: 1432)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1619, file: !1620, line: 574, baseType: !1631, size: 8, offset: 1440)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !849, file: !142, line: 3405, baseType: !1787, size: 384)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !142, line: 3352, size: 384, elements: !1788)
!1788 = !{!1789, !1790}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1787, file: !142, line: 3353, baseType: !885, size: 192)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1787, file: !142, line: 3356, baseType: !1791, size: 192, offset: 192)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1620, line: 578, size: 192, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1791, file: !1620, line: 580, baseType: !654, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1791, file: !1620, line: 581, baseType: !654, size: 32, offset: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1791, file: !1620, line: 582, baseType: !654, size: 32, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1791, file: !1620, line: 583, baseType: !654, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1791, file: !1620, line: 584, baseType: !653, size: 8, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1791, file: !1620, line: 585, baseType: !653, size: 8, offset: 136)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1791, file: !1620, line: 586, baseType: !653, size: 8, offset: 144)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1791, file: !1620, line: 587, baseType: !653, size: 8, offset: 152)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1791, file: !1620, line: 588, baseType: !653, size: 8, offset: 160)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1791, file: !1620, line: 589, baseType: !653, size: 8, offset: 168)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1791, file: !1620, line: 590, baseType: !653, size: 8, offset: 176)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !752, file: !734, line: 178, baseType: !690, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !752, file: !734, line: 179, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !734, line: 150, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !734, line: 142, size: 320, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814, !1815}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1808, file: !734, line: 144, baseType: !847, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1808, file: !734, line: 145, baseType: !731, size: 64, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1808, file: !734, line: 146, baseType: !731, size: 64, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1808, file: !734, line: 147, baseType: !1479, size: 32, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1808, file: !734, line: 148, baseType: !7, size: 32, offset: 224)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1808, file: !734, line: 149, baseType: !653, size: 8, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !752, file: !734, line: 180, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !734, line: 162, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !734, line: 159, size: 128, elements: !1820)
!1820 = !{!1821, !1822}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1819, file: !734, line: 160, baseType: !847, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1819, file: !734, line: 161, baseType: !818, size: 64, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !752, file: !734, line: 181, baseType: !1824, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !734, line: 181, flags: DIFlagFwdDecl)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !747, file: !734, line: 317, baseType: !1827, size: 64)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 64, elements: !766)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !747, file: !734, line: 318, baseType: !1829, size: 320)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !734, line: 188, size: 320, elements: !1830)
!1830 = !{!1831, !1833, !1856}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1829, file: !734, line: 190, baseType: !1832, size: 192)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !751, size: 192, elements: !918)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1829, file: !734, line: 193, baseType: !1834, size: 64, offset: 192)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !734, line: 206, size: 320, elements: !1836)
!1836 = !{!1837, !1841, !1842, !1843, !1855}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1835, file: !734, line: 208, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !666, line: 62, baseType: !1840)
!1840 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !666, line: 61, flags: DIFlagFwdDecl)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1835, file: !734, line: 211, baseType: !7, size: 32, offset: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1835, file: !734, line: 214, baseType: !818, size: 64, offset: 128)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1835, file: !734, line: 224, baseType: !1844, size: 64, offset: 192)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !734, line: 202, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !734, line: 202, size: 128, elements: !1847)
!1847 = !{!1848}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1846, file: !734, line: 202, baseType: !1849, size: 128)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !734, line: 200, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !734, line: 200, size: 128, elements: !1851)
!1851 = !{!1852, !1853, !1854}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1850, file: !734, line: 200, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1850, file: !734, line: 200, baseType: !7, size: 32, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1850, file: !734, line: 200, baseType: !765, size: 64, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1835, file: !734, line: 234, baseType: !1844, size: 64, offset: 256)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1829, file: !734, line: 197, baseType: !818, size: 64, offset: 256)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !747, file: !734, line: 319, baseType: !907, size: 256)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !747, file: !734, line: 320, baseType: !926, size: 192)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !708, file: !369, line: 134, baseType: !658, size: 64, offset: 192)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !708, file: !369, line: 137, baseType: !847, size: 64, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !708, file: !369, line: 138, baseType: !684, size: 32, offset: 320)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !708, file: !369, line: 142, baseType: !7, size: 32, offset: 352)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !708, file: !369, line: 144, baseType: !654, size: 32, offset: 384)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !708, file: !369, line: 145, baseType: !654, size: 32, offset: 416)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !708, file: !369, line: 146, baseType: !1866, size: 64, offset: 448)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !369, line: 119, baseType: !818)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !691, file: !369, line: 220, baseType: !694, size: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !691, file: !369, line: 223, baseType: !658, size: 64, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !691, file: !369, line: 226, baseType: !1870, size: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !369, line: 185, flags: DIFlagFwdDecl)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !691, file: !369, line: 229, baseType: !1873, size: 128, offset: 256)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 128, elements: !802)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !369, line: 229, flags: DIFlagFwdDecl)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !691, file: !369, line: 232, baseType: !690, size: 64, offset: 384)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !691, file: !369, line: 233, baseType: !690, size: 64, offset: 448)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !691, file: !369, line: 238, baseType: !1879, size: 64, offset: 512)
!1879 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !369, line: 235, size: 64, elements: !1880)
!1880 = !{!1881, !1887}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1879, file: !369, line: 236, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !369, line: 273, size: 128, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1883, file: !369, line: 275, baseType: !716, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1883, file: !369, line: 278, baseType: !716, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1879, file: !369, line: 237, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !369, line: 259, size: 320, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1894, !1895}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1889, file: !369, line: 261, baseType: !731, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1889, file: !369, line: 262, baseType: !731, size: 64, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1889, file: !369, line: 266, baseType: !731, size: 64, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1889, file: !369, line: 267, baseType: !731, size: 64, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1889, file: !369, line: 270, baseType: !654, size: 32, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !691, file: !369, line: 241, baseType: !1866, size: 64, offset: 576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !691, file: !369, line: 244, baseType: !654, size: 32, offset: 640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !691, file: !369, line: 247, baseType: !654, size: 32, offset: 672)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !691, file: !369, line: 250, baseType: !654, size: 32, offset: 704)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !691, file: !369, line: 253, baseType: !654, size: 32, offset: 736)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !691, file: !369, line: 256, baseType: !654, size: 32, offset: 768)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !671, file: !568, line: 327, baseType: !847, size: 64, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !668, file: !568, line: 739, baseType: !1904, size: 448)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !568, line: 350, size: 448, elements: !1905)
!1905 = !{!1906, !1912}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1904, file: !568, line: 353, baseType: !1907, size: 384)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !568, line: 333, size: 384, elements: !1908)
!1908 = !{!1909, !1910, !1911}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1907, file: !568, line: 336, baseType: !671, size: 256)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1907, file: !568, line: 343, baseType: !1350, size: 64, offset: 256)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1907, file: !568, line: 344, baseType: !1357, size: 64, offset: 320)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1904, file: !568, line: 359, baseType: !1245, size: 64, offset: 384)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !668, file: !568, line: 740, baseType: !1914, size: 512)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !568, line: 365, size: 512, elements: !1915)
!1915 = !{!1916, !1917, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1914, file: !568, line: 368, baseType: !1907, size: 384)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1914, file: !568, line: 373, baseType: !847, size: 64, offset: 384)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1914, file: !568, line: 374, baseType: !847, size: 64, offset: 448)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !668, file: !568, line: 741, baseType: !1920, size: 576)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !568, line: 380, size: 576, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1920, file: !568, line: 383, baseType: !1914, size: 512)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1920, file: !568, line: 389, baseType: !1245, size: 64, offset: 512)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !668, file: !568, line: 742, baseType: !1925, size: 320)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !568, line: 395, size: 320, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1925, file: !568, line: 397, baseType: !671, size: 256)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1925, file: !568, line: 400, baseType: !716, size: 64, offset: 256)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !668, file: !568, line: 743, baseType: !1930, size: 448)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !568, line: 406, size: 448, elements: !1931)
!1931 = !{!1932, !1933, !1934, !1935}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1930, file: !568, line: 408, baseType: !671, size: 256)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1930, file: !568, line: 412, baseType: !847, size: 64, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1930, file: !568, line: 420, baseType: !847, size: 64, offset: 320)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1930, file: !568, line: 423, baseType: !716, size: 64, offset: 384)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !668, file: !568, line: 744, baseType: !1937, size: 384)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !568, line: 429, size: 384, elements: !1938)
!1938 = !{!1939, !1940, !1941}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1937, file: !568, line: 431, baseType: !671, size: 256)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1937, file: !568, line: 434, baseType: !847, size: 64, offset: 256)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1937, file: !568, line: 437, baseType: !716, size: 64, offset: 320)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !668, file: !568, line: 745, baseType: !1943, size: 384)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !568, line: 443, size: 384, elements: !1944)
!1944 = !{!1945, !1946, !1947}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1943, file: !568, line: 445, baseType: !671, size: 256)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1943, file: !568, line: 449, baseType: !847, size: 64, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1943, file: !568, line: 453, baseType: !716, size: 64, offset: 320)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !668, file: !568, line: 746, baseType: !1949, size: 320)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !568, line: 459, size: 320, elements: !1950)
!1950 = !{!1951, !1952}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1949, file: !568, line: 461, baseType: !671, size: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1949, file: !568, line: 464, baseType: !847, size: 64, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !668, file: !568, line: 747, baseType: !1954, size: 768)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !568, line: 469, size: 768, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1960}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1954, file: !568, line: 471, baseType: !671, size: 256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1954, file: !568, line: 474, baseType: !7, size: 32, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1954, file: !568, line: 475, baseType: !7, size: 32, offset: 288)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1954, file: !568, line: 478, baseType: !847, size: 64, offset: 320)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1954, file: !568, line: 481, baseType: !1961, size: 384, offset: 384)
!1961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1962, size: 384, elements: !766)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !142, line: 1917, size: 384, elements: !1963)
!1963 = !{!1964, !1965, !1966}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1962, file: !142, line: 1920, baseType: !1362, size: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1962, file: !142, line: 1921, baseType: !847, size: 64, offset: 256)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1962, file: !142, line: 1922, baseType: !684, size: 32, offset: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !668, file: !568, line: 748, baseType: !1968, size: 320)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !568, line: 487, size: 320, elements: !1969)
!1969 = !{!1970, !1971}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1968, file: !568, line: 490, baseType: !671, size: 256)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1968, file: !568, line: 494, baseType: !654, size: 32, offset: 256)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !668, file: !568, line: 749, baseType: !1973, size: 384)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !568, line: 500, size: 384, elements: !1974)
!1974 = !{!1975, !1976, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1973, file: !568, line: 502, baseType: !671, size: 256)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1973, file: !568, line: 506, baseType: !716, size: 64, offset: 256)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1973, file: !568, line: 510, baseType: !716, size: 64, offset: 320)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !668, file: !568, line: 750, baseType: !1979, size: 320)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !568, line: 529, size: 320, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1979, file: !568, line: 531, baseType: !671, size: 256)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1979, file: !568, line: 540, baseType: !716, size: 64, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !668, file: !568, line: 751, baseType: !1984, size: 704)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !568, line: 546, size: 704, elements: !1985)
!1985 = !{!1986, !1987, !1988, !1989, !1990, !1991, !1992}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1984, file: !568, line: 549, baseType: !1914, size: 512)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1984, file: !568, line: 553, baseType: !659, size: 64, offset: 512)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1984, file: !568, line: 557, baseType: !653, size: 8, offset: 576)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1984, file: !568, line: 558, baseType: !653, size: 8, offset: 584)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1984, file: !568, line: 559, baseType: !653, size: 8, offset: 592)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1984, file: !568, line: 560, baseType: !653, size: 8, offset: 600)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1984, file: !568, line: 566, baseType: !1245, size: 64, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !668, file: !568, line: 752, baseType: !1994, size: 384)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !568, line: 571, size: 384, elements: !1995)
!1995 = !{!1996, !1997}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1994, file: !568, line: 573, baseType: !1925, size: 320)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1994, file: !568, line: 577, baseType: !847, size: 64, offset: 320)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !668, file: !568, line: 753, baseType: !1999, size: 576)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !568, line: 600, size: 576, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004, !2013}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1999, file: !568, line: 602, baseType: !1925, size: 320)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1999, file: !568, line: 605, baseType: !847, size: 64, offset: 320)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1999, file: !568, line: 609, baseType: !1208, size: 64, offset: 384)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1999, file: !568, line: 612, baseType: !2005, size: 64, offset: 448)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !568, line: 581, size: 320, elements: !2007)
!2007 = !{!2008, !2009, !2010, !2011, !2012}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2006, file: !568, line: 583, baseType: !141, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2006, file: !568, line: 586, baseType: !847, size: 64, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2006, file: !568, line: 589, baseType: !847, size: 64, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !2006, file: !568, line: 592, baseType: !847, size: 64, offset: 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2006, file: !568, line: 595, baseType: !847, size: 64, offset: 256)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1999, file: !568, line: 616, baseType: !716, size: 64, offset: 512)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !668, file: !568, line: 754, baseType: !2015, size: 512)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !568, line: 622, size: 512, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2020}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2015, file: !568, line: 624, baseType: !1925, size: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2015, file: !568, line: 628, baseType: !847, size: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !2015, file: !568, line: 632, baseType: !847, size: 64, offset: 384)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !2015, file: !568, line: 636, baseType: !847, size: 64, offset: 448)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !668, file: !568, line: 755, baseType: !2022, size: 704)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !568, line: 642, size: 704, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2022, file: !568, line: 644, baseType: !2015, size: 512)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !2022, file: !568, line: 648, baseType: !847, size: 64, offset: 512)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2022, file: !568, line: 652, baseType: !847, size: 64, offset: 576)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !2022, file: !568, line: 653, baseType: !847, size: 64, offset: 640)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !668, file: !568, line: 756, baseType: !2029, size: 448)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !568, line: 663, size: 448, elements: !2030)
!2030 = !{!2031, !2032, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2029, file: !568, line: 665, baseType: !1925, size: 320)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2029, file: !568, line: 668, baseType: !847, size: 64, offset: 320)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2029, file: !568, line: 673, baseType: !847, size: 64, offset: 384)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !668, file: !568, line: 757, baseType: !2035, size: 384)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !568, line: 694, size: 384, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !2035, file: !568, line: 696, baseType: !1925, size: 320)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !2035, file: !568, line: 699, baseType: !847, size: 64, offset: 320)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !668, file: !568, line: 758, baseType: !2040, size: 384)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !568, line: 681, size: 384, elements: !2041)
!2041 = !{!2042, !2043, !2044}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2040, file: !568, line: 683, baseType: !671, size: 256)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !2040, file: !568, line: 686, baseType: !847, size: 64, offset: 256)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !2040, file: !568, line: 689, baseType: !847, size: 64, offset: 320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !668, file: !568, line: 759, baseType: !2046, size: 384)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !568, line: 707, size: 384, elements: !2047)
!2047 = !{!2048, !2049, !2050}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2046, file: !568, line: 709, baseType: !671, size: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !2046, file: !568, line: 712, baseType: !847, size: 64, offset: 256)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !2046, file: !568, line: 712, baseType: !847, size: 64, offset: 320)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !668, file: !568, line: 760, baseType: !2052, size: 320)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !568, line: 718, size: 320, elements: !2053)
!2053 = !{!2054, !2055}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2052, file: !568, line: 720, baseType: !671, size: 256)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2052, file: !568, line: 723, baseType: !847, size: 64, offset: 256)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "lp_nr", scope: !662, file: !6, line: 346, baseType: !654, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "finally_tree_node", file: !3, line: 211, size: 128, elements: !2063)
!2063 = !{!2064, !2071}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2062, file: !3, line: 217, baseType: !2065, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "treemple", file: !3, line: 46, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !3, line: 46, size: 64, elements: !2067)
!2067 = !{!2068, !2069, !2070}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "tp", scope: !2066, file: !3, line: 46, baseType: !1355, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !2066, file: !3, line: 46, baseType: !847, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2066, file: !3, line: 46, baseType: !665, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2062, file: !3, line: 218, baseType: !665, size: 64, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !142, line: 184, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !142, line: 184, size: 128, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2074, file: !142, line: 184, baseType: !1239, size: 128)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "goto_queue_node", file: !3, line: 340, size: 256, elements: !2079)
!2079 = !{!2080, !2081, !2082, !2083, !2084}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2078, file: !3, line: 342, baseType: !2065, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "repl_stmt", scope: !2078, file: !3, line: 343, baseType: !716, size: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "cont_stmt", scope: !2078, file: !3, line: 344, baseType: !665, size: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2078, file: !3, line: 345, baseType: !654, size: 32, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "is_label", scope: !2078, file: !3, line: 348, baseType: !654, size: 32, offset: 224)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "labels_s", scope: !2087, file: !3, line: 1203, size: 128, elements: !2138)
!2087 = distinct !DISubprogram(name: "lower_try_finally_copy", scope: !3, file: !3, line: 1164, type: !2088, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2113)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !2090, !2096}
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "leh_state", file: !3, line: 353, size: 192, elements: !2092)
!2092 = !{!2093, !2094, !2095}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "cur_region", scope: !2091, file: !3, line: 358, baseType: !1106, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ehp_region", scope: !2091, file: !3, line: 363, baseType: !1106, size: 64, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !2091, file: !3, line: 368, baseType: !2096, size: 64, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "leh_tf_state", file: !3, line: 371, size: 768, elements: !2098)
!2098 = !{!2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "try_finally_expr", scope: !2097, file: !3, line: 377, baseType: !665, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "top_p", scope: !2097, file: !3, line: 378, baseType: !665, size: 64, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "top_p_seq", scope: !2097, file: !3, line: 382, baseType: !716, size: 64, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !2097, file: !3, line: 385, baseType: !2090, size: 64, offset: 192)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2097, file: !3, line: 388, baseType: !1106, size: 64, offset: 256)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "goto_queue", scope: !2097, file: !3, line: 391, baseType: !2077, size: 64, offset: 320)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "goto_queue_size", scope: !2097, file: !3, line: 392, baseType: !1208, size: 64, offset: 384)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "goto_queue_active", scope: !2097, file: !3, line: 393, baseType: !1208, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "goto_queue_map", scope: !2097, file: !3, line: 396, baseType: !1331, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "dest_array", scope: !2097, file: !3, line: 399, baseType: !2072, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "fallthru_label", scope: !2097, file: !3, line: 404, baseType: !847, size: 64, offset: 640)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "may_fallthru", scope: !2097, file: !3, line: 408, baseType: !653, size: 8, offset: 704)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "may_return", scope: !2097, file: !3, line: 411, baseType: !653, size: 8, offset: 712)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "may_throw", scope: !2097, file: !3, line: 415, baseType: !653, size: 8, offset: 720)
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2125, !2126, !2127, !2128, !2129, !2130, !2134}
!2114 = !DILocalVariable(name: "state", arg: 1, scope: !2087, file: !3, line: 1164, type: !2090)
!2115 = !DILocalVariable(name: "tf", arg: 2, scope: !2087, file: !3, line: 1164, type: !2096)
!2116 = !DILocalVariable(name: "finally", scope: !2087, file: !3, line: 1166, type: !716)
!2117 = !DILocalVariable(name: "new_stmt", scope: !2087, file: !3, line: 1167, type: !716)
!2118 = !DILocalVariable(name: "seq", scope: !2087, file: !3, line: 1168, type: !716)
!2119 = !DILocalVariable(name: "x", scope: !2087, file: !3, line: 1169, type: !665)
!2120 = !DILocalVariable(name: "tmp", scope: !2087, file: !3, line: 1170, type: !847)
!2121 = !DILocalVariable(name: "tf_loc", scope: !2087, file: !3, line: 1171, type: !684)
!2122 = !DILocalVariable(name: "q", scope: !2123, file: !3, line: 1200, type: !2077)
!2123 = distinct !DILexicalBlock(scope: !2124, file: !3, line: 1199, column: 5)
!2124 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 1198, column: 7)
!2125 = !DILocalVariable(name: "qe", scope: !2123, file: !3, line: 1200, type: !2077)
!2126 = !DILocalVariable(name: "return_val", scope: !2123, file: !3, line: 1201, type: !847)
!2127 = !DILocalVariable(name: "return_index", scope: !2123, file: !3, line: 1202, type: !654)
!2128 = !DILocalVariable(name: "index", scope: !2123, file: !3, line: 1202, type: !654)
!2129 = !DILocalVariable(name: "labels", scope: !2123, file: !3, line: 1207, type: !2085)
!2130 = !DILocalVariable(name: "lab", scope: !2131, file: !3, line: 1224, type: !847)
!2131 = distinct !DILexicalBlock(scope: !2132, file: !3, line: 1223, column: 2)
!2132 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 1222, column: 7)
!2133 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 1222, column: 7)
!2134 = !DILocalVariable(name: "lab", scope: !2135, file: !3, line: 1251, type: !847)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 1250, column: 2)
!2136 = distinct !DILexicalBlock(scope: !2137, file: !3, line: 1249, column: 7)
!2137 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 1249, column: 7)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2086, file: !3, line: 1205, baseType: !2077, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2086, file: !3, line: 1206, baseType: !847, size: 64, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !645, line: 30, baseType: !2143)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !142, line: 1893, baseType: !1362)
!2145 = !{!2146, !2174, !2176, !2178, !2180, !2182, !2183, !2185, !2187}
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "pass_lower_eh", scope: !2, file: !3, line: 2027, type: !2148, isLocal: false, isDefinition: true)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_opt_pass", file: !385, line: 156, size: 640, elements: !2149)
!2149 = !{!2150}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2148, file: !385, line: 158, baseType: !2151, size: 640)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !385, line: 114, size: 640, elements: !2152)
!2152 = !{!2153, !2154, !2155, !2159, !2163, !2165, !2166, !2167, !2169, !2170, !2171, !2172, !2173}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2151, file: !385, line: 117, baseType: !384, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2151, file: !385, line: 121, baseType: !659, size: 64, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2151, file: !385, line: 125, baseType: !2156, size: 64, offset: 128)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!653}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2151, file: !385, line: 130, baseType: !2160, size: 64, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{!7}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2151, file: !385, line: 133, baseType: !2164, size: 64, offset: 256)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2151, file: !385, line: 136, baseType: !2164, size: 64, offset: 320)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2151, file: !385, line: 139, baseType: !654, size: 32, offset: 384)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2151, file: !385, line: 143, baseType: !2168, size: 32, offset: 416)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !392, line: 80, baseType: !391)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2151, file: !385, line: 146, baseType: !7, size: 32, offset: 448)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2151, file: !385, line: 147, baseType: !7, size: 32, offset: 480)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2151, file: !385, line: 148, baseType: !7, size: 32, offset: 512)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2151, file: !385, line: 151, baseType: !7, size: 32, offset: 544)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2151, file: !385, line: 152, baseType: !7, size: 32, offset: 576)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "pass_refactor_eh", scope: !2, file: !3, line: 2834, type: !2148, isLocal: false, isDefinition: true)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "pass_lower_resx", scope: !2, file: !3, line: 3040, type: !2148, isLocal: false, isDefinition: true)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "pass_lower_eh_dispatch", scope: !2, file: !3, line: 3240, type: !2148, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "pass_cleanup_eh", scope: !2, file: !3, line: 3882, type: !2148, isLocal: false, isDefinition: true)
!2182 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "finally_tree", scope: !2, file: !3, line: 222, type: !1182, isLocal: true, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "eh_region_may_contain_throw_map", scope: !2, file: !3, line: 329, type: !1328, isLocal: true, isDefinition: true)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "eh_seq", scope: !2, file: !3, line: 325, type: !716, isLocal: true, isDefinition: true)
!2189 = !{i32 2, !"Dwarf Version", i32 4}
!2190 = !{i32 2, !"Debug Info Version", i32 3}
!2191 = !{i32 1, !"wchar_size", i32 4}
!2192 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2193 = distinct !DISubprogram(name: "vprintf", scope: !2194, file: !2194, line: 39, type: !2195, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2205)
!2194 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!654, !2197, !2198}
!2197 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !659)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2200)
!2200 = !{!2201, !2202, !2203, !2204}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2199, file: !3, baseType: !7, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2199, file: !3, baseType: !7, size: 32, offset: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2199, file: !3, baseType: !658, size: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2199, file: !3, baseType: !658, size: 64, offset: 128)
!2205 = !{!2206, !2207}
!2206 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2193, file: !2194, line: 39, type: !2197)
!2207 = !DILocalVariable(name: "__arg", arg: 2, scope: !2193, file: !2194, line: 39, type: !2198)
!2208 = !DILocation(line: 0, scope: !2193)
!2209 = !DILocation(line: 41, column: 20, scope: !2193)
!2210 = !DILocation(line: 41, column: 10, scope: !2193)
!2211 = !DILocation(line: 41, column: 3, scope: !2193)
!2212 = distinct !DISubprogram(name: "getchar", scope: !2194, file: !2194, line: 47, type: !2213, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!654}
!2215 = !{}
!2216 = !DILocation(line: 49, column: 16, scope: !2212)
!2217 = !DILocation(line: 49, column: 10, scope: !2212)
!2218 = !DILocation(line: 49, column: 3, scope: !2212)
!2219 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2194, file: !2194, line: 56, type: !2220, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2273)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{!654, !2222}
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2224, line: 7, baseType: !2225)
!2224 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2226, line: 49, size: 1728, elements: !2227)
!2226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2227 = !{!2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2243, !2245, !2246, !2247, !2250, !2252, !2253, !2254, !2257, !2259, !2262, !2265, !2266, !2267, !2268, !2269}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2225, file: !2226, line: 51, baseType: !654, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2225, file: !2226, line: 54, baseType: !656, size: 64, offset: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2225, file: !2226, line: 55, baseType: !656, size: 64, offset: 128)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2225, file: !2226, line: 56, baseType: !656, size: 64, offset: 192)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2225, file: !2226, line: 57, baseType: !656, size: 64, offset: 256)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2225, file: !2226, line: 58, baseType: !656, size: 64, offset: 320)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2225, file: !2226, line: 59, baseType: !656, size: 64, offset: 384)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2225, file: !2226, line: 60, baseType: !656, size: 64, offset: 448)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2225, file: !2226, line: 61, baseType: !656, size: 64, offset: 512)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2225, file: !2226, line: 64, baseType: !656, size: 64, offset: 576)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2225, file: !2226, line: 65, baseType: !656, size: 64, offset: 640)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2225, file: !2226, line: 66, baseType: !656, size: 64, offset: 704)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2225, file: !2226, line: 68, baseType: !2241, size: 64, offset: 768)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2226, line: 36, flags: DIFlagFwdDecl)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2225, file: !2226, line: 70, baseType: !2244, size: 64, offset: 832)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2225, file: !2226, line: 72, baseType: !654, size: 32, offset: 896)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2225, file: !2226, line: 73, baseType: !654, size: 32, offset: 928)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2225, file: !2226, line: 74, baseType: !2248, size: 64, offset: 960)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2249, line: 152, baseType: !818)
!2249 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2225, file: !2226, line: 77, baseType: !2251, size: 16, offset: 1024)
!2251 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2225, file: !2226, line: 78, baseType: !1631, size: 8, offset: 1040)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2225, file: !2226, line: 79, baseType: !942, size: 8, offset: 1048)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2225, file: !2226, line: 81, baseType: !2255, size: 64, offset: 1088)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2226, line: 43, baseType: null)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2225, file: !2226, line: 89, baseType: !2258, size: 64, offset: 1152)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2249, line: 153, baseType: !818)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2225, file: !2226, line: 91, baseType: !2260, size: 64, offset: 1216)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2226, line: 37, flags: DIFlagFwdDecl)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2225, file: !2226, line: 92, baseType: !2263, size: 64, offset: 1280)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2226, line: 38, flags: DIFlagFwdDecl)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2225, file: !2226, line: 93, baseType: !2244, size: 64, offset: 1344)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2225, file: !2226, line: 94, baseType: !658, size: 64, offset: 1408)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2225, file: !2226, line: 95, baseType: !1208, size: 64, offset: 1472)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2225, file: !2226, line: 96, baseType: !654, size: 32, offset: 1536)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2225, file: !2226, line: 98, baseType: !2270, size: 160, offset: 1568)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 160, elements: !2271)
!2271 = !{!2272}
!2272 = !DISubrange(count: 20)
!2273 = !{!2274}
!2274 = !DILocalVariable(name: "__fp", arg: 1, scope: !2219, file: !2194, line: 56, type: !2222)
!2275 = !DILocation(line: 0, scope: !2219)
!2276 = !DILocation(line: 58, column: 10, scope: !2219)
!2277 = !DILocation(line: 58, column: 3, scope: !2219)
!2278 = distinct !DISubprogram(name: "getc_unlocked", scope: !2194, file: !2194, line: 66, type: !2220, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2279 = !{!2280}
!2280 = !DILocalVariable(name: "__fp", arg: 1, scope: !2278, file: !2194, line: 66, type: !2222)
!2281 = !DILocation(line: 0, scope: !2278)
!2282 = !DILocation(line: 68, column: 10, scope: !2278)
!2283 = !DILocation(line: 68, column: 3, scope: !2278)
!2284 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2194, file: !2194, line: 73, type: !2213, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!2285 = !DILocation(line: 75, column: 10, scope: !2284)
!2286 = !DILocation(line: 75, column: 3, scope: !2284)
!2287 = distinct !DISubprogram(name: "putchar", scope: !2194, file: !2194, line: 82, type: !2288, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2290)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!654, !654}
!2290 = !{!2291}
!2291 = !DILocalVariable(name: "__c", arg: 1, scope: !2287, file: !2194, line: 82, type: !654)
!2292 = !DILocation(line: 0, scope: !2287)
!2293 = !DILocation(line: 84, column: 21, scope: !2287)
!2294 = !DILocation(line: 84, column: 10, scope: !2287)
!2295 = !DILocation(line: 84, column: 3, scope: !2287)
!2296 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2194, file: !2194, line: 91, type: !2297, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2299)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!654, !654, !2222}
!2299 = !{!2300, !2301}
!2300 = !DILocalVariable(name: "__c", arg: 1, scope: !2296, file: !2194, line: 91, type: !654)
!2301 = !DILocalVariable(name: "__stream", arg: 2, scope: !2296, file: !2194, line: 91, type: !2222)
!2302 = !DILocation(line: 0, scope: !2296)
!2303 = !DILocation(line: 93, column: 10, scope: !2296)
!2304 = !DILocation(line: 93, column: 3, scope: !2296)
!2305 = distinct !DISubprogram(name: "putc_unlocked", scope: !2194, file: !2194, line: 101, type: !2297, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2306)
!2306 = !{!2307, !2308}
!2307 = !DILocalVariable(name: "__c", arg: 1, scope: !2305, file: !2194, line: 101, type: !654)
!2308 = !DILocalVariable(name: "__stream", arg: 2, scope: !2305, file: !2194, line: 101, type: !2222)
!2309 = !DILocation(line: 0, scope: !2305)
!2310 = !DILocation(line: 103, column: 10, scope: !2305)
!2311 = !DILocation(line: 103, column: 3, scope: !2305)
!2312 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2194, file: !2194, line: 108, type: !2288, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2313)
!2313 = !{!2314}
!2314 = !DILocalVariable(name: "__c", arg: 1, scope: !2312, file: !2194, line: 108, type: !654)
!2315 = !DILocation(line: 0, scope: !2312)
!2316 = !DILocation(line: 110, column: 10, scope: !2312)
!2317 = !DILocation(line: 110, column: 3, scope: !2312)
!2318 = distinct !DISubprogram(name: "getline", scope: !2194, file: !2194, line: 118, type: !2319, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2323)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{!2321, !655, !2322, !2222}
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2249, line: 193, baseType: !818)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!2323 = !{!2324, !2325, !2326}
!2324 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2318, file: !2194, line: 118, type: !655)
!2325 = !DILocalVariable(name: "__n", arg: 2, scope: !2318, file: !2194, line: 118, type: !2322)
!2326 = !DILocalVariable(name: "__stream", arg: 3, scope: !2318, file: !2194, line: 118, type: !2222)
!2327 = !DILocation(line: 0, scope: !2318)
!2328 = !DILocation(line: 120, column: 10, scope: !2318)
!2329 = !DILocation(line: 120, column: 3, scope: !2318)
!2330 = distinct !DISubprogram(name: "feof_unlocked", scope: !2194, file: !2194, line: 128, type: !2220, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2331)
!2331 = !{!2332}
!2332 = !DILocalVariable(name: "__stream", arg: 1, scope: !2330, file: !2194, line: 128, type: !2222)
!2333 = !DILocation(line: 0, scope: !2330)
!2334 = !DILocation(line: 130, column: 10, scope: !2330)
!2335 = !DILocation(line: 130, column: 3, scope: !2330)
!2336 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2194, file: !2194, line: 135, type: !2220, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2337)
!2337 = !{!2338}
!2338 = !DILocalVariable(name: "__stream", arg: 1, scope: !2336, file: !2194, line: 135, type: !2222)
!2339 = !DILocation(line: 0, scope: !2336)
!2340 = !DILocation(line: 137, column: 10, scope: !2336)
!2341 = !DILocation(line: 137, column: 3, scope: !2336)
!2342 = distinct !DISubprogram(name: "tolower", scope: !2343, file: !2343, line: 207, type: !2288, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2344)
!2343 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2344 = !{!2345}
!2345 = !DILocalVariable(name: "__c", arg: 1, scope: !2342, file: !2343, line: 207, type: !654)
!2346 = !DILocation(line: 0, scope: !2342)
!2347 = !DILocation(line: 209, column: 22, scope: !2342)
!2348 = !DILocation(line: 209, column: 39, scope: !2342)
!2349 = !DILocation(line: 209, column: 38, scope: !2342)
!2350 = !DILocation(line: 209, column: 37, scope: !2342)
!2351 = !DILocation(line: 209, column: 10, scope: !2342)
!2352 = !DILocation(line: 209, column: 3, scope: !2342)
!2353 = distinct !DISubprogram(name: "toupper", scope: !2343, file: !2343, line: 213, type: !2288, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2354)
!2354 = !{!2355}
!2355 = !DILocalVariable(name: "__c", arg: 1, scope: !2353, file: !2343, line: 213, type: !654)
!2356 = !DILocation(line: 0, scope: !2353)
!2357 = !DILocation(line: 215, column: 22, scope: !2353)
!2358 = !DILocation(line: 215, column: 39, scope: !2353)
!2359 = !DILocation(line: 215, column: 38, scope: !2353)
!2360 = !DILocation(line: 215, column: 37, scope: !2353)
!2361 = !DILocation(line: 215, column: 10, scope: !2353)
!2362 = !DILocation(line: 215, column: 3, scope: !2353)
!2363 = distinct !DISubprogram(name: "atoi", scope: !2364, file: !2364, line: 361, type: !2365, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2367)
!2364 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!654, !659}
!2367 = !{!2368}
!2368 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2363, file: !2364, line: 361, type: !659)
!2369 = !DILocation(line: 0, scope: !2363)
!2370 = !DILocation(line: 363, column: 16, scope: !2363)
!2371 = !DILocation(line: 363, column: 10, scope: !2363)
!2372 = !DILocation(line: 363, column: 3, scope: !2363)
!2373 = distinct !DISubprogram(name: "atol", scope: !2364, file: !2364, line: 366, type: !2374, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2376)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!818, !659}
!2376 = !{!2377}
!2377 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2373, file: !2364, line: 366, type: !659)
!2378 = !DILocation(line: 0, scope: !2373)
!2379 = !DILocation(line: 368, column: 10, scope: !2373)
!2380 = !DILocation(line: 368, column: 3, scope: !2373)
!2381 = distinct !DISubprogram(name: "atoll", scope: !2364, file: !2364, line: 373, type: !2382, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2385)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!2384, !659}
!2384 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2385 = !{!2386}
!2386 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2381, file: !2364, line: 373, type: !659)
!2387 = !DILocation(line: 0, scope: !2381)
!2388 = !DILocation(line: 375, column: 10, scope: !2381)
!2389 = !DILocation(line: 375, column: 3, scope: !2381)
!2390 = distinct !DISubprogram(name: "bsearch", scope: !2391, file: !2391, line: 20, type: !2392, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2395)
!2391 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!658, !1193, !1193, !1208, !1208, !2394}
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2364, line: 808, baseType: !1197)
!2395 = !{!2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405}
!2396 = !DILocalVariable(name: "__key", arg: 1, scope: !2390, file: !2391, line: 20, type: !1193)
!2397 = !DILocalVariable(name: "__base", arg: 2, scope: !2390, file: !2391, line: 20, type: !1193)
!2398 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2390, file: !2391, line: 20, type: !1208)
!2399 = !DILocalVariable(name: "__size", arg: 4, scope: !2390, file: !2391, line: 20, type: !1208)
!2400 = !DILocalVariable(name: "__compar", arg: 5, scope: !2390, file: !2391, line: 21, type: !2394)
!2401 = !DILocalVariable(name: "__l", scope: !2390, file: !2391, line: 23, type: !1208)
!2402 = !DILocalVariable(name: "__u", scope: !2390, file: !2391, line: 23, type: !1208)
!2403 = !DILocalVariable(name: "__idx", scope: !2390, file: !2391, line: 23, type: !1208)
!2404 = !DILocalVariable(name: "__p", scope: !2390, file: !2391, line: 24, type: !1193)
!2405 = !DILocalVariable(name: "__comparison", scope: !2390, file: !2391, line: 25, type: !654)
!2406 = !DILocation(line: 0, scope: !2390)
!2407 = !DILocation(line: 29, column: 3, scope: !2390)
!2408 = !DILocation(line: 27, column: 7, scope: !2390)
!2409 = !DILocation(line: 29, column: 14, scope: !2390)
!2410 = !DILocation(line: 31, column: 20, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2390, file: !2391, line: 30, column: 5)
!2412 = !DILocation(line: 31, column: 27, scope: !2411)
!2413 = !DILocation(line: 32, column: 56, scope: !2411)
!2414 = !DILocation(line: 32, column: 47, scope: !2411)
!2415 = !DILocation(line: 33, column: 22, scope: !2411)
!2416 = !DILocation(line: 34, column: 24, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2411, file: !2391, line: 34, column: 11)
!2418 = !DILocation(line: 34, column: 11, scope: !2411)
!2419 = !DILocation(line: 36, column: 29, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2417, file: !2391, line: 36, column: 16)
!2421 = !DILocation(line: 36, column: 16, scope: !2417)
!2422 = !DILocation(line: 37, column: 14, scope: !2420)
!2423 = distinct !{!2423, !2407, !2424}
!2424 = !DILocation(line: 40, column: 5, scope: !2390)
!2425 = !DILocation(line: 43, column: 1, scope: !2390)
!2426 = distinct !DISubprogram(name: "atof", scope: !2427, file: !2427, line: 25, type: !2428, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2431)
!2427 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!2430, !659}
!2430 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2431 = !{!2432}
!2432 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2426, file: !2427, line: 25, type: !659)
!2433 = !DILocation(line: 0, scope: !2426)
!2434 = !DILocation(line: 27, column: 10, scope: !2426)
!2435 = !DILocation(line: 27, column: 3, scope: !2426)
!2436 = distinct !DISubprogram(name: "strtoimax", scope: !2437, file: !2437, line: 324, type: !2438, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2444)
!2437 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!2440, !2197, !2443, !654}
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2441, line: 101, baseType: !2442)
!2441 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2249, line: 72, baseType: !818)
!2443 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !655)
!2444 = !{!2445, !2446, !2447}
!2445 = !DILocalVariable(name: "nptr", arg: 1, scope: !2436, file: !2437, line: 324, type: !2197)
!2446 = !DILocalVariable(name: "endptr", arg: 2, scope: !2436, file: !2437, line: 324, type: !2443)
!2447 = !DILocalVariable(name: "base", arg: 3, scope: !2436, file: !2437, line: 324, type: !654)
!2448 = !DILocation(line: 0, scope: !2436)
!2449 = !DILocation(line: 327, column: 10, scope: !2436)
!2450 = !DILocation(line: 327, column: 3, scope: !2436)
!2451 = distinct !DISubprogram(name: "strtoumax", scope: !2437, file: !2437, line: 336, type: !2452, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2456)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!2454, !2197, !2443, !654}
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2441, line: 102, baseType: !2455)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2249, line: 73, baseType: !801)
!2456 = !{!2457, !2458, !2459}
!2457 = !DILocalVariable(name: "nptr", arg: 1, scope: !2451, file: !2437, line: 336, type: !2197)
!2458 = !DILocalVariable(name: "endptr", arg: 2, scope: !2451, file: !2437, line: 336, type: !2443)
!2459 = !DILocalVariable(name: "base", arg: 3, scope: !2451, file: !2437, line: 336, type: !654)
!2460 = !DILocation(line: 0, scope: !2451)
!2461 = !DILocation(line: 339, column: 10, scope: !2451)
!2462 = !DILocation(line: 339, column: 3, scope: !2451)
!2463 = distinct !DISubprogram(name: "wcstoimax", scope: !2437, file: !2437, line: 348, type: !2464, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2473)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!2440, !2466, !2470, !654}
!2466 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2467)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2469)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2437, line: 34, baseType: !654)
!2470 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2473 = !{!2474, !2475, !2476}
!2474 = !DILocalVariable(name: "nptr", arg: 1, scope: !2463, file: !2437, line: 348, type: !2466)
!2475 = !DILocalVariable(name: "endptr", arg: 2, scope: !2463, file: !2437, line: 348, type: !2470)
!2476 = !DILocalVariable(name: "base", arg: 3, scope: !2463, file: !2437, line: 348, type: !654)
!2477 = !DILocation(line: 0, scope: !2463)
!2478 = !DILocation(line: 351, column: 10, scope: !2463)
!2479 = !DILocation(line: 351, column: 3, scope: !2463)
!2480 = distinct !DISubprogram(name: "wcstoumax", scope: !2437, file: !2437, line: 362, type: !2481, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2483)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!2454, !2466, !2470, !654}
!2483 = !{!2484, !2485, !2486}
!2484 = !DILocalVariable(name: "nptr", arg: 1, scope: !2480, file: !2437, line: 362, type: !2466)
!2485 = !DILocalVariable(name: "endptr", arg: 2, scope: !2480, file: !2437, line: 362, type: !2470)
!2486 = !DILocalVariable(name: "base", arg: 3, scope: !2480, file: !2437, line: 362, type: !654)
!2487 = !DILocation(line: 0, scope: !2480)
!2488 = !DILocation(line: 365, column: 10, scope: !2480)
!2489 = !DILocation(line: 365, column: 3, scope: !2480)
!2490 = distinct !DISubprogram(name: "stat", scope: !2491, file: !2491, line: 453, type: !2492, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2529)
!2491 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2492 = !DISubroutineType(types: !2493)
!2493 = !{!654, !659, !2494}
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2496, line: 46, size: 1152, elements: !2497)
!2496 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2497 = !{!2498, !2500, !2502, !2504, !2506, !2508, !2510, !2511, !2512, !2513, !2515, !2517, !2525, !2526, !2527}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2495, file: !2496, line: 48, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2249, line: 145, baseType: !801)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2495, file: !2496, line: 53, baseType: !2501, size: 64, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2249, line: 148, baseType: !801)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2495, file: !2496, line: 61, baseType: !2503, size: 64, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2249, line: 151, baseType: !801)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2495, file: !2496, line: 62, baseType: !2505, size: 32, offset: 192)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2249, line: 150, baseType: !7)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2495, file: !2496, line: 64, baseType: !2507, size: 32, offset: 224)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2249, line: 146, baseType: !7)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2495, file: !2496, line: 65, baseType: !2509, size: 32, offset: 256)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2249, line: 147, baseType: !7)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2495, file: !2496, line: 67, baseType: !654, size: 32, offset: 288)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2495, file: !2496, line: 69, baseType: !2499, size: 64, offset: 320)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2495, file: !2496, line: 74, baseType: !2248, size: 64, offset: 384)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2495, file: !2496, line: 78, baseType: !2514, size: 64, offset: 448)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2249, line: 174, baseType: !818)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2495, file: !2496, line: 80, baseType: !2516, size: 64, offset: 512)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2249, line: 179, baseType: !818)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2495, file: !2496, line: 91, baseType: !2518, size: 128, offset: 576)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2519, line: 10, size: 128, elements: !2520)
!2519 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2520 = !{!2521, !2523}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2518, file: !2519, line: 12, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2249, line: 160, baseType: !818)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2518, file: !2519, line: 16, baseType: !2524, size: 64, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2249, line: 196, baseType: !818)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2495, file: !2496, line: 92, baseType: !2518, size: 128, offset: 704)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2495, file: !2496, line: 93, baseType: !2518, size: 128, offset: 832)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2495, file: !2496, line: 106, baseType: !2528, size: 192, offset: 960)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2524, size: 192, elements: !918)
!2529 = !{!2530, !2531}
!2530 = !DILocalVariable(name: "__path", arg: 1, scope: !2490, file: !2491, line: 453, type: !659)
!2531 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2490, file: !2491, line: 453, type: !2494)
!2532 = !DILocation(line: 0, scope: !2490)
!2533 = !DILocation(line: 455, column: 10, scope: !2490)
!2534 = !DILocation(line: 455, column: 3, scope: !2490)
!2535 = distinct !DISubprogram(name: "lstat", scope: !2491, file: !2491, line: 460, type: !2492, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2536)
!2536 = !{!2537, !2538}
!2537 = !DILocalVariable(name: "__path", arg: 1, scope: !2535, file: !2491, line: 460, type: !659)
!2538 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2535, file: !2491, line: 460, type: !2494)
!2539 = !DILocation(line: 0, scope: !2535)
!2540 = !DILocation(line: 462, column: 10, scope: !2535)
!2541 = !DILocation(line: 462, column: 3, scope: !2535)
!2542 = distinct !DISubprogram(name: "fstat", scope: !2491, file: !2491, line: 467, type: !2543, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!654, !654, !2494}
!2545 = !{!2546, !2547}
!2546 = !DILocalVariable(name: "__fd", arg: 1, scope: !2542, file: !2491, line: 467, type: !654)
!2547 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2542, file: !2491, line: 467, type: !2494)
!2548 = !DILocation(line: 0, scope: !2542)
!2549 = !DILocation(line: 469, column: 10, scope: !2542)
!2550 = !DILocation(line: 469, column: 3, scope: !2542)
!2551 = distinct !DISubprogram(name: "fstatat", scope: !2491, file: !2491, line: 474, type: !2552, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2554)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!654, !654, !659, !2494, !654}
!2554 = !{!2555, !2556, !2557, !2558}
!2555 = !DILocalVariable(name: "__fd", arg: 1, scope: !2551, file: !2491, line: 474, type: !654)
!2556 = !DILocalVariable(name: "__filename", arg: 2, scope: !2551, file: !2491, line: 474, type: !659)
!2557 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2551, file: !2491, line: 474, type: !2494)
!2558 = !DILocalVariable(name: "__flag", arg: 4, scope: !2551, file: !2491, line: 474, type: !654)
!2559 = !DILocation(line: 0, scope: !2551)
!2560 = !DILocation(line: 477, column: 10, scope: !2551)
!2561 = !DILocation(line: 477, column: 3, scope: !2551)
!2562 = distinct !DISubprogram(name: "mknod", scope: !2491, file: !2491, line: 483, type: !2563, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2565)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!654, !659, !2505, !2499}
!2565 = !{!2566, !2567, !2568}
!2566 = !DILocalVariable(name: "__path", arg: 1, scope: !2562, file: !2491, line: 483, type: !659)
!2567 = !DILocalVariable(name: "__mode", arg: 2, scope: !2562, file: !2491, line: 483, type: !2505)
!2568 = !DILocalVariable(name: "__dev", arg: 3, scope: !2562, file: !2491, line: 483, type: !2499)
!2569 = !DILocation(line: 0, scope: !2562)
!2570 = !DILocation(line: 485, column: 10, scope: !2562)
!2571 = !DILocation(line: 485, column: 3, scope: !2562)
!2572 = distinct !DISubprogram(name: "mknodat", scope: !2491, file: !2491, line: 491, type: !2573, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2575)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!654, !654, !659, !2505, !2499}
!2575 = !{!2576, !2577, !2578, !2579}
!2576 = !DILocalVariable(name: "__fd", arg: 1, scope: !2572, file: !2491, line: 491, type: !654)
!2577 = !DILocalVariable(name: "__path", arg: 2, scope: !2572, file: !2491, line: 491, type: !659)
!2578 = !DILocalVariable(name: "__mode", arg: 3, scope: !2572, file: !2491, line: 491, type: !2505)
!2579 = !DILocalVariable(name: "__dev", arg: 4, scope: !2572, file: !2491, line: 491, type: !2499)
!2580 = !DILocation(line: 0, scope: !2572)
!2581 = !DILocation(line: 494, column: 10, scope: !2572)
!2582 = !DILocation(line: 494, column: 3, scope: !2572)
!2583 = distinct !DISubprogram(name: "stat64", scope: !2491, file: !2491, line: 502, type: !2584, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2606)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{!654, !659, !2586}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2496, line: 119, size: 1152, elements: !2588)
!2588 = !{!2589, !2590, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2602, !2603, !2604, !2605}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2587, file: !2496, line: 121, baseType: !2499, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2587, file: !2496, line: 123, baseType: !2591, size: 64, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2249, line: 149, baseType: !801)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2587, file: !2496, line: 124, baseType: !2503, size: 64, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2587, file: !2496, line: 125, baseType: !2505, size: 32, offset: 192)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2587, file: !2496, line: 132, baseType: !2507, size: 32, offset: 224)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2587, file: !2496, line: 133, baseType: !2509, size: 32, offset: 256)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2587, file: !2496, line: 135, baseType: !654, size: 32, offset: 288)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2587, file: !2496, line: 136, baseType: !2499, size: 64, offset: 320)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2587, file: !2496, line: 137, baseType: !2248, size: 64, offset: 384)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2587, file: !2496, line: 143, baseType: !2514, size: 64, offset: 448)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2587, file: !2496, line: 144, baseType: !2601, size: 64, offset: 512)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2249, line: 180, baseType: !818)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2587, file: !2496, line: 152, baseType: !2518, size: 128, offset: 576)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2587, file: !2496, line: 153, baseType: !2518, size: 128, offset: 704)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2587, file: !2496, line: 154, baseType: !2518, size: 128, offset: 832)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2587, file: !2496, line: 164, baseType: !2528, size: 192, offset: 960)
!2606 = !{!2607, !2608}
!2607 = !DILocalVariable(name: "__path", arg: 1, scope: !2583, file: !2491, line: 502, type: !659)
!2608 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2583, file: !2491, line: 502, type: !2586)
!2609 = !DILocation(line: 0, scope: !2583)
!2610 = !DILocation(line: 504, column: 10, scope: !2583)
!2611 = !DILocation(line: 504, column: 3, scope: !2583)
!2612 = distinct !DISubprogram(name: "lstat64", scope: !2491, file: !2491, line: 509, type: !2584, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2613)
!2613 = !{!2614, !2615}
!2614 = !DILocalVariable(name: "__path", arg: 1, scope: !2612, file: !2491, line: 509, type: !659)
!2615 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2612, file: !2491, line: 509, type: !2586)
!2616 = !DILocation(line: 0, scope: !2612)
!2617 = !DILocation(line: 511, column: 10, scope: !2612)
!2618 = !DILocation(line: 511, column: 3, scope: !2612)
!2619 = distinct !DISubprogram(name: "fstat64", scope: !2491, file: !2491, line: 516, type: !2620, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2622)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!654, !654, !2586}
!2622 = !{!2623, !2624}
!2623 = !DILocalVariable(name: "__fd", arg: 1, scope: !2619, file: !2491, line: 516, type: !654)
!2624 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2619, file: !2491, line: 516, type: !2586)
!2625 = !DILocation(line: 0, scope: !2619)
!2626 = !DILocation(line: 518, column: 10, scope: !2619)
!2627 = !DILocation(line: 518, column: 3, scope: !2619)
!2628 = distinct !DISubprogram(name: "fstatat64", scope: !2491, file: !2491, line: 523, type: !2629, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2631)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!654, !654, !659, !2586, !654}
!2631 = !{!2632, !2633, !2634, !2635}
!2632 = !DILocalVariable(name: "__fd", arg: 1, scope: !2628, file: !2491, line: 523, type: !654)
!2633 = !DILocalVariable(name: "__filename", arg: 2, scope: !2628, file: !2491, line: 523, type: !659)
!2634 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2628, file: !2491, line: 523, type: !2586)
!2635 = !DILocalVariable(name: "__flag", arg: 4, scope: !2628, file: !2491, line: 523, type: !654)
!2636 = !DILocation(line: 0, scope: !2628)
!2637 = !DILocation(line: 526, column: 10, scope: !2628)
!2638 = !DILocation(line: 526, column: 3, scope: !2628)
!2639 = distinct !DISubprogram(name: "using_eh_for_cleanups", scope: !3, file: !3, line: 52, type: !2640, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{null}
!2642 = !DILocation(line: 54, column: 27, scope: !2639)
!2643 = !DILocation(line: 55, column: 1, scope: !2639)
!2644 = distinct !DISubprogram(name: "add_stmt_to_eh_lp_fn", scope: !3, file: !3, line: 94, type: !2645, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2647)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{null, !1097, !665, !654}
!2647 = !{!2648, !2649, !2650, !2651, !2652}
!2648 = !DILocalVariable(name: "ifun", arg: 1, scope: !2644, file: !3, line: 94, type: !1097)
!2649 = !DILocalVariable(name: "t", arg: 2, scope: !2644, file: !3, line: 94, type: !665)
!2650 = !DILocalVariable(name: "num", arg: 3, scope: !2644, file: !3, line: 94, type: !654)
!2651 = !DILocalVariable(name: "n", scope: !2644, file: !3, line: 96, type: !661)
!2652 = !DILocalVariable(name: "slot", scope: !2644, file: !3, line: 97, type: !1206)
!2653 = !DILocation(line: 0, scope: !2644)
!2654 = !DILocation(line: 99, column: 3, scope: !2644)
!2655 = !DILocation(line: 101, column: 7, scope: !2644)
!2656 = !DILocation(line: 102, column: 6, scope: !2644)
!2657 = !DILocation(line: 102, column: 11, scope: !2644)
!2658 = !DILocation(line: 103, column: 6, scope: !2644)
!2659 = !DILocation(line: 103, column: 12, scope: !2644)
!2660 = !DILocation(line: 105, column: 8, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2644, file: !3, line: 105, column: 7)
!2662 = !DILocation(line: 105, column: 7, scope: !2644)
!2663 = !DILocation(line: 106, column: 36, scope: !2661)
!2664 = !DILocation(line: 106, column: 5, scope: !2661)
!2665 = !DILocation(line: 110, column: 26, scope: !2644)
!2666 = !DILocation(line: 110, column: 10, scope: !2644)
!2667 = !DILocation(line: 111, column: 3, scope: !2644)
!2668 = !DILocation(line: 112, column: 9, scope: !2644)
!2669 = !DILocation(line: 113, column: 1, scope: !2644)
!2670 = distinct !DISubprogram(name: "struct_ptr_hash", scope: !3, file: !3, line: 72, type: !1190, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2671)
!2671 = !{!2672, !2673}
!2672 = !DILocalVariable(name: "a", arg: 1, scope: !2670, file: !3, line: 72, type: !1193)
!2673 = !DILocalVariable(name: "x", scope: !2670, file: !3, line: 74, type: !2057)
!2674 = !DILocation(line: 0, scope: !2670)
!2675 = !DILocation(line: 75, column: 18, scope: !2670)
!2676 = !DILocation(line: 75, column: 21, scope: !2670)
!2677 = !DILocation(line: 75, column: 10, scope: !2670)
!2678 = !DILocation(line: 75, column: 3, scope: !2670)
!2679 = distinct !DISubprogram(name: "struct_ptr_eq", scope: !3, file: !3, line: 64, type: !1198, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2680)
!2680 = !{!2681, !2682, !2683, !2684}
!2681 = !DILocalVariable(name: "a", arg: 1, scope: !2679, file: !3, line: 64, type: !1193)
!2682 = !DILocalVariable(name: "b", arg: 2, scope: !2679, file: !3, line: 64, type: !1193)
!2683 = !DILocalVariable(name: "x", scope: !2679, file: !3, line: 66, type: !2057)
!2684 = !DILocalVariable(name: "y", scope: !2679, file: !3, line: 67, type: !2057)
!2685 = !DILocation(line: 0, scope: !2679)
!2686 = !DILocation(line: 66, column: 28, scope: !2679)
!2687 = !DILocation(line: 67, column: 28, scope: !2679)
!2688 = !DILocation(line: 68, column: 10, scope: !2679)
!2689 = !DILocation(line: 68, column: 16, scope: !2679)
!2690 = !DILocation(line: 68, column: 13, scope: !2679)
!2691 = !DILocation(line: 68, column: 3, scope: !2679)
!2692 = distinct !DISubprogram(name: "add_stmt_to_eh_lp", scope: !3, file: !3, line: 118, type: !2693, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2695)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{null, !665, !654}
!2695 = !{!2696, !2697}
!2696 = !DILocalVariable(name: "t", arg: 1, scope: !2692, file: !3, line: 118, type: !665)
!2697 = !DILocalVariable(name: "num", arg: 2, scope: !2692, file: !3, line: 118, type: !654)
!2698 = !DILocation(line: 0, scope: !2692)
!2699 = !DILocation(line: 120, column: 25, scope: !2692)
!2700 = !DILocation(line: 120, column: 3, scope: !2692)
!2701 = !DILocation(line: 121, column: 1, scope: !2692)
!2702 = distinct !DISubprogram(name: "remove_stmt_from_eh_lp_fn", scope: !3, file: !3, line: 147, type: !2703, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2705)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{!653, !1097, !665}
!2705 = !{!2706, !2707, !2708, !2709}
!2706 = !DILocalVariable(name: "ifun", arg: 1, scope: !2702, file: !3, line: 147, type: !1097)
!2707 = !DILocalVariable(name: "t", arg: 2, scope: !2702, file: !3, line: 147, type: !665)
!2708 = !DILocalVariable(name: "dummy", scope: !2702, file: !3, line: 149, type: !662)
!2709 = !DILocalVariable(name: "slot", scope: !2702, file: !3, line: 150, type: !1206)
!2710 = !DILocation(line: 0, scope: !2702)
!2711 = !DILocation(line: 149, column: 3, scope: !2702)
!2712 = !DILocation(line: 152, column: 8, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 152, column: 7)
!2714 = !DILocation(line: 152, column: 7, scope: !2702)
!2715 = !DILocation(line: 155, column: 9, scope: !2702)
!2716 = !DILocation(line: 155, column: 14, scope: !2702)
!2717 = !DILocation(line: 156, column: 26, scope: !2702)
!2718 = !DILocation(line: 156, column: 10, scope: !2702)
!2719 = !DILocation(line: 158, column: 7, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 158, column: 7)
!2721 = !DILocation(line: 158, column: 7, scope: !2702)
!2722 = !DILocation(line: 160, column: 24, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 159, column: 5)
!2724 = !DILocation(line: 160, column: 7, scope: !2723)
!2725 = !DILocation(line: 161, column: 7, scope: !2723)
!2726 = !DILocation(line: 165, column: 1, scope: !2702)
!2727 = distinct !DISubprogram(name: "remove_stmt_from_eh_lp", scope: !3, file: !3, line: 172, type: !2728, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2730)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!653, !665}
!2730 = !{!2731}
!2731 = !DILocalVariable(name: "t", arg: 1, scope: !2727, file: !3, line: 172, type: !665)
!2732 = !DILocation(line: 0, scope: !2727)
!2733 = !DILocation(line: 174, column: 37, scope: !2727)
!2734 = !DILocation(line: 174, column: 10, scope: !2727)
!2735 = !DILocation(line: 174, column: 3, scope: !2727)
!2736 = distinct !DISubprogram(name: "lookup_stmt_eh_lp_fn", scope: !3, file: !3, line: 183, type: !2737, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2739)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!654, !1097, !665}
!2739 = !{!2740, !2741, !2742, !2743}
!2740 = !DILocalVariable(name: "ifun", arg: 1, scope: !2736, file: !3, line: 183, type: !1097)
!2741 = !DILocalVariable(name: "t", arg: 2, scope: !2736, file: !3, line: 183, type: !665)
!2742 = !DILocalVariable(name: "p", scope: !2736, file: !3, line: 185, type: !661)
!2743 = !DILocalVariable(name: "n", scope: !2736, file: !3, line: 185, type: !662)
!2744 = !DILocation(line: 0, scope: !2736)
!2745 = !DILocation(line: 185, column: 3, scope: !2736)
!2746 = !DILocation(line: 187, column: 13, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2736, file: !3, line: 187, column: 7)
!2748 = !DILocation(line: 187, column: 17, scope: !2747)
!2749 = !DILocation(line: 187, column: 34, scope: !2747)
!2750 = !DILocation(line: 187, column: 7, scope: !2736)
!2751 = !DILocation(line: 190, column: 5, scope: !2736)
!2752 = !DILocation(line: 190, column: 10, scope: !2736)
!2753 = !DILocation(line: 191, column: 34, scope: !2736)
!2754 = !DILocation(line: 192, column: 10, scope: !2736)
!2755 = !DILocation(line: 192, column: 17, scope: !2736)
!2756 = !DILocation(line: 193, column: 1, scope: !2736)
!2757 = distinct !DISubprogram(name: "lookup_stmt_eh_lp", scope: !3, file: !3, line: 198, type: !2758, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2760)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!654, !665}
!2760 = !{!2761}
!2761 = !DILocalVariable(name: "t", arg: 1, scope: !2757, file: !3, line: 198, type: !665)
!2762 = !DILocation(line: 0, scope: !2757)
!2763 = !DILocation(line: 202, column: 8, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 202, column: 7)
!2765 = !DILocation(line: 202, column: 7, scope: !2757)
!2766 = !DILocation(line: 204, column: 10, scope: !2757)
!2767 = !DILocation(line: 204, column: 3, scope: !2757)
!2768 = !DILocation(line: 205, column: 1, scope: !2757)
!2769 = distinct !DISubprogram(name: "lower_eh_constructs", scope: !3, file: !3, line: 1987, type: !2161, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2770)
!2770 = !{!2771, !2772}
!2771 = !DILocalVariable(name: "null_state", scope: !2769, file: !3, line: 1989, type: !2091)
!2772 = !DILocalVariable(name: "bodyp", scope: !2769, file: !3, line: 1990, type: !716)
!2773 = !DILocation(line: 1989, column: 3, scope: !2769)
!2774 = !DILocation(line: 1990, column: 3, scope: !2769)
!2775 = !DILocation(line: 1992, column: 24, scope: !2769)
!2776 = !DILocation(line: 1992, column: 11, scope: !2769)
!2777 = !DILocation(line: 0, scope: !2769)
!2778 = !DILocation(line: 1992, column: 9, scope: !2769)
!2779 = !DILocation(line: 1993, column: 13, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 1993, column: 7)
!2781 = !DILocation(line: 1993, column: 7, scope: !2769)
!2782 = !DILocation(line: 1996, column: 18, scope: !2769)
!2783 = !DILocation(line: 1996, column: 16, scope: !2769)
!2784 = !DILocation(line: 1997, column: 37, scope: !2769)
!2785 = !DILocation(line: 1997, column: 35, scope: !2769)
!2786 = !DILocation(line: 1998, column: 3, scope: !2769)
!2787 = !DILocation(line: 2000, column: 3, scope: !2769)
!2788 = !DILocation(line: 2001, column: 3, scope: !2769)
!2789 = !DILocation(line: 2006, column: 3, scope: !2769)
!2790 = !DILocation(line: 2007, column: 31, scope: !2769)
!2791 = !DILocation(line: 2007, column: 3, scope: !2769)
!2792 = !DILocation(line: 2011, column: 3, scope: !2769)
!2793 = !DILocation(line: 2013, column: 16, scope: !2769)
!2794 = !DILocation(line: 2013, column: 3, scope: !2769)
!2795 = !DILocation(line: 2014, column: 3, scope: !2769)
!2796 = !DILocation(line: 2015, column: 10, scope: !2769)
!2797 = !DILocation(line: 2019, column: 38, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 2019, column: 7)
!2799 = !DILocation(line: 2019, column: 7, scope: !2798)
!2800 = !DILocation(line: 2019, column: 44, scope: !2798)
!2801 = !DILocation(line: 2020, column: 7, scope: !2798)
!2802 = !DILocation(line: 2020, column: 11, scope: !2798)
!2803 = !DILocation(line: 2019, column: 7, scope: !2769)
!2804 = !DILocation(line: 2022, column: 20, scope: !2798)
!2805 = !DILocation(line: 2022, column: 9, scope: !2798)
!2806 = !DILocation(line: 2021, column: 5, scope: !2798)
!2807 = !DILocation(line: 2022, column: 7, scope: !2798)
!2808 = !DILocation(line: 2025, column: 1, scope: !2769)
!2809 = distinct !DISubprogram(name: "make_eh_dispatch_edges", scope: !3, file: !3, line: 2051, type: !2728, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2810)
!2810 = !{!2811, !2812, !2813, !2815, !2816}
!2811 = !DILocalVariable(name: "stmt", arg: 1, scope: !2809, file: !3, line: 2051, type: !665)
!2812 = !DILocalVariable(name: "r", scope: !2809, file: !3, line: 2053, type: !1106)
!2813 = !DILocalVariable(name: "c", scope: !2809, file: !3, line: 2054, type: !2814)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_catch", file: !6, line: 181, baseType: !1122)
!2815 = !DILocalVariable(name: "src", scope: !2809, file: !3, line: 2055, type: !1270)
!2816 = !DILocalVariable(name: "dst", scope: !2809, file: !3, line: 2055, type: !1270)
!2817 = !DILocation(line: 0, scope: !2809)
!2818 = !DILocation(line: 2057, column: 34, scope: !2809)
!2819 = !DILocation(line: 2057, column: 7, scope: !2809)
!2820 = !DILocation(line: 2058, column: 9, scope: !2809)
!2821 = !DILocation(line: 2060, column: 14, scope: !2809)
!2822 = !DILocation(line: 2060, column: 3, scope: !2809)
!2823 = !DILocation(line: 2063, column: 19, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 2063, column: 7)
!2825 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 2061, column: 5)
!2826 = !DILocation(line: 2063, column: 28, scope: !2824)
!2827 = !DILocation(line: 2063, column: 12, scope: !2824)
!2828 = !DILocation(line: 0, scope: !2824)
!2829 = !DILocation(line: 2063, column: 7, scope: !2824)
!2830 = !DILocation(line: 2065, column: 10, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 2064, column: 2)
!2832 = distinct !DILexicalBlock(scope: !2824, file: !3, line: 2063, column: 7)
!2833 = !DILocation(line: 2066, column: 4, scope: !2831)
!2834 = !DILocation(line: 2069, column: 11, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2831, file: !3, line: 2069, column: 8)
!2836 = !DILocation(line: 2069, column: 21, scope: !2835)
!2837 = !DILocation(line: 2069, column: 8, scope: !2831)
!2838 = !DILocation(line: 2063, column: 52, scope: !2832)
!2839 = !DILocation(line: 2063, column: 7, scope: !2832)
!2840 = distinct !{!2840, !2829, !2841}
!2841 = !DILocation(line: 2071, column: 2, scope: !2824)
!2842 = !DILocation(line: 2075, column: 13, scope: !2825)
!2843 = !DILocation(line: 2076, column: 7, scope: !2825)
!2844 = !DILocation(line: 2077, column: 7, scope: !2825)
!2845 = !DILocation(line: 2080, column: 7, scope: !2825)
!2846 = !DILocation(line: 2081, column: 5, scope: !2825)
!2847 = !DILocation(line: 2084, column: 1, scope: !2809)
!2848 = distinct !DISubprogram(name: "gimple_eh_dispatch_region", scope: !568, file: !568, line: 3139, type: !2849, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2852)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!654, !2851}
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !666, line: 60, baseType: !2059)
!2852 = !{!2853}
!2853 = !DILocalVariable(name: "gs", arg: 1, scope: !2848, file: !568, line: 3139, type: !2851)
!2854 = !DILocation(line: 0, scope: !2848)
!2855 = !DILocation(line: 3142, column: 29, scope: !2848)
!2856 = !DILocation(line: 3142, column: 3, scope: !2848)
!2857 = distinct !DISubprogram(name: "gimple_bb", scope: !568, file: !568, line: 1112, type: !2858, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2860)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!690, !2851}
!2860 = !{!2861}
!2861 = !DILocalVariable(name: "g", arg: 1, scope: !2857, file: !568, line: 1112, type: !2851)
!2862 = !DILocation(line: 0, scope: !2857)
!2863 = !DILocation(line: 1114, column: 20, scope: !2857)
!2864 = !DILocation(line: 1114, column: 3, scope: !2857)
!2865 = distinct !DISubprogram(name: "make_eh_edges", scope: !3, file: !3, line: 2090, type: !2866, scopeLine: 2091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2868)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{null, !665}
!2868 = !{!2869, !2870, !2871, !2872, !2873}
!2869 = !DILocalVariable(name: "stmt", arg: 1, scope: !2865, file: !3, line: 2090, type: !665)
!2870 = !DILocalVariable(name: "src", scope: !2865, file: !3, line: 2092, type: !1270)
!2871 = !DILocalVariable(name: "dst", scope: !2865, file: !3, line: 2092, type: !1270)
!2872 = !DILocalVariable(name: "lp", scope: !2865, file: !3, line: 2093, type: !1180)
!2873 = !DILocalVariable(name: "lp_nr", scope: !2865, file: !3, line: 2094, type: !654)
!2874 = !DILocation(line: 0, scope: !2865)
!2875 = !DILocation(line: 2096, column: 11, scope: !2865)
!2876 = !DILocation(line: 2097, column: 13, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2865, file: !3, line: 2097, column: 7)
!2878 = !DILocation(line: 2097, column: 7, scope: !2865)
!2879 = !DILocation(line: 2100, column: 8, scope: !2865)
!2880 = !DILocation(line: 2101, column: 3, scope: !2865)
!2881 = !DILocation(line: 2103, column: 9, scope: !2865)
!2882 = !DILocation(line: 2104, column: 9, scope: !2865)
!2883 = !DILocation(line: 2105, column: 3, scope: !2865)
!2884 = !DILocation(line: 2106, column: 1, scope: !2865)
!2885 = distinct !DISubprogram(name: "redirect_eh_edge", scope: !3, file: !3, line: 2198, type: !2886, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2888)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!706, !706, !1270}
!2888 = !{!2889, !2890}
!2889 = !DILocalVariable(name: "edge_in", arg: 1, scope: !2885, file: !3, line: 2198, type: !706)
!2890 = !DILocalVariable(name: "new_bb", arg: 2, scope: !2885, file: !3, line: 2198, type: !1270)
!2891 = !DILocation(line: 0, scope: !2885)
!2892 = !DILocation(line: 2200, column: 3, scope: !2885)
!2893 = !DILocation(line: 2201, column: 10, scope: !2885)
!2894 = !DILocation(line: 2201, column: 3, scope: !2885)
!2895 = distinct !DISubprogram(name: "redirect_eh_edge_1", scope: !3, file: !3, line: 2118, type: !2896, scopeLine: 2119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2898)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{null, !706, !1270, !653}
!2898 = !{!2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2917}
!2899 = !DILocalVariable(name: "edge_in", arg: 1, scope: !2895, file: !3, line: 2118, type: !706)
!2900 = !DILocalVariable(name: "new_bb", arg: 2, scope: !2895, file: !3, line: 2118, type: !1270)
!2901 = !DILocalVariable(name: "change_region", arg: 3, scope: !2895, file: !3, line: 2118, type: !653)
!2902 = !DILocalVariable(name: "old_lp", scope: !2895, file: !3, line: 2120, type: !1180)
!2903 = !DILocalVariable(name: "new_lp", scope: !2895, file: !3, line: 2120, type: !1180)
!2904 = !DILocalVariable(name: "old_bb", scope: !2895, file: !3, line: 2121, type: !1270)
!2905 = !DILocalVariable(name: "throw_stmt", scope: !2895, file: !3, line: 2122, type: !665)
!2906 = !DILocalVariable(name: "old_lp_nr", scope: !2895, file: !3, line: 2123, type: !654)
!2907 = !DILocalVariable(name: "new_lp_nr", scope: !2895, file: !3, line: 2123, type: !654)
!2908 = !DILocalVariable(name: "old_label", scope: !2895, file: !3, line: 2124, type: !847)
!2909 = !DILocalVariable(name: "new_label", scope: !2895, file: !3, line: 2124, type: !847)
!2910 = !DILocalVariable(name: "ei", scope: !2895, file: !3, line: 2125, type: !2911)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !369, line: 682, baseType: !2912)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 679, size: 128, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2912, file: !369, line: 680, baseType: !7, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2912, file: !369, line: 681, baseType: !2916, size: 64, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!2917 = !DILocalVariable(name: "e", scope: !2895, file: !3, line: 2126, type: !706)
!2918 = !DILocation(line: 0, scope: !2895)
!2919 = !DILocation(line: 2125, column: 3, scope: !2895)
!2920 = !DILocation(line: 2126, column: 3, scope: !2895)
!2921 = !DILocation(line: 2128, column: 21, scope: !2895)
!2922 = !DILocation(line: 2129, column: 15, scope: !2895)
!2923 = !DILocation(line: 2130, column: 15, scope: !2895)
!2924 = !DILocation(line: 2131, column: 3, scope: !2895)
!2925 = !DILocation(line: 2132, column: 12, scope: !2895)
!2926 = !DILocation(line: 2134, column: 36, scope: !2895)
!2927 = !DILocation(line: 2134, column: 16, scope: !2895)
!2928 = !DILocation(line: 2135, column: 3, scope: !2895)
!2929 = !DILocation(line: 2137, column: 15, scope: !2895)
!2930 = !DILocation(line: 2140, column: 15, scope: !2895)
!2931 = !DILocation(line: 2141, column: 7, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 2141, column: 7)
!2933 = !DILocation(line: 2141, column: 7, scope: !2895)
!2934 = !DILocation(line: 2143, column: 16, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 2142, column: 5)
!2936 = !DILocation(line: 2144, column: 7, scope: !2935)
!2937 = !DILocation(line: 2148, column: 7, scope: !2935)
!2938 = !DILocation(line: 2153, column: 7, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 2151, column: 5)
!2940 = !DILocation(line: 0, scope: !2932)
!2941 = !DILocation(line: 2157, column: 3, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 2157, column: 3)
!2943 = !DILocation(line: 0, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 2157, column: 3)
!2945 = !DILocation(line: 2157, column: 3, scope: !2944)
!2946 = !DILocation(line: 0, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 2161, column: 7)
!2948 = !DILocation(line: 2158, column: 9, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 2158, column: 9)
!2950 = !DILocation(line: 2158, column: 11, scope: !2949)
!2951 = !DILocation(line: 2158, column: 22, scope: !2949)
!2952 = !DILocation(line: 2158, column: 29, scope: !2949)
!2953 = !DILocation(line: 2158, column: 35, scope: !2949)
!2954 = !DILocation(line: 2158, column: 9, scope: !2944)
!2955 = distinct !{!2955, !2941, !2956}
!2956 = !DILocation(line: 2159, column: 7, scope: !2942)
!2957 = !DILocation(line: 2161, column: 7, scope: !2947)
!2958 = !DILocation(line: 2161, column: 7, scope: !2895)
!2959 = !DILocation(line: 2168, column: 21, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 2168, column: 11)
!2961 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 2162, column: 5)
!2962 = !DILocation(line: 2168, column: 25, scope: !2960)
!2963 = !DILocation(line: 2169, column: 2, scope: !2960)
!2964 = !DILocation(line: 2176, column: 11, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 2172, column: 5)
!2966 = !DILocation(line: 2178, column: 4, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 2177, column: 2)
!2968 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 2176, column: 11)
!2969 = !DILocation(line: 2178, column: 49, scope: !2967)
!2970 = !DILocation(line: 2180, column: 2, scope: !2967)
!2971 = !DILocation(line: 2182, column: 39, scope: !2968)
!2972 = !DILocation(line: 2182, column: 11, scope: !2968)
!2973 = !DILocation(line: 0, scope: !2968)
!2974 = !DILocation(line: 2183, column: 15, scope: !2965)
!2975 = !DILocation(line: 2183, column: 32, scope: !2965)
!2976 = !DILocation(line: 2184, column: 47, scope: !2965)
!2977 = !DILocation(line: 2184, column: 37, scope: !2965)
!2978 = !DILocation(line: 2188, column: 14, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 2188, column: 7)
!2980 = !DILocation(line: 2188, column: 7, scope: !2895)
!2981 = !DILocation(line: 2190, column: 7, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 2189, column: 5)
!2983 = !DILocation(line: 2191, column: 46, scope: !2982)
!2984 = !DILocation(line: 2191, column: 7, scope: !2982)
!2985 = !DILocation(line: 2192, column: 5, scope: !2982)
!2986 = !DILocation(line: 2193, column: 1, scope: !2895)
!2987 = distinct !DISubprogram(name: "redirect_eh_dispatch_edge", scope: !3, file: !3, line: 2209, type: !2988, scopeLine: 2210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2990)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{null, !665, !706, !1270}
!2990 = !{!2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998}
!2991 = !DILocalVariable(name: "stmt", arg: 1, scope: !2987, file: !3, line: 2209, type: !665)
!2992 = !DILocalVariable(name: "e", arg: 2, scope: !2987, file: !3, line: 2209, type: !706)
!2993 = !DILocalVariable(name: "new_bb", arg: 3, scope: !2987, file: !3, line: 2209, type: !1270)
!2994 = !DILocalVariable(name: "new_lab", scope: !2987, file: !3, line: 2211, type: !847)
!2995 = !DILocalVariable(name: "any_changed", scope: !2987, file: !3, line: 2212, type: !653)
!2996 = !DILocalVariable(name: "old_bb", scope: !2987, file: !3, line: 2213, type: !1270)
!2997 = !DILocalVariable(name: "r", scope: !2987, file: !3, line: 2214, type: !1106)
!2998 = !DILocalVariable(name: "c", scope: !2987, file: !3, line: 2215, type: !2814)
!2999 = !DILocation(line: 0, scope: !2987)
!3000 = !DILocation(line: 2211, column: 18, scope: !2987)
!3001 = !DILocation(line: 2217, column: 34, scope: !2987)
!3002 = !DILocation(line: 2217, column: 7, scope: !2987)
!3003 = !DILocation(line: 2218, column: 14, scope: !2987)
!3004 = !DILocation(line: 2218, column: 3, scope: !2987)
!3005 = !DILocation(line: 2221, column: 19, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 2221, column: 7)
!3007 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 2219, column: 5)
!3008 = !DILocation(line: 2221, column: 28, scope: !3006)
!3009 = !DILocation(line: 0, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 2224, column: 8)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 2222, column: 2)
!3012 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 2221, column: 7)
!3013 = !DILocation(line: 2221, column: 12, scope: !3006)
!3014 = !DILocation(line: 0, scope: !3006)
!3015 = !DILocation(line: 2221, column: 7, scope: !3006)
!3016 = !DILocation(line: 2223, column: 13, scope: !3011)
!3017 = !DILocation(line: 2224, column: 21, scope: !3010)
!3018 = !DILocation(line: 2224, column: 15, scope: !3010)
!3019 = !DILocation(line: 2224, column: 8, scope: !3011)
!3020 = !DILocation(line: 2226, column: 17, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 2225, column: 6)
!3022 = !DILocation(line: 2228, column: 6, scope: !3021)
!3023 = !DILocation(line: 2221, column: 52, scope: !3012)
!3024 = !DILocation(line: 2221, column: 7, scope: !3012)
!3025 = distinct !{!3025, !3015, !3026}
!3026 = !DILocation(line: 2229, column: 2, scope: !3006)
!3027 = !DILocation(line: 2233, column: 16, scope: !3007)
!3028 = !DILocation(line: 2234, column: 7, scope: !3007)
!3029 = !DILocation(line: 2235, column: 26, scope: !3007)
!3030 = !DILocation(line: 2237, column: 7, scope: !3007)
!3031 = !DILocation(line: 2240, column: 7, scope: !3007)
!3032 = !DILocation(line: 2241, column: 5, scope: !3007)
!3033 = !DILocation(line: 2243, column: 3, scope: !2987)
!3034 = !DILocation(line: 2244, column: 1, scope: !2987)
!3035 = distinct !DISubprogram(name: "operation_could_trap_helper_p", scope: !3, file: !3, line: 2249, type: !3036, scopeLine: 2256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3038)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{!653, !141, !653, !653, !653, !653, !847, !652}
!3038 = !{!3039, !3040, !3041, !3042, !3043, !3044, !3045}
!3039 = !DILocalVariable(name: "op", arg: 1, scope: !3035, file: !3, line: 2249, type: !141)
!3040 = !DILocalVariable(name: "fp_operation", arg: 2, scope: !3035, file: !3, line: 2250, type: !653)
!3041 = !DILocalVariable(name: "honor_trapv", arg: 3, scope: !3035, file: !3, line: 2251, type: !653)
!3042 = !DILocalVariable(name: "honor_nans", arg: 4, scope: !3035, file: !3, line: 2252, type: !653)
!3043 = !DILocalVariable(name: "honor_snans", arg: 5, scope: !3035, file: !3, line: 2253, type: !653)
!3044 = !DILocalVariable(name: "divisor", arg: 6, scope: !3035, file: !3, line: 2254, type: !847)
!3045 = !DILocalVariable(name: "handled", arg: 7, scope: !3035, file: !3, line: 2255, type: !652)
!3046 = !DILocation(line: 0, scope: !3035)
!3047 = !DILocation(line: 2257, column: 12, scope: !3035)
!3048 = !DILocation(line: 2258, column: 3, scope: !3035)
!3049 = !DILocation(line: 2270, column: 23, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2270, column: 11)
!3051 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 2259, column: 5)
!3052 = !DILocation(line: 2272, column: 11, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2272, column: 11)
!3054 = !DILocation(line: 2272, column: 11, scope: !3051)
!3055 = !DILocation(line: 2273, column: 9, scope: !3053)
!3056 = !DILocation(line: 2273, column: 2, scope: !3053)
!3057 = !DILocation(line: 2274, column: 12, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2274, column: 11)
!3059 = !DILocation(line: 2274, column: 36, scope: !3058)
!3060 = !DILocation(line: 2274, column: 39, scope: !3058)
!3061 = !DILocation(line: 2274, column: 11, scope: !3051)
!3062 = !DILocation(line: 2295, column: 7, scope: !3051)
!3063 = !DILocation(line: 2306, column: 11, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2306, column: 11)
!3065 = !DILocation(line: 0, scope: !3051)
!3066 = !DILocation(line: 2314, column: 11, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2314, column: 11)
!3068 = !DILocation(line: 2314, column: 27, scope: !3067)
!3069 = !DILocation(line: 2314, column: 24, scope: !3067)
!3070 = !DILocation(line: 2316, column: 11, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2316, column: 11)
!3072 = !DILocation(line: 2322, column: 11, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2322, column: 11)
!3074 = !DILocation(line: 2322, column: 27, scope: !3073)
!3075 = !DILocation(line: 2322, column: 24, scope: !3073)
!3076 = !DILocation(line: 2325, column: 16, scope: !3051)
!3077 = !DILocation(line: 2326, column: 7, scope: !3051)
!3078 = !DILocation(line: 2328, column: 1, scope: !3035)
!3079 = distinct !DISubprogram(name: "operation_could_trap_p", scope: !3, file: !3, line: 2336, type: !3080, scopeLine: 2338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3082)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!653, !141, !653, !653, !847}
!3082 = !{!3083, !3084, !3085, !3086, !3087, !3088, !3089}
!3083 = !DILocalVariable(name: "op", arg: 1, scope: !3079, file: !3, line: 2336, type: !141)
!3084 = !DILocalVariable(name: "fp_operation", arg: 2, scope: !3079, file: !3, line: 2336, type: !653)
!3085 = !DILocalVariable(name: "honor_trapv", arg: 3, scope: !3079, file: !3, line: 2336, type: !653)
!3086 = !DILocalVariable(name: "divisor", arg: 4, scope: !3079, file: !3, line: 2337, type: !847)
!3087 = !DILocalVariable(name: "honor_nans", scope: !3079, file: !3, line: 2339, type: !653)
!3088 = !DILocalVariable(name: "honor_snans", scope: !3079, file: !3, line: 2341, type: !653)
!3089 = !DILocalVariable(name: "handled", scope: !3079, file: !3, line: 2342, type: !653)
!3090 = !DILocation(line: 0, scope: !3079)
!3091 = !DILocation(line: 2339, column: 22, scope: !3079)
!3092 = !DILocation(line: 2339, column: 38, scope: !3079)
!3093 = !DILocation(line: 2339, column: 35, scope: !3079)
!3094 = !DILocation(line: 2340, column: 12, scope: !3079)
!3095 = !DILocation(line: 2340, column: 11, scope: !3079)
!3096 = !DILocation(line: 2341, column: 35, scope: !3079)
!3097 = !DILocation(line: 2341, column: 22, scope: !3079)
!3098 = !DILocation(line: 2342, column: 3, scope: !3079)
!3099 = !DILocation(line: 2344, column: 7, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 2344, column: 7)
!3101 = !DILocation(line: 2344, column: 28, scope: !3100)
!3102 = !DILocation(line: 2345, column: 7, scope: !3100)
!3103 = !DILocation(line: 2345, column: 31, scope: !3100)
!3104 = !DILocation(line: 2346, column: 7, scope: !3100)
!3105 = !DILocation(line: 2346, column: 31, scope: !3100)
!3106 = !DILocation(line: 2344, column: 7, scope: !3079)
!3107 = !DILocation(line: 2349, column: 10, scope: !3079)
!3108 = !DILocation(line: 2349, column: 3, scope: !3079)
!3109 = !DILocation(line: 2352, column: 1, scope: !3079)
!3110 = distinct !DISubprogram(name: "tree_could_trap_p", scope: !3, file: !3, line: 2359, type: !3111, scopeLine: 2360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3113)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!653, !847}
!3113 = !{!3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3114 = !DILocalVariable(name: "expr", arg: 1, scope: !3110, file: !3, line: 2359, type: !847)
!3115 = !DILocalVariable(name: "code", scope: !3110, file: !3, line: 2361, type: !141)
!3116 = !DILocalVariable(name: "fp_operation", scope: !3110, file: !3, line: 2362, type: !653)
!3117 = !DILocalVariable(name: "honor_trapv", scope: !3110, file: !3, line: 2363, type: !653)
!3118 = !DILocalVariable(name: "t", scope: !3110, file: !3, line: 2364, type: !847)
!3119 = !DILocalVariable(name: "base", scope: !3110, file: !3, line: 2364, type: !847)
!3120 = !DILocalVariable(name: "div", scope: !3110, file: !3, line: 2364, type: !847)
!3121 = !DILabel(scope: !3110, name: "restart", file: !3, line: 2386)
!3122 = !DILocation(line: 0, scope: !3110)
!3123 = !DILocation(line: 2366, column: 8, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 2366, column: 7)
!3125 = !DILocation(line: 2366, column: 7, scope: !3110)
!3126 = !DILocation(line: 2369, column: 10, scope: !3110)
!3127 = !DILocation(line: 2370, column: 7, scope: !3110)
!3128 = !DILocation(line: 2372, column: 7, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 2372, column: 7)
!3130 = !DILocation(line: 2372, column: 7, scope: !3110)
!3131 = !DILocation(line: 2374, column: 11, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 2374, column: 11)
!3133 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 2373, column: 5)
!3134 = !DILocation(line: 2374, column: 11, scope: !3133)
!3135 = !DILocation(line: 2375, column: 17, scope: !3132)
!3136 = !DILocation(line: 0, scope: !3133)
!3137 = !DILocation(line: 2378, column: 21, scope: !3133)
!3138 = !DILocation(line: 2375, column: 2, scope: !3132)
!3139 = !DILocation(line: 2377, column: 17, scope: !3132)
!3140 = !DILocation(line: 0, scope: !3132)
!3141 = !DILocation(line: 2378, column: 41, scope: !3133)
!3142 = !DILocation(line: 2378, column: 44, scope: !3133)
!3143 = !DILocation(line: 2379, column: 5, scope: !3133)
!3144 = !DILocation(line: 2381, column: 7, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 2381, column: 7)
!3146 = !DILocation(line: 2381, column: 30, scope: !3145)
!3147 = !DILocation(line: 2381, column: 7, scope: !3110)
!3148 = !DILocation(line: 2382, column: 11, scope: !3145)
!3149 = !DILocation(line: 2382, column: 5, scope: !3145)
!3150 = !DILocation(line: 2383, column: 7, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 2383, column: 7)
!3152 = !DILocation(line: 2383, column: 7, scope: !3110)
!3153 = !DILocation(line: 2387, column: 3, scope: !3110)
!3154 = !DILocation(line: 2386, column: 2, scope: !3110)
!3155 = !DILocation(line: 2392, column: 14, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 2388, column: 5)
!3157 = !DILocation(line: 2394, column: 7, scope: !3156)
!3158 = !DILocation(line: 0, scope: !3156)
!3159 = !DILocation(line: 2402, column: 14, scope: !3156)
!3160 = !DILocation(line: 2404, column: 7, scope: !3156)
!3161 = !DILocation(line: 2407, column: 14, scope: !3156)
!3162 = !DILocation(line: 2408, column: 11, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 2408, column: 11)
!3164 = !DILocation(line: 2408, column: 11, scope: !3156)
!3165 = !DILocation(line: 2410, column: 11, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 2410, column: 11)
!3167 = !DILocation(line: 2410, column: 11, scope: !3156)
!3168 = !DILocation(line: 2412, column: 15, scope: !3156)
!3169 = !DILocation(line: 2412, column: 14, scope: !3156)
!3170 = !DILocation(line: 2412, column: 7, scope: !3156)
!3171 = !DILocation(line: 2415, column: 14, scope: !3156)
!3172 = !DILocation(line: 2416, column: 11, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 2416, column: 11)
!3174 = !DILocation(line: 2416, column: 11, scope: !3156)
!3175 = !DILocation(line: 2418, column: 11, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 2418, column: 11)
!3177 = !DILocation(line: 2418, column: 11, scope: !3156)
!3178 = !DILocation(line: 2420, column: 15, scope: !3156)
!3179 = !DILocation(line: 2420, column: 14, scope: !3156)
!3180 = !DILocation(line: 2420, column: 7, scope: !3156)
!3181 = !DILocation(line: 2425, column: 15, scope: !3156)
!3182 = !DILocation(line: 2425, column: 14, scope: !3156)
!3183 = !DILocation(line: 2425, column: 7, scope: !3156)
!3184 = !DILocation(line: 2428, column: 14, scope: !3156)
!3185 = !DILocation(line: 2428, column: 7, scope: !3156)
!3186 = !DILocation(line: 2431, column: 11, scope: !3156)
!3187 = !DILocation(line: 2433, column: 12, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 2433, column: 11)
!3189 = !DILocation(line: 2433, column: 14, scope: !3188)
!3190 = !DILocation(line: 2433, column: 18, scope: !3188)
!3191 = !DILocation(line: 2433, column: 29, scope: !3188)
!3192 = !DILocation(line: 2433, column: 32, scope: !3188)
!3193 = !DILocation(line: 2433, column: 11, scope: !3156)
!3194 = !DILocation(line: 2440, column: 1, scope: !3110)
!3195 = distinct !DISubprogram(name: "stmt_could_throw_p", scope: !3, file: !3, line: 2494, type: !2728, scopeLine: 2495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3196)
!3196 = !{!3197}
!3197 = !DILocalVariable(name: "stmt", arg: 1, scope: !3195, file: !3, line: 2494, type: !665)
!3198 = !DILocation(line: 0, scope: !3195)
!3199 = !DILocation(line: 2496, column: 8, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 2496, column: 7)
!3201 = !DILocation(line: 2496, column: 7, scope: !3195)
!3202 = !DILocation(line: 2501, column: 11, scope: !3195)
!3203 = !DILocation(line: 2501, column: 3, scope: !3195)
!3204 = !DILocation(line: 2507, column: 15, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 2502, column: 5)
!3206 = !DILocation(line: 2507, column: 14, scope: !3205)
!3207 = !DILocation(line: 2507, column: 7, scope: !3205)
!3208 = !DILocation(line: 2511, column: 12, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 2511, column: 11)
!3210 = !DILocation(line: 2511, column: 11, scope: !3205)
!3211 = !DILocation(line: 2513, column: 14, scope: !3205)
!3212 = !DILocation(line: 2513, column: 7, scope: !3205)
!3213 = !DILocation(line: 2516, column: 12, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 2516, column: 11)
!3215 = !DILocation(line: 2516, column: 11, scope: !3205)
!3216 = !DILocation(line: 2518, column: 14, scope: !3205)
!3217 = !DILocation(line: 2518, column: 7, scope: !3205)
!3218 = !DILocation(line: 2521, column: 7, scope: !3205)
!3219 = !DILocation(line: 2523, column: 1, scope: !3195)
!3220 = distinct !DISubprogram(name: "gimple_code", scope: !568, file: !568, line: 1052, type: !3221, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3223)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!594, !2851}
!3223 = !{!3224}
!3224 = !DILocalVariable(name: "g", arg: 1, scope: !3220, file: !568, line: 1052, type: !2851)
!3225 = !DILocation(line: 0, scope: !3220)
!3226 = !DILocation(line: 1054, column: 20, scope: !3220)
!3227 = !DILocation(line: 1054, column: 3, scope: !3220)
!3228 = distinct !DISubprogram(name: "gimple_call_nothrow_p", scope: !568, file: !568, line: 2188, type: !2728, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3229)
!3229 = !{!3230}
!3230 = !DILocalVariable(name: "s", arg: 1, scope: !3228, file: !568, line: 2188, type: !665)
!3231 = !DILocation(line: 0, scope: !3228)
!3232 = !DILocation(line: 2191, column: 11, scope: !3228)
!3233 = !DILocation(line: 2191, column: 10, scope: !3228)
!3234 = !DILocation(line: 2191, column: 3, scope: !3228)
!3235 = distinct !DISubprogram(name: "stmt_could_throw_1_p", scope: !3, file: !3, line: 2447, type: !2728, scopeLine: 2448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3236)
!3236 = !{!3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246}
!3237 = !DILocalVariable(name: "stmt", arg: 1, scope: !3235, file: !3, line: 2447, type: !665)
!3238 = !DILocalVariable(name: "code", scope: !3235, file: !3, line: 2449, type: !141)
!3239 = !DILocalVariable(name: "honor_nans", scope: !3235, file: !3, line: 2450, type: !653)
!3240 = !DILocalVariable(name: "honor_snans", scope: !3235, file: !3, line: 2451, type: !653)
!3241 = !DILocalVariable(name: "fp_operation", scope: !3235, file: !3, line: 2452, type: !653)
!3242 = !DILocalVariable(name: "honor_trapv", scope: !3235, file: !3, line: 2453, type: !653)
!3243 = !DILocalVariable(name: "t", scope: !3235, file: !3, line: 2454, type: !847)
!3244 = !DILocalVariable(name: "i", scope: !3235, file: !3, line: 2455, type: !1208)
!3245 = !DILocalVariable(name: "handled", scope: !3235, file: !3, line: 2456, type: !653)
!3246 = !DILocalVariable(name: "ret", scope: !3235, file: !3, line: 2456, type: !653)
!3247 = !DILocation(line: 0, scope: !3235)
!3248 = !DILocation(line: 2449, column: 25, scope: !3235)
!3249 = !DILocation(line: 2456, column: 3, scope: !3235)
!3250 = !DILocation(line: 2458, column: 7, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 2458, column: 7)
!3252 = !DILocation(line: 2458, column: 30, scope: !3251)
!3253 = !DILocation(line: 2459, column: 7, scope: !3251)
!3254 = !DILocation(line: 2459, column: 33, scope: !3251)
!3255 = !DILocation(line: 2460, column: 7, scope: !3251)
!3256 = !DILocation(line: 2460, column: 33, scope: !3251)
!3257 = !DILocation(line: 2458, column: 7, scope: !3235)
!3258 = !DILocation(line: 2462, column: 11, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 2461, column: 5)
!3260 = !DILocation(line: 2463, column: 22, scope: !3259)
!3261 = !DILocation(line: 2464, column: 11, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2464, column: 11)
!3263 = !DILocation(line: 2464, column: 11, scope: !3259)
!3264 = !DILocation(line: 2466, column: 17, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 2465, column: 2)
!3266 = !DILocation(line: 2466, column: 36, scope: !3265)
!3267 = !DILocation(line: 2466, column: 40, scope: !3265)
!3268 = !DILocation(line: 2466, column: 39, scope: !3265)
!3269 = !DILocation(line: 2467, column: 18, scope: !3265)
!3270 = !DILocation(line: 2467, column: 38, scope: !3265)
!3271 = !DILocation(line: 2468, column: 2, scope: !3265)
!3272 = !DILocation(line: 2469, column: 16, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 2469, column: 16)
!3274 = !DILocation(line: 2469, column: 36, scope: !3273)
!3275 = !DILocation(line: 2469, column: 39, scope: !3273)
!3276 = !DILocation(line: 2453, column: 8, scope: !3235)
!3277 = !DILocation(line: 2474, column: 7, scope: !3235)
!3278 = !DILocation(line: 2474, column: 33, scope: !3235)
!3279 = !DILocation(line: 2475, column: 9, scope: !3235)
!3280 = !DILocation(line: 2478, column: 7, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 2478, column: 7)
!3282 = !DILocation(line: 2478, column: 7, scope: !3235)
!3283 = !DILocation(line: 2483, column: 3, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 2483, column: 3)
!3285 = !DILocation(line: 0, scope: !3284)
!3286 = !DILocation(line: 2483, column: 19, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 2483, column: 3)
!3288 = !DILocation(line: 2483, column: 17, scope: !3287)
!3289 = !DILocation(line: 2484, column: 45, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 2484, column: 9)
!3291 = !DILocation(line: 2484, column: 28, scope: !3290)
!3292 = !DILocation(line: 2484, column: 9, scope: !3290)
!3293 = !DILocation(line: 2484, column: 9, scope: !3287)
!3294 = !DILocation(line: 2483, column: 43, scope: !3287)
!3295 = !DILocation(line: 2483, column: 3, scope: !3287)
!3296 = distinct !{!3296, !3283, !3297}
!3297 = !DILocation(line: 2485, column: 14, scope: !3284)
!3298 = !DILocation(line: 2488, column: 1, scope: !3235)
!3299 = distinct !DISubprogram(name: "gimple_asm_volatile_p", scope: !568, file: !568, line: 2739, type: !3300, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3302)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!653, !2851}
!3302 = !{!3303}
!3303 = !DILocalVariable(name: "gs", arg: 1, scope: !3299, file: !568, line: 2739, type: !2851)
!3304 = !DILocation(line: 0, scope: !3299)
!3305 = !DILocation(line: 2742, column: 22, scope: !3299)
!3306 = !DILocation(line: 2742, column: 10, scope: !3299)
!3307 = !DILocation(line: 2742, column: 3, scope: !3299)
!3308 = distinct !DISubprogram(name: "tree_could_throw_p", scope: !3, file: !3, line: 2529, type: !3111, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3309)
!3309 = !{!3310}
!3310 = !DILocalVariable(name: "t", arg: 1, scope: !3308, file: !3, line: 2529, type: !847)
!3311 = !DILocation(line: 0, scope: !3308)
!3312 = !DILocation(line: 2531, column: 8, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2531, column: 7)
!3314 = !DILocation(line: 2531, column: 7, scope: !3308)
!3315 = !DILocation(line: 2533, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2533, column: 7)
!3317 = !DILocation(line: 2533, column: 21, scope: !3316)
!3318 = !DILocation(line: 2533, column: 7, scope: !3308)
!3319 = !DILocation(line: 2535, column: 11, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 2535, column: 11)
!3321 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 2534, column: 5)
!3322 = !DILocation(line: 2536, column: 11, scope: !3320)
!3323 = !DILocation(line: 2536, column: 33, scope: !3320)
!3324 = !DILocation(line: 2536, column: 14, scope: !3320)
!3325 = !DILocation(line: 2535, column: 11, scope: !3321)
!3326 = !DILocation(line: 2538, column: 11, scope: !3321)
!3327 = !DILocation(line: 0, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2541, column: 7)
!3329 = !DILocation(line: 2541, column: 7, scope: !3328)
!3330 = !DILocation(line: 2539, column: 5, scope: !3321)
!3331 = !DILocation(line: 2541, column: 21, scope: !3328)
!3332 = !DILocation(line: 2541, column: 7, scope: !3308)
!3333 = !DILocation(line: 2542, column: 9, scope: !3328)
!3334 = !DILocation(line: 0, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2543, column: 7)
!3336 = !DILocation(line: 2543, column: 7, scope: !3335)
!3337 = !DILocation(line: 2542, column: 5, scope: !3328)
!3338 = !DILocation(line: 2543, column: 21, scope: !3335)
!3339 = !DILocation(line: 2543, column: 7, scope: !3308)
!3340 = !DILocation(line: 2544, column: 13, scope: !3335)
!3341 = !DILocation(line: 2544, column: 12, scope: !3335)
!3342 = !DILocation(line: 2544, column: 5, scope: !3335)
!3343 = !DILocation(line: 2545, column: 7, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2545, column: 7)
!3345 = !DILocation(line: 2545, column: 7, scope: !3308)
!3346 = !DILocation(line: 2546, column: 12, scope: !3344)
!3347 = !DILocation(line: 2546, column: 5, scope: !3344)
!3348 = !DILocation(line: 2548, column: 1, scope: !3308)
!3349 = distinct !DISubprogram(name: "stmt_can_throw_external", scope: !3, file: !3, line: 2554, type: !2728, scopeLine: 2555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3350)
!3350 = !{!3351, !3352}
!3351 = !DILocalVariable(name: "stmt", arg: 1, scope: !3349, file: !3, line: 2554, type: !665)
!3352 = !DILocalVariable(name: "lp_nr", scope: !3349, file: !3, line: 2556, type: !654)
!3353 = !DILocation(line: 0, scope: !3349)
!3354 = !DILocation(line: 2558, column: 8, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 2558, column: 7)
!3356 = !DILocation(line: 2558, column: 7, scope: !3349)
!3357 = !DILocation(line: 2561, column: 11, scope: !3349)
!3358 = !DILocation(line: 2562, column: 16, scope: !3349)
!3359 = !DILocation(line: 2562, column: 10, scope: !3349)
!3360 = !DILocation(line: 2562, column: 3, scope: !3349)
!3361 = !DILocation(line: 2563, column: 1, scope: !3349)
!3362 = distinct !DISubprogram(name: "stmt_can_throw_internal", scope: !3, file: !3, line: 2569, type: !2728, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3363)
!3363 = !{!3364, !3365}
!3364 = !DILocalVariable(name: "stmt", arg: 1, scope: !3362, file: !3, line: 2569, type: !665)
!3365 = !DILocalVariable(name: "lp_nr", scope: !3362, file: !3, line: 2571, type: !654)
!3366 = !DILocation(line: 0, scope: !3362)
!3367 = !DILocation(line: 2573, column: 8, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 2573, column: 7)
!3369 = !DILocation(line: 2573, column: 7, scope: !3362)
!3370 = !DILocation(line: 2576, column: 11, scope: !3362)
!3371 = !DILocation(line: 2577, column: 16, scope: !3362)
!3372 = !DILocation(line: 2577, column: 10, scope: !3362)
!3373 = !DILocation(line: 2577, column: 3, scope: !3362)
!3374 = !DILocation(line: 2578, column: 1, scope: !3362)
!3375 = distinct !DISubprogram(name: "maybe_clean_eh_stmt_fn", scope: !3, file: !3, line: 2585, type: !2703, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3376)
!3376 = !{!3377, !3378}
!3377 = !DILocalVariable(name: "ifun", arg: 1, scope: !3375, file: !3, line: 2585, type: !1097)
!3378 = !DILocalVariable(name: "stmt", arg: 2, scope: !3375, file: !3, line: 2585, type: !665)
!3379 = !DILocation(line: 0, scope: !3375)
!3380 = !DILocation(line: 2587, column: 7, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 2587, column: 7)
!3382 = !DILocation(line: 2587, column: 7, scope: !3375)
!3383 = !DILocation(line: 2589, column: 10, scope: !3375)
!3384 = !DILocation(line: 2589, column: 3, scope: !3375)
!3385 = !DILocation(line: 2590, column: 1, scope: !3375)
!3386 = distinct !DISubprogram(name: "maybe_clean_eh_stmt", scope: !3, file: !3, line: 2595, type: !2728, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3387)
!3387 = !{!3388}
!3388 = !DILocalVariable(name: "stmt", arg: 1, scope: !3386, file: !3, line: 2595, type: !665)
!3389 = !DILocation(line: 0, scope: !3386)
!3390 = !DILocation(line: 2597, column: 34, scope: !3386)
!3391 = !DILocation(line: 2597, column: 10, scope: !3386)
!3392 = !DILocation(line: 2597, column: 3, scope: !3386)
!3393 = distinct !DISubprogram(name: "maybe_clean_or_replace_eh_stmt", scope: !3, file: !3, line: 2606, type: !3394, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3396)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!653, !665, !665}
!3396 = !{!3397, !3398, !3399, !3400}
!3397 = !DILocalVariable(name: "old_stmt", arg: 1, scope: !3393, file: !3, line: 2606, type: !665)
!3398 = !DILocalVariable(name: "new_stmt", arg: 2, scope: !3393, file: !3, line: 2606, type: !665)
!3399 = !DILocalVariable(name: "lp_nr", scope: !3393, file: !3, line: 2608, type: !654)
!3400 = !DILocalVariable(name: "new_stmt_could_throw", scope: !3401, file: !3, line: 2612, type: !653)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 2611, column: 5)
!3402 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 2610, column: 7)
!3403 = !DILocation(line: 0, scope: !3393)
!3404 = !DILocation(line: 2608, column: 15, scope: !3393)
!3405 = !DILocation(line: 2610, column: 13, scope: !3402)
!3406 = !DILocation(line: 2610, column: 7, scope: !3393)
!3407 = !DILocation(line: 2612, column: 35, scope: !3401)
!3408 = !DILocation(line: 0, scope: !3401)
!3409 = !DILocation(line: 2614, column: 20, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 2614, column: 11)
!3411 = !DILocation(line: 2614, column: 35, scope: !3410)
!3412 = !DILocation(line: 2614, column: 32, scope: !3410)
!3413 = !DILocation(line: 2617, column: 7, scope: !3401)
!3414 = !DILocation(line: 2618, column: 11, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 2618, column: 11)
!3416 = !DILocation(line: 2618, column: 11, scope: !3401)
!3417 = !DILocation(line: 2620, column: 4, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 2619, column: 2)
!3419 = !DILocation(line: 2621, column: 4, scope: !3418)
!3420 = !DILocation(line: 2628, column: 1, scope: !3393)
!3421 = distinct !DISubprogram(name: "maybe_duplicate_eh_stmt_fn", scope: !3, file: !3, line: 2635, type: !3422, scopeLine: 2638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3424)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!653, !1097, !665, !1097, !665, !1331, !654}
!3424 = !{!3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3438, !3439, !3441}
!3425 = !DILocalVariable(name: "new_fun", arg: 1, scope: !3421, file: !3, line: 2635, type: !1097)
!3426 = !DILocalVariable(name: "new_stmt", arg: 2, scope: !3421, file: !3, line: 2635, type: !665)
!3427 = !DILocalVariable(name: "old_fun", arg: 3, scope: !3421, file: !3, line: 2636, type: !1097)
!3428 = !DILocalVariable(name: "old_stmt", arg: 4, scope: !3421, file: !3, line: 2636, type: !665)
!3429 = !DILocalVariable(name: "map", arg: 5, scope: !3421, file: !3, line: 2637, type: !1331)
!3430 = !DILocalVariable(name: "default_lp_nr", arg: 6, scope: !3421, file: !3, line: 2637, type: !654)
!3431 = !DILocalVariable(name: "old_lp_nr", scope: !3421, file: !3, line: 2639, type: !654)
!3432 = !DILocalVariable(name: "new_lp_nr", scope: !3421, file: !3, line: 2639, type: !654)
!3433 = !DILocalVariable(name: "slot", scope: !3421, file: !3, line: 2640, type: !1206)
!3434 = !DILocalVariable(name: "old_lp", scope: !3435, file: !3, line: 2654, type: !1180)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 2653, column: 5)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 2652, column: 12)
!3437 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 2646, column: 7)
!3438 = !DILocalVariable(name: "new_lp", scope: !3435, file: !3, line: 2654, type: !1180)
!3439 = !DILocalVariable(name: "old_r", scope: !3440, file: !3, line: 2663, type: !1106)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 2662, column: 5)
!3441 = !DILocalVariable(name: "new_r", scope: !3440, file: !3, line: 2663, type: !1106)
!3442 = !DILocation(line: 0, scope: !3421)
!3443 = !DILocation(line: 2642, column: 8, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 2642, column: 7)
!3445 = !DILocation(line: 2642, column: 7, scope: !3421)
!3446 = !DILocation(line: 2645, column: 15, scope: !3421)
!3447 = !DILocation(line: 2646, column: 17, scope: !3437)
!3448 = !DILocation(line: 2646, column: 7, scope: !3421)
!3449 = !DILocation(line: 2648, column: 25, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 2648, column: 11)
!3451 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 2647, column: 5)
!3452 = !DILocation(line: 2648, column: 11, scope: !3451)
!3453 = !DILocation(line: 2652, column: 22, scope: !3436)
!3454 = !DILocation(line: 0, scope: !3436)
!3455 = !DILocation(line: 2652, column: 12, scope: !3437)
!3456 = !DILocation(line: 2656, column: 16, scope: !3435)
!3457 = !DILocation(line: 0, scope: !3435)
!3458 = !DILocation(line: 2657, column: 41, scope: !3435)
!3459 = !DILocation(line: 2657, column: 14, scope: !3435)
!3460 = !DILocation(line: 2658, column: 33, scope: !3435)
!3461 = !DILocation(line: 2659, column: 27, scope: !3435)
!3462 = !DILocation(line: 2660, column: 5, scope: !3435)
!3463 = !DILocation(line: 2665, column: 15, scope: !3440)
!3464 = !DILocation(line: 0, scope: !3440)
!3465 = !DILocation(line: 2666, column: 41, scope: !3440)
!3466 = !DILocation(line: 2666, column: 14, scope: !3440)
!3467 = !DILocation(line: 2667, column: 27, scope: !3440)
!3468 = !DILocation(line: 2668, column: 27, scope: !3440)
!3469 = !DILocation(line: 2668, column: 19, scope: !3440)
!3470 = !DILocation(line: 0, scope: !3437)
!3471 = !DILocation(line: 2671, column: 3, scope: !3421)
!3472 = !DILocation(line: 2672, column: 3, scope: !3421)
!3473 = !DILocation(line: 2673, column: 1, scope: !3421)
!3474 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_index", scope: !6, file: !6, line: 188, type: !3475, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3479)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!1180, !3477, !7}
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!3479 = !{!3480, !3481}
!3480 = !DILocalVariable(name: "vec_", arg: 1, scope: !3474, file: !6, line: 188, type: !3477)
!3481 = !DILocalVariable(name: "ix_", arg: 2, scope: !3474, file: !6, line: 188, type: !7)
!3482 = !DILocation(line: 0, scope: !3474)
!3483 = !DILocation(line: 188, column: 1, scope: !3474)
!3484 = distinct !DISubprogram(name: "VEC_eh_region_base_index", scope: !6, file: !6, line: 184, type: !3485, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3489)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!1106, !3487, !7}
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!3489 = !{!3490, !3491}
!3490 = !DILocalVariable(name: "vec_", arg: 1, scope: !3484, file: !6, line: 184, type: !3487)
!3491 = !DILocalVariable(name: "ix_", arg: 2, scope: !3484, file: !6, line: 184, type: !7)
!3492 = !DILocation(line: 0, scope: !3484)
!3493 = !DILocation(line: 184, column: 1, scope: !3484)
!3494 = distinct !DISubprogram(name: "maybe_duplicate_eh_stmt", scope: !3, file: !3, line: 2679, type: !3394, scopeLine: 2680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3495)
!3495 = !{!3496, !3497, !3498}
!3496 = !DILocalVariable(name: "new_stmt", arg: 1, scope: !3494, file: !3, line: 2679, type: !665)
!3497 = !DILocalVariable(name: "old_stmt", arg: 2, scope: !3494, file: !3, line: 2679, type: !665)
!3498 = !DILocalVariable(name: "lp_nr", scope: !3494, file: !3, line: 2681, type: !654)
!3499 = !DILocation(line: 0, scope: !3494)
!3500 = !DILocation(line: 2683, column: 8, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 2683, column: 7)
!3502 = !DILocation(line: 2683, column: 7, scope: !3494)
!3503 = !DILocation(line: 2686, column: 11, scope: !3494)
!3504 = !DILocation(line: 2687, column: 13, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 2687, column: 7)
!3506 = !DILocation(line: 2687, column: 7, scope: !3494)
!3507 = !DILocation(line: 2690, column: 3, scope: !3494)
!3508 = !DILocation(line: 2691, column: 3, scope: !3494)
!3509 = !DILocation(line: 2692, column: 1, scope: !3494)
!3510 = distinct !DISubprogram(name: "gate_refactor_eh", scope: !3, file: !3, line: 2829, type: !2157, scopeLine: 2830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!3511 = !DILocation(line: 2831, column: 10, scope: !3510)
!3512 = !DILocation(line: 2831, column: 26, scope: !3510)
!3513 = !DILocation(line: 2831, column: 3, scope: !3510)
!3514 = distinct !DISubprogram(name: "refactor_eh", scope: !3, file: !3, line: 2822, type: !2161, scopeLine: 2823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!3515 = !DILocation(line: 2824, column: 31, scope: !3514)
!3516 = !DILocation(line: 2824, column: 18, scope: !3514)
!3517 = !DILocation(line: 2824, column: 3, scope: !3514)
!3518 = !DILocation(line: 2825, column: 3, scope: !3514)
!3519 = distinct !DISubprogram(name: "gate_lower_resx", scope: !3, file: !3, line: 3035, type: !2157, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!3520 = !DILocation(line: 3037, column: 10, scope: !3519)
!3521 = !DILocation(line: 3037, column: 26, scope: !3519)
!3522 = !DILocation(line: 3037, column: 3, scope: !3519)
!3523 = distinct !DISubprogram(name: "execute_lower_resx", scope: !3, file: !3, line: 3004, type: !2161, scopeLine: 3005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3524)
!3524 = !{!3525, !3526, !3527, !3528, !3529}
!3525 = !DILocalVariable(name: "bb", scope: !3523, file: !3, line: 3006, type: !1270)
!3526 = !DILocalVariable(name: "mnt_map", scope: !3523, file: !3, line: 3007, type: !1331)
!3527 = !DILocalVariable(name: "dominance_invalidated", scope: !3523, file: !3, line: 3008, type: !653)
!3528 = !DILocalVariable(name: "any_rewritten", scope: !3523, file: !3, line: 3009, type: !653)
!3529 = !DILocalVariable(name: "last", scope: !3530, file: !3, line: 3015, type: !665)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 3014, column: 5)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 3013, column: 3)
!3532 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 3013, column: 3)
!3533 = !DILocation(line: 0, scope: !3523)
!3534 = !DILocation(line: 3011, column: 13, scope: !3523)
!3535 = !DILocation(line: 3013, column: 3, scope: !3532)
!3536 = !DILocation(line: 3013, column: 3, scope: !3531)
!3537 = !DILocation(line: 0, scope: !3532)
!3538 = !DILocation(line: 3015, column: 21, scope: !3530)
!3539 = !DILocation(line: 0, scope: !3530)
!3540 = !DILocation(line: 3016, column: 11, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 3016, column: 11)
!3542 = !DILocation(line: 3016, column: 16, scope: !3541)
!3543 = !DILocation(line: 3016, column: 19, scope: !3541)
!3544 = !DILocation(line: 3016, column: 11, scope: !3530)
!3545 = !DILocation(line: 3018, column: 29, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 3017, column: 2)
!3547 = !DILocation(line: 3018, column: 26, scope: !3546)
!3548 = !DILocation(line: 3020, column: 2, scope: !3546)
!3549 = !DILocation(line: 0, scope: !3531)
!3550 = distinct !{!3550, !3535, !3551}
!3551 = !DILocation(line: 3021, column: 5, scope: !3532)
!3552 = !DILocation(line: 3023, column: 3, scope: !3523)
!3553 = !DILocation(line: 3025, column: 7, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 3025, column: 7)
!3555 = !DILocation(line: 3025, column: 7, scope: !3523)
!3556 = !DILocation(line: 3027, column: 7, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 3026, column: 5)
!3558 = !DILocation(line: 3028, column: 7, scope: !3557)
!3559 = !DILocation(line: 3029, column: 5, scope: !3557)
!3560 = !DILocation(line: 3031, column: 10, scope: !3523)
!3561 = !DILocation(line: 3031, column: 3, scope: !3523)
!3562 = distinct !DISubprogram(name: "gate_lower_eh_dispatch", scope: !3, file: !3, line: 3235, type: !2157, scopeLine: 3236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!3563 = !DILocation(line: 3237, column: 10, scope: !3562)
!3564 = !DILocation(line: 3237, column: 16, scope: !3562)
!3565 = !DILocation(line: 3237, column: 20, scope: !3562)
!3566 = !DILocation(line: 3237, column: 32, scope: !3562)
!3567 = !DILocation(line: 3237, column: 3, scope: !3562)
!3568 = distinct !DISubprogram(name: "execute_lower_eh_dispatch", scope: !3, file: !3, line: 3211, type: !2161, scopeLine: 3212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3569)
!3569 = !{!3570, !3571, !3572, !3573}
!3570 = !DILocalVariable(name: "bb", scope: !3568, file: !3, line: 3213, type: !1270)
!3571 = !DILocalVariable(name: "any_rewritten", scope: !3568, file: !3, line: 3214, type: !653)
!3572 = !DILocalVariable(name: "redirected", scope: !3568, file: !3, line: 3215, type: !653)
!3573 = !DILocalVariable(name: "last", scope: !3574, file: !3, line: 3221, type: !665)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !3, line: 3220, column: 5)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 3219, column: 3)
!3576 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 3219, column: 3)
!3577 = !DILocation(line: 0, scope: !3568)
!3578 = !DILocation(line: 3217, column: 3, scope: !3568)
!3579 = !DILocation(line: 3219, column: 3, scope: !3576)
!3580 = !DILocation(line: 3219, column: 3, scope: !3575)
!3581 = !DILocation(line: 0, scope: !3576)
!3582 = !DILocation(line: 3221, column: 21, scope: !3574)
!3583 = !DILocation(line: 0, scope: !3574)
!3584 = !DILocation(line: 3222, column: 11, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 3222, column: 11)
!3586 = !DILocation(line: 3222, column: 16, scope: !3585)
!3587 = !DILocation(line: 3222, column: 19, scope: !3585)
!3588 = !DILocation(line: 3222, column: 38, scope: !3585)
!3589 = !DILocation(line: 3222, column: 11, scope: !3574)
!3590 = !DILocation(line: 3224, column: 18, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 3223, column: 2)
!3592 = !DILocation(line: 3224, column: 15, scope: !3591)
!3593 = !DILocation(line: 3226, column: 2, scope: !3591)
!3594 = !DILocation(line: 0, scope: !3575)
!3595 = distinct !{!3595, !3579, !3596}
!3596 = !DILocation(line: 3227, column: 5, scope: !3576)
!3597 = !DILocation(line: 3229, column: 7, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 3229, column: 7)
!3599 = !DILocation(line: 3229, column: 7, scope: !3568)
!3600 = !DILocation(line: 3230, column: 5, scope: !3598)
!3601 = !DILocation(line: 3231, column: 10, scope: !3568)
!3602 = !DILocation(line: 3231, column: 3, scope: !3568)
!3603 = distinct !DISubprogram(name: "gate_cleanup_eh", scope: !3, file: !3, line: 3877, type: !2157, scopeLine: 3878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!3604 = !DILocation(line: 3879, column: 10, scope: !3603)
!3605 = !DILocation(line: 3879, column: 16, scope: !3603)
!3606 = !DILocation(line: 3879, column: 19, scope: !3603)
!3607 = !DILocation(line: 3879, column: 27, scope: !3603)
!3608 = !DILocation(line: 3879, column: 40, scope: !3603)
!3609 = !DILocation(line: 3879, column: 52, scope: !3603)
!3610 = !DILocation(line: 3879, column: 3, scope: !3603)
!3611 = distinct !DISubprogram(name: "execute_cleanup_eh", scope: !3, file: !3, line: 3842, type: !2161, scopeLine: 3843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3612)
!3612 = !{!3613}
!3613 = !DILocalVariable(name: "changed", scope: !3614, file: !3, line: 3851, type: !653)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 3850, column: 5)
!3615 = distinct !DILexicalBlock(scope: !3611, file: !3, line: 3849, column: 7)
!3616 = !DILocation(line: 3846, column: 3, scope: !3611)
!3617 = !DILocation(line: 3849, column: 7, scope: !3615)
!3618 = !DILocation(line: 3849, column: 13, scope: !3615)
!3619 = !DILocation(line: 3849, column: 17, scope: !3615)
!3620 = !DILocation(line: 3849, column: 32, scope: !3615)
!3621 = !DILocation(line: 3849, column: 29, scope: !3615)
!3622 = !DILocation(line: 0, scope: !3614)
!3623 = !DILocation(line: 3853, column: 18, scope: !3614)
!3624 = !DILocation(line: 3854, column: 18, scope: !3614)
!3625 = !DILocation(line: 3854, column: 15, scope: !3614)
!3626 = !DILocation(line: 3856, column: 11, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 3856, column: 11)
!3628 = !DILocation(line: 3856, column: 11, scope: !3614)
!3629 = !DILocation(line: 3858, column: 4, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 3857, column: 2)
!3631 = !DILocation(line: 3859, column: 4, scope: !3630)
!3632 = !DILocation(line: 3863, column: 4, scope: !3630)
!3633 = !DILocation(line: 3867, column: 4, scope: !3630)
!3634 = !DILocation(line: 3869, column: 4, scope: !3630)
!3635 = !DILocation(line: 3873, column: 3, scope: !3611)
!3636 = !DILocation(line: 0, scope: !3611)
!3637 = !DILocation(line: 3874, column: 1, scope: !3611)
!3638 = distinct !DISubprogram(name: "verify_eh_edges", scope: !3, file: !3, line: 3904, type: !2728, scopeLine: 3905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3639)
!3639 = !{!3640, !3641, !3642, !3643, !3644, !3645, !3646}
!3640 = !DILocalVariable(name: "stmt", arg: 1, scope: !3638, file: !3, line: 3904, type: !665)
!3641 = !DILocalVariable(name: "bb", scope: !3638, file: !3, line: 3906, type: !1270)
!3642 = !DILocalVariable(name: "lp", scope: !3638, file: !3, line: 3907, type: !1180)
!3643 = !DILocalVariable(name: "lp_nr", scope: !3638, file: !3, line: 3908, type: !654)
!3644 = !DILocalVariable(name: "ei", scope: !3638, file: !3, line: 3909, type: !2911)
!3645 = !DILocalVariable(name: "e", scope: !3638, file: !3, line: 3910, type: !706)
!3646 = !DILocalVariable(name: "eh_edge", scope: !3638, file: !3, line: 3910, type: !706)
!3647 = !DILocation(line: 0, scope: !3638)
!3648 = !DILocation(line: 3906, column: 20, scope: !3638)
!3649 = !DILocation(line: 3909, column: 3, scope: !3638)
!3650 = !DILocation(line: 3910, column: 3, scope: !3638)
!3651 = !DILocation(line: 3912, column: 11, scope: !3638)
!3652 = !DILocation(line: 3913, column: 13, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 3913, column: 7)
!3654 = !DILocation(line: 3913, column: 7, scope: !3638)
!3655 = !DILocation(line: 3914, column: 10, scope: !3653)
!3656 = !DILocation(line: 3914, column: 5, scope: !3653)
!3657 = !DILocation(line: 3917, column: 3, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 3917, column: 3)
!3659 = !DILocation(line: 0, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 3917, column: 3)
!3661 = !DILocation(line: 3917, column: 3, scope: !3660)
!3662 = !DILocation(line: 3919, column: 11, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 3919, column: 11)
!3664 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 3918, column: 5)
!3665 = !DILocation(line: 3919, column: 14, scope: !3663)
!3666 = !DILocation(line: 3919, column: 20, scope: !3663)
!3667 = !DILocation(line: 3919, column: 11, scope: !3664)
!3668 = !DILocation(line: 3921, column: 8, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 3921, column: 8)
!3670 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 3920, column: 2)
!3671 = !DILocation(line: 3921, column: 8, scope: !3670)
!3672 = !DILocation(line: 3923, column: 50, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 3922, column: 6)
!3674 = !DILocation(line: 3923, column: 8, scope: !3673)
!3675 = !DILocation(line: 3924, column: 8, scope: !3673)
!3676 = !DILocation(line: 3928, column: 2, scope: !3670)
!3677 = distinct !{!3677, !3657, !3678}
!3678 = !DILocation(line: 3929, column: 5, scope: !3658)
!3679 = !DILocation(line: 3931, column: 10, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 3931, column: 7)
!3681 = !DILocation(line: 3931, column: 7, scope: !3638)
!3682 = !DILocation(line: 3933, column: 11, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 3933, column: 11)
!3684 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 3932, column: 5)
!3685 = !DILocation(line: 3933, column: 11, scope: !3684)
!3686 = !DILocation(line: 3935, column: 57, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 3934, column: 2)
!3688 = !DILocation(line: 3935, column: 4, scope: !3687)
!3689 = !DILocation(line: 3936, column: 4, scope: !3687)
!3690 = !DILocation(line: 3941, column: 8, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 3941, column: 7)
!3692 = !DILocation(line: 3941, column: 7, scope: !3638)
!3693 = !DILocation(line: 3943, column: 65, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 3942, column: 5)
!3695 = !DILocation(line: 3943, column: 7, scope: !3694)
!3696 = !DILocation(line: 3944, column: 7, scope: !3694)
!3697 = !DILocation(line: 3947, column: 15, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 3947, column: 7)
!3699 = !DILocation(line: 3947, column: 7, scope: !3638)
!3700 = !DILocation(line: 3949, column: 49, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 3948, column: 5)
!3702 = !DILocation(line: 3949, column: 7, scope: !3701)
!3703 = !DILocation(line: 3950, column: 7, scope: !3701)
!3704 = !DILocation(line: 3953, column: 16, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 3953, column: 7)
!3706 = !DILocation(line: 3953, column: 24, scope: !3705)
!3707 = !DILocation(line: 3953, column: 21, scope: !3705)
!3708 = !DILocation(line: 3953, column: 7, scope: !3638)
!3709 = !DILocation(line: 3955, column: 46, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 3954, column: 5)
!3711 = !DILocation(line: 3955, column: 62, scope: !3710)
!3712 = !DILocation(line: 3955, column: 68, scope: !3710)
!3713 = !DILocation(line: 3955, column: 7, scope: !3710)
!3714 = !DILocation(line: 3956, column: 7, scope: !3710)
!3715 = !DILocation(line: 3960, column: 1, scope: !3638)
!3716 = distinct !DISubprogram(name: "ei_start_1", scope: !369, file: !369, line: 696, type: !3717, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3719)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!2911, !2916}
!3719 = !{!3720, !3721}
!3720 = !DILocalVariable(name: "ev", arg: 1, scope: !3716, file: !369, line: 696, type: !2916)
!3721 = !DILocalVariable(name: "i", scope: !3716, file: !369, line: 698, type: !2911)
!3722 = !DILocation(line: 0, scope: !3716)
!3723 = !DILocation(line: 700, column: 5, scope: !3716)
!3724 = !DILocation(line: 700, column: 11, scope: !3716)
!3725 = !DILocation(line: 701, column: 5, scope: !3716)
!3726 = !DILocation(line: 701, column: 15, scope: !3716)
!3727 = !DILocation(line: 703, column: 3, scope: !3716)
!3728 = distinct !DISubprogram(name: "ei_cond", scope: !369, file: !369, line: 771, type: !3729, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3732)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!653, !2911, !3731}
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!3732 = !{!3733, !3734}
!3733 = !DILocalVariable(name: "ei", arg: 1, scope: !3728, file: !369, line: 771, type: !2911)
!3734 = !DILocalVariable(name: "p", arg: 2, scope: !3728, file: !369, line: 771, type: !3731)
!3735 = !DILocation(line: 0, scope: !3728)
!3736 = !DILocation(line: 773, column: 8, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3728, file: !369, line: 773, column: 7)
!3738 = !DILocation(line: 773, column: 7, scope: !3728)
!3739 = !DILocation(line: 775, column: 12, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3737, file: !369, line: 774, column: 5)
!3741 = !DILocation(line: 776, column: 7, scope: !3740)
!3742 = !DILocation(line: 781, column: 7, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3737, file: !369, line: 779, column: 5)
!3744 = !DILocation(line: 0, scope: !3737)
!3745 = !DILocation(line: 783, column: 1, scope: !3728)
!3746 = distinct !DISubprogram(name: "ei_next", scope: !369, file: !369, line: 736, type: !3747, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3750)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{null, !3749}
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!3750 = !{!3751}
!3751 = !DILocalVariable(name: "i", arg: 1, scope: !3746, file: !369, line: 736, type: !3749)
!3752 = !DILocation(line: 0, scope: !3746)
!3753 = !DILocation(line: 738, column: 3, scope: !3746)
!3754 = !DILocation(line: 739, column: 11, scope: !3746)
!3755 = !DILocation(line: 740, column: 1, scope: !3746)
!3756 = distinct !DISubprogram(name: "verify_eh_dispatch_edge", scope: !3, file: !3, line: 3965, type: !2728, scopeLine: 3966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3757)
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766}
!3758 = !DILocalVariable(name: "stmt", arg: 1, scope: !3756, file: !3, line: 3965, type: !665)
!3759 = !DILocalVariable(name: "r", scope: !3756, file: !3, line: 3967, type: !1106)
!3760 = !DILocalVariable(name: "c", scope: !3756, file: !3, line: 3968, type: !2814)
!3761 = !DILocalVariable(name: "src", scope: !3756, file: !3, line: 3969, type: !1270)
!3762 = !DILocalVariable(name: "dst", scope: !3756, file: !3, line: 3969, type: !1270)
!3763 = !DILocalVariable(name: "want_fallthru", scope: !3756, file: !3, line: 3970, type: !653)
!3764 = !DILocalVariable(name: "ei", scope: !3756, file: !3, line: 3971, type: !2911)
!3765 = !DILocalVariable(name: "e", scope: !3756, file: !3, line: 3972, type: !706)
!3766 = !DILocalVariable(name: "fall_edge", scope: !3756, file: !3, line: 3972, type: !706)
!3767 = !DILocation(line: 0, scope: !3756)
!3768 = !DILocation(line: 3971, column: 3, scope: !3756)
!3769 = !DILocation(line: 3972, column: 3, scope: !3756)
!3770 = !DILocation(line: 3974, column: 34, scope: !3756)
!3771 = !DILocation(line: 3974, column: 7, scope: !3756)
!3772 = !DILocation(line: 3975, column: 9, scope: !3756)
!3773 = !DILocation(line: 3977, column: 3, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 3977, column: 3)
!3775 = !DILocation(line: 0, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 3977, column: 3)
!3777 = !DILocation(line: 3977, column: 3, scope: !3776)
!3778 = !DILocation(line: 3978, column: 5, scope: !3776)
!3779 = distinct !{!3779, !3773, !3780}
!3780 = !DILocation(line: 3978, column: 5, scope: !3774)
!3781 = !DILocation(line: 3980, column: 14, scope: !3756)
!3782 = !DILocation(line: 3980, column: 3, scope: !3756)
!3783 = !DILocation(line: 3983, column: 19, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 3983, column: 7)
!3785 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 3981, column: 5)
!3786 = !DILocation(line: 3983, column: 28, scope: !3784)
!3787 = !DILocation(line: 3983, column: 12, scope: !3784)
!3788 = !DILocation(line: 0, scope: !3784)
!3789 = !DILocation(line: 3983, column: 7, scope: !3784)
!3790 = !DILocation(line: 3985, column: 10, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 3984, column: 2)
!3792 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 3983, column: 7)
!3793 = !DILocation(line: 3986, column: 8, scope: !3791)
!3794 = !DILocation(line: 3986, column: 6, scope: !3791)
!3795 = !DILocation(line: 3987, column: 10, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 3987, column: 8)
!3797 = !DILocation(line: 3987, column: 8, scope: !3791)
!3798 = !DILocation(line: 3989, column: 48, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 3988, column: 6)
!3800 = !DILocation(line: 3989, column: 8, scope: !3799)
!3801 = !DILocation(line: 3990, column: 8, scope: !3799)
!3802 = !DILocation(line: 3992, column: 7, scope: !3791)
!3803 = !DILocation(line: 3992, column: 11, scope: !3791)
!3804 = !DILocation(line: 3995, column: 11, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 3995, column: 8)
!3806 = !DILocation(line: 3995, column: 21, scope: !3805)
!3807 = !DILocation(line: 3995, column: 8, scope: !3791)
!3808 = !DILocation(line: 3983, column: 52, scope: !3792)
!3809 = !DILocation(line: 3983, column: 7, scope: !3792)
!3810 = distinct !{!3810, !3789, !3811}
!3811 = !DILocation(line: 4000, column: 2, scope: !3784)
!3812 = !DILocation(line: 4004, column: 13, scope: !3785)
!3813 = !DILocation(line: 4005, column: 11, scope: !3785)
!3814 = !DILocation(line: 4005, column: 9, scope: !3785)
!3815 = !DILocation(line: 4006, column: 13, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 4006, column: 11)
!3817 = !DILocation(line: 4006, column: 11, scope: !3785)
!3818 = !DILocation(line: 4008, column: 44, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 4007, column: 2)
!3820 = !DILocation(line: 4008, column: 4, scope: !3819)
!3821 = !DILocation(line: 4009, column: 4, scope: !3819)
!3822 = !DILocation(line: 4011, column: 10, scope: !3785)
!3823 = !DILocation(line: 4011, column: 14, scope: !3785)
!3824 = !DILocation(line: 4012, column: 7, scope: !3785)
!3825 = !DILocation(line: 4015, column: 7, scope: !3785)
!3826 = !DILocation(line: 4016, column: 5, scope: !3785)
!3827 = !DILocation(line: 4019, column: 3, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 4019, column: 3)
!3829 = !DILocation(line: 4019, column: 3, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 4019, column: 3)
!3831 = !DILocation(line: 4021, column: 11, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 4021, column: 11)
!3833 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 4020, column: 5)
!3834 = !DILocation(line: 4021, column: 14, scope: !3832)
!3835 = !DILocation(line: 4021, column: 20, scope: !3832)
!3836 = !DILocation(line: 4021, column: 11, scope: !3833)
!3837 = !DILocation(line: 4023, column: 18, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 4023, column: 8)
!3839 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 4022, column: 2)
!3840 = !DILocation(line: 4023, column: 8, scope: !3839)
!3841 = !DILocation(line: 4025, column: 53, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 4024, column: 6)
!3843 = !DILocation(line: 4025, column: 8, scope: !3842)
!3844 = !DILocation(line: 4026, column: 8, scope: !3842)
!3845 = !DILocation(line: 4029, column: 2, scope: !3839)
!3846 = !DILocation(line: 4030, column: 19, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 4030, column: 16)
!3848 = !DILocation(line: 4030, column: 16, scope: !3847)
!3849 = !DILocation(line: 4030, column: 16, scope: !3832)
!3850 = !DILocation(line: 4031, column: 9, scope: !3847)
!3851 = !DILocation(line: 4034, column: 44, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 4033, column: 2)
!3853 = !DILocation(line: 4034, column: 4, scope: !3852)
!3854 = !DILocation(line: 4035, column: 4, scope: !3852)
!3855 = distinct !{!3855, !3827, !3856}
!3856 = !DILocation(line: 4037, column: 5, scope: !3828)
!3857 = !DILocation(line: 4038, column: 18, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 4038, column: 7)
!3859 = !DILocation(line: 4038, column: 27, scope: !3858)
!3860 = !DILocation(line: 4038, column: 7, scope: !3756)
!3861 = !DILocation(line: 4040, column: 56, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3858, file: !3, line: 4039, column: 5)
!3863 = !DILocation(line: 4040, column: 7, scope: !3862)
!3864 = !DILocation(line: 4041, column: 7, scope: !3862)
!3865 = !DILocation(line: 4045, column: 1, scope: !3756)
!3866 = distinct !DISubprogram(name: "collect_finally_tree_1", scope: !3, file: !3, line: 246, type: !3867, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3869)
!3867 = !DISubroutineType(types: !3868)
!3868 = !{null, !716, !665}
!3869 = !{!3870, !3871, !3872}
!3870 = !DILocalVariable(name: "seq", arg: 1, scope: !3866, file: !3, line: 246, type: !716)
!3871 = !DILocalVariable(name: "region", arg: 2, scope: !3866, file: !3, line: 246, type: !665)
!3872 = !DILocalVariable(name: "gsi", scope: !3866, file: !3, line: 248, type: !3873)
!3873 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !568, line: 265, baseType: !3874)
!3874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !568, line: 254, size: 192, elements: !3875)
!3875 = !{!3876, !3877, !3878}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3874, file: !568, line: 257, baseType: !721, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3874, file: !568, line: 263, baseType: !716, size: 64, offset: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3874, file: !568, line: 264, baseType: !1270, size: 64, offset: 128)
!3879 = !DILocation(line: 0, scope: !3866)
!3880 = !DILocation(line: 248, column: 3, scope: !3866)
!3881 = !DILocation(line: 250, column: 14, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 250, column: 3)
!3883 = !DILocation(line: 250, column: 8, scope: !3882)
!3884 = !DILocation(line: 250, column: 32, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 250, column: 3)
!3886 = !DILocation(line: 250, column: 31, scope: !3885)
!3887 = !DILocation(line: 250, column: 3, scope: !3882)
!3888 = !DILocation(line: 251, column: 27, scope: !3885)
!3889 = !DILocation(line: 251, column: 5, scope: !3885)
!3890 = !DILocation(line: 250, column: 49, scope: !3885)
!3891 = !DILocation(line: 250, column: 3, scope: !3885)
!3892 = distinct !{!3892, !3887, !3893}
!3893 = !DILocation(line: 251, column: 49, scope: !3882)
!3894 = !DILocation(line: 252, column: 1, scope: !3866)
!3895 = distinct !DISubprogram(name: "lower_eh_constructs_1", scope: !3, file: !3, line: 1979, type: !3896, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3898)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{null, !2090, !716}
!3898 = !{!3899, !3900, !3901}
!3899 = !DILocalVariable(name: "state", arg: 1, scope: !3895, file: !3, line: 1979, type: !2090)
!3900 = !DILocalVariable(name: "seq", arg: 2, scope: !3895, file: !3, line: 1979, type: !716)
!3901 = !DILocalVariable(name: "gsi", scope: !3895, file: !3, line: 1981, type: !3873)
!3902 = !DILocation(line: 0, scope: !3895)
!3903 = !DILocation(line: 1981, column: 3, scope: !3895)
!3904 = !DILocation(line: 1982, column: 14, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 1982, column: 3)
!3906 = !DILocation(line: 1982, column: 8, scope: !3905)
!3907 = !DILocation(line: 1982, column: 32, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 1982, column: 3)
!3909 = !DILocation(line: 1982, column: 31, scope: !3908)
!3910 = !DILocation(line: 1982, column: 3, scope: !3905)
!3911 = !DILocation(line: 1983, column: 5, scope: !3908)
!3912 = !DILocation(line: 1982, column: 3, scope: !3908)
!3913 = distinct !{!3913, !3910, !3914}
!3914 = !DILocation(line: 1983, column: 39, scope: !3905)
!3915 = !DILocation(line: 1984, column: 1, scope: !3895)
!3916 = distinct !DISubprogram(name: "gsi_start", scope: !568, file: !568, line: 4403, type: !3917, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3919)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!3873, !716}
!3919 = !{!3920, !3921}
!3920 = !DILocalVariable(name: "seq", arg: 1, scope: !3916, file: !568, line: 4403, type: !716)
!3921 = !DILocalVariable(name: "i", scope: !3916, file: !568, line: 4405, type: !3873)
!3922 = !DILocation(line: 0, scope: !3916)
!3923 = !DILocation(line: 4405, column: 24, scope: !3916)
!3924 = !DILocation(line: 4407, column: 11, scope: !3916)
!3925 = !DILocation(line: 4407, column: 5, scope: !3916)
!3926 = !DILocation(line: 4407, column: 9, scope: !3916)
!3927 = !DILocation(line: 4408, column: 5, scope: !3916)
!3928 = !DILocation(line: 4408, column: 9, scope: !3916)
!3929 = !DILocation(line: 4409, column: 11, scope: !3916)
!3930 = !DILocation(line: 4409, column: 17, scope: !3916)
!3931 = !DILocation(line: 4409, column: 27, scope: !3916)
!3932 = !DILocation(line: 4409, column: 20, scope: !3916)
!3933 = !DILocation(line: 4409, column: 10, scope: !3916)
!3934 = !DILocation(line: 4409, column: 35, scope: !3916)
!3935 = !DILocation(line: 4409, column: 5, scope: !3916)
!3936 = !DILocation(line: 4409, column: 8, scope: !3916)
!3937 = !DILocation(line: 4411, column: 3, scope: !3916)
!3938 = distinct !DISubprogram(name: "gsi_end_p", scope: !568, file: !568, line: 4467, type: !3939, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3941)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!653, !3873}
!3941 = !{!3942}
!3942 = !DILocalVariable(name: "i", arg: 1, scope: !3938, file: !568, line: 4467, type: !3873)
!3943 = !DILocation(line: 4467, column: 33, scope: !3938)
!3944 = !DILocation(line: 4469, column: 12, scope: !3938)
!3945 = !DILocation(line: 4469, column: 16, scope: !3938)
!3946 = !DILocation(line: 4469, column: 10, scope: !3938)
!3947 = !DILocation(line: 4469, column: 3, scope: !3938)
!3948 = distinct !DISubprogram(name: "collect_finally_tree", scope: !3, file: !3, line: 255, type: !3949, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3951)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{null, !665, !665}
!3951 = !{!3952, !3953, !3954}
!3952 = !DILocalVariable(name: "stmt", arg: 1, scope: !3948, file: !3, line: 255, type: !665)
!3953 = !DILocalVariable(name: "region", arg: 2, scope: !3948, file: !3, line: 255, type: !665)
!3954 = !DILocalVariable(name: "temp", scope: !3948, file: !3, line: 257, type: !2065)
!3955 = !DILocation(line: 0, scope: !3948)
!3956 = !DILocation(line: 259, column: 11, scope: !3948)
!3957 = !DILocation(line: 259, column: 3, scope: !3948)
!3958 = !DILocation(line: 262, column: 16, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 260, column: 5)
!3960 = !DILocation(line: 263, column: 7, scope: !3959)
!3961 = !DILocation(line: 264, column: 7, scope: !3959)
!3962 = !DILocation(line: 267, column: 11, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 267, column: 11)
!3964 = !DILocation(line: 267, column: 34, scope: !3963)
!3965 = !DILocation(line: 267, column: 11, scope: !3959)
!3966 = !DILocation(line: 270, column: 11, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 268, column: 9)
!3968 = !DILocation(line: 271, column: 35, scope: !3967)
!3969 = !DILocation(line: 271, column: 11, scope: !3967)
!3970 = !DILocation(line: 272, column: 28, scope: !3967)
!3971 = !DILocation(line: 272, column: 4, scope: !3967)
!3972 = !DILocation(line: 273, column: 9, scope: !3967)
!3973 = !DILocation(line: 274, column: 16, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 274, column: 16)
!3975 = !DILocation(line: 274, column: 39, scope: !3974)
!3976 = !DILocation(line: 274, column: 16, scope: !3963)
!3977 = !DILocation(line: 276, column: 35, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 275, column: 9)
!3979 = !DILocation(line: 276, column: 11, scope: !3978)
!3980 = !DILocation(line: 277, column: 35, scope: !3978)
!3981 = !DILocation(line: 277, column: 11, scope: !3978)
!3982 = !DILocation(line: 278, column: 9, scope: !3978)
!3983 = !DILocation(line: 282, column: 31, scope: !3959)
!3984 = !DILocation(line: 282, column: 7, scope: !3959)
!3985 = !DILocation(line: 283, column: 7, scope: !3959)
!3986 = !DILocation(line: 286, column: 31, scope: !3959)
!3987 = !DILocation(line: 286, column: 7, scope: !3959)
!3988 = !DILocation(line: 287, column: 7, scope: !3959)
!3989 = !DILocation(line: 294, column: 1, scope: !3948)
!3990 = distinct !DISubprogram(name: "gsi_stmt", scope: !568, file: !568, line: 4501, type: !3991, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3993)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!665, !3873}
!3993 = !{!3994}
!3994 = !DILocalVariable(name: "i", arg: 1, scope: !3990, file: !568, line: 4501, type: !3873)
!3995 = !DILocation(line: 4501, column: 32, scope: !3990)
!3996 = !DILocation(line: 4503, column: 12, scope: !3990)
!3997 = !DILocation(line: 4503, column: 17, scope: !3990)
!3998 = !DILocation(line: 4503, column: 3, scope: !3990)
!3999 = distinct !DISubprogram(name: "gsi_next", scope: !568, file: !568, line: 4485, type: !4000, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4003)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !4002}
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!4003 = !{!4004}
!4004 = !DILocalVariable(name: "i", arg: 1, scope: !3999, file: !568, line: 4485, type: !4002)
!4005 = !DILocation(line: 0, scope: !3999)
!4006 = !DILocation(line: 4487, column: 15, scope: !3999)
!4007 = !DILocation(line: 4487, column: 20, scope: !3999)
!4008 = !DILocation(line: 4487, column: 10, scope: !3999)
!4009 = !DILocation(line: 4488, column: 1, scope: !3999)
!4010 = distinct !DISubprogram(name: "gimple_seq_first", scope: !568, file: !568, line: 159, type: !4011, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4016)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!721, !4013}
!4013 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !666, line: 67, baseType: !4014)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !718)
!4016 = !{!4017}
!4017 = !DILocalVariable(name: "s", arg: 1, scope: !4010, file: !568, line: 159, type: !4013)
!4018 = !DILocation(line: 0, scope: !4010)
!4019 = !DILocation(line: 161, column: 10, scope: !4010)
!4020 = !DILocation(line: 161, column: 17, scope: !4010)
!4021 = !DILocation(line: 161, column: 3, scope: !4010)
!4022 = distinct !DISubprogram(name: "gimple_label_label", scope: !568, file: !568, line: 2444, type: !4023, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4025)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!847, !2851}
!4025 = !{!4026}
!4026 = !DILocalVariable(name: "gs", arg: 1, scope: !4022, file: !568, line: 2444, type: !2851)
!4027 = !DILocation(line: 0, scope: !4022)
!4028 = !DILocation(line: 2447, column: 10, scope: !4022)
!4029 = !DILocation(line: 2447, column: 3, scope: !4022)
!4030 = distinct !DISubprogram(name: "record_in_finally_tree", scope: !3, file: !3, line: 225, type: !4031, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4033)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{null, !2065, !665}
!4033 = !{!4034, !4035, !4036, !4037}
!4034 = !DILocalVariable(name: "child", arg: 1, scope: !4030, file: !3, line: 225, type: !2065)
!4035 = !DILocalVariable(name: "parent", arg: 2, scope: !4030, file: !3, line: 225, type: !665)
!4036 = !DILocalVariable(name: "n", scope: !4030, file: !3, line: 227, type: !2061)
!4037 = !DILocalVariable(name: "slot", scope: !4030, file: !3, line: 228, type: !1206)
!4038 = !DILocation(line: 0, scope: !4030)
!4039 = !DILocation(line: 230, column: 7, scope: !4030)
!4040 = !DILocation(line: 231, column: 14, scope: !4030)
!4041 = !DILocation(line: 232, column: 6, scope: !4030)
!4042 = !DILocation(line: 232, column: 13, scope: !4030)
!4043 = !DILocation(line: 234, column: 26, scope: !4030)
!4044 = !DILocation(line: 234, column: 10, scope: !4030)
!4045 = !DILocation(line: 235, column: 3, scope: !4030)
!4046 = !DILocation(line: 236, column: 9, scope: !4030)
!4047 = !DILocation(line: 237, column: 1, scope: !4030)
!4048 = distinct !DISubprogram(name: "gimple_try_kind", scope: !568, file: !568, line: 2921, type: !4049, scopeLine: 2922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4051)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!632, !2851}
!4051 = !{!4052}
!4052 = !DILocalVariable(name: "gs", arg: 1, scope: !4048, file: !568, line: 2921, type: !2851)
!4053 = !DILocation(line: 0, scope: !4048)
!4054 = !DILocation(line: 2924, column: 46, scope: !4048)
!4055 = !DILocation(line: 2924, column: 54, scope: !4048)
!4056 = !DILocation(line: 2924, column: 3, scope: !4048)
!4057 = distinct !DISubprogram(name: "gimple_try_eval", scope: !568, file: !568, line: 2953, type: !4058, scopeLine: 2954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4060)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!716, !665}
!4060 = !{!4061}
!4061 = !DILocalVariable(name: "gs", arg: 1, scope: !4057, file: !568, line: 2953, type: !665)
!4062 = !DILocation(line: 0, scope: !4057)
!4063 = !DILocation(line: 2956, column: 25, scope: !4057)
!4064 = !DILocation(line: 2956, column: 3, scope: !4057)
!4065 = distinct !DISubprogram(name: "gimple_try_cleanup", scope: !568, file: !568, line: 2964, type: !4058, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4066)
!4066 = !{!4067}
!4067 = !DILocalVariable(name: "gs", arg: 1, scope: !4065, file: !568, line: 2964, type: !665)
!4068 = !DILocation(line: 0, scope: !4065)
!4069 = !DILocation(line: 2967, column: 25, scope: !4065)
!4070 = !DILocation(line: 2967, column: 3, scope: !4065)
!4071 = distinct !DISubprogram(name: "gimple_catch_handler", scope: !568, file: !568, line: 2806, type: !4058, scopeLine: 2807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4072)
!4072 = !{!4073}
!4073 = !DILocalVariable(name: "gs", arg: 1, scope: !4071, file: !568, line: 2806, type: !665)
!4074 = !DILocation(line: 0, scope: !4071)
!4075 = !DILocation(line: 2809, column: 27, scope: !4071)
!4076 = !DILocation(line: 2809, column: 3, scope: !4071)
!4077 = distinct !DISubprogram(name: "gimple_eh_filter_failure", scope: !568, file: !568, line: 2869, type: !4058, scopeLine: 2870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4078)
!4078 = !{!4079}
!4079 = !DILocalVariable(name: "gs", arg: 1, scope: !4077, file: !568, line: 2869, type: !665)
!4080 = !DILocation(line: 0, scope: !4077)
!4081 = !DILocation(line: 2872, column: 31, scope: !4077)
!4082 = !DILocation(line: 2872, column: 3, scope: !4077)
!4083 = distinct !DISubprogram(name: "gimple_op", scope: !568, file: !568, line: 1631, type: !4084, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4086)
!4084 = !DISubroutineType(types: !4085)
!4085 = !{!847, !2851, !7}
!4086 = !{!4087, !4088}
!4087 = !DILocalVariable(name: "gs", arg: 1, scope: !4083, file: !568, line: 1631, type: !2851)
!4088 = !DILocalVariable(name: "i", arg: 2, scope: !4083, file: !568, line: 1631, type: !7)
!4089 = !DILocation(line: 0, scope: !4083)
!4090 = !DILocation(line: 1633, column: 7, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4083, file: !568, line: 1633, column: 7)
!4092 = !DILocation(line: 1633, column: 7, scope: !4083)
!4093 = !DILocation(line: 1638, column: 14, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4091, file: !568, line: 1634, column: 5)
!4095 = !DILocation(line: 1638, column: 7, scope: !4094)
!4096 = !DILocation(line: 0, scope: !4091)
!4097 = !DILocation(line: 1642, column: 1, scope: !4083)
!4098 = distinct !DISubprogram(name: "gimple_has_ops", scope: !568, file: !568, line: 1274, type: !3300, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4099)
!4099 = !{!4100}
!4100 = !DILocalVariable(name: "g", arg: 1, scope: !4098, file: !568, line: 1274, type: !2851)
!4101 = !DILocation(line: 0, scope: !4098)
!4102 = !DILocation(line: 1276, column: 10, scope: !4098)
!4103 = !DILocation(line: 1276, column: 26, scope: !4098)
!4104 = !DILocation(line: 1276, column: 41, scope: !4098)
!4105 = !DILocation(line: 1276, column: 44, scope: !4098)
!4106 = !DILocation(line: 1276, column: 60, scope: !4098)
!4107 = !DILocation(line: 1276, column: 3, scope: !4098)
!4108 = distinct !DISubprogram(name: "gimple_ops", scope: !568, file: !568, line: 1614, type: !4109, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4111)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!1355, !665}
!4111 = !{!4112, !4113}
!4112 = !DILocalVariable(name: "gs", arg: 1, scope: !4108, file: !568, line: 1614, type: !665)
!4113 = !DILocalVariable(name: "off", scope: !4108, file: !568, line: 1616, type: !1208)
!4114 = !DILocation(line: 0, scope: !4108)
!4115 = !DILocation(line: 1621, column: 28, scope: !4108)
!4116 = !DILocation(line: 1621, column: 9, scope: !4108)
!4117 = !DILocation(line: 1622, column: 3, scope: !4108)
!4118 = !DILocation(line: 1624, column: 20, scope: !4108)
!4119 = !DILocation(line: 1624, column: 32, scope: !4108)
!4120 = !DILocation(line: 1624, column: 10, scope: !4108)
!4121 = !DILocation(line: 1624, column: 3, scope: !4108)
!4122 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !568, file: !568, line: 1073, type: !4123, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4125)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!567, !665}
!4125 = !{!4126}
!4126 = !DILocalVariable(name: "gs", arg: 1, scope: !4122, file: !568, line: 1073, type: !665)
!4127 = !DILocation(line: 0, scope: !4122)
!4128 = !DILocation(line: 1075, column: 24, scope: !4122)
!4129 = !DILocation(line: 1075, column: 10, scope: !4122)
!4130 = !DILocation(line: 1075, column: 3, scope: !4122)
!4131 = distinct !DISubprogram(name: "gss_for_code", scope: !568, file: !568, line: 1061, type: !4132, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4134)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!567, !594}
!4134 = !{!4135}
!4135 = !DILocalVariable(name: "code", arg: 1, scope: !4131, file: !568, line: 1061, type: !594)
!4136 = !DILocation(line: 0, scope: !4131)
!4137 = !DILocation(line: 1066, column: 10, scope: !4131)
!4138 = !DILocation(line: 1066, column: 3, scope: !4131)
!4139 = distinct !DISubprogram(name: "lower_eh_constructs_2", scope: !3, file: !3, line: 1834, type: !4140, scopeLine: 1835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4142)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{null, !2090, !4002}
!4142 = !{!4143, !4144, !4145, !4146, !4147, !4148, !4151, !4152, !4153, !4158, !4161, !4162, !4163}
!4143 = !DILocalVariable(name: "state", arg: 1, scope: !4139, file: !3, line: 1834, type: !2090)
!4144 = !DILocalVariable(name: "gsi", arg: 2, scope: !4139, file: !3, line: 1834, type: !4002)
!4145 = !DILocalVariable(name: "replace", scope: !4139, file: !3, line: 1836, type: !716)
!4146 = !DILocalVariable(name: "x", scope: !4139, file: !3, line: 1837, type: !665)
!4147 = !DILocalVariable(name: "stmt", scope: !4139, file: !3, line: 1838, type: !665)
!4148 = !DILocalVariable(name: "fndecl", scope: !4149, file: !3, line: 1844, type: !847)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1843, column: 7)
!4150 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1841, column: 5)
!4151 = !DILocalVariable(name: "rhs", scope: !4149, file: !3, line: 1845, type: !847)
!4152 = !DILocalVariable(name: "lhs", scope: !4149, file: !3, line: 1845, type: !847)
!4153 = !DILocalVariable(name: "nr", scope: !4154, file: !3, line: 1856, type: !847)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 1855, column: 3)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 1854, column: 12)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 1849, column: 6)
!4157 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1847, column: 6)
!4158 = !DILocalVariable(name: "lhs", scope: !4159, file: !3, line: 1901, type: !847)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !3, line: 1900, column: 2)
!4160 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1895, column: 11)
!4161 = !DILocalVariable(name: "tmp", scope: !4159, file: !3, line: 1902, type: !847)
!4162 = !DILocalVariable(name: "s", scope: !4159, file: !3, line: 1903, type: !665)
!4163 = !DILabel(scope: !4156, name: "do_replace", file: !3, line: 1872)
!4164 = !DILocation(line: 0, scope: !4139)
!4165 = !DILocation(line: 1838, column: 17, scope: !4139)
!4166 = !DILocation(line: 1840, column: 11, scope: !4139)
!4167 = !DILocation(line: 1840, column: 3, scope: !4139)
!4168 = !DILocation(line: 1844, column: 16, scope: !4149)
!4169 = !DILocation(line: 0, scope: !4149)
!4170 = !DILocation(line: 1847, column: 6, scope: !4157)
!4171 = !DILocation(line: 1847, column: 13, scope: !4157)
!4172 = !DILocation(line: 1847, column: 16, scope: !4157)
!4173 = !DILocation(line: 1847, column: 45, scope: !4157)
!4174 = !DILocation(line: 1847, column: 6, scope: !4149)
!4175 = !DILocation(line: 1848, column: 12, scope: !4157)
!4176 = !DILocation(line: 1848, column: 4, scope: !4157)
!4177 = !DILocation(line: 1854, column: 19, scope: !4155)
!4178 = !DILocation(line: 1854, column: 12, scope: !4155)
!4179 = !DILocation(line: 1854, column: 12, scope: !4156)
!4180 = !DILocation(line: 1856, column: 55, scope: !4154)
!4181 = !DILocation(line: 1856, column: 36, scope: !4154)
!4182 = !DILocation(line: 1856, column: 15, scope: !4154)
!4183 = !DILocation(line: 0, scope: !4154)
!4184 = !DILocation(line: 1857, column: 5, scope: !4154)
!4185 = !DILocation(line: 1865, column: 8, scope: !4156)
!4186 = !DILocation(line: 1862, column: 26, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 1860, column: 3)
!4188 = !DILocation(line: 1862, column: 11, scope: !4187)
!4189 = !DILocation(line: 1863, column: 5, scope: !4187)
!4190 = !DILocation(line: 1871, column: 29, scope: !4156)
!4191 = !DILocation(line: 1871, column: 14, scope: !4156)
!4192 = !DILocation(line: 1871, column: 8, scope: !4156)
!4193 = !DILocation(line: 0, scope: !4156)
!4194 = !DILocation(line: 1872, column: 6, scope: !4156)
!4195 = !DILocation(line: 1873, column: 14, scope: !4156)
!4196 = !DILocation(line: 1874, column: 12, scope: !4156)
!4197 = !DILocation(line: 1875, column: 8, scope: !4156)
!4198 = !DILocation(line: 1880, column: 8, scope: !4156)
!4199 = !DILocation(line: 1881, column: 8, scope: !4156)
!4200 = !DILocation(line: 1895, column: 11, scope: !4160)
!4201 = !DILocation(line: 1896, column: 4, scope: !4160)
!4202 = !DILocation(line: 1896, column: 7, scope: !4160)
!4203 = !DILocation(line: 1897, column: 4, scope: !4160)
!4204 = !DILocation(line: 1897, column: 7, scope: !4160)
!4205 = !DILocation(line: 1898, column: 4, scope: !4160)
!4206 = !DILocation(line: 1898, column: 28, scope: !4160)
!4207 = !DILocation(line: 1898, column: 8, scope: !4160)
!4208 = !DILocation(line: 1899, column: 4, scope: !4160)
!4209 = !DILocation(line: 1899, column: 27, scope: !4160)
!4210 = !DILocation(line: 1899, column: 7, scope: !4160)
!4211 = !DILocation(line: 1895, column: 11, scope: !4150)
!4212 = !DILocation(line: 1901, column: 15, scope: !4159)
!4213 = !DILocation(line: 0, scope: !4159)
!4214 = !DILocation(line: 1902, column: 31, scope: !4159)
!4215 = !DILocation(line: 1902, column: 15, scope: !4159)
!4216 = !DILocation(line: 1903, column: 15, scope: !4159)
!4217 = !DILocation(line: 1904, column: 28, scope: !4159)
!4218 = !DILocation(line: 1904, column: 4, scope: !4159)
!4219 = !DILocation(line: 1905, column: 25, scope: !4159)
!4220 = !DILocation(line: 1905, column: 4, scope: !4159)
!4221 = !DILocation(line: 1906, column: 4, scope: !4159)
!4222 = !DILocation(line: 1907, column: 8, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 1907, column: 8)
!4224 = !DILocation(line: 1907, column: 36, scope: !4223)
!4225 = !DILocation(line: 1908, column: 8, scope: !4223)
!4226 = !DILocation(line: 1908, column: 39, scope: !4223)
!4227 = !DILocation(line: 1907, column: 8, scope: !4159)
!4228 = !DILocation(line: 1909, column: 6, scope: !4223)
!4229 = !DILocation(line: 1909, column: 30, scope: !4223)
!4230 = !DILocation(line: 1910, column: 4, scope: !4159)
!4231 = !DILocation(line: 1911, column: 2, scope: !4159)
!4232 = !DILocation(line: 1913, column: 18, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1913, column: 11)
!4234 = !DILocation(line: 1913, column: 11, scope: !4233)
!4235 = !DILocation(line: 1913, column: 29, scope: !4233)
!4236 = !DILocation(line: 1913, column: 32, scope: !4233)
!4237 = !DILocation(line: 1913, column: 11, scope: !4150)
!4238 = !DILocation(line: 1915, column: 34, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 1914, column: 2)
!4240 = !DILocation(line: 1915, column: 4, scope: !4239)
!4241 = !DILocation(line: 1916, column: 45, scope: !4239)
!4242 = !DILocation(line: 1916, column: 4, scope: !4239)
!4243 = !DILocation(line: 1917, column: 2, scope: !4239)
!4244 = !DILocation(line: 1923, column: 7, scope: !4150)
!4245 = !DILocation(line: 1924, column: 7, scope: !4150)
!4246 = !DILocation(line: 1931, column: 11, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1931, column: 11)
!4248 = !DILocation(line: 1931, column: 34, scope: !4247)
!4249 = !DILocation(line: 1931, column: 11, scope: !4150)
!4250 = !DILocation(line: 1932, column: 12, scope: !4247)
!4251 = !DILocation(line: 1932, column: 2, scope: !4247)
!4252 = !DILocation(line: 1935, column: 31, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 1934, column: 2)
!4254 = !DILocation(line: 1935, column: 8, scope: !4253)
!4255 = !DILocation(line: 1936, column: 9, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 1936, column: 8)
!4257 = !DILocation(line: 1936, column: 8, scope: !4253)
!4258 = !DILocation(line: 1938, column: 18, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 1937, column: 6)
!4260 = !DILocation(line: 1939, column: 8, scope: !4259)
!4261 = !DILocation(line: 1940, column: 6, scope: !4259)
!4262 = !DILocation(line: 1942, column: 14, scope: !4256)
!4263 = !DILocation(line: 1942, column: 6, scope: !4256)
!4264 = !DILocation(line: 1945, column: 17, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 1943, column: 8)
!4266 = !DILocation(line: 1946, column: 7, scope: !4265)
!4267 = !DILocation(line: 1948, column: 17, scope: !4265)
!4268 = !DILocation(line: 1949, column: 7, scope: !4265)
!4269 = !DILocation(line: 1951, column: 17, scope: !4265)
!4270 = !DILocation(line: 1952, column: 7, scope: !4265)
!4271 = !DILocation(line: 1954, column: 17, scope: !4265)
!4272 = !DILocation(line: 1955, column: 7, scope: !4265)
!4273 = !DILocation(line: 0, scope: !4247)
!4274 = !DILocation(line: 1961, column: 7, scope: !4150)
!4275 = !DILocation(line: 1962, column: 7, scope: !4150)
!4276 = !DILocation(line: 1965, column: 7, scope: !4150)
!4277 = !DILocation(line: 1973, column: 3, scope: !4139)
!4278 = !DILocation(line: 1974, column: 1, scope: !4139)
!4279 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !568, file: !568, line: 1954, type: !4023, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4280)
!4280 = !{!4281, !4282}
!4281 = !DILocalVariable(name: "gs", arg: 1, scope: !4279, file: !568, line: 1954, type: !2851)
!4282 = !DILocalVariable(name: "addr", scope: !4279, file: !568, line: 1956, type: !847)
!4283 = !DILocation(line: 0, scope: !4279)
!4284 = !DILocation(line: 1956, column: 15, scope: !4279)
!4285 = !DILocation(line: 1957, column: 7, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4279, file: !568, line: 1957, column: 7)
!4287 = !DILocation(line: 1957, column: 24, scope: !4286)
!4288 = !DILocation(line: 1957, column: 7, scope: !4279)
!4289 = !DILocation(line: 1958, column: 12, scope: !4286)
!4290 = !DILocation(line: 1958, column: 5, scope: !4286)
!4291 = !DILocation(line: 1960, column: 1, scope: !4279)
!4292 = distinct !DISubprogram(name: "gimple_call_set_arg", scope: !568, file: !568, line: 2046, type: !4293, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4295)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{null, !665, !7, !847}
!4295 = !{!4296, !4297, !4298}
!4296 = !DILocalVariable(name: "gs", arg: 1, scope: !4292, file: !568, line: 2046, type: !665)
!4297 = !DILocalVariable(name: "index", arg: 2, scope: !4292, file: !568, line: 2046, type: !7)
!4298 = !DILocalVariable(name: "arg", arg: 3, scope: !4292, file: !568, line: 2046, type: !847)
!4299 = !DILocation(line: 0, scope: !4292)
!4300 = !DILocation(line: 2049, column: 3, scope: !4292)
!4301 = !DILocation(line: 2050, column: 1, scope: !4292)
!4302 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !568, file: !568, line: 1878, type: !4023, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4303)
!4303 = !{!4304}
!4304 = !DILocalVariable(name: "gs", arg: 1, scope: !4302, file: !568, line: 1878, type: !2851)
!4305 = !DILocation(line: 0, scope: !4302)
!4306 = !DILocation(line: 1881, column: 10, scope: !4302)
!4307 = !DILocation(line: 1881, column: 3, scope: !4302)
!4308 = distinct !DISubprogram(name: "gimple_has_lhs", scope: !568, file: !568, line: 2210, type: !2728, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4309)
!4309 = !{!4310}
!4310 = !DILocalVariable(name: "stmt", arg: 1, scope: !4308, file: !568, line: 2210, type: !665)
!4311 = !DILocation(line: 0, scope: !4308)
!4312 = !DILocation(line: 2212, column: 11, scope: !4308)
!4313 = !DILocation(line: 2213, column: 4, scope: !4308)
!4314 = !DILocation(line: 2213, column: 8, scope: !4308)
!4315 = !DILocation(line: 2214, column: 8, scope: !4308)
!4316 = !DILocation(line: 2214, column: 11, scope: !4308)
!4317 = !DILocation(line: 2214, column: 34, scope: !4308)
!4318 = !DILocation(line: 2212, column: 3, scope: !4308)
!4319 = distinct !DISubprogram(name: "gimple_set_location", scope: !568, file: !568, line: 1156, type: !4320, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4322)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{null, !665, !684}
!4322 = !{!4323, !4324}
!4323 = !DILocalVariable(name: "g", arg: 1, scope: !4319, file: !568, line: 1156, type: !665)
!4324 = !DILocalVariable(name: "location", arg: 2, scope: !4319, file: !568, line: 1156, type: !684)
!4325 = !DILocation(line: 0, scope: !4319)
!4326 = !DILocation(line: 1158, column: 13, scope: !4319)
!4327 = !DILocation(line: 1158, column: 22, scope: !4319)
!4328 = !DILocation(line: 1159, column: 1, scope: !4319)
!4329 = distinct !DISubprogram(name: "gimple_location", scope: !568, file: !568, line: 1139, type: !4330, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4332)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!684, !2851}
!4332 = !{!4333}
!4333 = !DILocalVariable(name: "g", arg: 1, scope: !4329, file: !568, line: 1139, type: !2851)
!4334 = !DILocation(line: 0, scope: !4329)
!4335 = !DILocation(line: 1141, column: 20, scope: !4329)
!4336 = !DILocation(line: 1141, column: 3, scope: !4329)
!4337 = distinct !DISubprogram(name: "gimple_set_block", scope: !568, file: !568, line: 1130, type: !4338, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4340)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{null, !665, !847}
!4340 = !{!4341, !4342}
!4341 = !DILocalVariable(name: "g", arg: 1, scope: !4337, file: !568, line: 1130, type: !665)
!4342 = !DILocalVariable(name: "block", arg: 2, scope: !4337, file: !568, line: 1130, type: !847)
!4343 = !DILocation(line: 0, scope: !4337)
!4344 = !DILocation(line: 1132, column: 13, scope: !4337)
!4345 = !DILocation(line: 1132, column: 19, scope: !4337)
!4346 = !DILocation(line: 1133, column: 1, scope: !4337)
!4347 = distinct !DISubprogram(name: "gimple_block", scope: !568, file: !568, line: 1121, type: !4023, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4348)
!4348 = !{!4349}
!4349 = !DILocalVariable(name: "g", arg: 1, scope: !4347, file: !568, line: 1121, type: !2851)
!4350 = !DILocation(line: 0, scope: !4347)
!4351 = !DILocation(line: 1123, column: 20, scope: !4347)
!4352 = !DILocation(line: 1123, column: 3, scope: !4347)
!4353 = distinct !DISubprogram(name: "record_stmt_eh_region", scope: !3, file: !3, line: 126, type: !4354, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4356)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{null, !1106, !665}
!4356 = !{!4357, !4358, !4359}
!4357 = !DILocalVariable(name: "region", arg: 1, scope: !4353, file: !3, line: 126, type: !1106)
!4358 = !DILocalVariable(name: "t", arg: 2, scope: !4353, file: !3, line: 126, type: !665)
!4359 = !DILocalVariable(name: "lp", scope: !4360, file: !3, line: 134, type: !1180)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 133, column: 5)
!4361 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 130, column: 7)
!4362 = !DILocation(line: 0, scope: !4353)
!4363 = !DILocation(line: 128, column: 14, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 128, column: 7)
!4365 = !DILocation(line: 128, column: 7, scope: !4353)
!4366 = !DILocation(line: 130, column: 15, scope: !4361)
!4367 = !DILocation(line: 130, column: 20, scope: !4361)
!4368 = !DILocation(line: 130, column: 7, scope: !4353)
!4369 = !DILocation(line: 131, column: 27, scope: !4361)
!4370 = !DILocation(line: 131, column: 45, scope: !4361)
!4371 = !DILocation(line: 131, column: 36, scope: !4361)
!4372 = !DILocation(line: 131, column: 5, scope: !4361)
!4373 = !DILocation(line: 134, column: 35, scope: !4360)
!4374 = !DILocation(line: 0, scope: !4360)
!4375 = !DILocation(line: 135, column: 14, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 135, column: 11)
!4377 = !DILocation(line: 135, column: 11, scope: !4360)
!4378 = !DILocation(line: 136, column: 7, scope: !4376)
!4379 = !DILocation(line: 136, column: 2, scope: !4376)
!4380 = !DILocation(line: 138, column: 2, scope: !4376)
!4381 = !DILocation(line: 139, column: 29, scope: !4360)
!4382 = !DILocation(line: 139, column: 42, scope: !4360)
!4383 = !DILocation(line: 139, column: 7, scope: !4360)
!4384 = !DILocation(line: 141, column: 1, scope: !4353)
!4385 = distinct !DISubprogram(name: "note_eh_region_may_contain_throw", scope: !3, file: !3, line: 850, type: !4386, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4388)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{null, !1106}
!4388 = !{!4389}
!4389 = !DILocalVariable(name: "region", arg: 1, scope: !4385, file: !3, line: 850, type: !1106)
!4390 = !DILocation(line: 0, scope: !4385)
!4391 = !DILocation(line: 852, column: 3, scope: !4385)
!4392 = !DILocation(line: 852, column: 25, scope: !4385)
!4393 = !DILocation(line: 852, column: 66, scope: !4385)
!4394 = !DILocation(line: 852, column: 11, scope: !4385)
!4395 = !DILocation(line: 852, column: 10, scope: !4385)
!4396 = !DILocation(line: 854, column: 23, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 853, column: 5)
!4398 = !DILocation(line: 854, column: 64, scope: !4397)
!4399 = !DILocation(line: 854, column: 7, scope: !4397)
!4400 = !DILocation(line: 855, column: 24, scope: !4397)
!4401 = !DILocation(line: 856, column: 18, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 856, column: 11)
!4403 = !DILocation(line: 856, column: 11, scope: !4397)
!4404 = distinct !{!4404, !4391, !4405}
!4405 = !DILocation(line: 858, column: 5, scope: !4385)
!4406 = !DILocation(line: 859, column: 1, scope: !4385)
!4407 = distinct !DISubprogram(name: "maybe_record_in_goto_queue", scope: !3, file: !3, line: 655, type: !4408, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4410)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{null, !2090, !665}
!4410 = !{!4411, !4412, !4413, !4414}
!4411 = !DILocalVariable(name: "state", arg: 1, scope: !4407, file: !3, line: 655, type: !2090)
!4412 = !DILocalVariable(name: "stmt", arg: 2, scope: !4407, file: !3, line: 655, type: !665)
!4413 = !DILocalVariable(name: "tf", scope: !4407, file: !3, line: 657, type: !2096)
!4414 = !DILocalVariable(name: "new_stmt", scope: !4407, file: !3, line: 658, type: !2065)
!4415 = !DILocation(line: 0, scope: !4407)
!4416 = !DILocation(line: 657, column: 36, scope: !4407)
!4417 = !DILocation(line: 660, column: 8, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 660, column: 7)
!4419 = !DILocation(line: 660, column: 7, scope: !4407)
!4420 = !DILocation(line: 663, column: 11, scope: !4407)
!4421 = !DILocation(line: 663, column: 3, scope: !4407)
!4422 = !DILocation(line: 666, column: 21, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 664, column: 5)
!4424 = !DILocation(line: 667, column: 49, scope: !4423)
!4425 = !DILocation(line: 667, column: 7, scope: !4423)
!4426 = !DILocation(line: 668, column: 21, scope: !4423)
!4427 = !DILocation(line: 669, column: 49, scope: !4423)
!4428 = !DILocation(line: 669, column: 7, scope: !4423)
!4429 = !DILocation(line: 670, column: 7, scope: !4423)
!4430 = !DILocation(line: 673, column: 49, scope: !4423)
!4431 = !DILocation(line: 673, column: 7, scope: !4423)
!4432 = !DILocation(line: 674, column: 7, scope: !4423)
!4433 = !DILocation(line: 677, column: 11, scope: !4423)
!4434 = !DILocation(line: 677, column: 22, scope: !4423)
!4435 = !DILocation(line: 679, column: 7, scope: !4423)
!4436 = !DILocation(line: 680, column: 7, scope: !4423)
!4437 = !DILocation(line: 683, column: 7, scope: !4423)
!4438 = !DILocation(line: 684, column: 5, scope: !4423)
!4439 = !DILocation(line: 685, column: 1, scope: !4407)
!4440 = distinct !DISubprogram(name: "lower_try_finally", scope: !3, file: !3, line: 1529, type: !4441, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4443)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!716, !2090, !665}
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4449, !4450, !4453}
!4444 = !DILocalVariable(name: "state", arg: 1, scope: !4440, file: !3, line: 1529, type: !2090)
!4445 = !DILocalVariable(name: "tp", arg: 2, scope: !4440, file: !3, line: 1529, type: !665)
!4446 = !DILocalVariable(name: "this_tf", scope: !4440, file: !3, line: 1531, type: !2097)
!4447 = !DILocalVariable(name: "this_state", scope: !4440, file: !3, line: 1532, type: !2091)
!4448 = !DILocalVariable(name: "ndests", scope: !4440, file: !3, line: 1533, type: !654)
!4449 = !DILocalVariable(name: "old_eh_seq", scope: !4440, file: !3, line: 1534, type: !716)
!4450 = !DILocalVariable(name: "x", scope: !4451, file: !3, line: 1599, type: !665)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 1597, column: 5)
!4452 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1596, column: 7)
!4453 = !DILocalVariable(name: "new_eh_seq", scope: !4454, file: !3, line: 1617, type: !716)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1616, column: 2)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 1613, column: 11)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 1612, column: 5)
!4457 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1611, column: 7)
!4458 = !DILocation(line: 0, scope: !4440)
!4459 = !DILocation(line: 1531, column: 3, scope: !4440)
!4460 = !DILocation(line: 1532, column: 3, scope: !4440)
!4461 = !DILocation(line: 1538, column: 3, scope: !4440)
!4462 = !DILocation(line: 1539, column: 11, scope: !4440)
!4463 = !DILocation(line: 1539, column: 28, scope: !4440)
!4464 = !DILocation(line: 1540, column: 11, scope: !4440)
!4465 = !DILocation(line: 1540, column: 17, scope: !4440)
!4466 = !DILocation(line: 1541, column: 11, scope: !4440)
!4467 = !DILocation(line: 1541, column: 17, scope: !4440)
!4468 = !DILocation(line: 1542, column: 7, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1542, column: 7)
!4470 = !DILocation(line: 1542, column: 7, scope: !4440)
!4471 = !DILocation(line: 1543, column: 52, scope: !4469)
!4472 = !DILocation(line: 1543, column: 22, scope: !4469)
!4473 = !DILocation(line: 1543, column: 13, scope: !4469)
!4474 = !DILocation(line: 1543, column: 20, scope: !4469)
!4475 = !DILocation(line: 1543, column: 5, scope: !4469)
!4476 = !DILocation(line: 1545, column: 13, scope: !4469)
!4477 = !DILocation(line: 1545, column: 20, scope: !4469)
!4478 = !DILocation(line: 1547, column: 35, scope: !4440)
!4479 = !DILocation(line: 1547, column: 25, scope: !4440)
!4480 = !DILocation(line: 1548, column: 34, scope: !4440)
!4481 = !DILocation(line: 1548, column: 14, scope: !4440)
!4482 = !DILocation(line: 1548, column: 25, scope: !4440)
!4483 = !DILocation(line: 1549, column: 14, scope: !4440)
!4484 = !DILocation(line: 1549, column: 17, scope: !4440)
!4485 = !DILocation(line: 1551, column: 16, scope: !4440)
!4486 = !DILocation(line: 1552, column: 10, scope: !4440)
!4487 = !DILocation(line: 1554, column: 39, scope: !4440)
!4488 = !DILocation(line: 1554, column: 3, scope: !4440)
!4489 = !DILocation(line: 1557, column: 51, scope: !4440)
!4490 = !DILocation(line: 1557, column: 26, scope: !4440)
!4491 = !DILocation(line: 1557, column: 11, scope: !4440)
!4492 = !DILocation(line: 1557, column: 24, scope: !4440)
!4493 = !DILocation(line: 1560, column: 7, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1560, column: 7)
!4495 = !DILocation(line: 1560, column: 7, scope: !4440)
!4496 = !DILocation(line: 0, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1562, column: 7)
!4498 = !DILocation(line: 1562, column: 15, scope: !4497)
!4499 = !DILocation(line: 1561, column: 62, scope: !4494)
!4500 = !DILocation(line: 1561, column: 25, scope: !4494)
!4501 = !DILocation(line: 1561, column: 13, scope: !4494)
!4502 = !DILocation(line: 1561, column: 23, scope: !4494)
!4503 = !DILocation(line: 1561, column: 5, scope: !4494)
!4504 = !DILocation(line: 1562, column: 7, scope: !4497)
!4505 = !DILocation(line: 1562, column: 7, scope: !4440)
!4506 = !DILocation(line: 1563, column: 5, scope: !4497)
!4507 = !DILocation(line: 1569, column: 12, scope: !4440)
!4508 = !DILocation(line: 1570, column: 21, scope: !4440)
!4509 = !DILocation(line: 1570, column: 13, scope: !4440)
!4510 = !DILocation(line: 1570, column: 10, scope: !4440)
!4511 = !DILocation(line: 1571, column: 21, scope: !4440)
!4512 = !DILocation(line: 1571, column: 13, scope: !4440)
!4513 = !DILocation(line: 1571, column: 10, scope: !4440)
!4514 = !DILocation(line: 1572, column: 21, scope: !4440)
!4515 = !DILocation(line: 1572, column: 13, scope: !4440)
!4516 = !DILocation(line: 1572, column: 10, scope: !4440)
!4517 = !DILocation(line: 1575, column: 14, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1575, column: 7)
!4519 = !DILocation(line: 1575, column: 7, scope: !4440)
!4520 = !DILocation(line: 1577, column: 36, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 1576, column: 5)
!4522 = !DILocation(line: 1577, column: 47, scope: !4521)
!4523 = !DILocation(line: 1577, column: 7, scope: !4521)
!4524 = !DILocation(line: 1578, column: 7, scope: !4521)
!4525 = !DILocation(line: 1579, column: 5, scope: !4521)
!4526 = !DILocation(line: 1583, column: 38, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 1583, column: 12)
!4528 = !DILocation(line: 1583, column: 13, scope: !4527)
!4529 = !DILocation(line: 1583, column: 12, scope: !4518)
!4530 = !DILocation(line: 1584, column: 5, scope: !4527)
!4531 = !DILocation(line: 1587, column: 19, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 1587, column: 12)
!4533 = !DILocation(line: 1587, column: 12, scope: !4527)
!4534 = !DILocation(line: 1588, column: 5, scope: !4532)
!4535 = !DILocation(line: 1589, column: 45, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 1589, column: 12)
!4537 = !DILocation(line: 1589, column: 12, scope: !4536)
!4538 = !DILocation(line: 1589, column: 12, scope: !4532)
!4539 = !DILocation(line: 1590, column: 5, scope: !4536)
!4540 = !DILocation(line: 1592, column: 5, scope: !4536)
!4541 = !DILocation(line: 1596, column: 15, scope: !4452)
!4542 = !DILocation(line: 1596, column: 7, scope: !4452)
!4543 = !DILocation(line: 1596, column: 7, scope: !4440)
!4544 = !DILocation(line: 1599, column: 18, scope: !4451)
!4545 = !DILocation(line: 0, scope: !4451)
!4546 = !DILocation(line: 1600, column: 37, scope: !4451)
!4547 = !DILocation(line: 1600, column: 7, scope: !4451)
!4548 = !DILocation(line: 1601, column: 5, scope: !4451)
!4549 = !DILocation(line: 1603, column: 3, scope: !4440)
!4550 = !DILocation(line: 1604, column: 15, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1604, column: 7)
!4552 = !DILocation(line: 1604, column: 7, scope: !4551)
!4553 = !DILocation(line: 1604, column: 7, scope: !4440)
!4554 = !DILocation(line: 1605, column: 5, scope: !4551)
!4555 = !DILocation(line: 1606, column: 15, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1606, column: 7)
!4557 = !DILocation(line: 1606, column: 7, scope: !4556)
!4558 = !DILocation(line: 1606, column: 7, scope: !4440)
!4559 = !DILocation(line: 1607, column: 5, scope: !4556)
!4560 = !DILocation(line: 1611, column: 7, scope: !4457)
!4561 = !DILocation(line: 1611, column: 7, scope: !4440)
!4562 = !DILocation(line: 1613, column: 11, scope: !4455)
!4563 = !DILocation(line: 1613, column: 18, scope: !4455)
!4564 = !DILocation(line: 1613, column: 11, scope: !4456)
!4565 = !DILocation(line: 1614, column: 9, scope: !4455)
!4566 = !DILocation(line: 1614, column: 2, scope: !4455)
!4567 = !DILocation(line: 0, scope: !4454)
!4568 = !DILocation(line: 1618, column: 11, scope: !4454)
!4569 = !DILocation(line: 1619, column: 4, scope: !4454)
!4570 = !DILocation(line: 1623, column: 18, scope: !4440)
!4571 = !DILocation(line: 1624, column: 1, scope: !4440)
!4572 = !DILocation(line: 1623, column: 3, scope: !4440)
!4573 = distinct !DISubprogram(name: "gimple_seq_first_stmt", scope: !568, file: !568, line: 168, type: !4574, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4576)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!665, !4013}
!4576 = !{!4577, !4578}
!4577 = !DILocalVariable(name: "s", arg: 1, scope: !4573, file: !568, line: 168, type: !4013)
!4578 = !DILocalVariable(name: "n", scope: !4573, file: !568, line: 170, type: !721)
!4579 = !DILocation(line: 0, scope: !4573)
!4580 = !DILocation(line: 170, column: 23, scope: !4573)
!4581 = !DILocation(line: 171, column: 10, scope: !4573)
!4582 = !DILocation(line: 171, column: 19, scope: !4573)
!4583 = !DILocation(line: 171, column: 3, scope: !4573)
!4584 = distinct !DISubprogram(name: "lower_catch", scope: !3, file: !3, line: 1631, type: !4441, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4585)
!4585 = !{!4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4599, !4600}
!4586 = !DILocalVariable(name: "state", arg: 1, scope: !4584, file: !3, line: 1631, type: !2090)
!4587 = !DILocalVariable(name: "tp", arg: 2, scope: !4584, file: !3, line: 1631, type: !665)
!4588 = !DILocalVariable(name: "try_region", scope: !4584, file: !3, line: 1633, type: !1106)
!4589 = !DILocalVariable(name: "this_state", scope: !4584, file: !3, line: 1634, type: !2091)
!4590 = !DILocalVariable(name: "gsi", scope: !4584, file: !3, line: 1635, type: !3873)
!4591 = !DILocalVariable(name: "out_label", scope: !4584, file: !3, line: 1636, type: !847)
!4592 = !DILocalVariable(name: "new_seq", scope: !4584, file: !3, line: 1637, type: !716)
!4593 = !DILocalVariable(name: "x", scope: !4584, file: !3, line: 1638, type: !665)
!4594 = !DILocalVariable(name: "try_catch_loc", scope: !4584, file: !3, line: 1639, type: !684)
!4595 = !DILocalVariable(name: "c", scope: !4596, file: !3, line: 1664, type: !2814)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 1663, column: 5)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 1660, column: 3)
!4598 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1660, column: 3)
!4599 = !DILocalVariable(name: "gcatch", scope: !4596, file: !3, line: 1665, type: !665)
!4600 = !DILocalVariable(name: "handler", scope: !4596, file: !3, line: 1666, type: !716)
!4601 = !DILocation(line: 0, scope: !4584)
!4602 = !DILocation(line: 1634, column: 3, scope: !4584)
!4603 = !DILocation(line: 1634, column: 33, scope: !4584)
!4604 = !DILocation(line: 1635, column: 3, scope: !4584)
!4605 = !DILocation(line: 1637, column: 3, scope: !4584)
!4606 = !DILocation(line: 1639, column: 30, scope: !4584)
!4607 = !DILocation(line: 1641, column: 7, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1641, column: 7)
!4609 = !DILocation(line: 1641, column: 7, scope: !4584)
!4610 = !DILocation(line: 1643, column: 46, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 1642, column: 5)
!4612 = !DILocation(line: 1643, column: 20, scope: !4611)
!4613 = !DILocation(line: 1644, column: 18, scope: !4611)
!4614 = !DILocation(line: 1644, column: 29, scope: !4611)
!4615 = !DILocation(line: 1645, column: 5, scope: !4611)
!4616 = !DILocation(line: 1647, column: 39, scope: !4584)
!4617 = !DILocation(line: 1647, column: 3, scope: !4584)
!4618 = !DILocation(line: 1649, column: 8, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1649, column: 7)
!4620 = !DILocation(line: 1649, column: 7, scope: !4584)
!4621 = !DILocation(line: 1650, column: 12, scope: !4619)
!4622 = !DILocation(line: 1650, column: 5, scope: !4619)
!4623 = !DILocation(line: 1652, column: 11, scope: !4584)
!4624 = !DILocation(line: 1653, column: 3, scope: !4584)
!4625 = !DILocation(line: 1654, column: 3, scope: !4584)
!4626 = !DILocation(line: 1656, column: 34, scope: !4584)
!4627 = !DILocation(line: 1656, column: 25, scope: !4584)
!4628 = !DILocation(line: 1657, column: 14, scope: !4584)
!4629 = !DILocation(line: 1657, column: 25, scope: !4584)
!4630 = !DILocation(line: 1660, column: 14, scope: !4598)
!4631 = !DILocation(line: 1660, column: 25, scope: !4598)
!4632 = !DILocation(line: 1660, column: 8, scope: !4598)
!4633 = !DILocation(line: 1659, column: 13, scope: !4584)
!4634 = !DILocation(line: 1661, column: 9, scope: !4597)
!4635 = !DILocation(line: 1661, column: 8, scope: !4597)
!4636 = !DILocation(line: 1660, column: 3, scope: !4598)
!4637 = !DILocation(line: 1668, column: 16, scope: !4596)
!4638 = !DILocation(line: 0, scope: !4596)
!4639 = !DILocation(line: 1669, column: 44, scope: !4596)
!4640 = !DILocation(line: 1669, column: 11, scope: !4596)
!4641 = !DILocation(line: 1671, column: 17, scope: !4596)
!4642 = !DILocation(line: 1672, column: 7, scope: !4596)
!4643 = !DILocation(line: 1674, column: 18, scope: !4596)
!4644 = !DILocation(line: 1674, column: 10, scope: !4596)
!4645 = !DILocation(line: 1674, column: 16, scope: !4596)
!4646 = !DILocation(line: 1675, column: 11, scope: !4596)
!4647 = !DILocation(line: 1676, column: 7, scope: !4596)
!4648 = !DILocation(line: 1678, column: 7, scope: !4596)
!4649 = !DILocation(line: 1680, column: 36, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 1680, column: 11)
!4651 = !DILocation(line: 1680, column: 11, scope: !4650)
!4652 = !DILocation(line: 1680, column: 11, scope: !4596)
!4653 = !DILocation(line: 1682, column: 9, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 1682, column: 8)
!4655 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1681, column: 2)
!4656 = !DILocation(line: 1682, column: 8, scope: !4655)
!4657 = !DILocation(line: 1683, column: 18, scope: !4654)
!4658 = !DILocation(line: 1683, column: 6, scope: !4654)
!4659 = !DILocation(line: 1685, column: 8, scope: !4655)
!4660 = !DILocation(line: 1686, column: 4, scope: !4655)
!4661 = !DILocation(line: 1687, column: 2, scope: !4655)
!4662 = !DILocation(line: 1688, column: 15, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 1688, column: 11)
!4664 = !DILocation(line: 1688, column: 12, scope: !4663)
!4665 = !DILocation(line: 1662, column: 8, scope: !4597)
!4666 = !DILocation(line: 1660, column: 3, scope: !4597)
!4667 = distinct !{!4667, !4636, !4668}
!4668 = !DILocation(line: 1690, column: 5, scope: !4598)
!4669 = !DILocation(line: 1692, column: 31, scope: !4584)
!4670 = !DILocation(line: 1692, column: 3, scope: !4584)
!4671 = !DILocation(line: 1694, column: 10, scope: !4584)
!4672 = !DILocation(line: 1694, column: 3, scope: !4584)
!4673 = !DILocation(line: 1695, column: 1, scope: !4584)
!4674 = distinct !DISubprogram(name: "lower_eh_filter", scope: !3, file: !3, line: 1702, type: !4441, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4675)
!4675 = !{!4676, !4677, !4678, !4679, !4680, !4681, !4682}
!4676 = !DILocalVariable(name: "state", arg: 1, scope: !4674, file: !3, line: 1702, type: !2090)
!4677 = !DILocalVariable(name: "tp", arg: 2, scope: !4674, file: !3, line: 1702, type: !665)
!4678 = !DILocalVariable(name: "this_state", scope: !4674, file: !3, line: 1704, type: !2091)
!4679 = !DILocalVariable(name: "this_region", scope: !4674, file: !3, line: 1705, type: !1106)
!4680 = !DILocalVariable(name: "inner", scope: !4674, file: !3, line: 1706, type: !665)
!4681 = !DILocalVariable(name: "x", scope: !4674, file: !3, line: 1706, type: !665)
!4682 = !DILocalVariable(name: "new_seq", scope: !4674, file: !3, line: 1707, type: !716)
!4683 = !DILocation(line: 0, scope: !4674)
!4684 = !DILocation(line: 1704, column: 3, scope: !4674)
!4685 = !DILocation(line: 1704, column: 33, scope: !4674)
!4686 = !DILocation(line: 1707, column: 3, scope: !4674)
!4687 = !DILocation(line: 1709, column: 34, scope: !4674)
!4688 = !DILocation(line: 1709, column: 11, scope: !4674)
!4689 = !DILocation(line: 1711, column: 7, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 1711, column: 7)
!4691 = !DILocation(line: 1711, column: 7, scope: !4674)
!4692 = !DILocation(line: 1713, column: 51, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 1712, column: 5)
!4694 = !DILocation(line: 1714, column: 16, scope: !4693)
!4695 = !DILocation(line: 1713, column: 21, scope: !4693)
!4696 = !DILocation(line: 1715, column: 18, scope: !4693)
!4697 = !DILocation(line: 1715, column: 29, scope: !4693)
!4698 = !DILocation(line: 1716, column: 5, scope: !4693)
!4699 = !DILocation(line: 1718, column: 39, scope: !4674)
!4700 = !DILocation(line: 1718, column: 3, scope: !4674)
!4701 = !DILocation(line: 1720, column: 8, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 1720, column: 7)
!4703 = !DILocation(line: 1720, column: 7, scope: !4674)
!4704 = !DILocation(line: 1721, column: 12, scope: !4702)
!4705 = !DILocation(line: 1721, column: 5, scope: !4702)
!4706 = !DILocation(line: 1723, column: 11, scope: !4674)
!4707 = !DILocation(line: 1724, column: 34, scope: !4674)
!4708 = !DILocation(line: 1724, column: 25, scope: !4674)
!4709 = !DILocation(line: 1725, column: 14, scope: !4674)
!4710 = !DILocation(line: 1725, column: 25, scope: !4674)
!4711 = !DILocation(line: 1727, column: 3, scope: !4674)
!4712 = !DILocation(line: 1728, column: 3, scope: !4674)
!4713 = !DILocation(line: 1730, column: 34, scope: !4674)
!4714 = !DILocation(line: 1730, column: 26, scope: !4674)
!4715 = !DILocation(line: 1730, column: 32, scope: !4674)
!4716 = !DILocation(line: 1731, column: 7, scope: !4674)
!4717 = !DILocation(line: 1732, column: 3, scope: !4674)
!4718 = !DILocation(line: 1734, column: 39, scope: !4674)
!4719 = !DILocation(line: 1734, column: 3, scope: !4674)
!4720 = !DILocation(line: 1735, column: 33, scope: !4674)
!4721 = !DILocation(line: 1735, column: 3, scope: !4674)
!4722 = !DILocation(line: 1737, column: 31, scope: !4674)
!4723 = !DILocation(line: 1737, column: 3, scope: !4674)
!4724 = !DILocation(line: 1739, column: 10, scope: !4674)
!4725 = !DILocation(line: 1739, column: 3, scope: !4674)
!4726 = !DILocation(line: 1740, column: 1, scope: !4674)
!4727 = distinct !DISubprogram(name: "lower_eh_must_not_throw", scope: !3, file: !3, line: 1747, type: !4441, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4728)
!4728 = !{!4729, !4730, !4731, !4732, !4735}
!4729 = !DILocalVariable(name: "state", arg: 1, scope: !4727, file: !3, line: 1747, type: !2090)
!4730 = !DILocalVariable(name: "tp", arg: 2, scope: !4727, file: !3, line: 1747, type: !665)
!4731 = !DILocalVariable(name: "this_state", scope: !4727, file: !3, line: 1749, type: !2091)
!4732 = !DILocalVariable(name: "inner", scope: !4733, file: !3, line: 1753, type: !665)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 1752, column: 5)
!4734 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 1751, column: 7)
!4735 = !DILocalVariable(name: "this_region", scope: !4733, file: !3, line: 1754, type: !1106)
!4736 = !DILocation(line: 0, scope: !4727)
!4737 = !DILocation(line: 1749, column: 3, scope: !4727)
!4738 = !DILocation(line: 1749, column: 33, scope: !4727)
!4739 = !DILocation(line: 1751, column: 7, scope: !4734)
!4740 = !DILocation(line: 1751, column: 7, scope: !4727)
!4741 = !DILocation(line: 1753, column: 45, scope: !4733)
!4742 = !DILocation(line: 1753, column: 22, scope: !4733)
!4743 = !DILocation(line: 0, scope: !4733)
!4744 = !DILocation(line: 1756, column: 58, scope: !4733)
!4745 = !DILocation(line: 1756, column: 21, scope: !4733)
!4746 = !DILocation(line: 1758, column: 4, scope: !4733)
!4747 = !DILocation(line: 1757, column: 37, scope: !4733)
!4748 = !DILocation(line: 1758, column: 2, scope: !4733)
!4749 = !DILocation(line: 1759, column: 51, scope: !4733)
!4750 = !DILocation(line: 1759, column: 37, scope: !4733)
!4751 = !DILocation(line: 1759, column: 49, scope: !4733)
!4752 = !DILocation(line: 1764, column: 7, scope: !4733)
!4753 = !DILocation(line: 1764, column: 62, scope: !4733)
!4754 = !DILocation(line: 1766, column: 18, scope: !4733)
!4755 = !DILocation(line: 1766, column: 29, scope: !4733)
!4756 = !DILocation(line: 1767, column: 5, scope: !4733)
!4757 = !DILocation(line: 1769, column: 39, scope: !4727)
!4758 = !DILocation(line: 1769, column: 3, scope: !4727)
!4759 = !DILocation(line: 1771, column: 10, scope: !4727)
!4760 = !DILocation(line: 1772, column: 1, scope: !4727)
!4761 = !DILocation(line: 1771, column: 3, scope: !4727)
!4762 = distinct !DISubprogram(name: "lower_cleanup", scope: !3, file: !3, line: 1778, type: !4441, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4763)
!4763 = !{!4764, !4765, !4766, !4767, !4768, !4769, !4770}
!4764 = !DILocalVariable(name: "state", arg: 1, scope: !4762, file: !3, line: 1778, type: !2090)
!4765 = !DILocalVariable(name: "tp", arg: 2, scope: !4762, file: !3, line: 1778, type: !665)
!4766 = !DILocalVariable(name: "this_state", scope: !4762, file: !3, line: 1780, type: !2091)
!4767 = !DILocalVariable(name: "this_region", scope: !4762, file: !3, line: 1781, type: !1106)
!4768 = !DILocalVariable(name: "fake_tf", scope: !4762, file: !3, line: 1782, type: !2097)
!4769 = !DILocalVariable(name: "result", scope: !4762, file: !3, line: 1783, type: !716)
!4770 = !DILocalVariable(name: "x", scope: !4771, file: !3, line: 1823, type: !665)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 1822, column: 2)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 1821, column: 11)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 1816, column: 5)
!4774 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 1807, column: 7)
!4775 = !DILocation(line: 0, scope: !4762)
!4776 = !DILocation(line: 1780, column: 3, scope: !4762)
!4777 = !DILocation(line: 1780, column: 33, scope: !4762)
!4778 = !DILocation(line: 1782, column: 3, scope: !4762)
!4779 = !DILocation(line: 1783, column: 3, scope: !4762)
!4780 = !DILocation(line: 1785, column: 7, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 1785, column: 7)
!4782 = !DILocation(line: 1785, column: 7, scope: !4762)
!4783 = !DILocation(line: 1787, column: 51, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1786, column: 5)
!4785 = !DILocation(line: 1787, column: 21, scope: !4784)
!4786 = !DILocation(line: 1788, column: 18, scope: !4784)
!4787 = !DILocation(line: 1788, column: 29, scope: !4784)
!4788 = !DILocation(line: 1789, column: 5, scope: !4784)
!4789 = !DILocation(line: 1791, column: 39, scope: !4762)
!4790 = !DILocation(line: 1791, column: 3, scope: !4762)
!4791 = !DILocation(line: 1793, column: 8, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 1793, column: 7)
!4793 = !DILocation(line: 1793, column: 7, scope: !4762)
!4794 = !DILocation(line: 1794, column: 12, scope: !4792)
!4795 = !DILocation(line: 1794, column: 5, scope: !4792)
!4796 = !DILocation(line: 1798, column: 3, scope: !4762)
!4797 = !DILocation(line: 1799, column: 27, scope: !4762)
!4798 = !DILocation(line: 1799, column: 44, scope: !4762)
!4799 = !DILocation(line: 1799, column: 11, scope: !4762)
!4800 = !DILocation(line: 1799, column: 17, scope: !4762)
!4801 = !DILocation(line: 1800, column: 11, scope: !4762)
!4802 = !DILocation(line: 1800, column: 17, scope: !4762)
!4803 = !DILocation(line: 1801, column: 11, scope: !4762)
!4804 = !DILocation(line: 1801, column: 18, scope: !4762)
!4805 = !DILocation(line: 1802, column: 51, scope: !4762)
!4806 = !DILocation(line: 1802, column: 26, scope: !4762)
!4807 = !DILocation(line: 1802, column: 11, scope: !4762)
!4808 = !DILocation(line: 1802, column: 24, scope: !4762)
!4809 = !DILocation(line: 1803, column: 11, scope: !4762)
!4810 = !DILocation(line: 1803, column: 21, scope: !4762)
!4811 = !DILocation(line: 1805, column: 3, scope: !4762)
!4812 = !DILocation(line: 1807, column: 15, scope: !4774)
!4813 = !DILocation(line: 1807, column: 7, scope: !4774)
!4814 = !DILocation(line: 1807, column: 7, scope: !4762)
!4815 = !DILocation(line: 1811, column: 37, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 1808, column: 5)
!4817 = !DILocation(line: 1811, column: 7, scope: !4816)
!4818 = !DILocation(line: 1813, column: 49, scope: !4816)
!4819 = !DILocation(line: 1812, column: 16, scope: !4816)
!4820 = !DILocation(line: 1812, column: 14, scope: !4816)
!4821 = !DILocation(line: 1814, column: 5, scope: !4816)
!4822 = !DILocation(line: 1820, column: 16, scope: !4773)
!4823 = !DILocation(line: 1820, column: 14, scope: !4773)
!4824 = !DILocation(line: 1821, column: 19, scope: !4772)
!4825 = !DILocation(line: 1821, column: 11, scope: !4772)
!4826 = !DILocation(line: 1821, column: 11, scope: !4773)
!4827 = !DILocation(line: 1823, column: 15, scope: !4771)
!4828 = !DILocation(line: 0, scope: !4771)
!4829 = !DILocation(line: 1824, column: 4, scope: !4771)
!4830 = !DILocation(line: 1827, column: 10, scope: !4762)
!4831 = !DILocation(line: 1825, column: 2, scope: !4771)
!4832 = !DILocation(line: 1827, column: 3, scope: !4762)
!4833 = !DILocation(line: 1828, column: 1, scope: !4762)
!4834 = distinct !DISubprogram(name: "gimple_call_fn", scope: !568, file: !568, line: 1911, type: !4023, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4835)
!4835 = !{!4836}
!4836 = !DILocalVariable(name: "gs", arg: 1, scope: !4834, file: !568, line: 1911, type: !2851)
!4837 = !DILocation(line: 0, scope: !4834)
!4838 = !DILocation(line: 1914, column: 10, scope: !4834)
!4839 = !DILocation(line: 1914, column: 3, scope: !4834)
!4840 = distinct !DISubprogram(name: "gimple_set_op", scope: !568, file: !568, line: 1663, type: !4293, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4841)
!4841 = !{!4842, !4843, !4844}
!4842 = !DILocalVariable(name: "gs", arg: 1, scope: !4840, file: !568, line: 1663, type: !665)
!4843 = !DILocalVariable(name: "i", arg: 2, scope: !4840, file: !568, line: 1663, type: !7)
!4844 = !DILocalVariable(name: "op", arg: 3, scope: !4840, file: !568, line: 1663, type: !847)
!4845 = !DILocation(line: 0, scope: !4840)
!4846 = !DILocation(line: 1665, column: 3, scope: !4840)
!4847 = !DILocation(line: 1671, column: 3, scope: !4840)
!4848 = !DILocation(line: 1671, column: 22, scope: !4840)
!4849 = !DILocation(line: 1672, column: 1, scope: !4840)
!4850 = distinct !DISubprogram(name: "gimple_num_ops", scope: !568, file: !568, line: 1596, type: !4851, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!7, !2851}
!4853 = !{!4854}
!4854 = !DILocalVariable(name: "gs", arg: 1, scope: !4850, file: !568, line: 1596, type: !2851)
!4855 = !DILocation(line: 0, scope: !4850)
!4856 = !DILocation(line: 1598, column: 21, scope: !4850)
!4857 = !DILocation(line: 1598, column: 3, scope: !4850)
!4858 = distinct !DISubprogram(name: "is_gimple_assign", scope: !568, file: !568, line: 1677, type: !3300, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4859)
!4859 = !{!4860}
!4860 = !DILocalVariable(name: "gs", arg: 1, scope: !4858, file: !568, line: 1677, type: !2851)
!4861 = !DILocation(line: 0, scope: !4858)
!4862 = !DILocation(line: 1679, column: 10, scope: !4858)
!4863 = !DILocation(line: 1679, column: 27, scope: !4858)
!4864 = !DILocation(line: 1679, column: 3, scope: !4858)
!4865 = distinct !DISubprogram(name: "is_gimple_call", scope: !568, file: !568, line: 1870, type: !3300, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4866)
!4866 = !{!4867}
!4867 = !DILocalVariable(name: "gs", arg: 1, scope: !4865, file: !568, line: 1870, type: !2851)
!4868 = !DILocation(line: 0, scope: !4865)
!4869 = !DILocation(line: 1872, column: 10, scope: !4865)
!4870 = !DILocation(line: 1872, column: 27, scope: !4865)
!4871 = !DILocation(line: 1872, column: 3, scope: !4865)
!4872 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !568, file: !568, line: 1647, type: !4873, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4875)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!1355, !2851, !7}
!4875 = !{!4876, !4877}
!4876 = !DILocalVariable(name: "gs", arg: 1, scope: !4872, file: !568, line: 1647, type: !2851)
!4877 = !DILocalVariable(name: "i", arg: 2, scope: !4872, file: !568, line: 1647, type: !7)
!4878 = !DILocation(line: 0, scope: !4872)
!4879 = !DILocation(line: 1649, column: 7, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4872, file: !568, line: 1649, column: 7)
!4881 = !DILocation(line: 1649, column: 7, scope: !4872)
!4882 = !DILocation(line: 1654, column: 14, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4880, file: !568, line: 1650, column: 5)
!4884 = !DILocation(line: 1654, column: 50, scope: !4883)
!4885 = !DILocation(line: 1654, column: 7, scope: !4883)
!4886 = !DILocation(line: 0, scope: !4880)
!4887 = !DILocation(line: 1658, column: 1, scope: !4872)
!4888 = distinct !DISubprogram(name: "record_in_goto_queue_label", scope: !3, file: !3, line: 608, type: !4889, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4891)
!4889 = !DISubroutineType(types: !4890)
!4890 = !{null, !2096, !2065, !847}
!4891 = !{!4892, !4893, !4894, !4895, !4896, !4897, !4898}
!4892 = !DILocalVariable(name: "tf", arg: 1, scope: !4888, file: !3, line: 608, type: !2096)
!4893 = !DILocalVariable(name: "stmt", arg: 2, scope: !4888, file: !3, line: 608, type: !2065)
!4894 = !DILocalVariable(name: "label", arg: 3, scope: !4888, file: !3, line: 608, type: !847)
!4895 = !DILocalVariable(name: "index", scope: !4888, file: !3, line: 610, type: !654)
!4896 = !DILocalVariable(name: "temp", scope: !4888, file: !3, line: 611, type: !2065)
!4897 = !DILocalVariable(name: "new_stmt", scope: !4888, file: !3, line: 611, type: !2065)
!4898 = !DILocalVariable(name: "n", scope: !4899, file: !3, line: 635, type: !654)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 634, column: 5)
!4900 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 627, column: 7)
!4901 = !DILocation(line: 0, scope: !4888)
!4902 = !DILocation(line: 613, column: 8, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 613, column: 7)
!4904 = !DILocation(line: 613, column: 7, scope: !4888)
!4905 = !DILocation(line: 619, column: 7, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 619, column: 7)
!4907 = !DILocation(line: 619, column: 25, scope: !4906)
!4908 = !DILocation(line: 619, column: 7, scope: !4888)
!4909 = !DILocation(line: 624, column: 40, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 624, column: 7)
!4911 = !DILocation(line: 624, column: 8, scope: !4910)
!4912 = !DILocation(line: 624, column: 7, scope: !4888)
!4913 = !DILocation(line: 627, column: 13, scope: !4900)
!4914 = !DILocation(line: 627, column: 9, scope: !4900)
!4915 = !DILocation(line: 627, column: 7, scope: !4888)
!4916 = !DILocation(line: 629, column: 24, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 628, column: 5)
!4918 = !DILocation(line: 629, column: 22, scope: !4917)
!4919 = !DILocation(line: 630, column: 7, scope: !4917)
!4920 = !DILocation(line: 632, column: 5, scope: !4917)
!4921 = !DILocation(line: 635, column: 15, scope: !4899)
!4922 = !DILocation(line: 0, scope: !4899)
!4923 = !DILocation(line: 636, column: 12, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 636, column: 7)
!4925 = !DILocation(line: 0, scope: !4924)
!4926 = !DILocation(line: 636, column: 29, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 636, column: 7)
!4928 = !DILocation(line: 636, column: 7, scope: !4924)
!4929 = !DILocation(line: 637, column: 13, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 637, column: 13)
!4931 = !DILocation(line: 637, column: 53, scope: !4930)
!4932 = !DILocation(line: 637, column: 13, scope: !4927)
!4933 = !DILocation(line: 636, column: 34, scope: !4927)
!4934 = !DILocation(line: 636, column: 7, scope: !4927)
!4935 = distinct !{!4935, !4928, !4936}
!4936 = !DILocation(line: 638, column: 11, scope: !4924)
!4937 = !DILocation(line: 639, column: 17, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 639, column: 11)
!4939 = !DILocation(line: 639, column: 11, scope: !4899)
!4940 = !DILocation(line: 640, column: 9, scope: !4938)
!4941 = !DILocation(line: 0, scope: !4900)
!4942 = !DILocation(line: 647, column: 3, scope: !4888)
!4943 = !DILocation(line: 648, column: 1, scope: !4888)
!4944 = distinct !DISubprogram(name: "gimple_cond_true_label", scope: !568, file: !568, line: 2303, type: !4023, scopeLine: 2304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4945)
!4945 = !{!4946}
!4946 = !DILocalVariable(name: "gs", arg: 1, scope: !4944, file: !568, line: 2303, type: !2851)
!4947 = !DILocation(line: 0, scope: !4944)
!4948 = !DILocation(line: 2306, column: 10, scope: !4944)
!4949 = !DILocation(line: 2306, column: 3, scope: !4944)
!4950 = distinct !DISubprogram(name: "gimple_cond_false_label", scope: !568, file: !568, line: 2336, type: !4023, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4951)
!4951 = !{!4952}
!4952 = !DILocalVariable(name: "gs", arg: 1, scope: !4950, file: !568, line: 2336, type: !2851)
!4953 = !DILocation(line: 0, scope: !4950)
!4954 = !DILocation(line: 2339, column: 10, scope: !4950)
!4955 = !DILocation(line: 2339, column: 3, scope: !4950)
!4956 = distinct !DISubprogram(name: "gimple_goto_dest", scope: !568, file: !568, line: 2465, type: !4023, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4957)
!4957 = !{!4958}
!4958 = !DILocalVariable(name: "gs", arg: 1, scope: !4956, file: !568, line: 2465, type: !2851)
!4959 = !DILocation(line: 0, scope: !4956)
!4960 = !DILocation(line: 2468, column: 10, scope: !4956)
!4961 = !DILocation(line: 2468, column: 3, scope: !4956)
!4962 = distinct !DISubprogram(name: "record_in_goto_queue", scope: !3, file: !3, line: 575, type: !4963, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4965)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{null, !2096, !2065, !654, !653}
!4965 = !{!4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4966 = !DILocalVariable(name: "tf", arg: 1, scope: !4962, file: !3, line: 575, type: !2096)
!4967 = !DILocalVariable(name: "new_stmt", arg: 2, scope: !4962, file: !3, line: 576, type: !2065)
!4968 = !DILocalVariable(name: "index", arg: 3, scope: !4962, file: !3, line: 577, type: !654)
!4969 = !DILocalVariable(name: "is_label", arg: 4, scope: !4962, file: !3, line: 578, type: !653)
!4970 = !DILocalVariable(name: "active", scope: !4962, file: !3, line: 580, type: !1208)
!4971 = !DILocalVariable(name: "size", scope: !4962, file: !3, line: 580, type: !1208)
!4972 = !DILocalVariable(name: "q", scope: !4962, file: !3, line: 581, type: !2077)
!4973 = !DILocation(line: 0, scope: !4962)
!4974 = !DILocation(line: 583, column: 3, scope: !4962)
!4975 = !DILocation(line: 585, column: 16, scope: !4962)
!4976 = !DILocation(line: 586, column: 14, scope: !4962)
!4977 = !DILocation(line: 587, column: 14, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 587, column: 7)
!4979 = !DILocation(line: 587, column: 7, scope: !4962)
!4980 = !DILocation(line: 595, column: 12, scope: !4962)
!4981 = !DILocation(line: 589, column: 15, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 588, column: 5)
!4983 = !DILocation(line: 590, column: 27, scope: !4982)
!4984 = !DILocation(line: 592, column: 12, scope: !4982)
!4985 = !DILocation(line: 592, column: 10, scope: !4982)
!4986 = !DILocation(line: 593, column: 5, scope: !4982)
!4987 = !DILocation(line: 595, column: 8, scope: !4962)
!4988 = !DILocation(line: 596, column: 34, scope: !4962)
!4989 = !DILocation(line: 596, column: 25, scope: !4962)
!4990 = !DILocation(line: 598, column: 11, scope: !4962)
!4991 = !DILocation(line: 598, column: 3, scope: !4962)
!4992 = !DILocation(line: 599, column: 13, scope: !4962)
!4993 = !DILocation(line: 600, column: 6, scope: !4962)
!4994 = !DILocation(line: 600, column: 12, scope: !4962)
!4995 = !DILocation(line: 601, column: 17, scope: !4962)
!4996 = !DILocation(line: 601, column: 6, scope: !4962)
!4997 = !DILocation(line: 601, column: 15, scope: !4962)
!4998 = !DILocation(line: 602, column: 1, scope: !4962)
!4999 = distinct !DISubprogram(name: "outside_finally_tree", scope: !3, file: !3, line: 301, type: !5000, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5002)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{!653, !2065, !665}
!5002 = !{!5003, !5004, !5005, !5006}
!5003 = !DILocalVariable(name: "start", arg: 1, scope: !4999, file: !3, line: 301, type: !2065)
!5004 = !DILocalVariable(name: "target", arg: 2, scope: !4999, file: !3, line: 301, type: !665)
!5005 = !DILocalVariable(name: "n", scope: !4999, file: !3, line: 303, type: !2062)
!5006 = !DILocalVariable(name: "p", scope: !4999, file: !3, line: 303, type: !2061)
!5007 = !DILocation(line: 0, scope: !4999)
!5008 = !DILocation(line: 303, column: 3, scope: !4999)
!5009 = !DILocation(line: 0, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 306, column: 5)
!5011 = !DILocation(line: 307, column: 17, scope: !5010)
!5012 = !DILocation(line: 305, column: 3, scope: !4999)
!5013 = !DILocation(line: 308, column: 51, scope: !5010)
!5014 = !DILocation(line: 308, column: 40, scope: !5010)
!5015 = !DILocation(line: 309, column: 12, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 309, column: 11)
!5017 = !DILocation(line: 309, column: 11, scope: !5010)
!5018 = !DILocation(line: 311, column: 20, scope: !5010)
!5019 = !DILocation(line: 313, column: 16, scope: !4999)
!5020 = !DILocation(line: 313, column: 18, scope: !4999)
!5021 = !DILocation(line: 312, column: 5, scope: !5010)
!5022 = distinct !{!5022, !5012, !5023}
!5023 = !DILocation(line: 313, column: 27, scope: !4999)
!5024 = !DILocation(line: 316, column: 1, scope: !4999)
!5025 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !142, file: !142, line: 184, type: !5026, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5028)
!5026 = !DISubroutineType(types: !5027)
!5027 = !{!2072, !654}
!5028 = !{!5029}
!5029 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5025, file: !142, line: 184, type: !654)
!5030 = !DILocation(line: 0, scope: !5025)
!5031 = !DILocation(line: 184, column: 1, scope: !5025)
!5032 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !142, file: !142, line: 182, type: !5033, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5036)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!1355, !5035, !847}
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!5036 = !{!5037, !5038, !5039}
!5037 = !DILocalVariable(name: "vec_", arg: 1, scope: !5032, file: !142, line: 182, type: !5035)
!5038 = !DILocalVariable(name: "obj_", arg: 2, scope: !5032, file: !142, line: 182, type: !847)
!5039 = !DILocalVariable(name: "slot_", scope: !5032, file: !142, line: 182, type: !1355)
!5040 = !DILocation(line: 0, scope: !5032)
!5041 = !DILocation(line: 182, column: 1, scope: !5032)
!5042 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !142, file: !142, line: 182, type: !5043, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5047)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!7, !5045}
!5045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5046, size: 64)
!5046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1239)
!5047 = !{!5048}
!5048 = !DILocalVariable(name: "vec_", arg: 1, scope: !5042, file: !142, line: 182, type: !5045)
!5049 = !DILocation(line: 0, scope: !5042)
!5050 = !DILocation(line: 182, column: 1, scope: !5042)
!5051 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !142, file: !142, line: 182, type: !5052, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5054)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{!847, !5045, !7}
!5054 = !{!5055, !5056}
!5055 = !DILocalVariable(name: "vec_", arg: 1, scope: !5051, file: !142, line: 182, type: !5045)
!5056 = !DILocalVariable(name: "ix_", arg: 2, scope: !5051, file: !142, line: 182, type: !7)
!5057 = !DILocation(line: 0, scope: !5051)
!5058 = !DILocation(line: 182, column: 1, scope: !5051)
!5059 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !142, file: !142, line: 184, type: !5060, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5063)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{!1355, !5062, !847}
!5062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!5063 = !{!5064, !5065}
!5064 = !DILocalVariable(name: "vec_", arg: 1, scope: !5059, file: !142, line: 184, type: !5062)
!5065 = !DILocalVariable(name: "obj_", arg: 2, scope: !5059, file: !142, line: 184, type: !847)
!5066 = !DILocation(line: 0, scope: !5059)
!5067 = !DILocation(line: 184, column: 1, scope: !5059)
!5068 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !142, file: !142, line: 184, type: !5069, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5071)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!654, !5062, !654}
!5071 = !{!5072, !5073, !5074}
!5072 = !DILocalVariable(name: "vec_", arg: 1, scope: !5068, file: !142, line: 184, type: !5062)
!5073 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5068, file: !142, line: 184, type: !654)
!5074 = !DILocalVariable(name: "extend", scope: !5068, file: !142, line: 184, type: !654)
!5075 = !DILocation(line: 0, scope: !5068)
!5076 = !DILocation(line: 184, column: 1, scope: !5068)
!5077 = !DILocation(line: 184, column: 1, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5068, file: !142, line: 184, column: 1)
!5079 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !142, file: !142, line: 182, type: !5080, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5082)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!654, !5035, !654}
!5082 = !{!5083, !5084}
!5083 = !DILocalVariable(name: "vec_", arg: 1, scope: !5079, file: !142, line: 182, type: !5035)
!5084 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5079, file: !142, line: 182, type: !654)
!5085 = !DILocation(line: 0, scope: !5079)
!5086 = !DILocation(line: 182, column: 1, scope: !5079)
!5087 = distinct !DISubprogram(name: "eh_region_may_contain_throw", scope: !3, file: !3, line: 865, type: !5088, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5090)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!653, !1106}
!5090 = !{!5091}
!5091 = !DILocalVariable(name: "r", arg: 1, scope: !5087, file: !3, line: 865, type: !1106)
!5092 = !DILocation(line: 0, scope: !5087)
!5093 = !DILocation(line: 867, column: 10, scope: !5087)
!5094 = !DILocation(line: 867, column: 12, scope: !5087)
!5095 = !DILocation(line: 867, column: 29, scope: !5087)
!5096 = !DILocation(line: 867, column: 65, scope: !5087)
!5097 = !DILocation(line: 867, column: 15, scope: !5087)
!5098 = !DILocation(line: 867, column: 3, scope: !5087)
!5099 = distinct !DISubprogram(name: "honor_protect_cleanup_actions", scope: !3, file: !3, line: 977, type: !5100, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5102)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{null, !2090, !2090, !2096}
!5102 = !{!5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110}
!5103 = !DILocalVariable(name: "outer_state", arg: 1, scope: !5099, file: !3, line: 977, type: !2090)
!5104 = !DILocalVariable(name: "this_state", arg: 2, scope: !5099, file: !3, line: 978, type: !2090)
!5105 = !DILocalVariable(name: "tf", arg: 3, scope: !5099, file: !3, line: 979, type: !2096)
!5106 = !DILocalVariable(name: "protect_cleanup_actions", scope: !5099, file: !3, line: 981, type: !847)
!5107 = !DILocalVariable(name: "gsi", scope: !5099, file: !3, line: 982, type: !3873)
!5108 = !DILocalVariable(name: "finally_may_fallthru", scope: !5099, file: !3, line: 983, type: !653)
!5109 = !DILocalVariable(name: "finally", scope: !5099, file: !3, line: 984, type: !716)
!5110 = !DILocalVariable(name: "x", scope: !5099, file: !3, line: 985, type: !665)
!5111 = !DILocation(line: 0, scope: !5099)
!5112 = !DILocation(line: 982, column: 3, scope: !5099)
!5113 = !DILocation(line: 988, column: 7, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 988, column: 7)
!5115 = !DILocation(line: 988, column: 36, scope: !5114)
!5116 = !DILocation(line: 988, column: 7, scope: !5099)
!5117 = !DILocation(line: 990, column: 29, scope: !5099)
!5118 = !DILocation(line: 991, column: 31, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 991, column: 7)
!5120 = !DILocation(line: 991, column: 7, scope: !5099)
!5121 = !DILocation(line: 994, column: 37, scope: !5099)
!5122 = !DILocation(line: 994, column: 13, scope: !5099)
!5123 = !DILocation(line: 995, column: 26, scope: !5099)
!5124 = !DILocation(line: 999, column: 7, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 999, column: 7)
!5126 = !DILocation(line: 999, column: 7, scope: !5099)
!5127 = !DILocation(line: 1000, column: 15, scope: !5125)
!5128 = !DILocation(line: 1000, column: 5, scope: !5125)
!5129 = !DILocation(line: 1009, column: 9, scope: !5099)
!5130 = !DILocation(line: 1010, column: 7, scope: !5099)
!5131 = !DILocation(line: 1011, column: 7, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1011, column: 7)
!5133 = !DILocation(line: 1011, column: 23, scope: !5132)
!5134 = !DILocation(line: 1012, column: 7, scope: !5132)
!5135 = !DILocation(line: 1012, column: 10, scope: !5132)
!5136 = !DILocation(line: 1012, column: 30, scope: !5132)
!5137 = !DILocation(line: 1013, column: 7, scope: !5132)
!5138 = !DILocation(line: 1013, column: 10, scope: !5132)
!5139 = !DILocation(line: 1011, column: 7, scope: !5099)
!5140 = !DILocation(line: 1015, column: 36, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1014, column: 5)
!5142 = !DILocation(line: 1015, column: 7, scope: !5141)
!5143 = !DILocation(line: 1016, column: 7, scope: !5141)
!5144 = !DILocation(line: 1017, column: 5, scope: !5141)
!5145 = !DILocation(line: 1020, column: 7, scope: !5099)
!5146 = !DILocation(line: 1021, column: 34, scope: !5099)
!5147 = !DILocation(line: 1021, column: 7, scope: !5099)
!5148 = !DILocation(line: 1023, column: 13, scope: !5099)
!5149 = !DILocation(line: 1026, column: 39, scope: !5099)
!5150 = !DILocation(line: 1026, column: 3, scope: !5099)
!5151 = !DILocation(line: 1027, column: 3, scope: !5099)
!5152 = !DILocation(line: 1028, column: 7, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1028, column: 7)
!5154 = !DILocation(line: 1028, column: 7, scope: !5099)
!5155 = !DILocation(line: 1029, column: 29, scope: !5153)
!5156 = !DILocation(line: 1029, column: 5, scope: !5153)
!5157 = !DILocation(line: 1033, column: 7, scope: !5099)
!5158 = !DILocation(line: 1033, column: 17, scope: !5099)
!5159 = !DILocation(line: 1034, column: 1, scope: !5099)
!5160 = distinct !DISubprogram(name: "gimple_try_set_cleanup", scope: !568, file: !568, line: 2999, type: !5161, scopeLine: 3000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5163)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{null, !665, !716}
!5163 = !{!5164, !5165}
!5164 = !DILocalVariable(name: "gs", arg: 1, scope: !5160, file: !568, line: 2999, type: !665)
!5165 = !DILocalVariable(name: "cleanup", arg: 2, scope: !5160, file: !568, line: 2999, type: !716)
!5166 = !DILocation(line: 0, scope: !5160)
!5167 = !DILocation(line: 3002, column: 18, scope: !5160)
!5168 = !DILocation(line: 3002, column: 26, scope: !5160)
!5169 = !DILocation(line: 3003, column: 1, scope: !5160)
!5170 = distinct !DISubprogram(name: "lower_try_finally_nofallthru", scope: !3, file: !3, line: 1042, type: !2088, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5171)
!5171 = !{!5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179}
!5172 = !DILocalVariable(name: "state", arg: 1, scope: !5170, file: !3, line: 1042, type: !2090)
!5173 = !DILocalVariable(name: "tf", arg: 2, scope: !5170, file: !3, line: 1043, type: !2096)
!5174 = !DILocalVariable(name: "lab", scope: !5170, file: !3, line: 1045, type: !847)
!5175 = !DILocalVariable(name: "return_val", scope: !5170, file: !3, line: 1045, type: !847)
!5176 = !DILocalVariable(name: "x", scope: !5170, file: !3, line: 1046, type: !665)
!5177 = !DILocalVariable(name: "finally", scope: !5170, file: !3, line: 1047, type: !716)
!5178 = !DILocalVariable(name: "q", scope: !5170, file: !3, line: 1048, type: !2077)
!5179 = !DILocalVariable(name: "qe", scope: !5170, file: !3, line: 1048, type: !2077)
!5180 = !DILocation(line: 0, scope: !5170)
!5181 = !DILocation(line: 1045, column: 3, scope: !5170)
!5182 = !DILocation(line: 1050, column: 55, scope: !5170)
!5183 = !DILocation(line: 1050, column: 34, scope: !5170)
!5184 = !DILocation(line: 1050, column: 9, scope: !5170)
!5185 = !DILocation(line: 1053, column: 37, scope: !5170)
!5186 = !DILocation(line: 1053, column: 13, scope: !5170)
!5187 = !DILocation(line: 1054, column: 40, scope: !5170)
!5188 = !DILocation(line: 1054, column: 19, scope: !5170)
!5189 = !DILocation(line: 1054, column: 7, scope: !5170)
!5190 = !DILocation(line: 1054, column: 17, scope: !5170)
!5191 = !DILocation(line: 1056, column: 7, scope: !5170)
!5192 = !DILocation(line: 1057, column: 3, scope: !5170)
!5193 = !DILocation(line: 1059, column: 14, scope: !5170)
!5194 = !DILocation(line: 1060, column: 11, scope: !5170)
!5195 = !DILocation(line: 1061, column: 16, scope: !5170)
!5196 = !DILocation(line: 1061, column: 10, scope: !5170)
!5197 = !DILocation(line: 1062, column: 3, scope: !5170)
!5198 = !DILocation(line: 1062, column: 12, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1062, column: 3)
!5200 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1062, column: 3)
!5201 = !DILocation(line: 1062, column: 3, scope: !5200)
!5202 = !DILocation(line: 1063, column: 12, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 1063, column: 9)
!5204 = !DILocation(line: 1063, column: 18, scope: !5203)
!5205 = !DILocation(line: 1063, column: 9, scope: !5199)
!5206 = !DILocation(line: 1064, column: 7, scope: !5203)
!5207 = !DILocation(line: 1066, column: 7, scope: !5203)
!5208 = !DILocation(line: 1062, column: 18, scope: !5199)
!5209 = !DILocation(line: 1062, column: 3, scope: !5199)
!5210 = distinct !{!5210, !5201, !5211}
!5211 = !DILocation(line: 1066, column: 44, scope: !5200)
!5212 = !DILocation(line: 1068, column: 3, scope: !5170)
!5213 = !DILocation(line: 1070, column: 3, scope: !5170)
!5214 = !DILocation(line: 1071, column: 3, scope: !5170)
!5215 = !DILocation(line: 1073, column: 11, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1073, column: 7)
!5217 = !DILocation(line: 1073, column: 7, scope: !5216)
!5218 = !DILocation(line: 1073, column: 7, scope: !5170)
!5219 = !DILocation(line: 1075, column: 43, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 1074, column: 5)
!5221 = !DILocation(line: 1075, column: 7, scope: !5220)
!5222 = !DILocation(line: 1077, column: 11, scope: !5220)
!5223 = !DILocation(line: 1078, column: 7, scope: !5220)
!5224 = !DILocation(line: 1079, column: 5, scope: !5220)
!5225 = !DILocation(line: 1080, column: 1, scope: !5170)
!5226 = distinct !DISubprogram(name: "lower_try_finally_onedest", scope: !3, file: !3, line: 1087, type: !2088, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5227)
!5227 = !{!5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236}
!5228 = !DILocalVariable(name: "state", arg: 1, scope: !5226, file: !3, line: 1087, type: !2090)
!5229 = !DILocalVariable(name: "tf", arg: 2, scope: !5226, file: !3, line: 1087, type: !2096)
!5230 = !DILocalVariable(name: "q", scope: !5226, file: !3, line: 1089, type: !2077)
!5231 = !DILocalVariable(name: "qe", scope: !5226, file: !3, line: 1089, type: !2077)
!5232 = !DILocalVariable(name: "x", scope: !5226, file: !3, line: 1090, type: !665)
!5233 = !DILocalVariable(name: "finally", scope: !5226, file: !3, line: 1091, type: !716)
!5234 = !DILocalVariable(name: "finally_label", scope: !5226, file: !3, line: 1092, type: !847)
!5235 = !DILocalVariable(name: "loc", scope: !5226, file: !3, line: 1093, type: !684)
!5236 = !DILocalVariable(name: "return_val", scope: !5237, file: !3, line: 1130, type: !847)
!5237 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 1128, column: 5)
!5238 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 1127, column: 7)
!5239 = !DILocation(line: 0, scope: !5226)
!5240 = !DILocation(line: 1093, column: 41, scope: !5226)
!5241 = !DILocation(line: 1093, column: 20, scope: !5226)
!5242 = !DILocation(line: 1095, column: 37, scope: !5226)
!5243 = !DILocation(line: 1095, column: 13, scope: !5226)
!5244 = !DILocation(line: 1096, column: 40, scope: !5226)
!5245 = !DILocation(line: 1096, column: 19, scope: !5226)
!5246 = !DILocation(line: 1096, column: 7, scope: !5226)
!5247 = !DILocation(line: 1096, column: 17, scope: !5226)
!5248 = !DILocation(line: 1098, column: 3, scope: !5226)
!5249 = !DILocation(line: 1100, column: 11, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 1100, column: 7)
!5251 = !DILocation(line: 1100, column: 7, scope: !5250)
!5252 = !DILocation(line: 1100, column: 7, scope: !5226)
!5253 = !DILocation(line: 1104, column: 43, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 1101, column: 5)
!5255 = !DILocation(line: 1104, column: 7, scope: !5254)
!5256 = !DILocation(line: 1105, column: 7, scope: !5254)
!5257 = !DILocation(line: 1106, column: 31, scope: !5254)
!5258 = !DILocation(line: 1106, column: 7, scope: !5254)
!5259 = !DILocation(line: 1107, column: 7, scope: !5254)
!5260 = !DILocation(line: 1110, column: 11, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 1110, column: 7)
!5262 = !DILocation(line: 1110, column: 7, scope: !5261)
!5263 = !DILocation(line: 1110, column: 7, scope: !5226)
!5264 = !DILocation(line: 1114, column: 7, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1111, column: 5)
!5266 = !DILocation(line: 1115, column: 7, scope: !5265)
!5267 = !DILocation(line: 1118, column: 19, scope: !5226)
!5268 = !DILocation(line: 1119, column: 7, scope: !5226)
!5269 = !DILocation(line: 1120, column: 3, scope: !5226)
!5270 = !DILocation(line: 1122, column: 3, scope: !5226)
!5271 = !DILocation(line: 1124, column: 11, scope: !5226)
!5272 = !DILocation(line: 1125, column: 16, scope: !5226)
!5273 = !DILocation(line: 1125, column: 10, scope: !5226)
!5274 = !DILocation(line: 1127, column: 11, scope: !5238)
!5275 = !DILocation(line: 1127, column: 7, scope: !5238)
!5276 = !DILocation(line: 1127, column: 7, scope: !5226)
!5277 = !DILocation(line: 1138, column: 7, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1138, column: 7)
!5279 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 1136, column: 5)
!5280 = !DILocation(line: 1130, column: 7, scope: !5237)
!5281 = !DILocation(line: 0, scope: !5237)
!5282 = !DILocation(line: 1130, column: 12, scope: !5237)
!5283 = !DILocation(line: 1131, column: 7, scope: !5237)
!5284 = !DILocation(line: 1131, column: 16, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1131, column: 7)
!5286 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1131, column: 7)
!5287 = !DILocation(line: 1131, column: 7, scope: !5286)
!5288 = !DILocation(line: 1132, column: 2, scope: !5285)
!5289 = !DILocation(line: 1131, column: 22, scope: !5285)
!5290 = !DILocation(line: 1131, column: 7, scope: !5285)
!5291 = distinct !{!5291, !5287, !5292}
!5292 = !DILocation(line: 1132, column: 60, scope: !5286)
!5293 = !DILocation(line: 1133, column: 7, scope: !5237)
!5294 = !DILocation(line: 1134, column: 5, scope: !5238)
!5295 = !DILocation(line: 1134, column: 5, scope: !5237)
!5296 = !DILocation(line: 1138, column: 16, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 1138, column: 7)
!5298 = !DILocation(line: 1139, column: 2, scope: !5297)
!5299 = !DILocation(line: 1138, column: 22, scope: !5297)
!5300 = !DILocation(line: 1138, column: 7, scope: !5297)
!5301 = distinct !{!5301, !5277, !5302}
!5302 = !DILocation(line: 1139, column: 49, scope: !5278)
!5303 = !DILocation(line: 1140, column: 7, scope: !5279)
!5304 = !DILocation(line: 1142, column: 11, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1142, column: 11)
!5306 = !DILocation(line: 1142, column: 54, scope: !5305)
!5307 = !DILocation(line: 1142, column: 47, scope: !5305)
!5308 = !DILocation(line: 1142, column: 11, scope: !5279)
!5309 = !DILocation(line: 1147, column: 23, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 1143, column: 2)
!5311 = !DILocation(line: 1148, column: 4, scope: !5310)
!5312 = !DILocation(line: 1154, column: 11, scope: !5226)
!5313 = !DILocation(line: 1154, column: 25, scope: !5226)
!5314 = !DILocation(line: 1155, column: 3, scope: !5226)
!5315 = !DILocation(line: 1156, column: 3, scope: !5226)
!5316 = !DILocation(line: 1157, column: 1, scope: !5226)
!5317 = distinct !DISubprogram(name: "decide_copy_try_finally", scope: !3, file: !3, line: 1497, type: !5318, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5320)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!653, !654, !716}
!5320 = !{!5321, !5322, !5323, !5324}
!5321 = !DILocalVariable(name: "ndests", arg: 1, scope: !5317, file: !3, line: 1497, type: !654)
!5322 = !DILocalVariable(name: "finally", arg: 2, scope: !5317, file: !3, line: 1497, type: !716)
!5323 = !DILocalVariable(name: "f_estimate", scope: !5317, file: !3, line: 1499, type: !654)
!5324 = !DILocalVariable(name: "sw_estimate", scope: !5317, file: !3, line: 1499, type: !654)
!5325 = !DILocation(line: 0, scope: !5317)
!5326 = !DILocation(line: 1501, column: 8, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1501, column: 7)
!5328 = !DILocation(line: 1501, column: 7, scope: !5317)
!5329 = !DILocation(line: 1505, column: 16, scope: !5317)
!5330 = !DILocation(line: 1506, column: 28, scope: !5317)
!5331 = !DILocation(line: 1506, column: 33, scope: !5317)
!5332 = !DILocation(line: 1509, column: 24, scope: !5317)
!5333 = !DILocation(line: 1509, column: 20, scope: !5317)
!5334 = !DILocation(line: 1512, column: 37, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1512, column: 7)
!5336 = !DILocation(line: 1512, column: 7, scope: !5335)
!5337 = !DILocation(line: 1512, column: 7, scope: !5317)
!5338 = !DILocation(line: 1513, column: 23, scope: !5335)
!5339 = !DILocation(line: 1513, column: 12, scope: !5335)
!5340 = !DILocation(line: 1513, column: 5, scope: !5335)
!5341 = !DILocation(line: 1516, column: 7, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1516, column: 7)
!5343 = !DILocation(line: 1516, column: 16, scope: !5342)
!5344 = !DILocation(line: 1516, column: 7, scope: !5317)
!5345 = !DILocation(line: 1517, column: 23, scope: !5342)
!5346 = !DILocation(line: 1517, column: 29, scope: !5342)
!5347 = !DILocation(line: 1517, column: 12, scope: !5342)
!5348 = !DILocation(line: 1517, column: 5, scope: !5342)
!5349 = !DILocation(line: 1519, column: 23, scope: !5342)
!5350 = !DILocation(line: 1519, column: 28, scope: !5342)
!5351 = !DILocation(line: 1519, column: 42, scope: !5342)
!5352 = !DILocation(line: 1519, column: 60, scope: !5342)
!5353 = !DILocation(line: 1519, column: 46, scope: !5342)
!5354 = !DILocation(line: 1519, column: 5, scope: !5342)
!5355 = !DILocation(line: 1520, column: 1, scope: !5317)
!5356 = !DILocation(line: 0, scope: !2087)
!5357 = !DILocation(line: 1167, column: 3, scope: !2087)
!5358 = !DILocation(line: 1171, column: 44, scope: !2087)
!5359 = !DILocation(line: 1171, column: 23, scope: !2087)
!5360 = !DILocation(line: 1173, column: 37, scope: !2087)
!5361 = !DILocation(line: 1173, column: 13, scope: !2087)
!5362 = !DILocation(line: 1174, column: 40, scope: !2087)
!5363 = !DILocation(line: 1174, column: 19, scope: !2087)
!5364 = !DILocation(line: 1174, column: 7, scope: !2087)
!5365 = !DILocation(line: 1174, column: 17, scope: !2087)
!5366 = !DILocation(line: 1175, column: 12, scope: !2087)
!5367 = !DILocation(line: 1177, column: 11, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 1177, column: 7)
!5369 = !DILocation(line: 1177, column: 7, scope: !5368)
!5370 = !DILocation(line: 1177, column: 7, scope: !2087)
!5371 = !DILocation(line: 1179, column: 13, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1178, column: 5)
!5373 = !DILocation(line: 1180, column: 7, scope: !5372)
!5374 = !DILocation(line: 1181, column: 7, scope: !5372)
!5375 = !DILocation(line: 1183, column: 13, scope: !5372)
!5376 = !DILocation(line: 1184, column: 11, scope: !5372)
!5377 = !DILocation(line: 1185, column: 7, scope: !5372)
!5378 = !DILocation(line: 1186, column: 5, scope: !5372)
!5379 = !DILocation(line: 1188, column: 11, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 1188, column: 7)
!5381 = !DILocation(line: 1188, column: 7, scope: !5380)
!5382 = !DILocation(line: 1188, column: 7, scope: !2087)
!5383 = !DILocation(line: 1190, column: 13, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1189, column: 5)
!5385 = !DILocation(line: 1191, column: 7, scope: !5384)
!5386 = !DILocation(line: 1193, column: 43, scope: !5384)
!5387 = !DILocation(line: 1193, column: 7, scope: !5384)
!5388 = !DILocation(line: 1194, column: 7, scope: !5384)
!5389 = !DILocation(line: 1195, column: 31, scope: !5384)
!5390 = !DILocation(line: 1195, column: 7, scope: !5384)
!5391 = !DILocation(line: 1196, column: 5, scope: !5384)
!5392 = !DILocation(line: 1198, column: 11, scope: !2124)
!5393 = !DILocation(line: 1198, column: 7, scope: !2124)
!5394 = !DILocation(line: 1198, column: 7, scope: !2087)
!5395 = !DILocation(line: 1201, column: 7, scope: !2123)
!5396 = !DILocation(line: 0, scope: !2123)
!5397 = !DILocation(line: 1201, column: 12, scope: !2123)
!5398 = !DILocation(line: 1209, column: 22, scope: !2123)
!5399 = !DILocation(line: 1210, column: 16, scope: !2123)
!5400 = !DILocation(line: 1212, column: 15, scope: !2123)
!5401 = !DILocation(line: 1213, column: 20, scope: !2123)
!5402 = !DILocation(line: 1213, column: 14, scope: !2123)
!5403 = !DILocation(line: 1214, column: 7, scope: !2123)
!5404 = !DILocation(line: 1214, column: 16, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 1214, column: 7)
!5406 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 1214, column: 7)
!5407 = !DILocation(line: 1214, column: 7, scope: !5406)
!5408 = !DILocation(line: 1222, column: 7, scope: !2133)
!5409 = !DILocation(line: 1216, column: 15, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 1215, column: 2)
!5411 = !DILocation(line: 1216, column: 21, scope: !5410)
!5412 = !DILocation(line: 1216, column: 12, scope: !5410)
!5413 = !DILocation(line: 1218, column: 9, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1218, column: 8)
!5415 = !DILocation(line: 1218, column: 23, scope: !5414)
!5416 = !DILocation(line: 1218, column: 8, scope: !5410)
!5417 = !DILocation(line: 1219, column: 22, scope: !5414)
!5418 = !DILocation(line: 1219, column: 6, scope: !5414)
!5419 = !DILocation(line: 1214, column: 23, scope: !5405)
!5420 = !DILocation(line: 1214, column: 7, scope: !5405)
!5421 = distinct !{!5421, !5407, !5422}
!5422 = !DILocation(line: 1220, column: 2, scope: !5406)
!5423 = !DILocation(line: 0, scope: !2133)
!5424 = !DILocation(line: 1222, column: 29, scope: !2132)
!5425 = !DILocation(line: 1226, column: 22, scope: !2131)
!5426 = !DILocation(line: 1227, column: 10, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 1227, column: 8)
!5428 = !DILocation(line: 1227, column: 8, scope: !2131)
!5429 = !DILocation(line: 1231, column: 8, scope: !2131)
!5430 = !DILocation(line: 1230, column: 24, scope: !2131)
!5431 = !DILocation(line: 1231, column: 6, scope: !2131)
!5432 = !DILocation(line: 0, scope: !2131)
!5433 = !DILocation(line: 1233, column: 14, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 1233, column: 8)
!5435 = !DILocation(line: 1233, column: 8, scope: !2131)
!5436 = !DILocation(line: 1234, column: 6, scope: !5434)
!5437 = !DILocation(line: 1236, column: 6, scope: !5434)
!5438 = !DILocation(line: 1238, column: 8, scope: !2131)
!5439 = !DILocation(line: 1239, column: 11, scope: !2131)
!5440 = !DILocation(line: 1241, column: 10, scope: !2131)
!5441 = !DILocation(line: 1242, column: 4, scope: !2131)
!5442 = !DILocation(line: 1243, column: 11, scope: !2131)
!5443 = !DILocation(line: 1245, column: 46, scope: !2131)
!5444 = !DILocation(line: 1245, column: 11, scope: !2131)
!5445 = !DILocation(line: 1246, column: 42, scope: !2131)
!5446 = !DILocation(line: 1246, column: 4, scope: !2131)
!5447 = !DILocation(line: 1247, column: 2, scope: !2132)
!5448 = !DILocation(line: 1222, column: 54, scope: !2132)
!5449 = !DILocation(line: 1222, column: 7, scope: !2132)
!5450 = distinct !{!5450, !5408, !5451}
!5451 = !DILocation(line: 1247, column: 2, scope: !2133)
!5452 = !DILocation(line: 1249, column: 20, scope: !2137)
!5453 = !DILocation(line: 1249, column: 12, scope: !2137)
!5454 = !DILocation(line: 0, scope: !2137)
!5455 = !DILocation(line: 1249, column: 34, scope: !2136)
!5456 = !DILocation(line: 1249, column: 7, scope: !2137)
!5457 = !DILocation(line: 1253, column: 15, scope: !2135)
!5458 = !DILocation(line: 1253, column: 21, scope: !2135)
!5459 = !DILocation(line: 1253, column: 12, scope: !2135)
!5460 = !DILocation(line: 1255, column: 8, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !2135, file: !3, line: 1255, column: 8)
!5462 = !DILocation(line: 1255, column: 22, scope: !5461)
!5463 = !DILocation(line: 1255, column: 24, scope: !5461)
!5464 = !DILocation(line: 1255, column: 8, scope: !2135)
!5465 = !DILocation(line: 1258, column: 24, scope: !2135)
!5466 = !DILocation(line: 0, scope: !2135)
!5467 = !DILocation(line: 1260, column: 14, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !2135, file: !3, line: 1260, column: 8)
!5469 = !DILocation(line: 1260, column: 8, scope: !2135)
!5470 = !DILocation(line: 1261, column: 6, scope: !5468)
!5471 = !DILocation(line: 1263, column: 6, scope: !5468)
!5472 = !DILocation(line: 1249, column: 41, scope: !2136)
!5473 = !DILocation(line: 1249, column: 7, scope: !2136)
!5474 = distinct !{!5474, !5456, !5475}
!5475 = !DILocation(line: 1264, column: 2, scope: !2137)
!5476 = !DILocation(line: 1266, column: 7, scope: !2123)
!5477 = !DILocation(line: 1267, column: 7, scope: !2123)
!5478 = !DILocation(line: 1268, column: 5, scope: !2124)
!5479 = !DILocation(line: 1268, column: 5, scope: !2123)
!5480 = !DILocation(line: 1272, column: 39, scope: !2087)
!5481 = !DILocation(line: 1272, column: 3, scope: !2087)
!5482 = !DILocation(line: 1273, column: 1, scope: !2087)
!5483 = distinct !DISubprogram(name: "lower_try_finally_switch", scope: !3, file: !3, line: 1281, type: !2088, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5484)
!5484 = !{!5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5513, !5514, !5515, !5518, !5519, !5523, !5524}
!5485 = !DILocalVariable(name: "state", arg: 1, scope: !5483, file: !3, line: 1281, type: !2090)
!5486 = !DILocalVariable(name: "tf", arg: 2, scope: !5483, file: !3, line: 1281, type: !2096)
!5487 = !DILocalVariable(name: "q", scope: !5483, file: !3, line: 1283, type: !2077)
!5488 = !DILocalVariable(name: "qe", scope: !5483, file: !3, line: 1283, type: !2077)
!5489 = !DILocalVariable(name: "return_val", scope: !5483, file: !3, line: 1284, type: !847)
!5490 = !DILocalVariable(name: "finally_tmp", scope: !5483, file: !3, line: 1285, type: !847)
!5491 = !DILocalVariable(name: "finally_label", scope: !5483, file: !3, line: 1285, type: !847)
!5492 = !DILocalVariable(name: "return_index", scope: !5483, file: !3, line: 1286, type: !654)
!5493 = !DILocalVariable(name: "eh_index", scope: !5483, file: !3, line: 1286, type: !654)
!5494 = !DILocalVariable(name: "fallthru_index", scope: !5483, file: !3, line: 1286, type: !654)
!5495 = !DILocalVariable(name: "nlabels", scope: !5483, file: !3, line: 1287, type: !654)
!5496 = !DILocalVariable(name: "ndests", scope: !5483, file: !3, line: 1287, type: !654)
!5497 = !DILocalVariable(name: "j", scope: !5483, file: !3, line: 1287, type: !654)
!5498 = !DILocalVariable(name: "last_case_index", scope: !5483, file: !3, line: 1287, type: !654)
!5499 = !DILocalVariable(name: "last_case", scope: !5483, file: !3, line: 1288, type: !847)
!5500 = !DILocalVariable(name: "case_label_vec", scope: !5483, file: !3, line: 1289, type: !2072)
!5501 = !DILocalVariable(name: "switch_body", scope: !5483, file: !3, line: 1290, type: !716)
!5502 = !DILocalVariable(name: "x", scope: !5483, file: !3, line: 1291, type: !665)
!5503 = !DILocalVariable(name: "tmp", scope: !5483, file: !3, line: 1292, type: !847)
!5504 = !DILocalVariable(name: "switch_stmt", scope: !5483, file: !3, line: 1293, type: !665)
!5505 = !DILocalVariable(name: "finally", scope: !5483, file: !3, line: 1294, type: !716)
!5506 = !DILocalVariable(name: "cont_map", scope: !5483, file: !3, line: 1295, type: !1331)
!5507 = !DILocalVariable(name: "tf_loc", scope: !5483, file: !3, line: 1297, type: !684)
!5508 = !DILocalVariable(name: "finally_loc", scope: !5483, file: !3, line: 1299, type: !684)
!5509 = !DILocalVariable(name: "mod", scope: !5510, file: !3, line: 1392, type: !716)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1391, column: 5)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 1390, column: 3)
!5512 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1390, column: 3)
!5513 = !DILocalVariable(name: "switch_id", scope: !5510, file: !3, line: 1393, type: !654)
!5514 = !DILocalVariable(name: "case_index", scope: !5510, file: !3, line: 1394, type: !7)
!5515 = !DILocalVariable(name: "case_lab", scope: !5516, file: !3, line: 1419, type: !847)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 1418, column: 9)
!5517 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 1416, column: 11)
!5518 = !DILocalVariable(name: "slot", scope: !5516, file: !3, line: 1420, type: !1206)
!5519 = !DILocalVariable(name: "label", scope: !5520, file: !3, line: 1437, type: !847)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 1436, column: 5)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 1435, column: 3)
!5522 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1435, column: 3)
!5523 = !DILocalVariable(name: "cont_stmt", scope: !5520, file: !3, line: 1438, type: !665)
!5524 = !DILocalVariable(name: "slot", scope: !5520, file: !3, line: 1439, type: !1206)
!5525 = !DILocation(line: 0, scope: !5483)
!5526 = !DILocation(line: 1284, column: 3, scope: !5483)
!5527 = !DILocation(line: 1284, column: 8, scope: !5483)
!5528 = !DILocation(line: 1290, column: 3, scope: !5483)
!5529 = !DILocation(line: 1297, column: 44, scope: !5483)
!5530 = !DILocation(line: 1297, column: 23, scope: !5483)
!5531 = !DILocation(line: 1301, column: 17, scope: !5483)
!5532 = !DILocation(line: 1301, column: 15, scope: !5483)
!5533 = !DILocation(line: 1304, column: 37, scope: !5483)
!5534 = !DILocation(line: 1304, column: 13, scope: !5483)
!5535 = !DILocation(line: 1305, column: 40, scope: !5483)
!5536 = !DILocation(line: 1305, column: 19, scope: !5483)
!5537 = !DILocation(line: 1305, column: 7, scope: !5483)
!5538 = !DILocation(line: 1305, column: 17, scope: !5483)
!5539 = !DILocation(line: 1309, column: 17, scope: !5483)
!5540 = !DILocation(line: 1309, column: 54, scope: !5483)
!5541 = !DILocation(line: 1310, column: 48, scope: !5483)
!5542 = !DILocation(line: 1310, column: 22, scope: !5483)
!5543 = !DILocation(line: 1310, column: 5, scope: !5483)
!5544 = !DILocation(line: 1314, column: 3, scope: !5483)
!5545 = !DILocation(line: 1317, column: 13, scope: !5483)
!5546 = !DILocation(line: 1319, column: 33, scope: !5483)
!5547 = !DILocation(line: 1319, column: 29, scope: !5483)
!5548 = !DILocation(line: 1319, column: 27, scope: !5483)
!5549 = !DILocation(line: 1320, column: 35, scope: !5483)
!5550 = !DILocation(line: 1320, column: 31, scope: !5483)
!5551 = !DILocation(line: 1320, column: 29, scope: !5483)
!5552 = !DILocation(line: 1321, column: 33, scope: !5483)
!5553 = !DILocation(line: 1321, column: 29, scope: !5483)
!5554 = !DILocation(line: 1321, column: 27, scope: !5483)
!5555 = !DILocation(line: 1323, column: 33, scope: !5483)
!5556 = !DILocation(line: 1323, column: 17, scope: !5483)
!5557 = !DILocation(line: 1324, column: 19, scope: !5483)
!5558 = !DILocation(line: 1329, column: 20, scope: !5483)
!5559 = !DILocation(line: 1337, column: 11, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1337, column: 7)
!5561 = !DILocation(line: 1337, column: 7, scope: !5560)
!5562 = !DILocation(line: 1337, column: 7, scope: !5483)
!5563 = !DILocation(line: 1339, column: 11, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 1338, column: 5)
!5565 = !DILocation(line: 1341, column: 7, scope: !5564)
!5566 = !DILocation(line: 1343, column: 19, scope: !5564)
!5567 = !DILocation(line: 1346, column: 7, scope: !5564)
!5568 = !DILocation(line: 1349, column: 31, scope: !5564)
!5569 = !DILocation(line: 1349, column: 11, scope: !5564)
!5570 = !DILocation(line: 1350, column: 7, scope: !5564)
!5571 = !DILocation(line: 1352, column: 13, scope: !5564)
!5572 = !DILocation(line: 1353, column: 11, scope: !5564)
!5573 = !DILocation(line: 1354, column: 7, scope: !5564)
!5574 = !DILocation(line: 1355, column: 5, scope: !5564)
!5575 = !DILocation(line: 1357, column: 11, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1357, column: 7)
!5577 = !DILocation(line: 1357, column: 7, scope: !5576)
!5578 = !DILocation(line: 1357, column: 7, scope: !5483)
!5579 = !DILocation(line: 1359, column: 43, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 1358, column: 5)
!5581 = !DILocation(line: 1359, column: 7, scope: !5580)
!5582 = !DILocation(line: 1361, column: 11, scope: !5580)
!5583 = !DILocation(line: 1363, column: 7, scope: !5580)
!5584 = !DILocation(line: 1365, column: 11, scope: !5580)
!5585 = !DILocation(line: 1366, column: 7, scope: !5580)
!5586 = !DILocation(line: 1368, column: 19, scope: !5580)
!5587 = !DILocation(line: 1371, column: 7, scope: !5580)
!5588 = !DILocation(line: 1372, column: 22, scope: !5580)
!5589 = !DILocation(line: 1374, column: 31, scope: !5580)
!5590 = !DILocation(line: 1374, column: 11, scope: !5580)
!5591 = !DILocation(line: 1375, column: 7, scope: !5580)
!5592 = !DILocation(line: 1376, column: 31, scope: !5580)
!5593 = !DILocation(line: 1376, column: 7, scope: !5580)
!5594 = !DILocation(line: 1377, column: 5, scope: !5580)
!5595 = !DILocation(line: 1379, column: 7, scope: !5483)
!5596 = !DILocation(line: 1380, column: 3, scope: !5483)
!5597 = !DILocation(line: 1382, column: 3, scope: !5483)
!5598 = !DILocation(line: 1385, column: 11, scope: !5483)
!5599 = !DILocation(line: 1386, column: 16, scope: !5483)
!5600 = !DILocation(line: 1386, column: 10, scope: !5483)
!5601 = !DILocation(line: 1387, column: 29, scope: !5483)
!5602 = !DILocation(line: 1387, column: 25, scope: !5483)
!5603 = !DILocation(line: 1387, column: 23, scope: !5483)
!5604 = !DILocation(line: 0, scope: !5510)
!5605 = !DILocation(line: 0, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1399, column: 2)
!5607 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 1398, column: 11)
!5608 = !DILocation(line: 0, scope: !5517)
!5609 = !DILocation(line: 1390, column: 3, scope: !5483)
!5610 = !DILocation(line: 1295, column: 25, scope: !5483)
!5611 = !DILocation(line: 1390, column: 12, scope: !5511)
!5612 = !DILocation(line: 1390, column: 3, scope: !5512)
!5613 = !DILocation(line: 0, scope: !5521)
!5614 = !DILocation(line: 0, scope: !5520)
!5615 = !DILocation(line: 1435, column: 3, scope: !5522)
!5616 = !DILocation(line: 0, scope: !5522)
!5617 = !DILocation(line: 1435, column: 31, scope: !5521)
!5618 = !DILocation(line: 1441, column: 19, scope: !5520)
!5619 = !DILocation(line: 1443, column: 7, scope: !5520)
!5620 = !DILocation(line: 1444, column: 7, scope: !5520)
!5621 = !DILocation(line: 1446, column: 46, scope: !5520)
!5622 = !DILocation(line: 1446, column: 14, scope: !5520)
!5623 = !DILocation(line: 1449, column: 7, scope: !5520)
!5624 = !DILocation(line: 1450, column: 19, scope: !5520)
!5625 = !DILocation(line: 1452, column: 15, scope: !5520)
!5626 = !DILocation(line: 1453, column: 7, scope: !5520)
!5627 = !DILocation(line: 1453, column: 30, scope: !5520)
!5628 = !DILocation(line: 1455, column: 11, scope: !5520)
!5629 = !DILocation(line: 1456, column: 7, scope: !5520)
!5630 = !DILocation(line: 1457, column: 7, scope: !5520)
!5631 = !DILocation(line: 1458, column: 7, scope: !5520)
!5632 = !DILocation(line: 1435, column: 61, scope: !5521)
!5633 = !DILocation(line: 1435, column: 3, scope: !5521)
!5634 = distinct !{!5634, !5615, !5635}
!5635 = !DILocation(line: 1459, column: 5, scope: !5522)
!5636 = !DILocation(line: 1460, column: 7, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1460, column: 7)
!5638 = !DILocation(line: 1392, column: 7, scope: !5510)
!5639 = !DILocation(line: 1396, column: 13, scope: !5510)
!5640 = !DILocation(line: 1396, column: 11, scope: !5510)
!5641 = !DILocation(line: 1398, column: 14, scope: !5607)
!5642 = !DILocation(line: 1398, column: 20, scope: !5607)
!5643 = !DILocation(line: 1398, column: 11, scope: !5510)
!5644 = !DILocation(line: 1400, column: 8, scope: !5606)
!5645 = !DILocation(line: 1402, column: 4, scope: !5606)
!5646 = !DILocation(line: 1403, column: 45, scope: !5606)
!5647 = !DILocation(line: 1403, column: 4, scope: !5606)
!5648 = !DILocation(line: 1415, column: 27, scope: !5510)
!5649 = !DILocation(line: 1405, column: 2, scope: !5606)
!5650 = !DILocation(line: 1408, column: 8, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1407, column: 2)
!5652 = !DILocation(line: 1410, column: 4, scope: !5651)
!5653 = !DILocation(line: 1411, column: 43, scope: !5651)
!5654 = !DILocation(line: 1411, column: 4, scope: !5651)
!5655 = !DILocation(line: 1412, column: 19, scope: !5651)
!5656 = !DILocation(line: 0, scope: !5607)
!5657 = !DILocation(line: 1415, column: 22, scope: !5510)
!5658 = !DILocation(line: 1416, column: 11, scope: !5517)
!5659 = !DILocation(line: 1416, column: 45, scope: !5517)
!5660 = !DILocation(line: 1417, column: 11, scope: !5517)
!5661 = !DILocation(line: 1417, column: 15, scope: !5517)
!5662 = !DILocation(line: 1416, column: 11, scope: !5510)
!5663 = !DILocation(line: 1421, column: 22, scope: !5516)
!5664 = !DILocation(line: 0, scope: !5516)
!5665 = !DILocation(line: 1428, column: 16, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 1428, column: 15)
!5667 = !DILocation(line: 1428, column: 15, scope: !5516)
!5668 = !DILocation(line: 1429, column: 24, scope: !5666)
!5669 = !DILocation(line: 1429, column: 13, scope: !5666)
!5670 = !DILocation(line: 1430, column: 48, scope: !5516)
!5671 = !DILocation(line: 1430, column: 18, scope: !5516)
!5672 = !DILocation(line: 1431, column: 22, scope: !5516)
!5673 = !DILocation(line: 1431, column: 17, scope: !5516)
!5674 = !DILocation(line: 1432, column: 11, scope: !5516)
!5675 = !DILocation(line: 1433, column: 9, scope: !5516)
!5676 = !DILocation(line: 1434, column: 5, scope: !5511)
!5677 = !DILocation(line: 1390, column: 18, scope: !5511)
!5678 = !DILocation(line: 1390, column: 3, scope: !5511)
!5679 = distinct !{!5679, !5612, !5680}
!5680 = !DILocation(line: 1434, column: 5, scope: !5512)
!5681 = !DILocation(line: 1460, column: 7, scope: !5483)
!5682 = !DILocation(line: 1461, column: 5, scope: !5637)
!5683 = !DILocation(line: 1463, column: 3, scope: !5483)
!5684 = !DILocation(line: 1467, column: 3, scope: !5483)
!5685 = !DILocation(line: 1467, column: 24, scope: !5483)
!5686 = !DILocation(line: 1468, column: 3, scope: !5483)
!5687 = !DILocation(line: 1472, column: 17, scope: !5483)
!5688 = !DILocation(line: 1474, column: 3, scope: !5483)
!5689 = !DILocation(line: 1478, column: 3, scope: !5483)
!5690 = !DILocation(line: 1479, column: 39, scope: !5483)
!5691 = !DILocation(line: 1479, column: 3, scope: !5483)
!5692 = !DILocation(line: 1480, column: 1, scope: !5483)
!5693 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !142, file: !142, line: 184, type: !5694, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5696)
!5694 = !DISubroutineType(types: !5695)
!5695 = !{null, !5062}
!5696 = !{!5697}
!5697 = !DILocalVariable(name: "vec_", arg: 1, scope: !5693, file: !142, line: 184, type: !5062)
!5698 = !DILocation(line: 0, scope: !5693)
!5699 = !DILocation(line: 184, column: 1, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5693, file: !142, line: 184, column: 1)
!5701 = !DILocation(line: 184, column: 1, scope: !5693)
!5702 = distinct !DISubprogram(name: "lower_try_finally_dup_block", scope: !3, file: !3, line: 919, type: !5703, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5705)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!716, !716, !2090}
!5705 = !{!5706, !5707, !5708, !5709}
!5706 = !DILocalVariable(name: "seq", arg: 1, scope: !5702, file: !3, line: 919, type: !716)
!5707 = !DILocalVariable(name: "outer_state", arg: 2, scope: !5702, file: !3, line: 919, type: !2090)
!5708 = !DILocalVariable(name: "region", scope: !5702, file: !3, line: 921, type: !665)
!5709 = !DILocalVariable(name: "new_seq", scope: !5702, file: !3, line: 922, type: !716)
!5710 = !DILocation(line: 0, scope: !5702)
!5711 = !DILocation(line: 924, column: 13, scope: !5702)
!5712 = !DILocation(line: 926, column: 20, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 926, column: 7)
!5714 = !DILocation(line: 926, column: 7, scope: !5713)
!5715 = !DILocation(line: 926, column: 7, scope: !5702)
!5716 = !DILocation(line: 927, column: 31, scope: !5713)
!5717 = !DILocation(line: 927, column: 5, scope: !5713)
!5718 = !DILocation(line: 928, column: 3, scope: !5702)
!5719 = !DILocation(line: 930, column: 3, scope: !5702)
!5720 = distinct !DISubprogram(name: "gimple_try_catch_is_cleanup", scope: !568, file: !568, line: 2943, type: !3300, scopeLine: 2944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5721)
!5721 = !{!5722}
!5722 = !DILocalVariable(name: "gs", arg: 1, scope: !5720, file: !568, line: 2943, type: !2851)
!5723 = !DILocation(line: 0, scope: !5720)
!5724 = !DILocation(line: 2945, column: 3, scope: !5720)
!5725 = !DILocation(line: 2946, column: 22, scope: !5720)
!5726 = !DILocation(line: 2946, column: 10, scope: !5720)
!5727 = !DILocation(line: 2946, column: 3, scope: !5720)
!5728 = distinct !DISubprogram(name: "gimple_seq_alloc_with_stmt", scope: !568, file: !568, line: 226, type: !4058, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5729)
!5729 = !{!5730, !5731}
!5730 = !DILocalVariable(name: "stmt", arg: 1, scope: !5728, file: !568, line: 226, type: !665)
!5731 = !DILocalVariable(name: "seq", scope: !5728, file: !568, line: 228, type: !716)
!5732 = !DILocation(line: 0, scope: !5728)
!5733 = !DILocation(line: 228, column: 3, scope: !5728)
!5734 = !DILocation(line: 228, column: 14, scope: !5728)
!5735 = !DILocation(line: 229, column: 3, scope: !5728)
!5736 = !DILocation(line: 230, column: 10, scope: !5728)
!5737 = !DILocation(line: 231, column: 1, scope: !5728)
!5738 = !DILocation(line: 230, column: 3, scope: !5728)
!5739 = distinct !DISubprogram(name: "emit_post_landing_pad", scope: !3, file: !3, line: 811, type: !5740, scopeLine: 812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5743)
!5740 = !DISubroutineType(types: !5741)
!5741 = !{null, !5742, !1106}
!5742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!5743 = !{!5744, !5745, !5746, !5747}
!5744 = !DILocalVariable(name: "seq", arg: 1, scope: !5739, file: !3, line: 811, type: !5742)
!5745 = !DILocalVariable(name: "region", arg: 2, scope: !5739, file: !3, line: 811, type: !1106)
!5746 = !DILocalVariable(name: "lp", scope: !5739, file: !3, line: 813, type: !1180)
!5747 = !DILocalVariable(name: "x", scope: !5739, file: !3, line: 814, type: !665)
!5748 = !DILocation(line: 0, scope: !5739)
!5749 = !DILocation(line: 813, column: 31, scope: !5739)
!5750 = !DILocation(line: 816, column: 10, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 816, column: 7)
!5752 = !DILocation(line: 816, column: 7, scope: !5739)
!5753 = !DILocation(line: 817, column: 10, scope: !5751)
!5754 = !DILocation(line: 817, column: 5, scope: !5751)
!5755 = !DILocation(line: 819, column: 26, scope: !5739)
!5756 = !DILocation(line: 819, column: 7, scope: !5739)
!5757 = !DILocation(line: 819, column: 24, scope: !5739)
!5758 = !DILocation(line: 820, column: 50, scope: !5739)
!5759 = !DILocation(line: 820, column: 3, scope: !5739)
!5760 = !DILocation(line: 820, column: 44, scope: !5739)
!5761 = !DILocation(line: 822, column: 31, scope: !5739)
!5762 = !DILocation(line: 822, column: 7, scope: !5739)
!5763 = !DILocation(line: 823, column: 3, scope: !5739)
!5764 = !DILocation(line: 824, column: 1, scope: !5739)
!5765 = distinct !DISubprogram(name: "emit_resx", scope: !3, file: !3, line: 829, type: !5740, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5766)
!5766 = !{!5767, !5768, !5769}
!5767 = !DILocalVariable(name: "seq", arg: 1, scope: !5765, file: !3, line: 829, type: !5742)
!5768 = !DILocalVariable(name: "region", arg: 2, scope: !5765, file: !3, line: 829, type: !1106)
!5769 = !DILocalVariable(name: "x", scope: !5765, file: !3, line: 831, type: !665)
!5770 = !DILocation(line: 0, scope: !5765)
!5771 = !DILocation(line: 831, column: 41, scope: !5765)
!5772 = !DILocation(line: 831, column: 14, scope: !5765)
!5773 = !DILocation(line: 832, column: 3, scope: !5765)
!5774 = !DILocation(line: 833, column: 15, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 833, column: 7)
!5776 = !DILocation(line: 833, column: 7, scope: !5775)
!5777 = !DILocation(line: 833, column: 7, scope: !5765)
!5778 = !DILocation(line: 834, column: 5, scope: !5775)
!5779 = !DILocation(line: 835, column: 1, scope: !5765)
!5780 = distinct !DISubprogram(name: "do_return_redirection", scope: !3, file: !3, line: 722, type: !5781, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{null, !2077, !847, !716, !1355}
!5783 = !{!5784, !5785, !5786, !5787, !5788, !5789}
!5784 = !DILocalVariable(name: "q", arg: 1, scope: !5780, file: !3, line: 722, type: !2077)
!5785 = !DILocalVariable(name: "finlab", arg: 2, scope: !5780, file: !3, line: 722, type: !847)
!5786 = !DILocalVariable(name: "mod", arg: 3, scope: !5780, file: !3, line: 722, type: !716)
!5787 = !DILocalVariable(name: "return_value_p", arg: 4, scope: !5780, file: !3, line: 723, type: !1355)
!5788 = !DILocalVariable(name: "ret_expr", scope: !5780, file: !3, line: 725, type: !847)
!5789 = !DILocalVariable(name: "x", scope: !5780, file: !3, line: 726, type: !665)
!5790 = !DILocation(line: 0, scope: !5780)
!5791 = !DILocation(line: 729, column: 3, scope: !5780)
!5792 = !DILocation(line: 731, column: 44, scope: !5780)
!5793 = !DILocation(line: 731, column: 14, scope: !5780)
!5794 = !DILocation(line: 733, column: 7, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 733, column: 7)
!5796 = !DILocation(line: 733, column: 7, scope: !5780)
!5797 = !DILocation(line: 735, column: 12, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 735, column: 11)
!5799 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 734, column: 5)
!5800 = !DILocation(line: 735, column: 11, scope: !5799)
!5801 = !DILocation(line: 736, column: 25, scope: !5798)
!5802 = !DILocation(line: 736, column: 9, scope: !5798)
!5803 = !DILocation(line: 738, column: 9, scope: !5798)
!5804 = !DILocation(line: 739, column: 30, scope: !5799)
!5805 = !DILocation(line: 739, column: 10, scope: !5799)
!5806 = !DILocation(line: 739, column: 20, scope: !5799)
!5807 = !DILocation(line: 762, column: 11, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 762, column: 11)
!5809 = !DILocation(line: 762, column: 32, scope: !5808)
!5810 = !DILocation(line: 762, column: 11, scope: !5799)
!5811 = !DILocation(line: 764, column: 9, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !3, line: 764, column: 8)
!5813 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 763, column: 2)
!5814 = !DILocation(line: 764, column: 8, scope: !5813)
!5815 = !DILocation(line: 765, column: 22, scope: !5812)
!5816 = !DILocation(line: 765, column: 6, scope: !5812)
!5817 = !DILocation(line: 767, column: 6, scope: !5812)
!5818 = !DILocation(line: 768, column: 27, scope: !5813)
!5819 = !DILocation(line: 768, column: 17, scope: !5813)
!5820 = !DILocation(line: 769, column: 2, scope: !5813)
!5821 = !DILocation(line: 771, column: 4, scope: !5808)
!5822 = !DILocation(line: 775, column: 30, scope: !5795)
!5823 = !DILocation(line: 775, column: 10, scope: !5795)
!5824 = !DILocation(line: 775, column: 20, scope: !5795)
!5825 = !DILocation(line: 777, column: 11, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 777, column: 7)
!5827 = !DILocation(line: 777, column: 8, scope: !5826)
!5828 = !DILocation(line: 777, column: 7, scope: !5780)
!5829 = !DILocation(line: 778, column: 20, scope: !5826)
!5830 = !DILocation(line: 778, column: 18, scope: !5826)
!5831 = !DILocation(line: 778, column: 5, scope: !5826)
!5832 = !DILocation(line: 780, column: 7, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 780, column: 7)
!5834 = !DILocation(line: 780, column: 7, scope: !5780)
!5835 = !DILocation(line: 781, column: 5, scope: !5833)
!5836 = !DILocation(line: 783, column: 7, scope: !5780)
!5837 = !DILocation(line: 784, column: 3, scope: !5780)
!5838 = !DILocation(line: 785, column: 1, scope: !5780)
!5839 = distinct !DISubprogram(name: "do_goto_redirection", scope: !3, file: !3, line: 790, type: !5840, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5842)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{null, !2077, !847, !716, !2096}
!5842 = !{!5843, !5844, !5845, !5846, !5847}
!5843 = !DILocalVariable(name: "q", arg: 1, scope: !5839, file: !3, line: 790, type: !2077)
!5844 = !DILocalVariable(name: "finlab", arg: 2, scope: !5839, file: !3, line: 790, type: !847)
!5845 = !DILocalVariable(name: "mod", arg: 3, scope: !5839, file: !3, line: 790, type: !716)
!5846 = !DILocalVariable(name: "tf", arg: 4, scope: !5839, file: !3, line: 791, type: !2096)
!5847 = !DILocalVariable(name: "x", scope: !5839, file: !3, line: 793, type: !665)
!5848 = !DILocation(line: 0, scope: !5839)
!5849 = !DILocation(line: 795, column: 3, scope: !5839)
!5850 = !DILocation(line: 796, column: 11, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 796, column: 7)
!5852 = !DILocation(line: 796, column: 8, scope: !5851)
!5853 = !DILocation(line: 796, column: 7, scope: !5839)
!5854 = !DILocation(line: 797, column: 20, scope: !5851)
!5855 = !DILocation(line: 797, column: 18, scope: !5851)
!5856 = !DILocation(line: 797, column: 5, scope: !5851)
!5857 = !DILocation(line: 799, column: 37, scope: !5839)
!5858 = !DILocation(line: 799, column: 18, scope: !5839)
!5859 = !DILocation(line: 799, column: 6, scope: !5839)
!5860 = !DILocation(line: 799, column: 16, scope: !5839)
!5861 = !DILocation(line: 801, column: 7, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 801, column: 7)
!5863 = !DILocation(line: 801, column: 7, scope: !5839)
!5864 = !DILocation(line: 802, column: 5, scope: !5862)
!5865 = !DILocation(line: 804, column: 7, scope: !5839)
!5866 = !DILocation(line: 805, column: 3, scope: !5839)
!5867 = !DILocation(line: 806, column: 1, scope: !5839)
!5868 = distinct !DISubprogram(name: "replace_goto_queue", scope: !3, file: !3, line: 562, type: !5869, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5871)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{null, !2096}
!5871 = !{!5872}
!5872 = !DILocalVariable(name: "tf", arg: 1, scope: !5868, file: !3, line: 562, type: !2096)
!5873 = !DILocation(line: 0, scope: !5868)
!5874 = !DILocation(line: 564, column: 11, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 564, column: 7)
!5876 = !DILocation(line: 564, column: 29, scope: !5875)
!5877 = !DILocation(line: 564, column: 7, scope: !5868)
!5878 = !DILocation(line: 566, column: 37, scope: !5868)
!5879 = !DILocation(line: 566, column: 3, scope: !5868)
!5880 = !DILocation(line: 567, column: 33, scope: !5868)
!5881 = !DILocation(line: 567, column: 3, scope: !5868)
!5882 = !DILocation(line: 568, column: 1, scope: !5868)
!5883 = distinct !DISubprogram(name: "gimple_return_retval", scope: !568, file: !568, line: 4253, type: !4023, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5884)
!5884 = !{!5885}
!5885 = !DILocalVariable(name: "gs", arg: 1, scope: !5883, file: !568, line: 4253, type: !2851)
!5886 = !DILocation(line: 0, scope: !5883)
!5887 = !DILocation(line: 4256, column: 10, scope: !5883)
!5888 = !DILocation(line: 4256, column: 3, scope: !5883)
!5889 = distinct !DISubprogram(name: "replace_goto_queue_stmt_list", scope: !3, file: !3, line: 551, type: !5890, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5892)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{null, !716, !2096}
!5892 = !{!5893, !5894, !5895}
!5893 = !DILocalVariable(name: "seq", arg: 1, scope: !5889, file: !3, line: 551, type: !716)
!5894 = !DILocalVariable(name: "tf", arg: 2, scope: !5889, file: !3, line: 551, type: !2096)
!5895 = !DILocalVariable(name: "gsi", scope: !5889, file: !3, line: 553, type: !3873)
!5896 = !DILocation(line: 0, scope: !5889)
!5897 = !DILocation(line: 553, column: 3, scope: !5889)
!5898 = !DILocation(line: 553, column: 30, scope: !5889)
!5899 = !DILocation(line: 555, column: 3, scope: !5889)
!5900 = !DILocation(line: 555, column: 11, scope: !5889)
!5901 = !DILocation(line: 555, column: 10, scope: !5889)
!5902 = !DILocation(line: 556, column: 27, scope: !5889)
!5903 = !DILocation(line: 556, column: 5, scope: !5889)
!5904 = distinct !{!5904, !5899, !5905}
!5905 = !DILocation(line: 556, column: 51, scope: !5889)
!5906 = !DILocation(line: 557, column: 1, scope: !5889)
!5907 = distinct !DISubprogram(name: "replace_goto_queue_1", scope: !3, file: !3, line: 503, type: !5908, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5910)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{null, !665, !2096, !4002}
!5910 = !{!5911, !5912, !5913, !5914, !5915}
!5911 = !DILocalVariable(name: "stmt", arg: 1, scope: !5907, file: !3, line: 503, type: !665)
!5912 = !DILocalVariable(name: "tf", arg: 2, scope: !5907, file: !3, line: 503, type: !2096)
!5913 = !DILocalVariable(name: "gsi", arg: 3, scope: !5907, file: !3, line: 504, type: !4002)
!5914 = !DILocalVariable(name: "seq", scope: !5907, file: !3, line: 506, type: !716)
!5915 = !DILocalVariable(name: "temp", scope: !5907, file: !3, line: 507, type: !2065)
!5916 = !DILocation(line: 0, scope: !5907)
!5917 = !DILocation(line: 510, column: 11, scope: !5907)
!5918 = !DILocation(line: 510, column: 3, scope: !5907)
!5919 = !DILocation(line: 515, column: 13, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 511, column: 5)
!5921 = !DILocation(line: 516, column: 11, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 516, column: 11)
!5923 = !DILocation(line: 516, column: 11, scope: !5920)
!5924 = !DILocation(line: 518, column: 32, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 517, column: 2)
!5926 = !DILocation(line: 518, column: 4, scope: !5925)
!5927 = !DILocation(line: 519, column: 4, scope: !5925)
!5928 = !DILocation(line: 520, column: 4, scope: !5925)
!5929 = !DILocation(line: 525, column: 39, scope: !5920)
!5930 = !DILocation(line: 525, column: 7, scope: !5920)
!5931 = !DILocation(line: 526, column: 39, scope: !5920)
!5932 = !DILocation(line: 526, column: 7, scope: !5920)
!5933 = !DILocation(line: 527, column: 7, scope: !5920)
!5934 = !DILocation(line: 530, column: 37, scope: !5920)
!5935 = !DILocation(line: 530, column: 7, scope: !5920)
!5936 = !DILocation(line: 531, column: 37, scope: !5920)
!5937 = !DILocation(line: 531, column: 7, scope: !5920)
!5938 = !DILocation(line: 532, column: 7, scope: !5920)
!5939 = !DILocation(line: 534, column: 37, scope: !5920)
!5940 = !DILocation(line: 534, column: 7, scope: !5920)
!5941 = !DILocation(line: 535, column: 7, scope: !5920)
!5942 = !DILocation(line: 537, column: 37, scope: !5920)
!5943 = !DILocation(line: 537, column: 7, scope: !5920)
!5944 = !DILocation(line: 538, column: 7, scope: !5920)
!5945 = !DILocation(line: 545, column: 3, scope: !5907)
!5946 = !DILocation(line: 546, column: 1, scope: !5907)
!5947 = distinct !DISubprogram(name: "find_goto_replacement", scope: !3, file: !3, line: 428, type: !5948, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5950)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{!716, !2096, !2065}
!5950 = !{!5951, !5952, !5953, !5954}
!5951 = !DILocalVariable(name: "tf", arg: 1, scope: !5947, file: !3, line: 428, type: !2096)
!5952 = !DILocalVariable(name: "stmt", arg: 2, scope: !5947, file: !3, line: 428, type: !2065)
!5953 = !DILocalVariable(name: "i", scope: !5947, file: !3, line: 430, type: !7)
!5954 = !DILocalVariable(name: "slot", scope: !5947, file: !3, line: 431, type: !1206)
!5955 = !DILocation(line: 0, scope: !5947)
!5956 = !DILocation(line: 433, column: 11, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 433, column: 7)
!5958 = !DILocation(line: 433, column: 29, scope: !5957)
!5959 = !DILocation(line: 433, column: 7, scope: !5947)
!5960 = !DILocation(line: 0, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 436, column: 7)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 435, column: 7)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 435, column: 7)
!5964 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 434, column: 5)
!5965 = !DILocation(line: 435, column: 7, scope: !5963)
!5966 = !DILocation(line: 0, scope: !5963)
!5967 = !DILocation(line: 435, column: 19, scope: !5962)
!5968 = !DILocation(line: 435, column: 21, scope: !5962)
!5969 = !DILocation(line: 436, column: 11, scope: !5961)
!5970 = !DILocation(line: 436, column: 25, scope: !5961)
!5971 = !DILocation(line: 436, column: 30, scope: !5961)
!5972 = !DILocation(line: 436, column: 32, scope: !5961)
!5973 = !DILocation(line: 436, column: 7, scope: !5962)
!5974 = !DILocation(line: 437, column: 29, scope: !5961)
!5975 = !DILocation(line: 437, column: 4, scope: !5961)
!5976 = !DILocation(line: 435, column: 47, scope: !5962)
!5977 = !DILocation(line: 435, column: 7, scope: !5962)
!5978 = distinct !{!5978, !5965, !5979}
!5979 = !DILocation(line: 437, column: 29, scope: !5963)
!5980 = !DILocation(line: 444, column: 12, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 444, column: 7)
!5982 = !DILocation(line: 444, column: 8, scope: !5981)
!5983 = !DILocation(line: 444, column: 7, scope: !5947)
!5984 = !DILocation(line: 446, column: 28, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 445, column: 5)
!5986 = !DILocation(line: 446, column: 26, scope: !5985)
!5987 = !DILocation(line: 0, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 448, column: 2)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 447, column: 7)
!5990 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 447, column: 7)
!5991 = !DILocation(line: 447, column: 12, scope: !5990)
!5992 = !DILocation(line: 0, scope: !5990)
!5993 = !DILocation(line: 447, column: 19, scope: !5989)
!5994 = !DILocation(line: 447, column: 27, scope: !5989)
!5995 = !DILocation(line: 447, column: 21, scope: !5989)
!5996 = !DILocation(line: 447, column: 7, scope: !5990)
!5997 = !DILocation(line: 449, column: 35, scope: !5988)
!5998 = !DILocation(line: 450, column: 42, scope: !5988)
!5999 = !DILocation(line: 450, column: 56, scope: !5988)
!6000 = !DILocation(line: 450, column: 61, scope: !5988)
!6001 = !DILocation(line: 449, column: 11, scope: !5988)
!6002 = !DILocation(line: 451, column: 11, scope: !5988)
!6003 = !DILocation(line: 452, column: 17, scope: !5988)
!6004 = !DILocation(line: 452, column: 13, scope: !5988)
!6005 = !DILocation(line: 452, column: 10, scope: !5988)
!6006 = !DILocation(line: 447, column: 47, scope: !5989)
!6007 = !DILocation(line: 447, column: 7, scope: !5989)
!6008 = distinct !{!6008, !5996, !6009}
!6009 = !DILocation(line: 453, column: 2, scope: !5990)
!6010 = !DILocation(line: 456, column: 36, scope: !5947)
!6011 = !DILocation(line: 456, column: 10, scope: !5947)
!6012 = !DILocation(line: 457, column: 12, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 457, column: 7)
!6014 = !DILocation(line: 457, column: 7, scope: !5947)
!6015 = !DILocation(line: 458, column: 41, scope: !6013)
!6016 = !DILocation(line: 458, column: 49, scope: !6013)
!6017 = !DILocation(line: 458, column: 5, scope: !6013)
!6018 = !DILocation(line: 461, column: 1, scope: !5947)
!6019 = distinct !DISubprogram(name: "replace_goto_queue_cond_clause", scope: !3, file: !3, line: 469, type: !6020, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6022)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{null, !1355, !2096, !4002}
!6022 = !{!6023, !6024, !6025, !6026, !6027, !6028, !6029}
!6023 = !DILocalVariable(name: "tp", arg: 1, scope: !6019, file: !3, line: 469, type: !1355)
!6024 = !DILocalVariable(name: "tf", arg: 2, scope: !6019, file: !3, line: 469, type: !2096)
!6025 = !DILocalVariable(name: "gsi", arg: 3, scope: !6019, file: !3, line: 470, type: !4002)
!6026 = !DILocalVariable(name: "label", scope: !6019, file: !3, line: 472, type: !847)
!6027 = !DILocalVariable(name: "new_seq", scope: !6019, file: !3, line: 473, type: !716)
!6028 = !DILocalVariable(name: "temp", scope: !6019, file: !3, line: 474, type: !2065)
!6029 = !DILocalVariable(name: "loc", scope: !6019, file: !3, line: 475, type: !684)
!6030 = !DILocation(line: 0, scope: !6019)
!6031 = !DILocation(line: 475, column: 37, scope: !6019)
!6032 = !DILocation(line: 475, column: 20, scope: !6019)
!6033 = !DILocation(line: 478, column: 13, scope: !6019)
!6034 = !DILocation(line: 479, column: 8, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 479, column: 7)
!6036 = !DILocation(line: 479, column: 7, scope: !6019)
!6037 = !DILocation(line: 482, column: 7, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 482, column: 7)
!6039 = !DILocation(line: 483, column: 7, scope: !6038)
!6040 = !DILocation(line: 483, column: 23, scope: !6038)
!6041 = !DILocation(line: 483, column: 10, scope: !6038)
!6042 = !DILocation(line: 483, column: 56, scope: !6038)
!6043 = !DILocation(line: 482, column: 7, scope: !6019)
!6044 = !DILocation(line: 485, column: 31, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 484, column: 5)
!6046 = !DILocation(line: 485, column: 13, scope: !6045)
!6047 = !DILocation(line: 485, column: 11, scope: !6045)
!6048 = !DILocation(line: 486, column: 7, scope: !6045)
!6049 = !DILocation(line: 489, column: 11, scope: !6019)
!6050 = !DILocation(line: 491, column: 7, scope: !6019)
!6051 = !DILocation(line: 493, column: 26, scope: !6019)
!6052 = !DILocation(line: 493, column: 3, scope: !6019)
!6053 = !DILocation(line: 494, column: 30, scope: !6019)
!6054 = !DILocation(line: 494, column: 3, scope: !6019)
!6055 = !DILocation(line: 495, column: 1, scope: !6019)
!6056 = distinct !DISubprogram(name: "gimple_seq_singleton_p", scope: !568, file: !568, line: 1192, type: !6057, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6059)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!653, !716}
!6059 = !{!6060}
!6060 = !DILocalVariable(name: "seq", arg: 1, scope: !6056, file: !568, line: 1192, type: !716)
!6061 = !DILocation(line: 0, scope: !6056)
!6062 = !DILocation(line: 1194, column: 12, scope: !6056)
!6063 = !DILocation(line: 1194, column: 35, scope: !6056)
!6064 = !DILocation(line: 1195, column: 4, scope: !6056)
!6065 = !DILocation(line: 1195, column: 8, scope: !6056)
!6066 = !DILocation(line: 1195, column: 34, scope: !6056)
!6067 = !DILocation(line: 1195, column: 31, scope: !6056)
!6068 = !DILocation(line: 1194, column: 3, scope: !6056)
!6069 = distinct !DISubprogram(name: "gimple_seq_last", scope: !568, file: !568, line: 178, type: !4011, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6070)
!6070 = !{!6071}
!6071 = !DILocalVariable(name: "s", arg: 1, scope: !6069, file: !568, line: 178, type: !4013)
!6072 = !DILocation(line: 0, scope: !6069)
!6073 = !DILocation(line: 180, column: 10, scope: !6069)
!6074 = !DILocation(line: 180, column: 17, scope: !6069)
!6075 = !DILocation(line: 180, column: 3, scope: !6069)
!6076 = distinct !DISubprogram(name: "lower_try_finally_fallthru_label", scope: !3, file: !3, line: 938, type: !6077, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6079)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{!847, !2096}
!6079 = !{!6080, !6081, !6082}
!6080 = !DILocalVariable(name: "tf", arg: 1, scope: !6076, file: !3, line: 938, type: !2096)
!6081 = !DILocalVariable(name: "label", scope: !6076, file: !3, line: 940, type: !847)
!6082 = !DILocalVariable(name: "temp", scope: !6076, file: !3, line: 941, type: !2065)
!6083 = !DILocation(line: 0, scope: !6076)
!6084 = !DILocation(line: 940, column: 20, scope: !6076)
!6085 = !DILocation(line: 943, column: 8, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 943, column: 7)
!6087 = !DILocation(line: 943, column: 7, scope: !6076)
!6088 = !DILocation(line: 945, column: 61, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 944, column: 5)
!6090 = !DILocation(line: 945, column: 40, scope: !6089)
!6091 = !DILocation(line: 945, column: 15, scope: !6089)
!6092 = !DILocation(line: 946, column: 26, scope: !6089)
!6093 = !DILocation(line: 947, column: 15, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 947, column: 11)
!6095 = !DILocation(line: 947, column: 22, scope: !6094)
!6096 = !DILocation(line: 947, column: 11, scope: !6094)
!6097 = !DILocation(line: 947, column: 11, scope: !6089)
!6098 = !DILocation(line: 950, column: 56, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 948, column: 9)
!6100 = !DILocation(line: 950, column: 11, scope: !6099)
!6101 = !DILocation(line: 951, column: 9, scope: !6099)
!6102 = !DILocation(line: 953, column: 3, scope: !6076)
!6103 = distinct !DISubprogram(name: "gimple_seq_last_stmt", scope: !568, file: !568, line: 187, type: !4574, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6104)
!6104 = !{!6105, !6106}
!6105 = !DILocalVariable(name: "s", arg: 1, scope: !6103, file: !568, line: 187, type: !4013)
!6106 = !DILocalVariable(name: "n", scope: !6103, file: !568, line: 189, type: !721)
!6107 = !DILocation(line: 0, scope: !6103)
!6108 = !DILocation(line: 189, column: 23, scope: !6103)
!6109 = !DILocation(line: 190, column: 10, scope: !6103)
!6110 = !DILocation(line: 190, column: 19, scope: !6103)
!6111 = !DILocation(line: 190, column: 3, scope: !6103)
!6112 = distinct !DISubprogram(name: "emit_eh_dispatch", scope: !3, file: !3, line: 840, type: !5740, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6113)
!6113 = !{!6114, !6115, !6116}
!6114 = !DILocalVariable(name: "seq", arg: 1, scope: !6112, file: !3, line: 840, type: !5742)
!6115 = !DILocalVariable(name: "region", arg: 2, scope: !6112, file: !3, line: 840, type: !1106)
!6116 = !DILocalVariable(name: "x", scope: !6112, file: !3, line: 842, type: !665)
!6117 = !DILocation(line: 0, scope: !6112)
!6118 = !DILocation(line: 842, column: 48, scope: !6112)
!6119 = !DILocation(line: 842, column: 14, scope: !6112)
!6120 = !DILocation(line: 843, column: 3, scope: !6112)
!6121 = !DILocation(line: 844, column: 1, scope: !6112)
!6122 = distinct !DISubprogram(name: "gimple_catch_types", scope: !568, file: !568, line: 2785, type: !4023, scopeLine: 2786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6123)
!6123 = !{!6124}
!6124 = !DILocalVariable(name: "gs", arg: 1, scope: !6122, file: !568, line: 2785, type: !2851)
!6125 = !DILocation(line: 0, scope: !6122)
!6126 = !DILocation(line: 2788, column: 27, scope: !6122)
!6127 = !DILocation(line: 2788, column: 3, scope: !6122)
!6128 = distinct !DISubprogram(name: "frob_into_branch_around", scope: !3, file: !3, line: 886, type: !6129, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6131)
!6129 = !DISubroutineType(types: !6130)
!6130 = !{!716, !665, !1106, !847}
!6131 = !{!6132, !6133, !6134, !6135, !6136, !6137, !6138}
!6132 = !DILocalVariable(name: "tp", arg: 1, scope: !6128, file: !3, line: 886, type: !665)
!6133 = !DILocalVariable(name: "region", arg: 2, scope: !6128, file: !3, line: 886, type: !1106)
!6134 = !DILocalVariable(name: "over", arg: 3, scope: !6128, file: !3, line: 886, type: !847)
!6135 = !DILocalVariable(name: "x", scope: !6128, file: !3, line: 888, type: !665)
!6136 = !DILocalVariable(name: "cleanup", scope: !6128, file: !3, line: 889, type: !716)
!6137 = !DILocalVariable(name: "result", scope: !6128, file: !3, line: 889, type: !716)
!6138 = !DILocalVariable(name: "loc", scope: !6128, file: !3, line: 890, type: !684)
!6139 = !DILocation(line: 0, scope: !6128)
!6140 = !DILocation(line: 889, column: 3, scope: !6128)
!6141 = !DILocation(line: 890, column: 20, scope: !6128)
!6142 = !DILocation(line: 892, column: 13, scope: !6128)
!6143 = !DILocation(line: 892, column: 11, scope: !6128)
!6144 = !DILocation(line: 893, column: 12, scope: !6128)
!6145 = !DILocation(line: 893, column: 10, scope: !6128)
!6146 = !DILocation(line: 895, column: 7, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 895, column: 7)
!6148 = !DILocation(line: 895, column: 7, scope: !6128)
!6149 = !DILocation(line: 896, column: 5, scope: !6147)
!6150 = !DILocation(line: 898, column: 7, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 898, column: 7)
!6152 = !DILocation(line: 898, column: 7, scope: !6128)
!6153 = !DILocation(line: 900, column: 12, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 900, column: 11)
!6155 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 899, column: 5)
!6156 = !DILocation(line: 900, column: 11, scope: !6155)
!6157 = !DILocation(line: 901, column: 9, scope: !6154)
!6158 = !DILocation(line: 901, column: 2, scope: !6154)
!6159 = !DILocation(line: 902, column: 11, scope: !6155)
!6160 = !DILocation(line: 903, column: 7, scope: !6155)
!6161 = !DILocation(line: 905, column: 32, scope: !6128)
!6162 = !DILocation(line: 904, column: 5, scope: !6155)
!6163 = !DILocation(line: 905, column: 3, scope: !6128)
!6164 = !DILocation(line: 907, column: 7, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 907, column: 7)
!6166 = !DILocation(line: 907, column: 7, scope: !6128)
!6167 = !DILocation(line: 909, column: 11, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 908, column: 5)
!6169 = !DILocation(line: 910, column: 7, scope: !6168)
!6170 = !DILocation(line: 911, column: 5, scope: !6168)
!6171 = !DILocation(line: 912, column: 10, scope: !6128)
!6172 = !DILocation(line: 913, column: 1, scope: !6128)
!6173 = !DILocation(line: 912, column: 3, scope: !6128)
!6174 = distinct !DISubprogram(name: "gimple_eh_filter_types", scope: !568, file: !568, line: 2847, type: !4023, scopeLine: 2848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6175)
!6175 = !{!6176}
!6176 = !DILocalVariable(name: "gs", arg: 1, scope: !6174, file: !568, line: 2847, type: !2851)
!6177 = !DILocation(line: 0, scope: !6174)
!6178 = !DILocation(line: 2850, column: 31, scope: !6174)
!6179 = !DILocation(line: 2850, column: 3, scope: !6174)
!6180 = distinct !DISubprogram(name: "gimple_eh_must_not_throw_fndecl", scope: !568, file: !568, line: 2899, type: !6181, scopeLine: 2900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6183)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{!847, !665}
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "gs", arg: 1, scope: !6180, file: !568, line: 2899, type: !665)
!6185 = !DILocation(line: 0, scope: !6180)
!6186 = !DILocation(line: 2902, column: 28, scope: !6180)
!6187 = !DILocation(line: 2902, column: 3, scope: !6180)
!6188 = distinct !DISubprogram(name: "gimple_expr_code", scope: !568, file: !568, line: 1438, type: !6189, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6191)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{!141, !2851}
!6191 = !{!6192, !6193}
!6192 = !DILocalVariable(name: "stmt", arg: 1, scope: !6188, file: !568, line: 1438, type: !2851)
!6193 = !DILocalVariable(name: "code", scope: !6188, file: !568, line: 1440, type: !594)
!6194 = !DILocation(line: 0, scope: !6188)
!6195 = !DILocation(line: 1440, column: 27, scope: !6188)
!6196 = !DILocation(line: 1441, column: 29, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6188, file: !568, line: 1441, column: 7)
!6198 = !DILocation(line: 1442, column: 42, scope: !6197)
!6199 = !DILocation(line: 1442, column: 5, scope: !6197)
!6200 = !DILocation(line: 1446, column: 5, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6197, file: !568, line: 1443, column: 12)
!6202 = !DILocation(line: 1448, column: 5, scope: !6188)
!6203 = !DILocation(line: 1450, column: 1, scope: !6188)
!6204 = distinct !DISubprogram(name: "gimple_expr_type", scope: !568, file: !568, line: 4366, type: !4023, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6205)
!6205 = !{!6206, !6207, !6208}
!6206 = !DILocalVariable(name: "stmt", arg: 1, scope: !6204, file: !568, line: 4366, type: !2851)
!6207 = !DILocalVariable(name: "code", scope: !6204, file: !568, line: 4368, type: !594)
!6208 = !DILocalVariable(name: "type", scope: !6209, file: !568, line: 4372, type: !847)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !568, line: 4371, column: 5)
!6210 = distinct !DILexicalBlock(scope: !6204, file: !568, line: 4370, column: 7)
!6211 = !DILocation(line: 0, scope: !6204)
!6212 = !DILocation(line: 4368, column: 27, scope: !6204)
!6213 = !DILocation(line: 4370, column: 29, scope: !6210)
!6214 = !DILocation(line: 4378, column: 9, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6209, file: !568, line: 4377, column: 11)
!6216 = !DILocation(line: 0, scope: !6209)
!6217 = !DILocation(line: 4378, column: 2, scope: !6215)
!6218 = !DILocation(line: 4380, column: 10, scope: !6215)
!6219 = !DILocation(line: 4380, column: 2, scope: !6215)
!6220 = !DILocation(line: 4383, column: 13, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6215, file: !568, line: 4381, column: 4)
!6222 = !DILocation(line: 4384, column: 6, scope: !6221)
!6223 = !DILocation(line: 4388, column: 13, scope: !6221)
!6224 = !DILocation(line: 4389, column: 6, scope: !6221)
!6225 = !DILocation(line: 4394, column: 12, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6210, file: !568, line: 4393, column: 12)
!6227 = !DILocation(line: 4394, column: 5, scope: !6226)
!6228 = !DILocation(line: 4396, column: 12, scope: !6226)
!6229 = !DILocation(line: 4396, column: 5, scope: !6226)
!6230 = !DILocation(line: 0, scope: !6210)
!6231 = !DILocation(line: 4397, column: 1, scope: !6204)
!6232 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !568, file: !568, line: 1759, type: !4023, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6233)
!6233 = !{!6234}
!6234 = !DILocalVariable(name: "gs", arg: 1, scope: !6232, file: !568, line: 1759, type: !2851)
!6235 = !DILocation(line: 0, scope: !6232)
!6236 = !DILocation(line: 1763, column: 7, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6232, file: !568, line: 1763, column: 7)
!6238 = !DILocation(line: 1763, column: 27, scope: !6237)
!6239 = !DILocation(line: 1763, column: 7, scope: !6232)
!6240 = !DILocation(line: 1764, column: 12, scope: !6237)
!6241 = !DILocation(line: 1764, column: 5, scope: !6237)
!6242 = !DILocation(line: 0, scope: !6237)
!6243 = !DILocation(line: 1767, column: 1, scope: !6232)
!6244 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !568, file: !568, line: 1966, type: !4023, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6245)
!6245 = !{!6246, !6247, !6248}
!6246 = !DILocalVariable(name: "gs", arg: 1, scope: !6244, file: !568, line: 1966, type: !2851)
!6247 = !DILocalVariable(name: "fn", scope: !6244, file: !568, line: 1968, type: !847)
!6248 = !DILocalVariable(name: "type", scope: !6244, file: !568, line: 1969, type: !847)
!6249 = !DILocation(line: 0, scope: !6244)
!6250 = !DILocation(line: 1968, column: 13, scope: !6244)
!6251 = !DILocation(line: 1969, column: 15, scope: !6244)
!6252 = !DILocation(line: 1972, column: 10, scope: !6244)
!6253 = !DILocation(line: 1976, column: 10, scope: !6244)
!6254 = !DILocation(line: 1976, column: 3, scope: !6244)
!6255 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !568, file: !568, line: 1815, type: !6189, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6256)
!6256 = !{!6257, !6258}
!6257 = !DILocalVariable(name: "gs", arg: 1, scope: !6255, file: !568, line: 1815, type: !2851)
!6258 = !DILocalVariable(name: "code", scope: !6255, file: !568, line: 1817, type: !141)
!6259 = !DILocation(line: 0, scope: !6255)
!6260 = !DILocation(line: 1820, column: 10, scope: !6255)
!6261 = !DILocation(line: 1821, column: 7, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6255, file: !568, line: 1821, column: 7)
!6263 = !DILocation(line: 1821, column: 35, scope: !6262)
!6264 = !DILocation(line: 1821, column: 7, scope: !6255)
!6265 = !DILocation(line: 1822, column: 12, scope: !6262)
!6266 = !DILocation(line: 1822, column: 5, scope: !6262)
!6267 = !DILocation(line: 1824, column: 3, scope: !6255)
!6268 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !568, file: !568, line: 1727, type: !4023, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6269)
!6269 = !{!6270}
!6270 = !DILocalVariable(name: "gs", arg: 1, scope: !6268, file: !568, line: 1727, type: !2851)
!6271 = !DILocation(line: 0, scope: !6268)
!6272 = !DILocation(line: 1730, column: 10, scope: !6268)
!6273 = !DILocation(line: 1730, column: 3, scope: !6268)
!6274 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !568, file: !568, line: 1686, type: !6275, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6277)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{!638, !141}
!6277 = !{!6278}
!6278 = !DILocalVariable(name: "code", arg: 1, scope: !6274, file: !568, line: 1686, type: !141)
!6279 = !DILocation(line: 0, scope: !6274)
!6280 = !DILocation(line: 1688, column: 34, scope: !6274)
!6281 = !DILocation(line: 1688, column: 10, scope: !6274)
!6282 = !DILocation(line: 1688, column: 3, scope: !6274)
!6283 = distinct !DISubprogram(name: "refactor_eh_r", scope: !3, file: !3, line: 2776, type: !6284, scopeLine: 2777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6286)
!6284 = !DISubroutineType(types: !6285)
!6285 = !{null, !716}
!6286 = !{!6287, !6288, !6289, !6290}
!6287 = !DILocalVariable(name: "seq", arg: 1, scope: !6283, file: !3, line: 2776, type: !716)
!6288 = !DILocalVariable(name: "gsi", scope: !6283, file: !3, line: 2778, type: !3873)
!6289 = !DILocalVariable(name: "one", scope: !6283, file: !3, line: 2779, type: !665)
!6290 = !DILocalVariable(name: "two", scope: !6283, file: !3, line: 2779, type: !665)
!6291 = !DILocation(line: 0, scope: !6283)
!6292 = !DILocation(line: 2778, column: 3, scope: !6283)
!6293 = !DILocation(line: 2783, column: 9, scope: !6283)
!6294 = !DILocation(line: 2784, column: 3, scope: !6283)
!6295 = !DILocation(line: 2787, column: 11, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 2787, column: 11)
!6297 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 2785, column: 5)
!6298 = !DILocation(line: 2787, column: 11, scope: !6297)
!6299 = !DILocation(line: 2790, column: 8, scope: !6296)
!6300 = !DILocation(line: 0, scope: !6296)
!6301 = !DILocation(line: 2791, column: 11, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 2791, column: 11)
!6303 = !DILocation(line: 2792, column: 7, scope: !6302)
!6304 = !DILocation(line: 2792, column: 4, scope: !6302)
!6305 = !DILocation(line: 2793, column: 7, scope: !6302)
!6306 = !DILocation(line: 2793, column: 25, scope: !6302)
!6307 = !DILocation(line: 2794, column: 4, scope: !6302)
!6308 = !DILocation(line: 2794, column: 7, scope: !6302)
!6309 = !DILocation(line: 2794, column: 25, scope: !6302)
!6310 = !DILocation(line: 2795, column: 4, scope: !6302)
!6311 = !DILocation(line: 2795, column: 7, scope: !6302)
!6312 = !DILocation(line: 2795, column: 29, scope: !6302)
!6313 = !DILocation(line: 2796, column: 4, scope: !6302)
!6314 = !DILocation(line: 2796, column: 7, scope: !6302)
!6315 = !DILocation(line: 2796, column: 29, scope: !6302)
!6316 = !DILocation(line: 2791, column: 11, scope: !6297)
!6317 = !DILocation(line: 2797, column: 2, scope: !6302)
!6318 = !DILocation(line: 2798, column: 11, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 2798, column: 11)
!6320 = !DILocation(line: 2798, column: 11, scope: !6297)
!6321 = !DILocation(line: 2799, column: 10, scope: !6319)
!6322 = !DILocation(line: 2799, column: 2, scope: !6319)
!6323 = !DILocation(line: 2802, column: 21, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 2800, column: 4)
!6325 = !DILocation(line: 2802, column: 6, scope: !6324)
!6326 = !DILocation(line: 2803, column: 21, scope: !6324)
!6327 = !DILocation(line: 2803, column: 6, scope: !6324)
!6328 = !DILocation(line: 2804, column: 6, scope: !6324)
!6329 = !DILocation(line: 2806, column: 21, scope: !6324)
!6330 = !DILocation(line: 2806, column: 6, scope: !6324)
!6331 = !DILocation(line: 2807, column: 6, scope: !6324)
!6332 = !DILocation(line: 2809, column: 21, scope: !6324)
!6333 = !DILocation(line: 2809, column: 6, scope: !6324)
!6334 = !DILocation(line: 2810, column: 6, scope: !6324)
!6335 = !DILocation(line: 2814, column: 11, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 2814, column: 11)
!6337 = !DILocation(line: 2814, column: 11, scope: !6297)
!6338 = !DILocation(line: 2815, column: 2, scope: !6336)
!6339 = distinct !{!6339, !6294, !6340}
!6340 = !DILocation(line: 2818, column: 5, scope: !6283)
!6341 = !DILocation(line: 2819, column: 1, scope: !6283)
!6342 = distinct !DISubprogram(name: "optimize_double_finally", scope: !3, file: !3, line: 2746, type: !3949, scopeLine: 2747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6343)
!6343 = !{!6344, !6345, !6346, !6347, !6348}
!6344 = !DILocalVariable(name: "one", arg: 1, scope: !6342, file: !3, line: 2746, type: !665)
!6345 = !DILocalVariable(name: "two", arg: 2, scope: !6342, file: !3, line: 2746, type: !665)
!6346 = !DILocalVariable(name: "oneh", scope: !6342, file: !3, line: 2748, type: !665)
!6347 = !DILocalVariable(name: "gsi", scope: !6342, file: !3, line: 2749, type: !3873)
!6348 = !DILocalVariable(name: "seq", scope: !6349, file: !3, line: 2762, type: !716)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 2761, column: 5)
!6350 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 2760, column: 7)
!6351 = !DILocation(line: 0, scope: !6342)
!6352 = !DILocation(line: 2749, column: 3, scope: !6342)
!6353 = !DILocation(line: 2751, column: 9, scope: !6342)
!6354 = !DILocation(line: 2751, column: 20, scope: !6342)
!6355 = !DILocation(line: 2752, column: 8, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 2752, column: 7)
!6357 = !DILocation(line: 2752, column: 7, scope: !6342)
!6358 = !DILocation(line: 2755, column: 10, scope: !6342)
!6359 = !DILocation(line: 2756, column: 7, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 2756, column: 7)
!6361 = !DILocation(line: 2756, column: 26, scope: !6360)
!6362 = !DILocation(line: 2757, column: 7, scope: !6360)
!6363 = !DILocation(line: 2757, column: 10, scope: !6360)
!6364 = !DILocation(line: 2757, column: 33, scope: !6360)
!6365 = !DILocation(line: 2756, column: 7, scope: !6342)
!6366 = !DILocation(line: 2760, column: 23, scope: !6350)
!6367 = !DILocation(line: 2760, column: 50, scope: !6350)
!6368 = !DILocation(line: 2760, column: 7, scope: !6350)
!6369 = !DILocation(line: 2760, column: 7, scope: !6342)
!6370 = !DILocation(line: 2762, column: 7, scope: !6349)
!6371 = !DILocation(line: 2762, column: 24, scope: !6349)
!6372 = !DILocation(line: 0, scope: !6349)
!6373 = !DILocation(line: 2764, column: 7, scope: !6349)
!6374 = !DILocation(line: 2765, column: 7, scope: !6349)
!6375 = !DILocation(line: 2766, column: 13, scope: !6349)
!6376 = !DILocation(line: 2766, column: 11, scope: !6349)
!6377 = !DILocation(line: 2767, column: 33, scope: !6349)
!6378 = !DILocation(line: 2767, column: 7, scope: !6349)
!6379 = !DILocation(line: 2768, column: 33, scope: !6349)
!6380 = !DILocation(line: 2768, column: 7, scope: !6349)
!6381 = !DILocation(line: 2769, column: 5, scope: !6350)
!6382 = !DILocation(line: 2769, column: 5, scope: !6349)
!6383 = !DILocation(line: 2770, column: 1, scope: !6342)
!6384 = distinct !DISubprogram(name: "gsi_one_before_end_p", scope: !568, file: !568, line: 4476, type: !3939, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6385)
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "i", arg: 1, scope: !6384, file: !568, line: 4476, type: !3873)
!6387 = !DILocation(line: 4476, column: 44, scope: !6384)
!6388 = !DILocation(line: 4478, column: 12, scope: !6384)
!6389 = !DILocation(line: 4478, column: 16, scope: !6384)
!6390 = !DILocation(line: 4478, column: 24, scope: !6384)
!6391 = !DILocation(line: 4478, column: 34, scope: !6384)
!6392 = !DILocation(line: 4478, column: 39, scope: !6384)
!6393 = !DILocation(line: 4478, column: 3, scope: !6384)
!6394 = distinct !DISubprogram(name: "same_handler_p", scope: !3, file: !3, line: 2701, type: !6395, scopeLine: 2702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6397)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{!653, !716, !716}
!6397 = !{!6398, !6399, !6400, !6401, !6402, !6403}
!6398 = !DILocalVariable(name: "oneh", arg: 1, scope: !6394, file: !3, line: 2701, type: !716)
!6399 = !DILocalVariable(name: "twoh", arg: 2, scope: !6394, file: !3, line: 2701, type: !716)
!6400 = !DILocalVariable(name: "gsi", scope: !6394, file: !3, line: 2703, type: !3873)
!6401 = !DILocalVariable(name: "ones", scope: !6394, file: !3, line: 2704, type: !665)
!6402 = !DILocalVariable(name: "twos", scope: !6394, file: !3, line: 2704, type: !665)
!6403 = !DILocalVariable(name: "ai", scope: !6394, file: !3, line: 2705, type: !7)
!6404 = !DILocation(line: 0, scope: !6394)
!6405 = !DILocation(line: 2703, column: 3, scope: !6394)
!6406 = !DILocation(line: 2707, column: 9, scope: !6394)
!6407 = !DILocation(line: 2708, column: 8, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2708, column: 7)
!6409 = !DILocation(line: 2708, column: 7, scope: !6394)
!6410 = !DILocation(line: 2710, column: 10, scope: !6394)
!6411 = !DILocation(line: 2712, column: 9, scope: !6394)
!6412 = !DILocation(line: 2713, column: 8, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2713, column: 7)
!6414 = !DILocation(line: 2713, column: 7, scope: !6394)
!6415 = !DILocation(line: 2715, column: 10, scope: !6394)
!6416 = !DILocation(line: 2717, column: 8, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2717, column: 7)
!6418 = !DILocation(line: 2718, column: 7, scope: !6417)
!6419 = !DILocation(line: 2718, column: 11, scope: !6417)
!6420 = !DILocation(line: 2719, column: 7, scope: !6417)
!6421 = !DILocation(line: 2719, column: 10, scope: !6417)
!6422 = !DILocation(line: 2720, column: 7, scope: !6417)
!6423 = !DILocation(line: 2720, column: 10, scope: !6417)
!6424 = !DILocation(line: 2721, column: 7, scope: !6417)
!6425 = !DILocation(line: 2721, column: 10, scope: !6417)
!6426 = !DILocation(line: 2722, column: 7, scope: !6417)
!6427 = !DILocation(line: 2722, column: 10, scope: !6417)
!6428 = !DILocation(line: 2723, column: 7, scope: !6417)
!6429 = !DILocation(line: 2723, column: 28, scope: !6417)
!6430 = !DILocation(line: 2723, column: 51, scope: !6417)
!6431 = !DILocation(line: 2723, column: 11, scope: !6417)
!6432 = !DILocation(line: 2724, column: 7, scope: !6417)
!6433 = !DILocation(line: 2724, column: 10, scope: !6417)
!6434 = !DILocation(line: 2724, column: 41, scope: !6417)
!6435 = !DILocation(line: 2724, column: 38, scope: !6417)
!6436 = !DILocation(line: 2717, column: 7, scope: !6394)
!6437 = !DILocation(line: 2727, column: 3, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2727, column: 3)
!6439 = !DILocation(line: 0, scope: !6438)
!6440 = !DILocation(line: 2727, column: 21, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 2727, column: 3)
!6442 = !DILocation(line: 2727, column: 19, scope: !6441)
!6443 = !DILocation(line: 2728, column: 27, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 2728, column: 9)
!6445 = !DILocation(line: 2729, column: 27, scope: !6444)
!6446 = !DILocation(line: 2728, column: 10, scope: !6444)
!6447 = !DILocation(line: 2728, column: 9, scope: !6441)
!6448 = !DILocation(line: 2727, column: 50, scope: !6441)
!6449 = !DILocation(line: 2727, column: 3, scope: !6441)
!6450 = distinct !{!6450, !6437, !6451}
!6451 = !DILocation(line: 2730, column: 14, scope: !6438)
!6452 = !DILocation(line: 2733, column: 1, scope: !6394)
!6453 = distinct !DISubprogram(name: "gimple_try_set_kind", scope: !568, file: !568, line: 2931, type: !6454, scopeLine: 2932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6456)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{null, !665, !632}
!6456 = !{!6457, !6458}
!6457 = !DILocalVariable(name: "gs", arg: 1, scope: !6453, file: !568, line: 2931, type: !665)
!6458 = !DILocalVariable(name: "kind", arg: 2, scope: !6453, file: !568, line: 2931, type: !632)
!6459 = !DILocation(line: 0, scope: !6453)
!6460 = !DILocation(line: 2935, column: 7, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6453, file: !568, line: 2935, column: 7)
!6462 = !DILocation(line: 2935, column: 28, scope: !6461)
!6463 = !DILocation(line: 2935, column: 7, scope: !6453)
!6464 = !DILocation(line: 2936, column: 16, scope: !6461)
!6465 = !DILocation(line: 2936, column: 24, scope: !6461)
!6466 = !DILocation(line: 2936, column: 5, scope: !6461)
!6467 = !DILocation(line: 2937, column: 1, scope: !6453)
!6468 = distinct !DISubprogram(name: "gimple_try_set_eval", scope: !568, file: !568, line: 2988, type: !5161, scopeLine: 2989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6469)
!6469 = !{!6470, !6471}
!6470 = !DILocalVariable(name: "gs", arg: 1, scope: !6468, file: !568, line: 2988, type: !665)
!6471 = !DILocalVariable(name: "eval", arg: 2, scope: !6468, file: !568, line: 2988, type: !716)
!6472 = !DILocation(line: 0, scope: !6468)
!6473 = !DILocation(line: 2991, column: 18, scope: !6468)
!6474 = !DILocation(line: 2991, column: 23, scope: !6468)
!6475 = !DILocation(line: 2992, column: 1, scope: !6468)
!6476 = distinct !DISubprogram(name: "gimple_call_chain", scope: !568, file: !568, line: 1983, type: !4023, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6477)
!6477 = !{!6478}
!6478 = !DILocalVariable(name: "gs", arg: 1, scope: !6476, file: !568, line: 1983, type: !2851)
!6479 = !DILocation(line: 0, scope: !6476)
!6480 = !DILocation(line: 1986, column: 10, scope: !6476)
!6481 = !DILocation(line: 1986, column: 3, scope: !6476)
!6482 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !568, file: !568, line: 2013, type: !4851, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6483)
!6483 = !{!6484, !6485}
!6484 = !DILocalVariable(name: "gs", arg: 1, scope: !6482, file: !568, line: 2013, type: !2851)
!6485 = !DILocalVariable(name: "num_ops", scope: !6482, file: !568, line: 2015, type: !7)
!6486 = !DILocation(line: 0, scope: !6482)
!6487 = !DILocation(line: 2017, column: 13, scope: !6482)
!6488 = !DILocation(line: 2018, column: 18, scope: !6482)
!6489 = !DILocation(line: 2018, column: 3, scope: !6482)
!6490 = distinct !DISubprogram(name: "gimple_call_arg", scope: !568, file: !568, line: 2025, type: !4084, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6491)
!6491 = !{!6492, !6493}
!6492 = !DILocalVariable(name: "gs", arg: 1, scope: !6490, file: !568, line: 2025, type: !2851)
!6493 = !DILocalVariable(name: "index", arg: 2, scope: !6490, file: !568, line: 2025, type: !7)
!6494 = !DILocation(line: 0, scope: !6490)
!6495 = !DILocation(line: 2028, column: 31, scope: !6490)
!6496 = !DILocation(line: 2028, column: 10, scope: !6490)
!6497 = !DILocation(line: 2028, column: 3, scope: !6490)
!6498 = distinct !DISubprogram(name: "is_gimple_resx", scope: !568, file: !568, line: 4313, type: !3300, scopeLine: 4314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6499)
!6499 = !{!6500}
!6500 = !DILocalVariable(name: "gs", arg: 1, scope: !6498, file: !568, line: 4313, type: !2851)
!6501 = !DILocation(line: 0, scope: !6498)
!6502 = !DILocation(line: 4315, column: 10, scope: !6498)
!6503 = !DILocation(line: 4315, column: 27, scope: !6498)
!6504 = !DILocation(line: 4315, column: 3, scope: !6498)
!6505 = distinct !DISubprogram(name: "lower_resx", scope: !3, file: !3, line: 2856, type: !6506, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6508)
!6506 = !DISubroutineType(types: !6507)
!6507 = !{!653, !1270, !665, !1331}
!6508 = !{!6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519, !6520, !6524, !6527, !6528, !6529, !6532, !6534, !6535, !6538}
!6509 = !DILocalVariable(name: "bb", arg: 1, scope: !6505, file: !3, line: 2856, type: !1270)
!6510 = !DILocalVariable(name: "stmt", arg: 2, scope: !6505, file: !3, line: 2856, type: !665)
!6511 = !DILocalVariable(name: "mnt_map", arg: 3, scope: !6505, file: !3, line: 2856, type: !1331)
!6512 = !DILocalVariable(name: "lp_nr", scope: !6505, file: !3, line: 2858, type: !654)
!6513 = !DILocalVariable(name: "src_r", scope: !6505, file: !3, line: 2859, type: !1106)
!6514 = !DILocalVariable(name: "dst_r", scope: !6505, file: !3, line: 2859, type: !1106)
!6515 = !DILocalVariable(name: "gsi", scope: !6505, file: !3, line: 2860, type: !3873)
!6516 = !DILocalVariable(name: "x", scope: !6505, file: !3, line: 2861, type: !665)
!6517 = !DILocalVariable(name: "fn", scope: !6505, file: !3, line: 2862, type: !847)
!6518 = !DILocalVariable(name: "src_nr", scope: !6505, file: !3, line: 2862, type: !847)
!6519 = !DILocalVariable(name: "ret", scope: !6505, file: !3, line: 2863, type: !653)
!6520 = !DILocalVariable(name: "e", scope: !6521, file: !3, line: 2896, type: !706)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2892, column: 5)
!6522 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2891, column: 12)
!6523 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2874, column: 7)
!6524 = !DILocalVariable(name: "new_bb", scope: !6525, file: !3, line: 2900, type: !1270)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 2899, column: 2)
!6526 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2898, column: 11)
!6527 = !DILocalVariable(name: "slot", scope: !6525, file: !3, line: 2901, type: !1206)
!6528 = !DILocalVariable(name: "lab", scope: !6525, file: !3, line: 2902, type: !847)
!6529 = !DILocalVariable(name: "gsi2", scope: !6530, file: !3, line: 2911, type: !3873)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 2910, column: 6)
!6531 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2909, column: 8)
!6532 = !DILocalVariable(name: "ei", scope: !6533, file: !3, line: 2938, type: !2911)
!6533 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 2937, column: 2)
!6534 = !DILocalVariable(name: "dst_nr", scope: !6533, file: !3, line: 2939, type: !847)
!6535 = !DILocalVariable(name: "lp", scope: !6536, file: !3, line: 2957, type: !1180)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 2956, column: 6)
!6537 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2955, column: 8)
!6538 = !DILocalVariable(name: "var", scope: !6539, file: !3, line: 2966, type: !847)
!6539 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2965, column: 5)
!6540 = !DILocation(line: 0, scope: !6505)
!6541 = !DILocation(line: 2860, column: 3, scope: !6505)
!6542 = !DILocation(line: 2865, column: 11, scope: !6505)
!6543 = !DILocation(line: 2866, column: 13, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2866, column: 7)
!6545 = !DILocation(line: 2866, column: 7, scope: !6505)
!6546 = !DILocation(line: 2867, column: 13, scope: !6544)
!6547 = !DILocation(line: 2867, column: 5, scope: !6544)
!6548 = !DILocation(line: 0, scope: !6544)
!6549 = !DILocation(line: 2871, column: 38, scope: !6505)
!6550 = !DILocation(line: 2871, column: 11, scope: !6505)
!6551 = !DILocation(line: 2872, column: 9, scope: !6505)
!6552 = !DILocation(line: 2874, column: 13, scope: !6523)
!6553 = !DILocation(line: 2874, column: 7, scope: !6505)
!6554 = !DILocation(line: 2884, column: 12, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2875, column: 5)
!6556 = !DILocation(line: 2885, column: 11, scope: !6555)
!6557 = !DILocation(line: 2886, column: 7, scope: !6555)
!6558 = !DILocation(line: 0, scope: !6555)
!6559 = !DILocation(line: 2888, column: 7, scope: !6555)
!6560 = !DILocation(line: 2888, column: 14, scope: !6555)
!6561 = !DILocation(line: 2888, column: 37, scope: !6555)
!6562 = !DILocation(line: 2889, column: 15, scope: !6555)
!6563 = !DILocation(line: 2889, column: 2, scope: !6555)
!6564 = distinct !{!6564, !6559, !6565}
!6565 = !DILocation(line: 2889, column: 32, scope: !6555)
!6566 = !DILocation(line: 2891, column: 12, scope: !6522)
!6567 = !DILocation(line: 2891, column: 12, scope: !6523)
!6568 = !DILocation(line: 2896, column: 7, scope: !6521)
!6569 = !DILocation(line: 2898, column: 17, scope: !6526)
!6570 = !DILocation(line: 2898, column: 11, scope: !6521)
!6571 = !DILocation(line: 2906, column: 4, scope: !6525)
!6572 = !DILocation(line: 2908, column: 42, scope: !6525)
!6573 = !DILocation(line: 2908, column: 11, scope: !6525)
!6574 = !DILocation(line: 0, scope: !6525)
!6575 = !DILocation(line: 2909, column: 13, scope: !6531)
!6576 = !DILocation(line: 2909, column: 8, scope: !6525)
!6577 = !DILocation(line: 2911, column: 8, scope: !6530)
!6578 = !DILocation(line: 2913, column: 17, scope: !6530)
!6579 = !DILocation(line: 2914, column: 14, scope: !6530)
!6580 = !DILocation(line: 2915, column: 15, scope: !6530)
!6581 = !DILocation(line: 2917, column: 37, scope: !6530)
!6582 = !DILocation(line: 2918, column: 12, scope: !6530)
!6583 = !DILocation(line: 2919, column: 56, scope: !6530)
!6584 = !DILocation(line: 2919, column: 8, scope: !6530)
!6585 = !DILocation(line: 0, scope: !6530)
!6586 = !DILocation(line: 2920, column: 8, scope: !6530)
!6587 = !DILocation(line: 2922, column: 15, scope: !6530)
!6588 = !DILocation(line: 2923, column: 14, scope: !6530)
!6589 = !DILocation(line: 2924, column: 6, scope: !6531)
!6590 = !DILocation(line: 2924, column: 6, scope: !6530)
!6591 = !DILocation(line: 2927, column: 21, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 2926, column: 6)
!6593 = !DILocation(line: 2928, column: 17, scope: !6592)
!6594 = !DILocation(line: 0, scope: !6531)
!6595 = !DILocation(line: 2931, column: 4, scope: !6525)
!6596 = !DILocation(line: 2932, column: 8, scope: !6525)
!6597 = !DILocation(line: 0, scope: !6521)
!6598 = !DILocation(line: 2932, column: 6, scope: !6525)
!6599 = !DILocation(line: 2933, column: 19, scope: !6525)
!6600 = !DILocation(line: 2933, column: 7, scope: !6525)
!6601 = !DILocation(line: 2933, column: 13, scope: !6525)
!6602 = !DILocation(line: 2934, column: 7, scope: !6525)
!6603 = !DILocation(line: 2934, column: 19, scope: !6525)
!6604 = !DILocation(line: 2935, column: 2, scope: !6525)
!6605 = !DILocation(line: 2938, column: 4, scope: !6533)
!6606 = !DILocation(line: 2939, column: 46, scope: !6533)
!6607 = !DILocation(line: 2939, column: 39, scope: !6533)
!6608 = !DILocation(line: 2939, column: 18, scope: !6533)
!6609 = !DILocation(line: 0, scope: !6533)
!6610 = !DILocation(line: 2941, column: 9, scope: !6533)
!6611 = !DILocation(line: 2942, column: 41, scope: !6533)
!6612 = !DILocation(line: 2942, column: 34, scope: !6533)
!6613 = !DILocation(line: 2942, column: 13, scope: !6533)
!6614 = !DILocation(line: 2943, column: 8, scope: !6533)
!6615 = !DILocation(line: 2944, column: 4, scope: !6533)
!6616 = !DILocation(line: 2947, column: 8, scope: !6533)
!6617 = !DILocation(line: 2947, column: 6, scope: !6533)
!6618 = !DILocation(line: 2948, column: 4, scope: !6533)
!6619 = !DILocation(line: 2949, column: 16, scope: !6533)
!6620 = !DILocation(line: 2949, column: 19, scope: !6533)
!6621 = !DILocation(line: 2952, column: 4, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2952, column: 4)
!6623 = !DILocation(line: 2949, column: 25, scope: !6533)
!6624 = !DILocation(line: 2949, column: 37, scope: !6533)
!6625 = !DILocation(line: 2949, column: 13, scope: !6533)
!6626 = !DILocation(line: 0, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 2952, column: 4)
!6628 = !DILocation(line: 2952, column: 4, scope: !6627)
!6629 = !DILocation(line: 2955, column: 8, scope: !6537)
!6630 = !DILocation(line: 2953, column: 10, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 2953, column: 10)
!6632 = !DILocation(line: 2953, column: 13, scope: !6631)
!6633 = !DILocation(line: 2953, column: 19, scope: !6631)
!6634 = !DILocation(line: 2953, column: 10, scope: !6627)
!6635 = distinct !{!6635, !6621, !6636}
!6636 = !DILocation(line: 2954, column: 8, scope: !6622)
!6637 = !DILocation(line: 2955, column: 10, scope: !6537)
!6638 = !DILocation(line: 2955, column: 8, scope: !6533)
!6639 = !DILocation(line: 2957, column: 28, scope: !6536)
!6640 = !DILocation(line: 0, scope: !6536)
!6641 = !DILocation(line: 2958, column: 8, scope: !6536)
!6642 = !DILocation(line: 2959, column: 6, scope: !6536)
!6643 = !DILocation(line: 2960, column: 2, scope: !6526)
!6644 = !DILocation(line: 2963, column: 5, scope: !6522)
!6645 = !DILocation(line: 2963, column: 5, scope: !6521)
!6646 = !DILocation(line: 2974, column: 18, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2974, column: 11)
!6648 = !DILocation(line: 2974, column: 11, scope: !6647)
!6649 = !DILocation(line: 2974, column: 11, scope: !6539)
!6650 = !DILocation(line: 2976, column: 9, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 2975, column: 2)
!6652 = !DILocation(line: 2977, column: 8, scope: !6651)
!6653 = !DILocation(line: 2978, column: 4, scope: !6651)
!6654 = !DILocation(line: 2979, column: 2, scope: !6651)
!6655 = !DILocation(line: 2982, column: 9, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 2981, column: 2)
!6657 = !DILocation(line: 2983, column: 41, scope: !6656)
!6658 = !DILocation(line: 2983, column: 34, scope: !6656)
!6659 = !DILocation(line: 2983, column: 13, scope: !6656)
!6660 = !DILocation(line: 2984, column: 8, scope: !6656)
!6661 = !DILocation(line: 2985, column: 26, scope: !6656)
!6662 = !DILocation(line: 2985, column: 10, scope: !6656)
!6663 = !DILocation(line: 0, scope: !6539)
!6664 = !DILocation(line: 2986, column: 10, scope: !6656)
!6665 = !DILocation(line: 2987, column: 4, scope: !6656)
!6666 = !DILocation(line: 2988, column: 4, scope: !6656)
!6667 = !DILocation(line: 2990, column: 9, scope: !6656)
!6668 = !DILocation(line: 2991, column: 8, scope: !6656)
!6669 = !DILocation(line: 2992, column: 4, scope: !6656)
!6670 = !DILocation(line: 2995, column: 7, scope: !6539)
!6671 = !DILocation(line: 2998, column: 3, scope: !6505)
!6672 = !DILocation(line: 3001, column: 1, scope: !6505)
!6673 = !DILocation(line: 3000, column: 3, scope: !6505)
!6674 = distinct !DISubprogram(name: "gimple_resx_region", scope: !568, file: !568, line: 3121, type: !2849, scopeLine: 3122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6675)
!6675 = !{!6676}
!6676 = !DILocalVariable(name: "gs", arg: 1, scope: !6674, file: !568, line: 3121, type: !2851)
!6677 = !DILocation(line: 0, scope: !6674)
!6678 = !DILocation(line: 3124, column: 29, scope: !6674)
!6679 = !DILocation(line: 3124, column: 3, scope: !6674)
!6680 = distinct !DISubprogram(name: "gsi_last_bb", scope: !568, file: !568, line: 4450, type: !6681, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6683)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!3873, !1270}
!6683 = !{!6684, !6685, !6686}
!6684 = !DILocalVariable(name: "bb", arg: 1, scope: !6680, file: !568, line: 4450, type: !1270)
!6685 = !DILocalVariable(name: "i", scope: !6680, file: !568, line: 4452, type: !3873)
!6686 = !DILocalVariable(name: "seq", scope: !6680, file: !568, line: 4453, type: !716)
!6687 = !DILocation(line: 0, scope: !6680)
!6688 = !DILocation(line: 4452, column: 24, scope: !6680)
!6689 = !DILocation(line: 4455, column: 9, scope: !6680)
!6690 = !DILocation(line: 4456, column: 11, scope: !6680)
!6691 = !DILocation(line: 4456, column: 5, scope: !6680)
!6692 = !DILocation(line: 4456, column: 9, scope: !6680)
!6693 = !DILocation(line: 4457, column: 5, scope: !6680)
!6694 = !DILocation(line: 4457, column: 9, scope: !6680)
!6695 = !DILocation(line: 4458, column: 5, scope: !6680)
!6696 = !DILocation(line: 4458, column: 8, scope: !6680)
!6697 = !DILocation(line: 4461, column: 1, scope: !6680)
!6698 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !369, file: !369, line: 150, type: !6699, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6703)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{!7, !6701}
!6701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6702, size: 64)
!6702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!6703 = !{!6704}
!6704 = !DILocalVariable(name: "vec_", arg: 1, scope: !6698, file: !369, line: 150, type: !6701)
!6705 = !DILocation(line: 0, scope: !6698)
!6706 = !DILocation(line: 150, column: 1, scope: !6698)
!6707 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !369, file: !369, line: 150, type: !6708, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6710)
!6708 = !DISubroutineType(types: !6709)
!6709 = !{!706, !6701, !7}
!6710 = !{!6711, !6712}
!6711 = !DILocalVariable(name: "vec_", arg: 1, scope: !6707, file: !369, line: 150, type: !6701)
!6712 = !DILocalVariable(name: "ix_", arg: 2, scope: !6707, file: !369, line: 150, type: !7)
!6713 = !DILocation(line: 0, scope: !6707)
!6714 = !DILocation(line: 150, column: 1, scope: !6707)
!6715 = distinct !DISubprogram(name: "gsi_start_bb", scope: !568, file: !568, line: 4418, type: !6681, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6716)
!6716 = !{!6717, !6718, !6719}
!6717 = !DILocalVariable(name: "bb", arg: 1, scope: !6715, file: !568, line: 4418, type: !1270)
!6718 = !DILocalVariable(name: "i", scope: !6715, file: !568, line: 4420, type: !3873)
!6719 = !DILocalVariable(name: "seq", scope: !6715, file: !568, line: 4421, type: !716)
!6720 = !DILocation(line: 0, scope: !6715)
!6721 = !DILocation(line: 4420, column: 24, scope: !6715)
!6722 = !DILocation(line: 4423, column: 9, scope: !6715)
!6723 = !DILocation(line: 4424, column: 11, scope: !6715)
!6724 = !DILocation(line: 4424, column: 5, scope: !6715)
!6725 = !DILocation(line: 4424, column: 9, scope: !6715)
!6726 = !DILocation(line: 4425, column: 5, scope: !6715)
!6727 = !DILocation(line: 4425, column: 9, scope: !6715)
!6728 = !DILocation(line: 4426, column: 5, scope: !6715)
!6729 = !DILocation(line: 4426, column: 8, scope: !6715)
!6730 = !DILocation(line: 4429, column: 1, scope: !6715)
!6731 = distinct !DISubprogram(name: "single_succ_edge", scope: !369, file: !369, line: 643, type: !6732, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6737)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{!706, !6734}
!6734 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !666, line: 112, baseType: !6735)
!6735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6736, size: 64)
!6736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!6737 = !{!6738}
!6738 = !DILocalVariable(name: "bb", arg: 1, scope: !6731, file: !369, line: 643, type: !6734)
!6739 = !DILocation(line: 0, scope: !6731)
!6740 = !DILocation(line: 645, column: 3, scope: !6731)
!6741 = !DILocation(line: 646, column: 10, scope: !6731)
!6742 = !DILocation(line: 646, column: 3, scope: !6731)
!6743 = distinct !DISubprogram(name: "make_ssa_name", scope: !6744, file: !6744, line: 1245, type: !6745, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6747)
!6744 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!847, !847, !665}
!6747 = !{!6748, !6749}
!6748 = !DILocalVariable(name: "var", arg: 1, scope: !6743, file: !6744, line: 1245, type: !847)
!6749 = !DILocalVariable(name: "stmt", arg: 2, scope: !6743, file: !6744, line: 1245, type: !665)
!6750 = !DILocation(line: 0, scope: !6743)
!6751 = !DILocation(line: 1247, column: 28, scope: !6743)
!6752 = !DILocation(line: 1247, column: 10, scope: !6743)
!6753 = !DILocation(line: 1247, column: 3, scope: !6743)
!6754 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !568, file: !568, line: 1898, type: !4338, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6755)
!6755 = !{!6756, !6757}
!6756 = !DILocalVariable(name: "gs", arg: 1, scope: !6754, file: !568, line: 1898, type: !665)
!6757 = !DILocalVariable(name: "lhs", arg: 2, scope: !6754, file: !568, line: 1898, type: !847)
!6758 = !DILocation(line: 0, scope: !6754)
!6759 = !DILocation(line: 1901, column: 3, scope: !6754)
!6760 = !DILocation(line: 1902, column: 7, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6754, file: !568, line: 1902, column: 7)
!6762 = !DILocation(line: 1902, column: 11, scope: !6761)
!6763 = !DILocation(line: 1902, column: 14, scope: !6761)
!6764 = !DILocation(line: 1902, column: 30, scope: !6761)
!6765 = !DILocation(line: 1902, column: 7, scope: !6754)
!6766 = !DILocation(line: 1903, column: 5, scope: !6761)
!6767 = !DILocation(line: 1903, column: 29, scope: !6761)
!6768 = !DILocation(line: 1904, column: 1, scope: !6754)
!6769 = distinct !DISubprogram(name: "bb_seq", scope: !568, file: !568, line: 237, type: !6770, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6772)
!6770 = !DISubroutineType(types: !6771)
!6771 = !{!716, !6734}
!6772 = !{!6773}
!6773 = !DILocalVariable(name: "bb", arg: 1, scope: !6769, file: !568, line: 237, type: !6734)
!6774 = !DILocation(line: 0, scope: !6769)
!6775 = !DILocation(line: 239, column: 17, scope: !6769)
!6776 = !DILocation(line: 239, column: 23, scope: !6769)
!6777 = !DILocation(line: 239, column: 33, scope: !6769)
!6778 = !DILocation(line: 239, column: 43, scope: !6769)
!6779 = !DILocation(line: 239, column: 36, scope: !6769)
!6780 = !DILocation(line: 239, column: 10, scope: !6769)
!6781 = !DILocation(line: 239, column: 68, scope: !6769)
!6782 = !DILocation(line: 239, column: 3, scope: !6769)
!6783 = distinct !DISubprogram(name: "single_succ_p", scope: !369, file: !369, line: 626, type: !6784, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6786)
!6784 = !DISubroutineType(types: !6785)
!6785 = !{!653, !6734}
!6786 = !{!6787}
!6787 = !DILocalVariable(name: "bb", arg: 1, scope: !6783, file: !369, line: 626, type: !6734)
!6788 = !DILocation(line: 0, scope: !6783)
!6789 = !DILocation(line: 628, column: 10, scope: !6783)
!6790 = !DILocation(line: 628, column: 33, scope: !6783)
!6791 = !DILocation(line: 628, column: 3, scope: !6783)
!6792 = distinct !DISubprogram(name: "lower_eh_dispatch", scope: !3, file: !3, line: 3064, type: !6793, scopeLine: 3065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6795)
!6793 = !DISubroutineType(types: !6794)
!6794 = !{!653, !1270, !665}
!6795 = !{!6796, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6804, !6805, !6808, !6809, !6810, !6811, !6812, !6815, !6819, !6820, !6821, !6822, !6826, !6828}
!6796 = !DILocalVariable(name: "src", arg: 1, scope: !6792, file: !3, line: 3064, type: !1270)
!6797 = !DILocalVariable(name: "stmt", arg: 2, scope: !6792, file: !3, line: 3064, type: !665)
!6798 = !DILocalVariable(name: "gsi", scope: !6792, file: !3, line: 3066, type: !3873)
!6799 = !DILocalVariable(name: "region_nr", scope: !6792, file: !3, line: 3067, type: !654)
!6800 = !DILocalVariable(name: "r", scope: !6792, file: !3, line: 3068, type: !1106)
!6801 = !DILocalVariable(name: "filter", scope: !6792, file: !3, line: 3069, type: !847)
!6802 = !DILocalVariable(name: "fn", scope: !6792, file: !3, line: 3069, type: !847)
!6803 = !DILocalVariable(name: "x", scope: !6792, file: !3, line: 3070, type: !665)
!6804 = !DILocalVariable(name: "redirected", scope: !6792, file: !3, line: 3071, type: !653)
!6805 = !DILocalVariable(name: "labels", scope: !6806, file: !3, line: 3082, type: !2072)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 3081, column: 7)
!6807 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 3079, column: 5)
!6808 = !DILocalVariable(name: "default_label", scope: !6806, file: !3, line: 3083, type: !847)
!6809 = !DILocalVariable(name: "c", scope: !6806, file: !3, line: 3084, type: !2814)
!6810 = !DILocalVariable(name: "ei", scope: !6806, file: !3, line: 3085, type: !2911)
!6811 = !DILocalVariable(name: "e", scope: !6806, file: !3, line: 3086, type: !706)
!6812 = !DILocalVariable(name: "seen_values", scope: !6806, file: !3, line: 3087, type: !6813)
!6813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6814, size: 64)
!6814 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !142, line: 5199, flags: DIFlagFwdDecl)
!6815 = !DILocalVariable(name: "tp_node", scope: !6816, file: !3, line: 3095, type: !847)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 3094, column: 4)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 3093, column: 2)
!6818 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3093, column: 2)
!6819 = !DILocalVariable(name: "flt_node", scope: !6816, file: !3, line: 3095, type: !847)
!6820 = !DILocalVariable(name: "lab", scope: !6816, file: !3, line: 3095, type: !847)
!6821 = !DILocalVariable(name: "have_label", scope: !6816, file: !3, line: 3096, type: !653)
!6822 = !DILocalVariable(name: "t", scope: !6823, file: !3, line: 3116, type: !847)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 3115, column: 5)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 3114, column: 7)
!6825 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 3108, column: 8)
!6826 = !DILocalVariable(name: "b_e", scope: !6827, file: !3, line: 3179, type: !706)
!6827 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 3178, column: 7)
!6828 = !DILocalVariable(name: "f_e", scope: !6827, file: !3, line: 3180, type: !706)
!6829 = !DILocation(line: 0, scope: !6792)
!6830 = !DILocation(line: 3066, column: 3, scope: !6792)
!6831 = !DILocation(line: 3073, column: 15, scope: !6792)
!6832 = !DILocation(line: 3074, column: 7, scope: !6792)
!6833 = !DILocation(line: 3076, column: 9, scope: !6792)
!6834 = !DILocation(line: 3078, column: 14, scope: !6792)
!6835 = !DILocation(line: 3078, column: 3, scope: !6792)
!6836 = !DILocation(line: 3082, column: 2, scope: !6806)
!6837 = !DILocation(line: 0, scope: !6806)
!6838 = !DILocation(line: 3082, column: 20, scope: !6806)
!6839 = !DILocation(line: 3085, column: 2, scope: !6806)
!6840 = !DILocation(line: 3086, column: 2, scope: !6806)
!6841 = !DILocation(line: 3087, column: 38, scope: !6806)
!6842 = !DILocation(line: 3093, column: 14, scope: !6818)
!6843 = !DILocation(line: 3093, column: 23, scope: !6818)
!6844 = !DILocation(line: 3093, column: 7, scope: !6818)
!6845 = !DILocation(line: 3071, column: 8, scope: !6792)
!6846 = !DILocation(line: 0, scope: !6818)
!6847 = !DILocation(line: 3093, column: 2, scope: !6818)
!6848 = !DILocation(line: 3095, column: 39, scope: !6816)
!6849 = !DILocation(line: 0, scope: !6816)
!6850 = !DILocation(line: 3098, column: 15, scope: !6816)
!6851 = !DILocation(line: 3099, column: 19, scope: !6816)
!6852 = !DILocation(line: 3102, column: 18, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 3102, column: 10)
!6854 = !DILocation(line: 3102, column: 10, scope: !6816)
!6855 = !DILocation(line: 3100, column: 20, scope: !6816)
!6856 = !DILocation(line: 3107, column: 6, scope: !6816)
!6857 = !DILocation(line: 3096, column: 11, scope: !6816)
!6858 = !DILocation(line: 3114, column: 44, scope: !6824)
!6859 = !DILocation(line: 3114, column: 9, scope: !6824)
!6860 = !DILocation(line: 3114, column: 7, scope: !6825)
!6861 = !DILocation(line: 3116, column: 16, scope: !6823)
!6862 = !DILocation(line: 0, scope: !6823)
!6863 = !DILocation(line: 3118, column: 7, scope: !6823)
!6864 = !DILocation(line: 3119, column: 40, scope: !6823)
!6865 = !DILocation(line: 3119, column: 7, scope: !6823)
!6866 = !DILocation(line: 3121, column: 5, scope: !6823)
!6867 = !DILocation(line: 3123, column: 13, scope: !6825)
!6868 = !DILocation(line: 3124, column: 14, scope: !6825)
!6869 = !DILocation(line: 3125, column: 8, scope: !6825)
!6870 = distinct !{!6870, !6856, !6871}
!6871 = !DILocation(line: 3126, column: 20, scope: !6816)
!6872 = !DILocation(line: 3127, column: 12, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 3127, column: 10)
!6874 = !DILocation(line: 3127, column: 10, scope: !6816)
!6875 = !DILocation(line: 3129, column: 39, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 3128, column: 8)
!6877 = !DILocation(line: 3129, column: 23, scope: !6876)
!6878 = !DILocation(line: 3129, column: 10, scope: !6876)
!6879 = !DILocation(line: 3131, column: 8, scope: !6876)
!6880 = !DILocation(line: 3093, column: 47, scope: !6817)
!6881 = !DILocation(line: 3093, column: 2, scope: !6817)
!6882 = distinct !{!6882, !6847, !6883}
!6883 = !DILocation(line: 3132, column: 4, scope: !6818)
!6884 = !DILocation(line: 3135, column: 2, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3135, column: 2)
!6886 = !DILocation(line: 0, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 3135, column: 2)
!6888 = !DILocation(line: 3135, column: 2, scope: !6887)
!6889 = !DILocation(line: 3137, column: 10, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 3137, column: 10)
!6891 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 3136, column: 4)
!6892 = !DILocation(line: 3137, column: 13, scope: !6890)
!6893 = !DILocation(line: 3137, column: 19, scope: !6890)
!6894 = !DILocation(line: 3137, column: 10, scope: !6891)
!6895 = !DILocation(line: 3140, column: 21, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 3140, column: 7)
!6897 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 3138, column: 8)
!6898 = !DILocation(line: 3140, column: 7, scope: !6897)
!6899 = !DILocation(line: 3141, column: 44, scope: !6896)
!6900 = !DILocation(line: 3141, column: 21, scope: !6896)
!6901 = !DILocation(line: 3142, column: 3, scope: !6897)
!6902 = !DILocation(line: 0, scope: !6897)
!6903 = !DILocation(line: 3142, column: 12, scope: !6897)
!6904 = !DILocation(line: 3141, column: 5, scope: !6896)
!6905 = !DILocation(line: 3142, column: 6, scope: !6897)
!6906 = !DILocation(line: 3143, column: 8, scope: !6897)
!6907 = distinct !{!6907, !6884, !6908}
!6908 = !DILocation(line: 3144, column: 4, scope: !6885)
!6909 = !DILocation(line: 3145, column: 2, scope: !6806)
!6910 = !DILocation(line: 3149, column: 6, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3149, column: 6)
!6912 = !DILocation(line: 3149, column: 13, scope: !6911)
!6913 = !DILocation(line: 3149, column: 6, scope: !6806)
!6914 = !DILocation(line: 3151, column: 10, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 3150, column: 4)
!6916 = !DILocation(line: 3151, column: 8, scope: !6915)
!6917 = !DILocation(line: 3152, column: 9, scope: !6915)
!6918 = !DILocation(line: 3152, column: 15, scope: !6915)
!6919 = !DILocation(line: 3153, column: 4, scope: !6915)
!6920 = !DILocation(line: 3156, column: 11, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 3155, column: 4)
!6922 = !DILocation(line: 3157, column: 57, scope: !6921)
!6923 = !DILocation(line: 3157, column: 36, scope: !6921)
!6924 = !DILocation(line: 3157, column: 10, scope: !6921)
!6925 = !DILocation(line: 3158, column: 31, scope: !6921)
!6926 = !DILocation(line: 3158, column: 15, scope: !6921)
!6927 = !DILocation(line: 3159, column: 15, scope: !6921)
!6928 = !DILocation(line: 3160, column: 6, scope: !6921)
!6929 = !DILocation(line: 3161, column: 6, scope: !6921)
!6930 = !DILocation(line: 3164, column: 22, scope: !6921)
!6931 = !DILocation(line: 3166, column: 24, scope: !6921)
!6932 = !DILocation(line: 3166, column: 6, scope: !6921)
!6933 = !DILocation(line: 3168, column: 58, scope: !6921)
!6934 = !DILocation(line: 3168, column: 10, scope: !6921)
!6935 = !DILocation(line: 3169, column: 6, scope: !6921)
!6936 = !DILocation(line: 3171, column: 6, scope: !6921)
!6937 = !DILocation(line: 3173, column: 2, scope: !6806)
!6938 = !DILocation(line: 3174, column: 7, scope: !6807)
!6939 = !DILocation(line: 3175, column: 7, scope: !6807)
!6940 = !DILocation(line: 3179, column: 13, scope: !6827)
!6941 = !DILocation(line: 0, scope: !6827)
!6942 = !DILocation(line: 3180, column: 13, scope: !6827)
!6943 = !DILocation(line: 3182, column: 7, scope: !6827)
!6944 = !DILocation(line: 3183, column: 53, scope: !6827)
!6945 = !DILocation(line: 3183, column: 32, scope: !6827)
!6946 = !DILocation(line: 3183, column: 6, scope: !6827)
!6947 = !DILocation(line: 3184, column: 27, scope: !6827)
!6948 = !DILocation(line: 3184, column: 11, scope: !6827)
!6949 = !DILocation(line: 3185, column: 11, scope: !6827)
!6950 = !DILocation(line: 3186, column: 2, scope: !6827)
!6951 = !DILocation(line: 3187, column: 2, scope: !6827)
!6952 = !DILocation(line: 3189, column: 15, scope: !6827)
!6953 = !DILocation(line: 3189, column: 21, scope: !6827)
!6954 = !DILocation(line: 3191, column: 26, scope: !6827)
!6955 = !DILocation(line: 3192, column: 25, scope: !6827)
!6956 = !DILocation(line: 3192, column: 12, scope: !6827)
!6957 = !DILocation(line: 3191, column: 11, scope: !6827)
!6958 = !DILocation(line: 3190, column: 6, scope: !6827)
!6959 = !DILocation(line: 3194, column: 2, scope: !6827)
!6960 = !DILocation(line: 3196, column: 20, scope: !6827)
!6961 = !DILocation(line: 3196, column: 26, scope: !6827)
!6962 = !DILocation(line: 3196, column: 13, scope: !6827)
!6963 = !DILocation(line: 3197, column: 28, scope: !6827)
!6964 = !DILocation(line: 3197, column: 34, scope: !6827)
!6965 = !DILocation(line: 3197, column: 52, scope: !6827)
!6966 = !DILocation(line: 3197, column: 20, scope: !6827)
!6967 = !DILocation(line: 3199, column: 7, scope: !6807)
!6968 = !DILocation(line: 3202, column: 7, scope: !6807)
!6969 = !DILocation(line: 3203, column: 5, scope: !6807)
!6970 = !DILocation(line: 3206, column: 3, scope: !6792)
!6971 = !DILocation(line: 3208, column: 1, scope: !6792)
!6972 = !DILocation(line: 3207, column: 3, scope: !6792)
!6973 = distinct !DISubprogram(name: "remove_unreachable_handlers", scope: !3, file: !3, line: 3263, type: !2640, scopeLine: 3264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6974)
!6974 = !{!6975, !6986, !6987, !6988, !6989, !6990, !6991, !6992, !6996}
!6975 = !DILocalVariable(name: "r_reachable", scope: !6973, file: !3, line: 3265, type: !6976)
!6976 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !6977, line: 45, baseType: !6978)
!6977 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6979, size: 64)
!6979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !6977, line: 39, size: 192, elements: !6980)
!6980 = !{!6981, !6982, !6983, !6984}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !6979, file: !6977, line: 41, baseType: !652, size: 64)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !6979, file: !6977, line: 42, baseType: !7, size: 32, offset: 64)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6979, file: !6977, line: 43, baseType: !7, size: 32, offset: 96)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !6979, file: !6977, line: 44, baseType: !6985, size: 64, offset: 128)
!6985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 64, elements: !766)
!6986 = !DILocalVariable(name: "lp_reachable", scope: !6973, file: !3, line: 3265, type: !6976)
!6987 = !DILocalVariable(name: "region", scope: !6973, file: !3, line: 3266, type: !1106)
!6988 = !DILocalVariable(name: "lp", scope: !6973, file: !3, line: 3267, type: !1180)
!6989 = !DILocalVariable(name: "bb", scope: !6973, file: !3, line: 3268, type: !1270)
!6990 = !DILocalVariable(name: "lp_nr", scope: !6973, file: !3, line: 3269, type: !654)
!6991 = !DILocalVariable(name: "r_nr", scope: !6973, file: !3, line: 3269, type: !654)
!6992 = !DILocalVariable(name: "gsi", scope: !6993, file: !3, line: 3279, type: !3873)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 3278, column: 5)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !3, line: 3277, column: 3)
!6995 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 3277, column: 3)
!6996 = !DILocalVariable(name: "stmt", scope: !6997, file: !3, line: 3283, type: !665)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 3282, column: 2)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 3281, column: 7)
!6999 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3281, column: 7)
!7000 = !DILocation(line: 3266, column: 3, scope: !6973)
!7001 = !DILocation(line: 3267, column: 3, scope: !6973)
!7002 = !DILocation(line: 3271, column: 32, scope: !6973)
!7003 = !DILocation(line: 3271, column: 17, scope: !6973)
!7004 = !DILocation(line: 0, scope: !6973)
!7005 = !DILocation(line: 3273, column: 22, scope: !6973)
!7006 = !DILocation(line: 3273, column: 7, scope: !6973)
!7007 = !DILocation(line: 3274, column: 3, scope: !6973)
!7008 = !DILocation(line: 3275, column: 3, scope: !6973)
!7009 = !DILocation(line: 3277, column: 3, scope: !6995)
!7010 = !DILocation(line: 0, scope: !6993)
!7011 = !DILocation(line: 0, scope: !6999)
!7012 = !DILocation(line: 3277, column: 3, scope: !6994)
!7013 = !DILocation(line: 0, scope: !6995)
!7014 = !DILocation(line: 3279, column: 7, scope: !6993)
!7015 = !DILocation(line: 3279, column: 34, scope: !6993)
!7016 = !DILocation(line: 3281, column: 18, scope: !6999)
!7017 = !DILocation(line: 3281, column: 12, scope: !6999)
!7018 = !DILocation(line: 3281, column: 38, scope: !6998)
!7019 = !DILocation(line: 3281, column: 37, scope: !6998)
!7020 = !DILocation(line: 3281, column: 7, scope: !6999)
!7021 = !DILocation(line: 3283, column: 18, scope: !6997)
!7022 = !DILocation(line: 0, scope: !6997)
!7023 = !DILocation(line: 3284, column: 12, scope: !6997)
!7024 = !DILocation(line: 3288, column: 14, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 3288, column: 8)
!7026 = !DILocation(line: 3288, column: 8, scope: !6997)
!7027 = !DILocation(line: 3289, column: 28, scope: !7025)
!7028 = !DILocation(line: 3289, column: 6, scope: !7025)
!7029 = !DILocation(line: 3292, column: 19, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 3292, column: 13)
!7031 = !DILocation(line: 3292, column: 13, scope: !7025)
!7032 = !DILocation(line: 3294, column: 8, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 3293, column: 6)
!7034 = !DILocation(line: 3295, column: 17, scope: !7033)
!7035 = !DILocation(line: 3295, column: 15, scope: !7033)
!7036 = !DILocation(line: 3296, column: 38, scope: !7033)
!7037 = !DILocation(line: 3296, column: 8, scope: !7033)
!7038 = !DILocation(line: 3297, column: 8, scope: !7033)
!7039 = !DILocation(line: 3298, column: 6, scope: !7033)
!7040 = !DILocation(line: 3281, column: 55, scope: !6998)
!7041 = !DILocation(line: 3281, column: 7, scope: !6998)
!7042 = distinct !{!7042, !7020, !7043}
!7043 = !DILocation(line: 3299, column: 2, scope: !6999)
!7044 = !DILocation(line: 3300, column: 5, scope: !6994)
!7045 = !DILocation(line: 0, scope: !6994)
!7046 = distinct !{!7046, !7009, !7047}
!7047 = !DILocation(line: 3300, column: 5, scope: !6995)
!7048 = !DILocation(line: 3302, column: 7, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 3302, column: 7)
!7050 = !DILocation(line: 3302, column: 7, scope: !6973)
!7051 = !DILocation(line: 3304, column: 7, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 3303, column: 5)
!7053 = !DILocation(line: 3305, column: 21, scope: !7052)
!7054 = !DILocation(line: 3305, column: 32, scope: !7052)
!7055 = !DILocation(line: 3305, column: 7, scope: !7052)
!7056 = !DILocation(line: 3306, column: 16, scope: !7052)
!7057 = !DILocation(line: 3306, column: 7, scope: !7052)
!7058 = !DILocation(line: 3307, column: 26, scope: !7052)
!7059 = !DILocation(line: 3307, column: 7, scope: !7052)
!7060 = !DILocation(line: 3308, column: 16, scope: !7052)
!7061 = !DILocation(line: 3308, column: 7, scope: !7052)
!7062 = !DILocation(line: 3309, column: 26, scope: !7052)
!7063 = !DILocation(line: 3309, column: 7, scope: !7052)
!7064 = !DILocation(line: 3310, column: 5, scope: !7052)
!7065 = !DILocation(line: 3312, column: 8, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 3312, column: 3)
!7067 = !DILocation(line: 0, scope: !7066)
!7068 = !DILocation(line: 3313, column: 8, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3312, column: 3)
!7070 = !DILocation(line: 3312, column: 3, scope: !7066)
!7071 = !DILocation(line: 3321, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 3321, column: 3)
!7073 = !DILocation(line: 3314, column: 9, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 3314, column: 9)
!7075 = !DILocation(line: 3314, column: 16, scope: !7074)
!7076 = !DILocation(line: 3314, column: 20, scope: !7074)
!7077 = !DILocation(line: 3314, column: 9, scope: !7069)
!7078 = !DILocation(line: 3316, column: 6, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3316, column: 6)
!7080 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 3315, column: 7)
!7081 = !DILocation(line: 3316, column: 6, scope: !7080)
!7082 = !DILocation(line: 3317, column: 4, scope: !7079)
!7083 = !DILocation(line: 3318, column: 21, scope: !7080)
!7084 = !DILocation(line: 3318, column: 2, scope: !7080)
!7085 = !DILocation(line: 3319, column: 7, scope: !7080)
!7086 = !DILocation(line: 3313, column: 71, scope: !7069)
!7087 = !DILocation(line: 3312, column: 3, scope: !7069)
!7088 = distinct !{!7088, !7070, !7089}
!7089 = !DILocation(line: 3319, column: 7, scope: !7066)
!7090 = !DILocation(line: 0, scope: !7072)
!7091 = !DILocation(line: 3322, column: 8, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 3321, column: 3)
!7093 = !DILocation(line: 3323, column: 9, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 3323, column: 9)
!7095 = !DILocation(line: 3323, column: 12, scope: !7094)
!7096 = !DILocation(line: 3323, column: 16, scope: !7094)
!7097 = !DILocation(line: 3323, column: 9, scope: !7092)
!7098 = !DILocation(line: 3325, column: 6, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 3325, column: 6)
!7100 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 3324, column: 7)
!7101 = !DILocation(line: 3325, column: 6, scope: !7100)
!7102 = !DILocation(line: 3326, column: 4, scope: !7099)
!7103 = !DILocation(line: 3327, column: 25, scope: !7100)
!7104 = !DILocation(line: 3327, column: 2, scope: !7100)
!7105 = !DILocation(line: 3328, column: 7, scope: !7100)
!7106 = !DILocation(line: 3322, column: 69, scope: !7092)
!7107 = !DILocation(line: 3321, column: 3, scope: !7092)
!7108 = distinct !{!7108, !7071, !7109}
!7109 = !DILocation(line: 3328, column: 7, scope: !7072)
!7110 = !DILocation(line: 3330, column: 7, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 3330, column: 7)
!7112 = !DILocation(line: 3330, column: 7, scope: !6973)
!7113 = !DILocation(line: 3332, column: 7, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 3331, column: 5)
!7115 = !DILocation(line: 3333, column: 21, scope: !7114)
!7116 = !DILocation(line: 3333, column: 32, scope: !7114)
!7117 = !DILocation(line: 3333, column: 7, scope: !7114)
!7118 = !DILocation(line: 3334, column: 16, scope: !7114)
!7119 = !DILocation(line: 3334, column: 7, scope: !7114)
!7120 = !DILocation(line: 3335, column: 5, scope: !7114)
!7121 = !DILocation(line: 3337, column: 3, scope: !6973)
!7122 = !DILocation(line: 3338, column: 3, scope: !6973)
!7123 = !DILocation(line: 3343, column: 1, scope: !6973)
!7124 = distinct !DISubprogram(name: "unsplit_all_eh", scope: !3, file: !3, line: 3472, type: !2157, scopeLine: 3473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7125)
!7125 = !{!7126, !7127, !7128}
!7126 = !DILocalVariable(name: "changed", scope: !7124, file: !3, line: 3474, type: !653)
!7127 = !DILocalVariable(name: "lp", scope: !7124, file: !3, line: 3475, type: !1180)
!7128 = !DILocalVariable(name: "i", scope: !7124, file: !3, line: 3476, type: !654)
!7129 = !DILocation(line: 0, scope: !7124)
!7130 = !DILocation(line: 3475, column: 3, scope: !7124)
!7131 = !DILocation(line: 3478, column: 8, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 3478, column: 3)
!7133 = !DILocation(line: 0, scope: !7132)
!7134 = !DILocation(line: 3478, column: 15, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 3478, column: 3)
!7136 = !DILocation(line: 3478, column: 3, scope: !7132)
!7137 = !DILocation(line: 3479, column: 9, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 3479, column: 9)
!7139 = !DILocation(line: 3479, column: 9, scope: !7135)
!7140 = !DILocation(line: 3480, column: 18, scope: !7138)
!7141 = !DILocation(line: 3480, column: 15, scope: !7138)
!7142 = !DILocation(line: 3480, column: 7, scope: !7138)
!7143 = !DILocation(line: 3478, column: 72, scope: !7135)
!7144 = !DILocation(line: 3478, column: 3, scope: !7135)
!7145 = distinct !{!7145, !7136, !7146}
!7146 = !DILocation(line: 3480, column: 32, scope: !7132)
!7147 = !DILocation(line: 3483, column: 1, scope: !7124)
!7148 = !DILocation(line: 3482, column: 3, scope: !7124)
!7149 = distinct !DISubprogram(name: "cleanup_all_empty_eh", scope: !3, file: !3, line: 3817, type: !2157, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7150)
!7150 = !{!7151, !7152, !7153}
!7151 = !DILocalVariable(name: "changed", scope: !7149, file: !3, line: 3819, type: !653)
!7152 = !DILocalVariable(name: "lp", scope: !7149, file: !3, line: 3820, type: !1180)
!7153 = !DILocalVariable(name: "i", scope: !7149, file: !3, line: 3821, type: !654)
!7154 = !DILocation(line: 0, scope: !7149)
!7155 = !DILocation(line: 3820, column: 3, scope: !7149)
!7156 = !DILocation(line: 3823, column: 8, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 3823, column: 3)
!7158 = !DILocation(line: 0, scope: !7157)
!7159 = !DILocation(line: 3823, column: 15, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 3823, column: 3)
!7161 = !DILocation(line: 3823, column: 3, scope: !7157)
!7162 = !DILocation(line: 3824, column: 9, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 3824, column: 9)
!7164 = !DILocation(line: 3824, column: 9, scope: !7160)
!7165 = !DILocation(line: 3825, column: 18, scope: !7163)
!7166 = !DILocation(line: 3825, column: 15, scope: !7163)
!7167 = !DILocation(line: 3825, column: 7, scope: !7163)
!7168 = !DILocation(line: 3823, column: 72, scope: !7160)
!7169 = !DILocation(line: 3823, column: 3, scope: !7160)
!7170 = distinct !{!7170, !7161, !7171}
!7171 = !DILocation(line: 3825, column: 38, scope: !7157)
!7172 = !DILocation(line: 3828, column: 1, scope: !7149)
!7173 = !DILocation(line: 3827, column: 3, scope: !7149)
!7174 = distinct !DISubprogram(name: "remove_unreachable_handlers_no_lp", scope: !3, file: !3, line: 3350, type: !2640, scopeLine: 3351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7175)
!7175 = !{!7176, !7177}
!7176 = !DILocalVariable(name: "r", scope: !7174, file: !3, line: 3352, type: !1106)
!7177 = !DILocalVariable(name: "i", scope: !7174, file: !3, line: 3353, type: !654)
!7178 = !DILocation(line: 3352, column: 3, scope: !7174)
!7179 = !DILocation(line: 0, scope: !7174)
!7180 = !DILocation(line: 3355, column: 8, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 3355, column: 3)
!7182 = !DILocation(line: 0, scope: !7181)
!7183 = !DILocation(line: 3355, column: 15, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 3355, column: 3)
!7185 = !DILocation(line: 3355, column: 3, scope: !7181)
!7186 = !DILocation(line: 3356, column: 9, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 3356, column: 9)
!7188 = !DILocation(line: 3356, column: 11, scope: !7187)
!7189 = !DILocation(line: 3356, column: 17, scope: !7187)
!7190 = !DILocation(line: 3356, column: 30, scope: !7187)
!7191 = !DILocation(line: 3356, column: 38, scope: !7187)
!7192 = !DILocation(line: 3356, column: 44, scope: !7187)
!7193 = !DILocation(line: 3356, column: 49, scope: !7187)
!7194 = !DILocation(line: 3356, column: 9, scope: !7184)
!7195 = !DILocation(line: 3358, column: 6, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 3358, column: 6)
!7197 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 3357, column: 7)
!7198 = !DILocation(line: 3358, column: 6, scope: !7197)
!7199 = !DILocation(line: 3359, column: 4, scope: !7196)
!7200 = !DILocation(line: 3360, column: 21, scope: !7197)
!7201 = !DILocation(line: 3360, column: 2, scope: !7197)
!7202 = !DILocation(line: 3361, column: 7, scope: !7197)
!7203 = !DILocation(line: 3355, column: 70, scope: !7184)
!7204 = !DILocation(line: 3355, column: 3, scope: !7184)
!7205 = distinct !{!7205, !7185, !7206}
!7206 = !DILocation(line: 3361, column: 7, scope: !7181)
!7207 = !DILocation(line: 3362, column: 1, scope: !7174)
!7208 = distinct !DISubprogram(name: "VEC_eh_region_base_length", scope: !6, file: !6, line: 184, type: !7209, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7211)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{!7, !3487}
!7211 = !{!7212}
!7212 = !DILocalVariable(name: "vec_", arg: 1, scope: !7208, file: !6, line: 184, type: !3487)
!7213 = !DILocation(line: 0, scope: !7208)
!7214 = !DILocation(line: 184, column: 1, scope: !7208)
!7215 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_length", scope: !6, file: !6, line: 188, type: !7216, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7218)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!7, !3477}
!7218 = !{!7219}
!7219 = !DILocalVariable(name: "vec_", arg: 1, scope: !7215, file: !6, line: 188, type: !3477)
!7220 = !DILocation(line: 0, scope: !7215)
!7221 = !DILocation(line: 188, column: 1, scope: !7215)
!7222 = distinct !DISubprogram(name: "SET_BIT", scope: !6977, file: !6977, line: 63, type: !7223, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7225)
!7223 = !DISubroutineType(types: !7224)
!7224 = !{null, !6976, !7}
!7225 = !{!7226, !7227, !7228}
!7226 = !DILocalVariable(name: "map", arg: 1, scope: !7222, file: !6977, line: 63, type: !6976)
!7227 = !DILocalVariable(name: "bitno", arg: 2, scope: !7222, file: !6977, line: 63, type: !7)
!7228 = !DILocalVariable(name: "oldbit", scope: !7229, file: !6977, line: 67, type: !653)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !6977, line: 66, column: 5)
!7230 = distinct !DILexicalBlock(scope: !7222, file: !6977, line: 65, column: 7)
!7231 = !DILocation(line: 0, scope: !7222)
!7232 = !DILocation(line: 65, column: 12, scope: !7230)
!7233 = !DILocation(line: 65, column: 7, scope: !7230)
!7234 = !DILocation(line: 65, column: 7, scope: !7222)
!7235 = !DILocation(line: 73, column: 40, scope: !7222)
!7236 = !DILocation(line: 73, column: 29, scope: !7222)
!7237 = !DILocation(line: 72, column: 19, scope: !7222)
!7238 = !DILocation(line: 72, column: 3, scope: !7222)
!7239 = !DILocation(line: 68, column: 16, scope: !7229)
!7240 = !DILocation(line: 69, column: 12, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7229, file: !6977, line: 69, column: 11)
!7242 = !DILocation(line: 69, column: 11, scope: !7229)
!7243 = !DILocation(line: 70, column: 2, scope: !7241)
!7244 = !DILocation(line: 70, column: 41, scope: !7241)
!7245 = !DILocation(line: 73, column: 5, scope: !7222)
!7246 = !DILocation(line: 74, column: 1, scope: !7222)
!7247 = distinct !DISubprogram(name: "VEC_eh_region_base_iterate", scope: !6, file: !6, line: 184, type: !7248, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7251)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{!654, !3487, !7, !7250}
!7250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!7251 = !{!7252, !7253, !7254}
!7252 = !DILocalVariable(name: "vec_", arg: 1, scope: !7247, file: !6, line: 184, type: !3487)
!7253 = !DILocalVariable(name: "ix_", arg: 2, scope: !7247, file: !6, line: 184, type: !7)
!7254 = !DILocalVariable(name: "ptr", arg: 3, scope: !7247, file: !6, line: 184, type: !7250)
!7255 = !DILocation(line: 0, scope: !7247)
!7256 = !DILocation(line: 184, column: 1, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7247, file: !6, line: 184, column: 1)
!7258 = !DILocation(line: 184, column: 1, scope: !7247)
!7259 = !DILocation(line: 184, column: 1, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7257, file: !6, line: 184, column: 1)
!7261 = !DILocation(line: 184, column: 1, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7257, file: !6, line: 184, column: 1)
!7263 = !DILocation(line: 0, scope: !7257)
!7264 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_iterate", scope: !6, file: !6, line: 188, type: !7265, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7268)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{!654, !3477, !7, !7267}
!7267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!7268 = !{!7269, !7270, !7271}
!7269 = !DILocalVariable(name: "vec_", arg: 1, scope: !7264, file: !6, line: 188, type: !3477)
!7270 = !DILocalVariable(name: "ix_", arg: 2, scope: !7264, file: !6, line: 188, type: !7)
!7271 = !DILocalVariable(name: "ptr", arg: 3, scope: !7264, file: !6, line: 188, type: !7267)
!7272 = !DILocation(line: 0, scope: !7264)
!7273 = !DILocation(line: 188, column: 1, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7264, file: !6, line: 188, column: 1)
!7275 = !DILocation(line: 188, column: 1, scope: !7264)
!7276 = !DILocation(line: 188, column: 1, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7274, file: !6, line: 188, column: 1)
!7278 = !DILocation(line: 188, column: 1, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7274, file: !6, line: 188, column: 1)
!7280 = !DILocation(line: 0, scope: !7274)
!7281 = distinct !DISubprogram(name: "unsplit_eh", scope: !3, file: !3, line: 3380, type: !7282, scopeLine: 3381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7284)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!653, !1180}
!7284 = !{!7285, !7286, !7287, !7288, !7289, !7290, !7294, !7295, !7296, !7302, !7303, !7304, !7305, !7306}
!7285 = !DILocalVariable(name: "lp", arg: 1, scope: !7281, file: !3, line: 3380, type: !1180)
!7286 = !DILocalVariable(name: "bb", scope: !7281, file: !3, line: 3382, type: !1270)
!7287 = !DILocalVariable(name: "gsi", scope: !7281, file: !3, line: 3383, type: !3873)
!7288 = !DILocalVariable(name: "e_in", scope: !7281, file: !3, line: 3384, type: !706)
!7289 = !DILocalVariable(name: "e_out", scope: !7281, file: !3, line: 3384, type: !706)
!7290 = !DILocalVariable(name: "stmt", scope: !7291, file: !3, line: 3407, type: !665)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 3406, column: 5)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 3405, column: 3)
!7293 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3405, column: 3)
!7294 = !DILocalVariable(name: "lab", scope: !7291, file: !3, line: 3408, type: !847)
!7295 = !DILocalVariable(name: "lp_nr", scope: !7291, file: !3, line: 3409, type: !654)
!7296 = !DILocalVariable(name: "use_stmt", scope: !7297, file: !3, line: 3432, type: !665)
!7297 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 3431, column: 2)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3430, column: 7)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 3430, column: 7)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 3429, column: 5)
!7301 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3428, column: 7)
!7302 = !DILocalVariable(name: "phi", scope: !7297, file: !3, line: 3432, type: !665)
!7303 = !DILocalVariable(name: "lhs", scope: !7297, file: !3, line: 3433, type: !847)
!7304 = !DILocalVariable(name: "rhs", scope: !7297, file: !3, line: 3434, type: !847)
!7305 = !DILocalVariable(name: "use_p", scope: !7297, file: !3, line: 3435, type: !2142)
!7306 = !DILocalVariable(name: "iter", scope: !7297, file: !3, line: 3436, type: !7307)
!7307 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1049, line: 249, baseType: !7308)
!7308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1049, line: 238, size: 448, elements: !7309)
!7309 = !{!7310, !7311, !7312, !7313}
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !7308, file: !1049, line: 241, baseType: !2143, size: 64)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !7308, file: !1049, line: 243, baseType: !2143, size: 64, offset: 64)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !7308, file: !1049, line: 245, baseType: !2144, size: 256, offset: 128)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !7308, file: !1049, line: 248, baseType: !2143, size: 64, offset: 384)
!7314 = !DILocation(line: 0, scope: !7281)
!7315 = !DILocation(line: 3382, column: 20, scope: !7281)
!7316 = !DILocation(line: 3383, column: 3, scope: !7281)
!7317 = !DILocation(line: 3387, column: 7, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3387, column: 7)
!7319 = !DILocation(line: 3387, column: 30, scope: !7318)
!7320 = !DILocation(line: 3387, column: 35, scope: !7318)
!7321 = !DILocation(line: 3387, column: 38, scope: !7318)
!7322 = !DILocation(line: 3387, column: 61, scope: !7318)
!7323 = !DILocation(line: 3387, column: 7, scope: !7281)
!7324 = !DILocation(line: 3389, column: 10, scope: !7281)
!7325 = !DILocation(line: 3390, column: 11, scope: !7281)
!7326 = !DILocation(line: 3393, column: 14, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3393, column: 7)
!7328 = !DILocation(line: 3393, column: 20, scope: !7327)
!7329 = !DILocation(line: 3393, column: 31, scope: !7327)
!7330 = !DILocation(line: 3393, column: 36, scope: !7327)
!7331 = !DILocation(line: 3393, column: 47, scope: !7327)
!7332 = !DILocation(line: 3393, column: 53, scope: !7327)
!7333 = !DILocation(line: 3393, column: 64, scope: !7327)
!7334 = !DILocation(line: 3393, column: 7, scope: !7281)
!7335 = !DILocation(line: 3397, column: 9, scope: !7281)
!7336 = !DILocation(line: 3398, column: 8, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3398, column: 7)
!7338 = !DILocation(line: 3398, column: 24, scope: !7337)
!7339 = !DILocation(line: 3398, column: 44, scope: !7337)
!7340 = !DILocation(line: 3398, column: 27, scope: !7337)
!7341 = !DILocation(line: 3398, column: 7, scope: !7281)
!7342 = !DILocation(line: 3399, column: 5, scope: !7337)
!7343 = !DILocation(line: 3400, column: 8, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3400, column: 7)
!7345 = !DILocation(line: 3400, column: 7, scope: !7281)
!7346 = !DILocation(line: 3405, column: 14, scope: !7293)
!7347 = !DILocation(line: 3405, column: 35, scope: !7293)
!7348 = !DILocation(line: 0, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 3415, column: 11)
!7350 = !DILocation(line: 3405, column: 8, scope: !7293)
!7351 = !DILocation(line: 3405, column: 43, scope: !7292)
!7352 = !DILocation(line: 3405, column: 42, scope: !7292)
!7353 = !DILocation(line: 3405, column: 3, scope: !7293)
!7354 = !DILocation(line: 3407, column: 21, scope: !7291)
!7355 = !DILocation(line: 0, scope: !7291)
!7356 = !DILocation(line: 3411, column: 11, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 3411, column: 11)
!7358 = !DILocation(line: 3411, column: 30, scope: !7357)
!7359 = !DILocation(line: 3411, column: 11, scope: !7291)
!7360 = !DILocation(line: 3413, column: 13, scope: !7291)
!7361 = !DILocation(line: 3414, column: 15, scope: !7291)
!7362 = !DILocation(line: 3415, column: 11, scope: !7349)
!7363 = !DILocation(line: 3415, column: 17, scope: !7349)
!7364 = !DILocation(line: 3415, column: 20, scope: !7349)
!7365 = !DILocation(line: 3415, column: 64, scope: !7349)
!7366 = !DILocation(line: 3415, column: 57, scope: !7349)
!7367 = !DILocation(line: 3415, column: 11, scope: !7291)
!7368 = !DILocation(line: 3417, column: 5, scope: !7292)
!7369 = !DILocation(line: 3405, column: 60, scope: !7292)
!7370 = !DILocation(line: 3405, column: 3, scope: !7292)
!7371 = distinct !{!7371, !7353, !7372}
!7372 = !DILocation(line: 3417, column: 5, scope: !7293)
!7373 = !DILocation(line: 3422, column: 24, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3422, column: 7)
!7375 = !DILocation(line: 3422, column: 36, scope: !7374)
!7376 = !DILocation(line: 3422, column: 7, scope: !7374)
!7377 = !DILocation(line: 3422, column: 7, scope: !7281)
!7378 = !DILocation(line: 3428, column: 28, scope: !7301)
!7379 = !DILocation(line: 3428, column: 8, scope: !7301)
!7380 = !DILocation(line: 3428, column: 7, scope: !7281)
!7381 = !DILocation(line: 3430, column: 18, scope: !7299)
!7382 = !DILocation(line: 0, scope: !7297)
!7383 = !DILocation(line: 3430, column: 12, scope: !7299)
!7384 = !DILocation(line: 3430, column: 40, scope: !7298)
!7385 = !DILocation(line: 3430, column: 39, scope: !7298)
!7386 = !DILocation(line: 3430, column: 7, scope: !7299)
!7387 = !DILocation(line: 3432, column: 27, scope: !7297)
!7388 = !DILocation(line: 3433, column: 15, scope: !7297)
!7389 = !DILocation(line: 3434, column: 15, scope: !7297)
!7390 = !DILocation(line: 3436, column: 4, scope: !7297)
!7391 = !DILocation(line: 3438, column: 4, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 3438, column: 4)
!7393 = !DILocation(line: 3438, column: 4, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 3438, column: 4)
!7395 = !DILocation(line: 3440, column: 8, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 3440, column: 8)
!7397 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 3439, column: 6)
!7398 = !DILocation(line: 0, scope: !7396)
!7399 = !DILocation(line: 3440, column: 8, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 3440, column: 8)
!7401 = !DILocation(line: 3441, column: 3, scope: !7400)
!7402 = distinct !{!7402, !7395, !7403}
!7403 = !DILocation(line: 3441, column: 3, scope: !7396)
!7404 = distinct !{!7404, !7391, !7405}
!7405 = !DILocation(line: 3442, column: 6, scope: !7392)
!7406 = !DILocation(line: 3444, column: 8, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 3444, column: 8)
!7408 = !DILocation(line: 3444, column: 8, scope: !7297)
!7409 = !DILocation(line: 3445, column: 6, scope: !7407)
!7410 = !DILocation(line: 3445, column: 44, scope: !7407)
!7411 = !DILocation(line: 3447, column: 4, scope: !7297)
!7412 = !DILocation(line: 3448, column: 2, scope: !7298)
!7413 = !DILocation(line: 3430, column: 7, scope: !7298)
!7414 = distinct !{!7414, !7386, !7415}
!7415 = !DILocation(line: 3448, column: 2, scope: !7299)
!7416 = !DILocation(line: 3451, column: 7, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3451, column: 7)
!7418 = !DILocation(line: 3451, column: 17, scope: !7417)
!7419 = !DILocation(line: 3451, column: 21, scope: !7417)
!7420 = !DILocation(line: 3451, column: 32, scope: !7417)
!7421 = !DILocation(line: 3451, column: 7, scope: !7281)
!7422 = !DILocation(line: 3453, column: 11, scope: !7417)
!7423 = !DILocation(line: 3453, column: 25, scope: !7417)
!7424 = !DILocation(line: 3453, column: 31, scope: !7417)
!7425 = !DILocation(line: 3452, column: 5, scope: !7417)
!7426 = !DILocation(line: 3459, column: 36, scope: !7281)
!7427 = !DILocation(line: 3459, column: 3, scope: !7281)
!7428 = !DILocation(line: 3460, column: 36, scope: !7281)
!7429 = !DILocation(line: 3460, column: 3, scope: !7281)
!7430 = !DILocation(line: 3461, column: 24, scope: !7281)
!7431 = !DILocation(line: 3461, column: 16, scope: !7281)
!7432 = !DILocation(line: 3462, column: 30, scope: !7281)
!7433 = !DILocation(line: 3462, column: 10, scope: !7281)
!7434 = !DILocation(line: 3462, column: 22, scope: !7281)
!7435 = !DILocation(line: 3463, column: 24, scope: !7281)
!7436 = !DILocation(line: 3463, column: 10, scope: !7281)
!7437 = !DILocation(line: 3463, column: 16, scope: !7281)
!7438 = !DILocation(line: 3464, column: 3, scope: !7281)
!7439 = !DILocation(line: 3466, column: 3, scope: !7281)
!7440 = !DILocation(line: 3467, column: 1, scope: !7281)
!7441 = distinct !DISubprogram(name: "gsi_after_labels", scope: !568, file: !568, line: 4510, type: !6681, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7442)
!7442 = !{!7443, !7444}
!7443 = !DILocalVariable(name: "bb", arg: 1, scope: !7441, file: !568, line: 4510, type: !1270)
!7444 = !DILocalVariable(name: "gsi", scope: !7441, file: !568, line: 4512, type: !3873)
!7445 = !DILocation(line: 0, scope: !7441)
!7446 = !DILocation(line: 4512, column: 24, scope: !7441)
!7447 = !DILocation(line: 4512, column: 30, scope: !7441)
!7448 = !DILocation(line: 4514, column: 3, scope: !7441)
!7449 = !DILocation(line: 4514, column: 11, scope: !7441)
!7450 = !DILocation(line: 4514, column: 27, scope: !7441)
!7451 = !DILocation(line: 4514, column: 43, scope: !7441)
!7452 = !DILocation(line: 4514, column: 30, scope: !7441)
!7453 = !DILocation(line: 4514, column: 59, scope: !7441)
!7454 = !DILocation(line: 4515, column: 5, scope: !7441)
!7455 = distinct !{!7455, !7448, !7456}
!7456 = !DILocation(line: 4515, column: 19, scope: !7441)
!7457 = !DILocation(line: 4517, column: 3, scope: !7441)
!7458 = distinct !DISubprogram(name: "is_gimple_debug", scope: !568, file: !568, line: 3249, type: !3300, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7459)
!7459 = !{!7460}
!7460 = !DILocalVariable(name: "gs", arg: 1, scope: !7458, file: !568, line: 3249, type: !2851)
!7461 = !DILocation(line: 0, scope: !7458)
!7462 = !DILocation(line: 3251, column: 10, scope: !7458)
!7463 = !DILocation(line: 3251, column: 27, scope: !7458)
!7464 = !DILocation(line: 3251, column: 3, scope: !7458)
!7465 = distinct !DISubprogram(name: "gsi_next_nondebug", scope: !568, file: !568, line: 4523, type: !4000, scopeLine: 4524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7466)
!7466 = !{!7467}
!7467 = !DILocalVariable(name: "i", arg: 1, scope: !7465, file: !568, line: 4523, type: !4002)
!7468 = !DILocation(line: 0, scope: !7465)
!7469 = !DILocation(line: 4525, column: 3, scope: !7465)
!7470 = !DILocation(line: 4527, column: 7, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7465, file: !568, line: 4526, column: 5)
!7472 = !DILocation(line: 4529, column: 11, scope: !7465)
!7473 = !DILocation(line: 4529, column: 26, scope: !7465)
!7474 = !DILocation(line: 4529, column: 46, scope: !7465)
!7475 = !DILocation(line: 4529, column: 29, scope: !7465)
!7476 = !DILocation(line: 4528, column: 5, scope: !7471)
!7477 = distinct !{!7477, !7469, !7478}
!7478 = !DILocation(line: 4529, column: 60, scope: !7465)
!7479 = !DILocation(line: 4530, column: 1, scope: !7465)
!7480 = distinct !DISubprogram(name: "gimple_seq_empty_p", scope: !568, file: !568, line: 215, type: !7481, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7483)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{!653, !4013}
!7483 = !{!7484}
!7484 = !DILocalVariable(name: "s", arg: 1, scope: !7480, file: !568, line: 215, type: !4013)
!7485 = !DILocation(line: 0, scope: !7480)
!7486 = !DILocation(line: 217, column: 12, scope: !7480)
!7487 = !DILocation(line: 217, column: 20, scope: !7480)
!7488 = !DILocation(line: 217, column: 26, scope: !7480)
!7489 = !DILocation(line: 217, column: 32, scope: !7480)
!7490 = !DILocation(line: 217, column: 3, scope: !7480)
!7491 = distinct !DISubprogram(name: "phi_nodes", scope: !6744, file: !6744, line: 508, type: !6770, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7492)
!7492 = !{!7493}
!7493 = !DILocalVariable(name: "bb", arg: 1, scope: !7491, file: !6744, line: 508, type: !6734)
!7494 = !DILocation(line: 0, scope: !7491)
!7495 = !DILocation(line: 510, column: 3, scope: !7491)
!7496 = !DILocation(line: 511, column: 15, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7491, file: !6744, line: 511, column: 7)
!7498 = !DILocation(line: 511, column: 8, scope: !7497)
!7499 = !DILocation(line: 511, column: 7, scope: !7491)
!7500 = !DILocation(line: 513, column: 25, scope: !7491)
!7501 = !DILocation(line: 513, column: 3, scope: !7491)
!7502 = !DILocation(line: 514, column: 1, scope: !7491)
!7503 = distinct !DISubprogram(name: "gimple_phi_result", scope: !568, file: !568, line: 3071, type: !4023, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7504)
!7504 = !{!7505}
!7505 = !DILocalVariable(name: "gs", arg: 1, scope: !7503, file: !568, line: 3071, type: !2851)
!7506 = !DILocation(line: 0, scope: !7503)
!7507 = !DILocation(line: 3074, column: 25, scope: !7503)
!7508 = !DILocation(line: 3074, column: 3, scope: !7503)
!7509 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !6744, file: !6744, line: 450, type: !7510, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7512)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{!847, !665, !1208}
!7512 = !{!7513, !7514, !7515}
!7513 = !DILocalVariable(name: "gs", arg: 1, scope: !7509, file: !6744, line: 450, type: !665)
!7514 = !DILocalVariable(name: "index", arg: 2, scope: !7509, file: !6744, line: 450, type: !1208)
!7515 = !DILocalVariable(name: "pd", scope: !7509, file: !6744, line: 452, type: !7516)
!7516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!7517 = !DILocation(line: 0, scope: !7509)
!7518 = !DILocation(line: 452, column: 46, scope: !7509)
!7519 = !DILocation(line: 452, column: 26, scope: !7509)
!7520 = !DILocation(line: 453, column: 33, scope: !7509)
!7521 = !DILocation(line: 453, column: 10, scope: !7509)
!7522 = !DILocation(line: 453, column: 3, scope: !7509)
!7523 = distinct !DISubprogram(name: "first_imm_use_stmt", scope: !6744, file: !6744, line: 1058, type: !7524, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7527)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{!665, !7526, !847}
!7526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7307, size: 64)
!7527 = !{!7528, !7529}
!7528 = !DILocalVariable(name: "imm", arg: 1, scope: !7523, file: !6744, line: 1058, type: !7526)
!7529 = !DILocalVariable(name: "var", arg: 2, scope: !7523, file: !6744, line: 1058, type: !847)
!7530 = !DILocation(line: 0, scope: !7523)
!7531 = !DILocation(line: 1060, column: 18, scope: !7523)
!7532 = !DILocation(line: 1060, column: 8, scope: !7523)
!7533 = !DILocation(line: 1060, column: 14, scope: !7523)
!7534 = !DILocation(line: 1061, column: 30, scope: !7523)
!7535 = !DILocation(line: 1061, column: 16, scope: !7523)
!7536 = !DILocation(line: 1062, column: 8, scope: !7523)
!7537 = !DILocation(line: 1062, column: 22, scope: !7523)
!7538 = !DILocation(line: 1067, column: 18, scope: !7523)
!7539 = !DILocation(line: 1067, column: 23, scope: !7523)
!7540 = !DILocation(line: 1068, column: 18, scope: !7523)
!7541 = !DILocation(line: 1068, column: 23, scope: !7523)
!7542 = !DILocation(line: 1069, column: 22, scope: !7523)
!7543 = !DILocation(line: 1069, column: 27, scope: !7523)
!7544 = !DILocation(line: 1070, column: 18, scope: !7523)
!7545 = !DILocation(line: 1070, column: 22, scope: !7523)
!7546 = !DILocation(line: 1072, column: 7, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7523, file: !6744, line: 1072, column: 7)
!7548 = !DILocation(line: 1072, column: 7, scope: !7523)
!7549 = !DILocation(line: 1075, column: 30, scope: !7523)
!7550 = !DILocation(line: 1075, column: 3, scope: !7523)
!7551 = !DILocation(line: 1077, column: 10, scope: !7523)
!7552 = !DILocation(line: 1077, column: 3, scope: !7523)
!7553 = !DILocation(line: 1078, column: 1, scope: !7523)
!7554 = distinct !DISubprogram(name: "end_imm_use_stmt_p", scope: !6744, file: !6744, line: 969, type: !7555, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7559)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!653, !7557}
!7557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7558, size: 64)
!7558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7307)
!7559 = !{!7560}
!7560 = !DILocalVariable(name: "imm", arg: 1, scope: !7554, file: !6744, line: 969, type: !7557)
!7561 = !DILocation(line: 0, scope: !7554)
!7562 = !DILocation(line: 971, column: 16, scope: !7554)
!7563 = !DILocation(line: 971, column: 32, scope: !7554)
!7564 = !DILocation(line: 971, column: 24, scope: !7554)
!7565 = !DILocation(line: 971, column: 10, scope: !7554)
!7566 = !DILocation(line: 971, column: 3, scope: !7554)
!7567 = distinct !DISubprogram(name: "first_imm_use_on_stmt", scope: !6744, file: !6744, line: 1101, type: !7568, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7570)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!2142, !7526}
!7570 = !{!7571}
!7571 = !DILocalVariable(name: "imm", arg: 1, scope: !7567, file: !6744, line: 1101, type: !7526)
!7572 = !DILocation(line: 0, scope: !7567)
!7573 = !DILocation(line: 1103, column: 29, scope: !7567)
!7574 = !DILocation(line: 1103, column: 38, scope: !7567)
!7575 = !DILocation(line: 1103, column: 8, scope: !7567)
!7576 = !DILocation(line: 1103, column: 22, scope: !7567)
!7577 = !DILocation(line: 1104, column: 3, scope: !7567)
!7578 = distinct !DISubprogram(name: "end_imm_use_on_stmt_p", scope: !6744, file: !6744, line: 1110, type: !7555, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7579)
!7579 = !{!7580}
!7580 = !DILocalVariable(name: "imm", arg: 1, scope: !7578, file: !6744, line: 1110, type: !7557)
!7581 = !DILocation(line: 0, scope: !7578)
!7582 = !DILocation(line: 1112, column: 16, scope: !7578)
!7583 = !DILocation(line: 1112, column: 34, scope: !7578)
!7584 = !DILocation(line: 1112, column: 24, scope: !7578)
!7585 = !DILocation(line: 1112, column: 10, scope: !7578)
!7586 = !DILocation(line: 1112, column: 3, scope: !7578)
!7587 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !6744, file: !6744, line: 233, type: !7588, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7590)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{null, !2142, !847}
!7590 = !{!7591, !7592}
!7591 = !DILocalVariable(name: "use", arg: 1, scope: !7587, file: !6744, line: 233, type: !2142)
!7592 = !DILocalVariable(name: "val", arg: 2, scope: !7587, file: !6744, line: 233, type: !847)
!7593 = !DILocation(line: 0, scope: !7587)
!7594 = !DILocation(line: 235, column: 3, scope: !7587)
!7595 = !DILocation(line: 236, column: 10, scope: !7587)
!7596 = !DILocation(line: 236, column: 15, scope: !7587)
!7597 = !DILocation(line: 237, column: 3, scope: !7587)
!7598 = !DILocation(line: 238, column: 1, scope: !7587)
!7599 = distinct !DISubprogram(name: "next_imm_use_on_stmt", scope: !6744, file: !6744, line: 1118, type: !7568, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7600)
!7600 = !{!7601}
!7601 = !DILocalVariable(name: "imm", arg: 1, scope: !7599, file: !6744, line: 1118, type: !7526)
!7602 = !DILocation(line: 0, scope: !7599)
!7603 = !DILocation(line: 1120, column: 23, scope: !7599)
!7604 = !DILocation(line: 1120, column: 16, scope: !7599)
!7605 = !DILocation(line: 1121, column: 7, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7599, file: !6744, line: 1121, column: 7)
!7607 = !DILocation(line: 1121, column: 7, scope: !7599)
!7608 = !DILocation(line: 1125, column: 33, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7606, file: !6744, line: 1124, column: 5)
!7610 = !DILocation(line: 1125, column: 42, scope: !7609)
!7611 = !DILocation(line: 1125, column: 26, scope: !7609)
!7612 = !DILocation(line: 1126, column: 7, scope: !7609)
!7613 = !DILocation(line: 0, scope: !7606)
!7614 = !DILocation(line: 1128, column: 1, scope: !7599)
!7615 = distinct !DISubprogram(name: "next_imm_use_stmt", scope: !6744, file: !6744, line: 1083, type: !7616, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7618)
!7616 = !DISubroutineType(types: !7617)
!7617 = !{!665, !7526}
!7618 = !{!7619}
!7619 = !DILocalVariable(name: "imm", arg: 1, scope: !7615, file: !6744, line: 1083, type: !7526)
!7620 = !DILocation(line: 0, scope: !7615)
!7621 = !DILocation(line: 1085, column: 33, scope: !7615)
!7622 = !DILocation(line: 1085, column: 16, scope: !7615)
!7623 = !DILocation(line: 1086, column: 7, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7615, file: !6744, line: 1086, column: 7)
!7625 = !DILocation(line: 1086, column: 7, scope: !7615)
!7626 = !DILocation(line: 1088, column: 26, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !6744, line: 1088, column: 11)
!7628 = distinct !DILexicalBlock(scope: !7624, file: !6744, line: 1087, column: 5)
!7629 = !DILocation(line: 1088, column: 31, scope: !7627)
!7630 = !DILocation(line: 1088, column: 11, scope: !7628)
!7631 = !DILocation(line: 1089, column: 24, scope: !7627)
!7632 = !DILocation(line: 1089, column: 2, scope: !7627)
!7633 = !DILocation(line: 1093, column: 30, scope: !7615)
!7634 = !DILocation(line: 1093, column: 3, scope: !7615)
!7635 = !DILocation(line: 1094, column: 10, scope: !7615)
!7636 = !DILocation(line: 1094, column: 3, scope: !7615)
!7637 = !DILocation(line: 1095, column: 1, scope: !7615)
!7638 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !568, file: !568, line: 3100, type: !7639, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7641)
!7639 = !DISubroutineType(types: !7640)
!7640 = !{!7516, !665, !7}
!7641 = !{!7642, !7643}
!7642 = !DILocalVariable(name: "gs", arg: 1, scope: !7638, file: !568, line: 3100, type: !665)
!7643 = !DILocalVariable(name: "index", arg: 2, scope: !7638, file: !568, line: 3100, type: !7)
!7644 = !DILocation(line: 0, scope: !7638)
!7645 = !DILocation(line: 3103, column: 3, scope: !7638)
!7646 = !DILocation(line: 3104, column: 12, scope: !7638)
!7647 = !DILocation(line: 3104, column: 3, scope: !7638)
!7648 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !6744, file: !6744, line: 427, type: !7649, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7651)
!7649 = !DISubroutineType(types: !7650)
!7650 = !{!847, !2142}
!7651 = !{!7652}
!7652 = !DILocalVariable(name: "use", arg: 1, scope: !7648, file: !6744, line: 427, type: !2142)
!7653 = !DILocation(line: 0, scope: !7648)
!7654 = !DILocation(line: 429, column: 17, scope: !7648)
!7655 = !DILocation(line: 429, column: 10, scope: !7648)
!7656 = !DILocation(line: 429, column: 3, scope: !7648)
!7657 = distinct !DISubprogram(name: "link_use_stmts_after", scope: !6744, file: !6744, line: 1018, type: !7658, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7660)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{null, !2142, !7526}
!7660 = !{!7661, !7662, !7663, !7664, !7665, !7666, !7667, !7680}
!7661 = !DILocalVariable(name: "head", arg: 1, scope: !7657, file: !6744, line: 1018, type: !2142)
!7662 = !DILocalVariable(name: "imm", arg: 2, scope: !7657, file: !6744, line: 1018, type: !7526)
!7663 = !DILocalVariable(name: "use_p", scope: !7657, file: !6744, line: 1020, type: !2142)
!7664 = !DILocalVariable(name: "last_p", scope: !7657, file: !6744, line: 1021, type: !2142)
!7665 = !DILocalVariable(name: "head_stmt", scope: !7657, file: !6744, line: 1022, type: !665)
!7666 = !DILocalVariable(name: "use", scope: !7657, file: !6744, line: 1023, type: !847)
!7667 = !DILocalVariable(name: "op_iter", scope: !7657, file: !6744, line: 1024, type: !7668)
!7668 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !645, line: 140, baseType: !7669)
!7669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !645, line: 131, size: 320, elements: !7670)
!7670 = !{!7671, !7672, !7673, !7675, !7677, !7678, !7679}
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7669, file: !645, line: 133, baseType: !653, size: 8)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !7669, file: !645, line: 134, baseType: !644, size: 32, offset: 32)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !7669, file: !645, line: 135, baseType: !7674, size: 64, offset: 64)
!7674 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !645, line: 42, baseType: !1350)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !7669, file: !645, line: 136, baseType: !7676, size: 64, offset: 128)
!7676 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !645, line: 50, baseType: !1357)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !7669, file: !645, line: 137, baseType: !654, size: 32, offset: 192)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !7669, file: !645, line: 138, baseType: !654, size: 32, offset: 224)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !7669, file: !645, line: 139, baseType: !665, size: 64, offset: 256)
!7680 = !DILocalVariable(name: "flag", scope: !7657, file: !6744, line: 1025, type: !654)
!7681 = !DILocation(line: 0, scope: !7657)
!7682 = !DILocation(line: 1022, column: 22, scope: !7657)
!7683 = !DILocation(line: 1023, column: 14, scope: !7657)
!7684 = !DILocation(line: 1024, column: 3, scope: !7657)
!7685 = !DILocation(line: 1028, column: 11, scope: !7657)
!7686 = !DILocation(line: 1030, column: 7, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7657, file: !6744, line: 1030, column: 7)
!7688 = !DILocation(line: 1030, column: 31, scope: !7687)
!7689 = !DILocation(line: 1030, column: 7, scope: !7657)
!7690 = !DILocation(line: 1032, column: 7, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !6744, line: 1032, column: 7)
!7692 = distinct !DILexicalBlock(scope: !7687, file: !6744, line: 1031, column: 5)
!7693 = !DILocation(line: 0, scope: !7691)
!7694 = !DILocation(line: 1032, column: 7, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7691, file: !6744, line: 1032, column: 7)
!7696 = !DILocation(line: 1033, column: 6, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7695, file: !6744, line: 1033, column: 6)
!7698 = !DILocation(line: 1033, column: 27, scope: !7697)
!7699 = !DILocation(line: 1033, column: 6, scope: !7695)
!7700 = !DILocation(line: 1034, column: 13, scope: !7697)
!7701 = !DILocation(line: 1034, column: 4, scope: !7697)
!7702 = distinct !{!7702, !7690, !7703}
!7703 = !DILocation(line: 1034, column: 53, scope: !7691)
!7704 = !DILocation(line: 1038, column: 11, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7687, file: !6744, line: 1037, column: 5)
!7706 = !DILocation(line: 1040, column: 4, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !6744, line: 1040, column: 4)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !6744, line: 1039, column: 2)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !6744, line: 1038, column: 11)
!7710 = !DILocation(line: 0, scope: !7707)
!7711 = !DILocation(line: 1040, column: 4, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7707, file: !6744, line: 1040, column: 4)
!7713 = !DILocation(line: 1041, column: 10, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7712, file: !6744, line: 1041, column: 10)
!7715 = !DILocation(line: 1041, column: 31, scope: !7714)
!7716 = !DILocation(line: 1041, column: 10, scope: !7712)
!7717 = !DILocation(line: 1042, column: 17, scope: !7714)
!7718 = !DILocation(line: 1042, column: 8, scope: !7714)
!7719 = distinct !{!7719, !7706, !7720}
!7720 = !DILocation(line: 1042, column: 57, scope: !7707)
!7721 = !DILocation(line: 1044, column: 25, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7709, file: !6744, line: 1044, column: 16)
!7723 = !DILocation(line: 1044, column: 53, scope: !7722)
!7724 = !DILocation(line: 1044, column: 16, scope: !7709)
!7725 = !DILocation(line: 1046, column: 8, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !6744, line: 1046, column: 8)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !6744, line: 1045, column: 2)
!7728 = !DILocation(line: 1046, column: 29, scope: !7726)
!7729 = !DILocation(line: 1046, column: 8, scope: !7727)
!7730 = !DILocation(line: 1047, column: 15, scope: !7726)
!7731 = !DILocation(line: 1047, column: 6, scope: !7726)
!7732 = !DILocation(line: 1051, column: 22, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7657, file: !6744, line: 1051, column: 7)
!7734 = !DILocation(line: 1021, column: 17, scope: !7657)
!7735 = !DILocation(line: 1051, column: 27, scope: !7733)
!7736 = !DILocation(line: 1051, column: 7, scope: !7657)
!7737 = !DILocation(line: 1052, column: 27, scope: !7733)
!7738 = !DILocation(line: 1052, column: 5, scope: !7733)
!7739 = !DILocation(line: 1053, column: 32, scope: !7657)
!7740 = !DILocation(line: 1053, column: 3, scope: !7657)
!7741 = !DILocation(line: 1054, column: 1, scope: !7657)
!7742 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !6744, file: !6744, line: 910, type: !7743, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7746)
!7743 = !DISubroutineType(types: !7744)
!7744 = !{!2142, !7745, !665, !654}
!7745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7668, size: 64)
!7746 = !{!7747, !7748, !7749, !7750, !7751}
!7747 = !DILocalVariable(name: "ptr", arg: 1, scope: !7742, file: !6744, line: 910, type: !7745)
!7748 = !DILocalVariable(name: "phi", arg: 2, scope: !7742, file: !6744, line: 910, type: !665)
!7749 = !DILocalVariable(name: "flags", arg: 3, scope: !7742, file: !6744, line: 910, type: !654)
!7750 = !DILocalVariable(name: "phi_def", scope: !7742, file: !6744, line: 912, type: !847)
!7751 = !DILocalVariable(name: "comp", scope: !7742, file: !6744, line: 913, type: !654)
!7752 = !DILocation(line: 0, scope: !7742)
!7753 = !DILocation(line: 912, column: 18, scope: !7742)
!7754 = !DILocation(line: 915, column: 3, scope: !7742)
!7755 = !DILocation(line: 916, column: 8, scope: !7742)
!7756 = !DILocation(line: 916, column: 13, scope: !7742)
!7757 = !DILocation(line: 918, column: 3, scope: !7742)
!7758 = !DILocation(line: 920, column: 11, scope: !7742)
!7759 = !DILocation(line: 923, column: 14, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7742, file: !6744, line: 923, column: 7)
!7761 = !DILocation(line: 923, column: 22, scope: !7760)
!7762 = !DILocation(line: 923, column: 7, scope: !7742)
!7763 = !DILocation(line: 925, column: 17, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !6744, line: 924, column: 5)
!7765 = !DILocation(line: 926, column: 7, scope: !7764)
!7766 = !DILocation(line: 929, column: 8, scope: !7742)
!7767 = !DILocation(line: 929, column: 17, scope: !7742)
!7768 = !DILocation(line: 930, column: 18, scope: !7742)
!7769 = !DILocation(line: 930, column: 8, scope: !7742)
!7770 = !DILocation(line: 930, column: 16, scope: !7742)
!7771 = !DILocation(line: 931, column: 8, scope: !7742)
!7772 = !DILocation(line: 931, column: 18, scope: !7742)
!7773 = !DILocation(line: 932, column: 10, scope: !7742)
!7774 = !DILocation(line: 932, column: 3, scope: !7742)
!7775 = !DILocation(line: 933, column: 1, scope: !7742)
!7776 = distinct !DISubprogram(name: "op_iter_done", scope: !6744, file: !6744, line: 652, type: !7777, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7781)
!7777 = !DISubroutineType(types: !7778)
!7778 = !{!653, !7779}
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7780, size: 64)
!7780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7668)
!7781 = !{!7782}
!7782 = !DILocalVariable(name: "ptr", arg: 1, scope: !7776, file: !6744, line: 652, type: !7779)
!7783 = !DILocation(line: 0, scope: !7776)
!7784 = !DILocation(line: 654, column: 15, scope: !7776)
!7785 = !DILocation(line: 654, column: 3, scope: !7776)
!7786 = distinct !DISubprogram(name: "move_use_after_head", scope: !6744, file: !6744, line: 990, type: !7787, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7789)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!2142, !2142, !2142, !2142}
!7789 = !{!7790, !7791, !7792}
!7790 = !DILocalVariable(name: "use_p", arg: 1, scope: !7786, file: !6744, line: 990, type: !2142)
!7791 = !DILocalVariable(name: "head", arg: 2, scope: !7786, file: !6744, line: 990, type: !2142)
!7792 = !DILocalVariable(name: "last_p", arg: 3, scope: !7786, file: !6744, line: 991, type: !2142)
!7793 = !DILocation(line: 0, scope: !7786)
!7794 = !DILocation(line: 997, column: 13, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7786, file: !6744, line: 997, column: 7)
!7796 = !DILocation(line: 997, column: 7, scope: !7786)
!7797 = !DILocation(line: 1000, column: 19, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !6744, line: 1000, column: 11)
!7799 = distinct !DILexicalBlock(scope: !7795, file: !6744, line: 998, column: 5)
!7800 = !DILocation(line: 1000, column: 24, scope: !7798)
!7801 = !DILocation(line: 1000, column: 11, scope: !7799)
!7802 = !DILocation(line: 1005, column: 4, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7798, file: !6744, line: 1003, column: 2)
!7804 = !DILocation(line: 1006, column: 4, scope: !7803)
!7805 = !DILocation(line: 1010, column: 3, scope: !7786)
!7806 = distinct !DISubprogram(name: "op_iter_next_use", scope: !6744, file: !6744, line: 659, type: !7807, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7809)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!2142, !7745}
!7809 = !{!7810, !7811}
!7810 = !DILocalVariable(name: "ptr", arg: 1, scope: !7806, file: !6744, line: 659, type: !7745)
!7811 = !DILocalVariable(name: "use_p", scope: !7806, file: !6744, line: 661, type: !2142)
!7812 = !DILocation(line: 0, scope: !7806)
!7813 = !DILocation(line: 665, column: 12, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7806, file: !6744, line: 665, column: 7)
!7815 = !DILocation(line: 665, column: 7, scope: !7814)
!7816 = !DILocation(line: 665, column: 7, scope: !7806)
!7817 = !DILocation(line: 667, column: 15, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7814, file: !6744, line: 666, column: 5)
!7819 = !DILocation(line: 668, column: 30, scope: !7818)
!7820 = !DILocation(line: 668, column: 17, scope: !7818)
!7821 = !DILocation(line: 669, column: 7, scope: !7818)
!7822 = !DILocation(line: 671, column: 12, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7806, file: !6744, line: 671, column: 7)
!7824 = !DILocation(line: 671, column: 25, scope: !7823)
!7825 = !DILocation(line: 671, column: 18, scope: !7823)
!7826 = !DILocation(line: 671, column: 7, scope: !7806)
!7827 = !DILocation(line: 673, column: 14, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7823, file: !6744, line: 672, column: 5)
!7829 = !DILocation(line: 673, column: 7, scope: !7828)
!7830 = !DILocation(line: 675, column: 8, scope: !7806)
!7831 = !DILocation(line: 675, column: 13, scope: !7806)
!7832 = !DILocation(line: 676, column: 3, scope: !7806)
!7833 = !DILocation(line: 677, column: 1, scope: !7806)
!7834 = distinct !DISubprogram(name: "op_iter_init_use", scope: !6744, file: !6744, line: 768, type: !7743, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7835)
!7835 = !{!7836, !7837, !7838}
!7836 = !DILocalVariable(name: "ptr", arg: 1, scope: !7834, file: !6744, line: 768, type: !7745)
!7837 = !DILocalVariable(name: "stmt", arg: 2, scope: !7834, file: !6744, line: 768, type: !665)
!7838 = !DILocalVariable(name: "flags", arg: 3, scope: !7834, file: !6744, line: 768, type: !654)
!7839 = !DILocation(line: 0, scope: !7834)
!7840 = !DILocation(line: 770, column: 3, scope: !7834)
!7841 = !DILocation(line: 772, column: 3, scope: !7834)
!7842 = !DILocation(line: 773, column: 8, scope: !7834)
!7843 = !DILocation(line: 773, column: 18, scope: !7834)
!7844 = !DILocation(line: 774, column: 10, scope: !7834)
!7845 = !DILocation(line: 774, column: 3, scope: !7834)
!7846 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !568, file: !568, line: 1334, type: !7847, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7849)
!7847 = !DISubroutineType(types: !7848)
!7848 = !{!2142, !2851}
!7849 = !{!7850, !7851}
!7850 = !DILocalVariable(name: "g", arg: 1, scope: !7846, file: !568, line: 1334, type: !2851)
!7851 = !DILocalVariable(name: "ops", scope: !7846, file: !568, line: 1336, type: !1357)
!7852 = !DILocation(line: 0, scope: !7846)
!7853 = !DILocation(line: 1337, column: 8, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7846, file: !568, line: 1337, column: 7)
!7855 = !DILocation(line: 1337, column: 7, scope: !7846)
!7856 = !DILocation(line: 1339, column: 25, scope: !7846)
!7857 = !DILocation(line: 1340, column: 7, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7846, file: !568, line: 1340, column: 7)
!7859 = !DILocation(line: 1341, column: 7, scope: !7858)
!7860 = !DILocation(line: 1341, column: 28, scope: !7858)
!7861 = !DILocation(line: 1341, column: 49, scope: !7858)
!7862 = !DILocation(line: 1341, column: 32, scope: !7858)
!7863 = !DILocation(line: 1342, column: 12, scope: !7858)
!7864 = !DILocation(line: 1340, column: 7, scope: !7846)
!7865 = !DILocation(line: 1344, column: 1, scope: !7846)
!7866 = distinct !DISubprogram(name: "delink_imm_use", scope: !6744, file: !6744, line: 188, type: !7867, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7869)
!7867 = !DISubroutineType(types: !7868)
!7868 = !{null, !2143}
!7869 = !{!7870}
!7870 = !DILocalVariable(name: "linknode", arg: 1, scope: !7866, file: !6744, line: 188, type: !2143)
!7871 = !DILocation(line: 0, scope: !7866)
!7872 = !DILocation(line: 191, column: 17, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7866, file: !6744, line: 191, column: 7)
!7874 = !DILocation(line: 191, column: 22, scope: !7873)
!7875 = !DILocation(line: 191, column: 7, scope: !7866)
!7876 = !DILocation(line: 194, column: 36, scope: !7866)
!7877 = !DILocation(line: 194, column: 19, scope: !7866)
!7878 = !DILocation(line: 194, column: 24, scope: !7866)
!7879 = !DILocation(line: 195, column: 36, scope: !7866)
!7880 = !DILocation(line: 195, column: 13, scope: !7866)
!7881 = !DILocation(line: 195, column: 24, scope: !7866)
!7882 = !DILocation(line: 196, column: 18, scope: !7866)
!7883 = !DILocation(line: 197, column: 18, scope: !7866)
!7884 = !DILocation(line: 198, column: 1, scope: !7866)
!7885 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !6744, file: !6744, line: 202, type: !7886, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7888)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{null, !2143, !2143}
!7888 = !{!7889, !7890}
!7889 = !DILocalVariable(name: "linknode", arg: 1, scope: !7885, file: !6744, line: 202, type: !2143)
!7890 = !DILocalVariable(name: "list", arg: 2, scope: !7885, file: !6744, line: 202, type: !2143)
!7891 = !DILocation(line: 0, scope: !7885)
!7892 = !DILocation(line: 206, column: 13, scope: !7885)
!7893 = !DILocation(line: 206, column: 18, scope: !7885)
!7894 = !DILocation(line: 207, column: 26, scope: !7885)
!7895 = !DILocation(line: 207, column: 13, scope: !7885)
!7896 = !DILocation(line: 207, column: 18, scope: !7885)
!7897 = !DILocation(line: 208, column: 9, scope: !7885)
!7898 = !DILocation(line: 208, column: 15, scope: !7885)
!7899 = !DILocation(line: 208, column: 20, scope: !7885)
!7900 = !DILocation(line: 209, column: 14, scope: !7885)
!7901 = !DILocation(line: 210, column: 1, scope: !7885)
!7902 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !6744, file: !6744, line: 729, type: !7903, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7905)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{null, !7745}
!7905 = !{!7906}
!7906 = !DILocalVariable(name: "ptr", arg: 1, scope: !7902, file: !6744, line: 729, type: !7745)
!7907 = !DILocation(line: 0, scope: !7902)
!7908 = !DILocation(line: 731, column: 8, scope: !7902)
!7909 = !DILocation(line: 731, column: 13, scope: !7902)
!7910 = !DILocation(line: 732, column: 8, scope: !7902)
!7911 = !DILocation(line: 732, column: 13, scope: !7902)
!7912 = !DILocation(line: 733, column: 8, scope: !7902)
!7913 = !DILocation(line: 733, column: 18, scope: !7902)
!7914 = !DILocation(line: 734, column: 8, scope: !7902)
!7915 = !DILocation(line: 734, column: 14, scope: !7902)
!7916 = !DILocation(line: 735, column: 8, scope: !7902)
!7917 = !DILocation(line: 735, column: 16, scope: !7902)
!7918 = !DILocation(line: 736, column: 8, scope: !7902)
!7919 = !DILocation(line: 736, column: 17, scope: !7902)
!7920 = !DILocation(line: 737, column: 8, scope: !7902)
!7921 = !DILocation(line: 737, column: 13, scope: !7902)
!7922 = !DILocation(line: 738, column: 1, scope: !7902)
!7923 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !568, file: !568, line: 3061, type: !4851, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7924)
!7924 = !{!7925}
!7925 = !DILocalVariable(name: "gs", arg: 1, scope: !7923, file: !568, line: 3061, type: !2851)
!7926 = !DILocation(line: 0, scope: !7923)
!7927 = !DILocation(line: 3064, column: 25, scope: !7923)
!7928 = !DILocation(line: 3064, column: 3, scope: !7923)
!7929 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !6744, file: !6744, line: 442, type: !7930, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!2142, !665, !654}
!7932 = !{!7933, !7934}
!7933 = !DILocalVariable(name: "gs", arg: 1, scope: !7929, file: !6744, line: 442, type: !665)
!7934 = !DILocalVariable(name: "i", arg: 2, scope: !7929, file: !6744, line: 442, type: !654)
!7935 = !DILocation(line: 0, scope: !7929)
!7936 = !DILocation(line: 444, column: 11, scope: !7929)
!7937 = !DILocation(line: 444, column: 35, scope: !7929)
!7938 = !DILocation(line: 444, column: 3, scope: !7929)
!7939 = distinct !DISubprogram(name: "op_iter_init", scope: !6744, file: !6744, line: 742, type: !7940, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{null, !7745, !665, !654}
!7942 = !{!7943, !7944, !7945}
!7943 = !DILocalVariable(name: "ptr", arg: 1, scope: !7939, file: !6744, line: 742, type: !7745)
!7944 = !DILocalVariable(name: "stmt", arg: 2, scope: !7939, file: !6744, line: 742, type: !665)
!7945 = !DILocalVariable(name: "flags", arg: 3, scope: !7939, file: !6744, line: 742, type: !654)
!7946 = !DILocation(line: 0, scope: !7939)
!7947 = !DILocation(line: 746, column: 3, scope: !7939)
!7948 = !DILocation(line: 748, column: 22, scope: !7939)
!7949 = !DILocation(line: 748, column: 15, scope: !7939)
!7950 = !DILocation(line: 748, column: 52, scope: !7939)
!7951 = !DILocation(line: 748, column: 8, scope: !7939)
!7952 = !DILocation(line: 748, column: 13, scope: !7939)
!7953 = !DILocation(line: 749, column: 15, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7939, file: !6744, line: 749, column: 7)
!7955 = !DILocation(line: 750, column: 7, scope: !7954)
!7956 = !DILocation(line: 750, column: 10, scope: !7954)
!7957 = !DILocation(line: 751, column: 7, scope: !7954)
!7958 = !DILocation(line: 751, column: 10, scope: !7954)
!7959 = !DILocation(line: 751, column: 29, scope: !7954)
!7960 = !DILocation(line: 749, column: 7, scope: !7939)
!7961 = !DILocation(line: 752, column: 22, scope: !7954)
!7962 = !DILocation(line: 752, column: 28, scope: !7954)
!7963 = !DILocation(line: 752, column: 15, scope: !7954)
!7964 = !DILocation(line: 752, column: 5, scope: !7954)
!7965 = !DILocation(line: 753, column: 22, scope: !7939)
!7966 = !DILocation(line: 753, column: 15, scope: !7939)
!7967 = !DILocation(line: 753, column: 52, scope: !7939)
!7968 = !DILocation(line: 753, column: 8, scope: !7939)
!7969 = !DILocation(line: 753, column: 13, scope: !7939)
!7970 = !DILocation(line: 754, column: 15, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7939, file: !6744, line: 754, column: 7)
!7972 = !DILocation(line: 755, column: 7, scope: !7971)
!7973 = !DILocation(line: 755, column: 10, scope: !7971)
!7974 = !DILocation(line: 756, column: 7, scope: !7971)
!7975 = !DILocation(line: 756, column: 10, scope: !7971)
!7976 = !DILocation(line: 756, column: 29, scope: !7971)
!7977 = !DILocation(line: 754, column: 7, scope: !7939)
!7978 = !DILocation(line: 757, column: 22, scope: !7971)
!7979 = !DILocation(line: 757, column: 28, scope: !7971)
!7980 = !DILocation(line: 757, column: 15, scope: !7971)
!7981 = !DILocation(line: 757, column: 5, scope: !7971)
!7982 = !DILocation(line: 758, column: 8, scope: !7939)
!7983 = !DILocation(line: 758, column: 13, scope: !7939)
!7984 = !DILocation(line: 760, column: 8, scope: !7939)
!7985 = !DILocation(line: 760, column: 14, scope: !7939)
!7986 = !DILocation(line: 761, column: 8, scope: !7939)
!7987 = !DILocation(line: 761, column: 16, scope: !7939)
!7988 = !DILocation(line: 762, column: 8, scope: !7939)
!7989 = !DILocation(line: 762, column: 17, scope: !7939)
!7990 = !DILocation(line: 763, column: 1, scope: !7939)
!7991 = distinct !DISubprogram(name: "gimple_def_ops", scope: !568, file: !568, line: 1292, type: !7992, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7994)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!1350, !2851}
!7994 = !{!7995}
!7995 = !DILocalVariable(name: "g", arg: 1, scope: !7991, file: !568, line: 1292, type: !2851)
!7996 = !DILocation(line: 0, scope: !7991)
!7997 = !DILocation(line: 1294, column: 8, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7991, file: !568, line: 1294, column: 7)
!7999 = !DILocation(line: 1294, column: 7, scope: !7991)
!8000 = !DILocation(line: 1296, column: 26, scope: !7991)
!8001 = !DILocation(line: 1296, column: 3, scope: !7991)
!8002 = !DILocation(line: 1297, column: 1, scope: !7991)
!8003 = distinct !DISubprogram(name: "gimple_vdef", scope: !568, file: !568, line: 1375, type: !4023, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8004)
!8004 = !{!8005}
!8005 = !DILocalVariable(name: "g", arg: 1, scope: !8003, file: !568, line: 1375, type: !2851)
!8006 = !DILocation(line: 0, scope: !8003)
!8007 = !DILocation(line: 1377, column: 8, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8003, file: !568, line: 1377, column: 7)
!8009 = !DILocation(line: 1377, column: 7, scope: !8003)
!8010 = !DILocation(line: 1379, column: 23, scope: !8003)
!8011 = !DILocation(line: 1379, column: 3, scope: !8003)
!8012 = !DILocation(line: 1380, column: 1, scope: !8003)
!8013 = distinct !DISubprogram(name: "gimple_use_ops", scope: !568, file: !568, line: 1313, type: !8014, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8016)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!1357, !2851}
!8016 = !{!8017}
!8017 = !DILocalVariable(name: "g", arg: 1, scope: !8013, file: !568, line: 1313, type: !2851)
!8018 = !DILocation(line: 0, scope: !8013)
!8019 = !DILocation(line: 1315, column: 8, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8013, file: !568, line: 1315, column: 7)
!8021 = !DILocation(line: 1315, column: 7, scope: !8013)
!8022 = !DILocation(line: 1317, column: 26, scope: !8013)
!8023 = !DILocation(line: 1317, column: 3, scope: !8013)
!8024 = !DILocation(line: 1318, column: 1, scope: !8013)
!8025 = distinct !DISubprogram(name: "gimple_vuse", scope: !568, file: !568, line: 1365, type: !4023, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8026)
!8026 = !{!8027}
!8027 = !DILocalVariable(name: "g", arg: 1, scope: !8025, file: !568, line: 1365, type: !2851)
!8028 = !DILocation(line: 0, scope: !8025)
!8029 = !DILocation(line: 1367, column: 8, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8025, file: !568, line: 1367, column: 7)
!8031 = !DILocation(line: 1367, column: 7, scope: !8025)
!8032 = !DILocation(line: 1369, column: 23, scope: !8025)
!8033 = !DILocation(line: 1369, column: 3, scope: !8025)
!8034 = !DILocation(line: 1370, column: 1, scope: !8025)
!8035 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !568, file: !568, line: 1283, type: !3300, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8036)
!8036 = !{!8037}
!8037 = !DILocalVariable(name: "g", arg: 1, scope: !8035, file: !568, line: 1283, type: !2851)
!8038 = !DILocation(line: 0, scope: !8035)
!8039 = !DILocation(line: 1285, column: 10, scope: !8035)
!8040 = !DILocation(line: 1285, column: 26, scope: !8035)
!8041 = !DILocation(line: 1285, column: 43, scope: !8035)
!8042 = !DILocation(line: 1285, column: 46, scope: !8035)
!8043 = !DILocation(line: 1285, column: 62, scope: !8035)
!8044 = !DILocation(line: 1285, column: 3, scope: !8035)
!8045 = distinct !DISubprogram(name: "link_imm_use", scope: !6744, file: !6744, line: 214, type: !8046, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8048)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{null, !2143, !847}
!8048 = !{!8049, !8050, !8051}
!8049 = !DILocalVariable(name: "linknode", arg: 1, scope: !8045, file: !6744, line: 214, type: !2143)
!8050 = !DILocalVariable(name: "def", arg: 2, scope: !8045, file: !6744, line: 214, type: !847)
!8051 = !DILocalVariable(name: "root", scope: !8045, file: !6744, line: 216, type: !2143)
!8052 = !DILocation(line: 0, scope: !8045)
!8053 = !DILocation(line: 218, column: 8, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8045, file: !6744, line: 218, column: 7)
!8055 = !DILocation(line: 218, column: 12, scope: !8054)
!8056 = !DILocation(line: 218, column: 15, scope: !8054)
!8057 = !DILocation(line: 218, column: 31, scope: !8054)
!8058 = !DILocation(line: 218, column: 7, scope: !8045)
!8059 = !DILocation(line: 219, column: 15, scope: !8054)
!8060 = !DILocation(line: 219, column: 20, scope: !8054)
!8061 = !DILocation(line: 219, column: 5, scope: !8054)
!8062 = !DILocation(line: 222, column: 16, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8054, file: !6744, line: 221, column: 5)
!8064 = !DILocation(line: 227, column: 7, scope: !8063)
!8065 = !DILocation(line: 229, column: 1, scope: !8045)
!8066 = distinct !DISubprogram(name: "cleanup_empty_eh", scope: !3, file: !3, line: 3692, type: !7282, scopeLine: 3693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8067)
!8067 = !{!8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8085, !8092}
!8068 = !DILocalVariable(name: "lp", arg: 1, scope: !8066, file: !3, line: 3692, type: !1180)
!8069 = !DILocalVariable(name: "bb", scope: !8066, file: !3, line: 3694, type: !1270)
!8070 = !DILocalVariable(name: "gsi", scope: !8066, file: !3, line: 3695, type: !3873)
!8071 = !DILocalVariable(name: "resx", scope: !8066, file: !3, line: 3696, type: !665)
!8072 = !DILocalVariable(name: "new_region", scope: !8066, file: !3, line: 3697, type: !1106)
!8073 = !DILocalVariable(name: "ei", scope: !8066, file: !3, line: 3698, type: !2911)
!8074 = !DILocalVariable(name: "e", scope: !8066, file: !3, line: 3699, type: !706)
!8075 = !DILocalVariable(name: "e_out", scope: !8066, file: !3, line: 3699, type: !706)
!8076 = !DILocalVariable(name: "has_non_eh_pred", scope: !8066, file: !3, line: 3700, type: !653)
!8077 = !DILocalVariable(name: "new_lp_nr", scope: !8066, file: !3, line: 3701, type: !654)
!8078 = !DILocalVariable(name: "stmt", scope: !8079, file: !3, line: 3752, type: !665)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 3751, column: 4)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 3750, column: 6)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3749, column: 7)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 3749, column: 7)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 3747, column: 5)
!8084 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3746, column: 7)
!8085 = !DILocalVariable(name: "stmt", scope: !8086, file: !3, line: 3768, type: !665)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 3767, column: 4)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 3766, column: 6)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 3765, column: 7)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 3765, column: 7)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 3764, column: 5)
!8091 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3763, column: 7)
!8092 = !DILabel(scope: !8066, name: "succeed", file: !3, line: 3806)
!8093 = !DILocation(line: 0, scope: !8066)
!8094 = !DILocation(line: 3694, column: 20, scope: !8066)
!8095 = !DILocation(line: 3695, column: 3, scope: !8066)
!8096 = !DILocation(line: 3698, column: 3, scope: !8066)
!8097 = !DILocation(line: 3699, column: 3, scope: !8066)
!8098 = !DILocation(line: 3704, column: 11, scope: !8066)
!8099 = !DILocation(line: 3704, column: 3, scope: !8066)
!8100 = !DILocation(line: 3710, column: 15, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3705, column: 5)
!8102 = !DILocation(line: 3711, column: 7, scope: !8101)
!8103 = !DILocation(line: 0, scope: !8101)
!8104 = !DILocation(line: 3715, column: 9, scope: !8066)
!8105 = !DILocation(line: 3718, column: 8, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3718, column: 7)
!8107 = !DILocation(line: 3718, column: 24, scope: !8106)
!8108 = !DILocation(line: 3718, column: 44, scope: !8106)
!8109 = !DILocation(line: 3718, column: 27, scope: !8106)
!8110 = !DILocation(line: 3718, column: 7, scope: !8066)
!8111 = !DILocation(line: 3719, column: 5, scope: !8106)
!8112 = !DILocation(line: 3722, column: 7, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3722, column: 7)
!8114 = !DILocation(line: 3722, column: 7, scope: !8066)
!8115 = !DILocation(line: 3723, column: 12, scope: !8113)
!8116 = !DILocation(line: 3723, column: 5, scope: !8113)
!8117 = !DILocation(line: 3726, column: 10, scope: !8066)
!8118 = !DILocation(line: 3727, column: 8, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3727, column: 7)
!8120 = !DILocation(line: 3727, column: 7, scope: !8066)
!8121 = !DILocation(line: 3729, column: 3, scope: !8066)
!8122 = !DILocation(line: 3733, column: 3, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3733, column: 3)
!8124 = !DILocation(line: 0, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 3733, column: 3)
!8126 = !DILocation(line: 3732, column: 19, scope: !8066)
!8127 = !DILocation(line: 3733, column: 3, scope: !8125)
!8128 = !DILocation(line: 3734, column: 11, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 3734, column: 9)
!8130 = !DILocation(line: 3734, column: 14, scope: !8129)
!8131 = !DILocation(line: 3734, column: 20, scope: !8129)
!8132 = !DILocation(line: 3734, column: 9, scope: !8125)
!8133 = distinct !{!8133, !8122, !8134}
!8134 = !DILocation(line: 3735, column: 25, scope: !8123)
!8135 = !DILocation(line: 3739, column: 15, scope: !8066)
!8136 = !DILocation(line: 3740, column: 16, scope: !8066)
!8137 = !DILocation(line: 3746, column: 18, scope: !8084)
!8138 = !DILocation(line: 3746, column: 7, scope: !8066)
!8139 = !DILocation(line: 3748, column: 7, scope: !8083)
!8140 = !DILocation(line: 3749, column: 17, scope: !8082)
!8141 = !DILocation(line: 3749, column: 12, scope: !8082)
!8142 = !DILocation(line: 3749, column: 44, scope: !8081)
!8143 = !DILocation(line: 3749, column: 42, scope: !8081)
!8144 = !DILocation(line: 3749, column: 7, scope: !8082)
!8145 = !DILocation(line: 3750, column: 9, scope: !8080)
!8146 = !DILocation(line: 3750, column: 15, scope: !8080)
!8147 = !DILocation(line: 3750, column: 6, scope: !8081)
!8148 = !DILocation(line: 3752, column: 34, scope: !8079)
!8149 = !DILocation(line: 3752, column: 20, scope: !8079)
!8150 = !DILocation(line: 0, scope: !8079)
!8151 = !DILocation(line: 3753, column: 6, scope: !8079)
!8152 = !DILocation(line: 3754, column: 19, scope: !8079)
!8153 = !DILocation(line: 3754, column: 6, scope: !8079)
!8154 = !DILocation(line: 3755, column: 4, scope: !8079)
!8155 = !DILocation(line: 3757, column: 4, scope: !8080)
!8156 = !DILocation(line: 3749, column: 7, scope: !8081)
!8157 = distinct !{!8157, !8144, !8158}
!8158 = !DILocation(line: 3757, column: 16, scope: !8082)
!8159 = !DILocation(line: 3763, column: 19, scope: !8091)
!8160 = !DILocation(line: 3763, column: 24, scope: !8091)
!8161 = !DILocation(line: 3763, column: 7, scope: !8066)
!8162 = !DILocation(line: 3765, column: 17, scope: !8089)
!8163 = !DILocation(line: 3765, column: 12, scope: !8089)
!8164 = !DILocation(line: 3765, column: 44, scope: !8088)
!8165 = !DILocation(line: 3765, column: 42, scope: !8088)
!8166 = !DILocation(line: 3765, column: 7, scope: !8089)
!8167 = !DILocation(line: 3766, column: 9, scope: !8087)
!8168 = !DILocation(line: 3766, column: 15, scope: !8087)
!8169 = !DILocation(line: 3766, column: 6, scope: !8088)
!8170 = !DILocation(line: 3768, column: 34, scope: !8086)
!8171 = !DILocation(line: 3768, column: 20, scope: !8086)
!8172 = !DILocation(line: 0, scope: !8086)
!8173 = !DILocation(line: 3769, column: 6, scope: !8086)
!8174 = !DILocation(line: 3770, column: 6, scope: !8086)
!8175 = !DILocation(line: 3771, column: 19, scope: !8086)
!8176 = !DILocation(line: 3771, column: 6, scope: !8086)
!8177 = !DILocation(line: 3772, column: 4, scope: !8086)
!8178 = !DILocation(line: 3774, column: 4, scope: !8087)
!8179 = !DILocation(line: 3765, column: 7, scope: !8088)
!8180 = distinct !{!8180, !8166, !8181}
!8181 = !DILocation(line: 3774, column: 16, scope: !8089)
!8182 = !DILocation(line: 3782, column: 43, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3782, column: 7)
!8184 = !DILocation(line: 3782, column: 7, scope: !8183)
!8185 = !DILocation(line: 3782, column: 7, scope: !8066)
!8186 = !DILocation(line: 3792, column: 8, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3792, column: 7)
!8188 = !DILocation(line: 3792, column: 7, scope: !8066)
!8189 = !DILocation(line: 3794, column: 7, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 3793, column: 5)
!8191 = !DILocation(line: 3795, column: 11, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 3795, column: 11)
!8193 = !DILocation(line: 3795, column: 21, scope: !8192)
!8194 = !DILocation(line: 3795, column: 25, scope: !8192)
!8195 = !DILocation(line: 3795, column: 36, scope: !8192)
!8196 = !DILocation(line: 3795, column: 11, scope: !8190)
!8197 = !DILocation(line: 3797, column: 8, scope: !8192)
!8198 = !DILocation(line: 3797, column: 27, scope: !8192)
!8199 = !DILocation(line: 3796, column: 2, scope: !8192)
!8200 = !DILocation(line: 3807, column: 7, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 3807, column: 7)
!8202 = !DILocation(line: 3806, column: 2, scope: !8066)
!8203 = !DILocation(line: 3807, column: 17, scope: !8201)
!8204 = !DILocation(line: 3807, column: 21, scope: !8201)
!8205 = !DILocation(line: 3807, column: 32, scope: !8201)
!8206 = !DILocation(line: 3807, column: 7, scope: !8066)
!8207 = !DILocation(line: 3808, column: 63, scope: !8201)
!8208 = !DILocation(line: 3808, column: 5, scope: !8201)
!8209 = !DILocation(line: 3809, column: 3, scope: !8066)
!8210 = !DILocation(line: 3810, column: 3, scope: !8066)
!8211 = !DILocation(line: 3811, column: 1, scope: !8066)
!8212 = distinct !DISubprogram(name: "cleanup_empty_eh_unsplit", scope: !3, file: !3, line: 3646, type: !8213, scopeLine: 3647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8215)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{!653, !1270, !706, !1180}
!8215 = !{!8216, !8217, !8218, !8219, !8220, !8221, !8225}
!8216 = !DILocalVariable(name: "bb", arg: 1, scope: !8212, file: !3, line: 3646, type: !1270)
!8217 = !DILocalVariable(name: "e_out", arg: 2, scope: !8212, file: !3, line: 3646, type: !706)
!8218 = !DILocalVariable(name: "lp", arg: 3, scope: !8212, file: !3, line: 3646, type: !1180)
!8219 = !DILocalVariable(name: "gsi", scope: !8212, file: !3, line: 3648, type: !3873)
!8220 = !DILocalVariable(name: "lab", scope: !8212, file: !3, line: 3649, type: !847)
!8221 = !DILocalVariable(name: "stmt", scope: !8222, file: !3, line: 3661, type: !665)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3660, column: 5)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 3659, column: 3)
!8224 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3659, column: 3)
!8225 = !DILocalVariable(name: "lp_nr", scope: !8222, file: !3, line: 3662, type: !654)
!8226 = !DILocation(line: 0, scope: !8212)
!8227 = !DILocation(line: 3648, column: 3, scope: !8212)
!8228 = !DILocation(line: 3654, column: 3, scope: !8212)
!8229 = !DILocation(line: 3659, column: 14, scope: !8224)
!8230 = !DILocation(line: 3659, column: 35, scope: !8224)
!8231 = !DILocation(line: 0, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 3668, column: 11)
!8233 = !DILocation(line: 3659, column: 8, scope: !8224)
!8234 = !DILocation(line: 3659, column: 43, scope: !8223)
!8235 = !DILocation(line: 3659, column: 42, scope: !8223)
!8236 = !DILocation(line: 3659, column: 3, scope: !8224)
!8237 = !DILocation(line: 3661, column: 21, scope: !8222)
!8238 = !DILocation(line: 0, scope: !8222)
!8239 = !DILocation(line: 3664, column: 11, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 3664, column: 11)
!8241 = !DILocation(line: 3664, column: 30, scope: !8240)
!8242 = !DILocation(line: 3664, column: 11, scope: !8222)
!8243 = !DILocation(line: 3666, column: 13, scope: !8222)
!8244 = !DILocation(line: 3667, column: 15, scope: !8222)
!8245 = !DILocation(line: 3668, column: 11, scope: !8232)
!8246 = !DILocation(line: 3668, column: 17, scope: !8232)
!8247 = !DILocation(line: 3668, column: 20, scope: !8232)
!8248 = !DILocation(line: 3668, column: 64, scope: !8232)
!8249 = !DILocation(line: 3668, column: 57, scope: !8232)
!8250 = !DILocation(line: 3668, column: 11, scope: !8222)
!8251 = !DILocation(line: 3670, column: 5, scope: !8223)
!8252 = !DILocation(line: 3659, column: 60, scope: !8223)
!8253 = !DILocation(line: 3659, column: 3, scope: !8223)
!8254 = distinct !{!8254, !8236, !8255}
!8255 = !DILocation(line: 3670, column: 5, scope: !8224)
!8256 = !DILocation(line: 3673, column: 43, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 3673, column: 7)
!8258 = !DILocation(line: 3673, column: 7, scope: !8257)
!8259 = !DILocation(line: 3673, column: 7, scope: !8212)
!8260 = !DILocation(line: 3675, column: 11, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 3675, column: 11)
!8262 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 3674, column: 5)
!8263 = !DILocation(line: 3675, column: 21, scope: !8261)
!8264 = !DILocation(line: 3675, column: 25, scope: !8261)
!8265 = !DILocation(line: 3675, column: 36, scope: !8261)
!8266 = !DILocation(line: 3675, column: 11, scope: !8262)
!8267 = !DILocation(line: 3679, column: 8, scope: !8261)
!8268 = !DILocation(line: 3679, column: 22, scope: !8261)
!8269 = !DILocation(line: 3679, column: 28, scope: !8261)
!8270 = !DILocation(line: 3676, column: 2, scope: !8261)
!8271 = !DILocation(line: 3684, column: 1, scope: !8212)
!8272 = distinct !DISubprogram(name: "ei_safe_edge", scope: !369, file: !369, line: 761, type: !8273, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8275)
!8273 = !DISubroutineType(types: !8274)
!8274 = !{!706, !2911}
!8275 = !{!8276}
!8276 = !DILocalVariable(name: "i", arg: 1, scope: !8272, file: !369, line: 761, type: !2911)
!8277 = !DILocation(line: 763, column: 11, scope: !8272)
!8278 = !DILocation(line: 763, column: 10, scope: !8272)
!8279 = !DILocation(line: 763, column: 26, scope: !8272)
!8280 = !DILocation(line: 763, column: 3, scope: !8272)
!8281 = distinct !DISubprogram(name: "cleanup_empty_eh_merge_phis", scope: !3, file: !3, line: 3493, type: !8282, scopeLine: 3495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8284)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!653, !1270, !1270, !706, !653}
!8284 = !{!8285, !8286, !8287, !8288, !8289, !8290, !8291, !8292, !8293, !8294, !8295, !8299, !8300, !8301, !8302, !8308, !8309, !8312, !8316, !8317, !8323, !8324}
!8285 = !DILocalVariable(name: "new_bb", arg: 1, scope: !8281, file: !3, line: 3493, type: !1270)
!8286 = !DILocalVariable(name: "old_bb", arg: 2, scope: !8281, file: !3, line: 3493, type: !1270)
!8287 = !DILocalVariable(name: "old_bb_out", arg: 3, scope: !8281, file: !3, line: 3494, type: !706)
!8288 = !DILocalVariable(name: "change_region", arg: 4, scope: !8281, file: !3, line: 3494, type: !653)
!8289 = !DILocalVariable(name: "ngsi", scope: !8281, file: !3, line: 3496, type: !3873)
!8290 = !DILocalVariable(name: "ogsi", scope: !8281, file: !3, line: 3496, type: !3873)
!8291 = !DILocalVariable(name: "ei", scope: !8281, file: !3, line: 3497, type: !2911)
!8292 = !DILocalVariable(name: "e", scope: !8281, file: !3, line: 3498, type: !706)
!8293 = !DILocalVariable(name: "rename_virts", scope: !8281, file: !3, line: 3499, type: !1328)
!8294 = !DILocalVariable(name: "ophi_handled", scope: !8281, file: !3, line: 3500, type: !1328)
!8295 = !DILocalVariable(name: "ophi", scope: !8296, file: !3, line: 3512, type: !665)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 3511, column: 5)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 3510, column: 3)
!8298 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 3510, column: 3)
!8299 = !DILocalVariable(name: "nphi", scope: !8296, file: !3, line: 3512, type: !665)
!8300 = !DILocalVariable(name: "nresult", scope: !8296, file: !3, line: 3513, type: !847)
!8301 = !DILocalVariable(name: "nop", scope: !8296, file: !3, line: 3513, type: !847)
!8302 = !DILocalVariable(name: "oloc", scope: !8303, file: !3, line: 3535, type: !684)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3534, column: 6)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 3533, column: 4)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 3533, column: 4)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 3531, column: 2)
!8307 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 3530, column: 11)
!8308 = !DILocalVariable(name: "oop", scope: !8303, file: !3, line: 3536, type: !847)
!8309 = !DILocalVariable(name: "nloc", scope: !8310, file: !3, line: 3555, type: !684)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 3554, column: 2)
!8311 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 3547, column: 16)
!8312 = !DILocalVariable(name: "ophi", scope: !8313, file: !3, line: 3566, type: !665)
!8313 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 3565, column: 5)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 3564, column: 3)
!8315 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 3564, column: 3)
!8316 = !DILocalVariable(name: "oresult", scope: !8313, file: !3, line: 3567, type: !847)
!8317 = !DILocalVariable(name: "nphi", scope: !8318, file: !3, line: 3578, type: !665)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 3577, column: 2)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !3, line: 3576, column: 7)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 3576, column: 7)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 3575, column: 5)
!8322 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 3574, column: 7)
!8323 = !DILocalVariable(name: "nresult", scope: !8318, file: !3, line: 3579, type: !847)
!8324 = !DILabel(scope: !8281, name: "fail", file: !3, line: 3605)
!8325 = !DILocation(line: 0, scope: !8281)
!8326 = !DILocation(line: 3496, column: 3, scope: !8281)
!8327 = !DILocation(line: 3497, column: 3, scope: !8281)
!8328 = !DILocation(line: 3498, column: 3, scope: !8281)
!8329 = !DILocation(line: 3502, column: 3, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 3502, column: 3)
!8331 = !DILocation(line: 0, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 3502, column: 3)
!8333 = !DILocation(line: 3502, column: 3, scope: !8332)
!8334 = !DILocation(line: 3503, column: 34, scope: !8332)
!8335 = !DILocation(line: 3503, column: 5, scope: !8332)
!8336 = distinct !{!8336, !8329, !8337}
!8337 = !DILocation(line: 3503, column: 35, scope: !8330)
!8338 = !DILocation(line: 3505, column: 18, scope: !8281)
!8339 = !DILocation(line: 3506, column: 18, scope: !8281)
!8340 = !DILocation(line: 3510, column: 15, scope: !8298)
!8341 = !DILocation(line: 0, scope: !8296)
!8342 = !DILocation(line: 0, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 3521, column: 7)
!8344 = !DILocation(line: 0, scope: !8305)
!8345 = !DILocation(line: 0, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 3557, column: 4)
!8347 = !DILocation(line: 3510, column: 8, scope: !8298)
!8348 = !DILocation(line: 3510, column: 41, scope: !8297)
!8349 = !DILocation(line: 3510, column: 40, scope: !8297)
!8350 = !DILocation(line: 3510, column: 3, scope: !8298)
!8351 = !DILocation(line: 3512, column: 27, scope: !8296)
!8352 = !DILocation(line: 3515, column: 17, scope: !8296)
!8353 = !DILocation(line: 3516, column: 51, scope: !8296)
!8354 = !DILocation(line: 3516, column: 39, scope: !8296)
!8355 = !DILocation(line: 3516, column: 13, scope: !8296)
!8356 = !DILocation(line: 3521, column: 19, scope: !8343)
!8357 = !DILocation(line: 3521, column: 12, scope: !8343)
!8358 = !DILocation(line: 3521, column: 45, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 3521, column: 7)
!8360 = !DILocation(line: 3521, column: 44, scope: !8359)
!8361 = !DILocation(line: 3521, column: 7, scope: !8343)
!8362 = !DILocation(line: 3523, column: 11, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 3522, column: 2)
!8364 = !DILocation(line: 3524, column: 8, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 3524, column: 8)
!8366 = !DILocation(line: 3524, column: 33, scope: !8365)
!8367 = !DILocation(line: 3524, column: 8, scope: !8363)
!8368 = !DILocation(line: 3521, column: 63, scope: !8359)
!8369 = !DILocation(line: 3521, column: 7, scope: !8359)
!8370 = distinct !{!8370, !8361, !8371}
!8371 = !DILocation(line: 3527, column: 2, scope: !8343)
!8372 = !DILocation(line: 3530, column: 11, scope: !8307)
!8373 = !DILocation(line: 3530, column: 11, scope: !8296)
!8374 = !DILocation(line: 3532, column: 34, scope: !8306)
!8375 = !DILocation(line: 3532, column: 4, scope: !8306)
!8376 = !DILocation(line: 3533, column: 4, scope: !8305)
!8377 = !DILocation(line: 3533, column: 4, scope: !8304)
!8378 = !DILocation(line: 3538, column: 13, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 3538, column: 12)
!8380 = !DILocation(line: 3538, column: 16, scope: !8379)
!8381 = !DILocation(line: 3538, column: 22, scope: !8379)
!8382 = !DILocation(line: 3538, column: 33, scope: !8379)
!8383 = !DILocation(line: 3538, column: 12, scope: !8303)
!8384 = !DILocation(line: 3540, column: 43, scope: !8303)
!8385 = !DILocation(line: 3540, column: 40, scope: !8303)
!8386 = !DILocation(line: 3540, column: 14, scope: !8303)
!8387 = !DILocation(line: 0, scope: !8303)
!8388 = !DILocation(line: 3541, column: 46, scope: !8303)
!8389 = !DILocation(line: 3541, column: 49, scope: !8303)
!8390 = !DILocation(line: 3541, column: 15, scope: !8303)
!8391 = !DILocation(line: 3542, column: 35, scope: !8303)
!8392 = !DILocation(line: 3542, column: 8, scope: !8303)
!8393 = !DILocation(line: 3543, column: 6, scope: !8304)
!8394 = distinct !{!8394, !8376, !8395}
!8395 = !DILocation(line: 3543, column: 6, scope: !8305)
!8396 = !DILocation(line: 3547, column: 17, scope: !8311)
!8397 = !DILocation(line: 3547, column: 16, scope: !8307)
!8398 = !DILocation(line: 3548, column: 32, scope: !8311)
!8399 = !DILocation(line: 3548, column: 2, scope: !8311)
!8400 = !DILocation(line: 3556, column: 51, scope: !8310)
!8401 = !DILocation(line: 3556, column: 39, scope: !8310)
!8402 = !DILocation(line: 3556, column: 8, scope: !8310)
!8403 = !DILocation(line: 0, scope: !8310)
!8404 = !DILocation(line: 3557, column: 4, scope: !8346)
!8405 = !DILocation(line: 3557, column: 4, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 3557, column: 4)
!8407 = !DILocation(line: 3558, column: 33, scope: !8406)
!8408 = !DILocation(line: 3558, column: 6, scope: !8406)
!8409 = distinct !{!8409, !8404, !8410}
!8410 = !DILocation(line: 3558, column: 54, scope: !8346)
!8411 = !DILocation(line: 3510, column: 59, scope: !8297)
!8412 = !DILocation(line: 3510, column: 3, scope: !8297)
!8413 = distinct !{!8413, !8350, !8414}
!8414 = !DILocation(line: 3560, column: 5, scope: !8298)
!8415 = !DILocation(line: 3564, column: 15, scope: !8315)
!8416 = !DILocation(line: 3564, column: 8, scope: !8315)
!8417 = !DILocation(line: 3564, column: 41, scope: !8314)
!8418 = !DILocation(line: 3564, column: 40, scope: !8314)
!8419 = !DILocation(line: 3564, column: 3, scope: !8315)
!8420 = !DILocation(line: 3566, column: 21, scope: !8313)
!8421 = !DILocation(line: 0, scope: !8313)
!8422 = !DILocation(line: 3567, column: 22, scope: !8313)
!8423 = !DILocation(line: 3568, column: 40, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 3568, column: 11)
!8425 = !DILocation(line: 3568, column: 12, scope: !8424)
!8426 = !DILocation(line: 3564, column: 59, scope: !8314)
!8427 = !DILocation(line: 3564, column: 3, scope: !8314)
!8428 = distinct !{!8428, !8419, !8429}
!8429 = !DILocation(line: 3570, column: 5, scope: !8315)
!8430 = !DILocation(line: 3574, column: 8, scope: !8322)
!8431 = !DILocation(line: 3574, column: 7, scope: !8281)
!8432 = !DILocation(line: 3576, column: 19, scope: !8320)
!8433 = !DILocation(line: 3576, column: 12, scope: !8320)
!8434 = !DILocation(line: 3576, column: 45, scope: !8319)
!8435 = !DILocation(line: 3576, column: 44, scope: !8319)
!8436 = !DILocation(line: 3576, column: 7, scope: !8320)
!8437 = !DILocation(line: 3578, column: 18, scope: !8318)
!8438 = !DILocation(line: 0, scope: !8318)
!8439 = !DILocation(line: 3579, column: 19, scope: !8318)
!8440 = !DILocation(line: 3580, column: 36, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 3580, column: 8)
!8442 = !DILocation(line: 3580, column: 8, scope: !8441)
!8443 = !DILocation(line: 3580, column: 8, scope: !8318)
!8444 = !DILocation(line: 3582, column: 8, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 3581, column: 6)
!8446 = !DILocation(line: 3583, column: 8, scope: !8445)
!8447 = !DILocation(line: 3584, column: 6, scope: !8445)
!8448 = !DILocation(line: 3586, column: 6, scope: !8441)
!8449 = !DILocation(line: 3576, column: 7, scope: !8319)
!8450 = distinct !{!8450, !8436, !8451}
!8451 = !DILocation(line: 3587, column: 2, scope: !8320)
!8452 = !DILocation(line: 3591, column: 13, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 3591, column: 3)
!8454 = !DILocation(line: 3591, column: 8, scope: !8453)
!8455 = !DILocation(line: 3591, column: 44, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 3591, column: 3)
!8457 = !DILocation(line: 3591, column: 42, scope: !8456)
!8458 = !DILocation(line: 3591, column: 3, scope: !8453)
!8459 = !DILocation(line: 3592, column: 12, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 3592, column: 9)
!8461 = !DILocation(line: 3592, column: 18, scope: !8460)
!8462 = !DILocation(line: 3592, column: 9, scope: !8456)
!8463 = !DILocation(line: 3594, column: 2, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 3593, column: 7)
!8465 = !DILocation(line: 3595, column: 22, scope: !8464)
!8466 = !DILocation(line: 3595, column: 2, scope: !8464)
!8467 = !DILocation(line: 3596, column: 23, scope: !8464)
!8468 = !DILocation(line: 3596, column: 2, scope: !8464)
!8469 = !DILocation(line: 3597, column: 7, scope: !8464)
!8470 = !DILocation(line: 3599, column: 7, scope: !8460)
!8471 = !DILocation(line: 3591, column: 3, scope: !8456)
!8472 = distinct !{!8472, !8458, !8473}
!8473 = !DILocation(line: 3599, column: 19, scope: !8453)
!8474 = !DILocation(line: 3601, column: 3, scope: !8281)
!8475 = !DILocation(line: 3602, column: 3, scope: !8281)
!8476 = !DILocation(line: 3603, column: 3, scope: !8281)
!8477 = !DILocation(line: 3605, column: 2, scope: !8281)
!8478 = !DILocation(line: 3606, column: 3, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 3606, column: 3)
!8480 = !DILocation(line: 3606, column: 3, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 3606, column: 3)
!8482 = !DILocation(line: 3607, column: 34, scope: !8481)
!8483 = !DILocation(line: 3607, column: 5, scope: !8481)
!8484 = distinct !{!8484, !8478, !8485}
!8485 = !DILocation(line: 3607, column: 35, scope: !8479)
!8486 = !DILocation(line: 3608, column: 3, scope: !8281)
!8487 = !DILocation(line: 3609, column: 3, scope: !8281)
!8488 = !DILocation(line: 3610, column: 3, scope: !8281)
!8489 = !DILocation(line: 3611, column: 1, scope: !8281)
!8490 = distinct !DISubprogram(name: "cleanup_empty_eh_move_lp", scope: !3, file: !3, line: 3617, type: !8491, scopeLine: 3619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8493)
!8491 = !DISubroutineType(types: !8492)
!8492 = !{null, !1270, !706, !1180, !1106}
!8493 = !{!8494, !8495, !8496, !8497, !8498, !8499}
!8494 = !DILocalVariable(name: "bb", arg: 1, scope: !8490, file: !3, line: 3617, type: !1270)
!8495 = !DILocalVariable(name: "e_out", arg: 2, scope: !8490, file: !3, line: 3617, type: !706)
!8496 = !DILocalVariable(name: "lp", arg: 3, scope: !8490, file: !3, line: 3618, type: !1180)
!8497 = !DILocalVariable(name: "new_region", arg: 4, scope: !8490, file: !3, line: 3618, type: !1106)
!8498 = !DILocalVariable(name: "gsi", scope: !8490, file: !3, line: 3620, type: !3873)
!8499 = !DILocalVariable(name: "pp", scope: !8490, file: !3, line: 3621, type: !7267)
!8500 = !DILocation(line: 0, scope: !8490)
!8501 = !DILocation(line: 3620, column: 3, scope: !8490)
!8502 = !DILocation(line: 3623, column: 18, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 3623, column: 3)
!8504 = !DILocation(line: 3623, column: 26, scope: !8503)
!8505 = !DILocation(line: 3623, column: 8, scope: !8503)
!8506 = !DILocation(line: 0, scope: !8503)
!8507 = !DILocation(line: 3623, column: 40, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 3623, column: 3)
!8509 = !DILocation(line: 3623, column: 44, scope: !8508)
!8510 = !DILocation(line: 3623, column: 3, scope: !8503)
!8511 = !DILocation(line: 3623, column: 64, scope: !8508)
!8512 = !DILocation(line: 3623, column: 3, scope: !8508)
!8513 = distinct !{!8513, !8510, !8514}
!8514 = !DILocation(line: 3624, column: 5, scope: !8503)
!8515 = !DILocation(line: 3625, column: 13, scope: !8490)
!8516 = !DILocation(line: 3625, column: 7, scope: !8490)
!8517 = !DILocation(line: 3627, column: 14, scope: !8490)
!8518 = !DILocation(line: 3628, column: 29, scope: !8490)
!8519 = !DILocation(line: 3628, column: 15, scope: !8490)
!8520 = !DILocation(line: 3629, column: 28, scope: !8490)
!8521 = !DILocation(line: 3632, column: 9, scope: !8490)
!8522 = !DILocation(line: 3633, column: 34, scope: !8490)
!8523 = !DILocation(line: 3633, column: 3, scope: !8490)
!8524 = !DILocation(line: 3634, column: 3, scope: !8490)
!8525 = !DILocation(line: 3637, column: 26, scope: !8490)
!8526 = !DILocation(line: 3637, column: 32, scope: !8490)
!8527 = !DILocation(line: 3637, column: 44, scope: !8490)
!8528 = !DILocation(line: 3637, column: 16, scope: !8490)
!8529 = !DILocation(line: 3638, column: 10, scope: !8490)
!8530 = !DILocation(line: 3638, column: 22, scope: !8490)
!8531 = !DILocation(line: 3639, column: 1, scope: !8490)
!8532 = distinct !DISubprogram(name: "ei_end_p", scope: !369, file: !369, line: 721, type: !8533, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8535)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!653, !2911}
!8535 = !{!8536}
!8536 = !DILocalVariable(name: "i", arg: 1, scope: !8532, file: !369, line: 721, type: !2911)
!8537 = !DILocation(line: 723, column: 22, scope: !8532)
!8538 = !DILocation(line: 723, column: 19, scope: !8532)
!8539 = !DILocation(line: 723, column: 10, scope: !8532)
!8540 = !DILocation(line: 723, column: 3, scope: !8532)
!8541 = distinct !DISubprogram(name: "ei_edge", scope: !369, file: !369, line: 752, type: !8273, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8542)
!8542 = !{!8543}
!8543 = !DILocalVariable(name: "i", arg: 1, scope: !8541, file: !369, line: 752, type: !2911)
!8544 = !DILocation(line: 754, column: 10, scope: !8541)
!8545 = !DILocation(line: 754, column: 3, scope: !8541)
!8546 = distinct !DISubprogram(name: "ei_container", scope: !369, file: !369, line: 685, type: !8547, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8549)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!694, !2911}
!8549 = !{!8550}
!8550 = !DILocalVariable(name: "i", arg: 1, scope: !8546, file: !369, line: 685, type: !2911)
!8551 = !DILocation(line: 687, column: 3, scope: !8546)
!8552 = !DILocation(line: 688, column: 10, scope: !8546)
!8553 = !DILocation(line: 688, column: 3, scope: !8546)
!8554 = distinct !DISubprogram(name: "gimple_phi_arg_location", scope: !6744, file: !6744, line: 475, type: !8555, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8557)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{!686, !665, !1208}
!8557 = !{!8558, !8559}
!8558 = !DILocalVariable(name: "gs", arg: 1, scope: !8554, file: !6744, line: 475, type: !665)
!8559 = !DILocalVariable(name: "i", arg: 2, scope: !8554, file: !6744, line: 475, type: !1208)
!8560 = !DILocation(line: 0, scope: !8554)
!8561 = !DILocation(line: 477, column: 30, scope: !8554)
!8562 = !DILocation(line: 477, column: 10, scope: !8554)
!8563 = !DILocation(line: 477, column: 34, scope: !8554)
!8564 = !DILocation(line: 477, column: 3, scope: !8554)
